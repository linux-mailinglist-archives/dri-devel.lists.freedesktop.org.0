Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 72E16DAA70
	for <lists+dri-devel@lfdr.de>; Thu, 17 Oct 2019 12:51:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EBFB56EA4C;
	Thu, 17 Oct 2019 10:51:00 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 305926EA48;
 Thu, 17 Oct 2019 10:50:59 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
 [10.5.11.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 5957A307C648;
 Thu, 17 Oct 2019 10:50:58 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-185.pek2.redhat.com [10.72.12.185])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 067AE5B681;
 Thu, 17 Oct 2019 10:50:33 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [PATCH V4 3/6] mdev: introduce device specific ops
Date: Thu, 17 Oct 2019 18:48:33 +0800
Message-Id: <20191017104836.32464-4-jasowang@redhat.com>
In-Reply-To: <20191017104836.32464-1-jasowang@redhat.com>
References: <20191017104836.32464-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.42]); Thu, 17 Oct 2019 10:50:58 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: christophe.de.dinechin@gmail.com, sebott@linux.ibm.com, airlied@linux.ie,
 Jason Wang <jasowang@redhat.com>, heiko.carstens@de.ibm.com,
 kevin.tian@intel.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, parav@mellanox.com,
 zhihong.wang@intel.com, stefanha@redhat.com, akrowiak@linux.ibm.com,
 netdev@vger.kernel.org, cohuck@redhat.com, oberpar@linux.ibm.com,
 maxime.coquelin@redhat.com, lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

Q3VycmVudGx5LCBleGNlcHQgZm9yIHRoZSBjcmVhdGUgYW5kIHJlbW92ZSwgdGhlIHJlc3Qgb2YK
bWRldl9wYXJlbnRfb3BzIGlzIGRlc2lnbmVkIGZvciB2ZmlvLW1kZXYgZHJpdmVyIG9ubHkgYW5k
IG1heSBub3QgaGVscApmb3Iga2VybmVsIG1kZXYgZHJpdmVyLiBXaXRoIHRoZSBoZWxwIG9mIGNs
YXNzIGlkLCB0aGlzIHBhdGNoCmludHJvZHVjZXMgZGV2aWNlIHNwZWNpZmljIGNhbGxiYWNrcyBp
bnNpZGUgbWRldl9kZXZpY2UKc3RydWN0dXJlLiBUaGlzIGFsbG93cyBkaWZmZXJlbnQgc2V0IG9m
IGNhbGxiYWNrIHRvIGJlIHVzZWQgYnkKdmZpby1tZGV2IGFuZCB2aXJ0aW8tbWRldi4KClNpZ25l
ZC1vZmYtYnk6IEphc29uIFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+Ci0tLQogLi4uL2RyaXZl
ci1hcGkvdmZpby1tZWRpYXRlZC1kZXZpY2UucnN0ICAgICAgIHwgMjUgKysrKystLS0tCiBNQUlO
VEFJTkVSUyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyAgICAgICAgICAgICAgfCAxOCArKysrLS0tCiBkcml2
ZXJzL3MzOTAvY2lvL3ZmaW9fY2N3X29wcy5jICAgICAgICAgICAgICAgfCAxOCArKysrLS0tCiBk
cml2ZXJzL3MzOTAvY3J5cHRvL3ZmaW9fYXBfb3BzLmMgICAgICAgICAgICAgfCAxNCArKystLQog
ZHJpdmVycy92ZmlvL21kZXYvbWRldl9jb3JlLmMgICAgICAgICAgICAgICAgIHwgMTggKysrKyst
LQogZHJpdmVycy92ZmlvL21kZXYvbWRldl9wcml2YXRlLmggICAgICAgICAgICAgIHwgIDEgKwog
ZHJpdmVycy92ZmlvL21kZXYvdmZpb19tZGV2LmMgICAgICAgICAgICAgICAgIHwgMzcgKysrKysr
LS0tLS0tLQogaW5jbHVkZS9saW51eC9tZGV2LmggICAgICAgICAgICAgICAgICAgICAgICAgIHwg
NDUgKysrKy0tLS0tLS0tLS0tLQogaW5jbHVkZS9saW51eC92ZmlvX21kZXYuaCAgICAgICAgICAg
ICAgICAgICAgIHwgNTIgKysrKysrKysrKysrKysrKysrKwogc2FtcGxlcy92ZmlvLW1kZXYvbWJv
Y2hzLmMgICAgICAgICAgICAgICAgICAgIHwgMjAgKysrKy0tLQogc2FtcGxlcy92ZmlvLW1kZXYv
bWRweS5jICAgICAgICAgICAgICAgICAgICAgIHwgMjAgKysrKy0tLQogc2FtcGxlcy92ZmlvLW1k
ZXYvbXR0eS5jICAgICAgICAgICAgICAgICAgICAgIHwgMTggKysrKy0tLQogMTMgZmlsZXMgY2hh
bmdlZCwgMTg0IGluc2VydGlvbnMoKyksIDEwMyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBpbmNsdWRlL2xpbnV4L3ZmaW9fbWRldi5oCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlv
bi9kcml2ZXItYXBpL3ZmaW8tbWVkaWF0ZWQtZGV2aWNlLnJzdCBiL0RvY3VtZW50YXRpb24vZHJp
dmVyLWFwaS92ZmlvLW1lZGlhdGVkLWRldmljZS5yc3QKaW5kZXggZjlhNzhkNzVhNjdhLi4wY2Nh
ODRkMTk2MDMgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS92ZmlvLW1lZGlh
dGVkLWRldmljZS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZmaW8tbWVkaWF0
ZWQtZGV2aWNlLnJzdApAQCAtMTUyLDExICsxNTIsMjIgQEAgY2FsbGJhY2tzIHBlciBtZGV2IHBh
cmVudCBkZXZpY2UsIHBlciBtZGV2IHR5cGUsIG9yIGFueSBvdGhlciBjYXRlZ29yaXphdGlvbi4K
IFZlbmRvciBkcml2ZXJzIGFyZSBleHBlY3RlZCB0byBiZSBmdWxseSBhc3luY2hyb25vdXMgaW4g
dGhpcyByZXNwZWN0IG9yCiBwcm92aWRlIHRoZWlyIG93biBpbnRlcm5hbCByZXNvdXJjZSBwcm90
ZWN0aW9uLikKIAotVGhlIGNhbGxiYWNrcyBpbiB0aGUgbWRldl9wYXJlbnRfb3BzIHN0cnVjdHVy
ZSBhcmUgYXMgZm9sbG93czoKLQotKiBvcGVuOiBvcGVuIGNhbGxiYWNrIG9mIG1lZGlhdGVkIGRl
dmljZQotKiBjbG9zZTogY2xvc2UgY2FsbGJhY2sgb2YgbWVkaWF0ZWQgZGV2aWNlCi0qIGlvY3Rs
OiBpb2N0bCBjYWxsYmFjayBvZiBtZWRpYXRlZCBkZXZpY2UKK0FzIG11bHRpcGxlIHR5cGVzIG9m
IG1lZGlhdGVkIGRldmljZXMgbWF5IGJlIHN1cHBvcnRlZCwgdGhlIGRldmljZQorbXVzdCBzZXQg
dXAgdGhlIGNsYXNzIGlkIGFuZCB0aGUgZGV2aWNlIHNwZWNpZmljIGNhbGxiYWNrcyBpbiBjcmVh
dGUoKQorY2FsbGJhY2suIEUuZyBmb3IgdmZpby1tZGV2IGRldmljZSBpdCBuZWVkcyB0byBiZSBk
b25lIHRocm91Z2g6CisKKyAgICBpbnQgbWRldl9zZXRfdmZpb19vcHMoc3RydWN0IG1kZXZfZGV2
aWNlICptZGV2LAorICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdHJ1Y3QgdmZpb19t
ZGV2X29wcyAqdmZpb19vcHMpOworCitUaGUgY2xhc3MgaWQgKHNldCB0byBNREVWX0NMQVNTX0lE
X1ZGSU8pIGlzIHVzZWQgdG8gbWF0Y2ggYSBkZXZpY2UKK3dpdGggYW4gbWRldiBkcml2ZXIgdmlh
IGl0cyBpZCB0YWJsZS4gVGhlIGRldmljZSBzcGVjaWZpYyBjYWxsYmFja3MKKyhzcGVjaWZpZWQg
aW4gKm9wcykgYXJlIG9idGFpbmFibGUgdmlhIG1kZXZfZ2V0X2Rldl9vcHMoKSAoZm9yIHVzZSBi
eQordGhlIG1kZXYgYnVzIGRyaXZlcikuIEEgdmZpby1tZGV2IGRldmljZSAoY2xhc3MgaWQgTURF
Vl9DTEFTU19JRF9WRklPKQordXNlcyB0aGUgZm9sbG93aW5nIGRldmljZS1zcGVjaWZpYyBvcHM6
CisKKyogb3Blbjogb3BlbiBjYWxsYmFjayBvZiB2ZmlvIG1lZGlhdGVkIGRldmljZQorKiBjbG9z
ZTogY2xvc2UgY2FsbGJhY2sgb2YgdmZpbyBtZWRpYXRlZCBkZXZpY2UKKyogaW9jdGw6IGlvY3Rs
IGNhbGxiYWNrIG9mIHZmaW8gbWVkaWF0ZWQgZGV2aWNlCiAqIHJlYWQgOiByZWFkIGVtdWxhdGlv
biBjYWxsYmFjawogKiB3cml0ZTogd3JpdGUgZW11bGF0aW9uIGNhbGxiYWNrCiAqIG1tYXA6IG1t
YXAgZW11bGF0aW9uIGNhbGxiYWNrCkBAIC0xNjcsMTAgKzE3OCw2IEBAIHJlZ2lzdGVyIGl0c2Vs
ZiB3aXRoIHRoZSBtZGV2IGNvcmUgZHJpdmVyOjoKIAlleHRlcm4gaW50ICBtZGV2X3JlZ2lzdGVy
X2RldmljZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgY29uc3Qgc3RydWN0IG1kZXZfcGFyZW50X29wcyAqb3BzKTsKIAotSXQgaXMgYWxzbyBy
ZXF1aXJlZCB0byBzcGVjaWZ5IHRoZSBjbGFzc19pZCBpbiBjcmVhdGUoKSBjYWxsYmFjayB0aHJv
dWdoOjoKLQotCWludCBtZGV2X3NldF9jbGFzcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUx
NiBpZCk7Ci0KIEhvd2V2ZXIsIHRoZSBtZGV2X3BhcmVudF9vcHMgc3RydWN0dXJlIGlzIG5vdCBy
ZXF1aXJlZCBpbiB0aGUgZnVuY3Rpb24gY2FsbAogdGhhdCBhIGRyaXZlciBzaG91bGQgdXNlIHRv
IHVucmVnaXN0ZXIgaXRzZWxmIHdpdGggdGhlIG1kZXYgY29yZSBkcml2ZXI6OgogCmRpZmYgLS1n
aXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTCmluZGV4IDg4MjRmNjFjZDJjMC4uM2QxOTZh
MDIzYjVlIDEwMDY0NAotLS0gYS9NQUlOVEFJTkVSUworKysgYi9NQUlOVEFJTkVSUwpAQCAtMTcx
MjcsNiArMTcxMjcsNyBAQCBTOglNYWludGFpbmVkCiBGOglEb2N1bWVudGF0aW9uL2RyaXZlci1h
cGkvdmZpby1tZWRpYXRlZC1kZXZpY2UucnN0CiBGOglkcml2ZXJzL3ZmaW8vbWRldi8KIEY6CWlu
Y2x1ZGUvbGludXgvbWRldi5oCitGOglpbmNsdWRlL2xpbnV4L3ZmaW9fbWRldi5oCiBGOglzYW1w
bGVzL3ZmaW8tbWRldi8KIAogVkZJTyBQTEFURk9STSBEUklWRVIKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2t2
bWd0LmMKaW5kZXggNjQyMGYwZGJkMzFiLi4zMDZmOTM0Yzc4NTcgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9rdm1ndC5jCkBAIC00Miw2ICs0Miw3IEBACiAjaW5jbHVkZSA8bGludXgva3ZtX2hvc3QuaD4K
ICNpbmNsdWRlIDxsaW51eC92ZmlvLmg+CiAjaW5jbHVkZSA8bGludXgvbWRldi5oPgorI2luY2x1
ZGUgPGxpbnV4L3ZmaW9fbWRldi5oPgogI2luY2x1ZGUgPGxpbnV4L2RlYnVnZnMuaD4KIAogI2lu
Y2x1ZGUgPGxpbnV4L25vc3BlYy5oPgpAQCAtNjQzLDYgKzY0NCw4IEBAIHN0YXRpYyB2b2lkIGt2
bWd0X3B1dF92ZmlvX2RldmljZSh2b2lkICp2Z3B1KQogCXZmaW9fZGV2aWNlX3B1dCgoKHN0cnVj
dCBpbnRlbF92Z3B1ICopdmdwdSktPnZkZXYudmZpb19kZXZpY2UpOwogfQogCitzdGF0aWMgY29u
c3Qgc3RydWN0IHZmaW9fbWRldl9kZXZpY2Vfb3BzIGludGVsX3ZmaW9fdmdwdV9kZXZfb3BzOwor
CiBzdGF0aWMgaW50IGludGVsX3ZncHVfY3JlYXRlKHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiB7CiAJc3RydWN0IGludGVsX3ZncHUgKnZncHUgPSBOVUxM
OwpAQCAtNjc4LDcgKzY4MSw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfdmdwdV9jcmVhdGUoc3RydWN0
IGtvYmplY3QgKmtvYmosIHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIAkJICAgICBkZXZfbmFt
ZShtZGV2X2RldihtZGV2KSkpOwogCXJldCA9IDA7CiAKLQltZGV2X3NldF9jbGFzcyhtZGV2LCBN
REVWX0NMQVNTX0lEX1ZGSU8pOworCW1kZXZfc2V0X3ZmaW9fb3BzKG1kZXYsICZpbnRlbF92Zmlv
X3ZncHVfZGV2X29wcyk7CiBvdXQ6CiAJcmV0dXJuIHJldDsKIH0KQEAgLTE1OTksMjAgKzE2MDIs
MjEgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgKmludGVsX3ZncHVfZ3Jv
dXBzW10gPSB7CiAJTlVMTCwKIH07CiAKLXN0YXRpYyBzdHJ1Y3QgbWRldl9wYXJlbnRfb3BzIGlu
dGVsX3ZncHVfb3BzID0gewotCS5tZGV2X2F0dHJfZ3JvdXBzICAgICAgID0gaW50ZWxfdmdwdV9n
cm91cHMsCi0JLmNyZWF0ZQkJCT0gaW50ZWxfdmdwdV9jcmVhdGUsCi0JLnJlbW92ZQkJCT0gaW50
ZWxfdmdwdV9yZW1vdmUsCi0KK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmZpb19tZGV2X2RldmljZV9v
cHMgaW50ZWxfdmZpb192Z3B1X2Rldl9vcHMgPSB7CiAJLm9wZW4JCQk9IGludGVsX3ZncHVfb3Bl
biwKIAkucmVsZWFzZQkJPSBpbnRlbF92Z3B1X3JlbGVhc2UsCi0KIAkucmVhZAkJCT0gaW50ZWxf
dmdwdV9yZWFkLAogCS53cml0ZQkJCT0gaW50ZWxfdmdwdV93cml0ZSwKIAkubW1hcAkJCT0gaW50
ZWxfdmdwdV9tbWFwLAogCS5pb2N0bAkJCT0gaW50ZWxfdmdwdV9pb2N0bCwKIH07CiAKK3N0YXRp
YyBzdHJ1Y3QgbWRldl9wYXJlbnRfb3BzIGludGVsX3ZncHVfb3BzID0geworCS5tZGV2X2F0dHJf
Z3JvdXBzICAgICAgID0gaW50ZWxfdmdwdV9ncm91cHMsCisJLmNyZWF0ZQkJCT0gaW50ZWxfdmdw
dV9jcmVhdGUsCisJLnJlbW92ZQkJCT0gaW50ZWxfdmdwdV9yZW1vdmUsCit9OworCiBzdGF0aWMg
aW50IGt2bWd0X2hvc3RfaW5pdChzdHJ1Y3QgZGV2aWNlICpkZXYsIHZvaWQgKmd2dCwgY29uc3Qg
dm9pZCAqb3BzKQogewogCXN0cnVjdCBhdHRyaWJ1dGUgKiprdm1fdHlwZV9hdHRyczsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvczM5MC9jaW8vdmZpb19jY3dfb3BzLmMgYi9kcml2ZXJzL3MzOTAvY2lv
L3ZmaW9fY2N3X29wcy5jCmluZGV4IGNmMmMwMTNhZTMyZi4uNmU2MDZjZGIxYWE5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL3MzOTAvY2lvL3ZmaW9fY2N3X29wcy5jCisrKyBiL2RyaXZlcnMvczM5MC9j
aW8vdmZpb19jY3dfb3BzLmMKQEAgLTEyLDYgKzEyLDcgQEAKIAogI2luY2x1ZGUgPGxpbnV4L3Zm
aW8uaD4KICNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvdmZpb19tZGV2
Lmg+CiAjaW5jbHVkZSA8bGludXgvbm9zcGVjLmg+CiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgog
CkBAIC0xMTAsNiArMTExLDggQEAgc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgKm1kZXZf
dHlwZV9ncm91cHNbXSA9IHsKIAlOVUxMLAogfTsKIAorc3RhdGljIGNvbnN0IHN0cnVjdCB2Zmlv
X21kZXZfZGV2aWNlX29wcyB2ZmlvX21kZXZfb3BzOworCiBzdGF0aWMgaW50IHZmaW9fY2N3X21k
ZXZfY3JlYXRlKHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYp
CiB7CiAJc3RydWN0IHZmaW9fY2N3X3ByaXZhdGUgKnByaXZhdGUgPQpAQCAtMTI5LDcgKzEzMiw3
IEBAIHN0YXRpYyBpbnQgdmZpb19jY3dfbWRldl9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmos
IHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIAkJCSAgIHByaXZhdGUtPnNjaC0+c2NoaWQuc3Np
ZCwKIAkJCSAgIHByaXZhdGUtPnNjaC0+c2NoaWQuc2NoX25vKTsKIAotCW1kZXZfc2V0X2NsYXNz
KG1kZXYsIE1ERVZfQ0xBU1NfSURfVkZJTyk7CisJbWRldl9zZXRfdmZpb19vcHMobWRldiwgJnZm
aW9fbWRldl9vcHMpOwogCXJldHVybiAwOwogfQogCkBAIC01NzUsMTEgKzU3OCw3IEBAIHN0YXRp
YyBzc2l6ZV90IHZmaW9fY2N3X21kZXZfaW9jdGwoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LAog
CX0KIH0KIAotc3RhdGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgdmZpb19jY3dfbWRl
dl9vcHMgPSB7Ci0JLm93bmVyCQkJPSBUSElTX01PRFVMRSwKLQkuc3VwcG9ydGVkX3R5cGVfZ3Jv
dXBzICA9IG1kZXZfdHlwZV9ncm91cHMsCi0JLmNyZWF0ZQkJCT0gdmZpb19jY3dfbWRldl9jcmVh
dGUsCi0JLnJlbW92ZQkJCT0gdmZpb19jY3dfbWRldl9yZW1vdmUsCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IHZmaW9fbWRldl9kZXZpY2Vfb3BzIHZmaW9fbWRldl9vcHMgPSB7CiAJLm9wZW4JCQk9IHZm
aW9fY2N3X21kZXZfb3BlbiwKIAkucmVsZWFzZQkJPSB2ZmlvX2Njd19tZGV2X3JlbGVhc2UsCiAJ
LnJlYWQJCQk9IHZmaW9fY2N3X21kZXZfcmVhZCwKQEAgLTU4Nyw2ICs1ODYsMTMgQEAgc3RhdGlj
IGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgdmZpb19jY3dfbWRldl9vcHMgPSB7CiAJLmlv
Y3RsCQkJPSB2ZmlvX2Njd19tZGV2X2lvY3RsLAogfTsKIAorc3RhdGljIGNvbnN0IHN0cnVjdCBt
ZGV2X3BhcmVudF9vcHMgdmZpb19jY3dfbWRldl9vcHMgPSB7CisJLm93bmVyCQkJPSBUSElTX01P
RFVMRSwKKwkuc3VwcG9ydGVkX3R5cGVfZ3JvdXBzICA9IG1kZXZfdHlwZV9ncm91cHMsCisJLmNy
ZWF0ZQkJCT0gdmZpb19jY3dfbWRldl9jcmVhdGUsCisJLnJlbW92ZQkJCT0gdmZpb19jY3dfbWRl
dl9yZW1vdmUsCit9OworCiBpbnQgdmZpb19jY3dfbWRldl9yZWcoc3RydWN0IHN1YmNoYW5uZWwg
KnNjaCkKIHsKIAlyZXR1cm4gbWRldl9yZWdpc3Rlcl9kZXZpY2UoJnNjaC0+ZGV2LCAmdmZpb19j
Y3dfbWRldl9vcHMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9zMzkwL2NyeXB0by92ZmlvX2FwX29w
cy5jIGIvZHJpdmVycy9zMzkwL2NyeXB0by92ZmlvX2FwX29wcy5jCmluZGV4IDA3YzMxMDcwYWZl
Yi4uMTk1YzhmNGM2ZjEwIDEwMDY0NAotLS0gYS9kcml2ZXJzL3MzOTAvY3J5cHRvL3ZmaW9fYXBf
b3BzLmMKKysrIGIvZHJpdmVycy9zMzkwL2NyeXB0by92ZmlvX2FwX29wcy5jCkBAIC0xNiw2ICsx
Niw3IEBACiAjaW5jbHVkZSA8bGludXgvYml0b3BzLmg+CiAjaW5jbHVkZSA8bGludXgva3ZtX2hv
c3QuaD4KICNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KKyNpbmNsdWRlIDxsaW51eC92ZmlvX21k
ZXYuaD4KICNpbmNsdWRlIDxhc20va3ZtLmg+CiAjaW5jbHVkZSA8YXNtL3pjcnlwdC5oPgogCkBA
IC0zMjEsNiArMzIyLDggQEAgc3RhdGljIHZvaWQgdmZpb19hcF9tYXRyaXhfaW5pdChzdHJ1Y3Qg
YXBfY29uZmlnX2luZm8gKmluZm8sCiAJbWF0cml4LT5hZG1fbWF4ID0gaW5mby0+YXB4YSA/IGlu
Zm8tPk5kIDogMTU7CiB9CiAKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmZpb19tZGV2X2RldmljZV9v
cHMgdmZpb19tZGV2X29wczsKKwogc3RhdGljIGludCB2ZmlvX2FwX21kZXZfY3JlYXRlKHN0cnVj
dCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiB7CiAJc3RydWN0IGFw
X21hdHJpeF9tZGV2ICptYXRyaXhfbWRldjsKQEAgLTM0Myw3ICszNDYsNyBAQCBzdGF0aWMgaW50
IHZmaW9fYXBfbWRldl9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldikKIAlsaXN0X2FkZCgmbWF0cml4X21kZXYtPm5vZGUsICZtYXRyaXhfZGV2LT5t
ZGV2X2xpc3QpOwogCW11dGV4X3VubG9jaygmbWF0cml4X2Rldi0+bG9jayk7CiAKLQltZGV2X3Nl
dF9jbGFzcyhtZGV2LCBNREVWX0NMQVNTX0lEX1ZGSU8pOworCW1kZXZfc2V0X3ZmaW9fb3BzKG1k
ZXYsICZ2ZmlvX21kZXZfb3BzKTsKIAlyZXR1cm4gMDsKIH0KIApAQCAtMTI4MSwxNSArMTI4NCwx
OCBAQCBzdGF0aWMgc3NpemVfdCB2ZmlvX2FwX21kZXZfaW9jdGwoc3RydWN0IG1kZXZfZGV2aWNl
ICptZGV2LAogCXJldHVybiByZXQ7CiB9CiAKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmZpb19tZGV2
X2RldmljZV9vcHMgdmZpb19tZGV2X29wcyA9IHsKKwkub3BlbgkJCT0gdmZpb19hcF9tZGV2X29w
ZW4sCisJLnJlbGVhc2UJCT0gdmZpb19hcF9tZGV2X3JlbGVhc2UsCisJLmlvY3RsCQkJPSB2Zmlv
X2FwX21kZXZfaW9jdGwsCit9OworCiBzdGF0aWMgY29uc3Qgc3RydWN0IG1kZXZfcGFyZW50X29w
cyB2ZmlvX2FwX21hdHJpeF9vcHMgPSB7CiAJLm93bmVyCQkJPSBUSElTX01PRFVMRSwKIAkuc3Vw
cG9ydGVkX3R5cGVfZ3JvdXBzCT0gdmZpb19hcF9tZGV2X3R5cGVfZ3JvdXBzLAogCS5tZGV2X2F0
dHJfZ3JvdXBzCT0gdmZpb19hcF9tZGV2X2F0dHJfZ3JvdXBzLAogCS5jcmVhdGUJCQk9IHZmaW9f
YXBfbWRldl9jcmVhdGUsCiAJLnJlbW92ZQkJCT0gdmZpb19hcF9tZGV2X3JlbW92ZSwKLQkub3Bl
bgkJCT0gdmZpb19hcF9tZGV2X29wZW4sCi0JLnJlbGVhc2UJCT0gdmZpb19hcF9tZGV2X3JlbGVh
c2UsCi0JLmlvY3RsCQkJPSB2ZmlvX2FwX21kZXZfaW9jdGwsCiB9OwogCiBpbnQgdmZpb19hcF9t
ZGV2X3JlZ2lzdGVyKHZvaWQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X2Nv
cmUuYyBiL2RyaXZlcnMvdmZpby9tZGV2L21kZXZfY29yZS5jCmluZGV4IDNhOWM1MmQ3MWI0ZS4u
ZDBmMzExM2M4MDcxIDEwMDY0NAotLS0gYS9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X2NvcmUuYwor
KysgYi9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X2NvcmUuYwpAQCAtNDUsMTUgKzQ1LDIzIEBAIHZv
aWQgbWRldl9zZXRfZHJ2ZGF0YShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHZvaWQgKmRhdGEp
CiB9CiBFWFBPUlRfU1lNQk9MKG1kZXZfc2V0X2RydmRhdGEpOwogCi0vKiBTcGVjaWZ5IHRoZSBj
bGFzcyBmb3IgdGhlIG1kZXYgZGV2aWNlLCB0aGlzIG11c3QgYmUgY2FsbGVkIGR1cmluZwotICog
Y3JlYXRlKCkgY2FsbGJhY2suCisvKiBTcGVjaWZ5IHRoZSBWRklPIGRldmljZSBvcHMgZm9yIHRo
ZSBtZGV2IGRldmljZSwgdGhpcworICogbXVzdCBiZSBjYWxsZWQgZHVyaW5nIGNyZWF0ZSgpIGNh
bGxiYWNrIGZvciBWRklPIG1kZXYgZGV2aWNlLgogICovCi12b2lkIG1kZXZfc2V0X2NsYXNzKHN0
cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkKQordm9pZCBtZGV2X3NldF92ZmlvX29wcyhz
dHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsCisJCSAgICAgICBjb25zdCBzdHJ1Y3QgdmZpb19tZGV2
X2RldmljZV9vcHMgKnZmaW9fb3BzKQogewogCVdBUk5fT04obWRldi0+Y2xhc3NfaWQpOwotCW1k
ZXYtPmNsYXNzX2lkID0gaWQ7CisJbWRldi0+Y2xhc3NfaWQgPSBNREVWX0NMQVNTX0lEX1ZGSU87
CisJbWRldi0+ZGV2aWNlX29wcyA9IHZmaW9fb3BzOwogfQotRVhQT1JUX1NZTUJPTChtZGV2X3Nl
dF9jbGFzcyk7CitFWFBPUlRfU1lNQk9MKG1kZXZfc2V0X3ZmaW9fb3BzKTsKKworY29uc3Qgdm9p
ZCAqbWRldl9nZXRfZGV2X29wcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJcmV0dXJu
IG1kZXYtPmRldmljZV9vcHM7Cit9CitFWFBPUlRfU1lNQk9MKG1kZXZfZ2V0X2Rldl9vcHMpOwog
CiBzdHJ1Y3QgZGV2aWNlICptZGV2X2RldihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiB7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X3ByaXZhdGUuaCBiL2RyaXZlcnMvdmZp
by9tZGV2L21kZXZfcHJpdmF0ZS5oCmluZGV4IGM2NWY0MzZjMTg2OS4uYjY2NjgwNWYwYjFmIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X3ByaXZhdGUuaAorKysgYi9kcml2ZXJz
L3ZmaW8vbWRldi9tZGV2X3ByaXZhdGUuaApAQCAtMzQsNiArMzQsNyBAQCBzdHJ1Y3QgbWRldl9k
ZXZpY2UgewogCXN0cnVjdCBkZXZpY2UgKmlvbW11X2RldmljZTsKIAlib29sIGFjdGl2ZTsKIAl1
MTYgY2xhc3NfaWQ7CisJY29uc3Qgdm9pZCAqZGV2aWNlX29wczsKIH07CiAKICNkZWZpbmUgdG9f
bWRldl9kZXZpY2UoZGV2KQljb250YWluZXJfb2YoZGV2LCBzdHJ1Y3QgbWRldl9kZXZpY2UsIGRl
dikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmZpby9tZGV2L3ZmaW9fbWRldi5jIGIvZHJpdmVycy92
ZmlvL21kZXYvdmZpb19tZGV2LmMKaW5kZXggY2I3MDFjZDY0NmYwLi42YjZiOTIwMTE0MzYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvdmZpby9tZGV2L3ZmaW9fbWRldi5jCisrKyBiL2RyaXZlcnMvdmZp
by9tZGV2L3ZmaW9fbWRldi5jCkBAIC0xNCw2ICsxNCw3IEBACiAjaW5jbHVkZSA8bGludXgvc2xh
Yi5oPgogI2luY2x1ZGUgPGxpbnV4L3ZmaW8uaD4KICNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+Cisj
aW5jbHVkZSA8bGludXgvdmZpb19tZGV2Lmg+CiAKICNpbmNsdWRlICJtZGV2X3ByaXZhdGUuaCIK
IApAQCAtMjQsMTYgKzI1LDE2IEBACiBzdGF0aWMgaW50IHZmaW9fbWRldl9vcGVuKHZvaWQgKmRl
dmljZV9kYXRhKQogewogCXN0cnVjdCBtZGV2X2RldmljZSAqbWRldiA9IGRldmljZV9kYXRhOwot
CXN0cnVjdCBtZGV2X3BhcmVudCAqcGFyZW50ID0gbWRldi0+cGFyZW50OworCWNvbnN0IHN0cnVj
dCB2ZmlvX21kZXZfZGV2aWNlX29wcyAqb3BzID0gbWRldl9nZXRfZGV2X29wcyhtZGV2KTsKIAlp
bnQgcmV0OwogCi0JaWYgKHVubGlrZWx5KCFwYXJlbnQtPm9wcy0+b3BlbikpCisJaWYgKHVubGlr
ZWx5KCFvcHMtPm9wZW4pKQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCWlmICghdHJ5X21vZHVsZV9n
ZXQoVEhJU19NT0RVTEUpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAotCXJldCA9IHBhcmVudC0+b3Bz
LT5vcGVuKG1kZXYpOworCXJldCA9IG9wcy0+b3BlbihtZGV2KTsKIAlpZiAocmV0KQogCQltb2R1
bGVfcHV0KFRISVNfTU9EVUxFKTsKIApAQCAtNDMsMTAgKzQ0LDEwIEBAIHN0YXRpYyBpbnQgdmZp
b19tZGV2X29wZW4odm9pZCAqZGV2aWNlX2RhdGEpCiBzdGF0aWMgdm9pZCB2ZmlvX21kZXZfcmVs
ZWFzZSh2b2lkICpkZXZpY2VfZGF0YSkKIHsKIAlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYgPSBk
ZXZpY2VfZGF0YTsKLQlzdHJ1Y3QgbWRldl9wYXJlbnQgKnBhcmVudCA9IG1kZXYtPnBhcmVudDsK
Kwljb25zdCBzdHJ1Y3QgdmZpb19tZGV2X2RldmljZV9vcHMgKm9wcyA9IG1kZXZfZ2V0X2Rldl9v
cHMobWRldik7CiAKLQlpZiAobGlrZWx5KHBhcmVudC0+b3BzLT5yZWxlYXNlKSkKLQkJcGFyZW50
LT5vcHMtPnJlbGVhc2UobWRldik7CisJaWYgKGxpa2VseShvcHMtPnJlbGVhc2UpKQorCQlvcHMt
PnJlbGVhc2UobWRldik7CiAKIAltb2R1bGVfcHV0KFRISVNfTU9EVUxFKTsKIH0KQEAgLTU1LDQ3
ICs1Niw0NyBAQCBzdGF0aWMgbG9uZyB2ZmlvX21kZXZfdW5sb2NrZWRfaW9jdGwodm9pZCAqZGV2
aWNlX2RhdGEsCiAJCQkJICAgICB1bnNpZ25lZCBpbnQgY21kLCB1bnNpZ25lZCBsb25nIGFyZykK
IHsKIAlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYgPSBkZXZpY2VfZGF0YTsKLQlzdHJ1Y3QgbWRl
dl9wYXJlbnQgKnBhcmVudCA9IG1kZXYtPnBhcmVudDsKKwljb25zdCBzdHJ1Y3QgdmZpb19tZGV2
X2RldmljZV9vcHMgKm9wcyA9IG1kZXZfZ2V0X2Rldl9vcHMobWRldik7CiAKLQlpZiAodW5saWtl
bHkoIXBhcmVudC0+b3BzLT5pb2N0bCkpCisJaWYgKHVubGlrZWx5KCFvcHMtPmlvY3RsKSkKIAkJ
cmV0dXJuIC1FSU5WQUw7CiAKLQlyZXR1cm4gcGFyZW50LT5vcHMtPmlvY3RsKG1kZXYsIGNtZCwg
YXJnKTsKKwlyZXR1cm4gb3BzLT5pb2N0bChtZGV2LCBjbWQsIGFyZyk7CiB9CiAKIHN0YXRpYyBz
c2l6ZV90IHZmaW9fbWRldl9yZWFkKHZvaWQgKmRldmljZV9kYXRhLCBjaGFyIF9fdXNlciAqYnVm
LAogCQkJICAgICAgc2l6ZV90IGNvdW50LCBsb2ZmX3QgKnBwb3MpCiB7CiAJc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2ID0gZGV2aWNlX2RhdGE7Ci0Jc3RydWN0IG1kZXZfcGFyZW50ICpwYXJlbnQg
PSBtZGV2LT5wYXJlbnQ7CisJY29uc3Qgc3RydWN0IHZmaW9fbWRldl9kZXZpY2Vfb3BzICpvcHMg
PSBtZGV2X2dldF9kZXZfb3BzKG1kZXYpOwogCi0JaWYgKHVubGlrZWx5KCFwYXJlbnQtPm9wcy0+
cmVhZCkpCisJaWYgKHVubGlrZWx5KCFvcHMtPnJlYWQpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAot
CXJldHVybiBwYXJlbnQtPm9wcy0+cmVhZChtZGV2LCBidWYsIGNvdW50LCBwcG9zKTsKKwlyZXR1
cm4gb3BzLT5yZWFkKG1kZXYsIGJ1ZiwgY291bnQsIHBwb3MpOwogfQogCiBzdGF0aWMgc3NpemVf
dCB2ZmlvX21kZXZfd3JpdGUodm9pZCAqZGV2aWNlX2RhdGEsIGNvbnN0IGNoYXIgX191c2VyICpi
dWYsCiAJCQkgICAgICAgc2l6ZV90IGNvdW50LCBsb2ZmX3QgKnBwb3MpCiB7CiAJc3RydWN0IG1k
ZXZfZGV2aWNlICptZGV2ID0gZGV2aWNlX2RhdGE7Ci0Jc3RydWN0IG1kZXZfcGFyZW50ICpwYXJl
bnQgPSBtZGV2LT5wYXJlbnQ7CisJY29uc3Qgc3RydWN0IHZmaW9fbWRldl9kZXZpY2Vfb3BzICpv
cHMgPSBtZGV2X2dldF9kZXZfb3BzKG1kZXYpOwogCi0JaWYgKHVubGlrZWx5KCFwYXJlbnQtPm9w
cy0+d3JpdGUpKQorCWlmICh1bmxpa2VseSghb3BzLT53cml0ZSkpCiAJCXJldHVybiAtRUlOVkFM
OwogCi0JcmV0dXJuIHBhcmVudC0+b3BzLT53cml0ZShtZGV2LCBidWYsIGNvdW50LCBwcG9zKTsK
KwlyZXR1cm4gb3BzLT53cml0ZShtZGV2LCBidWYsIGNvdW50LCBwcG9zKTsKIH0KIAogc3RhdGlj
IGludCB2ZmlvX21kZXZfbW1hcCh2b2lkICpkZXZpY2VfZGF0YSwgc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEpCiB7CiAJc3RydWN0IG1kZXZfZGV2aWNlICptZGV2ID0gZGV2aWNlX2RhdGE7Ci0J
c3RydWN0IG1kZXZfcGFyZW50ICpwYXJlbnQgPSBtZGV2LT5wYXJlbnQ7CisJY29uc3Qgc3RydWN0
IHZmaW9fbWRldl9kZXZpY2Vfb3BzICpvcHMgPSBtZGV2X2dldF9kZXZfb3BzKG1kZXYpOwogCi0J
aWYgKHVubGlrZWx5KCFwYXJlbnQtPm9wcy0+bW1hcCkpCisJaWYgKHVubGlrZWx5KCFvcHMtPm1t
YXApKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCXJldHVybiBwYXJlbnQtPm9wcy0+bW1hcChtZGV2
LCB2bWEpOworCXJldHVybiBvcHMtPm1tYXAobWRldiwgdm1hKTsKIH0KIAogc3RhdGljIGNvbnN0
IHN0cnVjdCB2ZmlvX2RldmljZV9vcHMgdmZpb19tZGV2X2Rldl9vcHMgPSB7CmRpZmYgLS1naXQg
YS9pbmNsdWRlL2xpbnV4L21kZXYuaCBiL2luY2x1ZGUvbGludXgvbWRldi5oCmluZGV4IDc4YjY5
ZDA5ZWI1NC4uM2QyOWUwOWUyMGM5IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L21kZXYuaAor
KysgYi9pbmNsdWRlL2xpbnV4L21kZXYuaApAQCAtMTAsNyArMTAsMTMgQEAKICNpZm5kZWYgTURF
Vl9ICiAjZGVmaW5lIE1ERVZfSAogCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRl
IDxsaW51eC9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+CisjaW5jbHVkZSA8dWFw
aS9saW51eC91dWlkLmg+CisKIHN0cnVjdCBtZGV2X2RldmljZTsKK3N0cnVjdCB2ZmlvX21kZXZf
ZGV2aWNlX29wczsKIAogLyoKICAqIENhbGxlZCBieSB0aGUgcGFyZW50IGRldmljZSBkcml2ZXIg
dG8gc2V0IHRoZSBkZXZpY2Ugd2hpY2ggcmVwcmVzZW50cwpAQCAtNDgsMzAgKzU0LDcgQEAgc3Ry
dWN0IGRldmljZSAqbWRldl9nZXRfaW9tbXVfZGV2aWNlKHN0cnVjdCBkZXZpY2UgKmRldik7CiAg
KgkJCUBtZGV2OiBtZGV2X2RldmljZSBkZXZpY2Ugc3RydWN0dXJlIHdoaWNoIGlzIGJlaW5nCiAg
KgkJCSAgICAgICBkZXN0cm95ZWQKICAqCQkJUmV0dXJucyBpbnRlZ2VyOiBzdWNjZXNzICgwKSBv
ciBlcnJvciAoPCAwKQotICogQG9wZW46CQlPcGVuIG1lZGlhdGVkIGRldmljZS4KLSAqCQkJQG1k
ZXY6IG1lZGlhdGVkIGRldmljZS4KLSAqCQkJUmV0dXJucyBpbnRlZ2VyOiBzdWNjZXNzICgwKSBv
ciBlcnJvciAoPCAwKQotICogQHJlbGVhc2U6CQlyZWxlYXNlIG1lZGlhdGVkIGRldmljZQotICoJ
CQlAbWRldjogbWVkaWF0ZWQgZGV2aWNlLgotICogQHJlYWQ6CQlSZWFkIGVtdWxhdGlvbiBjYWxs
YmFjawotICoJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNlIHN0cnVjdHVyZQotICoJCQlAYnVmOiBy
ZWFkIGJ1ZmZlcgotICoJCQlAY291bnQ6IG51bWJlciBvZiBieXRlcyB0byByZWFkCi0gKgkJCUBw
cG9zOiBhZGRyZXNzLgotICoJCQlSZXR1bnMgbnVtYmVyIG9uIGJ5dGVzIHJlYWQgb24gc3VjY2Vz
cyBvciBlcnJvci4KLSAqIEB3cml0ZToJCVdyaXRlIGVtdWxhdGlvbiBjYWxsYmFjawotICoJCQlA
bWRldjogbWVkaWF0ZWQgZGV2aWNlIHN0cnVjdHVyZQotICoJCQlAYnVmOiB3cml0ZSBidWZmZXIK
LSAqCQkJQGNvdW50OiBudW1iZXIgb2YgYnl0ZXMgdG8gYmUgd3JpdHRlbgotICoJCQlAcHBvczog
YWRkcmVzcy4KLSAqCQkJUmV0dW5zIG51bWJlciBvbiBieXRlcyB3cml0dGVuIG9uIHN1Y2Nlc3Mg
b3IgZXJyb3IuCi0gKiBAaW9jdGw6CQlJT0NUTCBjYWxsYmFjawotICoJCQlAbWRldjogbWVkaWF0
ZWQgZGV2aWNlIHN0cnVjdHVyZQotICoJCQlAY21kOiBpb2N0bCBjb21tYW5kCi0gKgkJCUBhcmc6
IGFyZ3VtZW50cyB0byBpb2N0bAotICogQG1tYXA6CQltbWFwIGNhbGxiYWNrCi0gKgkJCUBtZGV2
OiBtZWRpYXRlZCBkZXZpY2Ugc3RydWN0dXJlCi0gKgkJCUB2bWE6IHZtYSBzdHJ1Y3R1cmUKKyAq
CiAgKiBQYXJlbnQgZGV2aWNlIHRoYXQgc3VwcG9ydCBtZWRpYXRlZCBkZXZpY2Ugc2hvdWxkIGJl
IHJlZ2lzdGVyZWQgd2l0aCBtZGV2CiAgKiBtb2R1bGUgd2l0aCBtZGV2X3BhcmVudF9vcHMgc3Ry
dWN0dXJlLgogICoqLwpAQCAtODMsMTUgKzY2LDYgQEAgc3RydWN0IG1kZXZfcGFyZW50X29wcyB7
CiAKIAlpbnQgICAgICgqY3JlYXRlKShzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2KTsKIAlpbnQgICAgICgqcmVtb3ZlKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1k
ZXYpOwotCWludCAgICAgKCpvcGVuKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwotCXZvaWQg
ICAgKCpyZWxlYXNlKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwotCXNzaXplX3QgKCpyZWFk
KShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIGNoYXIgX191c2VyICpidWYsCi0JCQlzaXplX3Qg
Y291bnQsIGxvZmZfdCAqcHBvcyk7Ci0Jc3NpemVfdCAoKndyaXRlKShzdHJ1Y3QgbWRldl9kZXZp
Y2UgKm1kZXYsIGNvbnN0IGNoYXIgX191c2VyICpidWYsCi0JCQkgc2l6ZV90IGNvdW50LCBsb2Zm
X3QgKnBwb3MpOwotCWxvbmcJKCppb2N0bCkoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1bnNp
Z25lZCBpbnQgY21kLAotCQkJIHVuc2lnbmVkIGxvbmcgYXJnKTsKLQlpbnQJKCptbWFwKShzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKTsKIH07CiAK
IC8qIGludGVyZmFjZSBmb3IgZXhwb3J0aW5nIG1kZXYgc3VwcG9ydGVkIHR5cGUgYXR0cmlidXRl
cyAqLwpAQCAtMTMzLDggKzEwNywxMSBAQCBzdHJ1Y3QgbWRldl9kcml2ZXIgewogCiB2b2lkICpt
ZGV2X2dldF9kcnZkYXRhKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldik7CiB2b2lkIG1kZXZfc2V0
X2RydmRhdGEoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB2b2lkICpkYXRhKTsKKwogY29uc3Qg
Z3VpZF90ICptZGV2X3V1aWQoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKLXZvaWQgbWRldl9z
ZXRfY2xhc3Moc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWQpOwordm9pZCBtZGV2X3Nl
dF92ZmlvX29wcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsCisJCSAgICAgICBjb25zdCBzdHJ1
Y3QgdmZpb19tZGV2X2RldmljZV9vcHMgKnZmaW9fb3BzKTsKK2NvbnN0IHZvaWQgKm1kZXZfZ2V0
X2Rldl9vcHMoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKIAogZXh0ZXJuIHN0cnVjdCBidXNf
dHlwZSBtZGV2X2J1c190eXBlOwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3ZmaW9fbWRl
di5oIGIvaW5jbHVkZS9saW51eC92ZmlvX21kZXYuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLjM5MDdjNTM3MWMyYgotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUv
bGludXgvdmZpb19tZGV2LmgKQEAgLTAsMCArMSw1MiBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAtb25seSAqLworLyoKKyAqIFZGSU8gTWVkaWF0ZWQgZGV2aWNlIGRlZmlu
aXRpb24KKyAqLworCisjaWZuZGVmIFZGSU9fTURFVl9ICisjZGVmaW5lIFZGSU9fTURFVl9ICisK
KyNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+CisKKy8qKgorICogc3RydWN0IHZmaW9fbWRldl9kZXZp
Y2Vfb3BzIC0gU3RydWN0dXJlIHRvIGJlIHJlZ2lzdGVyZWQgZm9yIGVhY2gKKyAqIG1kZXYgZGV2
aWNlIHRvIHJlZ2lzdGVyIHRoZSBkZXZpY2UgdG8gdmZpby1tZGV2IG1vZHVsZS4KKyAqCisgKiBA
b3BlbjoJCU9wZW4gbWVkaWF0ZWQgZGV2aWNlLgorICoJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNl
LgorICoJCQlSZXR1cm5zIGludGVnZXI6IHN1Y2Nlc3MgKDApIG9yIGVycm9yICg8IDApCisgKiBA
cmVsZWFzZToJCXJlbGVhc2UgbWVkaWF0ZWQgZGV2aWNlCisgKgkJCUBtZGV2OiBtZWRpYXRlZCBk
ZXZpY2UuCisgKiBAcmVhZDoJCVJlYWQgZW11bGF0aW9uIGNhbGxiYWNrCisgKgkJCUBtZGV2OiBt
ZWRpYXRlZCBkZXZpY2Ugc3RydWN0dXJlCisgKgkJCUBidWY6IHJlYWQgYnVmZmVyCisgKgkJCUBj
b3VudDogbnVtYmVyIG9mIGJ5dGVzIHRvIHJlYWQKKyAqCQkJQHBwb3M6IGFkZHJlc3MuCisgKgkJ
CVJldHVucyBudW1iZXIgb24gYnl0ZXMgcmVhZCBvbiBzdWNjZXNzIG9yIGVycm9yLgorICogQHdy
aXRlOgkJV3JpdGUgZW11bGF0aW9uIGNhbGxiYWNrCisgKgkJCUBtZGV2OiBtZWRpYXRlZCBkZXZp
Y2Ugc3RydWN0dXJlCisgKgkJCUBidWY6IHdyaXRlIGJ1ZmZlcgorICoJCQlAY291bnQ6IG51bWJl
ciBvZiBieXRlcyB0byBiZSB3cml0dGVuCisgKgkJCUBwcG9zOiBhZGRyZXNzLgorICoJCQlSZXR1
bnMgbnVtYmVyIG9uIGJ5dGVzIHdyaXR0ZW4gb24gc3VjY2VzcyBvciBlcnJvci4KKyAqIEBpb2N0
bDoJCUlPQ1RMIGNhbGxiYWNrCisgKgkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2Ugc3RydWN0dXJl
CisgKgkJCUBjbWQ6IGlvY3RsIGNvbW1hbmQKKyAqCQkJQGFyZzogYXJndW1lbnRzIHRvIGlvY3Rs
CisgKiBAbW1hcDoJCW1tYXAgY2FsbGJhY2sKKyAqCQkJQG1kZXY6IG1lZGlhdGVkIGRldmljZSBz
dHJ1Y3R1cmUKKyAqCQkJQHZtYTogdm1hIHN0cnVjdHVyZQorICovCitzdHJ1Y3QgdmZpb19tZGV2
X2RldmljZV9vcHMgeworCWludCAgICAgKCpvcGVuKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYp
OworCXZvaWQgICAgKCpyZWxlYXNlKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOworCXNzaXpl
X3QgKCpyZWFkKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIGNoYXIgX191c2VyICpidWYsCisJ
CQlzaXplX3QgY291bnQsIGxvZmZfdCAqcHBvcyk7CisJc3NpemVfdCAoKndyaXRlKShzdHJ1Y3Qg
bWRldl9kZXZpY2UgKm1kZXYsIGNvbnN0IGNoYXIgX191c2VyICpidWYsCisJCQkgc2l6ZV90IGNv
dW50LCBsb2ZmX3QgKnBwb3MpOworCWxvbmcJKCppb2N0bCkoc3RydWN0IG1kZXZfZGV2aWNlICpt
ZGV2LCB1bnNpZ25lZCBpbnQgY21kLAorCQkJIHVuc2lnbmVkIGxvbmcgYXJnKTsKKwlpbnQJKCpt
bWFwKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1h
KTsKK307CisKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvc2FtcGxlcy92ZmlvLW1kZXYvbWJvY2hzLmMg
Yi9zYW1wbGVzL3ZmaW8tbWRldi9tYm9jaHMuYwppbmRleCAxMTViYzUwNzQ2NTYuLjM3YWJkZjFi
MjdhOCAxMDA2NDQKLS0tIGEvc2FtcGxlcy92ZmlvLW1kZXYvbWJvY2hzLmMKKysrIGIvc2FtcGxl
cy92ZmlvLW1kZXYvbWJvY2hzLmMKQEAgLTMwLDYgKzMwLDcgQEAKICNpbmNsdWRlIDxsaW51eC9p
b21tdS5oPgogI2luY2x1ZGUgPGxpbnV4L3N5c2ZzLmg+CiAjaW5jbHVkZSA8bGludXgvbWRldi5o
PgorI2luY2x1ZGUgPGxpbnV4L3ZmaW9fbWRldi5oPgogI2luY2x1ZGUgPGxpbnV4L3BjaS5oPgog
I2luY2x1ZGUgPGxpbnV4L2RtYS1idWYuaD4KICNpbmNsdWRlIDxsaW51eC9oaWdobWVtLmg+CkBA
IC01MTYsNiArNTE3LDggQEAgc3RhdGljIGludCBtYm9jaHNfcmVzZXQoc3RydWN0IG1kZXZfZGV2
aWNlICptZGV2KQogCXJldHVybiAwOwogfQogCitzdGF0aWMgY29uc3Qgc3RydWN0IHZmaW9fbWRl
dl9kZXZpY2Vfb3BzIHZmaW9fbWRldl9vcHM7CisKIHN0YXRpYyBpbnQgbWJvY2hzX2NyZWF0ZShz
dHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQogewogCWNvbnN0
IHN0cnVjdCBtYm9jaHNfdHlwZSAqdHlwZSA9IG1ib2Noc19maW5kX3R5cGUoa29iaik7CkBAIC01
NjEsNyArNTY0LDcgQEAgc3RhdGljIGludCBtYm9jaHNfY3JlYXRlKHN0cnVjdCBrb2JqZWN0ICpr
b2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJbWJvY2hzX3Jlc2V0KG1kZXYpOwogCiAJ
bWJvY2hzX3VzZWRfbWJ5dGVzICs9IHR5cGUtPm1ieXRlczsKLQltZGV2X3NldF9jbGFzcyhtZGV2
LCBNREVWX0NMQVNTX0lEX1ZGSU8pOworCW1kZXZfc2V0X3ZmaW9fb3BzKG1kZXYsICZ2ZmlvX21k
ZXZfb3BzKTsKIAlyZXR1cm4gMDsKIAogZXJyX21lbToKQEAgLTE0MTksMTIgKzE0MjIsNyBAQCBz
dGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCAqbWRldl90eXBlX2dyb3Vwc1tdID0gewogCU5V
TEwsCiB9OwogCi1zdGF0aWMgY29uc3Qgc3RydWN0IG1kZXZfcGFyZW50X29wcyBtZGV2X2ZvcHMg
PSB7Ci0JLm93bmVyCQkJPSBUSElTX01PRFVMRSwKLQkubWRldl9hdHRyX2dyb3Vwcwk9IG1kZXZf
ZGV2X2dyb3VwcywKLQkuc3VwcG9ydGVkX3R5cGVfZ3JvdXBzCT0gbWRldl90eXBlX2dyb3VwcywK
LQkuY3JlYXRlCQkJPSBtYm9jaHNfY3JlYXRlLAotCS5yZW1vdmUJCQk9IG1ib2Noc19yZW1vdmUs
CitzdGF0aWMgY29uc3Qgc3RydWN0IHZmaW9fbWRldl9kZXZpY2Vfb3BzIHZmaW9fbWRldl9vcHMg
PSB7CiAJLm9wZW4JCQk9IG1ib2Noc19vcGVuLAogCS5yZWxlYXNlCQk9IG1ib2Noc19jbG9zZSwK
IAkucmVhZAkJCT0gbWJvY2hzX3JlYWQsCkBAIC0xNDMzLDYgKzE0MzEsMTQgQEAgc3RhdGljIGNv
bnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgbWRldl9mb3BzID0gewogCS5tbWFwCQkJPSBtYm9j
aHNfbW1hcCwKIH07CiAKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgbWRldl9wYXJlbnRfb3BzIG1kZXZf
Zm9wcyA9IHsKKwkub3duZXIJCQk9IFRISVNfTU9EVUxFLAorCS5tZGV2X2F0dHJfZ3JvdXBzCT0g
bWRldl9kZXZfZ3JvdXBzLAorCS5zdXBwb3J0ZWRfdHlwZV9ncm91cHMJPSBtZGV2X3R5cGVfZ3Jv
dXBzLAorCS5jcmVhdGUJCQk9IG1ib2Noc19jcmVhdGUsCisJLnJlbW92ZQkJCT0gbWJvY2hzX3Jl
bW92ZSwKK307CisKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHZkX2ZvcHMg
PSB7CiAJLm93bmVyCQk9IFRISVNfTU9EVUxFLAogfTsKZGlmZiAtLWdpdCBhL3NhbXBsZXMvdmZp
by1tZGV2L21kcHkuYyBiL3NhbXBsZXMvdmZpby1tZGV2L21kcHkuYwppbmRleCA2NjU2MTQ1NzRk
NTAuLmYyMWM3OTVjNDBlNCAxMDA2NDQKLS0tIGEvc2FtcGxlcy92ZmlvLW1kZXYvbWRweS5jCisr
KyBiL3NhbXBsZXMvdmZpby1tZGV2L21kcHkuYwpAQCAtMjYsNiArMjYsNyBAQAogI2luY2x1ZGUg
PGxpbnV4L2lvbW11Lmg+CiAjaW5jbHVkZSA8bGludXgvc3lzZnMuaD4KICNpbmNsdWRlIDxsaW51
eC9tZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvdmZpb19tZGV2Lmg+CiAjaW5jbHVkZSA8bGludXgv
cGNpLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9mb3VyY2MuaD4KICNpbmNsdWRlICJtZHB5LWRlZnMu
aCIKQEAgLTIyNiw2ICsyMjcsOCBAQCBzdGF0aWMgaW50IG1kcHlfcmVzZXQoc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2KQogCXJldHVybiAwOwogfQogCitzdGF0aWMgY29uc3Qgc3RydWN0IHZmaW9f
bWRldl9kZXZpY2Vfb3BzIHZmaW9fbWRldl9vcHM7CisKIHN0YXRpYyBpbnQgbWRweV9jcmVhdGUo
c3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIHsKIAljb25z
dCBzdHJ1Y3QgbWRweV90eXBlICp0eXBlID0gbWRweV9maW5kX3R5cGUoa29iaik7CkBAIC0yNjks
NyArMjcyLDcgQEAgc3RhdGljIGludCBtZHB5X2NyZWF0ZShzdHJ1Y3Qga29iamVjdCAqa29iaiwg
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQogCW1kcHlfcmVzZXQobWRldik7CiAKIAltZHB5X2Nv
dW50Kys7Ci0JbWRldl9zZXRfY2xhc3MobWRldiwgTURFVl9DTEFTU19JRF9WRklPKTsKKwltZGV2
X3NldF92ZmlvX29wcyhtZGV2LCAmdmZpb19tZGV2X29wcyk7CiAJcmV0dXJuIDA7CiB9CiAKQEAg
LTcyNiwxMiArNzI5LDcgQEAgc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgKm1kZXZfdHlw
ZV9ncm91cHNbXSA9IHsKIAlOVUxMLAogfTsKIAotc3RhdGljIGNvbnN0IHN0cnVjdCBtZGV2X3Bh
cmVudF9vcHMgbWRldl9mb3BzID0gewotCS5vd25lcgkJCT0gVEhJU19NT0RVTEUsCi0JLm1kZXZf
YXR0cl9ncm91cHMJPSBtZGV2X2Rldl9ncm91cHMsCi0JLnN1cHBvcnRlZF90eXBlX2dyb3Vwcwk9
IG1kZXZfdHlwZV9ncm91cHMsCi0JLmNyZWF0ZQkJCT0gbWRweV9jcmVhdGUsCi0JLnJlbW92ZQkJ
CT0gbWRweV9yZW1vdmUsCitzdGF0aWMgY29uc3Qgc3RydWN0IHZmaW9fbWRldl9kZXZpY2Vfb3Bz
IHZmaW9fbWRldl9vcHMgPSB7CiAJLm9wZW4JCQk9IG1kcHlfb3BlbiwKIAkucmVsZWFzZQkJPSBt
ZHB5X2Nsb3NlLAogCS5yZWFkCQkJPSBtZHB5X3JlYWQsCkBAIC03NDAsNiArNzM4LDE0IEBAIHN0
YXRpYyBjb25zdCBzdHJ1Y3QgbWRldl9wYXJlbnRfb3BzIG1kZXZfZm9wcyA9IHsKIAkubW1hcAkJ
CT0gbWRweV9tbWFwLAogfTsKIAorc3RhdGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMg
bWRldl9mb3BzID0geworCS5vd25lcgkJCT0gVEhJU19NT0RVTEUsCisJLm1kZXZfYXR0cl9ncm91
cHMJPSBtZGV2X2Rldl9ncm91cHMsCisJLnN1cHBvcnRlZF90eXBlX2dyb3Vwcwk9IG1kZXZfdHlw
ZV9ncm91cHMsCisJLmNyZWF0ZQkJCT0gbWRweV9jcmVhdGUsCisJLnJlbW92ZQkJCT0gbWRweV9y
ZW1vdmUsCit9OworCiBzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyB2ZF9mb3Bz
ID0gewogCS5vd25lcgkJPSBUSElTX01PRFVMRSwKIH07CmRpZmYgLS1naXQgYS9zYW1wbGVzL3Zm
aW8tbWRldi9tdHR5LmMgYi9zYW1wbGVzL3ZmaW8tbWRldi9tdHR5LmMKaW5kZXggOTBkYTEyZmY3
ZmQ5Li5iODI5ZjMzYjk4ZjUgMTAwNjQ0Ci0tLSBhL3NhbXBsZXMvdmZpby1tZGV2L210dHkuYwor
KysgYi9zYW1wbGVzL3ZmaW8tbWRldi9tdHR5LmMKQEAgLTI3LDYgKzI3LDcgQEAKICNpbmNsdWRl
IDxsaW51eC9jdHlwZS5oPgogI2luY2x1ZGUgPGxpbnV4L2ZpbGUuaD4KICNpbmNsdWRlIDxsaW51
eC9tZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvdmZpb19tZGV2Lmg+CiAjaW5jbHVkZSA8bGludXgv
cGNpLmg+CiAjaW5jbHVkZSA8bGludXgvc2VyaWFsLmg+CiAjaW5jbHVkZSA8dWFwaS9saW51eC9z
ZXJpYWxfcmVnLmg+CkBAIC03MDgsNiArNzA5LDggQEAgc3RhdGljIHNzaXplX3QgbWRldl9hY2Nl
c3Moc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1OCAqYnVmLCBzaXplX3QgY291bnQsCiAJcmV0
dXJuIHJldDsKIH0KIAorc3RhdGljIGNvbnN0IHN0cnVjdCB2ZmlvX21kZXZfZGV2aWNlX29wcyB2
ZmlvX2Rldl9vcHM7CisKIHN0YXRpYyBpbnQgbXR0eV9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtv
YmosIHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIHsKIAlzdHJ1Y3QgbWRldl9zdGF0ZSAqbWRl
dl9zdGF0ZTsKQEAgLTc1NSw3ICs3NTgsNyBAQCBzdGF0aWMgaW50IG10dHlfY3JlYXRlKHN0cnVj
dCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJbGlzdF9hZGQoJm1k
ZXZfc3RhdGUtPm5leHQsICZtZGV2X2RldmljZXNfbGlzdCk7CiAJbXV0ZXhfdW5sb2NrKCZtZGV2
X2xpc3RfbG9jayk7CiAKLQltZGV2X3NldF9jbGFzcyhtZGV2LCBNREVWX0NMQVNTX0lEX1ZGSU8p
OworCW1kZXZfc2V0X3ZmaW9fb3BzKG1kZXYsICZ2ZmlvX2Rldl9vcHMpOwogCXJldHVybiAwOwog
fQogCkBAIC0xMzg4LDYgKzEzOTEsMTQgQEAgc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAg
Km1kZXZfdHlwZV9ncm91cHNbXSA9IHsKIAlOVUxMLAogfTsKIAorc3RhdGljIGNvbnN0IHN0cnVj
dCB2ZmlvX21kZXZfZGV2aWNlX29wcyB2ZmlvX2Rldl9vcHMgPSB7CisJLm9wZW4gICAgICAgICAg
ICAgICAgICAgPSBtdHR5X29wZW4sCisJLnJlbGVhc2UgICAgICAgICAgICAgICAgPSBtdHR5X2Ns
b3NlLAorCS5yZWFkICAgICAgICAgICAgICAgICAgID0gbXR0eV9yZWFkLAorCS53cml0ZSAgICAg
ICAgICAgICAgICAgID0gbXR0eV93cml0ZSwKKwkuaW9jdGwJCSAgICAgICAgPSBtdHR5X2lvY3Rs
LAorfTsKKwogc3RhdGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgbWRldl9mb3BzID0g
ewogCS5vd25lciAgICAgICAgICAgICAgICAgID0gVEhJU19NT0RVTEUsCiAJLmRldl9hdHRyX2dy
b3VwcyAgICAgICAgPSBtdHR5X2Rldl9ncm91cHMsCkBAIC0xMzk1LDExICsxNDA2LDYgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgbWRldl9mb3BzID0gewogCS5zdXBwb3J0
ZWRfdHlwZV9ncm91cHMgID0gbWRldl90eXBlX2dyb3VwcywKIAkuY3JlYXRlICAgICAgICAgICAg
ICAgICA9IG10dHlfY3JlYXRlLAogCS5yZW1vdmUJCQk9IG10dHlfcmVtb3ZlLAotCS5vcGVuICAg
ICAgICAgICAgICAgICAgID0gbXR0eV9vcGVuLAotCS5yZWxlYXNlICAgICAgICAgICAgICAgID0g
bXR0eV9jbG9zZSwKLQkucmVhZCAgICAgICAgICAgICAgICAgICA9IG10dHlfcmVhZCwKLQkud3Jp
dGUgICAgICAgICAgICAgICAgICA9IG10dHlfd3JpdGUsCi0JLmlvY3RsCQkgICAgICAgID0gbXR0
eV9pb2N0bCwKIH07CiAKIHN0YXRpYyB2b2lkIG10dHlfZGV2aWNlX3JlbGVhc2Uoc3RydWN0IGRl
dmljZSAqZGV2KQotLSAKMi4xOS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5m
by9kcmktZGV2ZWw=
