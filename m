Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 08FF36D79A
	for <lists+dri-devel@lfdr.de>; Fri, 19 Jul 2019 02:08:46 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E58A86E47F;
	Fri, 19 Jul 2019 00:08:42 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pf1-x444.google.com (mail-pf1-x444.google.com
 [IPv6:2607:f8b0:4864:20::444])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 62D796E47F
 for <dri-devel@lists.freedesktop.org>; Fri, 19 Jul 2019 00:08:41 +0000 (UTC)
Received: by mail-pf1-x444.google.com with SMTP id i189so13342309pfg.10
 for <dri-devel@lists.freedesktop.org>; Thu, 18 Jul 2019 17:08:41 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:references
 :mime-version:content-disposition:in-reply-to:user-agent;
 bh=yRmMofzH8EHSj6E3cUHEuNcWCBCVICedNp+mVFhoif4=;
 b=poEFRS/WuG0Yra6Su7kYaqYr28xzGo3cLlb+X50BSmkEx5f4z28vbhoisvE259y1G4
 2zB6/LyWuXvTGHIVOKMGPDiyJEvTKODatKdkJS7gYNhbz+YEP69wiMeOYg2OgpD4zUUH
 eEwcmIe3RXBp1kbjPF4AraIOSl7lT4if3Wi81/Fh84igheokkvUoTiV4BObkRX72/Nbc
 lxJbNfmCuJ4rvOrHCRVfxfO5t6vuPbbCAhYEQjAAO1X8FVSPwjuUU440MVfZFJcJVpyy
 Gi+ozMEGQ7zt+3zWqMZ7CLrDY/W8a7Akf2BIQqggz4uy97XoeteLahzAjmQGovvIvQVe
 vi4w==
X-Gm-Message-State: APjAAAWxYaraIZ3ElqOJD3mQTLSb3fuMkm/uSqmFpQkO0fDMVRv5MNYA
 i3MbLJou9XULIvk3Wql8eu+/EQ==
X-Google-Smtp-Source: APXvYqxAOFjf5oA9A+1bpCmZie3RNqaNqRQFLwviDg050dKmmK4tJI6r2jwnchjqAYjGJmpWO7h6KQ==
X-Received: by 2002:a17:90a:8d86:: with SMTP id
 d6mr53924589pjo.94.1563494920174; 
 Thu, 18 Jul 2019 17:08:40 -0700 (PDT)
Received: from google.com ([2620:15c:2cb:1:e90c:8e54:c2b4:29e7])
 by smtp.gmail.com with ESMTPSA id m4sm38563517pgs.71.2019.07.18.17.08.38
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Thu, 18 Jul 2019 17:08:39 -0700 (PDT)
Date: Thu, 18 Jul 2019 17:08:34 -0700
From: Brendan Higgins <brendanhiggins@google.com>
To: Stephen Boyd <sboyd@kernel.org>
Subject: Re: [PATCH v9 04/18] kunit: test: add kunit_stream a std::stream
 like logger
Message-ID: <20190719000834.GA3228@google.com>
References: <20190712081744.87097-1-brendanhiggins@google.com>
 <20190712081744.87097-5-brendanhiggins@google.com>
 <20190715221554.8417320665@mail.kernel.org>
 <CAFd5g47ikJmA0uGoavAFsh+hQvDmgsOi26tyii0612R=rt7iiw@mail.gmail.com>
 <CAFd5g44_axVHNMBzxSURQB_-R+Rif7cZcg7PyZ_SS+5hcy5jZA@mail.gmail.com>
 <20190716175021.9CA412173C@mail.kernel.org>
 <CAFd5g453vXeSUCZenCk_CzJ-8a1ym9RaPo0NVF=FujF9ac-5Ag@mail.gmail.com>
 <20190718175024.C3EC421019@mail.kernel.org>
 <CAFd5g46a7C1+R6ZcE_SkqaYqgrH5Rx3M=X7orFyaMgFLDbeYYA@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <CAFd5g46a7C1+R6ZcE_SkqaYqgrH5Rx3M=X7orFyaMgFLDbeYYA@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-disposition:in-reply-to:user-agent;
 bh=yRmMofzH8EHSj6E3cUHEuNcWCBCVICedNp+mVFhoif4=;
 b=ZuZqh7QuADeUza5BhAWEENNvaV0g0jd5nez4wU52/esfttZou3UuBOkS+0P5EYezOv
 mBCDIlx+aW0PO4LCr2vlr9Sq9eotO27QuwkPBoAs0D3UXufcpx8jCTXwdk+t5yDCyZ2o
 hBXAk3CnxyOvhHixlw611iwjS4vRpGSce5cdO8ltQEZhsFcllcdMKbwnDalmjBPDrr0F
 nncif+MnpHeS51AwyDcrldJhfUOIvLXnBYiBsqEbpqbnyVoreSCq8I3EkWt2w752mtOS
 lWuyh+9ifRutogenkD7RgfEviU0zYPe7i2PZsebsm0o8GwEQeuKjYmDDxpExuTOiM9DB
 XXrQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Petr Mladek <pmladek@suse.com>,
 "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
 Peter Zijlstra <peterz@infradead.org>, Amir Goldstein <amir73il@gmail.com>,
 dri-devel <dri-devel@lists.freedesktop.org>,
 Sasha Levin <Alexander.Levin@microsoft.com>,
 Masahiro Yamada <yamada.masahiro@socionext.com>,
 Michael Ellerman <mpe@ellerman.id.au>,
 "open list:KERNEL SELFTEST FRAMEWORK" <linux-kselftest@vger.kernel.org>,
 shuah <shuah@kernel.org>, linux-nvdimm <linux-nvdimm@lists.01.org>,
 Frank Rowand <frowand.list@gmail.com>, Knut Omang <knut.omang@oracle.com>,
 Kieran Bingham <kieran.bingham@ideasonboard.com>, wfg@linux.intel.com,
 Joel Stanley <joel@jms.id.au>, David Rientjes <rientjes@google.com>,
 Jeff Dike <jdike@addtoit.com>, Dan Carpenter <dan.carpenter@oracle.com>,
 devicetree <devicetree@vger.kernel.org>,
 linux-kbuild <linux-kbuild@vger.kernel.org>, "Bird,
 Timothy" <Tim.Bird@sony.com>, linux-um@lists.infradead.org,
 Steven Rostedt <rostedt@goodmis.org>, Julia Lawall <julia.lawall@lip6.fr>,
 Josh Poimboeuf <jpoimboe@redhat.com>, kunit-dev@googlegroups.com,
 Theodore Ts'o <tytso@mit.edu>, Richard Weinberger <richard@nod.at>,
 Greg KH <gregkh@linuxfoundation.org>, Randy Dunlap <rdunlap@infradead.org>,
 Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
 Luis Chamberlain <mcgrof@kernel.org>, Kees Cook <keescook@google.com>,
 linux-fsdevel@vger.kernel.org, Logan Gunthorpe <logang@deltatee.com>,
 Kevin Hilman <khilman@baylibre.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gVGh1LCBKdWwgMTgsIDIwMTkgYXQgMTI6MjI6MzNQTSAtMDcwMCwgQnJlbmRhbiBIaWdnaW5z
IHdyb3RlOgo+IE9uIFRodSwgSnVsIDE4LCAyMDE5IGF0IDEwOjUwIEFNIFN0ZXBoZW4gQm95ZCA8
c2JveWRAa2VybmVsLm9yZz4gd3JvdGU6Cj4gPgo+ID4gUXVvdGluZyBCcmVuZGFuIEhpZ2dpbnMg
KDIwMTktMDctMTYgMTE6NTI6MDEpCj4gPiA+IE9uIFR1ZSwgSnVsIDE2LCAyMDE5IGF0IDEwOjUw
IEFNIFN0ZXBoZW4gQm95ZCA8c2JveWRAa2VybmVsLm9yZz4gd3JvdGU6ClsuLi5dCj4gPiBEbyB5
b3UgaGF2ZSBhIGxpbmsgdG8gdGhvc2UgZWFybGllciBwYXRjaGVzPwo+IAo+IFRoaXMgaXMgdGhl
IGZpcnN0IHBhdGNoc2V0Ogo+IAo+IGh0dHBzOi8vd3d3Lm1haWwtYXJjaGl2ZS5jb20vbGludXgt
a2VybmVsQHZnZXIua2VybmVsLm9yZy9tc2cxNzg4MDU3Lmh0bWwKPiAKPiBJbiBwYXJ0aWN1bGFy
IHlvdSBjYW4gc2VlIHRoZSBjb2RlIGZvciBtYXRjaGluZyBmdW5jdGlvbnMgaGVyZToKPiAKPiBo
dHRwczovL3d3dy5tYWlsLWFyY2hpdmUuY29tL2xpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcv
bXNnMTc4ODA3My5odG1sCj4gCj4gQW5kIHBhcmFtZXRlciBtYXRjaGluZyBjb2RlIGhlcmU6Cj4g
Cj4gaHR0cHM6Ly93d3cubWFpbC1hcmNoaXZlLmNvbS9saW51eC1rZXJuZWxAdmdlci5rZXJuZWwu
b3JnL21zZzE3ODgwNzIuaHRtbAo+IAo+IGh0dHBzOi8vd3d3Lm1haWwtYXJjaGl2ZS5jb20vbGlu
dXgta2VybmVsQHZnZXIua2VybmVsLm9yZy9tc2cxNzg4MDg2Lmh0bWwKPiAKPiBNeSBhcG9sb2dp
ZXMgaW4gYWR2YW5jZSwgYnV0IHRoZSBjb2RlIGF0IHRoaXMgZWFybHkgc3RhZ2UgaGFkIG5vdAo+
IGFkb3B0ZWQgdGhlIGt1bml0XyogcHJlZml4IGFuZCB3YXMgc3RpbGwgdXNpbmcgdGhlIHRlc3Rf
KiBhbmQgbW9ja18qCj4gcHJlZml4LiAoSGVuY2UsIHN0cnVjdCBrdW5pdF9zdHJlYW0gd2FzIGtu
b3duIGFzIHN0cnVjdCB0ZXN0X3N0cmVhbSkuClsuLi5dCj4gPiBUaGUgY3J1eCBvZiBteSBjb21w
bGFpbnQgaXMgdGhhdCB0aGUgc3RyaW5nIHN0cmVhbSBBUEkgaXMgdG9vIGxvb3NlbHkKPiA+IGRl
ZmluZWQgdG8gYmUgdXNhYmxlLiBJdCBhbGxvd3MgdGVzdHMgdG8gYnVpbGQgdXAgYSBzdHJpbmcg
b2YKPiA+IHVuc3RydWN0dXJlZCBpbmZvcm1hdGlvbiwgYnV0IHdpdGggY2VydGFpbiBjYWxsaW5n
IGNvbnN0cmFpbnRzIHNvIHdlCj4gPiBoYXZlIHRvIHRyZWFkIGNhcmVmdWxseS4gSWYgdGhlcmUg
d2FzIG1vcmUgc3RydWN0dXJlIHRvIHRoZSBkYXRhIHRoYXQncwo+ID4gYmVpbmcgcmVjb3JkZWQg
dGhlbiB0aGUgdGVzdCBjYXNlIHJ1bm5lciBjb3VsZCBvcGVyYXRlIG9uIHRoZSBkYXRhCj4gPiB3
aXRob3V0IGhhdmluZyB0byBkbyBzdHJpbmcvc3RyZWFtIG9wZXJhdGlvbnMsIGFsbG9jYXRpb25z
LCBldGMuIFRoaXMKPiA+IHdvdWxkIG1ha2UgdGhlIGFzc2VydGlvbiBsb2dpYyBtdWNoIG1vcmUg
Y29uY3JldGUgYW5kIHNwZWNpZmljIHRvIGt1bml0LAo+ID4gaW5zdGVhZCBvZiB0aGlzIHNtYWxs
IGt1bml0IHdyYXBwZXIgdGhhdCdzIGJlZW4gcGxhY2VkIG9uIHRvcCBvZiBzdHJpbmcKPiA+IHN0
cmVhbS4KPiAKPiBZZWFoLCBJIGNhbiBzZWUgdGhlIHBvaW50IG9mIHdhbnRpbmcgc29tZXRoaW5n
IHRoYXQgcHJvdmlkZXMgbW9yZQo+IHN0cnVjdHVyZSB0aGFuIHRoZSByYXcgYHN0cnVjdCBrdW5p
dF9zdHJlYW1gIGludGVyZmFjZS4gSW4gZmFjdCwgaXQgaXMKPiBzb21ldGhpbmcgSSBoYWQgYWxy
ZWFkeSBzdGFydGVkIHdvcmtpbmcgb24sIHdoZW4gSSBoYWQgZGV0ZXJtaW5lZCBpdAo+IHdvdWxk
IGJlIGEgbGFyZ2UgZWZmb3J0IHRvIGNhcHR1cmUgYWxsIHRoZSB2YXJpYXRpb25zLiBJIHdhcyBm
dXJ0aGVyCj4gcHV0IG9mZiBmcm9tIHRoZSBpZGVhIHdoZW4gSSBoYWQgYmVlbiBhc2tlZCB0byBj
b252ZXJ0IHRoZSBLVW5pdAo+IGludGVybWVkaWF0ZSBmb3JtYXQgZnJvbSB3aGF0IEkgd2FzIHVz
aW5nIHRvIFRBUCwgYmVjYXVzZSwgYXMgaXQgaXMsCj4gdGhlIGN1cnJlbnQgZGF0YSBwcmludGVk
IG91dCBieSBLVW5pdCBkb2Vzbid0IGNvbnRhaW4gYWxsIHRoZSBkYXRhIEkKPiB3b3VsZCBsaWtl
IHRvIHB1dCBpbiBpdCBpbiBhIHdheSB0aGF0IGJlc3QgdGFrZXMgYWR2YW50YWdlIG9mIHRoZSBU
QVAKPiBzcGVjaWZpY2F0aW9uLiBPbmUgcHJvYmxlbWF0aWMgYXJlYSBpbiBwYXJ0aWN1bGFyOiBU
QVAgYWxyZWFkeQo+IHByb3ZpZGVzIGEgd2F5IHRvIHByZXNlbnQgYSBsb3Qgb2YgdGhlIGRhdGEg
SSB3b3VsZCBsaWtlIHRvIGV4cG9ydCwKPiBidXQgaXQgaW52b2x2ZXMgSlNPTiBzZXJpYWxpemF0
aW9uIHdoaWNoIHdhcyBhbiBpZGVhIHRoYXQgc29tZSBvZiB0aGUKPiBvdGhlciByZXZpZXdlcnMg
dW5kZXJzdGFuZGFibHkgd2VyZW4ndCB0b28ga2VlbiBvbi4gVEFQIGFsc28gd2FudHMgdG8KPiBy
ZXBvcnQgZGF0YSBzb21lIHRpbWUgYWZ0ZXIgaXQgaXMgYXZhaWxhYmxlLCB3aGljaCBpcyBnZW5l
cmFsbHkgbm90IGEKPiBnb29kIGlkZWEgZm9yIHRlc3QgZGVidWcgaW5mb3JtYXRpb247IHlvdSB3
YW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGFzCj4gc29vbiBhcyB5b3UgY2FuIG9yIHlvdSByaXNr
IGNyYXNoaW5nIHdpdGggdGhlIGRhdGEgc3RpbGwgaW5zaWRlLgo+IAo+IEhlbmNlLCBJIGRlY2lk
ZWQgd2UgY291bGQgcHJvYmFibHkgc3BlbmQgYSBnb29kIGxvbmcgd2hpbGUgZGViYXRpbmcKPiBo
b3cgSSBwcmVzZW50IHRoZSBpbmZvcm1hdGlvbi4gU28gdGhlIGlkZWEgb2YgaGF2aW5nIGEgbG9v
c2UKPiBkZWZpbml0aW9uIHNlZW1lZCBhdHRyYWN0aXZlIHRvIG1lIGluIGl0cyBvd24gcmlnaHQg
c2luY2UgaXQgd291bGQKPiBsaWtlbHkgY29uZm9ybSB0byB3aGF0ZXZlciB3ZSBlbmRlZCB1cCBk
ZWNpZGluZyBpbiB0aGUgbG9uZyBydW4uIEFsc28sCj4gYWxsIHRoZSBiZXR0ZXIgdGhhdCBpdCB3
YXMgd2hhdCBJIGFscmVhZHkgaGFkIGFuZCBubyBvbmUgc2VlbWVkIHRvCj4gbWluZCB0b28gbXVj
aC4KPiAKPiBUaGUgb25seSBjb25zdGFudCBJIGV4cGVjdCBpcyB0aGF0IGBzdHJ1Y3Qga3VuaXRg
IHdpbGwgbGlrZWx5IG5lZWQgdG8KPiB0YWtlIGFuIGFic3RyYWN0IG9iamVjdCB3aXRoIGEgYGNv
bW1pdGAgbWV0aG9kLCBvciBhIGBmb3JtYXRgIG1ldGhvZAo+IG9yIHdoYXRldmVyIHNvIGl0IGNv
dWxkIGNvbnRyb2wgd2hlbiBkYXRhIHdhcyBnb2luZyB0byBiZSBwcmludGVkIG91dAo+IHRvIHRo
ZSB1c2VyLiBXZSB3aWxsIHByb2JhYmx5IGFsc28gdXNlIGEgc3RyaW5nIGJ1aWxkZXIgaW4gdGhl
cmUKPiBzb21ld2hlcmUuCj4gCj4gPiBUTDtEUjogSWYgd2UgY2FuIGdldCByaWQgb2YgdGhlIHN0
cmluZyBzdHJlYW0gQVBJIEknZCB2aWV3IHRoYXQgYXMgYW4KPiA+IGltcHJvdmVtZW50IGJlY2F1
c2UgYnVpbGRpbmcgYXJiaXRyYXJ5IHN0cmluZ3MgaW4gdGhlIGtlcm5lbCBpcyBjb21wbGV4LAo+
ID4gZXJyb3IgcHJvbmUgYW5kIGhhcyBjYWxsaW5nIGNvbnRleHQgY29uY2VybnMuCj4gCj4gVHJ1
ZS4gTm8gYXJndW1lbnQgdGhlcmUuCj4gCj4gPiBJcyB0aGUgaW50ZW50aW9uIHRoYXQgb3RoZXIg
Y29kZSBiZXNpZGVzIHVuaXQgdGVzdHMgd2lsbCB1c2UgdGhpcyBzdHJpbmcKPiA+IHN0cmVhbSBB
UEkgdG8gYnVpbGQgdXAgc3RyaW5ncz8gQW55IHRhcmdldHMgaW4gbWluZD8gVGhpcyB3b3VsZCBi
ZSBhCj4gPiBnb29kIHdheSB0byBnZXQgdGhlIEFQSSBtZXJnZWQgdXBzdHJlYW0gZ2l2ZW4gdGhh
dCBpdHMgMjAxOSBhbmQgd2UKPiA+IGhhdmVuJ3QgaGFkIHN1Y2ggYW4gQVBJIGluIHRoZSBrZXJu
ZWwgc28gZmFyLgo+IAo+IFNvbWVvbmUsICh3YXMgaXQgeW91PykgYXNrZWQgYWJvdXQgY29kZSBz
aGFyaW5nIHdpdGggYSBzdHJpbmcgYnVpbGRlcgo+IHRoaW5neSB0aGF0IHdhcyB1c2VkIGZvciBj
cmVhdGluZyBzdHJ1Y3R1cmVkIGh1bWFuIHJlYWRhYmxlIGZpbGVzLCBidXQKPiB0aGF0IHNlZW1l
ZCBsaWtlIGEgcHJldHR5IG1hc3NpdmUgdW5kZXJ0YWtpbmcuCj4gCj4gQXNpZGUgZnJvbSB0aGF0
LCBuby4gSSB3b3VsZCBraW5kIG9mIHByZWZlcmVkIHRoYXQgbm9ib2R5IHVzZWQgaXQgZm9yCj4g
YW55dGhpbmcgZWxzZSBiZWNhdXNlIEkgdGhlIGlzc3VlcyB5b3UgZGVzY3JpYmVkLgo+IAo+IE5l
dmVydGhlbGVzcywgSSB0aGluayB0aGUgZGViYXRlIG92ZXIgdGhlIHVzZWZ1bG5lc3Mgb2YgdGhl
Cj4gc3RyaW5nX3N0cmVhbSBhbmQga3VuaXRfc3RyZWFtIGFyZSBzZXBhcmF0ZSB0b3BpY3MuIEV2
ZW4gaWYgd2UgbWFkZQo+IGt1bml0X3N0cmVhbSBtb3JlIHN0cnVjdHVyZWQsIEkgYW0gcHJldHR5
IHN1cmUgSSB3b3VsZCB3YW50IHRvIHVzZQo+IHN0cmluZ19zdHJlYW0gb3Igc29tZSB2YXJpYXRp
b24gZm9yIGNvbnN0cnVjdGluZyB0aGUgbWVzc2FnZS4KPiAKPiA+IEFuICJvYmplY3Qgb3JpZW50
ZWQiIChzdHJvbmcgcXVvdGVzISkgYXBwcm9hY2ggd2hlcmUga3VuaXRfZmFpbF9tc2cgaXMKPiA+
IHRoZSBpbm5lcm1vc3Qgc3RydWN0IGluIHNvbWUgYXNzZXJ0aW9uIHNwZWNpZmljIHN0cnVjdHVy
ZSBtaWdodCB3b3JrCj4gPiBuaWNlbHkgYW5kIGFsbG93IHRoZSB0ZXN0IHJ1bm5lciB0byBjYWxs
IGEgZ2VuZXJpYyAnZm9ybWF0JyBmdW5jdGlvbiB0bwo+ID4gcHJpbnQgb3V0IHRoZSBtZXNzYWdl
IGJhc2VkIG9uIHRoZSB0eXBlIG9mIGFzc2VydGlvbi9leHBlY3RhdGlvbiBpdCBpcy4KPiA+IEl0
IHByb2JhYmx5IHdvdWxkIG1lYW4gbGVzcyBjb2RlIHNpemUgdG9vIGJlY2F1c2UgdGhlIHN0cmlu
Z3MgdGhhdCBhcmUKPiA+IGNvbW1vbiB3aWxsIGJlIGluIHRoZSBjb21tb24gcHJpbnRpbmcgZnVu
Y3Rpb24gaW5zdGVhZCBvZiBjcmVhdGVkIHR3aWNlLAo+ID4gaW4gdGhlIG1hY3Jvcy9jb2RlIGFu
ZCB0aGVuIGNvcGllZCB0byB0aGUgaGVhcCBmb3IgdGhlIHN0cmluZyBzdHJlYW0uCj4gPgo+ID4g
ICAgICAgICBzdHJ1Y3Qga3VuaXRfYXNzZXJ0IHsKPiA+ICAgICAgICAgICAgICAgICBjb25zdCBj
aGFyICpsaW5lOwo+ID4gICAgICAgICAgICAgICAgIGNvbnN0IGNoYXIgKmZpbGU7Cj4gPiAgICAg
ICAgICAgICAgICAgY29uc3QgY2hhciAqZnVuYzsKPiA+ICAgICAgICAgICAgICAgICB2b2lkICgq
Zm9ybWF0KShzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQpOwo+ID4gICAgICAgICB9Owo+ID4K
PiA+ICAgICAgICAgc3RydWN0IGt1bml0X2NvbXBhcmlzb25fYXNzZXJ0IHsKPiA+ICAgICAgICAg
ICAgICAgICBlbnVtIG9wZXJhdG9yIG9wZXJhdG9yOwo+ID4gICAgICAgICAgICAgICAgIGNvbnN0
IGNoYXIgKmxlZnQ7Cj4gPiAgICAgICAgICAgICAgICAgY29uc3QgY2hhciAqcmlnaHQ7Cj4gPiAg
ICAgICAgICAgICAgICAgc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7Cj4gPiAgICAgICAgIH07
Cj4gPgo+ID4gICAgICAgICBzdHJ1Y3Qga3VuaXRfYm9vbF9hc3NlcnQgewo+ID4gICAgICAgICAg
ICAgICAgIGNvbnN0IGNoYXIgKnRydXRoOwo+ID4gICAgICAgICAgICAgICAgIGNvbnN0IGNoYXIg
KnN0YXRlbWVudDsKPiA+ICAgICAgICAgICAgICAgICBzdHJ1Y3Qga3VuaXRfYXNzZXJ0IGFzc2Vy
dDsKPiA+ICAgICAgICAgfTsKPiA+Cj4gPiAgICAgICAgIHZvaWQga3VuaXRfZm9ybWF0X2NvbXBh
cmlzb24oc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0KQo+ID4gICAgICAgICB7Cj4gPiAgICAg
ICAgICAgICAgICAgc3RydWN0IGt1bml0X2NvbXBhcmlzb25fYXNzZXJ0ICpjb21wID0gY29udGFp
bmVyX29mKGFzc2VydCwgLi4uKQo+ID4KPiA+ICAgICAgICAgICAgICAgICBrdW5pdF9wcmludGso
Li4uKQo+ID4gICAgICAgICB9CgpJIHN0YXJ0ZWQgcG9raW5nIGFyb3VuZCB3aXRoIHlvdXIgc3Vn
Z2VzdGlvbiB3aGlsZSB3ZSBhcmUgd2FpdGluZy4gQQpjb3VwbGUgZWFybHkgb2JzZXJ2YXRpb25z
OgoKMSkgSXQgaXMgYWN0dWFsbHkgZWFzaWVyIHRvIGRvIHRoYW4gSSBwcmV2aW91c2x5IHRob3Vn
aHQgYW5kIHdpbGwgcHJvYmFibHkKICAgaGVscCB3aXRoIGdldHRpbmcgbW9yZSBvZiB0aGUgcGxh
bm5lZCBUQVAgb3V0cHV0IHN0dWZmIHdvcmtpbmcuCgogICBUaGF0IGJlaW5nIHNhaWQsIHRoaXMg
aXMgc3RpbGwgYSBwcmV0dHkgc3Vic3RhbnRpYWwgdW5kZXJ0YWtpbmcgYW5kCiAgIHdpbGwgbGlr
ZWx5IHRha2UgKmF0IGxlYXN0KiBhIHdlZWsgdG8gaW1wbGVtZW50IGFuZCBwcm9wZXJseSByZXZp
ZXcuCiAgIEFzc3VtaW5nIGV2ZXJ5dGhpbmcgZ29lcyBleHRyZW1lbHkgd2VsbCAobm8gdW5leHBl
Y3RlZCBpc3N1ZXMgb24gbXkKICAgZW5kLCB2ZXJ5IHJlc3BvbnNpdmUgcmV2aWV3ZXJzLCBldGMp
LgoKMikgSXQgKndpbGwqIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Iga3VuaXRfc3RyZWFtLgoKMykg
Li4uYnV0LCBpdCAqd2lsbCBub3QqIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc3RyaW5nX3N0cmVh
bS4KCkJhc2VkIG9uIG15IGVhcmx5IG9ic2VydmF0aW9ucywgSSBkbyB0aGluayBpdCBpcyB3b3J0
aCBkb2luZywgYnV0IEkKZG9uJ3QgdGhpbmsgaXQgaXMgd29ydGggdHJ5aW5nIHRvIG1ha2UgaXQg
aW4gdGhpcyBwYXRjaHNldCAodW5sZXNzIEkKaGF2ZSBhbHJlYWR5IG1pc3NlZCB0aGUgd2luZG93
LCBvciBpdCBpcyBnb2luZyB0byBiZSBvcGVuIGZvciBhIHdoaWxlKToKSSBkbyB0aGluayBpdCB3
aWxsIG1ha2UgdGhpbmdzIG11Y2ggY2xlYW5lciwgYnV0IEkgZG9uJ3QgdGhpbmsgaXQgd2lsbAph
Y2hpZXZlIHlvdXIgZGVzaXJlZCBnb2FsIG9mIGdldHRpbmcgcmlkIG9mIGFuIHVuc3RydWN0dXJl
ZAp7a3VuaXR8c3RyaW5nfV9zdHJlYW0gc3R5bGUgaW50ZXJmYWNlOyBpdCBqdXN0IGFkZHMgYSBs
YXllciBvbiB0b3Agb2YgaXQKdGhhdCBtYWtlcyBpdCBoYXJkZXIgdG8gbWlzdXNlLgoKSSBhdHRh
Y2hlZCBhIHBhdGNoIG9mIHdoYXQgSSBoYXZlIHNvIGZhciBhdCB0aGUgZW5kIG9mIHRoaXMgZW1h
aWwgc28geW91CmNhbiBzZWUgd2hhdCBJIGFtIHRhbGtpbmcgYWJvdXQuIEFuZCBvZiBjb3Vyc2Us
IGlmIHlvdSBhZ3JlZSB3aXRoIG15CmFzc2Vzc21lbnQsIHNvIHdlIGNhbiBzdGFydCB3b3JraW5n
IG9uIGl0IGFzIGEgZnV0dXJlIHBhdGNoLgoKQSBjb3VwbGUgdGhpbmdzIGluIHJlZ2FyZCB0byB0
aGUgcGF0Y2ggSSBhdHRhY2hlZDoKCjEpIEkgd3JvdGUgaXQgcHJldHR5IHF1aWNrbHkgc28gdGhl
cmUgYXJlIGFsbW9zdCBkZWZpbml0ZWx5IG1pc3Rha2VzLgogICBZb3Ugc2hvdWxkIGNvbnNpZGVy
IGl0IFJGQy4gSSBkaWQgdmVyaWZ5IGl0IGNvbXBpbGVzIHRob3VnaC4KCjIpIEFsc28sIEkgZGlk
IHVzZSBrdW5pdF9zdHJlYW0gaW4gd3JpdGluZyBpdDogYWxsIG9jY3VyZW5jZXMgc2hvdWxkIGJl
CiAgIHByZXR0eSBlYXN5IHRvIHJlcGxhY2Ugd2l0aCBzdHJpbmdfc3RyZWFtOyBuZXZlcnRoZWxl
c3MsIHRoZSByZWFzb24KICAgZm9yIHRoaXMgaXMganVzdCB0byBtYWtlIGl0IGVhc2llciB0byBw
bGF5IHdpdGggdGhlIGN1cnJlbnQgQVBJcy4gSQogICB3YW50ZWQgdG8gaGF2ZSBzb21ldGhpbmcg
d29ya2luZyBiZWZvcmUgSSB3ZW50IHRocm91Z2ggYSBiaWcgdGVkaW91cwogICByZWZhY3Rvcmlu
Zy4gU28gc29ycnkgaWYgaXQgY2F1c2VzIGFueSBjb25mdXNpb24uCgozKSBJIGFsc28gYmFzZWQg
dGhlIHBhdGNoIG9uIGFsbCB0aGUgS1VuaXQgcGF0Y2hlcyBJIGhhdmUgcXVldWVkIHVwCiAgIChp
bmNsdWRlcyB0aGluZ3MgbGlrZSBtb2NraW5nIGFuZCBzdWNoKSBzaW5jZSBJIHdhbnQgdG8gc2Vl
IGhvdyB0aGlzCiAgIHNlcmlhbGl6YXRpb24gdGhpbmcgd2lsbCB3b3JrIHdpdGggbW9ja3MgYW5k
IG1hdGNoZXJzIGFuZCB0aGluZ3MgbGlrZQogICB0aGF0LgoKPiBJIHN0YXJ0ZWQgd29ya2luZyBv
biBzb21ldGhpbmcgc2ltaWxhcmlzaCwgYnV0IGJ5IHRoZSB0aW1lIEkgZW5kZWQgdXAKPiBjb21p
bmcgdXAgd2l0aCBhIHBhcmVudCBvYmplY3Qgd2hvc2UgZGVmaW5pdGlvbiB3YXMgbG9vc2UgZW5v
dWdoIHRvCj4gc2F0aXNmeSBhbGwgdGhlIHByb3BlcnRpZXMgcmVxdWlyZWQgYnkgdGhlIGNoaWxk
IGNsYXNzZXMgaXQgZW5kZWQgdXAKPiBiYXNpY2FsbHkgYmVpbmcgdGhlIHNhbWUgYXMgd2hhdCBJ
IGhhdmUgbm93IGp1c3Qgd2l0aCBhIG1vcmUgY29tcGxleAo+IGhpZXJhcmNoeSBvZiBtZXNzYWdl
IG1hbmlwdWxhdGlvbiBsb2dpYy4KPiAKPiBPbiB0aGUgb3RoZXIgaGFuZCwgSSBkaWRuJ3QgaGF2
ZSB0aGUgaWRlYSBvZiBkb2luZyB0aGUgcGFyZW50IG9iamVjdAo+IHF1aXRlIHRoZSB3YXkgeW91
IGRpZCBhbmQgdGhhdCB3b3VsZCBjbGVhbiB1cCBhIGxvdCBvZiB0aGUgZHVwbGljYXRlZAo+IGZp
cnN0IGxpbmUgbG9naWMuCj4gCj4gSSB3b3VsZCBsaWtlIHRvIGdpdmUgaXQgYSB0cnksIGJ1dCBJ
IGFtIGFmcmFpZCBJIGFtIGdvaW5nIHRvIGdldAo+IHN1Y2tlZCBkb3duIGEgcmVhbGx5IGRlZXAg
cmFiYml0IGhvbGUuCj4gCj4gPiBNYXliZSBvdGhlciBwZW9wbGUgaGF2ZSBvcGluaW9ucyBoZXJl
IG9uIGlmIHlvdSBzaG91bGQgZG8gaXQgbm93IG9yCj4gPiBsYXRlci4gRnV0dXJlIGNvZGluZyBp
cyBub3QgYSBncmVhdCBhcmd1bWVudCBiZWNhdXNlIGl0J3MgaGFyZCB0bwo+ID4gcHJlZGljdCB0
aGUgZnV0dXJlLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhpcyBwYXRjaHNldCBpcyBpbiBnb29kIHNo
YXBlIHRvCj4gCj4gWWVhaCwgdGhhdCdzIGtpbmQgb2Ygd2h5IEkgYW0gYWZyYWlkIHRvIGdvIGRv
d24gdGhpcyByb2FkIHdoZW4gSSBoYXZlCj4gc29tZXRoaW5nIHRoYXQgd29ya3Mgbm93IGFuZCBJ
IGtub3cgd29ya3Mgd2l0aCB0aGUgbW9ja2luZyBzdHVmZiBJCj4gd2FudCB0byBkby4KPiAKPiBJ
IHdvdWxkIGxpa2UgdG8gdHJ5IHlvdXIgc3VnZ2VzdGlvbiwgYnV0IEkgd2FudCB0byB0cnkgdG8g
bWFrZSBpdCB3b3JrCj4gd2l0aCBteSBtb2NraW5nIHBhdGNoZXMgYmVmb3JlIEkgY29tbWl0IHRv
IGl0IGJlY2F1c2Ugb3RoZXJ3aXNlIEkgYW0KPiBqdXN0IGdvaW5nIHRvIGhhdmUgdG8gYmFjayBp
dCBvdXQgaW4gYSBmb2xsb3cgdXAgcGF0Y2hzZXQuCj4gCj4gPiBtZXJnZSBhbmQgSSdkIGxpa2Ug
dG8gdXNlIGl0IHRvIHdyaXRlIHVuaXQgdGVzdHMgZm9yIGNvZGUgSSBtYWludGFpbiBzbwo+ID4g
SSBkb24ndCB3YW50IHRvIHNlZSB0aGlzIHN0YWxsIG91dC4gU29ycnkgaWYgSSdtIG9wZW5pbmcg
dGhlIGNhbiBvZgo+ID4gd29ybXMgeW91J3JlIHRhbGtpbmcgYWJvdXQuCj4gCj4gRG9uJ3QgYmUg
c29ycnkuIEkgYWdyZWUgd2l0aCB5b3UgdGhhdCB0aGUga3VuaXRfc3RyZWFtIHN0dWZmIGlzIG5v
dCB2ZXJ5IHByZXR0eS4KPiAKPiBTaHVhaCwgaGF2ZSB3ZSBtaXNzZWQgdGhlIG1lcmdlIHdpbmRv
dyBmb3IgNS4zPwo+IAo+IEkgc2F3IHlvdSBvbmx5IHNlbnQgb25lIFBSIG91dCBzbyBmYXIgZm9y
IHRoaXMgcmVsZWFzZSwgYW5kIHRoZXJlCj4gd2Fzbid0IG11Y2ggaW4gaXQ7IEkgaW1hZ2luZSB5
b3UgYXJlIGdvaW5nIHRvIHNlbmQgYXQgbGVhc3Qgb25lIG1vcmU/Cj4gCj4gSSBmaWd1cmUsIGlm
IHdlIHN0aWxsIGdvdCB0aW1lIHRvIHRyeSBvdXQgeW91ciBzdWdnZXN0aW9uLCBTdGVwaGVuLCBu
bwo+IGhhcm0gaW4gdHJ5aW5nLgo+IAo+IEFsc28gaWYgd2UgbWlzc2VkIGl0LCB0aGVuIEkgaGF2
ZSBhbm90aGVyIGNvdXBsZSBtb250aHMgdG8gcGxheSBhcm91bmQgd2l0aCBpdC4KPiAKPiBXaGF0
IGRvIHlvdSB0aGluaz8KCkkgYXR0YWNoZWQgdGhlIHBhdGNoIG1lbnRpb25lZCBhYm92ZSBiZWxv
dy4gTGV0IG1lIGtub3cgd2hhdCB5b3UgdGhpbmshCgpDaGVlcnMhCgpGcm9tIDUzZDQ3NWQzZDU2
YWZjZjkyYjQ1MmM2ZDM0N2RiZWRmYTFhMTdkMzQgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZy
b206IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KRGF0ZTogVGh1
LCAxOCBKdWwgMjAxOSAxNjowODo1MiAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggdjFdIERPIE5PVCBN
RVJHRTogc3RhcnRlZCBwbGF5aW5nIGFyb3VuZCB3aXRoIHRoZQogc2VyaWFsaXphdGlvbiBhcGkK
Ci0tLQogaW5jbHVkZS9rdW5pdC9hc3NlcnQuaCB8IDEzMCArKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysKIGluY2x1ZGUva3VuaXQvbW9jay5oICAgfCAgIDQgKwoga3VuaXQvTWFrZWZpbGUg
ICAgICAgICB8ICAgMyArLQoga3VuaXQvYXNzZXJ0LmMgICAgICAgICB8IDE3OSArKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwoga3VuaXQvbW9jay5jICAgICAgICAgICB8
ICAgNiArLQogNSBmaWxlcyBjaGFuZ2VkLCAzMTggaW5zZXJ0aW9ucygrKSwgNCBkZWxldGlvbnMo
LSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2t1bml0L2Fzc2VydC5oCiBjcmVhdGUgbW9k
ZSAxMDA2NDQga3VuaXQvYXNzZXJ0LmMKCmRpZmYgLS1naXQgYS9pbmNsdWRlL2t1bml0L2Fzc2Vy
dC5oIGIvaW5jbHVkZS9rdW5pdC9hc3NlcnQuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAw
MDAwMDAwMDAwMDAwLi5lMDU0ZmRmZjQ2NDJmCi0tLSAvZGV2L251bGwKKysrIGIvaW5jbHVkZS9r
dW5pdC9hc3NlcnQuaApAQCAtMCwwICsxLDEzMCBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAgKi8KKy8qCisgKiBBc3NlcnRpb24gYW5kIGV4cGVjdGF0aW9uIHNlcmlhbGl6
YXRpb24gQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAqIEF1
dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICovCisK
KyNpZm5kZWYgX0tVTklUX0FTU0VSVF9ICisjZGVmaW5lIF9LVU5JVF9BU1NFUlRfSAorCisjaW5j
bHVkZSA8a3VuaXQvdGVzdC5oPgorI2luY2x1ZGUgPGt1bml0L21vY2suaD4KKworZW51bSBrdW5p
dF9hc3NlcnRfdHlwZSB7CisJS1VOSVRfQVNTRVJUSU9OLAorCUtVTklUX0VYUEVDVEFUSU9OLAor
fTsKKworc3RydWN0IGt1bml0X2Fzc2VydCB7CisJZW51bSBrdW5pdF9hc3NlcnRfdHlwZSB0eXBl
OworCWNvbnN0IGNoYXIgKmxpbmU7CisJY29uc3QgY2hhciAqZmlsZTsKKwlzdHJ1Y3QgdmFfZm9y
bWF0IG1lc3NhZ2U7CisJdm9pZCAoKmZvcm1hdCkoc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0
LAorCQkgICAgICAgc3RydWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtKTsKK307CisKK3ZvaWQga3Vu
aXRfYmFzZV9hc3NlcnRfZm9ybWF0KHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAg
ICAgIHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSk7CisKK3ZvaWQga3VuaXRfYXNzZXJ0X3By
aW50X21zZyhzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkgICAgc3RydWN0IGt1bml0
X3N0cmVhbSAqc3RyZWFtKTsKKworc3RydWN0IGt1bml0X3VuYXJ5X2Fzc2VydCB7CisJc3RydWN0
IGt1bml0X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hhciAqY29uZGl0aW9uOworCWJvb2wgZXhw
ZWN0ZWRfdHJ1ZTsKK307CisKK3ZvaWQga3VuaXRfdW5hcnlfYXNzZXJ0X2Zvcm1hdChzdHJ1Y3Qg
a3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkgICAgICAgc3RydWN0IGt1bml0X3N0cmVhbSAqc3Ry
ZWFtKTsKKworc3RydWN0IGt1bml0X3B0cl9ub3RfZXJyX2Fzc2VydCB7CisJc3RydWN0IGt1bml0
X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hhciAqdGV4dDsKKwl2b2lkICp2YWx1ZTsKK307CisK
K3ZvaWQga3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0X2Zvcm1hdChzdHJ1Y3Qga3VuaXRfYXNzZXJ0
ICphc3NlcnQsCisJCQkJICAgICBzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pOworCitzdHJ1
Y3Qga3VuaXRfYmluYXJ5X2Fzc2VydCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7CisJ
Y29uc3QgY2hhciAqb3BlcmF0aW9uOworCWNvbnN0IGNoYXIgKmxlZnRfdGV4dDsKKwlsb25nIGxv
bmcgbGVmdF92YWx1ZTsKKwljb25zdCBjaGFyICpyaWdodF90ZXh0OworCWxvbmcgbG9uZyByaWdo
dF92YWx1ZTsKK307CisKK3ZvaWQga3VuaXRfYmluYXJ5X2Fzc2VydF9mb3JtYXQoc3RydWN0IGt1
bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJCXN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSk7CisK
K3N0cnVjdCBrdW5pdF9iaW5hcnlfcHRyX2Fzc2VydCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBh
c3NlcnQ7CisJY29uc3QgY2hhciAqb3BlcmF0aW9uOworCWNvbnN0IGNoYXIgKmxlZnRfdGV4dDsK
Kwl2b2lkICpsZWZ0X3ZhbHVlOworCWNvbnN0IGNoYXIgKnJpZ2h0X3RleHQ7CisJdm9pZCAqcmln
aHRfdmFsdWU7Cit9OworCit2b2lkIGt1bml0X2JpbmFyeV9wdHJfYXNzZXJ0X2Zvcm1hdChzdHJ1
Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0
cmVhbSk7CisKK3N0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydCB7CisJc3RydWN0IGt1bml0
X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hhciAqb3BlcmF0aW9uOworCWNvbnN0IGNoYXIgKmxl
ZnRfdGV4dDsKKwljb25zdCBjaGFyICpsZWZ0X3ZhbHVlOworCWNvbnN0IGNoYXIgKnJpZ2h0X3Rl
eHQ7CisJY29uc3QgY2hhciAqcmlnaHRfdmFsdWU7Cit9OworCit2b2lkIGt1bml0X2JpbmFyeV9z
dHJfYXNzZXJ0X2Zvcm1hdChzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgIHN0
cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSk7CisKK3N0cnVjdCBrdW5pdF9tb2NrX2Fzc2VydCB7
CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7Cit9OworCitzdHJ1Y3Qga3VuaXRfbW9ja19u
b19leHBlY3RhdGlvbnMgeworCXN0cnVjdCBrdW5pdF9tb2NrX2Fzc2VydCBhc3NlcnQ7Cit9Owor
CitzdHJ1Y3Qga3VuaXRfbW9ja19kZWNsYXJhdGlvbiB7CisJY29uc3QgY2hhciAqZnVuY3Rpb25f
bmFtZTsKKwljb25zdCBjaGFyICoqdHlwZV9uYW1lczsKKwljb25zdCB2b2lkICoqcGFyYW1zOwor
CWludCBsZW47Cit9OworCit2b2lkIGt1bml0X21vY2tfZGVjbGFyYXRpb25fZm9ybWF0KHN0cnVj
dCBrdW5pdF9tb2NrX2RlY2xhcmF0aW9uICpkZWNsYXJhdGlvbiwKKwkJCQkgICBzdHJ1Y3Qga3Vu
aXRfc3RyZWFtICpzdHJlYW0pOworCitzdHJ1Y3Qga3VuaXRfbWF0Y2hlcl9yZXN1bHQgeworCXN0
cnVjdCBrdW5pdF9hc3NlcnQgYXNzZXJ0OworfTsKKworc3RydWN0IGt1bml0X21vY2tfZmFpbGVk
X21hdGNoIHsKKwlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7CisJY29uc3QgY2hhciAqZXhwZWN0YXRp
b25fdGV4dDsKKwlzdHJ1Y3Qga3VuaXRfbWF0Y2hlcl9yZXN1bHQgKm1hdGNoZXJfbGlzdDsKKwlz
aXplX3QgbWF0Y2hlcl9saXN0X2xlbjsKK307CisKK3ZvaWQga3VuaXRfbW9ja19mYWlsZWRfbWF0
Y2hfZm9ybWF0KHN0cnVjdCBrdW5pdF9tb2NrX2ZhaWxlZF9tYXRjaCAqbWF0Y2gsCisJCQkJICAg
IHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSk7CisKK3N0cnVjdCBrdW5pdF9tb2NrX25vX21h
dGNoIHsKKwlzdHJ1Y3Qga3VuaXRfbW9ja19hc3NlcnQgYXNzZXJ0OworCXN0cnVjdCBrdW5pdF9t
b2NrX2RlY2xhcmF0aW9uIGRlY2xhcmF0aW9uOworCXN0cnVjdCBsaXN0X2hlYWQgZmFpbGVkX21h
dGNoX2xpc3Q7Cit9OworCit2b2lkIGt1bml0X21vY2tfbm9fbWF0Y2hfZm9ybWF0KHN0cnVjdCBr
dW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pOwor
CisjZW5kaWYgLyogIF9LVU5JVF9BU1NFUlRfSCAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5p
dC9tb2NrLmggYi9pbmNsdWRlL2t1bml0L21vY2suaAppbmRleCAwMDFiOTZhZjYyZjFlLi41MmM5
ZTQyN2M4MzFiIDEwMDY0NAotLS0gYS9pbmNsdWRlL2t1bml0L21vY2suaAorKysgYi9pbmNsdWRl
L2t1bml0L21vY2suaApAQCAtMTQ0LDYgKzE0NCwxMCBAQCB2b2lkIG1vY2tfcmVnaXN0ZXJfZm9y
bWF0dGVyKHN0cnVjdCBtb2NrX3BhcmFtX2Zvcm1hdHRlciAqZm9ybWF0dGVyKTsKIAogdm9pZCBt
b2NrX3VucmVnaXN0ZXJfZm9ybWF0dGVyKHN0cnVjdCBtb2NrX3BhcmFtX2Zvcm1hdHRlciAqZm9y
bWF0dGVyKTsKIAordm9pZCBtb2NrX2Zvcm1hdF9wYXJhbShzdHJ1Y3Qga3VuaXRfc3RyZWFtICpz
dHJlYW0sCisJCSAgICAgICBjb25zdCBjaGFyICp0eXBlX25hbWUsCisJCSAgICAgICBjb25zdCB2
b2lkICpwYXJhbSk7CisKIHN0cnVjdCBtb2NrICptb2NrX2dldF9nbG9iYWxfbW9jayh2b2lkKTsK
IAogI2RlZmluZSBNT0NLKG5hbWUpIG5hbWUjI19tb2NrCmRpZmYgLS1naXQgYS9rdW5pdC9NYWtl
ZmlsZSBiL2t1bml0L01ha2VmaWxlCmluZGV4IGJiZjQzZmNmYjkzYTkuLjE0OWQ4NTZhMzBmMDQg
MTAwNjQ0Ci0tLSBhL2t1bml0L01ha2VmaWxlCisrKyBiL2t1bml0L01ha2VmaWxlCkBAIC0zLDcg
KzMsOCBAQCBvYmotJChDT05GSUdfS1VOSVQpICs9CQkJdGVzdC5vIFwKIAkJCQkJY29tbW9uLW1v
Y2tzLm8gXAogCQkJCQlzdHJpbmctc3RyZWFtLm8gXAogCQkJCQlrdW5pdC1zdHJlYW0ubyBcCi0J
CQkJCXRyeS1jYXRjaC5vCisJCQkJCXRyeS1jYXRjaC5vIFwKKwkJCQkJYXNzZXJ0Lm8KIAogb2Jq
LSQoQ09ORklHX0tVTklUX1RFU1QpICs9CQl0ZXN0LXRlc3QubyBcCiAJCQkJCXRlc3QtbW9jay5v
IFwKZGlmZiAtLWdpdCBhL2t1bml0L2Fzc2VydC5jIGIva3VuaXQvYXNzZXJ0LmMKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uNzViYjY5MjJhOTk0ZQotLS0gL2Rldi9u
dWxsCisrKyBiL2t1bml0L2Fzc2VydC5jCkBAIC0wLDAgKzEsMTc5IEBACisvLyBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMAorLyoKKyAqIEFzc2VydGlvbiBhbmQgZXhwZWN0YXRpb24g
c2VyaWFsaXphdGlvbiBBUEkuCisgKgorICogQ29weXJpZ2h0IChDKSAyMDE5LCBHb29nbGUgTExD
LgorICogQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+
CisgKi8KKyNpbmNsdWRlIDxrdW5pdC9hc3NlcnQuaD4KKwordm9pZCBrdW5pdF9iYXNlX2Fzc2Vy
dF9mb3JtYXQoc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJICAgICAgc3RydWN0IGt1
bml0X3N0cmVhbSAqc3RyZWFtKQoreworCWNvbnN0IGNoYXIgKmV4cGVjdF9vcl9hc3NlcnQ7CisK
KwlpZiAoYXNzZXJ0LT50eXBlID09IEtVTklUX0VYUEVDVEFUSU9OKQorCQlleHBlY3Rfb3JfYXNz
ZXJ0ID0gIkVYUEVDVEFUSU9OIjsKKwllbHNlCisJCWV4cGVjdF9vcl9hc3NlcnQgPSAiQVNTRVJU
SU9OIjsKKworCWt1bml0X3N0cmVhbV9hZGQoc3RyZWFtLCAiJXMgRkFJTEVEIGF0ICVzOiVzXG4i
LAorCQkJIGV4cGVjdF9vcl9hc3NlcnQsIGFzc2VydC0+ZmlsZSwgYXNzZXJ0LT5saW5lKTsKK30K
Kwordm9pZCBrdW5pdF9hc3NlcnRfcHJpbnRfbXNnKHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2Vy
dCwKKwkJCSAgICBzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pCit7CisJaWYgKGFzc2VydC0+
bWVzc2FnZS5mbXQpCisJCWt1bml0X3N0cmVhbV9hZGQoc3RyZWFtLCAiXG4lcFYiLCAmYXNzZXJ0
LT5tZXNzYWdlKTsKK30KKwordm9pZCBrdW5pdF91bmFyeV9hc3NlcnRfZm9ybWF0KHN0cnVjdCBr
dW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgICBzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJl
YW0pCit7CisJc3RydWN0IGt1bml0X3VuYXJ5X2Fzc2VydCAqdW5hcnlfYXNzZXJ0ID0gY29udGFp
bmVyX29mKAorCQkJYXNzZXJ0LCBzdHJ1Y3Qga3VuaXRfdW5hcnlfYXNzZXJ0LCBhc3NlcnQpOwor
CisJa3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFzc2VydCwgc3RyZWFtKTsKKwlpZiAodW5hcnlf
YXNzZXJ0LT5leHBlY3RlZF90cnVlKQorCQlrdW5pdF9zdHJlYW1fYWRkKHN0cmVhbSwKKwkJCQkg
Ilx0RXhwZWN0ZWQgJXMgdG8gYmUgdHJ1ZSwgYnV0IGlzIGZhbHNlXG4iLAorCQkJCSB1bmFyeV9h
c3NlcnQtPmNvbmRpdGlvbik7CisJZWxzZQorCQlrdW5pdF9zdHJlYW1fYWRkKHN0cmVhbSwKKwkJ
CQkgIlx0RXhwZWN0ZWQgJXMgdG8gYmUgZmFsc2UsIGJ1dCBpcyB0cnVlXG4iLAorCQkJCSB1bmFy
eV9hc3NlcnQtPmNvbmRpdGlvbik7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQsIHN0
cmVhbSk7Cit9CisKK3ZvaWQga3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0X2Zvcm1hdChzdHJ1Y3Qg
a3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgICBzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJl
YW0pCit7CisJc3RydWN0IGt1bml0X3B0cl9ub3RfZXJyX2Fzc2VydCAqcHRyX2Fzc2VydCA9IGNv
bnRhaW5lcl9vZigKKwkJCWFzc2VydCwgc3RydWN0IGt1bml0X3B0cl9ub3RfZXJyX2Fzc2VydCwg
YXNzZXJ0KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7CisJ
aWYgKCFwdHJfYXNzZXJ0LT52YWx1ZSkgeworCQlrdW5pdF9zdHJlYW1fYWRkKHN0cmVhbSwKKwkJ
CQkgIlx0RXhwZWN0ZWQgJXMgaXMgbm90IG51bGwsIGJ1dCBpc1xuIiwKKwkJCQkgcHRyX2Fzc2Vy
dC0+dGV4dCk7CisJfSBlbHNlIGlmIChJU19FUlIocHRyX2Fzc2VydC0+dmFsdWUpKSB7CisJCWt1
bml0X3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJCSAiXHRFeHBlY3RlZCAlcyBpcyBub3QgZXJyb3Is
IGJ1dCBpczogJWxkXG4iLAorCQkJCSBwdHJfYXNzZXJ0LT50ZXh0LAorCQkJCSBQVFJfRVJSKHB0
cl9hc3NlcnQtPnZhbHVlKSk7CisJfQorCWt1bml0X2Fzc2VydF9wcmludF9tc2coYXNzZXJ0LCBz
dHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9hc3NlcnRfZm9ybWF0KHN0cnVjdCBrdW5p
dF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pCit7CisJ
c3RydWN0IGt1bml0X2JpbmFyeV9hc3NlcnQgKmJpbmFyeV9hc3NlcnQgPSBjb250YWluZXJfb2Yo
CisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9iaW5hcnlfYXNzZXJ0LCBhc3NlcnQpOworCisJa3Vu
aXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFzc2VydCwgc3RyZWFtKTsKKwlrdW5pdF9zdHJlYW1fYWRk
KHN0cmVhbSwKKwkJCSAiXHRFeHBlY3RlZCAlcyAlcyAlcywgYnV0XG4iLAorCQkJIGJpbmFyeV9h
c3NlcnQtPmxlZnRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5vcGVyYXRpb24sCisJCQkgYmlu
YXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCk7CisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sICJcdFx0
JXMgPT0gJWxsZFxuIiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3RleHQsCisJCQkgYmluYXJ5
X2Fzc2VydC0+bGVmdF92YWx1ZSk7CisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sICJcdFx0JXMg
PT0gJWxsZCIsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCwKKwkJCSBiaW5hcnlfYXNz
ZXJ0LT5yaWdodF92YWx1ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQsIHN0cmVh
bSk7Cit9CisKK3ZvaWQga3VuaXRfYmluYXJ5X3B0cl9hc3NlcnRfZm9ybWF0KHN0cnVjdCBrdW5p
dF9hc3NlcnQgKmFzc2VydCwKKwkJCQkgICAgc3RydWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtKQor
eworCXN0cnVjdCBrdW5pdF9iaW5hcnlfcHRyX2Fzc2VydCAqYmluYXJ5X2Fzc2VydCA9IGNvbnRh
aW5lcl9vZigKKwkJCWFzc2VydCwgc3RydWN0IGt1bml0X2JpbmFyeV9wdHJfYXNzZXJ0LCBhc3Nl
cnQpOworCisJa3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFzc2VydCwgc3RyZWFtKTsKKwlrdW5p
dF9zdHJlYW1fYWRkKHN0cmVhbSwKKwkJCSAiXHRFeHBlY3RlZCAlcyAlcyAlcywgYnV0XG4iLAor
CQkJIGJpbmFyeV9hc3NlcnQtPmxlZnRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5vcGVyYXRp
b24sCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCk7CisJa3VuaXRfc3RyZWFtX2FkZChz
dHJlYW0sICJcdFx0JXMgPT0gJXBLXG4iLAorCQkJIGJpbmFyeV9hc3NlcnQtPmxlZnRfdGV4dCwK
KwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3ZhbHVlKTsKKwlrdW5pdF9zdHJlYW1fYWRkKHN0cmVh
bSwgIlx0XHQlcyA9PSAlcEsiLAorCQkJIGJpbmFyeV9hc3NlcnQtPnJpZ2h0X3RleHQsCisJCQkg
YmluYXJ5X2Fzc2VydC0+cmlnaHRfdmFsdWUpOworCWt1bml0X2Fzc2VydF9wcmludF9tc2coYXNz
ZXJ0LCBzdHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9zdHJfYXNzZXJ0X2Zvcm1hdChz
dHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9zdHJlYW0g
KnN0cmVhbSkKK3sKKwlzdHJ1Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQgKmJpbmFyeV9hc3Nl
cnQgPSBjb250YWluZXJfb2YoCisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fz
c2VydCwgYXNzZXJ0KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVh
bSk7CisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sCisJCQkgIlx0RXhwZWN0ZWQgJXMgJXMgJXMs
IGJ1dFxuIiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2Vy
dC0+b3BlcmF0aW9uLAorCQkJIGJpbmFyeV9hc3NlcnQtPnJpZ2h0X3RleHQpOworCWt1bml0X3N0
cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVzXG4iLAorCQkJIGJpbmFyeV9hc3NlcnQtPmxl
ZnRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3ZhbHVlKTsKKwlrdW5pdF9zdHJlYW1f
YWRkKHN0cmVhbSwgIlx0XHQlcyA9PSAlcyIsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4
dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdodF92YWx1ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50
X21zZyhhc3NlcnQsIHN0cmVhbSk7Cit9CisKK3ZvaWQga3VuaXRfbW9ja19kZWNsYXJhdGlvbl9m
b3JtYXQoc3RydWN0IGt1bml0X21vY2tfZGVjbGFyYXRpb24gKmRlY2xhcmF0aW9uLAorCQkJCSAg
IHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSkKK3sKKwlpbnQgaTsKKworCWt1bml0X3N0cmVh
bV9hZGQoc3RyZWFtLCAiJXMoIiwgZGVjbGFyYXRpb24tPmZ1bmN0aW9uX25hbWUpOworCWZvciAo
aSA9IDA7IGkgPCBkZWNsYXJhdGlvbi0+bGVuOyBpKyspIHsKKwkJbW9ja19mb3JtYXRfcGFyYW0o
c3RyZWFtLAorCQkJCSAgZGVjbGFyYXRpb24tPnR5cGVfbmFtZXNbaV0sCisJCQkJICBkZWNsYXJh
dGlvbi0+cGFyYW1zW2ldKTsKKwkJaWYgKGkgPCBkZWNsYXJhdGlvbi0+bGVuIC0gMSkKKwkJCWt1
bml0X3N0cmVhbV9hZGQoc3RyZWFtLCAiLCAiKTsKKwl9CisJa3VuaXRfc3RyZWFtX2FkZChzdHJl
YW0sICIpXG4iKTsKK30KKwordm9pZCBrdW5pdF9tb2NrX2ZhaWxlZF9tYXRjaF9mb3JtYXQoc3Ry
dWN0IGt1bml0X21vY2tfZmFpbGVkX21hdGNoICptYXRjaCwKKwkJCQkgICAgc3RydWN0IGt1bml0
X3N0cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF9tYXRjaGVyX3Jlc3VsdCAqcmVzdWx0
OworCXNpemVfdCBpOworCisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sCisJCQkgIlRyaWVkIGV4
cGVjdGF0aW9uOiAlcywgYnV0XG4iLAorCQkJIG1hdGNoLT5leHBlY3RhdGlvbl90ZXh0KTsKKwlm
b3IgKGkgPSAwOyBpIDwgbWF0Y2gtPm1hdGNoZXJfbGlzdF9sZW47IGkrKykgeworCQlyZXN1bHQg
PSAmbWF0Y2gtPm1hdGNoZXJfbGlzdFtpXTsKKwkJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sICJc
dCIpOworCQlyZXN1bHQtPmFzc2VydC5mb3JtYXQoJnJlc3VsdC0+YXNzZXJ0LCBzdHJlYW0pOwor
CQlrdW5pdF9zdHJlYW1fYWRkKHN0cmVhbSwgIlxuIik7CisJfQorfQorCit2b2lkIGt1bml0X21v
Y2tfbm9fbWF0Y2hfZm9ybWF0KHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1
Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0IGt1bml0X21vY2tfYXNzZXJ0ICpt
b2NrX2Fzc2VydCA9IGNvbnRhaW5lcl9vZigKKwkJCWFzc2VydCwgc3RydWN0IGt1bml0X21vY2tf
YXNzZXJ0LCBhc3NlcnQpOworCXN0cnVjdCBrdW5pdF9tb2NrX25vX21hdGNoICpub19tYXRjaCA9
IGNvbnRhaW5lcl9vZigKKwkJCW1vY2tfYXNzZXJ0LCBzdHJ1Y3Qga3VuaXRfbW9ja19ub19tYXRj
aCwgYXNzZXJ0KTsKKwlzdHJ1Y3Qga3VuaXRfbW9ja19mYWlsZWRfbWF0Y2ggKmV4cGVjdGF0aW9u
OworCisJa3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFzc2VydCwgc3RyZWFtKTsKKwlrdW5pdF9t
b2NrX2RlY2xhcmF0aW9uX2Zvcm1hdCgmbm9fbWF0Y2gtPmRlY2xhcmF0aW9uLCBzdHJlYW0pOwor
CisJbGlzdF9mb3JfZWFjaF9lbnRyeShleHBlY3RhdGlvbiwgJm5vX21hdGNoLT5mYWlsZWRfbWF0
Y2hfbGlzdCwgbm9kZSkKKwkJa3VuaXRfbW9ja19mYWlsZWRfbWF0Y2hfZm9ybWF0KGV4cGVjdGF0
aW9uLCBzdHJlYW0pOworfQpkaWZmIC0tZ2l0IGEva3VuaXQvbW9jay5jIGIva3VuaXQvbW9jay5j
CmluZGV4IGNjYjBhYmUxMTE0MDIuLmFiNDQxYTU4YTkxOGMgMTAwNjQ0Ci0tLSBhL2t1bml0L21v
Y2suYworKysgYi9rdW5pdC9tb2NrLmMKQEAgLTI2OSw5ICsyNjksOSBAQCBzdHJ1Y3QgbW9ja19w
YXJhbV9mb3JtYXR0ZXIgKm1vY2tfZmluZF9mb3JtYXR0ZXIoY29uc3QgY2hhciAqdHlwZV9uYW1l
KQogCXJldHVybiBOVUxMOwogfQogCi1zdGF0aWMgdm9pZCBtb2NrX2Zvcm1hdF9wYXJhbShzdHJ1
Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0sCi0JCQkgICAgICBjb25zdCBjaGFyICp0eXBlX25hbWUs
Ci0JCQkgICAgICBjb25zdCB2b2lkICpwYXJhbSkKK3ZvaWQgbW9ja19mb3JtYXRfcGFyYW0oc3Ry
dWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtLAorCQkgICAgICAgY29uc3QgY2hhciAqdHlwZV9uYW1l
LAorCQkgICAgICAgY29uc3Qgdm9pZCAqcGFyYW0pCiB7CiAJc3RydWN0IG1vY2tfcGFyYW1fZm9y
bWF0dGVyICpmb3JtYXR0ZXI7CiAKLS0gCjIuMjIuMC42NTcuZzk2MGU5MmQyNGYtZ29vZwoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1h
aWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
