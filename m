Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D6F478794F
	for <lists+dri-devel@lfdr.de>; Fri,  9 Aug 2019 14:04:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 652DA6EDF1;
	Fri,  9 Aug 2019 12:04:39 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from metis.ext.pengutronix.de (metis.ext.pengutronix.de
 [IPv6:2001:67c:670:201:290:27ff:fe1d:cc33])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 58A6789565
 for <dri-devel@lists.freedesktop.org>; Fri,  9 Aug 2019 12:04:29 +0000 (UTC)
Received: from dude02.hi.pengutronix.de ([2001:67c:670:100:1d::28]
 helo=dude02.pengutronix.de.)
 by metis.ext.pengutronix.de with esmtp (Exim 4.92)
 (envelope-from <l.stach@pengutronix.de>)
 id 1hw3dA-00055N-BQ; Fri, 09 Aug 2019 14:04:24 +0200
From: Lucas Stach <l.stach@pengutronix.de>
To: etnaviv@lists.freedesktop.org
Subject: [PATCH v3 5/8] drm/etnaviv: rework MMU handling
Date: Fri,  9 Aug 2019 14:04:21 +0200
Message-Id: <20190809120424.32679-5-l.stach@pengutronix.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190809120424.32679-1-l.stach@pengutronix.de>
References: <20190809120424.32679-1-l.stach@pengutronix.de>
MIME-Version: 1.0
X-SA-Exim-Connect-IP: 2001:67c:670:100:1d::28
X-SA-Exim-Mail-From: l.stach@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de);
 SAEximRunCond expanded to false
X-PTX-Original-Recipient: dri-devel@lists.freedesktop.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: patchwork-lst@pengutronix.de, kernel@pengutronix.de,
 dri-devel@lists.freedesktop.org, Russell King <linux+etnaviv@armlinux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyByZXdvcmtzIHRoZSBNTVUgaGFuZGxpbmcgdG8gbWFrZSBpdCBwb3NzaWJsZSB0byBoYXZl
IG11bHRpcGxlIE1NVSBjb250ZXh0cy4KQSBjb250ZXh0IGlzIGJhc2ljYWxseSBvbmUgaW5zdGFu
Y2Ugb2YgR1BVIHBhZ2UgdGFibGVzLiBDdXJyZW50bHkgd2UgaGF2ZSBvbmUKc2V0IG9mIHBhZ2Ug
dGFibGVzIHBlciBHUFUsIHdoaWNoIGlzbid0IGFsbCB0aGF0IGNsZXZlciwgYXMgaXQgaGFzIHRo
ZQpmb2xsb3dpbmcgdHdvIGNvbnNlcXVlbmNlczoKCjEuIEFsbCBHUFUgY2xpZW50cyAoYWthIHBy
b2Nlc3NlcykgYXJlIHNoYXJpbmcgdGhlIHNhbWUgcGFnZXRhYmxlcywgd2hpY2ggbWVhbnMKdGhl
cmUgaXMgbm8gaXNvbGF0aW9uIGJldHdlZW4gY2xpZW50cywgYnV0IG9ubHkgYmV0d2VlbiBHUFUg
YXNzaWduZWQgbWVtb3J5CnNwYWNlcyBhbmQgdGhlIHJlc3Qgb2YgdGhlIHN5c3RlbS4gQmV0dGVy
IHRoYW4gbm90aGluZywgYnV0IGFsc28gbm90IGdyZWF0LgoKMi4gQ2xpZW50cyBvcGVyYXRpbmcg
b24gdGhlIHNhbWUgc2V0IG9mIGJ1ZmZlcnMgd2l0aCBkaWZmZXJlbnQgZXRuYXZpdiBHUFUKY29y
ZXMsIGUuZy4gYSB3b3JrbG9hZCB1c2luZyBib3RoIHRoZSAyRCBhbmQgM0QgR1BVLCBuZWVkIHRv
IG1hcCB0aGUgdXNlZApidWZmZXJzIGludG8gdGhlIHBhZ2V0YWJsZSBzZXRzIG9mIGVhY2ggdXNl
ZCBHUFUuCgpUaGlzIHBhdGNoIHJld29ya3MgYWxsIHRoZSBNTVUgaGFuZGxpbmcgdG8gaW50cm9k
dWNlIHRoZSBhYnN0cmFjdGlvbiBvZiB0aGUKTU1VIGNvbnRleHQuIEEgY29udGV4dCBjYW4gYmUg
c2hhcmVkIGFjcm9zcyBkaWZmZXJlbnQgR1BVIGNvcmVzLCBhcyBsb25nIGFzCnRoZXkgaGF2ZSBj
b21wYXRpYmxlIE1NVSBpbXBsZW1lbnRhdGlvbnMsIHdoaWNoIGlzIHRoZSBjYXNlIGZvciBhbGwg
c3lzdGVtcwp3aXRoIFZpdmFudGUgR1BVcyBzZWVuIGluIHRoZSB3aWxkLgoKQXMgTU1VdjEgaXMg
bm90IGFibGUgdG8gY2hhbmdlIHBhZ2V0YWJsZXMgb24gdGhlIGZseSwgd2l0aG91dCBhCiJzdG9w
IHRoZSB3b3JsZCIgb3BlcmF0aW9uLCB3aGljaCBzdG9wcyBHUFUsIGNoYW5nZXMgcGFnZXRhYmxl
cyB2aWEgQ1BVCmludGVyYWN0aW9uLCByZXN0YXJ0cyBHUFUsIHRoZSBpbXBsZW1lbnRhdGlvbiBp
bnRyb2R1Y2VzIGEgc2hhcmVkIGNvbnRleHQgb24KTU1VdjEsIHdoaWNoIGlzIHJldHVybmVkIHdo
ZW5ldmVyIHRoZXJlIGlzIGEgcmVxdWVzdCBmb3IgYSBuZXcgY29udGV4dC4KClRoaXMgcGF0Y2gg
YXNzaWducyBhIE1NVSBjb250ZXh0IHRvIGVhY2ggR1BVLCBzbyBvbiBNTVV2MiBzeXN0ZW1zIHRo
ZXJlIGlzCnN0aWxsIG9uZSBzZXQgb2YgcGFnZXRhYmxlcyBwZXIgR1BVLCBidXQgZHVlIHRvIHRo
ZSBzaGFyZWQgY29udGV4dCBNTVV2MQpzeXN0ZW1zIHNlZSBhIGNoYW5nZSBpbiBiZWhhdmlvciBh
cyBub3cgYSBzaW5nbGUgcGFnZXRhYmxlIHNldCBpcyB1c2VkCmFjcm9zcyBhbGwgR1BVIGNvcmVz
LgoKU2lnbmVkLW9mZi1ieTogTHVjYXMgU3RhY2ggPGwuc3RhY2hAcGVuZ3V0cm9uaXguZGU+ClJl
dmlld2VkLWJ5OiBQaGlsaXBwIFphYmVsIDxwLnphYmVsQHBlbmd1dHJvbml4LmRlPgotLS0KdjM6
Ci0gbW92ZSBvcHMgZGVjbGFyYXRpb24gdG8gaGVhZGVyLgotIHJlbmFtZSBncHUgc3RydWN0IG1t
dSBtZW1iZXIgdG8gbW11X2NvbnRleHQgZm9yIGNvbnNpc3RlbmN5Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2V0bmF2aXYvZXRuYXZpdl9idWZmZXIuYyAgIHwgIDEwICstCiBkcml2ZXJzL2dwdS9kcm0v
ZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5jICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfY21kYnVmLmggICB8ICAgNiArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYv
ZXRuYXZpdl9kcnYuYyAgICAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5h
dml2X2Rydi5oICAgICAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZf
ZHVtcC5jICAgICB8ICAxMiArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0u
YyAgICAgIHwgIDI0ICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5oICAg
ICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmMgICAgICB8
ICAzMSArKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmggICAgICB8ICAg
MyArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5jICAgIHwgMTUxICsr
KysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5oICAgIHwg
IDIwIC0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11X3YyLmMgfCAyNjQg
KysrKysrKysrLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21t
dS5jICAgICAgfCAyNTkgKysrKysrKysrKysrLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfbW11LmggICAgICB8ICA5MSArKysrKy0tCiAxNSBmaWxlcyBjaGFuZ2VkLCA0
NjEgaW5zZXJ0aW9ucygrKSwgNDMwIGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAwNjQ0IGRy
aXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuaAoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRu
YXZpdi9ldG5hdml2X2J1ZmZlci5jCmluZGV4IGEzY2RiMjBiZmM1Zi4uNDMyNGIwOTg2ODlmIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZlci5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfYnVmZmVyLmMKQEAgLTIwNyw3ICsyMDcs
NyBAQCB1MTYgZXRuYXZpdl9idWZmZXJfY29uZmlnX21tdXYyKHN0cnVjdCBldG5hdml2X2dwdSAq
Z3B1LCB1MzIgbXRsYl9hZGRyLCB1MzIgc2FmZQogCXJldHVybiBidWZmZXItPnVzZXJfc2l6ZSAv
IDg7CiB9CiAKLXUxNiBldG5hdml2X2J1ZmZlcl9jb25maWdfcHRhKHN0cnVjdCBldG5hdml2X2dw
dSAqZ3B1KQordTE2IGV0bmF2aXZfYnVmZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1
ICpncHUsIHVuc2lnbmVkIHNob3J0IGlkKQogewogCXN0cnVjdCBldG5hdml2X2NtZGJ1ZiAqYnVm
ZmVyID0gJmdwdS0+YnVmZmVyOwogCkBAIC0yMTYsNyArMjE2LDcgQEAgdTE2IGV0bmF2aXZfYnVm
ZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJYnVmZmVyLT51c2VyX3Np
emUgPSAwOwogCiAJQ01EX0xPQURfU1RBVEUoYnVmZmVyLCBWSVZTX01NVXYyX1BUQV9DT05GSUcs
Ci0JCSAgICAgICBWSVZTX01NVXYyX1BUQV9DT05GSUdfSU5ERVgoMCkpOworCQkgICAgICAgVklW
U19NTVV2Ml9QVEFfQ09ORklHX0lOREVYKGlkKSk7CiAKIAlDTURfRU5EKGJ1ZmZlcik7CiAKQEAg
LTMxNSw3ICszMTUsNyBAQCB2b2lkIGV0bmF2aXZfYnVmZmVyX3F1ZXVlKHN0cnVjdCBldG5hdml2
X2dwdSAqZ3B1LCB1MzIgZXhlY19zdGF0ZSwKIAl1MzIgcmV0dXJuX3RhcmdldCwgcmV0dXJuX2R3
b3JkczsKIAl1MzIgbGlua190YXJnZXQsIGxpbmtfZHdvcmRzOwogCWJvb2wgc3dpdGNoX2NvbnRl
eHQgPSBncHUtPmV4ZWNfc3RhdGUgIT0gZXhlY19zdGF0ZTsKLQl1bnNpZ25lZCBpbnQgbmV3X2Zs
dXNoX3NlcSA9IFJFQURfT05DRShncHUtPm1tdS0+Zmx1c2hfc2VxKTsKKwl1bnNpZ25lZCBpbnQg
bmV3X2ZsdXNoX3NlcSA9IFJFQURfT05DRShncHUtPm1tdV9jb250ZXh0LT5mbHVzaF9zZXEpOwog
CWJvb2wgbmVlZF9mbHVzaCA9IGdwdS0+Zmx1c2hfc2VxICE9IG5ld19mbHVzaF9zZXE7CiAKIAls
b2NrZGVwX2Fzc2VydF9oZWxkKCZncHUtPmxvY2spOwpAQCAtMzM5LDcgKzMzOSw3IEBAIHZvaWQg
ZXRuYXZpdl9idWZmZXJfcXVldWUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHUzMiBleGVjX3N0
YXRlLAogCiAJCS8qIGZsdXNoIGNvbW1hbmQgKi8KIAkJaWYgKG5lZWRfZmx1c2gpIHsKLQkJCWlm
IChncHUtPm1tdS0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxKQorCQkJaWYgKGdwdS0+bW11
X2NvbnRleHQtPmdsb2JhbC0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxKQogCQkJCWV4dHJh
X2R3b3JkcyArPSAxOwogCQkJZWxzZQogCQkJCWV4dHJhX2R3b3JkcyArPSAzOwpAQCAtMzUzLDcg
KzM1Myw3IEBAIHZvaWQgZXRuYXZpdl9idWZmZXJfcXVldWUoc3RydWN0IGV0bmF2aXZfZ3B1ICpn
cHUsIHUzMiBleGVjX3N0YXRlLAogCiAJCWlmIChuZWVkX2ZsdXNoKSB7CiAJCQkvKiBBZGQgdGhl
IE1NVSBmbHVzaCAqLwotCQkJaWYgKGdwdS0+bW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVf
VjEpIHsKKwkJCWlmIChncHUtPm1tdV9jb250ZXh0LT5nbG9iYWwtPnZlcnNpb24gPT0gRVROQVZJ
Vl9JT01NVV9WMSkgewogCQkJCUNNRF9MT0FEX1NUQVRFKGJ1ZmZlciwgVklWU19HTF9GTFVTSF9N
TVUsCiAJCQkJCSAgICAgICBWSVZTX0dMX0ZMVVNIX01NVV9GTFVTSF9GRU1NVSB8CiAJCQkJCSAg
ICAgICBWSVZTX0dMX0ZMVVNIX01NVV9GTFVTSF9VTksxIHwKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9ldG5hdml2L2V0bmF2aXZfY21kYnVmLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2NtZGJ1Zi5jCmluZGV4IGIwYmFiYzBmNzIzMC4uZjM5NDMwYmEzNTkzIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfY21kYnVmLmMKQEAgLTYwLDE4ICs2MCwxOCBA
QCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY19uZXcoc3RydWN0IGRldmljZSAqZGV2KQogfQogCiBp
bnQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfbWFwKHN0cnVjdCBldG5hdml2X2NtZGJ1Zl9zdWJh
bGxvYyAqc3ViYWxsb2MsCi0JCQkJc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKKwkJCQlzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJCXN0cnVjdCBldG5hdml2X3Zy
YW1fbWFwcGluZyAqbWFwcGluZywKIAkJCQl1MzIgbWVtb3J5X2Jhc2UpCiB7Ci0JcmV0dXJuIGV0
bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3ZhKG1tdSwgbWFwcGluZywgbWVtb3J5X2Jhc2UsCisJ
cmV0dXJuIGV0bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3ZhKGNvbnRleHQsIG1hcHBpbmcsIG1l
bW9yeV9iYXNlLAogCQkJCQkgICAgIHN1YmFsbG9jLT5wYWRkciwgU1VCQUxMT0NfU0laRSk7CiB9
CiAKLXZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoc3RydWN0IGV0bmF2aXZfaW9t
bXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoc3RydWN0IGV0bmF2
aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkgICBzdHJ1Y3QgZXRuYXZpdl92cmFtX21h
cHBpbmcgKm1hcHBpbmcpCiB7Ci0JZXRuYXZpdl9pb21tdV9wdXRfc3ViYWxsb2NfdmEobW11LCBt
YXBwaW5nKTsKKwlldG5hdml2X2lvbW11X3B1dF9zdWJhbGxvY192YShjb250ZXh0LCBtYXBwaW5n
KTsKIH0KIAogdm9pZCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY19kZXN0cm95KHN0cnVjdCBldG5h
dml2X2NtZGJ1Zl9zdWJhbGxvYyAqc3ViYWxsb2MpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5oIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRu
YXZpdl9jbWRidWYuaAppbmRleCBhMjg2NjhlNDZlMjYuLmFkNmZkOGViMDM3OCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9jbWRidWYuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5oCkBAIC05LDcgKzksNyBAQAogI2luY2x1
ZGUgPGxpbnV4L3R5cGVzLmg+CiAKIHN0cnVjdCBkZXZpY2U7Ci1zdHJ1Y3QgZXRuYXZpdl9pb21t
dTsKK3N0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQ7CiBzdHJ1Y3QgZXRuYXZpdl92cmFtX21h
cHBpbmc7CiBzdHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2M7CiBzdHJ1Y3QgZXRuYXZpdl9w
ZXJmbW9uX3JlcXVlc3Q7CkBAIC0yOCwxMCArMjgsMTAgQEAgc3RydWN0IGV0bmF2aXZfY21kYnVm
X3N1YmFsbG9jICoKIGV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX25ldyhzdHJ1Y3QgZGV2aWNlICpk
ZXYpOwogdm9pZCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY19kZXN0cm95KHN0cnVjdCBldG5hdml2
X2NtZGJ1Zl9zdWJhbGxvYyAqc3ViYWxsb2MpOwogaW50IGV0bmF2aXZfY21kYnVmX3N1YmFsbG9j
X21hcChzdHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2MgKnN1YmFsbG9jLAotCQkJCXN0cnVj
dCBldG5hdml2X2lvbW11ICptbXUsCisJCQkJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAq
Y29udGV4dCwKIAkJCQlzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcsCiAJCQkJ
dTMyIG1lbW9yeV9iYXNlKTsKLXZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5t
YXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkgICBzdHJ1Y3Qg
ZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcpOwogCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X2Rydi5jCmluZGV4IDVmYTNhYTdiZGJjNS4uZWIwYzIzZmU5NzlhIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9ldG5hdml2L2V0bmF2aXZfZHJ2LmMKQEAgLTExOSw5ICsxMTksOSBAQCBzdGF0aWMgaW50
IGV0bmF2aXZfbW11X3Nob3coc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHN0cnVjdCBzZXFfZmls
ZSAqbSkKIAogCXNlcV9wcmludGYobSwgIkFjdGl2ZSBPYmplY3RzICglcyk6XG4iLCBkZXZfbmFt
ZShncHUtPmRldikpOwogCi0JbXV0ZXhfbG9jaygmZ3B1LT5tbXUtPmxvY2spOwotCWRybV9tbV9w
cmludCgmZ3B1LT5tbXUtPm1tLCAmcCk7Ci0JbXV0ZXhfdW5sb2NrKCZncHUtPm1tdS0+bG9jayk7
CisJbXV0ZXhfbG9jaygmZ3B1LT5tbXVfY29udGV4dC0+bG9jayk7CisJZHJtX21tX3ByaW50KCZn
cHUtPm1tdV9jb250ZXh0LT5tbSwgJnApOworCW11dGV4X3VubG9jaygmZ3B1LT5tbXVfY29udGV4
dC0+bG9jayk7CiAKIAlyZXR1cm4gMDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9l
dG5hdml2L2V0bmF2aXZfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Ry
di5oCmluZGV4IGUwNTJkN2RiNjZhZS4uNWY4ZGIwOGYxYzE3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfZHJ2LmgKQEAgLTIyLDYgKzIyLDcgQEAgc3RydWN0IGV0bmF2aXZfZ3B1Owog
c3RydWN0IGV0bmF2aXZfbW11Owogc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdDsKIHN0cnVjdCBl
dG5hdml2X2dlbV9zdWJtaXQ7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWw7CiAKIHN0cnVj
dCBldG5hdml2X2ZpbGVfcHJpdmF0ZSB7CiAJLyoKQEAgLTM3LDYgKzM4LDcgQEAgc3RydWN0IGV0
bmF2aXZfZHJtX3ByaXZhdGUgewogCXN0cnVjdCBldG5hdml2X2dwdSAqZ3B1W0VUTkFfTUFYX1BJ
UEVTXTsKIAogCXN0cnVjdCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvYyAqY21kYnVmX3N1YmFsbG9j
OworCXN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqbW11X2dsb2JhbDsKIAogCS8qIGxpc3Qg
b2YgR0VNIG9iamVjdHM6ICovCiAJc3RydWN0IG11dGV4IGdlbV9sb2NrOwpAQCAtNjksNyArNzEs
NyBAQCBpbnQgZXRuYXZpdl9nZW1fbmV3X3VzZXJwdHIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
c3RydWN0IGRybV9maWxlICpmaWxlLAogCXVpbnRwdHJfdCBwdHIsIHUzMiBzaXplLCB1MzIgZmxh
Z3MsIHUzMiAqaGFuZGxlKTsKIHUxNiBldG5hdml2X2J1ZmZlcl9pbml0KHN0cnVjdCBldG5hdml2
X2dwdSAqZ3B1KTsKIHUxNiBldG5hdml2X2J1ZmZlcl9jb25maWdfbW11djIoc3RydWN0IGV0bmF2
aXZfZ3B1ICpncHUsIHUzMiBtdGxiX2FkZHIsIHUzMiBzYWZlX2FkZHIpOwotdTE2IGV0bmF2aXZf
YnVmZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOwordTE2IGV0bmF2aXZf
YnVmZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHVuc2lnbmVkIHNob3J0
IGlkKTsKIHZvaWQgZXRuYXZpdl9idWZmZXJfZW5kKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsK
IHZvaWQgZXRuYXZpdl9zeW5jX3BvaW50X3F1ZXVlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LCB1
bnNpZ25lZCBpbnQgZXZlbnQpOwogdm9pZCBldG5hdml2X2J1ZmZlcl9xdWV1ZShzdHJ1Y3QgZXRu
YXZpdl9ncHUgKmdwdSwgdTMyIGV4ZWNfc3RhdGUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfZHVtcC5jCmluZGV4IDJjZTYwYmFhNGFkOS4uN2U2NzkxNTE3NjkzIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYwpAQCAtOTMsNyArOTMsNyBAQCBzdGF0aWMgdm9pZCBl
dG5hdml2X2NvcmVfZHVtcF9yZWdpc3RlcnMoc3RydWN0IGNvcmVfZHVtcF9pdGVyYXRvciAqaXRl
ciwKIH0KIAogc3RhdGljIHZvaWQgZXRuYXZpdl9jb3JlX2R1bXBfbW11KHN0cnVjdCBjb3JlX2R1
bXBfaXRlcmF0b3IgKml0ZXIsCi0Jc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwgc2l6ZV90IG1t
dV9zaXplKQorCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1tdSwgc2l6ZV90IG1tdV9z
aXplKQogewogCWV0bmF2aXZfaW9tbXVfZHVtcChtbXUsIGl0ZXItPmRhdGEpOwogCkBAIC0xMjUs
OSArMTI1LDkgQEAgdm9pZCBldG5hdml2X2NvcmVfZHVtcChzdHJ1Y3QgZXRuYXZpdl9nZW1fc3Vi
bWl0ICpzdWJtaXQpCiAJCXJldHVybjsKIAlldG5hdml2X2R1bXBfY29yZSA9IGZhbHNlOwogCi0J
bXV0ZXhfbG9jaygmZ3B1LT5tbXUtPmxvY2spOworCW11dGV4X2xvY2soJmdwdS0+bW11X2NvbnRl
eHQtPmxvY2spOwogCi0JbW11X3NpemUgPSBldG5hdml2X2lvbW11X2R1bXBfc2l6ZShncHUtPm1t
dSk7CisJbW11X3NpemUgPSBldG5hdml2X2lvbW11X2R1bXBfc2l6ZShncHUtPm1tdV9jb250ZXh0
KTsKIAogCS8qIFdlIGFsd2F5cyBkdW1wIHJlZ2lzdGVycywgbW11LCByaW5nLCBoYW5naW5nIGNt
ZGJ1ZiBhbmQgZW5kIG1hcmtlciAqLwogCW5fb2JqID0gNTsKQEAgLTE1Nyw3ICsxNTcsNyBAQCB2
b2lkIGV0bmF2aXZfY29yZV9kdW1wKHN0cnVjdCBldG5hdml2X2dlbV9zdWJtaXQgKnN1Ym1pdCkK
IAlpdGVyLnN0YXJ0ID0gX192bWFsbG9jKGZpbGVfc2l6ZSwgR0ZQX0tFUk5FTCB8IF9fR0ZQX05P
V0FSTiB8IF9fR0ZQX05PUkVUUlksCiAJCQkgICAgICAgUEFHRV9LRVJORUwpOwogCWlmICghaXRl
ci5zdGFydCkgewotCQltdXRleF91bmxvY2soJmdwdS0+bW11LT5sb2NrKTsKKwkJbXV0ZXhfdW5s
b2NrKCZncHUtPm1tdV9jb250ZXh0LT5sb2NrKTsKIAkJZGV2X3dhcm4oZ3B1LT5kZXYsICJmYWls
ZWQgdG8gYWxsb2NhdGUgZGV2Y29yZWR1bXAgZmlsZVxuIik7CiAJCXJldHVybjsKIAl9CkBAIC0x
NjksNyArMTY5LDcgQEAgdm9pZCBldG5hdml2X2NvcmVfZHVtcChzdHJ1Y3QgZXRuYXZpdl9nZW1f
c3VibWl0ICpzdWJtaXQpCiAJbWVtc2V0KGl0ZXIuaGRyLCAwLCBpdGVyLmRhdGEgLSBpdGVyLnN0
YXJ0KTsKIAogCWV0bmF2aXZfY29yZV9kdW1wX3JlZ2lzdGVycygmaXRlciwgZ3B1KTsKLQlldG5h
dml2X2NvcmVfZHVtcF9tbXUoJml0ZXIsIGdwdS0+bW11LCBtbXVfc2l6ZSk7CisJZXRuYXZpdl9j
b3JlX2R1bXBfbW11KCZpdGVyLCBncHUtPm1tdV9jb250ZXh0LCBtbXVfc2l6ZSk7CiAJZXRuYXZp
dl9jb3JlX2R1bXBfbWVtKCZpdGVyLCBFVERVTVBfQlVGX1JJTkcsIGdwdS0+YnVmZmVyLnZhZGRy
LAogCQkJICAgICAgZ3B1LT5idWZmZXIuc2l6ZSwKIAkJCSAgICAgIGV0bmF2aXZfY21kYnVmX2dl
dF92YSgmZ3B1LT5idWZmZXIsCkBAIC0yMjEsNyArMjIxLDcgQEAgdm9pZCBldG5hdml2X2NvcmVf
ZHVtcChzdHJ1Y3QgZXRuYXZpdl9nZW1fc3VibWl0ICpzdWJtaXQpCiAJCQkJCSBvYmotPmJhc2Uu
c2l6ZSk7CiAJfQogCi0JbXV0ZXhfdW5sb2NrKCZncHUtPm1tdS0+bG9jayk7CisJbXV0ZXhfdW5s
b2NrKCZncHUtPm1tdV9jb250ZXh0LT5sb2NrKTsKIAogCWV0bmF2aXZfY29yZV9kdW1wX2hlYWRl
cigmaXRlciwgRVREVU1QX0JVRl9FTkQsIGl0ZXIuZGF0YSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2dlbS5jCmluZGV4IGUxOTlhNjgzM2ZmMC4uMGNjYzNjNGRmZmM0IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMKQEAgLTIyMywxMiArMjIzLDEyIEBAIGludCBl
dG5hdml2X2dlbV9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgdTY0ICpv
ZmZzZXQpCiAKIHN0YXRpYyBzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKgogZXRuYXZpdl9n
ZW1fZ2V0X3ZyYW1fbWFwcGluZyhzdHJ1Y3QgZXRuYXZpdl9nZW1fb2JqZWN0ICpvYmosCi0JCQkg
ICAgIHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUpCisJCQkgICAgIHN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKmNvbnRleHQpCiB7CiAJc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICpt
YXBwaW5nOwogCiAJbGlzdF9mb3JfZWFjaF9lbnRyeShtYXBwaW5nLCAmb2JqLT52cmFtX2xpc3Qs
IG9ial9ub2RlKSB7Ci0JCWlmIChtYXBwaW5nLT5tbXUgPT0gbW11KQorCQlpZiAobWFwcGluZy0+
Y29udGV4dCA9PSBjb250ZXh0KQogCQkJcmV0dXJuIG1hcHBpbmc7CiAJfQogCkBAIC0yNTYsNyAr
MjU2LDcgQEAgc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICpldG5hdml2X2dlbV9tYXBwaW5n
X2dldCgKIAlpbnQgcmV0ID0gMDsKIAogCW11dGV4X2xvY2soJmV0bmF2aXZfb2JqLT5sb2NrKTsK
LQltYXBwaW5nID0gZXRuYXZpdl9nZW1fZ2V0X3ZyYW1fbWFwcGluZyhldG5hdml2X29iaiwgZ3B1
LT5tbXUpOworCW1hcHBpbmcgPSBldG5hdml2X2dlbV9nZXRfdnJhbV9tYXBwaW5nKGV0bmF2aXZf
b2JqLCBncHUtPm1tdV9jb250ZXh0KTsKIAlpZiAobWFwcGluZykgewogCQkvKgogCQkgKiBIb2xk
aW5nIHRoZSBvYmplY3QgbG9jayBwcmV2ZW50cyB0aGUgdXNlIGNvdW50IGNoYW5naW5nCkBAIC0y
NjUsMTIgKzI2NSwxMiBAQCBzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKmV0bmF2aXZfZ2Vt
X21hcHBpbmdfZ2V0KAogCQkgKiB0aGUgTU1VIG93bnMgdGhpcyBtYXBwaW5nIHRvIGNsb3NlIHRo
aXMgcmFjZS4KIAkJICovCiAJCWlmIChtYXBwaW5nLT51c2UgPT0gMCkgewotCQkJbXV0ZXhfbG9j
aygmZ3B1LT5tbXUtPmxvY2spOwotCQkJaWYgKG1hcHBpbmctPm1tdSA9PSBncHUtPm1tdSkKKwkJ
CW11dGV4X2xvY2soJmdwdS0+bW11X2NvbnRleHQtPmxvY2spOworCQkJaWYgKG1hcHBpbmctPmNv
bnRleHQgPT0gZ3B1LT5tbXVfY29udGV4dCkKIAkJCQltYXBwaW5nLT51c2UgKz0gMTsKIAkJCWVs
c2UKIAkJCQltYXBwaW5nID0gTlVMTDsKLQkJCW11dGV4X3VubG9jaygmZ3B1LT5tbXUtPmxvY2sp
OworCQkJbXV0ZXhfdW5sb2NrKCZncHUtPm1tdV9jb250ZXh0LT5sb2NrKTsKIAkJCWlmIChtYXBw
aW5nKQogCQkJCWdvdG8gb3V0OwogCQl9IGVsc2UgewpAQCAtMzAzLDExICszMDMsMTEgQEAgc3Ry
dWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICpldG5hdml2X2dlbV9tYXBwaW5nX2dldCgKIAkJbGlz
dF9kZWwoJm1hcHBpbmctPm9ial9ub2RlKTsKIAl9CiAKLQltYXBwaW5nLT5tbXUgPSBncHUtPm1t
dTsKKwltYXBwaW5nLT5jb250ZXh0ID0gZ3B1LT5tbXVfY29udGV4dDsKIAltYXBwaW5nLT51c2Ug
PSAxOwogCi0JcmV0ID0gZXRuYXZpdl9pb21tdV9tYXBfZ2VtKGdwdS0+bW11LCBldG5hdml2X29i
aiwgZ3B1LT5tZW1vcnlfYmFzZSwKLQkJCQkgICAgbWFwcGluZyk7CisJcmV0ID0gZXRuYXZpdl9p
b21tdV9tYXBfZ2VtKGdwdS0+bW11X2NvbnRleHQsIGV0bmF2aXZfb2JqLAorCQkJCSAgICBncHUt
Pm1lbW9yeV9iYXNlLCBtYXBwaW5nKTsKIAlpZiAocmV0IDwgMCkKIAkJa2ZyZWUobWFwcGluZyk7
CiAJZWxzZQpAQCAtNTI1LDEyICs1MjUsMTIgQEAgdm9pZCBldG5hdml2X2dlbV9mcmVlX29iamVj
dChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKIAogCWxpc3RfZm9yX2VhY2hfZW50cnlfc2Fm
ZShtYXBwaW5nLCB0bXAsICZldG5hdml2X29iai0+dnJhbV9saXN0LAogCQkJCSBvYmpfbm9kZSkg
ewotCQlzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11ID0gbWFwcGluZy0+bW11OworCQlzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0ID0gbWFwcGluZy0+Y29udGV4dDsKIAogCQlX
QVJOX09OKG1hcHBpbmctPnVzZSk7CiAKLQkJaWYgKG1tdSkKLQkJCWV0bmF2aXZfaW9tbXVfdW5t
YXBfZ2VtKG1tdSwgbWFwcGluZyk7CisJCWlmIChjb250ZXh0KQorCQkJZXRuYXZpdl9pb21tdV91
bm1hcF9nZW0oY29udGV4dCwgbWFwcGluZyk7CiAKIAkJbGlzdF9kZWwoJm1hcHBpbmctPm9ial9u
b2RlKTsKIAkJa2ZyZWUobWFwcGluZyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRu
YXZpdi9ldG5hdml2X2dlbS5oIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0u
aAppbmRleCBkN2Q4YTgzNWYzNzkuLjVhMDA0ZDVlNGVhYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2dlbS5oCkBAIC0yNSw3ICsyNSw3IEBAIHN0cnVjdCBldG5hdml2X3ZyYW1fbWFw
cGluZyB7CiAJc3RydWN0IGxpc3RfaGVhZCBzY2FuX25vZGU7CiAJc3RydWN0IGxpc3RfaGVhZCBt
bXVfbm9kZTsKIAlzdHJ1Y3QgZXRuYXZpdl9nZW1fb2JqZWN0ICpvYmplY3Q7Ci0Jc3RydWN0IGV0
bmF2aXZfaW9tbXUgKm1tdTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0
OwogCXN0cnVjdCBkcm1fbW1fbm9kZSB2cmFtX25vZGU7CiAJdW5zaWduZWQgaW50IHVzZTsKIAl1
MzIgaW92YTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1
LmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dwdS5jCmluZGV4IDE3OWJjNmM1
NDRjYS4uODg1Y2E4ZjkyMzM4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X2dwdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmMK
QEAgLTY4MSw3ICs2ODEsNyBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dwdV9od19pbml0KHN0cnVj
dCBldG5hdml2X2dwdSAqZ3B1KQogCWV0bmF2aXZfZ3B1X3NldHVwX3B1bHNlX2VhdGVyKGdwdSk7
CiAKIAkvKiBzZXR1cCB0aGUgTU1VICovCi0JZXRuYXZpdl9pb21tdV9yZXN0b3JlKGdwdSk7CisJ
ZXRuYXZpdl9pb21tdV9yZXN0b3JlKGdwdSwgZ3B1LT5tbXVfY29udGV4dCk7CiAKIAkvKiBTdGFy
dCBjb21tYW5kIHByb2Nlc3NvciAqLwogCXByZWZldGNoID0gZXRuYXZpdl9idWZmZXJfaW5pdChn
cHUpOwpAQCAtNzU0LDE0ICs3NTQsMTkgQEAgaW50IGV0bmF2aXZfZ3B1X2luaXQoc3RydWN0IGV0
bmF2aXZfZ3B1ICpncHUpCiAJCWdvdG8gZmFpbDsKIAl9CiAKLQlncHUtPm1tdSA9IGV0bmF2aXZf
aW9tbXVfbmV3KGdwdSk7Ci0JaWYgKElTX0VSUihncHUtPm1tdSkpIHsKLQkJZGV2X2VycihncHUt
PmRldiwgIkZhaWxlZCB0byBpbnN0YW50aWF0ZSBHUFUgSU9NTVVcbiIpOwotCQlyZXQgPSBQVFJf
RVJSKGdwdS0+bW11KTsKKwlyZXQgPSBldG5hdml2X2lvbW11X2dsb2JhbF9pbml0KGdwdSk7CisJ
aWYgKHJldCkKIAkJZ290byBmYWlsOworCisJZ3B1LT5tbXVfY29udGV4dCA9IGV0bmF2aXZfaW9t
bXVfY29udGV4dF9pbml0KHByaXYtPm1tdV9nbG9iYWwpOworCWlmIChJU19FUlIoZ3B1LT5tbXVf
Y29udGV4dCkpIHsKKwkJZGV2X2VycihncHUtPmRldiwgIkZhaWxlZCB0byBpbnN0YW50aWF0ZSBH
UFUgSU9NTVVcbiIpOworCQlyZXQgPSBQVFJfRVJSKGdwdS0+bW11X2NvbnRleHQpOworCQlnb3Rv
IGlvbW11X2dsb2JhbF9maW5pOwogCX0KIAotCXJldCA9IGV0bmF2aXZfY21kYnVmX3N1YmFsbG9j
X21hcChwcml2LT5jbWRidWZfc3ViYWxsb2MsIGdwdS0+bW11LAorCXJldCA9IGV0bmF2aXZfY21k
YnVmX3N1YmFsbG9jX21hcChwcml2LT5jbWRidWZfc3ViYWxsb2MsCisJCQkJCSAgZ3B1LT5tbXVf
Y29udGV4dCwKIAkJCQkJICAmZ3B1LT5jbWRidWZfbWFwcGluZywKIAkJCQkJICBncHUtPm1lbW9y
eV9iYXNlKTsKIAlpZiAocmV0KSB7CkBAIC03NzcsNyArNzgyLDcgQEAgaW50IGV0bmF2aXZfZ3B1
X2luaXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJCWdvdG8gdW5tYXBfc3ViYWxsb2M7CiAJ
fQogCi0JaWYgKGdwdS0+bW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEgJiYKKwlpZiAo
IShncHUtPmlkZW50aXR5Lm1pbm9yX2ZlYXR1cmVzMSAmIGNoaXBNaW5vckZlYXR1cmVzMV9NTVVf
VkVSU0lPTikgJiYKIAkgICAgZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKCZncHUtPmJ1ZmZlciwgJmdw
dS0+Y21kYnVmX21hcHBpbmcpID4gMHg4MDAwMDAwMCkgewogCQlyZXQgPSAtRUlOVkFMOwogCQlk
ZXZfZXJyKGdwdS0+ZGV2LApAQCAtODA4LDkgKzgxMywxMSBAQCBpbnQgZXRuYXZpdl9ncHVfaW5p
dChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIGZyZWVfYnVmZmVyOgogCWV0bmF2aXZfY21kYnVm
X2ZyZWUoJmdwdS0+YnVmZmVyKTsKIHVubWFwX3N1YmFsbG9jOgotCWV0bmF2aXZfY21kYnVmX3N1
YmFsbG9jX3VubWFwKGdwdS0+bW11LCAmZ3B1LT5jbWRidWZfbWFwcGluZyk7CisJZXRuYXZpdl9j
bWRidWZfc3ViYWxsb2NfdW5tYXAoZ3B1LT5tbXVfY29udGV4dCwgJmdwdS0+Y21kYnVmX21hcHBp
bmcpOwogZGVzdHJveV9pb21tdToKLQlldG5hdml2X2lvbW11X2Rlc3Ryb3koZ3B1LT5tbXUpOwor
CWV0bmF2aXZfaW9tbXVfY29udGV4dF9wdXQoZ3B1LT5tbXVfY29udGV4dCk7Citpb21tdV9nbG9i
YWxfZmluaToKKwlldG5hdml2X2lvbW11X2dsb2JhbF9maW5pKGdwdSk7CiBmYWlsOgogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZ3B1LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNw
ZW5kKGdwdS0+ZGV2KTsKQEAgLTE2ODMsOCArMTY5MCwxMCBAQCBzdGF0aWMgdm9pZCBldG5hdml2
X2dwdV91bmJpbmQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlICptYXN0ZXIsCiAK
IAlpZiAoZ3B1LT5pbml0aWFsaXplZCkgewogCQlldG5hdml2X2NtZGJ1Zl9mcmVlKCZncHUtPmJ1
ZmZlcik7Ci0JCWV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX3VubWFwKGdwdS0+bW11LCAmZ3B1LT5j
bWRidWZfbWFwcGluZyk7Ci0JCWV0bmF2aXZfaW9tbXVfZGVzdHJveShncHUtPm1tdSk7CisJCWV0
bmF2aXZfY21kYnVmX3N1YmFsbG9jX3VubWFwKGdwdS0+bW11X2NvbnRleHQsCisJCQkJCSAgICAg
ICZncHUtPmNtZGJ1Zl9tYXBwaW5nKTsKKwkJZXRuYXZpdl9pb21tdV9jb250ZXh0X3B1dChncHUt
Pm1tdV9jb250ZXh0KTsKKwkJZXRuYXZpdl9pb21tdV9nbG9iYWxfZmluaShncHUpOwogCQlncHUt
PmluaXRpYWxpemVkID0gZmFsc2U7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
ZXRuYXZpdi9ldG5hdml2X2dwdS5oIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9n
cHUuaAppbmRleCA5NjM4MDk0MmNkOGMuLmMwYmQ2MDE4ZDUzYiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRu
YXZpdi9ldG5hdml2X2dwdS5oCkBAIC04LDYgKzgsNyBAQAogCiAjaW5jbHVkZSAiZXRuYXZpdl9j
bWRidWYuaCIKICNpbmNsdWRlICJldG5hdml2X2dlbS5oIgorI2luY2x1ZGUgImV0bmF2aXZfbW11
LmgiCiAjaW5jbHVkZSAiZXRuYXZpdl9kcnYuaCIKIAogc3RydWN0IGV0bmF2aXZfZ2VtX3N1Ym1p
dDsKQEAgLTEzNiw3ICsxMzcsNyBAQCBzdHJ1Y3QgZXRuYXZpdl9ncHUgewogCXZvaWQgX19pb21l
bSAqbW1pbzsKIAlpbnQgaXJxOwogCi0Jc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdTsKKwlzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICptbXVfY29udGV4dDsKIAl1bnNpZ25lZCBpbnQgZmx1
c2hfc2VxOwogCiAJLyogUG93ZXIgQ29udHJvbDogKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0
bmF2aXZfaW9tbXUuYwppbmRleCAxOGM2MjdjNWNhZTEuLmEyZjFmZjE1MTgyMiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuYwpAQCAtMTEsNyArMTEsNiBAQAogCiAjaW5j
bHVkZSAiZXRuYXZpdl9ncHUuaCIKICNpbmNsdWRlICJldG5hdml2X21tdS5oIgotI2luY2x1ZGUg
ImV0bmF2aXZfaW9tbXUuaCIKICNpbmNsdWRlICJzdGF0ZV9oaS54bWwuaCIKIAogI2RlZmluZSBQ
VF9TSVpFCQlTWl8yTQpAQCAtMTksMTEzICsxOCw3OCBAQAogCiAjZGVmaW5lIEdQVV9NRU1fU1RB
UlQJMHg4MDAwMDAwMAogCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2RvbWFpbiB7Ci0Jc3RydWN0
IGV0bmF2aXZfaW9tbXVfZG9tYWluIGJhc2U7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2NvbnRl
eHQgeworCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgYmFzZTsKIAl1MzIgKnBndGFibGVf
Y3B1OwogCWRtYV9hZGRyX3QgcGd0YWJsZV9kbWE7CiB9OwogCi1zdGF0aWMgc3RydWN0IGV0bmF2
aXZfaW9tbXV2MV9kb21haW4gKgotdG9fZXRuYXZpdl9kb21haW4oc3RydWN0IGV0bmF2aXZfaW9t
bXVfZG9tYWluICpkb21haW4pCitzdGF0aWMgc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0
ICoKK3RvX3YxX2NvbnRleHQoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCkK
IHsKLQlyZXR1cm4gY29udGFpbmVyX29mKGRvbWFpbiwgc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9k
b21haW4sIGJhc2UpOworCXJldHVybiBjb250YWluZXJfb2YoY29udGV4dCwgc3RydWN0IGV0bmF2
aXZfaW9tbXV2MV9jb250ZXh0LCBiYXNlKTsKIH0KIAotc3RhdGljIGludCBfX2V0bmF2aXZfaW9t
bXVfaW5pdChzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2RvbWFpbiAqZXRuYXZpdl9kb21haW4pCitz
dGF0aWMgdm9pZCBldG5hdml2X2lvbW11djFfZnJlZShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250
ZXh0ICpjb250ZXh0KQogewotCXUzMiAqcDsKLQlpbnQgaTsKLQotCWV0bmF2aXZfZG9tYWluLT5i
YXNlLmJhZF9wYWdlX2NwdSA9Ci0JCQlkbWFfYWxsb2Nfd2MoZXRuYXZpdl9kb21haW4tPmJhc2Uu
ZGV2LCBTWl80SywKLQkJCQkgICAgICZldG5hdml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9kbWEs
Ci0JCQkJICAgICBHRlBfS0VSTkVMKTsKLQlpZiAoIWV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9w
YWdlX2NwdSkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQlwID0gZXRuYXZpdl9kb21haW4tPmJhc2Uu
YmFkX3BhZ2VfY3B1OwotCWZvciAoaSA9IDA7IGkgPCBTWl80SyAvIDQ7IGkrKykKLQkJKnArKyA9
IDB4ZGVhZDU1YWE7Ci0KLQlldG5hdml2X2RvbWFpbi0+cGd0YWJsZV9jcHUgPSBkbWFfYWxsb2Nf
d2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LAotCQkJCQkJICAgUFRfU0laRSwKLQkJCQkJCSAg
ICZldG5hdml2X2RvbWFpbi0+cGd0YWJsZV9kbWEsCi0JCQkJCQkgICBHRlBfS0VSTkVMKTsKLQlp
ZiAoIWV0bmF2aXZfZG9tYWluLT5wZ3RhYmxlX2NwdSkgewotCQlkbWFfZnJlZV93YyhldG5hdml2
X2RvbWFpbi0+YmFzZS5kZXYsIFNaXzRLLAotCQkJICAgIGV0bmF2aXZfZG9tYWluLT5iYXNlLmJh
ZF9wYWdlX2NwdSwKLQkJCSAgICBldG5hdml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9kbWEpOwot
CQlyZXR1cm4gLUVOT01FTTsKLQl9Ci0KLQltZW1zZXQzMihldG5hdml2X2RvbWFpbi0+cGd0YWJs
ZV9jcHUsIGV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2RtYSwKLQkJIFBUX0VOVFJJRVMp
OwotCi0JcmV0dXJuIDA7Ci19CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0ICp2MV9j
b250ZXh0ID0gdG9fdjFfY29udGV4dChjb250ZXh0KTsKIAotc3RhdGljIHZvaWQgZXRuYXZpdl9p
b21tdXYxX2RvbWFpbl9mcmVlKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluKQot
ewotCXN0cnVjdCBldG5hdml2X2lvbW11djFfZG9tYWluICpldG5hdml2X2RvbWFpbiA9Ci0JCQl0
b19ldG5hdml2X2RvbWFpbihkb21haW4pOworCWRybV9tbV90YWtlZG93bigmY29udGV4dC0+bW0p
OwogCi0JZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBQVF9TSVpFLAotCQkg
ICAgZXRuYXZpdl9kb21haW4tPnBndGFibGVfY3B1LCBldG5hdml2X2RvbWFpbi0+cGd0YWJsZV9k
bWEpOworCWRtYV9mcmVlX3djKGNvbnRleHQtPmdsb2JhbC0+ZGV2LCBQVF9TSVpFLCB2MV9jb250
ZXh0LT5wZ3RhYmxlX2NwdSwKKwkJICAgIHYxX2NvbnRleHQtPnBndGFibGVfZG1hKTsKIAotCWRt
YV9mcmVlX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEssCi0JCSAgICBldG5hdml2
X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9jcHUsCi0JCSAgICBldG5hdml2X2RvbWFpbi0+YmFzZS5i
YWRfcGFnZV9kbWEpOworCWNvbnRleHQtPmdsb2JhbC0+djEuc2hhcmVkX2NvbnRleHQgPSBOVUxM
OwogCi0Ja2ZyZWUoZXRuYXZpdl9kb21haW4pOworCWtmcmVlKHYxX2NvbnRleHQpOwogfQogCi1z
dGF0aWMgaW50IGV0bmF2aXZfaW9tbXV2MV9tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWlu
ICpkb21haW4sCitzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXV2MV9tYXAoc3RydWN0IGV0bmF2aXZf
aW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCSAgICAgICB1bnNpZ25lZCBsb25nIGlvdmEsIHBo
eXNfYWRkcl90IHBhZGRyLAogCQkJICAgICAgIHNpemVfdCBzaXplLCBpbnQgcHJvdCkKIHsKLQlz
dHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2RvbWFpbiAqZXRuYXZpdl9kb21haW4gPSB0b19ldG5hdml2
X2RvbWFpbihkb21haW4pOworCXN0cnVjdCBldG5hdml2X2lvbW11djFfY29udGV4dCAqdjFfY29u
dGV4dCA9IHRvX3YxX2NvbnRleHQoY29udGV4dCk7CiAJdW5zaWduZWQgaW50IGluZGV4ID0gKGlv
dmEgLSBHUFVfTUVNX1NUQVJUKSAvIFNaXzRLOwogCiAJaWYgKHNpemUgIT0gU1pfNEspCiAJCXJl
dHVybiAtRUlOVkFMOwogCi0JZXRuYXZpdl9kb21haW4tPnBndGFibGVfY3B1W2luZGV4XSA9IHBh
ZGRyOworCXYxX2NvbnRleHQtPnBndGFibGVfY3B1W2luZGV4XSA9IHBhZGRyOwogCiAJcmV0dXJu
IDA7CiB9CiAKLXN0YXRpYyBzaXplX3QgZXRuYXZpdl9pb21tdXYxX3VubWFwKHN0cnVjdCBldG5h
dml2X2lvbW11X2RvbWFpbiAqZG9tYWluLAorc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11djFf
dW5tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAl1bnNpZ25lZCBs
b25nIGlvdmEsIHNpemVfdCBzaXplKQogewotCXN0cnVjdCBldG5hdml2X2lvbW11djFfZG9tYWlu
ICpldG5hdml2X2RvbWFpbiA9Ci0JCQl0b19ldG5hdml2X2RvbWFpbihkb21haW4pOworCXN0cnVj
dCBldG5hdml2X2lvbW11djFfY29udGV4dCAqdjFfY29udGV4dCA9IHRvX3YxX2NvbnRleHQoY29u
dGV4dCk7CiAJdW5zaWduZWQgaW50IGluZGV4ID0gKGlvdmEgLSBHUFVfTUVNX1NUQVJUKSAvIFNa
XzRLOwogCiAJaWYgKHNpemUgIT0gU1pfNEspCiAJCXJldHVybiAtRUlOVkFMOwogCi0JZXRuYXZp
dl9kb21haW4tPnBndGFibGVfY3B1W2luZGV4XSA9IGV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9w
YWdlX2RtYTsKKwl2MV9jb250ZXh0LT5wZ3RhYmxlX2NwdVtpbmRleF0gPSBjb250ZXh0LT5nbG9i
YWwtPmJhZF9wYWdlX2RtYTsKIAogCXJldHVybiBTWl80SzsKIH0KIAotc3RhdGljIHNpemVfdCBl
dG5hdml2X2lvbW11djFfZHVtcF9zaXplKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9t
YWluKQorc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11djFfZHVtcF9zaXplKHN0cnVjdCBldG5h
dml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7CiAJcmV0dXJuIFBUX1NJWkU7CiB9CiAKLXN0
YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2MV9kdW1wKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFp
biAqZG9tYWluLCB2b2lkICpidWYpCitzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djFfZHVtcChz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAorCQkJCSB2b2lkICpidWYpCiB7
Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9kb21haW4gKmV0bmF2aXZfZG9tYWluID0KLQkJCXRv
X2V0bmF2aXZfZG9tYWluKGRvbWFpbik7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0
ICp2MV9jb250ZXh0ID0gdG9fdjFfY29udGV4dChjb250ZXh0KTsKIAotCW1lbWNweShidWYsIGV0
bmF2aXZfZG9tYWluLT5wZ3RhYmxlX2NwdSwgUFRfU0laRSk7CisJbWVtY3B5KGJ1ZiwgdjFfY29u
dGV4dC0+cGd0YWJsZV9jcHUsIFBUX1NJWkUpOwogfQogCi12b2lkIGV0bmF2aXZfaW9tbXV2MV9y
ZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQorc3RhdGljIHZvaWQgZXRuYXZpdl9pb21t
dXYxX3Jlc3RvcmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsCisJCQkgICAgIHN0cnVjdCBldG5h
dml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9k
b21haW4gKmV0bmF2aXZfZG9tYWluID0KLQkJCXRvX2V0bmF2aXZfZG9tYWluKGdwdS0+bW11LT5k
b21haW4pOworCXN0cnVjdCBldG5hdml2X2lvbW11djFfY29udGV4dCAqdjFfY29udGV4dCA9IHRv
X3YxX2NvbnRleHQoY29udGV4dCk7CiAJdTMyIHBndGFibGU7CiAKIAkvKiBzZXQgYmFzZSBhZGRy
ZXNzZXMgKi8KQEAgLTEzNiw3ICsxMDAsNyBAQCB2b2lkIGV0bmF2aXZfaW9tbXV2MV9yZXN0b3Jl
KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogCWdwdV93cml0ZShncHUsIFZJVlNfTUNfTUVNT1JZ
X0JBU0VfQUREUl9QRSwgZ3B1LT5tZW1vcnlfYmFzZSk7CiAKIAkvKiBzZXQgcGFnZSB0YWJsZSBh
ZGRyZXNzIGluIE1DICovCi0JcGd0YWJsZSA9ICh1MzIpZXRuYXZpdl9kb21haW4tPnBndGFibGVf
ZG1hOworCXBndGFibGUgPSAodTMyKXYxX2NvbnRleHQtPnBndGFibGVfZG1hOwogCiAJZ3B1X3dy
aXRlKGdwdSwgVklWU19NQ19NTVVfRkVfUEFHRV9UQUJMRSwgcGd0YWJsZSk7CiAJZ3B1X3dyaXRl
KGdwdSwgVklWU19NQ19NTVVfVFhfUEFHRV9UQUJMRSwgcGd0YWJsZSk7CkBAIC0xNDUsMzkgKzEw
OSw2MiBAQCB2b2lkIGV0bmF2aXZfaW9tbXV2MV9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAq
Z3B1KQogCWdwdV93cml0ZShncHUsIFZJVlNfTUNfTU1VX1JBX1BBR0VfVEFCTEUsIHBndGFibGUp
OwogfQogCi1zdGF0aWMgY29uc3Qgc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluX29wcyBldG5h
dml2X2lvbW11djFfb3BzID0gewotCS5mcmVlID0gZXRuYXZpdl9pb21tdXYxX2RvbWFpbl9mcmVl
LAorCitjb25zdCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9vcHMgZXRuYXZpdl9pb21tdXYxX29wcyA9
IHsKKwkuZnJlZSA9IGV0bmF2aXZfaW9tbXV2MV9mcmVlLAogCS5tYXAgPSBldG5hdml2X2lvbW11
djFfbWFwLAogCS51bm1hcCA9IGV0bmF2aXZfaW9tbXV2MV91bm1hcCwKIAkuZHVtcF9zaXplID0g
ZXRuYXZpdl9pb21tdXYxX2R1bXBfc2l6ZSwKIAkuZHVtcCA9IGV0bmF2aXZfaW9tbXV2MV9kdW1w
LAorCS5yZXN0b3JlID0gZXRuYXZpdl9pb21tdXYxX3Jlc3RvcmUsCiB9OwogCi1zdHJ1Y3QgZXRu
YXZpdl9pb21tdV9kb21haW4gKgotZXRuYXZpdl9pb21tdXYxX2RvbWFpbl9hbGxvYyhzdHJ1Y3Qg
ZXRuYXZpdl9ncHUgKmdwdSkKK3N0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKgorZXRuYXZp
dl9pb21tdXYxX2NvbnRleHRfYWxsb2Moc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9i
YWwpCiB7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9kb21haW4gKmV0bmF2aXZfZG9tYWluOwot
CXN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluOwotCWludCByZXQ7CisJc3RydWN0
IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0ICp2MV9jb250ZXh0OworCXN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKmNvbnRleHQ7CisKKwltdXRleF9sb2NrKCZnbG9iYWwtPmxvY2spOworCisJ
LyoKKwkgKiBNTVV2MSBkb2VzIG5vdCBzdXBwb3J0IHN3aXRjaGluZyBiZXR3ZWVuIGRpZmZlcmVu
dCBjb250ZXh0cyB3aXRob3V0CisJICogYSBzdG9wIHRoZSB3b3JsZCBvcGVyYXRpb24sIHNvIHdl
IG9ubHkgc3VwcG9ydCBhIHNpbmdsZSBzaGFyZWQKKwkgKiBjb250ZXh0IHdpdGggdGhpcyB2ZXJz
aW9uLgorCSAqLworCWlmIChnbG9iYWwtPnYxLnNoYXJlZF9jb250ZXh0KSB7CisJCWNvbnRleHQg
PSBnbG9iYWwtPnYxLnNoYXJlZF9jb250ZXh0OworCQlldG5hdml2X2lvbW11X2NvbnRleHRfZ2V0
KGNvbnRleHQpOworCQltdXRleF91bmxvY2soJmdsb2JhbC0+bG9jayk7CisJCXJldHVybiBjb250
ZXh0OworCX0KIAotCWV0bmF2aXZfZG9tYWluID0ga3phbGxvYyhzaXplb2YoKmV0bmF2aXZfZG9t
YWluKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFldG5hdml2X2RvbWFpbikKKwl2MV9jb250ZXh0ID0g
a3phbGxvYyhzaXplb2YoKnYxX2NvbnRleHQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXYxX2NvbnRl
eHQpCiAJCXJldHVybiBOVUxMOwogCi0JZG9tYWluID0gJmV0bmF2aXZfZG9tYWluLT5iYXNlOwor
CXYxX2NvbnRleHQtPnBndGFibGVfY3B1ID0gZG1hX2FsbG9jX3djKGdsb2JhbC0+ZGV2LCBQVF9T
SVpFLAorCQkJCQkgICAgICAgJnYxX2NvbnRleHQtPnBndGFibGVfZG1hLAorCQkJCQkgICAgICAg
R0ZQX0tFUk5FTCk7CisJaWYgKCF2MV9jb250ZXh0LT5wZ3RhYmxlX2NwdSkKKwkJZ290byBvdXRf
ZnJlZTsKIAotCWRvbWFpbi0+ZGV2ID0gZ3B1LT5kZXY7Ci0JZG9tYWluLT5iYXNlID0gR1BVX01F
TV9TVEFSVDsKLQlkb21haW4tPnNpemUgPSBQVF9FTlRSSUVTICogU1pfNEs7Ci0JZG9tYWluLT5v
cHMgPSAmZXRuYXZpdl9pb21tdXYxX29wczsKKwltZW1zZXQzMih2MV9jb250ZXh0LT5wZ3RhYmxl
X2NwdSwgZ2xvYmFsLT5iYWRfcGFnZV9kbWEsIFBUX0VOVFJJRVMpOwogCi0JcmV0ID0gX19ldG5h
dml2X2lvbW11X2luaXQoZXRuYXZpdl9kb21haW4pOwotCWlmIChyZXQpCi0JCWdvdG8gb3V0X2Zy
ZWU7CisJY29udGV4dCA9ICZ2MV9jb250ZXh0LT5iYXNlOworCWNvbnRleHQtPmdsb2JhbCA9IGds
b2JhbDsKKwlrcmVmX2luaXQoJmNvbnRleHQtPnJlZmNvdW50KTsKKwltdXRleF9pbml0KCZjb250
ZXh0LT5sb2NrKTsKKwlJTklUX0xJU1RfSEVBRCgmY29udGV4dC0+bWFwcGluZ3MpOworCWRybV9t
bV9pbml0KCZjb250ZXh0LT5tbSwgR1BVX01FTV9TVEFSVCwgUFRfRU5UUklFUyAqIFNaXzRLKTsK
Kwljb250ZXh0LT5nbG9iYWwtPnYxLnNoYXJlZF9jb250ZXh0ID0gY29udGV4dDsKKworCW11dGV4
X3VubG9jaygmZ2xvYmFsLT5sb2NrKTsKIAotCXJldHVybiAmZXRuYXZpdl9kb21haW4tPmJhc2U7
CisJcmV0dXJuIGNvbnRleHQ7CiAKIG91dF9mcmVlOgotCWtmcmVlKGV0bmF2aXZfZG9tYWluKTsK
KwltdXRleF91bmxvY2soJmdsb2JhbC0+bG9jayk7CisJa2ZyZWUodjFfY29udGV4dCk7CiAJcmV0
dXJuIE5VTEw7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X2lvbW11LmggYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11LmgKZGVsZXRl
ZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGIyNzk0MDRjZTkxYS4uMDAwMDAwMDAwMDAwCi0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuaAorKysgL2Rldi9udWxsCkBA
IC0xLDIwICswLDAgQEAKLS8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wICovCi0v
KgotICogQ29weXJpZ2h0IChDKSAyMDE0LTIwMTggRXRuYXZpdiBQcm9qZWN0Ci0gKi8KLQotI2lm
bmRlZiBfX0VUTkFWSVZfSU9NTVVfSF9fCi0jZGVmaW5lIF9fRVROQVZJVl9JT01NVV9IX18KLQot
c3RydWN0IGV0bmF2aXZfZ3B1Owotc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluOwotCi1zdHJ1
Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKgotZXRuYXZpdl9pb21tdXYxX2RvbWFpbl9hbGxvYyhz
dHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSk7Ci12b2lkIGV0bmF2aXZfaW9tbXV2MV9yZXN0b3JlKHN0
cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsKLQotc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICoK
LWV0bmF2aXZfaW9tbXV2Ml9kb21haW5fYWxsb2Moc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOwot
dm9pZCBldG5hdml2X2lvbW11djJfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSk7Ci0K
LSNlbmRpZiAvKiBfX0VUTkFWSVZfSU9NTVVfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11X3YyLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2lvbW11X3YyLmMKaW5kZXggZDdjYzE4NGRhNTcxLi41Y2EyMDc3YzE0OGQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXVfdjIuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11X3YyLmMKQEAgLTEzLDcgKzEz
LDYgQEAKICNpbmNsdWRlICJldG5hdml2X2NtZGJ1Zi5oIgogI2luY2x1ZGUgImV0bmF2aXZfZ3B1
LmgiCiAjaW5jbHVkZSAiZXRuYXZpdl9tbXUuaCIKLSNpbmNsdWRlICJldG5hdml2X2lvbW11Lmgi
CiAjaW5jbHVkZSAic3RhdGUueG1sLmgiCiAjaW5jbHVkZSAic3RhdGVfaGkueG1sLmgiCiAKQEAg
LTI4LDExICsyNyw5IEBACiAKICNkZWZpbmUgTU1VdjJfTUFYX1NUTEJfRU5UUklFUwkJMTAyNAog
Ci1zdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiB7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXVf
ZG9tYWluIGJhc2U7Ci0JLyogUChhZ2UpIFQoYWJsZSkgQShycmF5KSAqLwotCXU2NCAqcHRhX2Nw
dTsKLQlkbWFfYWRkcl90IHB0YV9kbWE7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2NvbnRleHQg
eworCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgYmFzZTsKKwl1bnNpZ25lZCBzaG9ydCBp
ZDsKIAkvKiBNKGFzdGVyKSBUTEIgYWthIGZpcnN0IGxldmVsIHBhZ2V0YWJsZSAqLwogCXUzMiAq
bXRsYl9jcHU7CiAJZG1hX2FkZHJfdCBtdGxiX2RtYTsKQEAgLTQxLDQxICszOCw2MiBAQCBzdHJ1
Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiB7CiAJZG1hX2FkZHJfdCBzdGxiX2RtYVtNTVV2Ml9N
QVhfU1RMQl9FTlRSSUVTXTsKIH07CiAKLXN0YXRpYyBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2Rv
bWFpbiAqCi10b19ldG5hdml2X2RvbWFpbihzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRv
bWFpbikKK3N0YXRpYyBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2NvbnRleHQgKgordG9fdjJfY29u
dGV4dChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogewotCXJldHVybiBj
b250YWluZXJfb2YoZG9tYWluLCBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiwgYmFzZSk7
CisJcmV0dXJuIGNvbnRhaW5lcl9vZihjb250ZXh0LCBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2Nv
bnRleHQsIGJhc2UpOwogfQogCitzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfZnJlZShzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQoreworCXN0cnVjdCBldG5hdml2X2lv
bW11djJfY29udGV4dCAqdjJfY29udGV4dCA9IHRvX3YyX2NvbnRleHQoY29udGV4dCk7CisJaW50
IGk7CisKKwlkcm1fbW1fdGFrZWRvd24oJmNvbnRleHQtPm1tKTsKKworCWZvciAoaSA9IDA7IGkg
PCBNTVV2Ml9NQVhfU1RMQl9FTlRSSUVTOyBpKyspIHsKKwkJaWYgKHYyX2NvbnRleHQtPnN0bGJf
Y3B1W2ldKQorCQkJZG1hX2ZyZWVfd2MoY29udGV4dC0+Z2xvYmFsLT5kZXYsIFNaXzRLLAorCQkJ
CSAgICB2Ml9jb250ZXh0LT5zdGxiX2NwdVtpXSwKKwkJCQkgICAgdjJfY29udGV4dC0+c3RsYl9k
bWFbaV0pOworCX0KKworCWRtYV9mcmVlX3djKGNvbnRleHQtPmdsb2JhbC0+ZGV2LCBTWl80Sywg
djJfY29udGV4dC0+bXRsYl9jcHUsCisJCSAgICB2Ml9jb250ZXh0LT5tdGxiX2RtYSk7CisKKwlj
bGVhcl9iaXQodjJfY29udGV4dC0+aWQsIGNvbnRleHQtPmdsb2JhbC0+djIucHRhX2FsbG9jKTsK
KworCXZmcmVlKHYyX2NvbnRleHQpOworfQogc3RhdGljIGludAotZXRuYXZpdl9pb21tdXYyX2Vu
c3VyZV9zdGxiKHN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5hdml2X2RvbWFpbiwK
K2V0bmF2aXZfaW9tbXV2Ml9lbnN1cmVfc3RsYihzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2NvbnRl
eHQgKnYyX2NvbnRleHQsCiAJCQkgICAgaW50IHN0bGIpCiB7Ci0JaWYgKGV0bmF2aXZfZG9tYWlu
LT5zdGxiX2NwdVtzdGxiXSkKKwlpZiAodjJfY29udGV4dC0+c3RsYl9jcHVbc3RsYl0pCiAJCXJl
dHVybiAwOwogCi0JZXRuYXZpdl9kb21haW4tPnN0bGJfY3B1W3N0bGJdID0KLQkJCWRtYV9hbGxv
Y193YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYsIFNaXzRLLAotCQkJCSAgICAgJmV0bmF2aXZf
ZG9tYWluLT5zdGxiX2RtYVtzdGxiXSwKKwl2Ml9jb250ZXh0LT5zdGxiX2NwdVtzdGxiXSA9CisJ
CQlkbWFfYWxsb2Nfd2ModjJfY29udGV4dC0+YmFzZS5nbG9iYWwtPmRldiwgU1pfNEssCisJCQkJ
ICAgICAmdjJfY29udGV4dC0+c3RsYl9kbWFbc3RsYl0sCiAJCQkJICAgICBHRlBfS0VSTkVMKTsK
IAotCWlmICghZXRuYXZpdl9kb21haW4tPnN0bGJfY3B1W3N0bGJdKQorCWlmICghdjJfY29udGV4
dC0+c3RsYl9jcHVbc3RsYl0pCiAJCXJldHVybiAtRU5PTUVNOwogCi0JbWVtc2V0MzIoZXRuYXZp
dl9kb21haW4tPnN0bGJfY3B1W3N0bGJdLCBNTVV2Ml9QVEVfRVhDRVBUSU9OLAorCW1lbXNldDMy
KHYyX2NvbnRleHQtPnN0bGJfY3B1W3N0bGJdLCBNTVV2Ml9QVEVfRVhDRVBUSU9OLAogCQkgU1pf
NEsgLyBzaXplb2YodTMyKSk7CiAKLQlldG5hdml2X2RvbWFpbi0+bXRsYl9jcHVbc3RsYl0gPSBl
dG5hdml2X2RvbWFpbi0+c3RsYl9kbWFbc3RsYl0gfAotCQkJCQkJICAgICAgTU1VdjJfUFRFX1BS
RVNFTlQ7CisJdjJfY29udGV4dC0+bXRsYl9jcHVbc3RsYl0gPQorCQkJdjJfY29udGV4dC0+c3Rs
Yl9kbWFbc3RsYl0gfCBNTVV2Ml9QVEVfUFJFU0VOVDsKKwogCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IGV0bmF2aXZfaW9tbXV2Ml9tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpk
b21haW4sCitzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXV2Ml9tYXAoc3RydWN0IGV0bmF2aXZfaW9t
bXVfY29udGV4dCAqY29udGV4dCwKIAkJCSAgICAgICB1bnNpZ25lZCBsb25nIGlvdmEsIHBoeXNf
YWRkcl90IHBhZGRyLAogCQkJICAgICAgIHNpemVfdCBzaXplLCBpbnQgcHJvdCkKIHsKLQlzdHJ1
Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiAqZXRuYXZpdl9kb21haW4gPQotCQkJdG9fZXRuYXZp
dl9kb21haW4oZG9tYWluKTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2NvbnRleHQgKnYyX2Nv
bnRleHQgPSB0b192Ml9jb250ZXh0KGNvbnRleHQpOwogCWludCBtdGxiX2VudHJ5LCBzdGxiX2Vu
dHJ5LCByZXQ7CiAJdTMyIGVudHJ5ID0gbG93ZXJfMzJfYml0cyhwYWRkcikgfCBNTVV2Ml9QVEVf
UFJFU0VOVDsKIApAQCAtOTEsMjAgKzEwOSwxOSBAQCBzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXV2
Ml9tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCiAJbXRsYl9lbnRyeSA9
IChpb3ZhICYgTU1VdjJfTVRMQl9NQVNLKSA+PiBNTVV2Ml9NVExCX1NISUZUOwogCXN0bGJfZW50
cnkgPSAoaW92YSAmIE1NVXYyX1NUTEJfTUFTSykgPj4gTU1VdjJfU1RMQl9TSElGVDsKIAotCXJl
dCA9IGV0bmF2aXZfaW9tbXV2Ml9lbnN1cmVfc3RsYihldG5hdml2X2RvbWFpbiwgbXRsYl9lbnRy
eSk7CisJcmV0ID0gZXRuYXZpdl9pb21tdXYyX2Vuc3VyZV9zdGxiKHYyX2NvbnRleHQsIG10bGJf
ZW50cnkpOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlldG5hdml2X2RvbWFpbi0+c3Rs
Yl9jcHVbbXRsYl9lbnRyeV1bc3RsYl9lbnRyeV0gPSBlbnRyeTsKKwl2Ml9jb250ZXh0LT5zdGxi
X2NwdVttdGxiX2VudHJ5XVtzdGxiX2VudHJ5XSA9IGVudHJ5OwogCiAJcmV0dXJuIDA7CiB9CiAK
LXN0YXRpYyBzaXplX3QgZXRuYXZpdl9pb21tdXYyX3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11
X2RvbWFpbiAqZG9tYWluLAorc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11djJfdW5tYXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkgICAgdW5zaWduZWQgbG9u
ZyBpb3ZhLCBzaXplX3Qgc2l6ZSkKIHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiAq
ZXRuYXZpdl9kb21haW4gPQotCQkJdG9fZXRuYXZpdl9kb21haW4oZG9tYWluKTsKKwlzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdXYyX2NvbnRleHQgKmV0bmF2aXZfZG9tYWluID0gdG9fdjJfY29udGV4dChj
b250ZXh0KTsKIAlpbnQgbXRsYl9lbnRyeSwgc3RsYl9lbnRyeTsKIAogCWlmIChzaXplICE9IFNa
XzRLKQpAQCAtMTE4LDExOCArMTM1LDM1IEBAIHN0YXRpYyBzaXplX3QgZXRuYXZpdl9pb21tdXYy
X3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLAogCXJldHVybiBTWl80
SzsKIH0KIAotc3RhdGljIGludCBldG5hdml2X2lvbW11djJfaW5pdChzdHJ1Y3QgZXRuYXZpdl9p
b21tdXYyX2RvbWFpbiAqZXRuYXZpdl9kb21haW4pCi17Ci0JaW50IHJldDsKLQotCS8qIGFsbG9j
YXRlIHNjcmF0Y2ggcGFnZSAqLwotCWV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2NwdSA9
Ci0JCQlkbWFfYWxsb2Nfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80SywKLQkJCQkg
ICAgICZldG5hdml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9kbWEsCi0JCQkJICAgICBHRlBfS0VS
TkVMKTsKLQlpZiAoIWV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2NwdSkgewotCQlyZXQg
PSAtRU5PTUVNOwotCQlnb3RvIGZhaWxfbWVtOwotCX0KLQotCW1lbXNldDMyKGV0bmF2aXZfZG9t
YWluLT5iYXNlLmJhZF9wYWdlX2NwdSwgMHhkZWFkNTVhYSwKLQkJIFNaXzRLIC8gc2l6ZW9mKHUz
MikpOwotCi0JZXRuYXZpdl9kb21haW4tPnB0YV9jcHUgPSBkbWFfYWxsb2Nfd2MoZXRuYXZpdl9k
b21haW4tPmJhc2UuZGV2LAotCQkJCQkgICAgICAgU1pfNEssICZldG5hdml2X2RvbWFpbi0+cHRh
X2RtYSwKLQkJCQkJICAgICAgIEdGUF9LRVJORUwpOwotCWlmICghZXRuYXZpdl9kb21haW4tPnB0
YV9jcHUpIHsKLQkJcmV0ID0gLUVOT01FTTsKLQkJZ290byBmYWlsX21lbTsKLQl9Ci0KLQlldG5h
dml2X2RvbWFpbi0+bXRsYl9jcHUgPSBkbWFfYWxsb2Nfd2MoZXRuYXZpdl9kb21haW4tPmJhc2Uu
ZGV2LAotCQkJCQkJU1pfNEssICZldG5hdml2X2RvbWFpbi0+bXRsYl9kbWEsCi0JCQkJCQlHRlBf
S0VSTkVMKTsKLQlpZiAoIWV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdSkgewotCQlyZXQgPSAtRU5P
TUVNOwotCQlnb3RvIGZhaWxfbWVtOwotCX0KLQotCW1lbXNldDMyKGV0bmF2aXZfZG9tYWluLT5t
dGxiX2NwdSwgTU1VdjJfUFRFX0VYQ0VQVElPTiwKLQkJIE1NVXYyX01BWF9TVExCX0VOVFJJRVMp
OwotCi0JcmV0dXJuIDA7Ci0KLWZhaWxfbWVtOgotCWlmIChldG5hdml2X2RvbWFpbi0+YmFzZS5i
YWRfcGFnZV9jcHUpCi0JCWRtYV9mcmVlX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRldiwgU1pf
NEssCi0JCQkgICAgZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfY3B1LAotCQkJICAgIGV0
bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2RtYSk7Ci0KLQlpZiAoZXRuYXZpdl9kb21haW4t
PnB0YV9jcHUpCi0JCWRtYV9mcmVlX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEss
Ci0JCQkgICAgZXRuYXZpdl9kb21haW4tPnB0YV9jcHUsIGV0bmF2aXZfZG9tYWluLT5wdGFfZG1h
KTsKLQotCWlmIChldG5hdml2X2RvbWFpbi0+bXRsYl9jcHUpCi0JCWRtYV9mcmVlX3djKGV0bmF2
aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEssCi0JCQkgICAgZXRuYXZpdl9kb21haW4tPm10bGJf
Y3B1LCBldG5hdml2X2RvbWFpbi0+bXRsYl9kbWEpOwotCi0JcmV0dXJuIHJldDsKLX0KLQotc3Rh
dGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX2RvbWFpbl9mcmVlKHN0cnVjdCBldG5hdml2X2lvbW11
X2RvbWFpbiAqZG9tYWluKQotewotCXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5h
dml2X2RvbWFpbiA9Ci0JCQl0b19ldG5hdml2X2RvbWFpbihkb21haW4pOwotCWludCBpOwotCi0J
ZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80SywKLQkJICAgIGV0bmF2
aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2NwdSwKLQkJICAgIGV0bmF2aXZfZG9tYWluLT5iYXNl
LmJhZF9wYWdlX2RtYSk7Ci0KLQlkbWFfZnJlZV93YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYs
IFNaXzRLLAotCQkgICAgZXRuYXZpdl9kb21haW4tPnB0YV9jcHUsIGV0bmF2aXZfZG9tYWluLT5w
dGFfZG1hKTsKLQotCWRtYV9mcmVlX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEss
Ci0JCSAgICBldG5hdml2X2RvbWFpbi0+bXRsYl9jcHUsIGV0bmF2aXZfZG9tYWluLT5tdGxiX2Rt
YSk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgTU1VdjJfTUFYX1NUTEJfRU5UUklFUzsgaSsrKSB7Ci0J
CWlmIChldG5hdml2X2RvbWFpbi0+c3RsYl9jcHVbaV0pCi0JCQlkbWFfZnJlZV93YyhldG5hdml2
X2RvbWFpbi0+YmFzZS5kZXYsIFNaXzRLLAotCQkJCSAgICBldG5hdml2X2RvbWFpbi0+c3RsYl9j
cHVbaV0sCi0JCQkJICAgIGV0bmF2aXZfZG9tYWluLT5zdGxiX2RtYVtpXSk7Ci0JfQotCi0JdmZy
ZWUoZXRuYXZpdl9kb21haW4pOwotfQotCi1zdGF0aWMgc2l6ZV90IGV0bmF2aXZfaW9tbXV2Ml9k
dW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4pCitzdGF0aWMgc2l6
ZV90IGV0bmF2aXZfaW9tbXV2Ml9kdW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4
dCAqY29udGV4dCkKIHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2RvbWFpbiAqZXRuYXZpdl9k
b21haW4gPQotCQkJdG9fZXRuYXZpdl9kb21haW4oZG9tYWluKTsKKwlzdHJ1Y3QgZXRuYXZpdl9p
b21tdXYyX2NvbnRleHQgKnYyX2NvbnRleHQgPSB0b192Ml9jb250ZXh0KGNvbnRleHQpOwogCXNp
emVfdCBkdW1wX3NpemUgPSBTWl80SzsKIAlpbnQgaTsKIAogCWZvciAoaSA9IDA7IGkgPCBNTVV2
Ml9NQVhfU1RMQl9FTlRSSUVTOyBpKyspCi0JCWlmIChldG5hdml2X2RvbWFpbi0+bXRsYl9jcHVb
aV0gJiBNTVV2Ml9QVEVfUFJFU0VOVCkKKwkJaWYgKHYyX2NvbnRleHQtPm10bGJfY3B1W2ldICYg
TU1VdjJfUFRFX1BSRVNFTlQpCiAJCQlkdW1wX3NpemUgKz0gU1pfNEs7CiAKIAlyZXR1cm4gZHVt
cF9zaXplOwogfQogCi1zdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfZHVtcChzdHJ1Y3QgZXRu
YXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwgdm9pZCAqYnVmKQorc3RhdGljIHZvaWQgZXRuYXZp
dl9pb21tdXYyX2R1bXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwgdm9p
ZCAqYnVmKQogewotCXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5hdml2X2RvbWFp
biA9Ci0JCQl0b19ldG5hdml2X2RvbWFpbihkb21haW4pOworCXN0cnVjdCBldG5hdml2X2lvbW11
djJfY29udGV4dCAqdjJfY29udGV4dCA9IHRvX3YyX2NvbnRleHQoY29udGV4dCk7CiAJaW50IGk7
CiAKLQltZW1jcHkoYnVmLCBldG5hdml2X2RvbWFpbi0+bXRsYl9jcHUsIFNaXzRLKTsKKwltZW1j
cHkoYnVmLCB2Ml9jb250ZXh0LT5tdGxiX2NwdSwgU1pfNEspOwogCWJ1ZiArPSBTWl80SzsKIAlm
b3IgKGkgPSAwOyBpIDwgTU1VdjJfTUFYX1NUTEJfRU5UUklFUzsgaSsrLCBidWYgKz0gU1pfNEsp
Ci0JCWlmIChldG5hdml2X2RvbWFpbi0+bXRsYl9jcHVbaV0gJiBNTVV2Ml9QVEVfUFJFU0VOVCkK
LQkJCW1lbWNweShidWYsIGV0bmF2aXZfZG9tYWluLT5zdGxiX2NwdVtpXSwgU1pfNEspOworCQlp
ZiAodjJfY29udGV4dC0+bXRsYl9jcHVbaV0gJiBNTVV2Ml9QVEVfUFJFU0VOVCkKKwkJCW1lbWNw
eShidWYsIHYyX2NvbnRleHQtPnN0bGJfY3B1W2ldLCBTWl80Syk7CiB9CiAKLXN0YXRpYyB2b2lk
IGV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlX25vbnNlYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkK
K3N0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlX25vbnNlYyhzdHJ1Y3QgZXRuYXZp
dl9ncHUgKmdwdSwKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogewot
CXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5hdml2X2RvbWFpbiA9Ci0JCQl0b19l
dG5hdml2X2RvbWFpbihncHUtPm1tdS0+ZG9tYWluKTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYy
X2NvbnRleHQgKnYyX2NvbnRleHQgPSB0b192Ml9jb250ZXh0KGNvbnRleHQpOwogCXUxNiBwcmVm
ZXRjaDsKIAogCS8qIElmIHRoZSBNTVUgaXMgYWxyZWFkeSBlbmFibGVkIHRoZSBzdGF0ZSBpcyBz
dGlsbCB0aGVyZS4gKi8KQEAgLTIzNyw4ICsxNzEsOCBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2lv
bW11djJfcmVzdG9yZV9ub25zZWMoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJCXJldHVybjsK
IAogCXByZWZldGNoID0gZXRuYXZpdl9idWZmZXJfY29uZmlnX21tdXYyKGdwdSwKLQkJCQkodTMy
KWV0bmF2aXZfZG9tYWluLT5tdGxiX2RtYSwKLQkJCQkodTMyKWV0bmF2aXZfZG9tYWluLT5iYXNl
LmJhZF9wYWdlX2RtYSk7CisJCQkJKHUzMil2Ml9jb250ZXh0LT5tdGxiX2RtYSwKKwkJCQkodTMy
KWNvbnRleHQtPmdsb2JhbC0+YmFkX3BhZ2VfZG1hKTsKIAlldG5hdml2X2dwdV9zdGFydF9mZShn
cHUsICh1MzIpZXRuYXZpdl9jbWRidWZfZ2V0X3BhKCZncHUtPmJ1ZmZlciksCiAJCQkgICAgIHBy
ZWZldGNoKTsKIAlldG5hdml2X2dwdV93YWl0X2lkbGUoZ3B1LCAxMDApOwpAQCAtMjQ2LDEwICsx
ODAsMTAgQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfbm9uc2VjKHN0cnVj
dCBldG5hdml2X2dwdSAqZ3B1KQogCWdwdV93cml0ZShncHUsIFZJVlNfTU1VdjJfQ09OVFJPTCwg
VklWU19NTVV2Ml9DT05UUk9MX0VOQUJMRSk7CiB9CiAKLXN0YXRpYyB2b2lkIGV0bmF2aXZfaW9t
bXV2Ml9yZXN0b3JlX3NlYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKK3N0YXRpYyB2b2lkIGV0
bmF2aXZfaW9tbXV2Ml9yZXN0b3JlX3NlYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwKKwlzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogewotCXN0cnVjdCBldG5hdml2X2lv
bW11djJfZG9tYWluICpldG5hdml2X2RvbWFpbiA9Ci0JCQkJdG9fZXRuYXZpdl9kb21haW4oZ3B1
LT5tbXUtPmRvbWFpbik7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9jb250ZXh0ICp2Ml9jb250
ZXh0ID0gdG9fdjJfY29udGV4dChjb250ZXh0KTsKIAl1MTYgcHJlZmV0Y2g7CiAKIAkvKiBJZiB0
aGUgTU1VIGlzIGFscmVhZHkgZW5hYmxlZCB0aGUgc3RhdGUgaXMgc3RpbGwgdGhlcmUuICovCkBA
IC0yNTcsMjYgKzE5MSwyNiBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfcmVzdG9yZV9z
ZWMoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJCXJldHVybjsKIAogCWdwdV93cml0ZShncHUs
IFZJVlNfTU1VdjJfUFRBX0FERFJFU1NfTE9XLAotCQkgIGxvd2VyXzMyX2JpdHMoZXRuYXZpdl9k
b21haW4tPnB0YV9kbWEpKTsKKwkJICBsb3dlcl8zMl9iaXRzKGNvbnRleHQtPmdsb2JhbC0+djIu
cHRhX2RtYSkpOwogCWdwdV93cml0ZShncHUsIFZJVlNfTU1VdjJfUFRBX0FERFJFU1NfSElHSCwK
LQkJICB1cHBlcl8zMl9iaXRzKGV0bmF2aXZfZG9tYWluLT5wdGFfZG1hKSk7CisJCSAgdXBwZXJf
MzJfYml0cyhjb250ZXh0LT5nbG9iYWwtPnYyLnB0YV9kbWEpKTsKIAlncHVfd3JpdGUoZ3B1LCBW
SVZTX01NVXYyX1BUQV9DT05UUk9MLCBWSVZTX01NVXYyX1BUQV9DT05UUk9MX0VOQUJMRSk7CiAK
IAlncHVfd3JpdGUoZ3B1LCBWSVZTX01NVXYyX05PTlNFQ19TQUZFX0FERFJfTE9XLAotCQkgIGxv
d2VyXzMyX2JpdHMoZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfZG1hKSk7CisJCSAgbG93
ZXJfMzJfYml0cyhjb250ZXh0LT5nbG9iYWwtPmJhZF9wYWdlX2RtYSkpOwogCWdwdV93cml0ZShn
cHUsIFZJVlNfTU1VdjJfU0VDX1NBRkVfQUREUl9MT1csCi0JCSAgbG93ZXJfMzJfYml0cyhldG5h
dml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9kbWEpKTsKKwkJICBsb3dlcl8zMl9iaXRzKGNvbnRl
eHQtPmdsb2JhbC0+YmFkX3BhZ2VfZG1hKSk7CiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NTVV2Ml9T
QUZFX0FERFJFU1NfQ09ORklHLAogCQkgIFZJVlNfTU1VdjJfU0FGRV9BRERSRVNTX0NPTkZJR19O
T05fU0VDX1NBRkVfQUREUl9ISUdIKAotCQkgIHVwcGVyXzMyX2JpdHMoZXRuYXZpdl9kb21haW4t
PmJhc2UuYmFkX3BhZ2VfZG1hKSkgfAorCQkgIHVwcGVyXzMyX2JpdHMoY29udGV4dC0+Z2xvYmFs
LT5iYWRfcGFnZV9kbWEpKSB8CiAJCSAgVklWU19NTVV2Ml9TQUZFX0FERFJFU1NfQ09ORklHX1NF
Q19TQUZFX0FERFJfSElHSCgKLQkJICB1cHBlcl8zMl9iaXRzKGV0bmF2aXZfZG9tYWluLT5iYXNl
LmJhZF9wYWdlX2RtYSkpKTsKKwkJICB1cHBlcl8zMl9iaXRzKGNvbnRleHQtPmdsb2JhbC0+YmFk
X3BhZ2VfZG1hKSkpOwogCi0JZXRuYXZpdl9kb21haW4tPnB0YV9jcHVbMF0gPSBldG5hdml2X2Rv
bWFpbi0+bXRsYl9kbWEgfAotCQkJCSAgICAgVklWU19NTVV2Ml9DT05GSUdVUkFUSU9OX01PREVf
TU9ERTRfSzsKKwljb250ZXh0LT5nbG9iYWwtPnYyLnB0YV9jcHVbMF0gPSB2Ml9jb250ZXh0LT5t
dGxiX2RtYSB8CisJCQkJIAkgVklWU19NTVV2Ml9DT05GSUdVUkFUSU9OX01PREVfTU9ERTRfSzsK
IAogCS8qIHRyaWdnZXIgYSBQVEEgbG9hZCB0aHJvdWdoIHRoZSBGRSAqLwotCXByZWZldGNoID0g
ZXRuYXZpdl9idWZmZXJfY29uZmlnX3B0YShncHUpOworCXByZWZldGNoID0gZXRuYXZpdl9idWZm
ZXJfY29uZmlnX3B0YShncHUsIHYyX2NvbnRleHQtPmlkKTsKIAlldG5hdml2X2dwdV9zdGFydF9m
ZShncHUsICh1MzIpZXRuYXZpdl9jbWRidWZfZ2V0X3BhKCZncHUtPmJ1ZmZlciksCiAJCQkgICAg
IHByZWZldGNoKTsKIAlldG5hdml2X2dwdV93YWl0X2lkbGUoZ3B1LCAxMDApOwpAQCAtMjg0LDE0
ICsyMTgsMTUgQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfc2VjKHN0cnVj
dCBldG5hdml2X2dwdSAqZ3B1KQogCWdwdV93cml0ZShncHUsIFZJVlNfTU1VdjJfU0VDX0NPTlRS
T0wsIFZJVlNfTU1VdjJfU0VDX0NPTlRST0xfRU5BQkxFKTsKIH0KIAotdm9pZCBldG5hdml2X2lv
bW11djJfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKK3N0YXRpYyB2b2lkIGV0bmF2
aXZfaW9tbXV2Ml9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LAorCQkJCSAgICBzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogewogCXN3aXRjaCAoZ3B1LT5zZWNf
bW9kZSkgewogCWNhc2UgRVROQV9TRUNfTk9ORToKLQkJZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVf
bm9uc2VjKGdwdSk7CisJCWV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlX25vbnNlYyhncHUsIGNvbnRl
eHQpOwogCQlicmVhazsKIAljYXNlIEVUTkFfU0VDX0tFUk5FTDoKLQkJZXRuYXZpdl9pb21tdXYy
X3Jlc3RvcmVfc2VjKGdwdSk7CisJCWV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlX3NlYyhncHUsIGNv
bnRleHQpOwogCQlicmVhazsKIAlkZWZhdWx0OgogCQlXQVJOKDEsICJ1bmhhbmRsZWQgR1BVIHNl
Y3VyaXR5IG1vZGVcbiIpOwpAQCAtMjk5LDM5ICsyMzQsNTYgQEAgdm9pZCBldG5hdml2X2lvbW11
djJfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAl9CiB9CiAKLXN0YXRpYyBjb25z
dCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW5fb3BzIGV0bmF2aXZfaW9tbXV2Ml9vcHMgPSB7
Ci0JLmZyZWUgPSBldG5hdml2X2lvbW11djJfZG9tYWluX2ZyZWUsCitjb25zdCBzdHJ1Y3QgZXRu
YXZpdl9pb21tdV9vcHMgZXRuYXZpdl9pb21tdXYyX29wcyA9IHsKKwkuZnJlZSA9IGV0bmF2aXZf
aW9tbXV2Ml9mcmVlLAogCS5tYXAgPSBldG5hdml2X2lvbW11djJfbWFwLAogCS51bm1hcCA9IGV0
bmF2aXZfaW9tbXV2Ml91bm1hcCwKIAkuZHVtcF9zaXplID0gZXRuYXZpdl9pb21tdXYyX2R1bXBf
c2l6ZSwKIAkuZHVtcCA9IGV0bmF2aXZfaW9tbXV2Ml9kdW1wLAorCS5yZXN0b3JlID0gZXRuYXZp
dl9pb21tdXYyX3Jlc3RvcmUsCiB9OwogCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKgot
ZXRuYXZpdl9pb21tdXYyX2RvbWFpbl9hbGxvYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKK3N0
cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKgorZXRuYXZpdl9pb21tdXYyX2NvbnRleHRfYWxs
b2Moc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwpCiB7Ci0Jc3RydWN0IGV0bmF2
aXZfaW9tbXV2Ml9kb21haW4gKmV0bmF2aXZfZG9tYWluOwotCXN0cnVjdCBldG5hdml2X2lvbW11
X2RvbWFpbiAqZG9tYWluOwotCWludCByZXQ7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9jb250
ZXh0ICp2Ml9jb250ZXh0OworCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQ7
CiAKLQlldG5hdml2X2RvbWFpbiA9IHZ6YWxsb2Moc2l6ZW9mKCpldG5hdml2X2RvbWFpbikpOwot
CWlmICghZXRuYXZpdl9kb21haW4pCisJdjJfY29udGV4dCA9IHZ6YWxsb2Moc2l6ZW9mKCp2Ml9j
b250ZXh0KSk7CisJaWYgKCF2Ml9jb250ZXh0KQogCQlyZXR1cm4gTlVMTDsKIAotCWRvbWFpbiA9
ICZldG5hdml2X2RvbWFpbi0+YmFzZTsKKwltdXRleF9sb2NrKCZnbG9iYWwtPmxvY2spOworCXYy
X2NvbnRleHQtPmlkID0gZmluZF9maXJzdF96ZXJvX2JpdChnbG9iYWwtPnYyLnB0YV9hbGxvYywK
KwkJCQkJICAgICBFVE5BVklWX1BUQV9FTlRSSUVTKTsKKwlpZiAodjJfY29udGV4dC0+aWQgPCBF
VE5BVklWX1BUQV9FTlRSSUVTKSB7CisJCXNldF9iaXQodjJfY29udGV4dC0+aWQsIGdsb2JhbC0+
djIucHRhX2FsbG9jKTsKKwl9IGVsc2UgeworCQltdXRleF91bmxvY2soJmdsb2JhbC0+bG9jayk7
CisJCWdvdG8gb3V0X2ZyZWU7CisJfQorCW11dGV4X3VubG9jaygmZ2xvYmFsLT5sb2NrKTsKIAot
CWRvbWFpbi0+ZGV2ID0gZ3B1LT5kZXY7Ci0JZG9tYWluLT5iYXNlID0gU1pfNEs7Ci0JZG9tYWlu
LT5zaXplID0gKHU2NClTWl8xRyAqIDQgLSBTWl80SzsKLQlkb21haW4tPm9wcyA9ICZldG5hdml2
X2lvbW11djJfb3BzOworCXYyX2NvbnRleHQtPm10bGJfY3B1ID0gZG1hX2FsbG9jX3djKGdsb2Jh
bC0+ZGV2LCBTWl80SywKKwkJCQkJICAgICZ2Ml9jb250ZXh0LT5tdGxiX2RtYSwgR0ZQX0tFUk5F
TCk7CisJaWYgKCF2Ml9jb250ZXh0LT5tdGxiX2NwdSkKKwkJZ290byBvdXRfZnJlZV9pZDsKIAot
CXJldCA9IGV0bmF2aXZfaW9tbXV2Ml9pbml0KGV0bmF2aXZfZG9tYWluKTsKLQlpZiAocmV0KQot
CQlnb3RvIG91dF9mcmVlOworCW1lbXNldDMyKHYyX2NvbnRleHQtPm10bGJfY3B1LCBNTVV2Ml9Q
VEVfRVhDRVBUSU9OLAorCQkgTU1VdjJfTUFYX1NUTEJfRU5UUklFUyk7CisKKwljb250ZXh0ID0g
JnYyX2NvbnRleHQtPmJhc2U7CisJY29udGV4dC0+Z2xvYmFsID0gZ2xvYmFsOworCWtyZWZfaW5p
dCgmY29udGV4dC0+cmVmY291bnQpOworCW11dGV4X2luaXQoJmNvbnRleHQtPmxvY2spOworCUlO
SVRfTElTVF9IRUFEKCZjb250ZXh0LT5tYXBwaW5ncyk7CisJZHJtX21tX2luaXQoJmNvbnRleHQt
Pm1tLCBTWl80SywgKHU2NClTWl8xRyAqIDQgLSBTWl80Syk7CiAKLQlyZXR1cm4gJmV0bmF2aXZf
ZG9tYWluLT5iYXNlOworCXJldHVybiBjb250ZXh0OwogCitvdXRfZnJlZV9pZDoKKwljbGVhcl9i
aXQodjJfY29udGV4dC0+aWQsIGdsb2JhbC0+djIucHRhX2FsbG9jKTsKIG91dF9mcmVlOgotCXZm
cmVlKGV0bmF2aXZfZG9tYWluKTsKKwl2ZnJlZSh2Ml9jb250ZXh0KTsKIAlyZXR1cm4gTlVMTDsK
IH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11LmMgYi9k
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5jCmluZGV4IGJiZDE2MjRhM2RmOC4u
MmY2NGVlZjc3M2VkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X21tdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11LmMKQEAgLTMs
NiArMyw3IEBACiAgKiBDb3B5cmlnaHQgKEMpIDIwMTUtMjAxOCBFdG5hdml2IFByb2plY3QKICAq
LwogCisjaW5jbHVkZSA8bGludXgvZG1hLW1hcHBpbmcuaD4KICNpbmNsdWRlIDxsaW51eC9zY2F0
dGVybGlzdC5oPgogCiAjaW5jbHVkZSAiY29tbW9uLnhtbC5oIgpAQCAtMTAsMTAgKzExLDkgQEAK
ICNpbmNsdWRlICJldG5hdml2X2Rydi5oIgogI2luY2x1ZGUgImV0bmF2aXZfZ2VtLmgiCiAjaW5j
bHVkZSAiZXRuYXZpdl9ncHUuaCIKLSNpbmNsdWRlICJldG5hdml2X2lvbW11LmgiCiAjaW5jbHVk
ZSAiZXRuYXZpdl9tbXUuaCIKIAotc3RhdGljIHZvaWQgZXRuYXZpdl9kb21haW5fdW5tYXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCitzdGF0aWMgdm9pZCBldG5hdml2X2Nv
bnRleHRfdW5tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkg
dW5zaWduZWQgbG9uZyBpb3ZhLCBzaXplX3Qgc2l6ZSkKIHsKIAlzaXplX3QgdW5tYXBwZWRfcGFn
ZSwgdW5tYXBwZWQgPSAwOwpAQCAtMjYsNyArMjYsOCBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2Rv
bWFpbl91bm1hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwKIAl9CiAKIAl3
aGlsZSAodW5tYXBwZWQgPCBzaXplKSB7Ci0JCXVubWFwcGVkX3BhZ2UgPSBkb21haW4tPm9wcy0+
dW5tYXAoZG9tYWluLCBpb3ZhLCBwZ3NpemUpOworCQl1bm1hcHBlZF9wYWdlID0gY29udGV4dC0+
Z2xvYmFsLT5vcHMtPnVubWFwKGNvbnRleHQsIGlvdmEsCisJCQkJCQkJICAgIHBnc2l6ZSk7CiAJ
CWlmICghdW5tYXBwZWRfcGFnZSkKIAkJCWJyZWFrOwogCkBAIC0zNSw3ICszNiw3IEBAIHN0YXRp
YyB2b2lkIGV0bmF2aXZfZG9tYWluX3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAq
ZG9tYWluLAogCX0KIH0KIAotc3RhdGljIGludCBldG5hdml2X2RvbWFpbl9tYXAoc3RydWN0IGV0
bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCitzdGF0aWMgaW50IGV0bmF2aXZfY29udGV4dF9t
YXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCSAgICAgIHVuc2ln
bmVkIGxvbmcgaW92YSwgcGh5c19hZGRyX3QgcGFkZHIsCiAJCQkgICAgICBzaXplX3Qgc2l6ZSwg
aW50IHByb3QpCiB7CkBAIC01MSw3ICs1Miw4IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9kb21haW5f
bWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLAogCX0KIAogCXdoaWxlIChz
aXplKSB7Ci0JCXJldCA9IGRvbWFpbi0+b3BzLT5tYXAoZG9tYWluLCBpb3ZhLCBwYWRkciwgcGdz
aXplLCBwcm90KTsKKwkJcmV0ID0gY29udGV4dC0+Z2xvYmFsLT5vcHMtPm1hcChjb250ZXh0LCBp
b3ZhLCBwYWRkciwgcGdzaXplLAorCQkJCQkJcHJvdCk7CiAJCWlmIChyZXQpCiAJCQlicmVhazsK
IApAQCAtNjIsMjEgKzY0LDE5IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9kb21haW5fbWFwKHN0cnVj
dCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLAogCiAJLyogdW5yb2xsIG1hcHBpbmcgaW4g
Y2FzZSBzb21ldGhpbmcgd2VudCB3cm9uZyAqLwogCWlmIChyZXQpCi0JCWV0bmF2aXZfZG9tYWlu
X3VubWFwKGRvbWFpbiwgb3JpZ19pb3ZhLCBvcmlnX3NpemUgLSBzaXplKTsKKwkJZXRuYXZpdl9j
b250ZXh0X3VubWFwKGNvbnRleHQsIG9yaWdfaW92YSwgb3JpZ19zaXplIC0gc2l6ZSk7CiAKIAly
ZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfbWFwKHN0cnVjdCBldG5h
dml2X2lvbW11ICppb21tdSwgdTMyIGlvdmEsCitzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfbWFw
KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsIHUzMiBpb3ZhLAogCQkJICAg
ICBzdHJ1Y3Qgc2dfdGFibGUgKnNndCwgdW5zaWduZWQgbGVuLCBpbnQgcHJvdCkKLXsKLQlzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiA9IGlvbW11LT5kb21haW47Ci0Jc3RydWN0
IHNjYXR0ZXJsaXN0ICpzZzsKK3sJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZzsKIAl1bnNpZ25lZCBp
bnQgZGEgPSBpb3ZhOwogCXVuc2lnbmVkIGludCBpLCBqOwogCWludCByZXQ7CiAKLQlpZiAoIWRv
bWFpbiB8fCAhc2d0KQorCWlmICghY29udGV4dCB8fCAhc2d0KQogCQlyZXR1cm4gLUVJTlZBTDsK
IAogCWZvcl9lYWNoX3NnKHNndC0+c2dsLCBzZywgc2d0LT5uZW50cywgaSkgewpAQCAtODUsNyAr
ODUsNyBAQCBzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfbWFwKHN0cnVjdCBldG5hdml2X2lvbW11
ICppb21tdSwgdTMyIGlvdmEsCiAKIAkJVkVSQigibWFwWyVkXTogJTA4eCAlMDh4KCV6eCkiLCBp
LCBpb3ZhLCBwYSwgYnl0ZXMpOwogCi0JCXJldCA9IGV0bmF2aXZfZG9tYWluX21hcChkb21haW4s
IGRhLCBwYSwgYnl0ZXMsIHByb3QpOworCQlyZXQgPSBldG5hdml2X2NvbnRleHRfbWFwKGNvbnRl
eHQsIGRhLCBwYSwgYnl0ZXMsIHByb3QpOwogCQlpZiAocmV0KQogCQkJZ290byBmYWlsOwogCkBA
IC0xMDAsMTYgKzEwMCwxNSBAQCBzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfbWFwKHN0cnVjdCBl
dG5hdml2X2lvbW11ICppb21tdSwgdTMyIGlvdmEsCiAJZm9yX2VhY2hfc2coc2d0LT5zZ2wsIHNn
LCBpLCBqKSB7CiAJCXNpemVfdCBieXRlcyA9IHNnX2RtYV9sZW4oc2cpICsgc2ctPm9mZnNldDsK
IAotCQlldG5hdml2X2RvbWFpbl91bm1hcChkb21haW4sIGRhLCBieXRlcyk7CisJCWV0bmF2aXZf
Y29udGV4dF91bm1hcChjb250ZXh0LCBkYSwgYnl0ZXMpOwogCQlkYSArPSBieXRlczsKIAl9CiAJ
cmV0dXJuIHJldDsKIH0KIAotc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdV91bm1hcChzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdSAqaW9tbXUsIHUzMiBpb3ZhLAorc3RhdGljIHZvaWQgZXRuYXZpdl9pb21t
dV91bm1hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LCB1MzIgaW92YSwK
IAkJCQlzdHJ1Y3Qgc2dfdGFibGUgKnNndCwgdW5zaWduZWQgbGVuKQogewotCXN0cnVjdCBldG5h
dml2X2lvbW11X2RvbWFpbiAqZG9tYWluID0gaW9tbXUtPmRvbWFpbjsKIAlzdHJ1Y3Qgc2NhdHRl
cmxpc3QgKnNnOwogCXVuc2lnbmVkIGludCBkYSA9IGlvdmE7CiAJaW50IGk7CkBAIC0xMTcsNyAr
MTE2LDcgQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdV91bm1hcChzdHJ1Y3QgZXRuYXZpdl9p
b21tdSAqaW9tbXUsIHUzMiBpb3ZhLAogCWZvcl9lYWNoX3NnKHNndC0+c2dsLCBzZywgc2d0LT5u
ZW50cywgaSkgewogCQlzaXplX3QgYnl0ZXMgPSBzZ19kbWFfbGVuKHNnKSArIHNnLT5vZmZzZXQ7
CiAKLQkJZXRuYXZpdl9kb21haW5fdW5tYXAoZG9tYWluLCBkYSwgYnl0ZXMpOworCQlldG5hdml2
X2NvbnRleHRfdW5tYXAoY29udGV4dCwgZGEsIGJ5dGVzKTsKIAogCQlWRVJCKCJ1bm1hcFslZF06
ICUwOHgoJXp4KSIsIGksIGlvdmEsIGJ5dGVzKTsKIApAQCAtMTI3LDI0ICsxMjYsMjQgQEAgc3Rh
dGljIHZvaWQgZXRuYXZpdl9pb21tdV91bm1hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqaW9tbXUs
IHUzMiBpb3ZhLAogCX0KIH0KIAotc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdV9yZW1vdmVfbWFw
cGluZyhzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAorc3RhdGljIHZvaWQgZXRuYXZpdl9pb21t
dV9yZW1vdmVfbWFwcGluZyhzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAog
CXN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqbWFwcGluZykKIHsKIAlzdHJ1Y3QgZXRuYXZp
dl9nZW1fb2JqZWN0ICpldG5hdml2X29iaiA9IG1hcHBpbmctPm9iamVjdDsKIAotCWV0bmF2aXZf
aW9tbXVfdW5tYXAobW11LCBtYXBwaW5nLT52cmFtX25vZGUuc3RhcnQsCisJZXRuYXZpdl9pb21t
dV91bm1hcChjb250ZXh0LCBtYXBwaW5nLT52cmFtX25vZGUuc3RhcnQsCiAJCQkgICAgZXRuYXZp
dl9vYmotPnNndCwgZXRuYXZpdl9vYmotPmJhc2Uuc2l6ZSk7CiAJZHJtX21tX3JlbW92ZV9ub2Rl
KCZtYXBwaW5nLT52cmFtX25vZGUpOwogfQogCi1zdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfZmlu
ZF9pb3ZhKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCitzdGF0aWMgaW50IGV0bmF2aXZfaW9t
bXVfZmluZF9pb3ZhKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiAJCQkJ
ICAgc3RydWN0IGRybV9tbV9ub2RlICpub2RlLCBzaXplX3Qgc2l6ZSkKIHsKIAlzdHJ1Y3QgZXRu
YXZpdl92cmFtX21hcHBpbmcgKmZyZWUgPSBOVUxMOwogCWVudW0gZHJtX21tX2luc2VydF9tb2Rl
IG1vZGUgPSBEUk1fTU1fSU5TRVJUX0xPVzsKIAlpbnQgcmV0OwogCi0JbG9ja2RlcF9hc3NlcnRf
aGVsZCgmbW11LT5sb2NrKTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZjb250ZXh0LT5sb2NrKTsK
IAogCXdoaWxlICgxKSB7CiAJCXN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqbSwgKm47CkBA
IC0xNTIsMTcgKzE1MSwxNyBAQCBzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfZmluZF9pb3ZhKHN0
cnVjdCBldG5hdml2X2lvbW11ICptbXUsCiAJCXN0cnVjdCBsaXN0X2hlYWQgbGlzdDsKIAkJYm9v
bCBmb3VuZDsKIAotCQlyZXQgPSBkcm1fbW1faW5zZXJ0X25vZGVfaW5fcmFuZ2UoJm1tdS0+bW0s
IG5vZGUsCisJCXJldCA9IGRybV9tbV9pbnNlcnRfbm9kZV9pbl9yYW5nZSgmY29udGV4dC0+bW0s
IG5vZGUsCiAJCQkJCQkgIHNpemUsIDAsIDAsIDAsIFU2NF9NQVgsIG1vZGUpOwogCQlpZiAocmV0
ICE9IC1FTk9TUEMpCiAJCQlicmVhazsKIAogCQkvKiBUcnkgdG8gcmV0aXJlIHNvbWUgZW50cmll
cyAqLwotCQlkcm1fbW1fc2Nhbl9pbml0KCZzY2FuLCAmbW11LT5tbSwgc2l6ZSwgMCwgMCwgbW9k
ZSk7CisJCWRybV9tbV9zY2FuX2luaXQoJnNjYW4sICZjb250ZXh0LT5tbSwgc2l6ZSwgMCwgMCwg
bW9kZSk7CiAKIAkJZm91bmQgPSAwOwogCQlJTklUX0xJU1RfSEVBRCgmbGlzdCk7Ci0JCWxpc3Rf
Zm9yX2VhY2hfZW50cnkoZnJlZSwgJm1tdS0+bWFwcGluZ3MsIG1tdV9ub2RlKSB7CisJCWxpc3Rf
Zm9yX2VhY2hfZW50cnkoZnJlZSwgJmNvbnRleHQtPm1hcHBpbmdzLCBtbXVfbm9kZSkgewogCQkJ
LyogSWYgdGhpcyB2cmFtIG5vZGUgaGFzIG5vdCBiZWVuIHVzZWQsIHNraXAgdGhpcy4gKi8KIAkJ
CWlmICghZnJlZS0+dnJhbV9ub2RlLm1tKQogCQkJCWNvbnRpbnVlOwpAQCAtMjA0LDggKzIwMyw4
IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9maW5kX2lvdmEoc3RydWN0IGV0bmF2aXZfaW9t
bXUgKm1tdSwKIAkJICogdGhpcyBtYXBwaW5nLgogCQkgKi8KIAkJbGlzdF9mb3JfZWFjaF9lbnRy
eV9zYWZlKG0sIG4sICZsaXN0LCBzY2FuX25vZGUpIHsKLQkJCWV0bmF2aXZfaW9tbXVfcmVtb3Zl
X21hcHBpbmcobW11LCBtKTsKLQkJCW0tPm1tdSA9IE5VTEw7CisJCQlldG5hdml2X2lvbW11X3Jl
bW92ZV9tYXBwaW5nKGNvbnRleHQsIG0pOworCQkJbS0+Y29udGV4dCA9IE5VTEw7CiAJCQlsaXN0
X2RlbF9pbml0KCZtLT5tbXVfbm9kZSk7CiAJCQlsaXN0X2RlbF9pbml0KCZtLT5zY2FuX25vZGUp
OwogCQl9CkBAIC0yMjEsNyArMjIwLDcgQEAgc3RhdGljIGludCBldG5hdml2X2lvbW11X2ZpbmRf
aW92YShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAogCXJldHVybiByZXQ7CiB9CiAKLWludCBl
dG5hdml2X2lvbW11X21hcF9nZW0oc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK2ludCBldG5h
dml2X2lvbW11X21hcF9nZW0oc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwK
IAlzdHJ1Y3QgZXRuYXZpdl9nZW1fb2JqZWN0ICpldG5hdml2X29iaiwgdTMyIG1lbW9yeV9iYXNl
LAogCXN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqbWFwcGluZykKIHsKQEAgLTIzMSwxNyAr
MjMwLDE3IEBAIGludCBldG5hdml2X2lvbW11X21hcF9nZW0oc3RydWN0IGV0bmF2aXZfaW9tbXUg
Km1tdSwKIAogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmV0bmF2aXZfb2JqLT5sb2NrKTsKIAotCW11
dGV4X2xvY2soJm1tdS0+bG9jayk7CisJbXV0ZXhfbG9jaygmY29udGV4dC0+bG9jayk7CiAKIAkv
KiB2MSBNTVUgY2FuIG9wdGltaXplIHNpbmdsZSBlbnRyeSAoY29udGlndW91cykgc2NhdHRlcmxp
c3RzICovCi0JaWYgKG1tdS0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxICYmCisJaWYgKGNv
bnRleHQtPmdsb2JhbC0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxICYmCiAJICAgIHNndC0+
bmVudHMgPT0gMSAmJiAhKGV0bmF2aXZfb2JqLT5mbGFncyAmIEVUTkFfQk9fRk9SQ0VfTU1VKSkg
ewogCQl1MzIgaW92YTsKIAogCQlpb3ZhID0gc2dfZG1hX2FkZHJlc3Moc2d0LT5zZ2wpIC0gbWVt
b3J5X2Jhc2U7CiAJCWlmIChpb3ZhIDwgMHg4MDAwMDAwMCAtIHNnX2RtYV9sZW4oc2d0LT5zZ2wp
KSB7CiAJCQltYXBwaW5nLT5pb3ZhID0gaW92YTsKLQkJCWxpc3RfYWRkX3RhaWwoJm1hcHBpbmct
Pm1tdV9ub2RlLCAmbW11LT5tYXBwaW5ncyk7CisJCQlsaXN0X2FkZF90YWlsKCZtYXBwaW5nLT5t
bXVfbm9kZSwgJmNvbnRleHQtPm1hcHBpbmdzKTsKIAkJCXJldCA9IDA7CiAJCQlnb3RvIHVubG9j
azsKIAkJfQpAQCAtMjQ5LDEyICsyNDgsMTIgQEAgaW50IGV0bmF2aXZfaW9tbXVfbWFwX2dlbShz
dHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAogCiAJbm9kZSA9ICZtYXBwaW5nLT52cmFtX25vZGU7
CiAKLQlyZXQgPSBldG5hdml2X2lvbW11X2ZpbmRfaW92YShtbXUsIG5vZGUsIGV0bmF2aXZfb2Jq
LT5iYXNlLnNpemUpOworCXJldCA9IGV0bmF2aXZfaW9tbXVfZmluZF9pb3ZhKGNvbnRleHQsIG5v
ZGUsIGV0bmF2aXZfb2JqLT5iYXNlLnNpemUpOwogCWlmIChyZXQgPCAwKQogCQlnb3RvIHVubG9j
azsKIAogCW1hcHBpbmctPmlvdmEgPSBub2RlLT5zdGFydDsKLQlyZXQgPSBldG5hdml2X2lvbW11
X21hcChtbXUsIG5vZGUtPnN0YXJ0LCBzZ3QsIGV0bmF2aXZfb2JqLT5iYXNlLnNpemUsCisJcmV0
ID0gZXRuYXZpdl9pb21tdV9tYXAoY29udGV4dCwgbm9kZS0+c3RhcnQsIHNndCwgZXRuYXZpdl9v
YmotPmJhc2Uuc2l6ZSwKIAkJCQlFVE5BVklWX1BST1RfUkVBRCB8IEVUTkFWSVZfUFJPVF9XUklU
RSk7CiAKIAlpZiAocmV0IDwgMCkgewpAQCAtMjYyLDg0ICsyNjEsNjMgQEAgaW50IGV0bmF2aXZf
aW9tbXVfbWFwX2dlbShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAogCQlnb3RvIHVubG9jazsK
IAl9CiAKLQlsaXN0X2FkZF90YWlsKCZtYXBwaW5nLT5tbXVfbm9kZSwgJm1tdS0+bWFwcGluZ3Mp
OwotCW1tdS0+Zmx1c2hfc2VxKys7CisJbGlzdF9hZGRfdGFpbCgmbWFwcGluZy0+bW11X25vZGUs
ICZjb250ZXh0LT5tYXBwaW5ncyk7CisJY29udGV4dC0+Zmx1c2hfc2VxKys7CiB1bmxvY2s6Ci0J
bXV0ZXhfdW5sb2NrKCZtbXUtPmxvY2spOworCW11dGV4X3VubG9jaygmY29udGV4dC0+bG9jayk7
CiAKIAlyZXR1cm4gcmV0OwogfQogCi12b2lkIGV0bmF2aXZfaW9tbXVfdW5tYXBfZ2VtKHN0cnVj
dCBldG5hdml2X2lvbW11ICptbXUsCit2b2lkIGV0bmF2aXZfaW9tbXVfdW5tYXBfZ2VtKHN0cnVj
dCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiAJc3RydWN0IGV0bmF2aXZfdnJhbV9t
YXBwaW5nICptYXBwaW5nKQogewogCVdBUk5fT04obWFwcGluZy0+dXNlKTsKIAotCW11dGV4X2xv
Y2soJm1tdS0+bG9jayk7CisJbXV0ZXhfbG9jaygmY29udGV4dC0+bG9jayk7CiAKIAkvKiBJZiB0
aGUgdnJhbSBub2RlIGlzIG9uIHRoZSBtbSwgdW5tYXAgYW5kIHJlbW92ZSB0aGUgbm9kZSAqLwot
CWlmIChtYXBwaW5nLT52cmFtX25vZGUubW0gPT0gJm1tdS0+bW0pCi0JCWV0bmF2aXZfaW9tbXVf
cmVtb3ZlX21hcHBpbmcobW11LCBtYXBwaW5nKTsKKwlpZiAobWFwcGluZy0+dnJhbV9ub2RlLm1t
ID09ICZjb250ZXh0LT5tbSkKKwkJZXRuYXZpdl9pb21tdV9yZW1vdmVfbWFwcGluZyhjb250ZXh0
LCBtYXBwaW5nKTsKIAogCWxpc3RfZGVsKCZtYXBwaW5nLT5tbXVfbm9kZSk7Ci0JbW11LT5mbHVz
aF9zZXErKzsKLQltdXRleF91bmxvY2soJm1tdS0+bG9jayk7CisJY29udGV4dC0+Zmx1c2hfc2Vx
Kys7CisJbXV0ZXhfdW5sb2NrKCZjb250ZXh0LT5sb2NrKTsKIH0KIAotdm9pZCBldG5hdml2X2lv
bW11X2Rlc3Ryb3koc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSkKK3N0YXRpYyB2b2lkIGV0bmF2
aXZfaW9tbXVfY29udGV4dF9mcmVlKHN0cnVjdCBrcmVmICprcmVmKQogewotCWRybV9tbV90YWtl
ZG93bigmbW11LT5tbSk7Ci0JbW11LT5kb21haW4tPm9wcy0+ZnJlZShtbXUtPmRvbWFpbik7Ci0J
a2ZyZWUobW11KTsKLX0KKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0ID0K
KwkJY29udGFpbmVyX29mKGtyZWYsIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQsIHJlZmNv
dW50KTsKIAotc3RydWN0IGV0bmF2aXZfaW9tbXUgKmV0bmF2aXZfaW9tbXVfbmV3KHN0cnVjdCBl
dG5hdml2X2dwdSAqZ3B1KQorCWNvbnRleHQtPmdsb2JhbC0+b3BzLT5mcmVlKGNvbnRleHQpOwor
fQordm9pZCBldG5hdml2X2lvbW11X2NvbnRleHRfcHV0KHN0cnVjdCBldG5hdml2X2lvbW11X2Nv
bnRleHQgKmNvbnRleHQpCiB7Ci0JZW51bSBldG5hdml2X2lvbW11X3ZlcnNpb24gdmVyc2lvbjsK
LQlzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11OwotCi0JbW11ID0ga3phbGxvYyhzaXplb2YoKm1t
dSksIEdGUF9LRVJORUwpOwotCWlmICghbW11KQotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsK
LQotCWlmICghKGdwdS0+aWRlbnRpdHkubWlub3JfZmVhdHVyZXMxICYgY2hpcE1pbm9yRmVhdHVy
ZXMxX01NVV9WRVJTSU9OKSkgewotCQltbXUtPmRvbWFpbiA9IGV0bmF2aXZfaW9tbXV2MV9kb21h
aW5fYWxsb2MoZ3B1KTsKLQkJdmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjE7Ci0JfSBlbHNlIHsK
LQkJbW11LT5kb21haW4gPSBldG5hdml2X2lvbW11djJfZG9tYWluX2FsbG9jKGdwdSk7Ci0JCXZl
cnNpb24gPSBFVE5BVklWX0lPTU1VX1YyOwotCX0KLQotCWlmICghbW11LT5kb21haW4pIHsKLQkJ
ZGV2X2VycihncHUtPmRldiwgIkZhaWxlZCB0byBhbGxvY2F0ZSBHUFUgSU9NTVUgZG9tYWluXG4i
KTsKLQkJa2ZyZWUobW11KTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7Ci0JfQotCi0JbW11
LT5ncHUgPSBncHU7Ci0JbW11LT52ZXJzaW9uID0gdmVyc2lvbjsKLQltdXRleF9pbml0KCZtbXUt
PmxvY2spOwotCUlOSVRfTElTVF9IRUFEKCZtbXUtPm1hcHBpbmdzKTsKLQotCWRybV9tbV9pbml0
KCZtbXUtPm1tLCBtbXUtPmRvbWFpbi0+YmFzZSwgbW11LT5kb21haW4tPnNpemUpOwotCi0JcmV0
dXJuIG1tdTsKKwlrcmVmX3B1dCgmY29udGV4dC0+cmVmY291bnQsIGV0bmF2aXZfaW9tbXVfY29u
dGV4dF9mcmVlKTsKIH0KIAotdm9pZCBldG5hdml2X2lvbW11X3Jlc3RvcmUoc3RydWN0IGV0bmF2
aXZfZ3B1ICpncHUpCitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICoKK2V0bmF2aXZfaW9t
bXVfY29udGV4dF9pbml0KHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsKQogewot
CWlmIChncHUtPm1tdS0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxKQotCQlldG5hdml2X2lv
bW11djFfcmVzdG9yZShncHUpOworCWlmIChnbG9iYWwtPnZlcnNpb24gPT0gRVROQVZJVl9JT01N
VV9WMSkKKwkJcmV0dXJuIGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0X2FsbG9jKGdsb2JhbCk7CiAJ
ZWxzZQotCQlldG5hdml2X2lvbW11djJfcmVzdG9yZShncHUpOworCQlyZXR1cm4gZXRuYXZpdl9p
b21tdXYyX2NvbnRleHRfYWxsb2MoZ2xvYmFsKTsKK30KKwordm9pZCBldG5hdml2X2lvbW11X3Jl
c3RvcmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsCisJCQkgICBzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9jb250ZXh0ICpjb250ZXh0KQoreworCWNvbnRleHQtPmdsb2JhbC0+b3BzLT5yZXN0b3JlKGdw
dSwgY29udGV4dCk7CiB9CiAKLWludCBldG5hdml2X2lvbW11X2dldF9zdWJhbGxvY192YShzdHJ1
Y3QgZXRuYXZpdl9pb21tdSAqbW11LAoraW50IGV0bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3Zh
KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiAJCQkJICBzdHJ1Y3QgZXRu
YXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcsCiAJCQkJICB1MzIgbWVtb3J5X2Jhc2UsIGRtYV9h
ZGRyX3QgcGFkZHIsCiAJCQkJICBzaXplX3Qgc2l6ZSkKIHsKLQltdXRleF9sb2NrKCZtbXUtPmxv
Y2spOworCW11dGV4X2xvY2soJmNvbnRleHQtPmxvY2spOwogCiAJLyoKIAkgKiBGb3IgTU1VdjEg
d2UgZG9uJ3QgYWRkIHRoZSBzdWJhbGxvYyByZWdpb24gdG8gdGhlIHBhZ2V0YWJsZXMsIGFzCkBA
IC0zNDcsNDAgKzMyNSw0MCBAQCBpbnQgZXRuYXZpdl9pb21tdV9nZXRfc3ViYWxsb2NfdmEoc3Ry
dWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKIAkgKiB3aW5kb3cuIEluc3RlYWQgd2UgbWFudWZhY3R1
cmUgYSBtYXBwaW5nIHRvIG1ha2UgaXQgbG9vayB1bmlmb3JtCiAJICogdG8gdGhlIHVwcGVyIGxh
eWVycy4KIAkgKi8KLQlpZiAobW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpIHsKKwlp
ZiAoY29udGV4dC0+Z2xvYmFsLT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpIHsKIAkJbWFw
cGluZy0+aW92YSA9IHBhZGRyIC0gbWVtb3J5X2Jhc2U7CiAJfSBlbHNlIHsKIAkJc3RydWN0IGRy
bV9tbV9ub2RlICpub2RlID0gJm1hcHBpbmctPnZyYW1fbm9kZTsKIAkJaW50IHJldDsKIAotCQly
ZXQgPSBldG5hdml2X2lvbW11X2ZpbmRfaW92YShtbXUsIG5vZGUsIHNpemUpOworCQlyZXQgPSBl
dG5hdml2X2lvbW11X2ZpbmRfaW92YShjb250ZXh0LCBub2RlLCBzaXplKTsKIAkJaWYgKHJldCA8
IDApIHsKLQkJCW11dGV4X3VubG9jaygmbW11LT5sb2NrKTsKKwkJCW11dGV4X3VubG9jaygmY29u
dGV4dC0+bG9jayk7CiAJCQlyZXR1cm4gcmV0OwogCQl9CiAKIAkJbWFwcGluZy0+aW92YSA9IG5v
ZGUtPnN0YXJ0OwotCQlyZXQgPSBldG5hdml2X2RvbWFpbl9tYXAobW11LT5kb21haW4sIG5vZGUt
PnN0YXJ0LCBwYWRkciwgc2l6ZSwKLQkJCQkJIEVUTkFWSVZfUFJPVF9SRUFEKTsKKwkJcmV0ID0g
ZXRuYXZpdl9jb250ZXh0X21hcChjb250ZXh0LCBub2RlLT5zdGFydCwgcGFkZHIsIHNpemUsCisJ
CQkJCSAgRVROQVZJVl9QUk9UX1JFQUQpOwogCiAJCWlmIChyZXQgPCAwKSB7CiAJCQlkcm1fbW1f
cmVtb3ZlX25vZGUobm9kZSk7Ci0JCQltdXRleF91bmxvY2soJm1tdS0+bG9jayk7CisJCQltdXRl
eF91bmxvY2soJmNvbnRleHQtPmxvY2spOwogCQkJcmV0dXJuIHJldDsKIAkJfQogCi0JCW1tdS0+
Zmx1c2hfc2VxKys7CisJCWNvbnRleHQtPmZsdXNoX3NlcSsrOwogCX0KIAotCWxpc3RfYWRkX3Rh
aWwoJm1hcHBpbmctPm1tdV9ub2RlLCAmbW11LT5tYXBwaW5ncyk7CisJbGlzdF9hZGRfdGFpbCgm
bWFwcGluZy0+bW11X25vZGUsICZjb250ZXh0LT5tYXBwaW5ncyk7CiAJbWFwcGluZy0+dXNlID0g
MTsKIAotCW11dGV4X3VubG9jaygmbW11LT5sb2NrKTsKKwltdXRleF91bmxvY2soJmNvbnRleHQt
PmxvY2spOwogCiAJcmV0dXJuIDA7CiB9CiAKLXZvaWQgZXRuYXZpdl9pb21tdV9wdXRfc3ViYWxs
b2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9pb21tdV9wdXRf
c3ViYWxsb2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJICBz
dHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcpCiB7CiAJc3RydWN0IGRybV9tbV9u
b2RlICpub2RlID0gJm1hcHBpbmctPnZyYW1fbm9kZTsKQEAgLTM5MCwyMSArMzY4LDEwNCBAQCB2
b2lkIGV0bmF2aXZfaW9tbXVfcHV0X3N1YmFsbG9jX3ZhKHN0cnVjdCBldG5hdml2X2lvbW11ICpt
bXUsCiAKIAltYXBwaW5nLT51c2UgPSAwOwogCi0JaWYgKG1tdS0+dmVyc2lvbiA9PSBFVE5BVklW
X0lPTU1VX1YxKQorCWlmIChjb250ZXh0LT5nbG9iYWwtPnZlcnNpb24gPT0gRVROQVZJVl9JT01N
VV9WMSkKIAkJcmV0dXJuOwogCi0JbXV0ZXhfbG9jaygmbW11LT5sb2NrKTsKLQlldG5hdml2X2Rv
bWFpbl91bm1hcChtbXUtPmRvbWFpbiwgbm9kZS0+c3RhcnQsIG5vZGUtPnNpemUpOworCW11dGV4
X2xvY2soJmNvbnRleHQtPmxvY2spOworCWV0bmF2aXZfY29udGV4dF91bm1hcChjb250ZXh0LCBu
b2RlLT5zdGFydCwgbm9kZS0+c2l6ZSk7CiAJZHJtX21tX3JlbW92ZV9ub2RlKG5vZGUpOwotCW11
dGV4X3VubG9jaygmbW11LT5sb2NrKTsKKwltdXRleF91bmxvY2soJmNvbnRleHQtPmxvY2spOwor
fQorCitzaXplX3QgZXRuYXZpdl9pb21tdV9kdW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9tbXVf
Y29udGV4dCAqY29udGV4dCkKK3sKKwlyZXR1cm4gY29udGV4dC0+Z2xvYmFsLT5vcHMtPmR1bXBf
c2l6ZShjb250ZXh0KTsKK30KKwordm9pZCBldG5hdml2X2lvbW11X2R1bXAoc3RydWN0IGV0bmF2
aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwgdm9pZCAqYnVmKQoreworCWNvbnRleHQtPmdsb2Jh
bC0+b3BzLT5kdW1wKGNvbnRleHQsIGJ1Zik7CiB9CiAKLXNpemVfdCBldG5hdml2X2lvbW11X2R1
bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqaW9tbXUpCitpbnQgZXRuYXZpdl9pb21tdV9n
bG9iYWxfaW5pdChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIHsKLQlyZXR1cm4gaW9tbXUtPmRv
bWFpbi0+b3BzLT5kdW1wX3NpemUoaW9tbXUtPmRvbWFpbik7CisJZW51bSBldG5hdml2X2lvbW11
X3ZlcnNpb24gdmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjE7CisJc3RydWN0IGV0bmF2aXZfZHJt
X3ByaXZhdGUgKnByaXYgPSBncHUtPmRybS0+ZGV2X3ByaXZhdGU7CisJc3RydWN0IGV0bmF2aXZf
aW9tbXVfZ2xvYmFsICpnbG9iYWw7CisJc3RydWN0IGRldmljZSAqZGV2ID0gZ3B1LT5kcm0tPmRl
djsKKworCWlmIChncHUtPmlkZW50aXR5Lm1pbm9yX2ZlYXR1cmVzMSAmIGNoaXBNaW5vckZlYXR1
cmVzMV9NTVVfVkVSU0lPTikKKwkJdmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjI7CisKKwlpZiAo
cHJpdi0+bW11X2dsb2JhbCkgeworCQlpZiAocHJpdi0+bW11X2dsb2JhbC0+dmVyc2lvbiAhPSB2
ZXJzaW9uKSB7CisJCQlkZXZfZXJyKGdwdS0+ZGV2LAorCQkJCSJNTVUgdmVyc2lvbiBkb2Vzbid0
IG1hdGNoIGdsb2JhbCB2ZXJzaW9uXG4iKTsKKwkJCXJldHVybiAtRU5YSU87CisJCX0KKworCQlw
cml2LT5tbXVfZ2xvYmFsLT51c2UrKzsKKwkJcmV0dXJuIDA7CisJfQorCisJZ2xvYmFsID0ga3ph
bGxvYyhzaXplb2YoKmdsb2JhbCksIEdGUF9LRVJORUwpOworCWlmICghZ2xvYmFsKQorCQlyZXR1
cm4gLUVOT01FTTsKKworCWdsb2JhbC0+YmFkX3BhZ2VfY3B1ID0gZG1hX2FsbG9jX3djKGRldiwg
U1pfNEssICZnbG9iYWwtPmJhZF9wYWdlX2RtYSwKKwkJCQkJICAgIEdGUF9LRVJORUwpOworCWlm
ICghZ2xvYmFsLT5iYWRfcGFnZV9jcHUpCisJCWdvdG8gZnJlZV9nbG9iYWw7CisKKwltZW1zZXQz
MihnbG9iYWwtPmJhZF9wYWdlX2NwdSwgMHhkZWFkNTVhYSwgU1pfNEsgLyBzaXplb2YodTMyKSk7
CisKKwlpZiAodmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YyKSB7CisJCWdsb2JhbC0+djIucHRh
X2NwdSA9IGRtYV9hbGxvY193YyhkZXYsIEVUTkFWSVZfUFRBX1NJWkUsCisJCQkJCSAgICAgICAm
Z2xvYmFsLT52Mi5wdGFfZG1hLCBHRlBfS0VSTkVMKTsKKwkJaWYgKCFnbG9iYWwtPnYyLnB0YV9j
cHUpCisJCQlnb3RvIGZyZWVfYmFkX3BhZ2U7CisJfQorCisJZ2xvYmFsLT5kZXYgPSBkZXY7CisJ
Z2xvYmFsLT52ZXJzaW9uID0gdmVyc2lvbjsKKwlnbG9iYWwtPnVzZSA9IDE7CisJbXV0ZXhfaW5p
dCgmZ2xvYmFsLT5sb2NrKTsKKworCWlmICh2ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpCisJ
CWdsb2JhbC0+b3BzID0gJmV0bmF2aXZfaW9tbXV2MV9vcHM7CisJZWxzZQorCQlnbG9iYWwtPm9w
cyA9ICZldG5hdml2X2lvbW11djJfb3BzOworCisJcHJpdi0+bW11X2dsb2JhbCA9IGdsb2JhbDsK
KworCXJldHVybiAwOworCitmcmVlX2JhZF9wYWdlOgorCWRtYV9mcmVlX3djKGRldiwgU1pfNEss
IGdsb2JhbC0+YmFkX3BhZ2VfY3B1LCBnbG9iYWwtPmJhZF9wYWdlX2RtYSk7CitmcmVlX2dsb2Jh
bDoKKwlrZnJlZShnbG9iYWwpOworCisJcmV0dXJuIC1FTk9NRU07CiB9CiAKLXZvaWQgZXRuYXZp
dl9pb21tdV9kdW1wKHN0cnVjdCBldG5hdml2X2lvbW11ICppb21tdSwgdm9pZCAqYnVmKQordm9p
ZCBldG5hdml2X2lvbW11X2dsb2JhbF9maW5pKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogewot
CWlvbW11LT5kb21haW4tPm9wcy0+ZHVtcChpb21tdS0+ZG9tYWluLCBidWYpOworCXN0cnVjdCBl
dG5hdml2X2RybV9wcml2YXRlICpwcml2ID0gZ3B1LT5kcm0tPmRldl9wcml2YXRlOworCXN0cnVj
dCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsID0gcHJpdi0+bW11X2dsb2JhbDsKKworCWlm
ICgtLWdsb2JhbC0+dXNlID4gMCkKKwkJcmV0dXJuOworCisJaWYgKGdsb2JhbC0+djIucHRhX2Nw
dSkKKwkJZG1hX2ZyZWVfd2MoZ2xvYmFsLT5kZXYsIEVUTkFWSVZfUFRBX1NJWkUsCisJCQkgICAg
Z2xvYmFsLT52Mi5wdGFfY3B1LCBnbG9iYWwtPnYyLnB0YV9kbWEpOworCisJaWYgKGdsb2JhbC0+
YmFkX3BhZ2VfY3B1KQorCQlkbWFfZnJlZV93YyhnbG9iYWwtPmRldiwgU1pfNEssCisJCQkgICAg
Z2xvYmFsLT5iYWRfcGFnZV9jcHUsIGdsb2JhbC0+YmFkX3BhZ2VfZG1hKTsKKworCW11dGV4X2Rl
c3Ryb3koJmdsb2JhbC0+bG9jayk7CisJa2ZyZWUoZ2xvYmFsKTsKKworCXByaXYtPm1tdV9nbG9i
YWwgPSBOVUxMOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZp
dl9tbXUuaCBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11LmgKaW5kZXggMzRh
ZmUyNWRmOWNhLi40NDM4ZDY2ZGI2YWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfbW11LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9t
bXUuaApAQCAtMTYsMzMgKzE2LDU4IEBAIGVudW0gZXRuYXZpdl9pb21tdV92ZXJzaW9uIHsKIAog
c3RydWN0IGV0bmF2aXZfZ3B1Owogc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nOwotc3RydWN0
IGV0bmF2aXZfaW9tbXVfZG9tYWluOworc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsOworc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dDsKIAotc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWlu
X29wcyB7Ci0Jdm9pZCAoKmZyZWUpKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqKTsKLQlp
bnQgKCptYXApKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLCB1bnNpZ25lZCBs
b25nIGlvdmEsCitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9vcHMgeworCXN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKigqaW5pdCkoc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICopOworCXZv
aWQgKCpmcmVlKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICopOworCWludCAoKm1hcCko
c3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwgdW5zaWduZWQgbG9uZyBpb3Zh
LAogCQkgICBwaHlzX2FkZHJfdCBwYWRkciwgc2l6ZV90IHNpemUsIGludCBwcm90KTsKLQlzaXpl
X3QgKCp1bm1hcCkoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sIHVuc2lnbmVk
IGxvbmcgaW92YSwKKwlzaXplX3QgKCp1bm1hcCkoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4
dCAqY29udGV4dCwgdW5zaWduZWQgbG9uZyBpb3ZhLAogCQkJc2l6ZV90IHNpemUpOwotCXNpemVf
dCAoKmR1bXBfc2l6ZSkoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICopOwotCXZvaWQgKCpk
dW1wKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKiwgdm9pZCAqKTsKKwlzaXplX3QgKCpk
dW1wX3NpemUpKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKik7CisJdm9pZCAoKmR1bXAp
KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKiwgdm9pZCAqKTsKKwl2b2lkICgqcmVzdG9y
ZSkoc3RydWN0IGV0bmF2aXZfZ3B1ICosIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKik7
CiB9OwogCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4geworZXh0ZXJuIGNvbnN0IHN0cnVj
dCBldG5hdml2X2lvbW11X29wcyBldG5hdml2X2lvbW11djFfb3BzOworZXh0ZXJuIGNvbnN0IHN0
cnVjdCBldG5hdml2X2lvbW11X29wcyBldG5hdml2X2lvbW11djJfb3BzOworCisjZGVmaW5lIEVU
TkFWSVZfUFRBX1NJWkUJU1pfNEsKKyNkZWZpbmUgRVROQVZJVl9QVEFfRU5UUklFUwkoRVROQVZJ
Vl9QVEFfU0laRSAvIHNpemVvZih1NjQpKQorCitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwg
ewogCXN0cnVjdCBkZXZpY2UgKmRldjsKKwllbnVtIGV0bmF2aXZfaW9tbXVfdmVyc2lvbiB2ZXJz
aW9uOworCWNvbnN0IHN0cnVjdCBldG5hdml2X2lvbW11X29wcyAqb3BzOworCXVuc2lnbmVkIGlu
dCB1c2U7CisJc3RydWN0IG11dGV4IGxvY2s7CisKIAl2b2lkICpiYWRfcGFnZV9jcHU7CiAJZG1h
X2FkZHJfdCBiYWRfcGFnZV9kbWE7Ci0JdTY0IGJhc2U7Ci0JdTY0IHNpemU7CiAKLQljb25zdCBz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW5fb3BzICpvcHM7CisJLyoKKwkgKiBUaGlzIHVuaW9u
IGhvbGRzIG1lbWJlcnMgbmVlZGVkIGJ5IGVpdGhlciBNTVV2MSBvciBNTVV2Miwgd2hpY2gKKwkg
KiBjYW4gbm90IGV4aXN0IGF0IHRoZSBzYW1lIHRpbWUuCisJICovCisJdW5pb24geworCQlzdHJ1
Y3QgeworCQkJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqc2hhcmVkX2NvbnRleHQ7CisJ
CX0gdjE7CisJCXN0cnVjdCB7CisJCQkvKiBQKGFnZSkgVChhYmxlKSBBKHJyYXkpICovCisJCQl1
NjQgKnB0YV9jcHU7CisJCQlkbWFfYWRkcl90IHB0YV9kbWE7CisJCQlzdHJ1Y3Qgc3BpbmxvY2sg
cHRhX2xvY2s7CisJCQlERUNMQVJFX0JJVE1BUChwdGFfYWxsb2MsIEVUTkFWSVZfUFRBX0VOVFJJ
RVMpOworCQl9IHYyOworCX07CiB9OwogCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdSB7Ci0Jc3RydWN0
IGV0bmF2aXZfZ3B1ICpncHU7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW47
Ci0KLQllbnVtIGV0bmF2aXZfaW9tbXVfdmVyc2lvbiB2ZXJzaW9uOworc3RydWN0IGV0bmF2aXZf
aW9tbXVfY29udGV4dCB7CisJc3RydWN0IGtyZWYgcmVmY291bnQ7CisJc3RydWN0IGV0bmF2aXZf
aW9tbXVfZ2xvYmFsICpnbG9iYWw7CiAKIAkvKiBtZW1vcnkgbWFuYWdlciBmb3IgR1BVIGFkZHJl
c3MgYXJlYSAqLwogCXN0cnVjdCBtdXRleCBsb2NrOwpAQCAtNTEsMjYgKzc2LDQwIEBAIHN0cnVj
dCBldG5hdml2X2lvbW11IHsKIAl1bnNpZ25lZCBpbnQgZmx1c2hfc2VxOwogfTsKIAoraW50IGV0
bmF2aXZfaW9tbXVfZ2xvYmFsX2luaXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOwordm9pZCBl
dG5hdml2X2lvbW11X2dsb2JhbF9maW5pKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsKKwogc3Ry
dWN0IGV0bmF2aXZfZ2VtX29iamVjdDsKIAotaW50IGV0bmF2aXZfaW9tbXVfbWFwX2dlbShzdHJ1
Y3QgZXRuYXZpdl9pb21tdSAqbW11LAoraW50IGV0bmF2aXZfaW9tbXVfbWFwX2dlbShzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCXN0cnVjdCBldG5hdml2X2dlbV9vYmpl
Y3QgKmV0bmF2aXZfb2JqLCB1MzIgbWVtb3J5X2Jhc2UsCiAJc3RydWN0IGV0bmF2aXZfdnJhbV9t
YXBwaW5nICptYXBwaW5nKTsKLXZvaWQgZXRuYXZpdl9pb21tdV91bm1hcF9nZW0oc3RydWN0IGV0
bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9pb21tdV91bm1hcF9nZW0oc3RydWN0IGV0
bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAlzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBp
bmcgKm1hcHBpbmcpOwogCi1pbnQgZXRuYXZpdl9pb21tdV9nZXRfc3ViYWxsb2NfdmEoc3RydWN0
IGV0bmF2aXZfaW9tbXUgKm1tdSwKK2ludCBldG5hdml2X2lvbW11X2dldF9zdWJhbGxvY192YShz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjdHgsCiAJCQkJICBzdHJ1Y3QgZXRuYXZpdl92
cmFtX21hcHBpbmcgKm1hcHBpbmcsCiAJCQkJICB1MzIgbWVtb3J5X2Jhc2UsIGRtYV9hZGRyX3Qg
cGFkZHIsCiAJCQkJICBzaXplX3Qgc2l6ZSk7Ci12b2lkIGV0bmF2aXZfaW9tbXVfcHV0X3N1YmFs
bG9jX3ZhKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCit2b2lkIGV0bmF2aXZfaW9tbXVfcHV0
X3N1YmFsbG9jX3ZhKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmN0eCwKIAkJCQkgICBz
dHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcpOwogCi1zaXplX3QgZXRuYXZpdl9p
b21tdV9kdW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9tbXUgKmlvbW11KTsKLXZvaWQgZXRuYXZp
dl9pb21tdV9kdW1wKHN0cnVjdCBldG5hdml2X2lvbW11ICppb21tdSwgdm9pZCAqYnVmKTsKLQot
c3RydWN0IGV0bmF2aXZfaW9tbXUgKmV0bmF2aXZfaW9tbXVfbmV3KHN0cnVjdCBldG5hdml2X2dw
dSAqZ3B1KTsKLXZvaWQgZXRuYXZpdl9pb21tdV9kZXN0cm95KHN0cnVjdCBldG5hdml2X2lvbW11
ICppb21tdSk7Ci12b2lkIGV0bmF2aXZfaW9tbXVfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUg
KmdwdSk7CitzaXplX3QgZXRuYXZpdl9pb21tdV9kdW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9t
bXVfY29udGV4dCAqY3R4KTsKK3ZvaWQgZXRuYXZpdl9pb21tdV9kdW1wKHN0cnVjdCBldG5hdml2
X2lvbW11X2NvbnRleHQgKmN0eCwgdm9pZCAqYnVmKTsKKworc3RydWN0IGV0bmF2aXZfaW9tbXVf
Y29udGV4dCAqCitldG5hdml2X2lvbW11X2NvbnRleHRfaW5pdChzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9nbG9iYWwgKmdsb2JhbCk7CitzdGF0aWMgaW5saW5lIHZvaWQgZXRuYXZpdl9pb21tdV9jb250
ZXh0X2dldChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjdHgpCit7CisJa3JlZl9nZXQo
JmN0eC0+cmVmY291bnQpOworfQordm9pZCBldG5hdml2X2lvbW11X2NvbnRleHRfcHV0KHN0cnVj
dCBldG5hdml2X2lvbW11X2NvbnRleHQgKmN0eCk7Cit2b2lkIGV0bmF2aXZfaW9tbXVfcmVzdG9y
ZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwKKwkJCSAgIHN0cnVjdCBldG5hdml2X2lvbW11X2Nv
bnRleHQgKmN0eCk7CisKK3N0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKgorZXRuYXZpdl9p
b21tdXYxX2NvbnRleHRfYWxsb2Moc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwp
Oworc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqCitldG5hdml2X2lvbW11djJfY29udGV4
dF9hbGxvYyhzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgKmdsb2JhbCk7CiAKICNlbmRpZiAv
KiBfX0VUTkFWSVZfTU1VX0hfXyAqLwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
