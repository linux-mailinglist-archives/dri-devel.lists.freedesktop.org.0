Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id CF0CFB8C03
	for <lists+dri-devel@lfdr.de>; Fri, 20 Sep 2019 09:53:42 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A52046F871;
	Fri, 20 Sep 2019 07:53:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qk1-x744.google.com (mail-qk1-x744.google.com
 [IPv6:2607:f8b0:4864:20::744])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F17156F466
 for <dri-devel@lists.freedesktop.org>; Thu, 19 Sep 2019 16:10:16 +0000 (UTC)
Received: by mail-qk1-x744.google.com with SMTP id p10so3927377qkg.8
 for <dri-devel@lists.freedesktop.org>; Thu, 19 Sep 2019 09:10:16 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id;
 bh=FVYewfqdlAw6U741ArkKWsnjprQa61foRTNUXY7Ix0k=;
 b=jhS0kEadY+BTxO8Dv6reWzOfri+J+fDE5ID8ckUwivXlQVBb5LV3W1MGK8pd6ASXUA
 yLsBQ1grbQXLp1a9gjOjzjbqQVQp540qJ2BCf6YLvBTqWUYcBxf4eOde3xpRZOCcXQD1
 Rc6HKuK5W8Vt7Y1+TuB9lY0LLIovxDM3zJ+28GTwYXy07R2/y6sjEtK1DisKqN3Py30p
 0zF+gOQdE6qo/dHDRieGv9YDgGCkjHBD9k+VAwS7mZrGTwvJKvpsuMzXwNdU3rZzBZ3Y
 CWxHQvkODi9Veh41v0giyYWqsb6Mf9aUEQYbuS9NnOZOGpsDbQCBeqm7U7eLrNmOQjtC
 tY4w==
X-Gm-Message-State: APjAAAW9h7Dwmxs1uQKnHhH05z3UXkTRo/H8KlXUQ4BNRKlMWiaONX+2
 TJkPPjvir+VgVBJFakSnyT7BBg==
X-Google-Smtp-Source: APXvYqwGeJmBvQBU5QmDkYpU2TMZR/6YRkNsTCSB6FDGPxaEkc3gED48tlnUJAKc75QQ7OfMBEScZw==
X-Received: by 2002:a05:620a:40f:: with SMTP id
 15mr3664882qkp.274.1568909415412; 
 Thu, 19 Sep 2019 09:10:15 -0700 (PDT)
Received: from qcai.nay.com (nat-pool-bos-t.redhat.com. [66.187.233.206])
 by smtp.gmail.com with ESMTPSA id d23sm4917560qkc.127.2019.09.19.09.10.11
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Thu, 19 Sep 2019 09:10:14 -0700 (PDT)
From: Qian Cai <cai@lca.pw>
To: akpm@linux-foundation.org,
	mingo@redhat.com
Subject: [PATCH -next] treewide: remove unused argument in lock_release()
Date: Thu, 19 Sep 2019 12:09:40 -0400
Message-Id: <1568909380-32199-1-git-send-email-cai@lca.pw>
X-Mailer: git-send-email 1.8.3.1
X-Mailman-Approved-At: Fri, 20 Sep 2019 07:51:39 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=lca.pw; s=google;
 h=from:to:cc:subject:date:message-id;
 bh=FVYewfqdlAw6U741ArkKWsnjprQa61foRTNUXY7Ix0k=;
 b=Qhtoefx89CzrzCVKhWDfvgnCMVvs1CYSHEs1Z0uQd/bZdvXZ+ceneTAJKmpdgQ4E56
 +GsFMO20QB/nr5lS/FAG/BTZZLOTMROvN69zLYJzCU7ID6AZL9k2Fzy3tdX23So0upq0
 mDDxSNGJ8GoAAJ9oT5WXeV1c254bldWq7okaAtjC6uxaWIqQPI8kes9uyoNlx9A34lUl
 x5GK/GtP3b8MHdNqK/k8anwB/UiU8PftL5ChcbKYTC7B5iwTxzzYAOSyq+SxZtAon5Sd
 0rV8V5Pu9RdUXhtEJI7K7im5loDdddUf+gJgpBxh/DUmzzBrnGRBo62FkG95zxDQQJs6
 cokA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: juri.lelli@redhat.com, peterz@infradead.org,
 dri-devel@lists.freedesktop.org, mhocko@kernel.org,
 alexander.levin@microsoft.com, joseph.qi@linux.alibaba.com,
 netdev@vger.kernel.org, st@kernel.org, will@kernel.org, duyuyang@gmail.com,
 vincent.guittot@linaro.org, daniel@iogearbox.net, mark@fasheh.com,
 airlied@linux.ie, vdavydov.dev@gmail.com, jslaby@suse.com,
 linux-ext4@vger.kernel.org, intel-gfx@lists.freedesktop.org, jack@suse.com,
 mripard@kernel.org, tj@kernel.org, Qian Cai <cai@lca.pw>,
 viro@zeniv.linux.org.uk, rodrigo.vivi@intel.com, cgroups@vger.kernel.org,
 sean@poorly.run, tytso@mit.edu, linux-mm@kvack.org, linux-api@vger.kernel.org,
 linux-kernel@vger.kernel.org, hannes@cmpxchg.org, jlbec@evilplan.or,
 gregkh@linuxfoundation.org, linux-fsdevel@vger.kernel.org, bpf@vger.kernel.org,
 davem@davemloft.net, ocfs2-devel@oss.oracle.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

U2luY2UgdGhlIGNvbW1pdCBiNGFkZmU4ZTA1ZjEgKCJsb2NraW5nL2xvY2tkZXA6IFJlbW92ZSB1
bnVzZWQgYXJndW1lbnQKaW4gX19sb2NrX3JlbGVhc2UiKSwgQG5lc3RlZCBpcyBubyBsb25nZXIg
dXNlZCBpbiBsb2NrX3JlbGVhc2UoKSwgc28KcmVtb3ZlIGl0IGZyb20gYWxsIGxvY2tfcmVsZWFz
ZSgpIGNhbGxzIGFuZCBmcmllbmRzLgoKU2lnbmVkLW9mZi1ieTogUWlhbiBDYWkgPGNhaUBsY2Eu
cHc+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9jb25uZWN0b3IuYyAgICAgICAgICAgICAgIHwg
IDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9zaHJpbmtlci5jICB8ICA2
ICsrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgICAgIHwg
IDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8ICAy
ICstCiBkcml2ZXJzL3R0eS90dHlfbGRzZW0uYyAgICAgICAgICAgICAgICAgICAgICAgfCAgOCAr
KysrLS0tLQogZnMvZGNhY2hlLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwg
IDIgKy0KIGZzL2piZDIvdHJhbnNhY3Rpb24uYyAgICAgICAgICAgICAgICAgICAgICAgICB8ICA0
ICsrLS0KIGZzL2tlcm5mcy9kaXIuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA0
ICsrLS0KIGZzL29jZnMyL2RsbWdsdWUuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAy
ICstCiBpbmNsdWRlL2xpbnV4L2piZDIuaCAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiAr
LQogaW5jbHVkZS9saW51eC9sb2NrZGVwLmggICAgICAgICAgICAgICAgICAgICAgIHwgMjEgKysr
KysrKysrKy0tLS0tLS0tLS0tCiBpbmNsdWRlL2xpbnV4L3BlcmNwdS1yd3NlbS5oICAgICAgICAg
ICAgICAgICAgfCAgNCArKy0tCiBpbmNsdWRlL2xpbnV4L3JjdXBkYXRlLmggICAgICAgICAgICAg
ICAgICAgICAgfCAgMiArLQogaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5oICAgICAgICAg
ICAgICAgIHwgMTYgKysrKysrKystLS0tLS0tLQogaW5jbHVkZS9saW51eC9zZXFsb2NrLmggICAg
ICAgICAgICAgICAgICAgICAgIHwgIDQgKystLQogaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlf
c21wLmggICAgICAgICAgICAgIHwgIDggKysrKy0tLS0KIGluY2x1ZGUvbGludXgvd3dfbXV0ZXgu
aCAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBpbmNsdWRlL25ldC9zb2NrLmggICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQoga2VybmVsL2JwZi9zdGFja21hcC5jICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGtlcm5lbC9jcHUuYyAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICB8ICAyICstCiBrZXJuZWwvbG9ja2luZy9sb2NrZGVwLmMgICAgICAg
ICAgICAgICAgICAgICAgfCAgMyArLS0KIGtlcm5lbC9sb2NraW5nL211dGV4LmMgICAgICAgICAg
ICAgICAgICAgICAgICB8ICA0ICsrLS0KIGtlcm5lbC9sb2NraW5nL3J0bXV0ZXguYyAgICAgICAg
ICAgICAgICAgICAgICB8ICA2ICsrKy0tLQoga2VybmVsL2xvY2tpbmcvcndzZW0uYyAgICAgICAg
ICAgICAgICAgICAgICAgIHwgMTAgKysrKystLS0tLQoga2VybmVsL3ByaW50ay9wcmludGsuYyAg
ICAgICAgICAgICAgICAgICAgICAgIHwgMTAgKysrKystLS0tLQoga2VybmVsL3NjaGVkL2NvcmUu
YyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGxpYi9sb2NraW5nLXNlbGZ0ZXN0
LmMgICAgICAgICAgICAgICAgICAgICAgICB8IDI0ICsrKysrKysrKysrKy0tLS0tLS0tLS0tLQog
bW0vbWVtY29udHJvbC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIG5l
dC9jb3JlL3NvY2suYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiB0b29s
cy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvY29tbW9uLmggfCAgMyArLS0KIHRvb2xz
L2xpYi9sb2NrZGVwL2luY2x1ZGUvbGlibG9ja2RlcC9tdXRleC5oICB8ICAyICstCiB0b29scy9s
aWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvcndsb2NrLmggfCAgMiArLQogdG9vbHMvbGli
L2xvY2tkZXAvcHJlbG9hZC5jICAgICAgICAgICAgICAgICAgIHwgMTYgKysrKysrKystLS0tLS0t
LQogMzMgZmlsZXMgY2hhbmdlZCwgOTAgaW5zZXJ0aW9ucygrKSwgOTMgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV9jb25uZWN0b3IuYyBiL2RyaXZlcnMvZ3B1
L2RybS9kcm1fY29ubmVjdG9yLmMKaW5kZXggNGM3NjY2MjRiMjBkLi40YThiMmU1YzJhZjYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fY29ubmVjdG9yLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2RybV9jb25uZWN0b3IuYwpAQCAtNzE5LDcgKzcxOSw3IEBAIHZvaWQgZHJtX2Nvbm5l
Y3Rvcl9saXN0X2l0ZXJfZW5kKHN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciAqaXRlcikK
IAkJX19kcm1fY29ubmVjdG9yX3B1dF9zYWZlKGl0ZXItPmNvbm4pOwogCQlzcGluX3VubG9ja19p
cnFyZXN0b3JlKCZjb25maWctPmNvbm5lY3Rvcl9saXN0X2xvY2ssIGZsYWdzKTsKIAl9Ci0JbG9j
a19yZWxlYXNlKCZjb25uZWN0b3JfbGlzdF9pdGVyX2RlcF9tYXAsIDAsIF9SRVRfSVBfKTsKKwls
b2NrX3JlbGVhc2UoJmNvbm5lY3Rvcl9saXN0X2l0ZXJfZGVwX21hcCwgX1JFVF9JUF8pOwogfQog
RVhQT1JUX1NZTUJPTChkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQpOwogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fc2hyaW5rZXIuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9zaHJpbmtlci5jCmluZGV4IGVkZDIxZDE0ZTY0Zi4u
MWE1MWIzNTk4ZDYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9n
ZW1fc2hyaW5rZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fc2hy
aW5rZXIuYwpAQCAtNTA5LDE0ICs1MDksMTQgQEAgdm9pZCBpOTE1X2dlbV9zaHJpbmtlcl90YWlu
dHNfbXV0ZXgoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCSAgICAgIEk5MTVfTU1f
U0hSSU5LRVIsIDAsIF9SRVRfSVBfKTsKIAogCW11dGV4X2FjcXVpcmUoJm11dGV4LT5kZXBfbWFw
LCAwLCAwLCBfUkVUX0lQXyk7Ci0JbXV0ZXhfcmVsZWFzZSgmbXV0ZXgtPmRlcF9tYXAsIDAsIF9S
RVRfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZtdXRleC0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCi0J
bXV0ZXhfcmVsZWFzZSgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleC5kZXBfbWFwLCAwLCBfUkVUX0lQ
Xyk7CisJbXV0ZXhfcmVsZWFzZSgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleC5kZXBfbWFwLCBfUkVU
X0lQXyk7CiAKIAlmc19yZWNsYWltX3JlbGVhc2UoR0ZQX0tFUk5FTCk7CiAKIAlpZiAodW5sb2Nr
KQotCQltdXRleF9yZWxlYXNlKCZpOTE1LT5kcm0uc3RydWN0X211dGV4LmRlcF9tYXAsIDAsIF9S
RVRfSVBfKTsKKwkJbXV0ZXhfcmVsZWFzZSgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleC5kZXBfbWFw
LCBfUkVUX0lQXyk7CiB9CiAKICNkZWZpbmUgb2JqX3RvX2k5MTUob2JqX18pIHRvX2k5MTUoKG9i
al9fKS0+YmFzZS5kZXYpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5j
CmluZGV4IDY1YjVjYTc0YjM5NC4uN2Y2NDcyNDNiM2I5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfcG0uYwpAQCAtNTIsNyArNTIsNyBAQCBzdGF0aWMgaW5saW5lIHVu
c2lnbmVkIGxvbmcgX190aW1lbGluZV9tYXJrX2xvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQogc3RhdGljIGlubGluZSB2b2lkIF9fdGltZWxpbmVfbWFya191bmxvY2soc3RydWN0IGludGVs
X2NvbnRleHQgKmNlLAogCQkJCQkgIHVuc2lnbmVkIGxvbmcgZmxhZ3MpCiB7Ci0JbXV0ZXhfcmVs
ZWFzZSgmY2UtPnRpbWVsaW5lLT5tdXRleC5kZXBfbWFwLCAwLCBfVEhJU19JUF8pOworCW11dGV4
X3JlbGVhc2UoJmNlLT50aW1lbGluZS0+bXV0ZXguZGVwX21hcCwgX1RISVNfSVBfKTsKIAlsb2Nh
bF9pcnFfcmVzdG9yZShmbGFncyk7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMK
aW5kZXggYTUzNzc3ZGQzNzFjLi5lMWYxYmU0ZDA1MzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cmVxdWVzdC5jCkBAIC0xNDU2LDcgKzE0NTYsNyBAQCBsb25nIGk5MTVfcmVxdWVzdF93YWl0KHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogCWRtYV9mZW5jZV9yZW1vdmVfY2FsbGJhY2soJnJxLT5m
ZW5jZSwgJndhaXQuY2IpOwogCiBvdXQ6Ci0JbXV0ZXhfcmVsZWFzZSgmcnEtPmVuZ2luZS0+Z3Qt
PnJlc2V0Lm11dGV4LmRlcF9tYXAsIDAsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmcnEt
PmVuZ2luZS0+Z3QtPnJlc2V0Lm11dGV4LmRlcF9tYXAsIF9USElTX0lQXyk7CiAJdHJhY2VfaTkx
NV9yZXF1ZXN0X3dhaXRfZW5kKHJxKTsKIAlyZXR1cm4gdGltZW91dDsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3R0eV9sZHNlbS5jIGIvZHJpdmVycy90dHkvdHR5X2xkc2VtLmMKaW5kZXgg
NjBmZjIzNmEzZDYzLi5jZTgyOTEwNTNhZjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3R0eV9s
ZHNlbS5jCisrKyBiL2RyaXZlcnMvdHR5L3R0eV9sZHNlbS5jCkBAIC0zMDMsNyArMzAzLDcgQEAg
c3RhdGljIGludCBfX2xkc2VtX2Rvd25fcmVhZF9uZXN0ZWQoc3RydWN0IGxkX3NlbWFwaG9yZSAq
c2VtLAogCWlmIChjb3VudCA8PSAwKSB7CiAJCWxvY2tfY29udGVuZGVkKCZzZW0tPmRlcF9tYXAs
IF9SRVRfSVBfKTsKIAkJaWYgKCFkb3duX3JlYWRfZmFpbGVkKHNlbSwgY291bnQsIHRpbWVvdXQp
KSB7Ci0JCQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJCXJ3
c2VtX3JlbGVhc2UoJnNlbS0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCQkJcmV0dXJuIDA7CiAJCX0K
IAl9CkBAIC0zMjIsNyArMzIyLDcgQEAgc3RhdGljIGludCBfX2xkc2VtX2Rvd25fd3JpdGVfbmVz
dGVkKHN0cnVjdCBsZF9zZW1hcGhvcmUgKnNlbSwKIAlpZiAoKGNvdW50ICYgTERTRU1fQUNUSVZF
X01BU0spICE9IExEU0VNX0FDVElWRV9CSUFTKSB7CiAJCWxvY2tfY29udGVuZGVkKCZzZW0tPmRl
cF9tYXAsIF9SRVRfSVBfKTsKIAkJaWYgKCFkb3duX3dyaXRlX2ZhaWxlZChzZW0sIGNvdW50LCB0
aW1lb3V0KSkgewotCQkJcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7
CisJCQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAkJCXJldHVybiAw
OwogCQl9CiAJfQpAQCAtMzkwLDcgKzM5MCw3IEBAIHZvaWQgbGRzZW1fdXBfcmVhZChzdHJ1Y3Qg
bGRfc2VtYXBob3JlICpzZW0pCiB7CiAJbG9uZyBjb3VudDsKIAotCXJ3c2VtX3JlbGVhc2UoJnNl
bS0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXJ3c2VtX3JlbGVhc2UoJnNlbS0+ZGVwX21hcCwg
X1JFVF9JUF8pOwogCiAJY291bnQgPSBhdG9taWNfbG9uZ19hZGRfcmV0dXJuKC1MRFNFTV9SRUFE
X0JJQVMsICZzZW0tPmNvdW50KTsKIAlpZiAoY291bnQgPCAwICYmIChjb3VudCAmIExEU0VNX0FD
VElWRV9NQVNLKSA9PSAwKQpAQCAtNDA0LDcgKzQwNCw3IEBAIHZvaWQgbGRzZW1fdXBfd3JpdGUo
c3RydWN0IGxkX3NlbWFwaG9yZSAqc2VtKQogewogCWxvbmcgY291bnQ7CiAKLQlyd3NlbV9yZWxl
YXNlKCZzZW0tPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlyd3NlbV9yZWxlYXNlKCZzZW0tPmRl
cF9tYXAsIF9SRVRfSVBfKTsKIAogCWNvdW50ID0gYXRvbWljX2xvbmdfYWRkX3JldHVybigtTERT
RU1fV1JJVEVfQklBUywgJnNlbS0+Y291bnQpOwogCWlmIChjb3VudCA8IDApCmRpZmYgLS1naXQg
YS9mcy9kY2FjaGUuYyBiL2ZzL2RjYWNoZS5jCmluZGV4IGU4OGNmMDU1NGU2NS4uZjc5MzFiNjgy
YTBkIDEwMDY0NAotLS0gYS9mcy9kY2FjaGUuYworKysgYi9mcy9kY2FjaGUuYwpAQCAtMTMxOSw3
ICsxMzE5LDcgQEAgc3RhdGljIHZvaWQgZF93YWxrKHN0cnVjdCBkZW50cnkgKnBhcmVudCwgdm9p
ZCAqZGF0YSwKIAogCQlpZiAoIWxpc3RfZW1wdHkoJmRlbnRyeS0+ZF9zdWJkaXJzKSkgewogCQkJ
c3Bpbl91bmxvY2soJnRoaXNfcGFyZW50LT5kX2xvY2spOwotCQkJc3Bpbl9yZWxlYXNlKCZkZW50
cnktPmRfbG9jay5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCQlzcGluX3JlbGVhc2UoJmRlbnRy
eS0+ZF9sb2NrLmRlcF9tYXAsIF9SRVRfSVBfKTsKIAkJCXRoaXNfcGFyZW50ID0gZGVudHJ5Owog
CQkJc3Bpbl9hY3F1aXJlKCZ0aGlzX3BhcmVudC0+ZF9sb2NrLmRlcF9tYXAsIDAsIDEsIF9SRVRf
SVBfKTsKIAkJCWdvdG8gcmVwZWF0OwpkaWZmIC0tZ2l0IGEvZnMvamJkMi90cmFuc2FjdGlvbi5j
IGIvZnMvamJkMi90cmFuc2FjdGlvbi5jCmluZGV4IGJlZTg0OThkNzc5Mi4uYjI1ZWJkY2FiZmEz
IDEwMDY0NAotLS0gYS9mcy9qYmQyL3RyYW5zYWN0aW9uLmMKKysrIGIvZnMvamJkMi90cmFuc2Fj
dGlvbi5jCkBAIC03MTMsNyArNzEzLDcgQEAgaW50IGpiZDJfX2pvdXJuYWxfcmVzdGFydChoYW5k
bGVfdCAqaGFuZGxlLCBpbnQgbmJsb2NrcywgZ2ZwX3QgZ2ZwX21hc2spCiAJaWYgKG5lZWRfdG9f
c3RhcnQpCiAJCWpiZDJfbG9nX3N0YXJ0X2NvbW1pdChqb3VybmFsLCB0aWQpOwogCi0JcndzZW1f
cmVsZWFzZSgmam91cm5hbC0+al90cmFuc19jb21taXRfbWFwLCAxLCBfVEhJU19JUF8pOworCXJ3
c2VtX3JlbGVhc2UoJmpvdXJuYWwtPmpfdHJhbnNfY29tbWl0X21hcCwgX1RISVNfSVBfKTsKIAlo
YW5kbGUtPmhfYnVmZmVyX2NyZWRpdHMgPSBuYmxvY2tzOwogCS8qCiAJICogUmVzdG9yZSB0aGUg
b3JpZ2luYWwgbm9mcyBjb250ZXh0IGJlY2F1c2UgdGhlIGpvdXJuYWwgcmVzdGFydApAQCAtMTg0
OCw3ICsxODQ4LDcgQEAgaW50IGpiZDJfam91cm5hbF9zdG9wKGhhbmRsZV90ICpoYW5kbGUpCiAJ
CQl3YWtlX3VwKCZqb3VybmFsLT5qX3dhaXRfdHJhbnNhY3Rpb25fbG9ja2VkKTsKIAl9CiAKLQly
d3NlbV9yZWxlYXNlKCZqb3VybmFsLT5qX3RyYW5zX2NvbW1pdF9tYXAsIDEsIF9USElTX0lQXyk7
CisJcndzZW1fcmVsZWFzZSgmam91cm5hbC0+al90cmFuc19jb21taXRfbWFwLCBfVEhJU19JUF8p
OwogCiAJaWYgKHdhaXRfZm9yX2NvbW1pdCkKIAkJZXJyID0gamJkMl9sb2dfd2FpdF9jb21taXQo
am91cm5hbCwgdGlkKTsKZGlmZiAtLWdpdCBhL2ZzL2tlcm5mcy9kaXIuYyBiL2ZzL2tlcm5mcy9k
aXIuYwppbmRleCA2ZWJhZTZiYmU2YTUuLmM0NWI4MmZlYWM5YSAxMDA2NDQKLS0tIGEvZnMva2Vy
bmZzL2Rpci5jCisrKyBiL2ZzL2tlcm5mcy9kaXIuYwpAQCAtNDM4LDcgKzQzOCw3IEBAIHZvaWQg
a2VybmZzX3B1dF9hY3RpdmUoc3RydWN0IGtlcm5mc19ub2RlICprbikKIAkJcmV0dXJuOwogCiAJ
aWYgKGtlcm5mc19sb2NrZGVwKGtuKSkKLQkJcndzZW1fcmVsZWFzZSgma24tPmRlcF9tYXAsIDEs
IF9SRVRfSVBfKTsKKwkJcndzZW1fcmVsZWFzZSgma24tPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAl2
ID0gYXRvbWljX2RlY19yZXR1cm4oJmtuLT5hY3RpdmUpOwogCWlmIChsaWtlbHkodiAhPSBLTl9E
RUFDVElWQVRFRF9CSUFTKSkKIAkJcmV0dXJuOwpAQCAtNDc2LDcgKzQ3Niw3IEBAIHN0YXRpYyB2
b2lkIGtlcm5mc19kcmFpbihzdHJ1Y3Qga2VybmZzX25vZGUgKmtuKQogCiAJaWYgKGtlcm5mc19s
b2NrZGVwKGtuKSkgewogCQlsb2NrX2FjcXVpcmVkKCZrbi0+ZGVwX21hcCwgX1JFVF9JUF8pOwot
CQlyd3NlbV9yZWxlYXNlKCZrbi0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCQlyd3NlbV9yZWxl
YXNlKCZrbi0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCX0KIAogCWtlcm5mc19kcmFpbl9vcGVuX2Zp
bGVzKGtuKTsKZGlmZiAtLWdpdCBhL2ZzL29jZnMyL2RsbWdsdWUuYyBiL2ZzL29jZnMyL2RsbWds
dWUuYwppbmRleCBhZDU5NGZlZjJhYjAuLjcxOTc1YjliMTQyYyAxMDA2NDQKLS0tIGEvZnMvb2Nm
czIvZGxtZ2x1ZS5jCisrKyBiL2ZzL29jZnMyL2RsbWdsdWUuYwpAQCAtMTY4Nyw3ICsxNjg3LDcg
QEAgc3RhdGljIHZvaWQgX19vY2ZzMl9jbHVzdGVyX3VubG9jayhzdHJ1Y3Qgb2NmczJfc3VwZXIg
Km9zYiwKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZsb2NrcmVzLT5sX2xvY2ssIGZsYWdzKTsK
ICNpZmRlZiBDT05GSUdfREVCVUdfTE9DS19BTExPQwogCWlmIChsb2NrcmVzLT5sX2xvY2tkZXBf
bWFwLmtleSAhPSBOVUxMKQotCQlyd3NlbV9yZWxlYXNlKCZsb2NrcmVzLT5sX2xvY2tkZXBfbWFw
LCAxLCBjYWxsZXJfaXApOworCQlyd3NlbV9yZWxlYXNlKCZsb2NrcmVzLT5sX2xvY2tkZXBfbWFw
LCBjYWxsZXJfaXApOwogI2VuZGlmCiB9CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvamJk
Mi5oIGIvaW5jbHVkZS9saW51eC9qYmQyLmgKaW5kZXggNjAzZmJjNGUyZjcwLi41NjQ3OTNjMjRk
MTIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvamJkMi5oCisrKyBiL2luY2x1ZGUvbGludXgv
amJkMi5oCkBAIC0xMTcwLDcgKzExNzAsNyBAQCBzdHJ1Y3Qgam91cm5hbF9zCiAjZGVmaW5lIGpi
ZDJfbWlnaHRfd2FpdF9mb3JfY29tbWl0KGopIFwKIAlkbyB7IFwKIAkJcndzZW1fYWNxdWlyZSgm
ai0+al90cmFuc19jb21taXRfbWFwLCAwLCAwLCBfVEhJU19JUF8pOyBcCi0JCXJ3c2VtX3JlbGVh
c2UoJmotPmpfdHJhbnNfY29tbWl0X21hcCwgMSwgX1RISVNfSVBfKTsgXAorCQlyd3NlbV9yZWxl
YXNlKCZqLT5qX3RyYW5zX2NvbW1pdF9tYXAsIF9USElTX0lQXyk7IFwKIAl9IHdoaWxlICgwKQog
CiAvKiBqb3VybmFsIGZlYXR1cmUgcHJlZGljYXRlIGZ1bmN0aW9ucyAqLwpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9sb2NrZGVwLmggYi9pbmNsdWRlL2xpbnV4L2xvY2tkZXAuaAppbmRleCBi
OGE4MzVmZDYxMWIuLmM1MGQwMWVmMTQxNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9sb2Nr
ZGVwLmgKKysrIGIvaW5jbHVkZS9saW51eC9sb2NrZGVwLmgKQEAgLTM0OSw4ICszNDksNyBAQCBl
eHRlcm4gdm9pZCBsb2NrX2FjcXVpcmUoc3RydWN0IGxvY2tkZXBfbWFwICpsb2NrLCB1bnNpZ25l
ZCBpbnQgc3ViY2xhc3MsCiAJCQkgaW50IHRyeWxvY2ssIGludCByZWFkLCBpbnQgY2hlY2ssCiAJ
CQkgc3RydWN0IGxvY2tkZXBfbWFwICpuZXN0X2xvY2ssIHVuc2lnbmVkIGxvbmcgaXApOwogCi1l
eHRlcm4gdm9pZCBsb2NrX3JlbGVhc2Uoc3RydWN0IGxvY2tkZXBfbWFwICpsb2NrLCBpbnQgbmVz
dGVkLAotCQkJIHVuc2lnbmVkIGxvbmcgaXApOworZXh0ZXJuIHZvaWQgbG9ja19yZWxlYXNlKHN0
cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWduZWQgbG9uZyBpcCk7CiAKIC8qCiAgKiBTYW1l
ICJyZWFkIiBhcyBmb3IgbG9ja19hY3F1aXJlKCksIGV4Y2VwdCAtMSBtZWFucyBhbnkuCkBAIC00
MjgsNyArNDI3LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIGxvY2tkZXBfc2V0X3NlbGZ0ZXN0X3Rh
c2soc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQogfQogCiAjIGRlZmluZSBsb2NrX2FjcXVpcmUo
bCwgcywgdCwgciwgYywgbiwgaSkJZG8geyB9IHdoaWxlICgwKQotIyBkZWZpbmUgbG9ja19yZWxl
YXNlKGwsIG4sIGkpCQkJZG8geyB9IHdoaWxlICgwKQorIyBkZWZpbmUgbG9ja19yZWxlYXNlKGws
IGkpCQkJZG8geyB9IHdoaWxlICgwKQogIyBkZWZpbmUgbG9ja19kb3duZ3JhZGUobCwgaSkJCQlk
byB7IH0gd2hpbGUgKDApCiAjIGRlZmluZSBsb2NrX3NldF9jbGFzcyhsLCBuLCBrLCBzLCBpKQkJ
ZG8geyB9IHdoaWxlICgwKQogIyBkZWZpbmUgbG9ja19zZXRfc3ViY2xhc3MobCwgcywgaSkJCWRv
IHsgfSB3aGlsZSAoMCkKQEAgLTU5MSw0MiArNTkwLDQyIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBw
cmludF9pcnF0cmFjZV9ldmVudHMoc3RydWN0IHRhc2tfc3RydWN0ICpjdXJyKQogCiAjZGVmaW5l
IHNwaW5fYWNxdWlyZShsLCBzLCB0LCBpKQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0
LCBOVUxMLCBpKQogI2RlZmluZSBzcGluX2FjcXVpcmVfbmVzdChsLCBzLCB0LCBuLCBpKQlsb2Nr
X2FjcXVpcmVfZXhjbHVzaXZlKGwsIHMsIHQsIG4sIGkpCi0jZGVmaW5lIHNwaW5fcmVsZWFzZShs
LCBuLCBpKQkJCWxvY2tfcmVsZWFzZShsLCBuLCBpKQorI2RlZmluZSBzcGluX3JlbGVhc2UobCwg
aSkJCQlsb2NrX3JlbGVhc2UobCwgaSkKIAogI2RlZmluZSByd2xvY2tfYWNxdWlyZShsLCBzLCB0
LCBpKQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBOVUxMLCBpKQogI2RlZmluZSBy
d2xvY2tfYWNxdWlyZV9yZWFkKGwsIHMsIHQsIGkpCQlsb2NrX2FjcXVpcmVfc2hhcmVkX3JlY3Vy
c2l2ZShsLCBzLCB0LCBOVUxMLCBpKQotI2RlZmluZSByd2xvY2tfcmVsZWFzZShsLCBuLCBpKQkJ
CWxvY2tfcmVsZWFzZShsLCBuLCBpKQorI2RlZmluZSByd2xvY2tfcmVsZWFzZShsLCBpKQkJCWxv
Y2tfcmVsZWFzZShsLCBpKQogCiAjZGVmaW5lIHNlcWNvdW50X2FjcXVpcmUobCwgcywgdCwgaSkJ
CWxvY2tfYWNxdWlyZV9leGNsdXNpdmUobCwgcywgdCwgTlVMTCwgaSkKICNkZWZpbmUgc2VxY291
bnRfYWNxdWlyZV9yZWFkKGwsIHMsIHQsIGkpCWxvY2tfYWNxdWlyZV9zaGFyZWRfcmVjdXJzaXZl
KGwsIHMsIHQsIE5VTEwsIGkpCi0jZGVmaW5lIHNlcWNvdW50X3JlbGVhc2UobCwgbiwgaSkJCWxv
Y2tfcmVsZWFzZShsLCBuLCBpKQorI2RlZmluZSBzZXFjb3VudF9yZWxlYXNlKGwsIGkpCQkJbG9j
a19yZWxlYXNlKGwsIGkpCiAKICNkZWZpbmUgbXV0ZXhfYWNxdWlyZShsLCBzLCB0LCBpKQkJbG9j
a19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBOVUxMLCBpKQogI2RlZmluZSBtdXRleF9hY3F1
aXJlX25lc3QobCwgcywgdCwgbiwgaSkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBu
LCBpKQotI2RlZmluZSBtdXRleF9yZWxlYXNlKGwsIG4sIGkpCQkJbG9ja19yZWxlYXNlKGwsIG4s
IGkpCisjZGVmaW5lIG11dGV4X3JlbGVhc2UobCwgaSkJCQlsb2NrX3JlbGVhc2UobCwgaSkKIAog
I2RlZmluZSByd3NlbV9hY3F1aXJlKGwsIHMsIHQsIGkpCQlsb2NrX2FjcXVpcmVfZXhjbHVzaXZl
KGwsIHMsIHQsIE5VTEwsIGkpCiAjZGVmaW5lIHJ3c2VtX2FjcXVpcmVfbmVzdChsLCBzLCB0LCBu
LCBpKQlsb2NrX2FjcXVpcmVfZXhjbHVzaXZlKGwsIHMsIHQsIG4sIGkpCiAjZGVmaW5lIHJ3c2Vt
X2FjcXVpcmVfcmVhZChsLCBzLCB0LCBpKQkJbG9ja19hY3F1aXJlX3NoYXJlZChsLCBzLCB0LCBO
VUxMLCBpKQotI2RlZmluZSByd3NlbV9yZWxlYXNlKGwsIG4sIGkpCQkJbG9ja19yZWxlYXNlKGws
IG4sIGkpCisjZGVmaW5lIHJ3c2VtX3JlbGVhc2UobCwgaSkJCQlsb2NrX3JlbGVhc2UobCwgaSkK
IAogI2RlZmluZSBsb2NrX21hcF9hY3F1aXJlKGwpCQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShs
LCAwLCAwLCBOVUxMLCBfVEhJU19JUF8pCiAjZGVmaW5lIGxvY2tfbWFwX2FjcXVpcmVfcmVhZChs
KQkJbG9ja19hY3F1aXJlX3NoYXJlZF9yZWN1cnNpdmUobCwgMCwgMCwgTlVMTCwgX1RISVNfSVBf
KQogI2RlZmluZSBsb2NrX21hcF9hY3F1aXJlX3RyeXJlYWQobCkJCWxvY2tfYWNxdWlyZV9zaGFy
ZWRfcmVjdXJzaXZlKGwsIDAsIDEsIE5VTEwsIF9USElTX0lQXykKLSNkZWZpbmUgbG9ja19tYXBf
cmVsZWFzZShsKQkJCWxvY2tfcmVsZWFzZShsLCAxLCBfVEhJU19JUF8pCisjZGVmaW5lIGxvY2tf
bWFwX3JlbGVhc2UobCkJCQlsb2NrX3JlbGVhc2UobCwgX1RISVNfSVBfKQogCiAjaWZkZWYgQ09O
RklHX1BST1ZFX0xPQ0tJTkcKICMgZGVmaW5lIG1pZ2h0X2xvY2sobG9jaykgCQkJCQkJXAogZG8g
ewkJCQkJCQkJCVwKIAl0eXBlY2hlY2soc3RydWN0IGxvY2tkZXBfbWFwICosICYobG9jayktPmRl
cF9tYXApOwkJXAogCWxvY2tfYWNxdWlyZSgmKGxvY2spLT5kZXBfbWFwLCAwLCAwLCAwLCAxLCBO
VUxMLCBfVEhJU19JUF8pOwlcCi0JbG9ja19yZWxlYXNlKCYobG9jayktPmRlcF9tYXAsIDAsIF9U
SElTX0lQXyk7CQkJXAorCWxvY2tfcmVsZWFzZSgmKGxvY2spLT5kZXBfbWFwLCBfVEhJU19JUF8p
OwkJCVwKIH0gd2hpbGUgKDApCiAjIGRlZmluZSBtaWdodF9sb2NrX3JlYWQobG9jaykgCQkJCQkJ
XAogZG8gewkJCQkJCQkJCVwKIAl0eXBlY2hlY2soc3RydWN0IGxvY2tkZXBfbWFwICosICYobG9j
ayktPmRlcF9tYXApOwkJXAogCWxvY2tfYWNxdWlyZSgmKGxvY2spLT5kZXBfbWFwLCAwLCAwLCAx
LCAxLCBOVUxMLCBfVEhJU19JUF8pOwlcCi0JbG9ja19yZWxlYXNlKCYobG9jayktPmRlcF9tYXAs
IDAsIF9USElTX0lQXyk7CQkJXAorCWxvY2tfcmVsZWFzZSgmKGxvY2spLT5kZXBfbWFwLCBfVEhJ
U19JUF8pOwkJCVwKIH0gd2hpbGUgKDApCiAKICNkZWZpbmUgbG9ja2RlcF9hc3NlcnRfaXJxc19l
bmFibGVkKCkJZG8gewkJCQlcCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3BlcmNwdS1yd3Nl
bS5oIGIvaW5jbHVkZS9saW51eC9wZXJjcHUtcndzZW0uaAppbmRleCAzOTk4Y2RmOWNkMTQuLmFk
MmNhMmE4OWQ1YiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9wZXJjcHUtcndzZW0uaAorKysg
Yi9pbmNsdWRlL2xpbnV4L3BlcmNwdS1yd3NlbS5oCkBAIC05Myw3ICs5Myw3IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBwZXJjcHVfdXBfcmVhZChzdHJ1Y3QgcGVyY3B1X3J3X3NlbWFwaG9yZSAqc2Vt
KQogCQlfX3BlcmNwdV91cF9yZWFkKHNlbSk7IC8qIFVuY29uZGl0aW9uYWwgbWVtb3J5IGJhcnJp
ZXIgKi8KIAlwcmVlbXB0X2VuYWJsZSgpOwogCi0JcndzZW1fcmVsZWFzZSgmc2VtLT5yd19zZW0u
ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXJ3c2VtX3JlbGVhc2UoJnNlbS0+cndfc2VtLmRlcF9t
YXAsIF9SRVRfSVBfKTsKIH0KIAogZXh0ZXJuIHZvaWQgcGVyY3B1X2Rvd25fd3JpdGUoc3RydWN0
IHBlcmNwdV9yd19zZW1hcGhvcmUgKik7CkBAIC0xMTgsNyArMTE4LDcgQEAgZXh0ZXJuIGludCBf
X3BlcmNwdV9pbml0X3J3c2VtKHN0cnVjdCBwZXJjcHVfcndfc2VtYXBob3JlICosCiBzdGF0aWMg
aW5saW5lIHZvaWQgcGVyY3B1X3J3c2VtX3JlbGVhc2Uoc3RydWN0IHBlcmNwdV9yd19zZW1hcGhv
cmUgKnNlbSwKIAkJCQkJYm9vbCByZWFkLCB1bnNpZ25lZCBsb25nIGlwKQogewotCWxvY2tfcmVs
ZWFzZSgmc2VtLT5yd19zZW0uZGVwX21hcCwgMSwgaXApOworCWxvY2tfcmVsZWFzZSgmc2VtLT5y
d19zZW0uZGVwX21hcCwgaXApOwogI2lmZGVmIENPTkZJR19SV1NFTV9TUElOX09OX09XTkVSCiAJ
aWYgKCFyZWFkKQogCQlhdG9taWNfbG9uZ19zZXQoJnNlbS0+cndfc2VtLm93bmVyLCBSV1NFTV9P
V05FUl9VTktOT1dOKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvcmN1cGRhdGUuaCBiL2lu
Y2x1ZGUvbGludXgvcmN1cGRhdGUuaAppbmRleCA3NWEyZWRlZDdhYTIuLjI2OWIzMWVhYjNkNiAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oCisrKyBiL2luY2x1ZGUvbGludXgv
cmN1cGRhdGUuaApAQCAtMjEwLDcgKzIxMCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCByY3VfbG9j
a19hY3F1aXJlKHN0cnVjdCBsb2NrZGVwX21hcCAqbWFwKQogCiBzdGF0aWMgaW5saW5lIHZvaWQg
cmN1X2xvY2tfcmVsZWFzZShzdHJ1Y3QgbG9ja2RlcF9tYXAgKm1hcCkKIHsKLQlsb2NrX3JlbGVh
c2UobWFwLCAxLCBfVEhJU19JUF8pOworCWxvY2tfcmVsZWFzZShtYXAsIF9USElTX0lQXyk7CiB9
CiAKIGV4dGVybiBzdHJ1Y3QgbG9ja2RlcF9tYXAgcmN1X2xvY2tfbWFwOwpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5oIGIvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBp
X3NtcC5oCmluZGV4IDg2ZWJiNGJmOWM2ZS4uYWJmYjUzYWIxMWJlIDEwMDY0NAotLS0gYS9pbmNs
dWRlL2xpbnV4L3J3bG9ja19hcGlfc21wLmgKKysrIGIvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBp
X3NtcC5oCkBAIC0yMTUsMTQgKzIxNSwxNCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3Jp
dGVfbG9jayhyd2xvY2tfdCAqbG9jaykKIAogc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3dyaXRl
X3VubG9jayhyd2xvY2tfdCAqbG9jaykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21h
cCwgMSwgX1JFVF9JUF8pOworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQ
Xyk7CiAJZG9fcmF3X3dyaXRlX3VubG9jayhsb2NrKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwogfQog
CiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfcmVhZF91bmxvY2socndsb2NrX3QgKmxvY2spCiB7
Ci0Jcndsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlyd2xvY2tf
cmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRvX3Jhd19yZWFkX3VubG9jayhs
b2NrKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwogfQpAQCAtMjMwLDcgKzIzMCw3IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBfX3Jhd19yZWFkX3VubG9jayhyd2xvY2tfdCAqbG9jaykKIHN0YXRpYyBpbmxp
bmUgdm9pZAogX19yYXdfcmVhZF91bmxvY2tfaXJxcmVzdG9yZShyd2xvY2tfdCAqbG9jaywgdW5z
aWduZWQgbG9uZyBmbGFncykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwg
X1JFVF9JUF8pOworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJ
ZG9fcmF3X3JlYWRfdW5sb2NrKGxvY2spOwogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdzKTsKIAlw
cmVlbXB0X2VuYWJsZSgpOwpAQCAtMjM4LDcgKzIzOCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBf
X3Jhd19yZWFkX3VubG9jayhyd2xvY2tfdCAqbG9jaykKIAogc3RhdGljIGlubGluZSB2b2lkIF9f
cmF3X3JlYWRfdW5sb2NrX2lycShyd2xvY2tfdCAqbG9jaykKIHsKLQlyd2xvY2tfcmVsZWFzZSgm
bG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBf
bWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3JlYWRfdW5sb2NrKGxvY2spOwogCWxvY2FsX2lycV9l
bmFibGUoKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwpAQCAtMjQ2LDcgKzI0Niw3IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBfX3Jhd19yZWFkX3VubG9ja19pcnEocndsb2NrX3QgKmxvY2spCiAKIHN0YXRp
YyBpbmxpbmUgdm9pZCBfX3Jhd19yZWFkX3VubG9ja19iaChyd2xvY2tfdCAqbG9jaykKIHsKLQly
d2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXJ3bG9ja19yZWxl
YXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3JlYWRfdW5sb2NrKGxvY2sp
OwogCV9fbG9jYWxfYmhfZW5hYmxlX2lwKF9SRVRfSVBfLCBTT0ZUSVJRX0xPQ0tfT0ZGU0VUKTsK
IH0KQEAgLTI1NCw3ICsyNTQsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfcmVhZF91bmxv
Y2tfYmgocndsb2NrX3QgKmxvY2spCiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVfdW5s
b2NrX2lycXJlc3RvcmUocndsb2NrX3QgKmxvY2ssCiAJCQkJCSAgICAgdW5zaWduZWQgbG9uZyBm
bGFncykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOwor
CXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3dyaXRl
X3VubG9jayhsb2NrKTsKIAlsb2NhbF9pcnFfcmVzdG9yZShmbGFncyk7CiAJcHJlZW1wdF9lbmFi
bGUoKTsKQEAgLTI2Miw3ICsyNjIsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVf
dW5sb2NrX2lycXJlc3RvcmUocndsb2NrX3QgKmxvY2ssCiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBf
X3Jhd193cml0ZV91bmxvY2tfaXJxKHJ3bG9ja190ICpsb2NrKQogewotCXJ3bG9ja19yZWxlYXNl
KCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndsb2NrX3JlbGVhc2UoJmxvY2stPmRl
cF9tYXAsIF9SRVRfSVBfKTsKIAlkb19yYXdfd3JpdGVfdW5sb2NrKGxvY2spOwogCWxvY2FsX2ly
cV9lbmFibGUoKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwpAQCAtMjcwLDcgKzI3MCw3IEBAIHN0YXRp
YyBpbmxpbmUgdm9pZCBfX3Jhd193cml0ZV91bmxvY2tfaXJxKHJ3bG9ja190ICpsb2NrKQogCiBz
dGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVfdW5sb2NrX2JoKHJ3bG9ja190ICpsb2NrKQog
ewotCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndsb2Nr
X3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAlkb19yYXdfd3JpdGVfdW5sb2Nr
KGxvY2spOwogCV9fbG9jYWxfYmhfZW5hYmxlX2lwKF9SRVRfSVBfLCBTT0ZUSVJRX0xPQ0tfT0ZG
U0VUKTsKIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvc2VxbG9jay5oIGIvaW5jbHVkZS9s
aW51eC9zZXFsb2NrLmgKaW5kZXggYmNmNGNmMjZiOGM4Li4wNDkxZDk2M2Q0N2UgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvbGludXgvc2VxbG9jay5oCisrKyBiL2luY2x1ZGUvbGludXgvc2VxbG9jay5o
CkBAIC03OSw3ICs3OSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBzZXFjb3VudF9sb2NrZGVwX3Jl
YWRlcl9hY2Nlc3MoY29uc3Qgc2VxY291bnRfdCAqcykKIAogCWxvY2FsX2lycV9zYXZlKGZsYWdz
KTsKIAlzZXFjb3VudF9hY3F1aXJlX3JlYWQoJmwtPmRlcF9tYXAsIDAsIDAsIF9SRVRfSVBfKTsK
LQlzZXFjb3VudF9yZWxlYXNlKCZsLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJc2VxY291bnRf
cmVsZWFzZSgmbC0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdz
KTsKIH0KIApAQCAtMzg0LDcgKzM4NCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB3cml0ZV9zZXFj
b3VudF9iZWdpbihzZXFjb3VudF90ICpzKQogCiBzdGF0aWMgaW5saW5lIHZvaWQgd3JpdGVfc2Vx
Y291bnRfZW5kKHNlcWNvdW50X3QgKnMpCiB7Ci0Jc2VxY291bnRfcmVsZWFzZSgmcy0+ZGVwX21h
cCwgMSwgX1JFVF9JUF8pOworCXNlcWNvdW50X3JlbGVhc2UoJnMtPmRlcF9tYXAsIF9SRVRfSVBf
KTsKIAlyYXdfd3JpdGVfc2VxY291bnRfZW5kKHMpOwogfQogCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L3NwaW5sb2NrX2FwaV9zbXAuaCBiL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfYXBpX3Nt
cC5oCmluZGV4IGI3NjJlYWJhNGNkZi4uMTlhOWJlOWQ5N2VlIDEwMDY0NAotLS0gYS9pbmNsdWRl
L2xpbnV4L3NwaW5sb2NrX2FwaV9zbXAuaAorKysgYi9pbmNsdWRlL2xpbnV4L3NwaW5sb2NrX2Fw
aV9zbXAuaApAQCAtMTQ3LDcgKzE0Nyw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19zcGlu
X2xvY2socmF3X3NwaW5sb2NrX3QgKmxvY2spCiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19z
cGluX3VubG9jayhyYXdfc3BpbmxvY2tfdCAqbG9jaykKIHsKLQlzcGluX3JlbGVhc2UoJmxvY2st
PmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlzcGluX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIF9S
RVRfSVBfKTsKIAlkb19yYXdfc3Bpbl91bmxvY2sobG9jayk7CiAJcHJlZW1wdF9lbmFibGUoKTsK
IH0KQEAgLTE1NSw3ICsxNTUsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfc3Bpbl91bmxv
Y2socmF3X3NwaW5sb2NrX3QgKmxvY2spCiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfc3Bpbl91
bmxvY2tfaXJxcmVzdG9yZShyYXdfc3BpbmxvY2tfdCAqbG9jaywKIAkJCQkJICAgIHVuc2lnbmVk
IGxvbmcgZmxhZ3MpCiB7Ci0Jc3Bpbl9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQ
Xyk7CisJc3Bpbl9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3Nw
aW5fdW5sb2NrKGxvY2spOwogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdzKTsKIAlwcmVlbXB0X2Vu
YWJsZSgpOwpAQCAtMTYzLDcgKzE2Myw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19zcGlu
X3VubG9ja19pcnFyZXN0b3JlKHJhd19zcGlubG9ja190ICpsb2NrLAogCiBzdGF0aWMgaW5saW5l
IHZvaWQgX19yYXdfc3Bpbl91bmxvY2tfaXJxKHJhd19zcGlubG9ja190ICpsb2NrKQogewotCXNw
aW5fcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXNwaW5fcmVsZWFzZSgm
bG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRvX3Jhd19zcGluX3VubG9jayhsb2NrKTsKIAls
b2NhbF9pcnFfZW5hYmxlKCk7CiAJcHJlZW1wdF9lbmFibGUoKTsKQEAgLTE3MSw3ICsxNzEsNyBA
QCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfc3Bpbl91bmxvY2tfaXJxKHJhd19zcGlubG9ja190
ICpsb2NrKQogCiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfc3Bpbl91bmxvY2tfYmgocmF3X3Nw
aW5sb2NrX3QgKmxvY2spCiB7Ci0Jc3Bpbl9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVU
X0lQXyk7CisJc3Bpbl9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3
X3NwaW5fdW5sb2NrKGxvY2spOwogCV9fbG9jYWxfYmhfZW5hYmxlX2lwKF9SRVRfSVBfLCBTT0ZU
SVJRX0xPQ0tfT0ZGU0VUKTsKIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvd3dfbXV0ZXgu
aCBiL2luY2x1ZGUvbGludXgvd3dfbXV0ZXguaAppbmRleCAzYWY3YzBlMDNiZTUuLmQ3NTU0MjUy
NDA0YyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC93d19tdXRleC5oCisrKyBiL2luY2x1ZGUv
bGludXgvd3dfbXV0ZXguaApAQCAtMTgyLDcgKzE4Miw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB3
d19hY3F1aXJlX2RvbmUoc3RydWN0IHd3X2FjcXVpcmVfY3R4ICpjdHgpCiBzdGF0aWMgaW5saW5l
IHZvaWQgd3dfYWNxdWlyZV9maW5pKHN0cnVjdCB3d19hY3F1aXJlX2N0eCAqY3R4KQogewogI2lm
ZGVmIENPTkZJR19ERUJVR19NVVRFWEVTCi0JbXV0ZXhfcmVsZWFzZSgmY3R4LT5kZXBfbWFwLCAw
LCBfVEhJU19JUF8pOworCW11dGV4X3JlbGVhc2UoJmN0eC0+ZGVwX21hcCwgX1RISVNfSVBfKTsK
IAogCURFQlVHX0xPQ0tTX1dBUk5fT04oY3R4LT5hY3F1aXJlZCk7CiAJaWYgKCFJU19FTkFCTEVE
KENPTkZJR19QUk9WRV9MT0NLSU5HKSkKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbmV0L3NvY2suaCBi
L2luY2x1ZGUvbmV0L3NvY2suaAppbmRleCAyYzUzZjFhMWQ5MDUuLmU0NmRiMGM4NDZkMiAxMDA2
NDQKLS0tIGEvaW5jbHVkZS9uZXQvc29jay5oCisrKyBiL2luY2x1ZGUvbmV0L3NvY2suaApAQCAt
MTQ4NCw3ICsxNDg0LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHNvY2tfcmVsZWFzZV9vd25lcnNo
aXAoc3RydWN0IHNvY2sgKnNrKQogCQlzay0+c2tfbG9jay5vd25lZCA9IDA7CiAKIAkJLyogVGhl
IHNrX2xvY2sgaGFzIG11dGV4X3VubG9jaygpIHNlbWFudGljczogKi8KLQkJbXV0ZXhfcmVsZWFz
ZSgmc2stPnNrX2xvY2suZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCQltdXRleF9yZWxlYXNlKCZz
ay0+c2tfbG9jay5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJfQogfQogCmRpZmYgLS1naXQgYS9rZXJu
ZWwvYnBmL3N0YWNrbWFwLmMgYi9rZXJuZWwvYnBmL3N0YWNrbWFwLmMKaW5kZXggMDUyNTgwYzMz
ZDI2Li5kY2ZlMmQzN2FkMTUgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9icGYvc3RhY2ttYXAuYworKysg
Yi9rZXJuZWwvYnBmL3N0YWNrbWFwLmMKQEAgLTMzOCw3ICszMzgsNyBAQCBzdGF0aWMgdm9pZCBz
dGFja19tYXBfZ2V0X2J1aWxkX2lkX29mZnNldChzdHJ1Y3QgYnBmX3N0YWNrX2J1aWxkX2lkICpp
ZF9vZmZzLAogCQkgKiB1cF9yZWFkX25vbl9vd25lcigpLiBUaGUgcndzZW1fcmVsZWFzZSgpIGlz
IGNhbGxlZAogCQkgKiBoZXJlIHRvIHJlbGVhc2UgdGhlIGxvY2sgZnJvbSBsb2NrZGVwJ3MgcGVy
c3BlY3RpdmUuCiAJCSAqLwotCQlyd3NlbV9yZWxlYXNlKCZjdXJyZW50LT5tbS0+bW1hcF9zZW0u
ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCQlyd3NlbV9yZWxlYXNlKCZjdXJyZW50LT5tbS0+bW1h
cF9zZW0uZGVwX21hcCwgX1JFVF9JUF8pOwogCX0KIH0KIApkaWZmIC0tZ2l0IGEva2VybmVsL2Nw
dS5jIGIva2VybmVsL2NwdS5jCmluZGV4IGUxOTY3ZTllZGRjMi4uOTdlZDg4ZTBjZjcyIDEwMDY0
NAotLS0gYS9rZXJuZWwvY3B1LmMKKysrIGIva2VybmVsL2NwdS5jCkBAIC0zMzYsNyArMzM2LDcg
QEAgc3RhdGljIHZvaWQgbG9ja2RlcF9hY3F1aXJlX2NwdXNfbG9jayh2b2lkKQogCiBzdGF0aWMg
dm9pZCBsb2NrZGVwX3JlbGVhc2VfY3B1c19sb2NrKHZvaWQpCiB7Ci0JcndzZW1fcmVsZWFzZSgm
Y3B1X2hvdHBsdWdfbG9jay5yd19zZW0uZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwlyd3NlbV9y
ZWxlYXNlKCZjcHVfaG90cGx1Z19sb2NrLnJ3X3NlbS5kZXBfbWFwLCBfVEhJU19JUF8pOwogfQog
CiAvKgpkaWZmIC0tZ2l0IGEva2VybmVsL2xvY2tpbmcvbG9ja2RlcC5jIGIva2VybmVsL2xvY2tp
bmcvbG9ja2RlcC5jCmluZGV4IDIzMzQ1OWMwM2I1YS4uODEyMzUxOGY5MDQ1IDEwMDY0NAotLS0g
YS9rZXJuZWwvbG9ja2luZy9sb2NrZGVwLmMKKysrIGIva2VybmVsL2xvY2tpbmcvbG9ja2RlcC5j
CkBAIC00NDkxLDggKzQ0OTEsNyBAQCB2b2lkIGxvY2tfYWNxdWlyZShzdHJ1Y3QgbG9ja2RlcF9t
YXAgKmxvY2ssIHVuc2lnbmVkIGludCBzdWJjbGFzcywKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGxv
Y2tfYWNxdWlyZSk7CiAKLXZvaWQgbG9ja19yZWxlYXNlKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9j
aywgaW50IG5lc3RlZCwKLQkJCSAgdW5zaWduZWQgbG9uZyBpcCkKK3ZvaWQgbG9ja19yZWxlYXNl
KHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWduZWQgbG9uZyBpcCkKIHsKIAl1bnNpZ25l
ZCBsb25nIGZsYWdzOwogCmRpZmYgLS1naXQgYS9rZXJuZWwvbG9ja2luZy9tdXRleC5jIGIva2Vy
bmVsL2xvY2tpbmcvbXV0ZXguYwppbmRleCA0NjhhOWI4NDIyZTMuLjUzNTJjZTUwYTk3ZSAxMDA2
NDQKLS0tIGEva2VybmVsL2xvY2tpbmcvbXV0ZXguYworKysgYi9rZXJuZWwvbG9ja2luZy9tdXRl
eC5jCkBAIC0xMDkxLDcgKzEwOTEsNyBAQCB2b2lkIF9fc2NoZWQgd3dfbXV0ZXhfdW5sb2NrKHN0
cnVjdCB3d19tdXRleCAqbG9jaykKIGVycl9lYXJseV9raWxsOgogCXNwaW5fdW5sb2NrKCZsb2Nr
LT53YWl0X2xvY2spOwogCWRlYnVnX211dGV4X2ZyZWVfd2FpdGVyKCZ3YWl0ZXIpOwotCW11dGV4
X3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIGlwKTsKKwltdXRleF9yZWxlYXNlKCZsb2NrLT5k
ZXBfbWFwLCBpcCk7CiAJcHJlZW1wdF9lbmFibGUoKTsKIAlyZXR1cm4gcmV0OwogfQpAQCAtMTIy
NSw3ICsxMjI1LDcgQEAgc3RhdGljIG5vaW5saW5lIHZvaWQgX19zY2hlZCBfX211dGV4X3VubG9j
a19zbG93cGF0aChzdHJ1Y3QgbXV0ZXggKmxvY2ssIHVuc2lnbmUKIAlERUZJTkVfV0FLRV9RKHdh
a2VfcSk7CiAJdW5zaWduZWQgbG9uZyBvd25lcjsKIAotCW11dGV4X3JlbGVhc2UoJmxvY2stPmRl
cF9tYXAsIDEsIGlwKTsKKwltdXRleF9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBpcCk7CiAKIAkv
KgogCSAqIFJlbGVhc2UgdGhlIGxvY2sgYmVmb3JlIChwb3RlbnRpYWxseSkgdGFraW5nIHRoZSBz
cGlubG9jayBzdWNoIHRoYXQKZGlmZiAtLWdpdCBhL2tlcm5lbC9sb2NraW5nL3J0bXV0ZXguYyBi
L2tlcm5lbC9sb2NraW5nL3J0bXV0ZXguYwppbmRleCAyODc0YmY1NTYxNjIuLjg1MWJiYjEwODE5
ZCAxMDA2NDQKLS0tIGEva2VybmVsL2xvY2tpbmcvcnRtdXRleC5jCisrKyBiL2tlcm5lbC9sb2Nr
aW5nL3J0bXV0ZXguYwpAQCAtMTUxNyw3ICsxNTE3LDcgQEAgaW50IF9fc2NoZWQgcnRfbXV0ZXhf
bG9ja19pbnRlcnJ1cHRpYmxlKHN0cnVjdCBydF9tdXRleCAqbG9jaykKIAltdXRleF9hY3F1aXJl
KCZsb2NrLT5kZXBfbWFwLCAwLCAwLCBfUkVUX0lQXyk7CiAJcmV0ID0gcnRfbXV0ZXhfZmFzdGxv
Y2sobG9jaywgVEFTS19JTlRFUlJVUFRJQkxFLCBydF9tdXRleF9zbG93bG9jayk7CiAJaWYgKHJl
dCkKLQkJbXV0ZXhfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCQltdXRl
eF9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAKIAlyZXR1cm4gcmV0OwogfQpA
QCAtMTU2MSw3ICsxNTYxLDcgQEAgaW50IF9fc2NoZWQgX19ydF9tdXRleF9mdXRleF90cnlsb2Nr
KHN0cnVjdCBydF9tdXRleCAqbG9jaykKIAkJCQkgICAgICAgUlRfTVVURVhfTUlOX0NIQUlOV0FM
SywKIAkJCQkgICAgICAgcnRfbXV0ZXhfc2xvd2xvY2spOwogCWlmIChyZXQpCi0JCW11dGV4X3Jl
bGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJbXV0ZXhfcmVsZWFzZSgmbG9j
ay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTE2MDAsNyArMTYw
MCw3IEBAIGludCBfX3NjaGVkIHJ0X211dGV4X3RyeWxvY2soc3RydWN0IHJ0X211dGV4ICpsb2Nr
KQogICovCiB2b2lkIF9fc2NoZWQgcnRfbXV0ZXhfdW5sb2NrKHN0cnVjdCBydF9tdXRleCAqbG9j
aykKIHsKLQltdXRleF9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJbXV0
ZXhfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCXJ0X211dGV4X2Zhc3R1bmxv
Y2sobG9jaywgcnRfbXV0ZXhfc2xvd3VubG9jayk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChydF9t
dXRleF91bmxvY2spOwpkaWZmIC0tZ2l0IGEva2VybmVsL2xvY2tpbmcvcndzZW0uYyBiL2tlcm5l
bC9sb2NraW5nL3J3c2VtLmMKaW5kZXggZWVmMDQ1NTFlYWU3Li40NGU2ODc2MWY0MzIgMTAwNjQ0
Ci0tLSBhL2tlcm5lbC9sb2NraW5nL3J3c2VtLmMKKysrIGIva2VybmVsL2xvY2tpbmcvcndzZW0u
YwpAQCAtMTUwNCw3ICsxNTA0LDcgQEAgaW50IF9fc2NoZWQgZG93bl9yZWFkX2tpbGxhYmxlKHN0
cnVjdCByd19zZW1hcGhvcmUgKnNlbSkKIAlyd3NlbV9hY3F1aXJlX3JlYWQoJnNlbS0+ZGVwX21h
cCwgMCwgMCwgX1JFVF9JUF8pOwogCiAJaWYgKExPQ0tfQ09OVEVOREVEX1JFVFVSTihzZW0sIF9f
ZG93bl9yZWFkX3RyeWxvY2ssIF9fZG93bl9yZWFkX2tpbGxhYmxlKSkgewotCQlyd3NlbV9yZWxl
YXNlKCZzZW0tPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJcndzZW1fcmVsZWFzZSgmc2VtLT5k
ZXBfbWFwLCBfUkVUX0lQXyk7CiAJCXJldHVybiAtRUlOVFI7CiAJfQogCkBAIC0xNTQ2LDcgKzE1
NDYsNyBAQCBpbnQgX19zY2hlZCBkb3duX3dyaXRlX2tpbGxhYmxlKHN0cnVjdCByd19zZW1hcGhv
cmUgKnNlbSkKIAogCWlmIChMT0NLX0NPTlRFTkRFRF9SRVRVUk4oc2VtLCBfX2Rvd25fd3JpdGVf
dHJ5bG9jaywKIAkJCQkgIF9fZG93bl93cml0ZV9raWxsYWJsZSkpIHsKLQkJcndzZW1fcmVsZWFz
ZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCXJ3c2VtX3JlbGVhc2UoJnNlbS0+ZGVw
X21hcCwgX1JFVF9JUF8pOwogCQlyZXR1cm4gLUVJTlRSOwogCX0KIApAQCAtMTU3Myw3ICsxNTcz
LDcgQEAgaW50IGRvd25fd3JpdGVfdHJ5bG9jayhzdHJ1Y3Qgcndfc2VtYXBob3JlICpzZW0pCiAg
Ki8KIHZvaWQgdXBfcmVhZChzdHJ1Y3Qgcndfc2VtYXBob3JlICpzZW0pCiB7Ci0JcndzZW1fcmVs
ZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndzZW1fcmVsZWFzZSgmc2VtLT5k
ZXBfbWFwLCBfUkVUX0lQXyk7CiAJX191cF9yZWFkKHNlbSk7CiB9CiBFWFBPUlRfU1lNQk9MKHVw
X3JlYWQpOwpAQCAtMTU4Myw3ICsxNTgzLDcgQEAgdm9pZCB1cF9yZWFkKHN0cnVjdCByd19zZW1h
cGhvcmUgKnNlbSkKICAqLwogdm9pZCB1cF93cml0ZShzdHJ1Y3Qgcndfc2VtYXBob3JlICpzZW0p
CiB7Ci0JcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndzZW1f
cmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJX191cF93cml0ZShzZW0pOwogfQog
RVhQT1JUX1NZTUJPTCh1cF93cml0ZSk7CkBAIC0xNjM5LDcgKzE2MzksNyBAQCBpbnQgX19zY2hl
ZCBkb3duX3dyaXRlX2tpbGxhYmxlX25lc3RlZChzdHJ1Y3Qgcndfc2VtYXBob3JlICpzZW0sIGlu
dCBzdWJjbGFzcykKIAogCWlmIChMT0NLX0NPTlRFTkRFRF9SRVRVUk4oc2VtLCBfX2Rvd25fd3Jp
dGVfdHJ5bG9jaywKIAkJCQkgIF9fZG93bl93cml0ZV9raWxsYWJsZSkpIHsKLQkJcndzZW1fcmVs
ZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCXJ3c2VtX3JlbGVhc2UoJnNlbS0+
ZGVwX21hcCwgX1JFVF9JUF8pOwogCQlyZXR1cm4gLUVJTlRSOwogCX0KIApkaWZmIC0tZ2l0IGEv
a2VybmVsL3ByaW50ay9wcmludGsuYyBiL2tlcm5lbC9wcmludGsvcHJpbnRrLmMKaW5kZXggY2E2
NTMyN2E2ZGU4Li5jOGJlNWEwZjUyNTkgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9wcmludGsvcHJpbnRr
LmMKKysrIGIva2VybmVsL3ByaW50ay9wcmludGsuYwpAQCAtMjQ4LDcgKzI0OCw3IEBAIHN0YXRp
YyB2b2lkIF9fdXBfY29uc29sZV9zZW0odW5zaWduZWQgbG9uZyBpcCkKIHsKIAl1bnNpZ25lZCBs
b25nIGZsYWdzOwogCi0JbXV0ZXhfcmVsZWFzZSgmY29uc29sZV9sb2NrX2RlcF9tYXAsIDEsIGlw
KTsKKwltdXRleF9yZWxlYXNlKCZjb25zb2xlX2xvY2tfZGVwX21hcCwgaXApOwogCiAJcHJpbnRr
X3NhZmVfZW50ZXJfaXJxc2F2ZShmbGFncyk7CiAJdXAoJmNvbnNvbGVfc2VtKTsKQEAgLTE2Nzks
MjAgKzE2NzksMjAgQEAgc3RhdGljIGludCBjb25zb2xlX2xvY2tfc3Bpbm5pbmdfZGlzYWJsZV9h
bmRfY2hlY2sodm9pZCkKIAlyYXdfc3Bpbl91bmxvY2soJmNvbnNvbGVfb3duZXJfbG9jayk7CiAK
IAlpZiAoIXdhaXRlcikgewotCQlzcGluX3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwg
MSwgX1RISVNfSVBfKTsKKwkJc3Bpbl9yZWxlYXNlKCZjb25zb2xlX293bmVyX2RlcF9tYXAsIF9U
SElTX0lQXyk7CiAJCXJldHVybiAwOwogCX0KIAogCS8qIFRoZSB3YWl0ZXIgaXMgbm93IGZyZWUg
dG8gY29udGludWUgKi8KIAlXUklURV9PTkNFKGNvbnNvbGVfd2FpdGVyLCBmYWxzZSk7CiAKLQlz
cGluX3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwlzcGlu
X3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwgX1RISVNfSVBfKTsKIAogCS8qCiAJICog
SGFuZCBvZmYgY29uc29sZV9sb2NrIHRvIHdhaXRlci4gVGhlIHdhaXRlciB3aWxsIHBlcmZvcm0K
IAkgKiB0aGUgdXAoKS4gQWZ0ZXIgdGhpcywgdGhlIHdhaXRlciBpcyB0aGUgY29uc29sZV9sb2Nr
IG93bmVyLgogCSAqLwotCW11dGV4X3JlbGVhc2UoJmNvbnNvbGVfbG9ja19kZXBfbWFwLCAxLCBf
VEhJU19JUF8pOworCW11dGV4X3JlbGVhc2UoJmNvbnNvbGVfbG9ja19kZXBfbWFwLCBfVEhJU19J
UF8pOwogCXJldHVybiAxOwogfQogCkBAIC0xNzQ2LDcgKzE3NDYsNyBAQCBzdGF0aWMgaW50IGNv
bnNvbGVfdHJ5bG9ja19zcGlubmluZyh2b2lkKQogCS8qIE93bmVyIHdpbGwgY2xlYXIgY29uc29s
ZV93YWl0ZXIgb24gaGFuZCBvZmYgKi8KIAl3aGlsZSAoUkVBRF9PTkNFKGNvbnNvbGVfd2FpdGVy
KSkKIAkJY3B1X3JlbGF4KCk7Ci0Jc3Bpbl9yZWxlYXNlKCZjb25zb2xlX293bmVyX2RlcF9tYXAs
IDEsIF9USElTX0lQXyk7CisJc3Bpbl9yZWxlYXNlKCZjb25zb2xlX293bmVyX2RlcF9tYXAsIF9U
SElTX0lQXyk7CiAKIAlwcmludGtfc2FmZV9leGl0X2lycXJlc3RvcmUoZmxhZ3MpOwogCS8qCmRp
ZmYgLS1naXQgYS9rZXJuZWwvc2NoZWQvY29yZS5jIGIva2VybmVsL3NjaGVkL2NvcmUuYwppbmRl
eCBmOWExMzQ2YTVmYTkuLmY4NDU2OTNlOGU3NSAxMDA2NDQKLS0tIGEva2VybmVsL3NjaGVkL2Nv
cmUuYworKysgYi9rZXJuZWwvc2NoZWQvY29yZS5jCkBAIC0zMTA1LDcgKzMxMDUsNyBAQCBzdGF0
aWMgaW5saW5lIHZvaWQgZmluaXNoX3Rhc2soc3RydWN0IHRhc2tfc3RydWN0ICpwcmV2KQogCSAq
IGRvIGFuIGVhcmx5IGxvY2tkZXAgcmVsZWFzZSBoZXJlOgogCSAqLwogCXJxX3VucGluX2xvY2so
cnEsIHJmKTsKLQlzcGluX3JlbGVhc2UoJnJxLT5sb2NrLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7
CisJc3Bpbl9yZWxlYXNlKCZycS0+bG9jay5kZXBfbWFwLCBfVEhJU19JUF8pOwogI2lmZGVmIENP
TkZJR19ERUJVR19TUElOTE9DSwogCS8qIHRoaXMgaXMgYSB2YWxpZCBjYXNlIHdoZW4gYW5vdGhl
ciB0YXNrIHJlbGVhc2VzIHRoZSBzcGlubG9jayAqLwogCXJxLT5sb2NrLm93bmVyID0gbmV4dDsK
ZGlmZiAtLWdpdCBhL2xpYi9sb2NraW5nLXNlbGZ0ZXN0LmMgYi9saWIvbG9ja2luZy1zZWxmdGVz
dC5jCmluZGV4IGExNzA1NTQ1ZTZhYy4uMTRmNDRmNTllNzMzIDEwMDY0NAotLS0gYS9saWIvbG9j
a2luZy1zZWxmdGVzdC5jCisrKyBiL2xpYi9sb2NraW5nLXNlbGZ0ZXN0LmMKQEAgLTE0NzUsNyAr
MTQ3NSw3IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19ub3JtYWwodm9pZCkKIAogCW11
dGV4X2xvY2soJm8yLmJhc2UpOwogCW8yLmN0eCA9ICZ0MjsKLQltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBf
bWFwLCBfVEhJU19JUF8pOwogCiAJV1dBSSgmdCk7CiAJdDIgPSB0OwpAQCAtMTUwMCw3ICsxNTAw
LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX25vcm1hbF9zbG93KHZvaWQpCiAJaW50
IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2Uu
ZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAs
IF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNTI3LDcgKzE1
MjcsNyBAQCBzdGF0aWMgdm9pZCB3d190ZXN0X2VkZWFkbGtfbm9fdW5sb2NrKHZvaWQpCiAKIAlt
dXRleF9sb2NrKCZvMi5iYXNlKTsKIAlvMi5jdHggPSAmdDI7Ci0JbXV0ZXhfcmVsZWFzZSgmbzIu
YmFzZS5kZXBfbWFwLCAxLCBfVEhJU19JUF8pOworCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVw
X21hcCwgX1RISVNfSVBfKTsKIAogCVdXQUkoJnQpOwogCXQyID0gdDsKQEAgLTE1NTEsNyArMTU1
MSw3IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19ub191bmxvY2tfc2xvdyh2b2lkKQog
CWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNlKTsKLQltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBf
bWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsKIAogCVdXQUkoJnQpOwpAQCAtMTU3Niw3
ICsxNTc2LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX2FjcXVpcmVfbW9yZSh2b2lk
KQogCWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNlKTsKLQltdXRleF9yZWxlYXNlKCZv
Mi5iYXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5k
ZXBfbWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsKIAogCVdXQUkoJnQpOwpAQCAtMTU5
Nyw3ICsxNTk3LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX2FjcXVpcmVfbW9yZV9z
bG93KHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3Jl
bGVhc2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZv
Mi5iYXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7
CkBAIC0xNjE4LDExICsxNjE4LDExIEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19hY3F1
aXJlX21vcmVfZWRlYWRsayh2b2lkKQogCWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNl
KTsKLQltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0
ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBfbWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsK
IAogCW11dGV4X2xvY2soJm8zLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8zLmJhc2UuZGVwX21h
cCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMy5iYXNlLmRlcF9tYXAsIF9USElT
X0lQXyk7CiAJbzMuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNjQ0LDExICsxNjQ0LDEx
IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19hY3F1aXJlX21vcmVfZWRlYWRsa19zbG93
KHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVh
c2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJbXV0ZXhfbG9jaygm
bzMuYmFzZSk7Ci0JbXV0ZXhfcmVsZWFzZSgmbzMuYmFzZS5kZXBfbWFwLCAxLCBfVEhJU19JUF8p
OworCW11dGV4X3JlbGVhc2UoJm8zLmJhc2UuZGVwX21hcCwgX1RISVNfSVBfKTsKIAlvMy5jdHgg
PSAmdDI7CiAKIAlXV0FJKCZ0KTsKQEAgLTE2NjksNyArMTY2OSw3IEBAIHN0YXRpYyB2b2lkIHd3
X3Rlc3RfZWRlYWRsa19hY3F1aXJlX3dyb25nKHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xv
Y2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNf
SVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIu
Y3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNjk0LDcgKzE2OTQsNyBAQCBzdGF0aWMgdm9p
ZCB3d190ZXN0X2VkZWFkbGtfYWNxdWlyZV93cm9uZ19zbG93KHZvaWQpCiAJaW50IHJldDsKIAog
CW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVwX21hcCwg
MSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIF9USElTX0lQ
Xyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CmRpZmYgLS1naXQgYS9tbS9tZW1jb250
cm9sLmMgYi9tbS9tZW1jb250cm9sLmMKaW5kZXggMWM0YzA4YjQ1ZTQ0Li4zOTU2YWI2ZGJhMTQg
MTAwNjQ0Ci0tLSBhL21tL21lbWNvbnRyb2wuYworKysgYi9tbS9tZW1jb250cm9sLmMKQEAgLTE4
MDAsNyArMTgwMCw3IEBAIHN0YXRpYyB2b2lkIG1lbV9jZ3JvdXBfb29tX3VubG9jayhzdHJ1Y3Qg
bWVtX2Nncm91cCAqbWVtY2cpCiAJc3RydWN0IG1lbV9jZ3JvdXAgKml0ZXI7CiAKIAlzcGluX2xv
Y2soJm1lbWNnX29vbV9sb2NrKTsKLQltdXRleF9yZWxlYXNlKCZtZW1jZ19vb21fbG9ja19kZXBf
bWFwLCAxLCBfUkVUX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbWVtY2dfb29tX2xvY2tfZGVwX21h
cCwgX1JFVF9JUF8pOwogCWZvcl9lYWNoX21lbV9jZ3JvdXBfdHJlZShpdGVyLCBtZW1jZykKIAkJ
aXRlci0+b29tX2xvY2sgPSBmYWxzZTsKIAlzcGluX3VubG9jaygmbWVtY2dfb29tX2xvY2spOwpk
aWZmIC0tZ2l0IGEvbmV0L2NvcmUvc29jay5jIGIvbmV0L2NvcmUvc29jay5jCmluZGV4IDA3ODYz
ZWRiZTZmYy4uYTk4OGU3MGNkYWM1IDEwMDY0NAotLS0gYS9uZXQvY29yZS9zb2NrLmMKKysrIGIv
bmV0L2NvcmUvc29jay5jCkBAIC01MjEsNyArNTIxLDcgQEAgaW50IF9fc2tfcmVjZWl2ZV9za2Io
c3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiLAogCiAJCXJjID0gc2tfYmFja2xv
Z19yY3Yoc2ssIHNrYik7CiAKLQkJbXV0ZXhfcmVsZWFzZSgmc2stPnNrX2xvY2suZGVwX21hcCwg
MSwgX1JFVF9JUF8pOworCQltdXRleF9yZWxlYXNlKCZzay0+c2tfbG9jay5kZXBfbWFwLCBfUkVU
X0lQXyk7CiAJfSBlbHNlIGlmIChza19hZGRfYmFja2xvZyhzaywgc2tiLCBzay0+c2tfcmN2YnVm
KSkgewogCQliaF91bmxvY2tfc29jayhzayk7CiAJCWF0b21pY19pbmMoJnNrLT5za19kcm9wcyk7
CmRpZmYgLS1naXQgYS90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvY29tbW9u
LmggYi90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvY29tbW9uLmgKaW5kZXgg
YTgxZDkxZDRmYzc4Li5hNmQ3ZWU1ZjE4YmEgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2xpYi9sb2NrZGVw
L2luY2x1ZGUvbGlibG9ja2RlcC9jb21tb24uaAorKysgYi90b29scy9saWIvbG9ja2RlcC9pbmNs
dWRlL2xpYmxvY2tkZXAvY29tbW9uLmgKQEAgLTQyLDggKzQyLDcgQEAgdm9pZCBsb2NrZGVwX2lu
aXRfbWFwKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgY29uc3QgY2hhciAqbmFtZSwKIHZvaWQg
bG9ja19hY3F1aXJlKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWduZWQgaW50IHN1YmNs
YXNzLAogCQkJaW50IHRyeWxvY2ssIGludCByZWFkLCBpbnQgY2hlY2ssCiAJCQlzdHJ1Y3QgbG9j
a2RlcF9tYXAgKm5lc3RfbG9jaywgdW5zaWduZWQgbG9uZyBpcCk7Ci12b2lkIGxvY2tfcmVsZWFz
ZShzdHJ1Y3QgbG9ja2RlcF9tYXAgKmxvY2ssIGludCBuZXN0ZWQsCi0JCQl1bnNpZ25lZCBsb25n
IGlwKTsKK3ZvaWQgbG9ja19yZWxlYXNlKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWdu
ZWQgbG9uZyBpcCk7CiB2b2lkIGxvY2tkZXBfcmVzZXRfbG9jayhzdHJ1Y3QgbG9ja2RlcF9tYXAg
KmxvY2spOwogdm9pZCBsb2NrZGVwX3JlZ2lzdGVyX2tleShzdHJ1Y3QgbG9ja19jbGFzc19rZXkg
KmtleSk7CiB2b2lkIGxvY2tkZXBfdW5yZWdpc3Rlcl9rZXkoc3RydWN0IGxvY2tfY2xhc3Nfa2V5
ICprZXkpOwpkaWZmIC0tZ2l0IGEvdG9vbHMvbGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVw
L211dGV4LmggYi90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvbXV0ZXguaApp
bmRleCA3ODNkZDBkZjA2ZjkuLmJkMTA2YjgyNzU5YiAxMDA2NDQKLS0tIGEvdG9vbHMvbGliL2xv
Y2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL211dGV4LmgKKysrIGIvdG9vbHMvbGliL2xvY2tkZXAv
aW5jbHVkZS9saWJsb2NrZGVwL211dGV4LmgKQEAgLTQyLDcgKzQyLDcgQEAgc3RhdGljIGlubGlu
ZSBpbnQgbGlibG9ja2RlcF9wdGhyZWFkX211dGV4X2xvY2sobGlibG9ja2RlcF9wdGhyZWFkX211
dGV4X3QgKmxvY2sKIAogc3RhdGljIGlubGluZSBpbnQgbGlibG9ja2RlcF9wdGhyZWFkX211dGV4
X3VubG9jayhsaWJsb2NrZGVwX3B0aHJlYWRfbXV0ZXhfdCAqbG9jaykKIHsKLQlsb2NrX3JlbGVh
c2UoJmxvY2stPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2NrX3Jl
bGVhc2UoJmxvY2stPmRlcF9tYXAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAlyZXR1cm4g
cHRocmVhZF9tdXRleF91bmxvY2soJmxvY2stPm11dGV4KTsKIH0KIApkaWZmIC0tZ2l0IGEvdG9v
bHMvbGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL3J3bG9jay5oIGIvdG9vbHMvbGliL2xv
Y2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL3J3bG9jay5oCmluZGV4IDM2NTc2MmUzYTFlYS4uNmQ1
ZDI5MzJiZjRkIDEwMDY0NAotLS0gYS90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tk
ZXAvcndsb2NrLmgKKysrIGIvdG9vbHMvbGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL3J3
bG9jay5oCkBAIC00NCw3ICs0NCw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IGxpYmxvY2tkZXBfcHRo
cmVhZF9yd2xvY2tfcmRsb2NrKGxpYmxvY2tkZXBfcHRocmVhZF9yd2xvY2tfdCAqCiAKIHN0YXRp
YyBpbmxpbmUgaW50IGxpYmxvY2tkZXBfcHRocmVhZF9yd2xvY2tfdW5sb2NrKGxpYmxvY2tkZXBf
cHRocmVhZF9yd2xvY2tfdCAqbG9jaykKIHsKLQlsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAs
IDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9t
YXAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAlyZXR1cm4gcHRocmVhZF9yd2xvY2tfdW5s
b2NrKCZsb2NrLT5yd2xvY2spOwogfQogCmRpZmYgLS1naXQgYS90b29scy9saWIvbG9ja2RlcC9w
cmVsb2FkLmMgYi90b29scy9saWIvbG9ja2RlcC9wcmVsb2FkLmMKaW5kZXggNzYyNDVkMTYxOTZk
Li44ZjFhZGJlODg3YjIgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2xpYi9sb2NrZGVwL3ByZWxvYWQuYwor
KysgYi90b29scy9saWIvbG9ja2RlcC9wcmVsb2FkLmMKQEAgLTI3MCw3ICsyNzAsNyBAQCBpbnQg
cHRocmVhZF9tdXRleF9sb2NrKHB0aHJlYWRfbXV0ZXhfdCAqbXV0ZXgpCiAJICovCiAJciA9IGxs
X3B0aHJlYWRfbXV0ZXhfbG9jayhtdXRleCk7CiAJaWYgKHIpCi0JCWxvY2tfcmVsZWFzZSgmX19n
ZXRfbG9jayhtdXRleCktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwkJ
bG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKG11dGV4KS0+ZGVwX21hcCwgKHVuc2lnbmVkIGxvbmcp
X1JFVF9JUF8pOwogCiAJcmV0dXJuIHI7CiB9CkBAIC0yODQsNyArMjg0LDcgQEAgaW50IHB0aHJl
YWRfbXV0ZXhfdHJ5bG9jayhwdGhyZWFkX211dGV4X3QgKm11dGV4KQogCWxvY2tfYWNxdWlyZSgm
X19nZXRfbG9jayhtdXRleCktPmRlcF9tYXAsIDAsIDEsIDAsIDEsIE5VTEwsICh1bnNpZ25lZCBs
b25nKV9SRVRfSVBfKTsKIAlyID0gbGxfcHRocmVhZF9tdXRleF90cnlsb2NrKG11dGV4KTsKIAlp
ZiAocikKLQkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKG11dGV4KS0+ZGVwX21hcCwgMCwgKHVu
c2lnbmVkIGxvbmcpX1JFVF9JUF8pOworCQlsb2NrX3JlbGVhc2UoJl9fZ2V0X2xvY2sobXV0ZXgp
LT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CiAKIAlyZXR1cm4gcjsKIH0KQEAg
LTI5NSw3ICsyOTUsNyBAQCBpbnQgcHRocmVhZF9tdXRleF91bmxvY2socHRocmVhZF9tdXRleF90
ICptdXRleCkKIAogCXRyeV9pbml0X3ByZWxvYWQoKTsKIAotCWxvY2tfcmVsZWFzZSgmX19nZXRf
bG9jayhtdXRleCktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2Nr
X3JlbGVhc2UoJl9fZ2V0X2xvY2sobXV0ZXgpLT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVU
X0lQXyk7CiAJLyoKIAkgKiBKdXN0IGxpa2UgdGFraW5nIGEgbG9jaywgb25seSBpbiByZXZlcnNl
IQogCSAqCkBAIC0zNTUsNyArMzU1LDcgQEAgaW50IHB0aHJlYWRfcndsb2NrX3JkbG9jayhwdGhy
ZWFkX3J3bG9ja190ICpyd2xvY2spCiAJbG9ja19hY3F1aXJlKCZfX2dldF9sb2NrKHJ3bG9jaykt
PmRlcF9tYXAsIDAsIDAsIDIsIDEsIE5VTEwsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAly
ID0gbGxfcHRocmVhZF9yd2xvY2tfcmRsb2NrKHJ3bG9jayk7CiAJaWYgKHIpCi0JCWxvY2tfcmVs
ZWFzZSgmX19nZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAwLCAodW5zaWduZWQgbG9uZylfUkVU
X0lQXyk7CisJCWxvY2tfcmVsZWFzZSgmX19nZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAodW5z
aWduZWQgbG9uZylfUkVUX0lQXyk7CiAKIAlyZXR1cm4gcjsKIH0KQEAgLTM2OSw3ICszNjksNyBA
QCBpbnQgcHRocmVhZF9yd2xvY2tfdHJ5cmRsb2NrKHB0aHJlYWRfcndsb2NrX3QgKnJ3bG9jaykK
IAlsb2NrX2FjcXVpcmUoJl9fZ2V0X2xvY2socndsb2NrKS0+ZGVwX21hcCwgMCwgMSwgMiwgMSwg
TlVMTCwgKHVuc2lnbmVkIGxvbmcpX1JFVF9JUF8pOwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja190
cnlyZGxvY2socndsb2NrKTsKIAlpZiAocikKLQkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3
bG9jayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwkJbG9ja19yZWxl
YXNlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBf
KTsKIAogCXJldHVybiByOwogfQpAQCAtMzgzLDcgKzM4Myw3IEBAIGludCBwdGhyZWFkX3J3bG9j
a190cnl3cmxvY2socHRocmVhZF9yd2xvY2tfdCAqcndsb2NrKQogCWxvY2tfYWNxdWlyZSgmX19n
ZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAwLCAxLCAwLCAxLCBOVUxMLCAodW5zaWduZWQgbG9u
ZylfUkVUX0lQXyk7CiAJciA9IGxsX3B0aHJlYWRfcndsb2NrX3RyeXdybG9jayhyd2xvY2spOwog
CWlmIChyKQotICAgICAgICAgICAgICAgIGxvY2tfcmVsZWFzZSgmX19nZXRfbG9jayhyd2xvY2sp
LT5kZXBfbWFwLCAwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CisJCWxvY2tfcmVsZWFzZSgm
X19nZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CiAK
IAlyZXR1cm4gcjsKIH0KQEAgLTM5Nyw3ICszOTcsNyBAQCBpbnQgcHRocmVhZF9yd2xvY2tfd3Js
b2NrKHB0aHJlYWRfcndsb2NrX3QgKnJ3bG9jaykKIAlsb2NrX2FjcXVpcmUoJl9fZ2V0X2xvY2so
cndsb2NrKS0+ZGVwX21hcCwgMCwgMCwgMCwgMSwgTlVMTCwgKHVuc2lnbmVkIGxvbmcpX1JFVF9J
UF8pOwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja193cmxvY2socndsb2NrKTsKIAlpZiAocikKLQkJ
bG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBs
b25nKV9SRVRfSVBfKTsKKwkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9t
YXAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAogCXJldHVybiByOwogfQpAQCAtNDA4LDcg
KzQwOCw3IEBAIGludCBwdGhyZWFkX3J3bG9ja191bmxvY2socHRocmVhZF9yd2xvY2tfdCAqcnds
b2NrKQogCiAgICAgICAgIGluaXRfcHJlbG9hZCgpOwogCi0JbG9ja19yZWxlYXNlKCZfX2dldF9s
b2NrKHJ3bG9jayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2Nr
X3JlbGVhc2UoJl9fZ2V0X2xvY2socndsb2NrKS0+ZGVwX21hcCwgKHVuc2lnbmVkIGxvbmcpX1JF
VF9JUF8pOwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja191bmxvY2socndsb2NrKTsKIAlpZiAocikK
IAkJbG9ja19hY3F1aXJlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsIDAsIDAsIDAsIDEs
IE5VTEwsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKLS0gCjEuOC4zLjEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxp
c3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
