Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D88E7FDB3D
	for <lists+dri-devel@lfdr.de>; Fri, 15 Nov 2019 11:23:31 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EB8996E418;
	Fri, 15 Nov 2019 10:23:16 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from ironport.ite.com.tw (60-251-196-230.HINET-IP.hinet.net
 [60.251.196.230])
 by gabe.freedesktop.org (Postfix) with ESMTP id C864A6E358
 for <dri-devel@lists.freedesktop.org>; Fri, 15 Nov 2019 10:08:14 +0000 (UTC)
Received: from unknown (HELO mse.ite.com.tw) ([192.168.35.30])
 by ironport.ite.com.tw with ESMTP; 15 Nov 2019 18:05:04 +0800
Received: from csbcas.internal.ite.com.tw (csbcas1.internal.ite.com.tw
 [192.168.65.46]) by mse.ite.com.tw with ESMTP id xAFA4xso031841;
 Fri, 15 Nov 2019 18:04:59 +0800 (GMT-8)
 (envelope-from allen.chen@ite.com.tw)
Received: from allen-VirtualBox.internal.ite.com.tw (192.168.70.14) by
 csbcas1.internal.ite.com.tw (192.168.65.45) with Microsoft SMTP Server (TLS)
 id 14.3.352.0; Fri, 15 Nov 2019 18:05:00 +0800
From: allen <allen.chen@ite.com.tw>
To: 
Subject: [PATCH v4 2/4] Revert "drm/tegra: Move drm_dp_link helpers to Tegra
 DRM"
Date: Fri, 15 Nov 2019 17:52:18 +0800
Message-ID: <1573811564-320-3-git-send-email-allen.chen@ite.com.tw>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1573811564-320-1-git-send-email-allen.chen@ite.com.tw>
References: <1573811564-320-1-git-send-email-allen.chen@ite.com.tw>
MIME-Version: 1.0
X-Originating-IP: [192.168.70.14]
X-MAIL: mse.ite.com.tw xAFA4xso031841
X-Mailman-Approved-At: Fri, 15 Nov 2019 10:23:15 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Jau-Chih Tseng <Jau-Chih.Tseng@ite.com.tw>, David Airlie <airlied@linux.ie>,
 Allen Chen <allen.chen@ite.com.tw>, open list <linux-kernel@vger.kernel.org>,
 Jonathan Hunter <jonathanh@nvidia.com>,
 Thierry Reding <thierry.reding@gmail.com>, "open
 list:DRM DRIVERS" <dri-devel@lists.freedesktop.org>,
 Pi-Hsun Shih <pihsun@chromium.org>, "open list:DRM DRIVERS
 FOR NVIDIA TEGRA" <linux-tegra@vger.kernel.org>, Sean Paul <sean@poorly.run>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyByZXZlcnRzIGNvbW1pdCA5YTQyYzdjNjQ3YTlhZDBmN2ViYjE0N2E1MmVkYTNkY2I3Yzg0
MjkyLgoKU2lnbmVkLW9mZi1ieTogQWxsZW4gQ2hlbiA8YWxsZW4uY2hlbkBpdGUuY29tLnR3Pgot
LS0KIGRyaXZlcnMvZ3B1L2RybS9kcm1fZHBfaGVscGVyLmMgfCAxMjggKysrKysrCiBkcml2ZXJz
L2dwdS9kcm0vdGVncmEvTWFrZWZpbGUgIHwgICAxIC0KIGRyaXZlcnMvZ3B1L2RybS90ZWdyYS9k
cC5jICAgICAgfCA4NzYgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL3RlZ3JhL2RwLmggICAgICB8IDE3NyAtLS0tLS0tLQogZHJpdmVycy9n
cHUvZHJtL3RlZ3JhL2RwYXV4LmMgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vdGVncmEvc29y
LmMgICAgIHwgICAxIC0KIGluY2x1ZGUvZHJtL2RybV9kcF9oZWxwZXIuaCAgICAgfCAgMTYgKwog
NyBmaWxlcyBjaGFuZ2VkLCAxNDQgaW5zZXJ0aW9ucygrKSwgMTA1NiBkZWxldGlvbnMoLSkKIGRl
bGV0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vdGVncmEvZHAuYwogZGVsZXRlIG1vZGUg
MTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS90ZWdyYS9kcC5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2RybV9kcF9oZWxwZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fZHBfaGVscGVyLmMK
aW5kZXggMmM3ODcwYS4uZjU2NzE0MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV9k
cF9oZWxwZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2RwX2hlbHBlci5jCkBAIC0zNTIs
NiArMzUyLDEzNCBAQCBpbnQgZHJtX2RwX2RwY2RfcmVhZF9saW5rX3N0YXR1cyhzdHJ1Y3QgZHJt
X2RwX2F1eCAqYXV4LAogRVhQT1JUX1NZTUJPTChkcm1fZHBfZHBjZF9yZWFkX2xpbmtfc3RhdHVz
KTsKIAogLyoqCisgKiBkcm1fZHBfbGlua19wcm9iZSgpIC0gcHJvYmUgYSBEaXNwbGF5UG9ydCBs
aW5rIGZvciBjYXBhYmlsaXRpZXMKKyAqIEBhdXg6IERpc3BsYXlQb3J0IEFVWCBjaGFubmVsCisg
KiBAbGluazogcG9pbnRlciB0byBzdHJ1Y3R1cmUgaW4gd2hpY2ggdG8gcmV0dXJuIGxpbmsgY2Fw
YWJpbGl0aWVzCisgKgorICogVGhlIHN0cnVjdHVyZSBmaWxsZWQgaW4gYnkgdGhpcyBmdW5jdGlv
biBjYW4gdXN1YWxseSBiZSBwYXNzZWQgZGlyZWN0bHkKKyAqIGludG8gZHJtX2RwX2xpbmtfcG93
ZXJfdXAoKSBhbmQgZHJtX2RwX2xpbmtfY29uZmlndXJlKCkgdG8gcG93ZXIgdXAgYW5kCisgKiBj
b25maWd1cmUgdGhlIGxpbmsgYmFzZWQgb24gdGhlIGxpbmsncyBjYXBhYmlsaXRpZXMuCisgKgor
ICogUmV0dXJucyAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1
cmUuCisgKi8KK2ludCBkcm1fZHBfbGlua19wcm9iZShzdHJ1Y3QgZHJtX2RwX2F1eCAqYXV4LCBz
dHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspCit7CisJdTggdmFsdWVzWzNdOworCWludCBlcnI7CisK
KwltZW1zZXQobGluaywgMCwgc2l6ZW9mKCpsaW5rKSk7CisKKwllcnIgPSBkcm1fZHBfZHBjZF9y
ZWFkKGF1eCwgRFBfRFBDRF9SRVYsIHZhbHVlcywgc2l6ZW9mKHZhbHVlcykpOworCWlmIChlcnIg
PCAwKQorCQlyZXR1cm4gZXJyOworCisJbGluay0+cmV2aXNpb24gPSB2YWx1ZXNbMF07CisJbGlu
ay0+cmF0ZSA9IGRybV9kcF9id19jb2RlX3RvX2xpbmtfcmF0ZSh2YWx1ZXNbMV0pOworCWxpbmst
Pm51bV9sYW5lcyA9IHZhbHVlc1syXSAmIERQX01BWF9MQU5FX0NPVU5UX01BU0s7CisKKwlpZiAo
dmFsdWVzWzJdICYgRFBfRU5IQU5DRURfRlJBTUVfQ0FQKQorCQlsaW5rLT5jYXBhYmlsaXRpZXMg
fD0gRFBfTElOS19DQVBfRU5IQU5DRURfRlJBTUlORzsKKworCXJldHVybiAwOworfQorRVhQT1JU
X1NZTUJPTChkcm1fZHBfbGlua19wcm9iZSk7CisKKy8qKgorICogZHJtX2RwX2xpbmtfcG93ZXJf
dXAoKSAtIHBvd2VyIHVwIGEgRGlzcGxheVBvcnQgbGluaworICogQGF1eDogRGlzcGxheVBvcnQg
QVVYIGNoYW5uZWwKKyAqIEBsaW5rOiBwb2ludGVyIHRvIGEgc3RydWN0dXJlIGNvbnRhaW5pbmcg
dGhlIGxpbmsgY29uZmlndXJhdGlvbgorICoKKyAqIFJldHVybnMgMCBvbiBzdWNjZXNzIG9yIGEg
bmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgZHJtX2RwX2xpbmtfcG93
ZXJfdXAoc3RydWN0IGRybV9kcF9hdXggKmF1eCwgc3RydWN0IGRybV9kcF9saW5rICpsaW5rKQor
eworCXU4IHZhbHVlOworCWludCBlcnI7CisKKwkvKiBEUF9TRVRfUE9XRVIgcmVnaXN0ZXIgaXMg
b25seSBhdmFpbGFibGUgb24gRFBDRCB2MS4xIGFuZCBsYXRlciAqLworCWlmIChsaW5rLT5yZXZp
c2lvbiA8IDB4MTEpCisJCXJldHVybiAwOworCisJZXJyID0gZHJtX2RwX2RwY2RfcmVhZGIoYXV4
LCBEUF9TRVRfUE9XRVIsICZ2YWx1ZSk7CisJaWYgKGVyciA8IDApCisJCXJldHVybiBlcnI7CisK
Kwl2YWx1ZSAmPSB+RFBfU0VUX1BPV0VSX01BU0s7CisJdmFsdWUgfD0gRFBfU0VUX1BPV0VSX0Qw
OworCisJZXJyID0gZHJtX2RwX2RwY2Rfd3JpdGViKGF1eCwgRFBfU0VUX1BPV0VSLCB2YWx1ZSk7
CisJaWYgKGVyciA8IDApCisJCXJldHVybiBlcnI7CisKKwkvKgorCSAqIEFjY29yZGluZyB0byB0
aGUgRFAgMS4xIHNwZWNpZmljYXRpb24sIGEgIlNpbmsgRGV2aWNlIG11c3QgZXhpdCB0aGUKKwkg
KiBwb3dlciBzYXZpbmcgc3RhdGUgd2l0aGluIDEgbXMiIChTZWN0aW9uIDIuNS4zLjEsIFRhYmxl
IDUtNTIsICJTaW5rCisJICogQ29udHJvbCBGaWVsZCIgKHJlZ2lzdGVyIDB4NjAwKS4KKwkgKi8K
Kwl1c2xlZXBfcmFuZ2UoMTAwMCwgMjAwMCk7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1C
T0woZHJtX2RwX2xpbmtfcG93ZXJfdXApOworCisvKioKKyAqIGRybV9kcF9saW5rX3Bvd2VyX2Rv
d24oKSAtIHBvd2VyIGRvd24gYSBEaXNwbGF5UG9ydCBsaW5rCisgKiBAYXV4OiBEaXNwbGF5UG9y
dCBBVVggY2hhbm5lbAorICogQGxpbms6IHBvaW50ZXIgdG8gYSBzdHJ1Y3R1cmUgY29udGFpbmlu
ZyB0aGUgbGluayBjb25maWd1cmF0aW9uCisgKgorICogUmV0dXJucyAwIG9uIHN1Y2Nlc3Mgb3Ig
YSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8KK2ludCBkcm1fZHBfbGlua19w
b3dlcl9kb3duKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVjdCBkcm1fZHBfbGluayAqbGlu
aykKK3sKKwl1OCB2YWx1ZTsKKwlpbnQgZXJyOworCisJLyogRFBfU0VUX1BPV0VSIHJlZ2lzdGVy
IGlzIG9ubHkgYXZhaWxhYmxlIG9uIERQQ0QgdjEuMSBhbmQgbGF0ZXIgKi8KKwlpZiAobGluay0+
cmV2aXNpb24gPCAweDExKQorCQlyZXR1cm4gMDsKKworCWVyciA9IGRybV9kcF9kcGNkX3JlYWRi
KGF1eCwgRFBfU0VUX1BPV0VSLCAmdmFsdWUpOworCWlmIChlcnIgPCAwKQorCQlyZXR1cm4gZXJy
OworCisJdmFsdWUgJj0gfkRQX1NFVF9QT1dFUl9NQVNLOworCXZhbHVlIHw9IERQX1NFVF9QT1dF
Ul9EMzsKKworCWVyciA9IGRybV9kcF9kcGNkX3dyaXRlYihhdXgsIERQX1NFVF9QT1dFUiwgdmFs
dWUpOworCWlmIChlcnIgPCAwKQorCQlyZXR1cm4gZXJyOworCisJcmV0dXJuIDA7Cit9CitFWFBP
UlRfU1lNQk9MKGRybV9kcF9saW5rX3Bvd2VyX2Rvd24pOworCisvKioKKyAqIGRybV9kcF9saW5r
X2NvbmZpZ3VyZSgpIC0gY29uZmlndXJlIGEgRGlzcGxheVBvcnQgbGluaworICogQGF1eDogRGlz
cGxheVBvcnQgQVVYIGNoYW5uZWwKKyAqIEBsaW5rOiBwb2ludGVyIHRvIGEgc3RydWN0dXJlIGNv
bnRhaW5pbmcgdGhlIGxpbmsgY29uZmlndXJhdGlvbgorICoKKyAqIFJldHVybnMgMCBvbiBzdWNj
ZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgZHJtX2Rw
X2xpbmtfY29uZmlndXJlKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVjdCBkcm1fZHBfbGlu
ayAqbGluaykKK3sKKwl1OCB2YWx1ZXNbMl07CisJaW50IGVycjsKKworCXZhbHVlc1swXSA9IGRy
bV9kcF9saW5rX3JhdGVfdG9fYndfY29kZShsaW5rLT5yYXRlKTsKKwl2YWx1ZXNbMV0gPSBsaW5r
LT5udW1fbGFuZXM7CisKKwlpZiAobGluay0+Y2FwYWJpbGl0aWVzICYgRFBfTElOS19DQVBfRU5I
QU5DRURfRlJBTUlORykKKwkJdmFsdWVzWzFdIHw9IERQX0xBTkVfQ09VTlRfRU5IQU5DRURfRlJB
TUVfRU47CisKKwllcnIgPSBkcm1fZHBfZHBjZF93cml0ZShhdXgsIERQX0xJTktfQldfU0VULCB2
YWx1ZXMsIHNpemVvZih2YWx1ZXMpKTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKwor
CXJldHVybiAwOworfQorRVhQT1JUX1NZTUJPTChkcm1fZHBfbGlua19jb25maWd1cmUpOworCisv
KioKICAqIGRybV9kcF9kb3duc3RyZWFtX21heF9jbG9jaygpIC0gZXh0cmFjdCBicmFuY2ggZGV2
aWNlIG1heAogICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaXhlbCByYXRlIGZv
ciBsZWdhY3kgVkdBCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnRl
ciBvciBtYXggVE1EUyBjbG9jawpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3RlZ3JhL01h
a2VmaWxlIGIvZHJpdmVycy9ncHUvZHJtL3RlZ3JhL01ha2VmaWxlCmluZGV4IGQ2Y2YyMDIuLjMz
YzQ2M2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS90ZWdyYS9NYWtlZmlsZQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vdGVncmEvTWFrZWZpbGUKQEAgLTUsNyArNSw2IEBAIHRlZ3JhLWRybS15
IDo9IFwKIAlkcm0ubyBcCiAJZ2VtLm8gXAogCWZiLm8gXAotCWRwLm8gXAogCWh1Yi5vIFwKIAlw
bGFuZS5vIFwKIAlkYy5vIFwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS90ZWdyYS9kcC5j
IGIvZHJpdmVycy9ncHUvZHJtL3RlZ3JhL2RwLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDcwZGZiN2QuLjAwMDAwMDAwCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS90ZWdyYS9kcC5jCisr
KyAvZGV2L251bGwKQEAgLTEsODc2ICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBNSVQKLS8qCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTMtMjAxOSBOVklESUEgQ29ycG9yYXRpb24K
LSAqIENvcHlyaWdodCAoQykgMjAxNSBSb2IgQ2xhcmsKLSAqLwotCi0jaW5jbHVkZSA8ZHJtL2Ry
bV9jcnRjLmg+Ci0jaW5jbHVkZSA8ZHJtL2RybV9kcF9oZWxwZXIuaD4KLSNpbmNsdWRlIDxkcm0v
ZHJtX3ByaW50Lmg+Ci0KLSNpbmNsdWRlICJkcC5oIgotCi1zdGF0aWMgY29uc3QgdTggZHJtX2Rw
X2VkcF9yZXZpc2lvbnNbXSA9IHsgMHgxMSwgMHgxMiwgMHgxMywgMHgxNCB9OwotCi1zdGF0aWMg
dm9pZCBkcm1fZHBfbGlua19jYXBzX3Jlc2V0KHN0cnVjdCBkcm1fZHBfbGlua19jYXBzICpjYXBz
KQotewotCWNhcHMtPmVuaGFuY2VkX2ZyYW1pbmcgPSBmYWxzZTsKLQljYXBzLT50cHMzX3N1cHBv
cnRlZCA9IGZhbHNlOwotCWNhcHMtPmZhc3RfdHJhaW5pbmcgPSBmYWxzZTsKLQljYXBzLT5jaGFu
bmVsX2NvZGluZyA9IGZhbHNlOwotCWNhcHMtPmFsdGVybmF0ZV9zY3JhbWJsZXJfcmVzZXQgPSBm
YWxzZTsKLX0KLQotdm9pZCBkcm1fZHBfbGlua19jYXBzX2NvcHkoc3RydWN0IGRybV9kcF9saW5r
X2NhcHMgKmRlc3QsCi0JCQkgICBjb25zdCBzdHJ1Y3QgZHJtX2RwX2xpbmtfY2FwcyAqc3JjKQot
ewotCWRlc3QtPmVuaGFuY2VkX2ZyYW1pbmcgPSBzcmMtPmVuaGFuY2VkX2ZyYW1pbmc7Ci0JZGVz
dC0+dHBzM19zdXBwb3J0ZWQgPSBzcmMtPnRwczNfc3VwcG9ydGVkOwotCWRlc3QtPmZhc3RfdHJh
aW5pbmcgPSBzcmMtPmZhc3RfdHJhaW5pbmc7Ci0JZGVzdC0+Y2hhbm5lbF9jb2RpbmcgPSBzcmMt
PmNoYW5uZWxfY29kaW5nOwotCWRlc3QtPmFsdGVybmF0ZV9zY3JhbWJsZXJfcmVzZXQgPSBzcmMt
PmFsdGVybmF0ZV9zY3JhbWJsZXJfcmVzZXQ7Ci19Ci0KLXN0YXRpYyB2b2lkIGRybV9kcF9saW5r
X3Jlc2V0KHN0cnVjdCBkcm1fZHBfbGluayAqbGluaykKLXsKLQl1bnNpZ25lZCBpbnQgaTsKLQot
CWlmICghbGluaykKLQkJcmV0dXJuOwotCi0JbGluay0+cmV2aXNpb24gPSAwOwotCWxpbmstPm1h
eF9yYXRlID0gMDsKLQlsaW5rLT5tYXhfbGFuZXMgPSAwOwotCi0JZHJtX2RwX2xpbmtfY2Fwc19y
ZXNldCgmbGluay0+Y2Fwcyk7Ci0JbGluay0+YXV4X3JkX2ludGVydmFsLmNyID0gMDsKLQlsaW5r
LT5hdXhfcmRfaW50ZXJ2YWwuY2UgPSAwOwotCWxpbmstPmVkcCA9IDA7Ci0KLQlsaW5rLT5yYXRl
ID0gMDsKLQlsaW5rLT5sYW5lcyA9IDA7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgRFBfTUFYX1NVUFBP
UlRFRF9SQVRFUzsgaSsrKQotCQlsaW5rLT5yYXRlc1tpXSA9IDA7Ci0KLQlsaW5rLT5udW1fcmF0
ZXMgPSAwOwotfQotCi0vKioKLSAqIGRybV9kcF9saW5rX2FkZF9yYXRlKCkgLSBhZGQgYSByYXRl
IHRvIHRoZSBsaXN0IG9mIHN1cHBvcnRlZCByYXRlcwotICogQGxpbms6IHRoZSBsaW5rIHRvIGFk
ZCB0aGUgcmF0ZSB0bwotICogQHJhdGU6IHRoZSByYXRlIHRvIGFkZAotICoKLSAqIEFkZCBhIGxp
bmsgcmF0ZSB0byB0aGUgbGlzdCBvZiBzdXBwb3J0ZWQgbGluayByYXRlcy4KLSAqCi0gKiBSZXR1
cm5zOgotICogMCBvbiBzdWNjZXNzIG9yIG9uZSBvZiB0aGUgZm9sbG93aW5nIG5lZ2F0aXZlIGVy
cm9yIGNvZGVzIG9uIGZhaWx1cmU6Ci0gKiAtIEVOT1NQQyBpZiB0aGUgbWF4aW11bSBudW1iZXIg
b2Ygc3VwcG9ydGVkIHJhdGVzIGhhcyBiZWVuIHJlYWNoZWQKLSAqIC0gRUVYSVNUUyBpZiB0aGUg
bGluayBhbHJlYWR5IHN1cHBvcnRzIHRoaXMgcmF0ZQotICoKLSAqIFNlZSBhbHNvOgotICogZHJt
X2RwX2xpbmtfcmVtb3ZlX3JhdGUoKQotICovCi1pbnQgZHJtX2RwX2xpbmtfYWRkX3JhdGUoc3Ry
dWN0IGRybV9kcF9saW5rICpsaW5rLCB1bnNpZ25lZCBsb25nIHJhdGUpCi17Ci0JdW5zaWduZWQg
aW50IGksIHBpdm90OwotCi0JaWYgKGxpbmstPm51bV9yYXRlcyA9PSBEUF9NQVhfU1VQUE9SVEVE
X1JBVEVTKQotCQlyZXR1cm4gLUVOT1NQQzsKLQotCWZvciAocGl2b3QgPSAwOyBwaXZvdCA8IGxp
bmstPm51bV9yYXRlczsgcGl2b3QrKykKLQkJaWYgKHJhdGUgPD0gbGluay0+cmF0ZXNbcGl2b3Rd
KQotCQkJYnJlYWs7Ci0KLQlpZiAocGl2b3QgIT0gbGluay0+bnVtX3JhdGVzICYmIHJhdGUgPT0g
bGluay0+cmF0ZXNbcGl2b3RdKQotCQlyZXR1cm4gLUVFWElTVDsKLQotCWZvciAoaSA9IGxpbmst
Pm51bV9yYXRlczsgaSA+IHBpdm90OyBpLS0pCi0JCWxpbmstPnJhdGVzW2ldID0gbGluay0+cmF0
ZXNbaSAtIDFdOwotCi0JbGluay0+cmF0ZXNbcGl2b3RdID0gcmF0ZTsKLQlsaW5rLT5udW1fcmF0
ZXMrKzsKLQotCXJldHVybiAwOwotfQotCi0vKioKLSAqIGRybV9kcF9saW5rX3JlbW92ZV9yYXRl
KCkgLSByZW1vdmUgYSByYXRlIGZyb20gdGhlIGxpc3Qgb2Ygc3VwcG9ydGVkIHJhdGVzCi0gKiBA
bGluazogdGhlIGxpbmsgZnJvbSB3aGljaCB0byByZW1vdmUgdGhlIHJhdGUKLSAqIEByYXRlOiB0
aGUgcmF0ZSB0byByZW1vdmUKLSAqCi0gKiBSZW1vdmVzIGEgbGluayByYXRlIGZyb20gdGhlIGxp
c3Qgb2Ygc3VwcG9ydGVkIGxpbmsgcmF0ZXMuCi0gKgotICogUmV0dXJuczoKLSAqIDAgb24gc3Vj
Y2VzcyBvciBvbmUgb2YgdGhlIGZvbGxvd2luZyBuZWdhdGl2ZSBlcnJvciBjb2RlcyBvbiBmYWls
dXJlOgotICogLSBFSU5WQUwgaWYgdGhlIHNwZWNpZmllZCByYXRlIGlzIG5vdCBhbW9uZyB0aGUg
c3VwcG9ydGVkIHJhdGVzCi0gKgotICogU2VlIGFsc286Ci0gKiBkcm1fZHBfbGlua19hZGRfcmF0
ZSgpCi0gKi8KLWludCBkcm1fZHBfbGlua19yZW1vdmVfcmF0ZShzdHJ1Y3QgZHJtX2RwX2xpbmsg
KmxpbmssIHVuc2lnbmVkIGxvbmcgcmF0ZSkKLXsKLQl1bnNpZ25lZCBpbnQgaTsKLQotCWZvciAo
aSA9IDA7IGkgPCBsaW5rLT5udW1fcmF0ZXM7IGkrKykKLQkJaWYgKHJhdGUgPT0gbGluay0+cmF0
ZXNbaV0pCi0JCQlicmVhazsKLQotCWlmIChpID09IGxpbmstPm51bV9yYXRlcykKLQkJcmV0dXJu
IC1FSU5WQUw7Ci0KLQlsaW5rLT5udW1fcmF0ZXMtLTsKLQotCXdoaWxlIChpIDwgbGluay0+bnVt
X3JhdGVzKSB7Ci0JCWxpbmstPnJhdGVzW2ldID0gbGluay0+cmF0ZXNbaSArIDFdOwotCQlpKys7
Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLS8qKgotICogZHJtX2RwX2xpbmtfdXBkYXRlX3JhdGVz
KCkgLSBub3JtYWxpemUgdGhlIHN1cHBvcnRlZCBsaW5rIHJhdGVzIGFycmF5Ci0gKiBAbGluazog
dGhlIGxpbmsgZm9yIHdoaWNoIHRvIG5vcm1hbGl6ZSB0aGUgc3VwcG9ydGVkIGxpbmsgcmF0ZXMK
LSAqCi0gKiBVc2VycyBzaG91bGQgY2FsbCB0aGlzIGZ1bmN0aW9uIGFmdGVyIHRoZXkndmUgbWFu
dWFsbHkgbW9kaWZpZWQgdGhlIGFycmF5Ci0gKiBvZiBzdXBwb3J0ZWQgbGluayByYXRlcy4gVGhp
cyBmdW5jdGlvbiByZW1vdmVzIGFueSBzdGFsZSBlbnRyaWVzLCBjb21wYWN0cwotICogdGhlIGFy
cmF5IGFuZCB1cGRhdGVzIHRoZSBzdXBwb3J0ZWQgbGluayByYXRlIGNvdW50LiBOb3RlIHRoYXQg
Y2FsbGluZyB0aGUKLSAqIGRybV9kcF9saW5rX3JlbW92ZV9yYXRlKCkgZnVuY3Rpb24gYWxyZWFk
eSBkb2VzIHRoaXMgamFuaXRvcmlhbCB3b3JrLgotICoKLSAqIFNlZSBhbHNvOgotICogZHJtX2Rw
X2xpbmtfYWRkX3JhdGUoKSwgZHJtX2RwX2xpbmtfcmVtb3ZlX3JhdGUoKQotICovCi12b2lkIGRy
bV9kcF9saW5rX3VwZGF0ZV9yYXRlcyhzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspCi17Ci0JdW5z
aWduZWQgaW50IGksIGNvdW50ID0gMDsKLQotCWZvciAoaSA9IDA7IGkgPCBsaW5rLT5udW1fcmF0
ZXM7IGkrKykgewotCQlpZiAobGluay0+cmF0ZXNbaV0gIT0gMCkKLQkJCWxpbmstPnJhdGVzW2Nv
dW50KytdID0gbGluay0+cmF0ZXNbaV07Ci0JfQotCi0JZm9yIChpID0gY291bnQ7IGkgPCBsaW5r
LT5udW1fcmF0ZXM7IGkrKykKLQkJbGluay0+cmF0ZXNbaV0gPSAwOwotCi0JbGluay0+bnVtX3Jh
dGVzID0gY291bnQ7Ci19Ci0KLS8qKgotICogZHJtX2RwX2xpbmtfcHJvYmUoKSAtIHByb2JlIGEg
RGlzcGxheVBvcnQgbGluayBmb3IgY2FwYWJpbGl0aWVzCi0gKiBAYXV4OiBEaXNwbGF5UG9ydCBB
VVggY2hhbm5lbAotICogQGxpbms6IHBvaW50ZXIgdG8gc3RydWN0dXJlIGluIHdoaWNoIHRvIHJl
dHVybiBsaW5rIGNhcGFiaWxpdGllcwotICoKLSAqIFRoZSBzdHJ1Y3R1cmUgZmlsbGVkIGluIGJ5
IHRoaXMgZnVuY3Rpb24gY2FuIHVzdWFsbHkgYmUgcGFzc2VkIGRpcmVjdGx5Ci0gKiBpbnRvIGRy
bV9kcF9saW5rX3Bvd2VyX3VwKCkgYW5kIGRybV9kcF9saW5rX2NvbmZpZ3VyZSgpIHRvIHBvd2Vy
IHVwIGFuZAotICogY29uZmlndXJlIHRoZSBsaW5rIGJhc2VkIG9uIHRoZSBsaW5rJ3MgY2FwYWJp
bGl0aWVzLgotICoKLSAqIFJldHVybnMgMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3Ig
Y29kZSBvbiBmYWlsdXJlLgotICovCi1pbnQgZHJtX2RwX2xpbmtfcHJvYmUoc3RydWN0IGRybV9k
cF9hdXggKmF1eCwgc3RydWN0IGRybV9kcF9saW5rICpsaW5rKQotewotCXU4IGRwY2RbRFBfUkVD
RUlWRVJfQ0FQX1NJWkVdLCB2YWx1ZTsKLQl1bnNpZ25lZCBpbnQgcmRfaW50ZXJ2YWw7Ci0JaW50
IGVycjsKLQotCWRybV9kcF9saW5rX3Jlc2V0KGxpbmspOwotCi0JZXJyID0gZHJtX2RwX2RwY2Rf
cmVhZChhdXgsIERQX0RQQ0RfUkVWLCBkcGNkLCBzaXplb2YoZHBjZCkpOwotCWlmIChlcnIgPCAw
KQotCQlyZXR1cm4gZXJyOwotCi0JbGluay0+cmV2aXNpb24gPSBkcGNkW0RQX0RQQ0RfUkVWXTsK
LQlsaW5rLT5tYXhfcmF0ZSA9IGRybV9kcF9tYXhfbGlua19yYXRlKGRwY2QpOwotCWxpbmstPm1h
eF9sYW5lcyA9IGRybV9kcF9tYXhfbGFuZV9jb3VudChkcGNkKTsKLQotCWxpbmstPmNhcHMuZW5o
YW5jZWRfZnJhbWluZyA9IGRybV9kcF9lbmhhbmNlZF9mcmFtZV9jYXAoZHBjZCk7Ci0JbGluay0+
Y2Fwcy50cHMzX3N1cHBvcnRlZCA9IGRybV9kcF90cHMzX3N1cHBvcnRlZChkcGNkKTsKLQlsaW5r
LT5jYXBzLmZhc3RfdHJhaW5pbmcgPSBkcm1fZHBfZmFzdF90cmFpbmluZ19jYXAoZHBjZCk7Ci0J
bGluay0+Y2Fwcy5jaGFubmVsX2NvZGluZyA9IGRybV9kcF9jaGFubmVsX2NvZGluZ19zdXBwb3J0
ZWQoZHBjZCk7Ci0KLQlpZiAoZHJtX2RwX2FsdGVybmF0ZV9zY3JhbWJsZXJfcmVzZXRfY2FwKGRw
Y2QpKSB7Ci0JCWxpbmstPmNhcHMuYWx0ZXJuYXRlX3NjcmFtYmxlcl9yZXNldCA9IHRydWU7Ci0K
LQkJZXJyID0gZHJtX2RwX2RwY2RfcmVhZGIoYXV4LCBEUF9FRFBfRFBDRF9SRVYsICZ2YWx1ZSk7
Ci0JCWlmIChlcnIgPCAwKQotCQkJcmV0dXJuIGVycjsKLQotCQlpZiAodmFsdWUgPj0gQVJSQVlf
U0laRShkcm1fZHBfZWRwX3JldmlzaW9ucykpCi0JCQlEUk1fRVJST1IoInVuc3VwcG9ydGVkIGVE
UCB2ZXJzaW9uOiAlMDJ4XG4iLCB2YWx1ZSk7Ci0JCWVsc2UKLQkJCWxpbmstPmVkcCA9IGRybV9k
cF9lZHBfcmV2aXNpb25zW3ZhbHVlXTsKLQl9Ci0KLQkvKgotCSAqIFRoZSBEUENEIHN0b3JlcyB0
aGUgQVVYIHJlYWQgaW50ZXJ2YWwgaW4gdW5pdHMgb2YgNCBtcy4gVGhlcmUgYXJlCi0JICogdHdv
IHNwZWNpYWwgY2FzZXM6Ci0JICoKLQkgKiAgIDEpIGlmIHRoZSBUUkFJTklOR19BVVhfUkRfSU5U
RVJWQUwgZmllbGQgaXMgMCwgdGhlIGNsb2NrIHJlY292ZXJ5Ci0JICogICAgICBhbmQgY2hhbm5l
bCBlcXVhbGl6YXRpb24gc2hvdWxkIHVzZSAxMDAgdXMgb3IgNDAwIHVzIEFVWCByZWFkCi0JICog
ICAgICBpbnRlcnZhbHMsIHJlc3BlY3RpdmVseQotCSAqCi0JICogICAyKSBmb3IgRFAgdjEuNCBh
bmQgYWJvdmUsIGNsb2NrIHJlY292ZXJ5IHNob3VsZCBhbHdheXMgdXNlIDEwMCB1cwotCSAqICAg
ICAgQVVYIHJlYWQgaW50ZXJ2YWxzCi0JICovCi0JcmRfaW50ZXJ2YWwgPSBkcGNkW0RQX1RSQUlO
SU5HX0FVWF9SRF9JTlRFUlZBTF0gJgotCQkJICAgRFBfVFJBSU5JTkdfQVVYX1JEX01BU0s7Ci0K
LQlpZiAocmRfaW50ZXJ2YWwgPiA0KSB7Ci0JCURSTV9ERUJVR19LTVMoIkFVWCBpbnRlcnZhbCAl
dSBvdXQgb2YgcmFuZ2UgKG1heC4gNClcbiIsCi0JCQkgICAgICByZF9pbnRlcnZhbCk7Ci0JCXJk
X2ludGVydmFsID0gNDsKLQl9Ci0KLQlyZF9pbnRlcnZhbCAqPSA0ICogVVNFQ19QRVJfTVNFQzsK
LQotCWlmIChyZF9pbnRlcnZhbCA9PSAwIHx8IGxpbmstPnJldmlzaW9uID49IERQX0RQQ0RfUkVW
XzE0KQotCQlsaW5rLT5hdXhfcmRfaW50ZXJ2YWwuY3IgPSAxMDA7Ci0KLQlpZiAocmRfaW50ZXJ2
YWwgPT0gMCkKLQkJbGluay0+YXV4X3JkX2ludGVydmFsLmNlID0gNDAwOwotCi0JbGluay0+cmF0
ZSA9IGxpbmstPm1heF9yYXRlOwotCWxpbmstPmxhbmVzID0gbGluay0+bWF4X2xhbmVzOwotCi0J
LyogUGFyc2UgU1VQUE9SVEVEX0xJTktfUkFURVMgZnJvbSBlRFAgMS40ICovCi0JaWYgKGxpbmst
PmVkcCA+PSAweDE0KSB7Ci0JCXU4IHN1cHBvcnRlZF9yYXRlc1tEUF9NQVhfU1VQUE9SVEVEX1JB
VEVTICogMl07Ci0JCXVuc2lnbmVkIGludCBpOwotCQl1MTYgcmF0ZTsKLQotCQllcnIgPSBkcm1f
ZHBfZHBjZF9yZWFkKGF1eCwgRFBfU1VQUE9SVEVEX0xJTktfUkFURVMsCi0JCQkJICAgICAgIHN1
cHBvcnRlZF9yYXRlcywKLQkJCQkgICAgICAgc2l6ZW9mKHN1cHBvcnRlZF9yYXRlcykpOwotCQlp
ZiAoZXJyIDwgMCkKLQkJCXJldHVybiBlcnI7Ci0KLQkJZm9yIChpID0gMDsgaSA8IERQX01BWF9T
VVBQT1JURURfUkFURVM7IGkrKykgewotCQkJcmF0ZSA9IHN1cHBvcnRlZF9yYXRlc1tpICogMiAr
IDFdIDw8IDggfAotCQkJICAgICAgIHN1cHBvcnRlZF9yYXRlc1tpICogMiArIDBdOwotCi0JCQlk
cm1fZHBfbGlua19hZGRfcmF0ZShsaW5rLCByYXRlICogMjAwKTsKLQkJfQotCX0KLQotCXJldHVy
biAwOwotfQotCi0vKioKLSAqIGRybV9kcF9saW5rX3Bvd2VyX3VwKCkgLSBwb3dlciB1cCBhIERp
c3BsYXlQb3J0IGxpbmsKLSAqIEBhdXg6IERpc3BsYXlQb3J0IEFVWCBjaGFubmVsCi0gKiBAbGlu
azogcG9pbnRlciB0byBhIHN0cnVjdHVyZSBjb250YWluaW5nIHRoZSBsaW5rIGNvbmZpZ3VyYXRp
b24KLSAqCi0gKiBSZXR1cm5zIDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUg
b24gZmFpbHVyZS4KLSAqLwotaW50IGRybV9kcF9saW5rX3Bvd2VyX3VwKHN0cnVjdCBkcm1fZHBf
YXV4ICphdXgsIHN0cnVjdCBkcm1fZHBfbGluayAqbGluaykKLXsKLQl1OCB2YWx1ZTsKLQlpbnQg
ZXJyOwotCi0JLyogRFBfU0VUX1BPV0VSIHJlZ2lzdGVyIGlzIG9ubHkgYXZhaWxhYmxlIG9uIERQ
Q0QgdjEuMSBhbmQgbGF0ZXIgKi8KLQlpZiAobGluay0+cmV2aXNpb24gPCAweDExKQotCQlyZXR1
cm4gMDsKLQotCWVyciA9IGRybV9kcF9kcGNkX3JlYWRiKGF1eCwgRFBfU0VUX1BPV0VSLCAmdmFs
dWUpOwotCWlmIChlcnIgPCAwKQotCQlyZXR1cm4gZXJyOwotCi0JdmFsdWUgJj0gfkRQX1NFVF9Q
T1dFUl9NQVNLOwotCXZhbHVlIHw9IERQX1NFVF9QT1dFUl9EMDsKLQotCWVyciA9IGRybV9kcF9k
cGNkX3dyaXRlYihhdXgsIERQX1NFVF9QT1dFUiwgdmFsdWUpOwotCWlmIChlcnIgPCAwKQotCQly
ZXR1cm4gZXJyOwotCi0JLyoKLQkgKiBBY2NvcmRpbmcgdG8gdGhlIERQIDEuMSBzcGVjaWZpY2F0
aW9uLCBhICJTaW5rIERldmljZSBtdXN0IGV4aXQgdGhlCi0JICogcG93ZXIgc2F2aW5nIHN0YXRl
IHdpdGhpbiAxIG1zIiAoU2VjdGlvbiAyLjUuMy4xLCBUYWJsZSA1LTUyLCAiU2luawotCSAqIENv
bnRyb2wgRmllbGQiIChyZWdpc3RlciAweDYwMCkuCi0JICovCi0JdXNsZWVwX3JhbmdlKDEwMDAs
IDIwMDApOwotCi0JcmV0dXJuIDA7Ci19Ci0KLS8qKgotICogZHJtX2RwX2xpbmtfcG93ZXJfZG93
bigpIC0gcG93ZXIgZG93biBhIERpc3BsYXlQb3J0IGxpbmsKLSAqIEBhdXg6IERpc3BsYXlQb3J0
IEFVWCBjaGFubmVsCi0gKiBAbGluazogcG9pbnRlciB0byBhIHN0cnVjdHVyZSBjb250YWluaW5n
IHRoZSBsaW5rIGNvbmZpZ3VyYXRpb24KLSAqCi0gKiBSZXR1cm5zIDAgb24gc3VjY2VzcyBvciBh
IG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KLSAqLwotaW50IGRybV9kcF9saW5rX3Bv
d2VyX2Rvd24oc3RydWN0IGRybV9kcF9hdXggKmF1eCwgc3RydWN0IGRybV9kcF9saW5rICpsaW5r
KQotewotCXU4IHZhbHVlOwotCWludCBlcnI7Ci0KLQkvKiBEUF9TRVRfUE9XRVIgcmVnaXN0ZXIg
aXMgb25seSBhdmFpbGFibGUgb24gRFBDRCB2MS4xIGFuZCBsYXRlciAqLwotCWlmIChsaW5rLT5y
ZXZpc2lvbiA8IDB4MTEpCi0JCXJldHVybiAwOwotCi0JZXJyID0gZHJtX2RwX2RwY2RfcmVhZGIo
YXV4LCBEUF9TRVRfUE9XRVIsICZ2YWx1ZSk7Ci0JaWYgKGVyciA8IDApCi0JCXJldHVybiBlcnI7
Ci0KLQl2YWx1ZSAmPSB+RFBfU0VUX1BPV0VSX01BU0s7Ci0JdmFsdWUgfD0gRFBfU0VUX1BPV0VS
X0QzOwotCi0JZXJyID0gZHJtX2RwX2RwY2Rfd3JpdGViKGF1eCwgRFBfU0VUX1BPV0VSLCB2YWx1
ZSk7Ci0JaWYgKGVyciA8IDApCi0JCXJldHVybiBlcnI7Ci0KLQlyZXR1cm4gMDsKLX0KLQotLyoq
Ci0gKiBkcm1fZHBfbGlua19jb25maWd1cmUoKSAtIGNvbmZpZ3VyZSBhIERpc3BsYXlQb3J0IGxp
bmsKLSAqIEBhdXg6IERpc3BsYXlQb3J0IEFVWCBjaGFubmVsCi0gKiBAbGluazogcG9pbnRlciB0
byBhIHN0cnVjdHVyZSBjb250YWluaW5nIHRoZSBsaW5rIGNvbmZpZ3VyYXRpb24KLSAqCi0gKiBS
ZXR1cm5zIDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4K
LSAqLwotaW50IGRybV9kcF9saW5rX2NvbmZpZ3VyZShzdHJ1Y3QgZHJtX2RwX2F1eCAqYXV4LCBz
dHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspCi17Ci0JdTggdmFsdWVzWzJdLCB2YWx1ZTsKLQlpbnQg
ZXJyOwotCi0JaWYgKGxpbmstPm9wcyAmJiBsaW5rLT5vcHMtPmNvbmZpZ3VyZSkgewotCQllcnIg
PSBsaW5rLT5vcHMtPmNvbmZpZ3VyZShsaW5rKTsKLQkJaWYgKGVyciA8IDApIHsKLQkJCURSTV9F
UlJPUigiZmFpbGVkIHRvIGNvbmZpZ3VyZSBEUCBsaW5rOiAlZFxuIiwgZXJyKTsKLQkJCXJldHVy
biBlcnI7Ci0JCX0KLQl9Ci0KLQl2YWx1ZXNbMF0gPSBkcm1fZHBfbGlua19yYXRlX3RvX2J3X2Nv
ZGUobGluay0+cmF0ZSk7Ci0JdmFsdWVzWzFdID0gbGluay0+bGFuZXM7Ci0KLQlpZiAobGluay0+
Y2Fwcy5lbmhhbmNlZF9mcmFtaW5nKQotCQl2YWx1ZXNbMV0gfD0gRFBfTEFORV9DT1VOVF9FTkhB
TkNFRF9GUkFNRV9FTjsKLQotCWVyciA9IGRybV9kcF9kcGNkX3dyaXRlKGF1eCwgRFBfTElOS19C
V19TRVQsIHZhbHVlcywgc2l6ZW9mKHZhbHVlcykpOwotCWlmIChlcnIgPCAwKQotCQlyZXR1cm4g
ZXJyOwotCi0JaWYgKGxpbmstPmNhcHMuY2hhbm5lbF9jb2RpbmcpCi0JCXZhbHVlID0gRFBfU0VU
X0FOU0lfOEIxMEI7Ci0JZWxzZQotCQl2YWx1ZSA9IDA7Ci0KLQllcnIgPSBkcm1fZHBfZHBjZF93
cml0ZWIoYXV4LCBEUF9NQUlOX0xJTktfQ0hBTk5FTF9DT0RJTkdfU0VULCB2YWx1ZSk7Ci0JaWYg
KGVyciA8IDApCi0JCXJldHVybiBlcnI7Ci0KLQlpZiAobGluay0+Y2Fwcy5hbHRlcm5hdGVfc2Ny
YW1ibGVyX3Jlc2V0KSB7Ci0JCWVyciA9IGRybV9kcF9kcGNkX3dyaXRlYihhdXgsIERQX0VEUF9D
T05GSUdVUkFUSU9OX1NFVCwKLQkJCQkJIERQX0FMVEVSTkFURV9TQ1JBTUJMRVJfUkVTRVRfRU5B
QkxFKTsKLQkJaWYgKGVyciA8IDApCi0JCQlyZXR1cm4gZXJyOwotCX0KLQotCXJldHVybiAwOwot
fQotCi0vKioKLSAqIGRybV9kcF9saW5rX2Nob29zZSgpIC0gY2hvb3NlIHRoZSBsb3dlc3QgcG9z
c2libGUgY29uZmlndXJhdGlvbiBmb3IgYSBtb2RlCi0gKiBAbGluazogRFJNIERQIGxpbmsgb2Jq
ZWN0Ci0gKiBAbW9kZTogRFJNIGRpc3BsYXkgbW9kZQotICogQGluZm86IERSTSBkaXNwbGF5IGlu
Zm9ybWF0aW9uCi0gKgotICogQWNjb3JkaW5nIHRvIHRoZSBlRFAgc3BlY2lmaWNhdGlvbiwgYSBz
b3VyY2Ugc2hvdWxkIHNlbGVjdCBhIGNvbmZpZ3VyYXRpb24KLSAqIHdpdGggdGhlIGxvd2VzdCBu
dW1iZXIgb2YgbGFuZXMgYW5kIHRoZSBsb3dlc3QgcG9zc2libGUgbGluayByYXRlIHRoYXQgY2Fu
Ci0gKiBtYXRjaCB0aGUgYml0cmF0ZSByZXF1aXJlbWVudHMgb2YgYSB2aWRlbyBtb2RlLiBIb3dl
dmVyIGl0IG11c3QgZW5zdXJlIG5vdAotICogdG8gZXhjZWVkIHRoZSBjYXBhYmlsaXRpZXMgb2Yg
dGhlIHNpbmsuCi0gKgotICogUmV0dXJuczogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJy
b3IgY29kZSBvbiBmYWlsdXJlLgotICovCi1pbnQgZHJtX2RwX2xpbmtfY2hvb3NlKHN0cnVjdCBk
cm1fZHBfbGluayAqbGluaywKLQkJICAgICAgIGNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2Rl
ICptb2RlLAotCQkgICAgICAgY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X2luZm8gKmluZm8pCi17
Ci0JLyogYXZhaWxhYmxlIGxpbmsgc3ltYm9sIGNsb2NrIHJhdGVzICovCi0Jc3RhdGljIGNvbnN0
IHVuc2lnbmVkIGludCByYXRlc1szXSA9IHsgMTYyMDAwLCAyNzAwMDAsIDU0MDAwMCB9OwotCS8q
IGF2YWlsYWJsZSBudW1iZXIgb2YgbGFuZXMgKi8KLQlzdGF0aWMgY29uc3QgdW5zaWduZWQgaW50
IGxhbmVzWzNdID0geyAxLCAyLCA0IH07Ci0JdW5zaWduZWQgbG9uZyByZXF1aXJlbWVudCwgY2Fw
YWNpdHk7Ci0JdW5zaWduZWQgaW50IHJhdGUgPSBsaW5rLT5tYXhfcmF0ZTsKLQl1bnNpZ25lZCBp
bnQgaSwgajsKLQotCS8qIGJhbmR3aWR0aCByZXF1aXJlbWVudCAqLwotCXJlcXVpcmVtZW50ID0g
bW9kZS0+Y2xvY2sgKiBpbmZvLT5icGMgKiAzOwotCi0JZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJ
WkUobGFuZXMpICYmIGxhbmVzW2ldIDw9IGxpbmstPm1heF9sYW5lczsgaSsrKSB7Ci0JCWZvciAo
aiA9IDA7IGogPCBBUlJBWV9TSVpFKHJhdGVzKSAmJiByYXRlc1tqXSA8PSByYXRlOyBqKyspIHsK
LQkJCS8qCi0JCQkgKiBDYXBhY2l0eSBmb3IgdGhpcyBjb21iaW5hdGlvbiBvZiBsYW5lcyBhbmQg
cmF0ZSwKLQkJCSAqIGZhY3RvcmluZyBpbiB0aGUgQU5TSSA4Qi8xMEIgZW5jb2RpbmcuCi0JCQkg
KgotCQkJICogTGluayByYXRlcyBpbiB0aGUgRFJNIERQIGhlbHBlcnMgYXJlIHJlYWxseSBsaW5r
Ci0JCQkgKiBzeW1ib2wgZnJlcXVlbmNpZXMsIHNvIGEgdGVudGggb2YgdGhlIGFjdHVhbCByYXRl
Ci0JCQkgKiBvZiB0aGUgbGluay4KLQkJCSAqLwotCQkJY2FwYWNpdHkgPSBsYW5lc1tpXSAqIChy
YXRlc1tqXSAqIDEwKSAqIDggLyAxMDsKLQotCQkJaWYgKGNhcGFjaXR5ID49IHJlcXVpcmVtZW50
KSB7Ci0JCQkJRFJNX0RFQlVHX0tNUygidXNpbmcgJXUgbGFuZXMgYXQgJXUga0h6ICglbHUvJWx1
IGticHMpXG4iLAotCQkJCQkgICAgICBsYW5lc1tpXSwgcmF0ZXNbal0sIHJlcXVpcmVtZW50LAot
CQkJCQkgICAgICBjYXBhY2l0eSk7Ci0JCQkJbGluay0+bGFuZXMgPSBsYW5lc1tpXTsKLQkJCQls
aW5rLT5yYXRlID0gcmF0ZXNbal07Ci0JCQkJcmV0dXJuIDA7Ci0JCQl9Ci0JCX0KLQl9Ci0KLQly
ZXR1cm4gLUVSQU5HRTsKLX0KLQotLyoqCi0gKiBET0M6IExpbmsgdHJhaW5pbmcKLSAqCi0gKiBU
aGVzZSBmdW5jdGlvbnMgY29udGFpbiBjb21tb24gbG9naWMgYW5kIGhlbHBlcnMgdG8gaW1wbGVt
ZW50IERpc3BsYXlQb3J0Ci0gKiBsaW5rIHRyYWluaW5nLgotICovCi0KLS8qKgotICogZHJtX2Rw
X2xpbmtfdHJhaW5faW5pdCgpIC0gaW5pdGlhbGl6ZSBEaXNwbGF5UG9ydCBsaW5rIHRyYWluaW5n
IHN0YXRlCi0gKiBAdHJhaW46IERpc3BsYXlQb3J0IGxpbmsgdHJhaW5pbmcgc3RhdGUKLSAqLwot
dm9pZCBkcm1fZHBfbGlua190cmFpbl9pbml0KHN0cnVjdCBkcm1fZHBfbGlua190cmFpbiAqdHJh
aW4pCi17Ci0Jc3RydWN0IGRybV9kcF9saW5rX3RyYWluX3NldCAqcmVxdWVzdCA9ICZ0cmFpbi0+
cmVxdWVzdDsKLQlzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJhaW5fc2V0ICphZGp1c3QgPSAmdHJhaW4t
PmFkanVzdDsKLQl1bnNpZ25lZCBpbnQgaTsKLQotCWZvciAoaSA9IDA7IGkgPCA0OyBpKyspIHsK
LQkJcmVxdWVzdC0+dm9sdGFnZV9zd2luZ1tpXSA9IDA7Ci0JCWFkanVzdC0+dm9sdGFnZV9zd2lu
Z1tpXSA9IDA7Ci0KLQkJcmVxdWVzdC0+cHJlX2VtcGhhc2lzW2ldID0gMDsKLQkJYWRqdXN0LT5w
cmVfZW1waGFzaXNbaV0gPSAwOwotCi0JCXJlcXVlc3QtPnBvc3RfY3Vyc29yW2ldID0gMDsKLQkJ
YWRqdXN0LT5wb3N0X2N1cnNvcltpXSA9IDA7Ci0JfQotCi0JdHJhaW4tPnBhdHRlcm4gPSBEUF9U
UkFJTklOR19QQVRURVJOX0RJU0FCTEU7Ci0JdHJhaW4tPmNsb2NrX3JlY292ZXJlZCA9IGZhbHNl
OwotCXRyYWluLT5jaGFubmVsX2VxdWFsaXplZCA9IGZhbHNlOwotfQotCi1zdGF0aWMgYm9vbCBk
cm1fZHBfbGlua190cmFpbl92YWxpZChjb25zdCBzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJhaW4gKnRy
YWluKQotewotCXJldHVybiB0cmFpbi0+Y2xvY2tfcmVjb3ZlcmVkICYmIHRyYWluLT5jaGFubmVs
X2VxdWFsaXplZDsKLX0KLQotc3RhdGljIGludCBkcm1fZHBfbGlua19hcHBseV90cmFpbmluZyhz
dHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspCi17Ci0Jc3RydWN0IGRybV9kcF9saW5rX3RyYWluX3Nl
dCAqcmVxdWVzdCA9ICZsaW5rLT50cmFpbi5yZXF1ZXN0OwotCXVuc2lnbmVkIGludCBsYW5lcyA9
IGxpbmstPmxhbmVzLCAqdnMsICpwZSwgKnBjLCBpOwotCXN0cnVjdCBkcm1fZHBfYXV4ICphdXgg
PSBsaW5rLT5hdXg7Ci0JdTggdmFsdWVzWzRdLCBwYXR0ZXJuID0gMDsKLQlpbnQgZXJyOwotCi0J
ZXJyID0gbGluay0+b3BzLT5hcHBseV90cmFpbmluZyhsaW5rKTsKLQlpZiAoZXJyIDwgMCkgewot
CQlEUk1fRVJST1IoImZhaWxlZCB0byBhcHBseSBsaW5rIHRyYWluaW5nOiAlZFxuIiwgZXJyKTsK
LQkJcmV0dXJuIGVycjsKLQl9Ci0KLQl2cyA9IHJlcXVlc3QtPnZvbHRhZ2Vfc3dpbmc7Ci0JcGUg
PSByZXF1ZXN0LT5wcmVfZW1waGFzaXM7Ci0JcGMgPSByZXF1ZXN0LT5wb3N0X2N1cnNvcjsKLQot
CS8qIHdyaXRlIGN1cnJlbnRseSBzZWxlY3RlZCB2b2x0YWdlLXN3aW5nIGFuZCBwcmUtZW1waGFz
aXMgbGV2ZWxzICovCi0JZm9yIChpID0gMDsgaSA8IGxhbmVzOyBpKyspCi0JCXZhbHVlc1tpXSA9
IERQX1RSQUlOX1ZPTFRBR0VfU1dJTkdfTEVWRUwodnNbaV0pIHwKLQkJCSAgICBEUF9UUkFJTl9Q
UkVfRU1QSEFTSVNfTEVWRUwocGVbaV0pOwotCi0JZXJyID0gZHJtX2RwX2RwY2Rfd3JpdGUoYXV4
LCBEUF9UUkFJTklOR19MQU5FMF9TRVQsIHZhbHVlcywgbGFuZXMpOwotCWlmIChlcnIgPCAwKSB7
Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIHNldCB0cmFpbmluZyBwYXJhbWV0ZXJzOiAlZFxuIiwg
ZXJyKTsKLQkJcmV0dXJuIGVycjsKLQl9Ci0KLQkvKiB3cml0ZSBjdXJyZW50bHkgc2VsZWN0ZWQg
cG9zdC1jdXJzb3IgbGV2ZWwgKGlmIHN1cHBvcnRlZCkgKi8KLQlpZiAobGluay0+cmV2aXNpb24g
Pj0gMHgxMiAmJiBsaW5rLT5yYXRlID09IDU0MDAwMCkgewotCQl2YWx1ZXNbMF0gPSB2YWx1ZXNb
MV0gPSAwOwotCi0JCWZvciAoaSA9IDA7IGkgPCBsYW5lczsgaSsrKQotCQkJdmFsdWVzW2kgLyAy
XSB8PSBEUF9MQU5FX1BPU1RfQ1VSU09SKGksIHBjW2ldKTsKLQotCQllcnIgPSBkcm1fZHBfZHBj
ZF93cml0ZShhdXgsIERQX1RSQUlOSU5HX0xBTkUwXzFfU0VUMiwgdmFsdWVzLAotCQkJCQlESVZf
Uk9VTkRfVVAobGFuZXMsIDIpKTsKLQkJaWYgKGVyciA8IDApIHsKLQkJCURSTV9FUlJPUigiZmFp
bGVkIHRvIHNldCBwb3N0LWN1cnNvcjogJWRcbiIsIGVycik7Ci0JCQlyZXR1cm4gZXJyOwotCQl9
Ci0JfQotCi0JLyogd3JpdGUgbGluayBwYXR0ZXJuICovCi0JaWYgKGxpbmstPnRyYWluLnBhdHRl
cm4gIT0gRFBfVFJBSU5JTkdfUEFUVEVSTl9ESVNBQkxFKQotCQlwYXR0ZXJuIHw9IERQX0xJTktf
U0NSQU1CTElOR19ESVNBQkxFOwotCi0JcGF0dGVybiB8PSBsaW5rLT50cmFpbi5wYXR0ZXJuOwot
Ci0JZXJyID0gZHJtX2RwX2RwY2Rfd3JpdGViKGF1eCwgRFBfVFJBSU5JTkdfUEFUVEVSTl9TRVQs
IHBhdHRlcm4pOwotCWlmIChlcnIgPCAwKSB7Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIHNldCB0
cmFpbmluZyBwYXR0ZXJuOiAlZFxuIiwgZXJyKTsKLQkJcmV0dXJuIGVycjsKLQl9Ci0KLQlyZXR1
cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgZHJtX2RwX2xpbmtfdHJhaW5fd2FpdChzdHJ1Y3QgZHJt
X2RwX2xpbmsgKmxpbmspCi17Ci0JdW5zaWduZWQgbG9uZyBtaW4gPSAwOwotCi0Jc3dpdGNoIChs
aW5rLT50cmFpbi5wYXR0ZXJuKSB7Ci0JY2FzZSBEUF9UUkFJTklOR19QQVRURVJOXzE6Ci0JCW1p
biA9IGxpbmstPmF1eF9yZF9pbnRlcnZhbC5jcjsKLQkJYnJlYWs7Ci0KLQljYXNlIERQX1RSQUlO
SU5HX1BBVFRFUk5fMjoKLQljYXNlIERQX1RSQUlOSU5HX1BBVFRFUk5fMzoKLQkJbWluID0gbGlu
ay0+YXV4X3JkX2ludGVydmFsLmNlOwotCQlicmVhazsKLQotCWRlZmF1bHQ6Ci0JCWJyZWFrOwot
CX0KLQotCWlmIChtaW4gPiAwKQotCQl1c2xlZXBfcmFuZ2UobWluLCAyICogbWluKTsKLX0KLQot
c3RhdGljIHZvaWQgZHJtX2RwX2xpbmtfZ2V0X2FkanVzdG1lbnRzKHN0cnVjdCBkcm1fZHBfbGlu
ayAqbGluaywKLQkJCQkJdTggc3RhdHVzW0RQX0xJTktfU1RBVFVTX1NJWkVdKQotewotCXN0cnVj
dCBkcm1fZHBfbGlua190cmFpbl9zZXQgKmFkanVzdCA9ICZsaW5rLT50cmFpbi5hZGp1c3Q7Ci0J
dW5zaWduZWQgaW50IGk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbGluay0+bGFuZXM7IGkrKykgewot
CQlhZGp1c3QtPnZvbHRhZ2Vfc3dpbmdbaV0gPQotCQkJZHJtX2RwX2dldF9hZGp1c3RfcmVxdWVz
dF92b2x0YWdlKHN0YXR1cywgaSkgPj4KLQkJCQlEUF9UUkFJTl9WT0xUQUdFX1NXSU5HX1NISUZU
OwotCi0JCWFkanVzdC0+cHJlX2VtcGhhc2lzW2ldID0KLQkJCWRybV9kcF9nZXRfYWRqdXN0X3Jl
cXVlc3RfcHJlX2VtcGhhc2lzKHN0YXR1cywgaSkgPj4KLQkJCQlEUF9UUkFJTl9QUkVfRU1QSEFT
SVNfU0hJRlQ7Ci0KLQkJYWRqdXN0LT5wb3N0X2N1cnNvcltpXSA9Ci0JCQlkcm1fZHBfZ2V0X2Fk
anVzdF9yZXF1ZXN0X3Bvc3RfY3Vyc29yKHN0YXR1cywgaSk7Ci0JfQotfQotCi1zdGF0aWMgdm9p
ZCBkcm1fZHBfbGlua190cmFpbl9hZGp1c3Qoc3RydWN0IGRybV9kcF9saW5rX3RyYWluICp0cmFp
bikKLXsKLQlzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJhaW5fc2V0ICpyZXF1ZXN0ID0gJnRyYWluLT5y
ZXF1ZXN0OwotCXN0cnVjdCBkcm1fZHBfbGlua190cmFpbl9zZXQgKmFkanVzdCA9ICZ0cmFpbi0+
YWRqdXN0OwotCXVuc2lnbmVkIGludCBpOwotCi0JZm9yIChpID0gMDsgaSA8IDQ7IGkrKykKLQkJ
aWYgKHJlcXVlc3QtPnZvbHRhZ2Vfc3dpbmdbaV0gIT0gYWRqdXN0LT52b2x0YWdlX3N3aW5nW2ld
KQotCQkJcmVxdWVzdC0+dm9sdGFnZV9zd2luZ1tpXSA9IGFkanVzdC0+dm9sdGFnZV9zd2luZ1tp
XTsKLQotCWZvciAoaSA9IDA7IGkgPCA0OyBpKyspCi0JCWlmIChyZXF1ZXN0LT5wcmVfZW1waGFz
aXNbaV0gIT0gYWRqdXN0LT5wcmVfZW1waGFzaXNbaV0pCi0JCQlyZXF1ZXN0LT5wcmVfZW1waGFz
aXNbaV0gPSBhZGp1c3QtPnByZV9lbXBoYXNpc1tpXTsKLQotCWZvciAoaSA9IDA7IGkgPCA0OyBp
KyspCi0JCWlmIChyZXF1ZXN0LT5wb3N0X2N1cnNvcltpXSAhPSBhZGp1c3QtPnBvc3RfY3Vyc29y
W2ldKQotCQkJcmVxdWVzdC0+cG9zdF9jdXJzb3JbaV0gPSBhZGp1c3QtPnBvc3RfY3Vyc29yW2ld
OwotfQotCi1zdGF0aWMgaW50IGRybV9kcF9saW5rX3JlY292ZXJfY2xvY2soc3RydWN0IGRybV9k
cF9saW5rICpsaW5rKQotewotCXU4IHN0YXR1c1tEUF9MSU5LX1NUQVRVU19TSVpFXTsKLQlpbnQg
ZXJyOwotCi0JZXJyID0gZHJtX2RwX2xpbmtfYXBwbHlfdHJhaW5pbmcobGluayk7Ci0JaWYgKGVy
ciA8IDApCi0JCXJldHVybiBlcnI7Ci0KLQlkcm1fZHBfbGlua190cmFpbl93YWl0KGxpbmspOwot
Ci0JZXJyID0gZHJtX2RwX2RwY2RfcmVhZF9saW5rX3N0YXR1cyhsaW5rLT5hdXgsIHN0YXR1cyk7
Ci0JaWYgKGVyciA8IDApIHsKLQkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gcmVhZCBsaW5rIHN0YXR1
czogJWRcbiIsIGVycik7Ci0JCXJldHVybiBlcnI7Ci0JfQotCi0JaWYgKCFkcm1fZHBfY2xvY2tf
cmVjb3Zlcnlfb2soc3RhdHVzLCBsaW5rLT5sYW5lcykpCi0JCWRybV9kcF9saW5rX2dldF9hZGp1
c3RtZW50cyhsaW5rLCBzdGF0dXMpOwotCWVsc2UKLQkJbGluay0+dHJhaW4uY2xvY2tfcmVjb3Zl
cmVkID0gdHJ1ZTsKLQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGRybV9kcF9saW5rX2Ns
b2NrX3JlY292ZXJ5KHN0cnVjdCBkcm1fZHBfbGluayAqbGluaykKLXsKLQl1bnNpZ25lZCBpbnQg
cmVwZWF0OwotCWludCBlcnI7Ci0KLQkvKiBzdGFydCBjbG9jayByZWNvdmVyeSB1c2luZyB0cmFp
bmluZyBwYXR0ZXJuIDEgKi8KLQlsaW5rLT50cmFpbi5wYXR0ZXJuID0gRFBfVFJBSU5JTkdfUEFU
VEVSTl8xOwotCi0JZm9yIChyZXBlYXQgPSAxOyByZXBlYXQgPCA1OyByZXBlYXQrKykgewotCQll
cnIgPSBkcm1fZHBfbGlua19yZWNvdmVyX2Nsb2NrKGxpbmspOwotCQlpZiAoZXJyIDwgMCkgewot
CQkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gcmVjb3ZlciBjbG9jazogJWRcbiIsIGVycik7Ci0JCQly
ZXR1cm4gZXJyOwotCQl9Ci0KLQkJaWYgKGxpbmstPnRyYWluLmNsb2NrX3JlY292ZXJlZCkKLQkJ
CWJyZWFrOwotCi0JCWRybV9kcF9saW5rX3RyYWluX2FkanVzdCgmbGluay0+dHJhaW4pOwotCX0K
LQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGRybV9kcF9saW5rX2VxdWFsaXplX2NoYW5u
ZWwoc3RydWN0IGRybV9kcF9saW5rICpsaW5rKQotewotCXN0cnVjdCBkcm1fZHBfYXV4ICphdXgg
PSBsaW5rLT5hdXg7Ci0JdTggc3RhdHVzW0RQX0xJTktfU1RBVFVTX1NJWkVdOwotCWludCBlcnI7
Ci0KLQllcnIgPSBkcm1fZHBfbGlua19hcHBseV90cmFpbmluZyhsaW5rKTsKLQlpZiAoZXJyIDwg
MCkKLQkJcmV0dXJuIGVycjsKLQotCWRybV9kcF9saW5rX3RyYWluX3dhaXQobGluayk7Ci0KLQll
cnIgPSBkcm1fZHBfZHBjZF9yZWFkX2xpbmtfc3RhdHVzKGF1eCwgc3RhdHVzKTsKLQlpZiAoZXJy
IDwgMCkgewotCQlEUk1fRVJST1IoImZhaWxlZCB0byByZWFkIGxpbmsgc3RhdHVzOiAlZFxuIiwg
ZXJyKTsKLQkJcmV0dXJuIGVycjsKLQl9Ci0KLQlpZiAoIWRybV9kcF9jbG9ja19yZWNvdmVyeV9v
ayhzdGF0dXMsIGxpbmstPmxhbmVzKSkgewotCQlEUk1fRVJST1IoImNsb2NrIHJlY292ZXJ5IGxv
c3Qgd2hpbGUgZXF1YWxpemluZyBjaGFubmVsXG4iKTsKLQkJbGluay0+dHJhaW4uY2xvY2tfcmVj
b3ZlcmVkID0gZmFsc2U7Ci0JCXJldHVybiAwOwotCX0KLQotCWlmICghZHJtX2RwX2NoYW5uZWxf
ZXFfb2soc3RhdHVzLCBsaW5rLT5sYW5lcykpCi0JCWRybV9kcF9saW5rX2dldF9hZGp1c3RtZW50
cyhsaW5rLCBzdGF0dXMpOwotCWVsc2UKLQkJbGluay0+dHJhaW4uY2hhbm5lbF9lcXVhbGl6ZWQg
PSB0cnVlOwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZHJtX2RwX2xpbmtfY2hhbm5l
bF9lcXVhbGl6YXRpb24oc3RydWN0IGRybV9kcF9saW5rICpsaW5rKQotewotCXVuc2lnbmVkIGlu
dCByZXBlYXQ7Ci0JaW50IGVycjsKLQotCS8qIHN0YXJ0IGNoYW5uZWwgZXF1YWxpemF0aW9uIHVz
aW5nIHBhdHRlcm4gMiBvciAzICovCi0JaWYgKGxpbmstPmNhcHMudHBzM19zdXBwb3J0ZWQpCi0J
CWxpbmstPnRyYWluLnBhdHRlcm4gPSBEUF9UUkFJTklOR19QQVRURVJOXzM7Ci0JZWxzZQotCQls
aW5rLT50cmFpbi5wYXR0ZXJuID0gRFBfVFJBSU5JTkdfUEFUVEVSTl8yOwotCi0JZm9yIChyZXBl
YXQgPSAxOyByZXBlYXQgPCA1OyByZXBlYXQrKykgewotCQllcnIgPSBkcm1fZHBfbGlua19lcXVh
bGl6ZV9jaGFubmVsKGxpbmspOwotCQlpZiAoZXJyIDwgMCkgewotCQkJRFJNX0VSUk9SKCJmYWls
ZWQgdG8gZXF1YWxpemUgY2hhbm5lbDogJWRcbiIsIGVycik7Ci0JCQlyZXR1cm4gZXJyOwotCQl9
Ci0KLQkJaWYgKGxpbmstPnRyYWluLmNoYW5uZWxfZXF1YWxpemVkKQotCQkJYnJlYWs7Ci0KLQkJ
ZHJtX2RwX2xpbmtfdHJhaW5fYWRqdXN0KCZsaW5rLT50cmFpbik7Ci0JfQotCi0JcmV0dXJuIDA7
Ci19Ci0KLXN0YXRpYyBpbnQgZHJtX2RwX2xpbmtfZG93bmdyYWRlKHN0cnVjdCBkcm1fZHBfbGlu
ayAqbGluaykKLXsKLQlzd2l0Y2ggKGxpbmstPnJhdGUpIHsKLQljYXNlIDE2MjAwMDoKLQkJcmV0
dXJuIC1FSU5WQUw7Ci0KLQljYXNlIDI3MDAwMDoKLQkJbGluay0+cmF0ZSA9IDE2MjAwMDsKLQkJ
YnJlYWs7Ci0KLQljYXNlIDU0MDAwMDoKLQkJbGluay0+cmF0ZSA9IDI3MDAwMDsKLQkJcmV0dXJu
IDA7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIGRybV9kcF9saW5rX3RyYWlu
X2Rpc2FibGUoc3RydWN0IGRybV9kcF9saW5rICpsaW5rKQotewotCWludCBlcnI7Ci0KLQlsaW5r
LT50cmFpbi5wYXR0ZXJuID0gRFBfVFJBSU5JTkdfUEFUVEVSTl9ESVNBQkxFOwotCi0JZXJyID0g
ZHJtX2RwX2xpbmtfYXBwbHlfdHJhaW5pbmcobGluayk7Ci0JaWYgKGVyciA8IDApCi0JCURSTV9F
UlJPUigiZmFpbGVkIHRvIGRpc2FibGUgbGluayB0cmFpbmluZzogJWRcbiIsIGVycik7Ci19Ci0K
LXN0YXRpYyBpbnQgZHJtX2RwX2xpbmtfdHJhaW5fZnVsbChzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxp
bmspCi17Ci0JaW50IGVycjsKLQotcmV0cnk6Ci0JRFJNX0RFQlVHX0tNUygiZnVsbC10cmFpbmlu
ZyBsaW5rOiAldSBsYW5lJXMgYXQgJXUgTUh6XG4iLAotCQkgICAgICBsaW5rLT5sYW5lcywgKGxp
bmstPmxhbmVzID4gMSkgPyAicyIgOiAiIiwKLQkJICAgICAgbGluay0+cmF0ZSAvIDEwMCk7Ci0K
LQllcnIgPSBkcm1fZHBfbGlua19jb25maWd1cmUobGluay0+YXV4LCBsaW5rKTsKLQlpZiAoZXJy
IDwgMCkgewotCQlEUk1fRVJST1IoImZhaWxlZCB0byBjb25maWd1cmUgRFAgbGluazogJWRcbiIs
IGVycik7Ci0JCXJldHVybiBlcnI7Ci0JfQotCi0JZXJyID0gZHJtX2RwX2xpbmtfY2xvY2tfcmVj
b3ZlcnkobGluayk7Ci0JaWYgKGVyciA8IDApIHsKLQkJRFJNX0VSUk9SKCJjbG9jayByZWNvdmVy
eSBmYWlsZWQ6ICVkXG4iLCBlcnIpOwotCQlnb3RvIG91dDsKLQl9Ci0KLQlpZiAoIWxpbmstPnRy
YWluLmNsb2NrX3JlY292ZXJlZCkgewotCQlEUk1fRVJST1IoImNsb2NrIHJlY292ZXJ5IGZhaWxl
ZCwgZG93bmdyYWRpbmcgbGlua1xuIik7Ci0KLQkJZXJyID0gZHJtX2RwX2xpbmtfZG93bmdyYWRl
KGxpbmspOwotCQlpZiAoZXJyIDwgMCkKLQkJCWdvdG8gb3V0OwotCi0JCWdvdG8gcmV0cnk7Ci0J
fQotCi0JRFJNX0RFQlVHX0tNUygiY2xvY2sgcmVjb3Zlcnkgc3VjY2VlZGVkXG4iKTsKLQotCWVy
ciA9IGRybV9kcF9saW5rX2NoYW5uZWxfZXF1YWxpemF0aW9uKGxpbmspOwotCWlmIChlcnIgPCAw
KSB7Ci0JCURSTV9FUlJPUigiY2hhbm5lbCBlcXVhbGl6YXRpb24gZmFpbGVkOiAlZFxuIiwgZXJy
KTsKLQkJZ290byBvdXQ7Ci0JfQotCi0JaWYgKCFsaW5rLT50cmFpbi5jaGFubmVsX2VxdWFsaXpl
ZCkgewotCQlEUk1fRVJST1IoImNoYW5uZWwgZXF1YWxpemF0aW9uIGZhaWxlZCwgZG93bmdyYWRp
bmcgbGlua1xuIik7Ci0KLQkJZXJyID0gZHJtX2RwX2xpbmtfZG93bmdyYWRlKGxpbmspOwotCQlp
ZiAoZXJyIDwgMCkKLQkJCWdvdG8gb3V0OwotCi0JCWdvdG8gcmV0cnk7Ci0JfQotCi0JRFJNX0RF
QlVHX0tNUygiY2hhbm5lbCBlcXVhbGl6YXRpb24gc3VjY2VlZGVkXG4iKTsKLQotb3V0OgotCWRy
bV9kcF9saW5rX3RyYWluX2Rpc2FibGUobGluayk7Ci0JcmV0dXJuIGVycjsKLX0KLQotc3RhdGlj
IGludCBkcm1fZHBfbGlua190cmFpbl9mYXN0KHN0cnVjdCBkcm1fZHBfbGluayAqbGluaykKLXsK
LQl1OCBzdGF0dXNbRFBfTElOS19TVEFUVVNfU0laRV07Ci0JaW50IGVycjsKLQotCURSTV9ERUJV
R19LTVMoImZhc3QtdHJhaW5pbmcgbGluazogJXUgbGFuZSVzIGF0ICV1IE1IelxuIiwKLQkJICAg
ICAgbGluay0+bGFuZXMsIChsaW5rLT5sYW5lcyA+IDEpID8gInMiIDogIiIsCi0JCSAgICAgIGxp
bmstPnJhdGUgLyAxMDApOwotCi0JZXJyID0gZHJtX2RwX2xpbmtfY29uZmlndXJlKGxpbmstPmF1
eCwgbGluayk7Ci0JaWYgKGVyciA8IDApIHsKLQkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gY29uZmln
dXJlIERQIGxpbms6ICVkXG4iLCBlcnIpOwotCQlyZXR1cm4gZXJyOwotCX0KLQotCS8qIHRyYW5z
bWl0IHRyYWluaW5nIHBhdHRlcm4gMSBmb3IgNTAwIG1pY3Jvc2Vjb25kcyAqLwotCWxpbmstPnRy
YWluLnBhdHRlcm4gPSBEUF9UUkFJTklOR19QQVRURVJOXzE7Ci0KLQllcnIgPSBkcm1fZHBfbGlu
a19hcHBseV90cmFpbmluZyhsaW5rKTsKLQlpZiAoZXJyIDwgMCkKLQkJZ290byBvdXQ7Ci0KLQl1
c2xlZXBfcmFuZ2UoNTAwLCAxMDAwKTsKLQotCS8qIHRyYW5zbWl0IHRyYWluaW5nIHBhdHRlcm4g
MiBvciAzIGZvciA1MDAgbWljcm9zZWNvbmRzICovCi0JaWYgKGxpbmstPmNhcHMudHBzM19zdXBw
b3J0ZWQpCi0JCWxpbmstPnRyYWluLnBhdHRlcm4gPSBEUF9UUkFJTklOR19QQVRURVJOXzM7Ci0J
ZWxzZQotCQlsaW5rLT50cmFpbi5wYXR0ZXJuID0gRFBfVFJBSU5JTkdfUEFUVEVSTl8yOwotCi0J
ZXJyID0gZHJtX2RwX2xpbmtfYXBwbHlfdHJhaW5pbmcobGluayk7Ci0JaWYgKGVyciA8IDApCi0J
CWdvdG8gb3V0OwotCi0JdXNsZWVwX3JhbmdlKDUwMCwgMTAwMCk7Ci0KLQllcnIgPSBkcm1fZHBf
ZHBjZF9yZWFkX2xpbmtfc3RhdHVzKGxpbmstPmF1eCwgc3RhdHVzKTsKLQlpZiAoZXJyIDwgMCkg
ewotCQlEUk1fRVJST1IoImZhaWxlZCB0byByZWFkIGxpbmsgc3RhdHVzOiAlZFxuIiwgZXJyKTsK
LQkJZ290byBvdXQ7Ci0JfQotCi0JaWYgKCFkcm1fZHBfY2xvY2tfcmVjb3Zlcnlfb2soc3RhdHVz
LCBsaW5rLT5sYW5lcykpIHsKLQkJRFJNX0VSUk9SKCJjbG9jayByZWNvdmVyeSBmYWlsZWRcbiIp
OwotCQllcnIgPSAtRUlPOwotCX0KLQotCWlmICghZHJtX2RwX2NoYW5uZWxfZXFfb2soc3RhdHVz
LCBsaW5rLT5sYW5lcykpIHsKLQkJRFJNX0VSUk9SKCJjaGFubmVsIGVxdWFsaXphdGlvbiBmYWls
ZWRcbiIpOwotCQllcnIgPSAtRUlPOwotCX0KLQotb3V0OgotCWRybV9kcF9saW5rX3RyYWluX2Rp
c2FibGUobGluayk7Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoqCi0gKiBkcm1fZHBfbGlua190cmFp
bigpIC0gcGVyZm9ybSBEaXNwbGF5UG9ydCBsaW5rIHRyYWluaW5nCi0gKiBAbGluazogYSBEUCBs
aW5rIG9iamVjdAotICoKLSAqIFVzZXMgdGhlIGNvbnRleHQgc3RvcmVkIGluIHRoZSBEUCBsaW5r
IG9iamVjdCB0byBwZXJmb3JtIGxpbmsgdHJhaW5pbmcuIEl0Ci0gKiBpcyBleHBlY3RlZCB0aGF0
IGRyaXZlcnMgd2lsbCBjYWxsIGRybV9kcF9saW5rX3Byb2JlKCkgdG8gb2J0YWluIHRoZSBsaW5r
Ci0gKiBjYXBhYmlsaXRpZXMgYmVmb3JlIHBlcmZvcm1pbmcgbGluayB0cmFpbmluZy4KLSAqCi0g
KiBJZiB0aGUgc2luayBzdXBwb3J0cyBmYXN0IGxpbmsgdHJhaW5pbmcgKG5vIEFVWCBDSCBoYW5k
c2hha2UpIGFuZCB2YWxpZAotICogdHJhaW5pbmcgc2V0dGluZ3MgYXJlIGF2YWlsYWJsZSwgdGhp
cyBmdW5jdGlvbiB3aWxsIHRyeSB0byBwZXJmb3JtIGZhc3QKLSAqIGxpbmsgdHJhaW5pbmcgYW5k
IGZhbGwgYmFjayB0byBmdWxsIGxpbmsgdHJhaW5pbmcgb24gZmFpbHVyZS4KLSAqCi0gKiBSZXR1
cm5zOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCi0g
Ki8KLWludCBkcm1fZHBfbGlua190cmFpbihzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspCi17Ci0J
aW50IGVycjsKLQotCWRybV9kcF9saW5rX3RyYWluX2luaXQoJmxpbmstPnRyYWluKTsKLQotCWlm
IChsaW5rLT5jYXBzLmZhc3RfdHJhaW5pbmcpIHsKLQkJaWYgKGRybV9kcF9saW5rX3RyYWluX3Zh
bGlkKCZsaW5rLT50cmFpbikpIHsKLQkJCWVyciA9IGRybV9kcF9saW5rX3RyYWluX2Zhc3QobGlu
ayk7Ci0JCQlpZiAoZXJyIDwgMCkKLQkJCQlEUk1fRVJST1IoImZhc3QgbGluayB0cmFpbmluZyBm
YWlsZWQ6ICVkXG4iLAotCQkJCQkgIGVycik7Ci0JCQllbHNlCi0JCQkJcmV0dXJuIDA7Ci0JCX0g
ZWxzZSB7Ci0JCQlEUk1fREVCVUdfS01TKCJ0cmFpbmluZyBwYXJhbWV0ZXJzIG5vdCBhdmFpbGFi
bGVcbiIpOwotCQl9Ci0JfSBlbHNlIHsKLQkJRFJNX0RFQlVHX0tNUygiZmFzdCBsaW5rIHRyYWlu
aW5nIG5vdCBzdXBwb3J0ZWRcbiIpOwotCX0KLQotCWVyciA9IGRybV9kcF9saW5rX3RyYWluX2Z1
bGwobGluayk7Ci0JaWYgKGVyciA8IDApCi0JCURSTV9FUlJPUigiZnVsbCBsaW5rIHRyYWluaW5n
IGZhaWxlZDogJWRcbiIsIGVycik7Ci0KLQlyZXR1cm4gZXJyOwotfQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL3RlZ3JhL2RwLmggYi9kcml2ZXJzL2dwdS9kcm0vdGVncmEvZHAuaApkZWxl
dGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggY2IxMmVkMC4uMDAwMDAwMDAKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL3RlZ3JhL2RwLmgKKysrIC9kZXYvbnVsbApAQCAtMSwxNzcgKzAsMCBAQAotLyog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVCAqLwotLyoKLSAqIENvcHlyaWdodCAoQykgMjAx
My0yMDE5IE5WSURJQSBDb3Jwb3JhdGlvbi4KLSAqIENvcHlyaWdodCAoQykgMjAxNSBSb2IgQ2xh
cmsKLSAqLwotCi0jaWZuZGVmIERSTV9URUdSQV9EUF9ICi0jZGVmaW5lIERSTV9URUdSQV9EUF9I
IDEKLQotI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+Ci0KLXN0cnVjdCBkcm1fZGlzcGxheV9pbmZv
Owotc3RydWN0IGRybV9kaXNwbGF5X21vZGU7Ci1zdHJ1Y3QgZHJtX2RwX2F1eDsKLXN0cnVjdCBk
cm1fZHBfbGluazsKLQotLyoqCi0gKiBzdHJ1Y3QgZHJtX2RwX2xpbmtfY2FwcyAtIERQIGxpbmsg
Y2FwYWJpbGl0aWVzCi0gKi8KLXN0cnVjdCBkcm1fZHBfbGlua19jYXBzIHsKLQkvKioKLQkgKiBA
ZW5oYW5jZWRfZnJhbWluZzoKLQkgKgotCSAqIGVuaGFuY2VkIGZyYW1pbmcgY2FwYWJpbGl0eSAo
bWFuZGF0b3J5IGFzIG9mIERQIDEuMikKLQkgKi8KLQlib29sIGVuaGFuY2VkX2ZyYW1pbmc7Ci0K
LQkvKioKLQkgKiB0cHMzX3N1cHBvcnRlZDoKLQkgKgotCSAqIHRyYWluaW5nIHBhdHRlcm4gc2Vx
dWVuY2UgMyBzdXBwb3J0ZWQgZm9yIGVxdWFsaXphdGlvbgotCSAqLwotCWJvb2wgdHBzM19zdXBw
b3J0ZWQ7Ci0KLQkvKioKLQkgKiBAZmFzdF90cmFpbmluZzoKLQkgKgotCSAqIEFVWCBDSCBoYW5k
c2hha2Ugbm90IHJlcXVpcmVkIGZvciBsaW5rIHRyYWluaW5nCi0JICovCi0JYm9vbCBmYXN0X3Ry
YWluaW5nOwotCi0JLyoqCi0JICogQGNoYW5uZWxfY29kaW5nOgotCSAqCi0JICogQU5TSSA4Qi8x
MEIgY2hhbm5lbCBjb2RpbmcgY2FwYWJpbGl0eQotCSAqLwotCWJvb2wgY2hhbm5lbF9jb2Rpbmc7
Ci0KLQkvKioKLQkgKiBAYWx0ZXJuYXRlX3NjcmFtYmxlcl9yZXNldDoKLQkgKgotCSAqIGVEUCBh
bHRlcm5hdGUgc2NyYW1ibGVyIHJlc2V0IGNhcGFiaWxpdHkKLQkgKi8KLQlib29sIGFsdGVybmF0
ZV9zY3JhbWJsZXJfcmVzZXQ7Ci19OwotCi12b2lkIGRybV9kcF9saW5rX2NhcHNfY29weShzdHJ1
Y3QgZHJtX2RwX2xpbmtfY2FwcyAqZGVzdCwKLQkJCSAgIGNvbnN0IHN0cnVjdCBkcm1fZHBfbGlu
a19jYXBzICpzcmMpOwotCi0vKioKLSAqIHN0cnVjdCBkcm1fZHBfbGlua19vcHMgLSBEUCBsaW5r
IG9wZXJhdGlvbnMKLSAqLwotc3RydWN0IGRybV9kcF9saW5rX29wcyB7Ci0JLyoqCi0JICogQGFw
cGx5X3RyYWluaW5nOgotCSAqLwotCWludCAoKmFwcGx5X3RyYWluaW5nKShzdHJ1Y3QgZHJtX2Rw
X2xpbmsgKmxpbmspOwotCi0JLyoqCi0JICogQGNvbmZpZ3VyZToKLQkgKi8KLQlpbnQgKCpjb25m
aWd1cmUpKHN0cnVjdCBkcm1fZHBfbGluayAqbGluayk7Ci19OwotCi0jZGVmaW5lIERQX1RSQUlO
X1ZPTFRBR0VfU1dJTkdfTEVWRUwoeCkgKCh4KSA8PCAwKQotI2RlZmluZSBEUF9UUkFJTl9QUkVf
RU1QSEFTSVNfTEVWRUwoeCkgKCh4KSA8PCAzKQotI2RlZmluZSBEUF9MQU5FX1BPU1RfQ1VSU09S
KGksIHgpICgoKHgpICYgMHgzKSA8PCAoKChpKSAmIDEpIDw8IDIpKQotCi0vKioKLSAqIHN0cnVj
dCBkcm1fZHBfbGlua190cmFpbl9zZXQgLSBsaW5rIHRyYWluaW5nIHNldHRpbmdzCi0gKiBAdm9s
dGFnZV9zd2luZzogcGVyLWxhbmUgdm9sdGFnZSBzd2luZwotICogQHByZV9lbXBoYXNpczogcGVy
LWxhbmUgcHJlLWVtcGhhc2lzCi0gKiBAcG9zdF9jdXJzb3I6IHBlci1sYW5lIHBvc3QtY3Vyc29y
Ci0gKi8KLXN0cnVjdCBkcm1fZHBfbGlua190cmFpbl9zZXQgewotCXVuc2lnbmVkIGludCB2b2x0
YWdlX3N3aW5nWzRdOwotCXVuc2lnbmVkIGludCBwcmVfZW1waGFzaXNbNF07Ci0JdW5zaWduZWQg
aW50IHBvc3RfY3Vyc29yWzRdOwotfTsKLQotLyoqCi0gKiBzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJh
aW4gLSBsaW5rIHRyYWluaW5nIHN0YXRlIGluZm9ybWF0aW9uCi0gKiBAcmVxdWVzdDogY3VycmVu
dGx5IHJlcXVlc3RlZCBzZXR0aW5ncwotICogQGFkanVzdDogYWRqdXN0bWVudHMgcmVxdWVzdGVk
IGJ5IHNpbmsKLSAqIEBwYXR0ZXJuOiBjdXJyZW50bHkgcmVxdWVzdGVkIHRyYWluaW5nIHBhdHRl
cm4KLSAqIEBjbG9ja19yZWNvdmVyZWQ6IGZsYWcgdG8gdHJhY2sgaWYgY2xvY2sgcmVjb3Zlcnkg
aGFzIGNvbXBsZXRlZAotICogQGNoYW5uZWxfZXF1YWxpemVkOiBmbGFnIHRvIHRyYWNrIGlmIGNo
YW5uZWwgZXF1YWxpemF0aW9uIGhhcyBjb21wbGV0ZWQKLSAqLwotc3RydWN0IGRybV9kcF9saW5r
X3RyYWluIHsKLQlzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJhaW5fc2V0IHJlcXVlc3Q7Ci0Jc3RydWN0
IGRybV9kcF9saW5rX3RyYWluX3NldCBhZGp1c3Q7Ci0KLQl1bnNpZ25lZCBpbnQgcGF0dGVybjsK
LQotCWJvb2wgY2xvY2tfcmVjb3ZlcmVkOwotCWJvb2wgY2hhbm5lbF9lcXVhbGl6ZWQ7Ci19Owot
Ci0vKioKLSAqIHN0cnVjdCBkcm1fZHBfbGluayAtIERQIGxpbmsgY2FwYWJpbGl0aWVzIGFuZCBj
b25maWd1cmF0aW9uCi0gKiBAcmV2aXNpb246IERQIHNwZWNpZmljYXRpb24gcmV2aXNpb24gc3Vw
cG9ydGVkIG9uIHRoZSBsaW5rCi0gKiBAbWF4X3JhdGU6IG1heGltdW0gY2xvY2sgcmF0ZSBzdXBw
b3J0ZWQgb24gdGhlIGxpbmsKLSAqIEBtYXhfbGFuZXM6IG1heGltdW0gbnVtYmVyIG9mIGxhbmVz
IHN1cHBvcnRlZCBvbiB0aGUgbGluawotICogQGNhcHM6IGNhcGFiaWxpdGllcyBzdXBwb3J0ZWQg
b24gdGhlIGxpbmsgKHNlZSAmZHJtX2RwX2xpbmtfY2FwcykKLSAqIEBhdXhfcmRfaW50ZXJ2YWw6
IEFVWCByZWFkIGludGVydmFsIHRvIHVzZSBmb3IgdHJhaW5pbmcgKGluIG1pY3Jvc2Vjb25kcykK
LSAqIEBlZHA6IGVEUCByZXZpc2lvbiAoMHgxMTogZURQIDEuMSwgMHgxMjogZURQIDEuMiwgLi4u
KQotICogQHJhdGU6IGN1cnJlbnRseSBjb25maWd1cmVkIGxpbmsgcmF0ZQotICogQGxhbmVzOiBj
dXJyZW50bHkgY29uZmlndXJlZCBudW1iZXIgb2YgbGFuZXMKLSAqIEByYXRlczogYWRkaXRpb25h
bCBzdXBwb3J0ZWQgbGluayByYXRlcyBpbiBrSHogKGVEUCAxLjQpCi0gKiBAbnVtX3JhdGVzOiBu
dW1iZXIgb2YgYWRkaXRpb25hbCBzdXBwb3J0ZWQgbGluayByYXRlcyAoZURQIDEuNCkKLSAqLwot
c3RydWN0IGRybV9kcF9saW5rIHsKLQl1bnNpZ25lZCBjaGFyIHJldmlzaW9uOwotCXVuc2lnbmVk
IGludCBtYXhfcmF0ZTsKLQl1bnNpZ25lZCBpbnQgbWF4X2xhbmVzOwotCi0Jc3RydWN0IGRybV9k
cF9saW5rX2NhcHMgY2FwczsKLQotCS8qKgotCSAqIEBjcjogY2xvY2sgcmVjb3ZlcnkgcmVhZCBp
bnRlcnZhbAotCSAqIEBjZTogY2hhbm5lbCBlcXVhbGl6YXRpb24gcmVhZCBpbnRlcnZhbAotCSAq
LwotCXN0cnVjdCB7Ci0JCXVuc2lnbmVkIGludCBjcjsKLQkJdW5zaWduZWQgaW50IGNlOwotCX0g
YXV4X3JkX2ludGVydmFsOwotCi0JdW5zaWduZWQgY2hhciBlZHA7Ci0KLQl1bnNpZ25lZCBpbnQg
cmF0ZTsKLQl1bnNpZ25lZCBpbnQgbGFuZXM7Ci0KLQl1bnNpZ25lZCBsb25nIHJhdGVzW0RQX01B
WF9TVVBQT1JURURfUkFURVNdOwotCXVuc2lnbmVkIGludCBudW1fcmF0ZXM7Ci0KLQkvKioKLQkg
KiBAb3BzOiBEUCBsaW5rIG9wZXJhdGlvbnMKLQkgKi8KLQljb25zdCBzdHJ1Y3QgZHJtX2RwX2xp
bmtfb3BzICpvcHM7Ci0KLQkvKioKLQkgKiBAYXV4OiBEUCBBVVggY2hhbm5lbAotCSAqLwotCXN0
cnVjdCBkcm1fZHBfYXV4ICphdXg7Ci0KLQkvKioKLQkgKiBAdHJhaW46IERQIGxpbmsgdHJhaW5p
bmcgc3RhdGUKLQkgKi8KLQlzdHJ1Y3QgZHJtX2RwX2xpbmtfdHJhaW4gdHJhaW47Ci19OwotCi1p
bnQgZHJtX2RwX2xpbmtfYWRkX3JhdGUoc3RydWN0IGRybV9kcF9saW5rICpsaW5rLCB1bnNpZ25l
ZCBsb25nIHJhdGUpOwotaW50IGRybV9kcF9saW5rX3JlbW92ZV9yYXRlKHN0cnVjdCBkcm1fZHBf
bGluayAqbGluaywgdW5zaWduZWQgbG9uZyByYXRlKTsKLXZvaWQgZHJtX2RwX2xpbmtfdXBkYXRl
X3JhdGVzKHN0cnVjdCBkcm1fZHBfbGluayAqbGluayk7Ci0KLWludCBkcm1fZHBfbGlua19wcm9i
ZShzdHJ1Y3QgZHJtX2RwX2F1eCAqYXV4LCBzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspOwotaW50
IGRybV9kcF9saW5rX3Bvd2VyX3VwKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVjdCBkcm1f
ZHBfbGluayAqbGluayk7Ci1pbnQgZHJtX2RwX2xpbmtfcG93ZXJfZG93bihzdHJ1Y3QgZHJtX2Rw
X2F1eCAqYXV4LCBzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmspOwotaW50IGRybV9kcF9saW5rX2Nv
bmZpZ3VyZShzdHJ1Y3QgZHJtX2RwX2F1eCAqYXV4LCBzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmsp
OwotaW50IGRybV9kcF9saW5rX2Nob29zZShzdHJ1Y3QgZHJtX2RwX2xpbmsgKmxpbmssCi0JCSAg
ICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKLQkJICAgICAgIGNvbnN0
IHN0cnVjdCBkcm1fZGlzcGxheV9pbmZvICppbmZvKTsKLQotdm9pZCBkcm1fZHBfbGlua190cmFp
bl9pbml0KHN0cnVjdCBkcm1fZHBfbGlua190cmFpbiAqdHJhaW4pOwotaW50IGRybV9kcF9saW5r
X3RyYWluKHN0cnVjdCBkcm1fZHBfbGluayAqbGluayk7Ci0KLSNlbmRpZgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL3RlZ3JhL2RwYXV4LmMgYi9kcml2ZXJzL2dwdS9kcm0vdGVncmEvZHBh
dXguYwppbmRleCA2MjJjZGYxLi4wNjYxNzdhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
dGVncmEvZHBhdXguYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdGVncmEvZHBhdXguYwpAQCAtMjMs
NyArMjMsNiBAQAogI2luY2x1ZGUgPGRybS9kcm1fZHBfaGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJt
L2RybV9wYW5lbC5oPgogCi0jaW5jbHVkZSAiZHAuaCIKICNpbmNsdWRlICJkcGF1eC5oIgogI2lu
Y2x1ZGUgImRybS5oIgogI2luY2x1ZGUgInRyYWNlLmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vdGVncmEvc29yLmMgYi9kcml2ZXJzL2dwdS9kcm0vdGVncmEvc29yLmMKaW5kZXggNjE1
Y2IzMS4uMjljM2FlOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3RlZ3JhL3Nvci5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS90ZWdyYS9zb3IuYwpAQCAtMjUsNyArMjUsNiBAQAogI2luY2x1
ZGUgPGRybS9kcm1fc2NkY19oZWxwZXIuaD4KIAogI2luY2x1ZGUgImRjLmgiCi0jaW5jbHVkZSAi
ZHAuaCIKICNpbmNsdWRlICJkcm0uaCIKICNpbmNsdWRlICJoZGEuaCIKICNpbmNsdWRlICJzb3Iu
aCIKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9kcF9oZWxwZXIuaCBiL2luY2x1ZGUvZHJt
L2RybV9kcF9oZWxwZXIuaAppbmRleCA1MWVjYjUxLi4wNGY2YzBiIDEwMDY0NAotLS0gYS9pbmNs
dWRlL2RybS9kcm1fZHBfaGVscGVyLmgKKysrIGIvaW5jbHVkZS9kcm0vZHJtX2RwX2hlbHBlci5o
CkBAIC0xNDU1LDYgKzE0NTUsMjIgQEAgc3RhdGljIGlubGluZSBzc2l6ZV90IGRybV9kcF9kcGNk
X3dyaXRlYihzdHJ1Y3QgZHJtX2RwX2F1eCAqYXV4LAogaW50IGRybV9kcF9kcGNkX3JlYWRfbGlu
a19zdGF0dXMoc3RydWN0IGRybV9kcF9hdXggKmF1eCwKIAkJCQkgdTggc3RhdHVzW0RQX0xJTktf
U1RBVFVTX1NJWkVdKTsKIAorLyoKKyAqIERpc3BsYXlQb3J0IGxpbmsKKyAqLworI2RlZmluZSBE
UF9MSU5LX0NBUF9FTkhBTkNFRF9GUkFNSU5HICgxIDw8IDApCisKK3N0cnVjdCBkcm1fZHBfbGlu
ayB7CisJdW5zaWduZWQgY2hhciByZXZpc2lvbjsKKwl1bnNpZ25lZCBpbnQgcmF0ZTsKKwl1bnNp
Z25lZCBpbnQgbnVtX2xhbmVzOworCXVuc2lnbmVkIGxvbmcgY2FwYWJpbGl0aWVzOworfTsKKwor
aW50IGRybV9kcF9saW5rX3Byb2JlKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVjdCBkcm1f
ZHBfbGluayAqbGluayk7CitpbnQgZHJtX2RwX2xpbmtfcG93ZXJfdXAoc3RydWN0IGRybV9kcF9h
dXggKmF1eCwgc3RydWN0IGRybV9kcF9saW5rICpsaW5rKTsKK2ludCBkcm1fZHBfbGlua19wb3dl
cl9kb3duKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVjdCBkcm1fZHBfbGluayAqbGluayk7
CitpbnQgZHJtX2RwX2xpbmtfY29uZmlndXJlKHN0cnVjdCBkcm1fZHBfYXV4ICphdXgsIHN0cnVj
dCBkcm1fZHBfbGluayAqbGluayk7CiBpbnQgZHJtX2RwX2Rvd25zdHJlYW1fbWF4X2Nsb2NrKGNv
bnN0IHU4IGRwY2RbRFBfUkVDRUlWRVJfQ0FQX1NJWkVdLAogCQkJCWNvbnN0IHU4IHBvcnRfY2Fw
WzRdKTsKIGludCBkcm1fZHBfZG93bnN0cmVhbV9tYXhfYnBjKGNvbnN0IHU4IGRwY2RbRFBfUkVD
RUlWRVJfQ0FQX1NJWkVdLAotLSAKMS45LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2RyaS1kZXZlbA==
