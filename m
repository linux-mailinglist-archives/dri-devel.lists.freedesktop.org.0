Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A22EF6685E
	for <lists+dri-devel@lfdr.de>; Fri, 12 Jul 2019 10:17:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3C2156E2EF;
	Fri, 12 Jul 2019 08:17:55 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qt1-x84a.google.com (mail-qt1-x84a.google.com
 [IPv6:2607:f8b0:4864:20::84a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2AB0E6E2EF
 for <dri-devel@lists.freedesktop.org>; Fri, 12 Jul 2019 08:17:54 +0000 (UTC)
Received: by mail-qt1-x84a.google.com with SMTP id r58so6338608qtb.5
 for <dri-devel@lists.freedesktop.org>; Fri, 12 Jul 2019 01:17:54 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=68UH8GPC03ZUmc9czSTxKw69fYzf9vHRgfEO5fBFGxw=;
 b=DCswuG+tstr7m6zFgPE/0vquV5iAkBoOuNN1LzCNP2JhzQtmcG2dugFQxa2bX38Je/
 bxraHqtAAoiQh07rbQm+Ubl+iH+BzG6f4zGmwZCygRz0xQJi+F5cx3t4wDFaBfKwYID3
 rmTG6FZjZP2777Bb++mYi4xHrScPyGJcVyADyrDEeXObQV1BCm3ZsUaiMXlHytHCO7MG
 9Q57dt/+15uW2S389N6AtBcOiwRnRlrTGJUIQ2GkE6IGb2XnJJQ8wCTPAurWknM1hXy5
 Rx5l3xpQKkYht05hBgGYRSRhyNVHbtsAHGwdYcQIV0Dp/wT3NdVYDRT2s0Go7hpekZEo
 Xq9g==
X-Gm-Message-State: APjAAAXPu4T0D3Wb1FNtelf3AYIo0S/IY9lXD/H/imVBmoqKKHv+HDS+
 64tTExaj3dtPuyY7H59bPqVvUj0DOfIoLIiuME1m/A==
X-Google-Smtp-Source: APXvYqw2GsjRLoRKGwQo9Cju2JXN+d8eA4noL8Q3AlMMnWqUBjlpZB7NIxXCVgalPyDHJhh5ntsy3GFBW96qcUPPX4VF1g==
X-Received: by 2002:ac8:764f:: with SMTP id i15mr5217164qtr.194.1562919472957; 
 Fri, 12 Jul 2019 01:17:52 -0700 (PDT)
Date: Fri, 12 Jul 2019 01:17:27 -0700
In-Reply-To: <20190712081744.87097-1-brendanhiggins@google.com>
Message-Id: <20190712081744.87097-2-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190712081744.87097-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v9 01/18] kunit: test: add KUnit test runner core
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=68UH8GPC03ZUmc9czSTxKw69fYzf9vHRgfEO5fBFGxw=;
 b=lr5zDKnN4gMLf9gUMo8Oq1GDbkCPMxvFO2+ffgSkbPWPOgbwI0qNIOSYELmjQqYJGm
 p9HdHOWp1PUFOQYgRx2p6/m9009o4z/A4oF012IV77bK4mIosS6LmjBQH4yUSjbnKGIa
 Eak9wX/VqDPDcPP89MOolC8gqUQNJQDd5vwzjbYyWzlVZ8XIcB/Nz9puFSZTU/Z8+gDE
 2zkiwql8msFk5DVcKqYLiq77lTK2HS/rgar40uYVFeMGA1JpyLhB7WLJVY1Zy8b6KpmM
 ii8gmnVsWPyubOSb+LhfRMyQhngwdKrC5LN/1ak6wovVMSJ5r/B7Fv6WXjqYmi/qo1wQ
 eNhw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIGNvcmUgZmFjaWxpdGllcyBmb3IgZGVmaW5pbmcgdW5pdCB0ZXN0czsgdGhpcyBwcm92aWRl
cyBhIGNvbW1vbiB3YXkKdG8gZGVmaW5lIHRlc3QgY2FzZXMsIGZ1bmN0aW9ucyB0aGF0IGV4ZWN1
dGUgY29kZSB3aGljaCBpcyB1bmRlciB0ZXN0CmFuZCBkZXRlcm1pbmUgd2hldGhlciB0aGUgY29k
ZSB1bmRlciB0ZXN0IGJlaGF2ZXMgYXMgZXhwZWN0ZWQ7IHRoaXMgYWxzbwpwcm92aWRlcyBhIHdh
eSB0byBncm91cCB0b2dldGhlciByZWxhdGVkIHRlc3QgY2FzZXMgaW4gdGVzdCBzdWl0ZXMgKGhl
cmUKd2UgY2FsbCB0aGVtIHRlc3RfbW9kdWxlcykuCgpKdXN0IGRlZmluZSB0ZXN0IGNhc2VzIGFu
ZCBob3cgdG8gZXhlY3V0ZSB0aGVtIGZvciBub3c7IHNldHRpbmcKZXhwZWN0YXRpb25zIG9uIGNv
ZGUgd2lsbCBiZSBkZWZpbmVkIGxhdGVyLgoKU2lnbmVkLW9mZi1ieTogQnJlbmRhbiBIaWdnaW5z
IDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogR3JlZyBLcm9haC1IYXJ0
bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KUmV2aWV3ZWQtYnk6IExvZ2FuIEd1bnRo
b3JwZSA8bG9nYW5nQGRlbHRhdGVlLmNvbT4KUmV2aWV3ZWQtYnk6IEx1aXMgQ2hhbWJlcmxhaW4g
PG1jZ3JvZkBrZXJuZWwub3JnPgotLS0KIGluY2x1ZGUva3VuaXQvdGVzdC5oIHwgMTc5ICsrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGt1bml0L0tjb25maWcgICAgICAg
IHwgIDE3ICsrKysKIGt1bml0L01ha2VmaWxlICAgICAgIHwgICAxICsKIGt1bml0L3Rlc3QuYyAg
ICAgICAgIHwgMTg5ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysK
IDQgZmlsZXMgY2hhbmdlZCwgMzg2IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBp
bmNsdWRlL2t1bml0L3Rlc3QuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L0tjb25maWcKIGNy
ZWF0ZSBtb2RlIDEwMDY0NCBrdW5pdC9NYWtlZmlsZQogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0
L3Rlc3QuYwoKZGlmZiAtLWdpdCBhL2luY2x1ZGUva3VuaXQvdGVzdC5oIGIvaW5jbHVkZS9rdW5p
dC90ZXN0LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uZTBiMzRh
Y2I5ZWU0ZQotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC0wLDAg
KzEsMTc5IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLworLyoKKyAq
IEJhc2UgdW5pdCB0ZXN0IChLVW5pdCkgQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwg
R29vZ2xlIExMQy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bn
b29nbGUuY29tPgorICovCisKKyNpZm5kZWYgX0tVTklUX1RFU1RfSAorI2RlZmluZSBfS1VOSVRf
VEVTVF9ICisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorCitzdHJ1Y3Qga3VuaXQ7CisKKy8q
KgorICogc3RydWN0IGt1bml0X2Nhc2UgLSByZXByZXNlbnRzIGFuIGluZGl2aWR1YWwgdGVzdCBj
YXNlLgorICogQHJ1bl9jYXNlOiB0aGUgZnVuY3Rpb24gcmVwcmVzZW50aW5nIHRoZSBhY3R1YWwg
dGVzdCBjYXNlLgorICogQG5hbWU6IHRoZSBuYW1lIG9mIHRoZSB0ZXN0IGNhc2UuCisgKgorICog
QSB0ZXN0IGNhc2UgaXMgYSBmdW5jdGlvbiB3aXRoIHRoZSBzaWduYXR1cmUsIGBgdm9pZCAoKiko
c3RydWN0IGt1bml0ICopYGAKKyAqIHRoYXQgbWFrZXMgZXhwZWN0YXRpb25zIChzZWUgS1VOSVRf
RVhQRUNUX1RSVUUoKSkgYWJvdXQgY29kZSB1bmRlciB0ZXN0LiBFYWNoCisgKiB0ZXN0IGNhc2Ug
aXMgYXNzb2NpYXRlZCB3aXRoIGEgJnN0cnVjdCBrdW5pdF9zdWl0ZSBhbmQgd2lsbCBiZSBydW4g
YWZ0ZXIgdGhlCisgKiBzdWl0ZSdzIGluaXQgZnVuY3Rpb24gYW5kIGZvbGxvd2VkIGJ5IHRoZSBz
dWl0ZSdzIGV4aXQgZnVuY3Rpb24uCisgKgorICogQSB0ZXN0IGNhc2Ugc2hvdWxkIGJlIHN0YXRp
YyBhbmQgc2hvdWxkIG9ubHkgYmUgY3JlYXRlZCB3aXRoIHRoZSBLVU5JVF9DQVNFKCkKKyAqIG1h
Y3JvOyBhZGRpdGlvbmFsbHksIGV2ZXJ5IGFycmF5IG9mIHRlc3QgY2FzZXMgc2hvdWxkIGJlIHRl
cm1pbmF0ZWQgd2l0aCBhbgorICogZW1wdHkgdGVzdCBjYXNlLgorICoKKyAqIEV4YW1wbGU6Cisg
KgorICogLi4gY29kZS1ibG9jazo6IGMKKyAqCisgKgl2b2lkIGFkZF90ZXN0X2Jhc2ljKHN0cnVj
dCBrdW5pdCAqdGVzdCkKKyAqCXsKKyAqCQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMSwgYWRkKDEs
IDApKTsKKyAqCQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMiwgYWRkKDEsIDEpKTsKKyAqCQlLVU5J
VF9FWFBFQ1RfRVEodGVzdCwgMCwgYWRkKC0xLCAxKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRl
c3QsIElOVF9NQVgsIGFkZCgwLCBJTlRfTUFYKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRlc3Qs
IC0xLCBhZGQoSU5UX01BWCwgSU5UX01JTikpOworICoJfQorICoKKyAqCXN0YXRpYyBzdHJ1Y3Qg
a3VuaXRfY2FzZSBleGFtcGxlX3Rlc3RfY2FzZXNbXSA9IHsKKyAqCQlLVU5JVF9DQVNFKGFkZF90
ZXN0X2Jhc2ljKSwKKyAqCQl7fQorICoJfTsKKyAqCisgKi8KK3N0cnVjdCBrdW5pdF9jYXNlIHsK
Kwl2b2lkICgqcnVuX2Nhc2UpKHN0cnVjdCBrdW5pdCAqdGVzdCk7CisJY29uc3QgY2hhciAqbmFt
ZTsKKworCS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLworCWJvb2wgc3VjY2VzczsK
K307CisKKy8qKgorICogS1VOSVRfQ0FTRSAtIEEgaGVscGVyIGZvciBjcmVhdGluZyBhICZzdHJ1
Y3Qga3VuaXRfY2FzZQorICogQHRlc3RfbmFtZTogYSByZWZlcmVuY2UgdG8gYSB0ZXN0IGNhc2Ug
ZnVuY3Rpb24uCisgKgorICogVGFrZXMgYSBzeW1ib2wgZm9yIGEgZnVuY3Rpb24gcmVwcmVzZW50
aW5nIGEgdGVzdCBjYXNlIGFuZCBjcmVhdGVzIGEKKyAqICZzdHJ1Y3Qga3VuaXRfY2FzZSBvYmpl
Y3QgZnJvbSBpdC4gU2VlIHRoZSBkb2N1bWVudGF0aW9uIGZvcgorICogJnN0cnVjdCBrdW5pdF9j
YXNlIGZvciBhbiBleGFtcGxlIG9uIGhvdyB0byB1c2UgaXQuCisgKi8KKyNkZWZpbmUgS1VOSVRf
Q0FTRSh0ZXN0X25hbWUpIHsgLnJ1bl9jYXNlID0gdGVzdF9uYW1lLCAubmFtZSA9ICN0ZXN0X25h
bWUgfQorCisvKioKKyAqIHN0cnVjdCBrdW5pdF9zdWl0ZSAtIGRlc2NyaWJlcyBhIHJlbGF0ZWQg
Y29sbGVjdGlvbiBvZiAmc3RydWN0IGt1bml0X2Nhc2Ugcy4KKyAqIEBuYW1lOiB0aGUgbmFtZSBv
ZiB0aGUgdGVzdC4gUHVyZWx5IGluZm9ybWF0aW9uYWwuCisgKiBAaW5pdDogY2FsbGVkIGJlZm9y
ZSBldmVyeSB0ZXN0IGNhc2UuCisgKiBAZXhpdDogY2FsbGVkIGFmdGVyIGV2ZXJ5IHRlc3QgY2Fz
ZS4KKyAqIEB0ZXN0X2Nhc2VzOiBhIG51bGwgdGVybWluYXRlZCBhcnJheSBvZiB0ZXN0IGNhc2Vz
LgorICoKKyAqIEEga3VuaXRfc3VpdGUgaXMgYSBjb2xsZWN0aW9uIG9mIHJlbGF0ZWQgJnN0cnVj
dCBrdW5pdF9jYXNlIHMsIHN1Y2ggdGhhdAorICogQGluaXQgaXMgY2FsbGVkIGJlZm9yZSBldmVy
eSB0ZXN0IGNhc2UgYW5kIEBleGl0IGlzIGNhbGxlZCBhZnRlciBldmVyeSB0ZXN0CisgKiBjYXNl
LCBzaW1pbGFyIHRvIHRoZSBub3Rpb24gb2YgYSAqdGVzdCBmaXh0dXJlKiBvciBhICp0ZXN0IGNs
YXNzKiBpbiBvdGhlcgorICogdW5pdCB0ZXN0aW5nIGZyYW1ld29ya3MgbGlrZSBKVW5pdCBvciBH
b29nbGV0ZXN0LgorICoKKyAqIEV2ZXJ5ICZzdHJ1Y3Qga3VuaXRfY2FzZSBtdXN0IGJlIGFzc29j
aWF0ZWQgd2l0aCBhIGt1bml0X3N1aXRlIGZvciBLVW5pdCB0bworICogcnVuIGl0LgorICovCitz
dHJ1Y3Qga3VuaXRfc3VpdGUgeworCWNvbnN0IGNoYXIgbmFtZVsyNTZdOworCWludCAoKmluaXQp
KHN0cnVjdCBrdW5pdCAqdGVzdCk7CisJdm9pZCAoKmV4aXQpKHN0cnVjdCBrdW5pdCAqdGVzdCk7
CisJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZXM7Cit9OworCisvKioKKyAqIHN0cnVjdCBr
dW5pdCAtIHJlcHJlc2VudHMgYSBydW5uaW5nIGluc3RhbmNlIG9mIGEgdGVzdC4KKyAqIEBwcml2
OiBmb3IgdXNlciB0byBzdG9yZSBhcmJpdHJhcnkgZGF0YS4gQ29tbW9ubHkgdXNlZCB0byBwYXNz
IGRhdGEgY3JlYXRlZAorICogaW4gdGhlIGluaXQgZnVuY3Rpb24gKHNlZSAmc3RydWN0IGt1bml0
X3N1aXRlKS4KKyAqCisgKiBVc2VkIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJy
ZW50IGNvbnRleHQgdW5kZXIgd2hpY2ggdGhlIHRlc3QgaXMKKyAqIHJ1bm5pbmcuIE1vc3Qgb2Yg
dGhpcyBkYXRhIGlzIHByaXZhdGUgYW5kIHNob3VsZCBvbmx5IGJlIGFjY2Vzc2VkIGluZGlyZWN0
bHkKKyAqIHZpYSBwdWJsaWMgZnVuY3Rpb25zOyB0aGUgb25lIGV4Y2VwdGlvbiBpcyBAcHJpdiB3
aGljaCBjYW4gYmUgdXNlZCBieSB0aGUKKyAqIHRlc3Qgd3JpdGVyIHRvIHN0b3JlIGFyYml0cmFy
eSBkYXRhLgorICovCitzdHJ1Y3Qga3VuaXQgeworCXZvaWQgKnByaXY7CisKKwkvKiBwcml2YXRl
OiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KKwljb25zdCBjaGFyICpuYW1lOyAvKiBSZWFkIG9ubHkg
YWZ0ZXIgaW5pdGlhbGl6YXRpb24hICovCisJLyoKKwkgKiBzdWNjZXNzIHN0YXJ0cyBhcyB0cnVl
LCBhbmQgbWF5IG9ubHkgYmUgc2V0IHRvIGZhbHNlIGR1cmluZyBhIHRlc3QKKwkgKiBjYXNlOyB0
aHVzLCBpdCBpcyBzYWZlIHRvIHVwZGF0ZSB0aGlzIGFjcm9zcyBtdWx0aXBsZSB0aHJlYWRzIHVz
aW5nCisJICogV1JJVEVfT05DRTsgaG93ZXZlciwgYXMgYSBjb25zZXF1ZW5jZSwgaXQgbWF5IG9u
bHkgYmUgcmVhZCBhZnRlciB0aGUKKwkgKiB0ZXN0IGNhc2UgZmluaXNoZXMgb25jZSBhbGwgdGhy
ZWFkcyBhc3NvY2lhdGVkIHdpdGggdGhlIHRlc3QgY2FzZQorCSAqIGhhdmUgdGVybWluYXRlZC4K
KwkgKi8KKwlib29sIHN1Y2Nlc3M7IC8qIFJlYWQgb25seSBhZnRlciB0ZXN0X2Nhc2UgZmluaXNo
ZXMhICovCit9OworCit2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3QsIGNv
bnN0IGNoYXIgKm5hbWUpOworCitpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9zdWl0
ZSAqc3VpdGUpOworCisvKioKKyAqIGt1bml0X3Rlc3Rfc3VpdGUoKSAtIHVzZWQgdG8gcmVnaXN0
ZXIgYSAmc3RydWN0IGt1bml0X3N1aXRlIHdpdGggS1VuaXQuCisgKiBAc3VpdGU6IGEgc3RhdGlj
YWxseSBhbGxvY2F0ZWQgJnN0cnVjdCBrdW5pdF9zdWl0ZS4KKyAqCisgKiBSZWdpc3RlcnMgQHN1
aXRlIHdpdGggdGhlIHRlc3QgZnJhbWV3b3JrLiBTZWUgJnN0cnVjdCBrdW5pdF9zdWl0ZSBmb3Ig
bW9yZQorICogaW5mb3JtYXRpb24uCisgKgorICogTk9URTogQ3VycmVudGx5IEtVbml0IHRlc3Rz
IGFyZSBhbGwgcnVuIGFzIGxhdGVfaW5pdGNhbGxzOyB0aGlzIG1lYW5zIHRoYXQKKyAqIHRoZXkg
Y2Fubm90IHRlc3QgYW55dGhpbmcgd2hlcmUgdGVzdHMgbXVzdCBydW4gYXQgYSBkaWZmZXJlbnQg
aW5pdCBwaGFzZS4gT25lCisgKiBzaWduaWZpY2FudCByZXN0cmljdGlvbiByZXN1bHRpbmcgZnJv
bSB0aGlzIGlzIHRoYXQgS1VuaXQgY2Fubm90IHJlbGlhYmx5CisgKiB0ZXN0IGFueXRoaW5nIHRo
YXQgaXMgaW5pdGlhbGl6ZSBpbiB0aGUgbGF0ZV9pbml0IHBoYXNlOyBhbm90aGVyIGlzIHRoYXQK
KyAqIEtVbml0IGlzIHVzZWxlc3MgdG8gdGVzdCB0aGluZ3MgdGhhdCBuZWVkIHRvIGJlIHJ1biBp
biBhbiBlYXJsaWVyIGluaXQgcGhhc2UuCisgKi8KKyNkZWZpbmUga3VuaXRfdGVzdF9zdWl0ZShz
dWl0ZSkJCQkJCQkgICAgICAgXAorCQkvKgorCQkgKiBUT0RPKGJyZW5kYW5oaWdnaW5zQGdvb2ds
ZS5jb20pOiBEb24ndCBydW4gYWxsIEtVbml0IHRlc3RzIGFzCisJCSAqIGxhdGVfaW5pdGNhbGxz
LiAgSSBoYXZlIHNvbWUgZnV0dXJlIHdvcmsgcGxhbm5lZCB0byBkaXNwYXRjaAorCQkgKiBhbGwg
S1VuaXQgdGVzdHMgZnJvbSB0aGUgc2FtZSBwbGFjZSwgYW5kIGF0IHRoZSB2ZXJ5IGxlYXN0IHRv
CisJCSAqIGRvIHNvIGFmdGVyIGV2ZXJ5dGhpbmcgZWxzZSBpcyBkZWZpbml0ZWx5IGluaXRpYWxp
emVkLgorCQkgKi8JCQkJCQkJICAgICAgIFwKKwkJc3RhdGljIGludCBrdW5pdF9zdWl0ZV9pbml0
IyNzdWl0ZSh2b2lkKQkJICAgICAgIFwKKwkJewkJCQkJCQkgICAgICAgXAorCQkJcmV0dXJuIGt1
bml0X3J1bl90ZXN0cygmc3VpdGUpOwkJCSAgICAgICBcCisJCX0JCQkJCQkJICAgICAgIFwKKwkJ
bGF0ZV9pbml0Y2FsbChrdW5pdF9zdWl0ZV9pbml0IyNzdWl0ZSkKKwordm9pZCBfX3ByaW50Zigz
LCA0KSBrdW5pdF9wcmludGsoY29uc3QgY2hhciAqbGV2ZWwsCisJCQkJIGNvbnN0IHN0cnVjdCBr
dW5pdCAqdGVzdCwKKwkJCQkgY29uc3QgY2hhciAqZm10LCAuLi4pOworCisvKioKKyAqIGt1bml0
X2luZm8oKSAtIFByaW50cyBhbiBJTkZPIGxldmVsIG1lc3NhZ2UgYXNzb2NpYXRlZCB3aXRoIHRo
ZSBjdXJyZW50IHRlc3QuCisgKiBAdGVzdDogVGhlIHRlc3QgY29udGV4dCBvYmplY3QuCisgKiBA
Zm10OiBBIHByaW50aygpIHN0eWxlIGZvcm1hdCBzdHJpbmcuCisgKgorICogUHJpbnRzIGFuIGlu
Zm8gbGV2ZWwgbWVzc2FnZSBhc3NvY2lhdGVkIHdpdGggdGhlIHRlc3Qgc3VpdGUgYmVpbmcgcnVu
LiBUYWtlcworICogYSB2YXJpYWJsZSBudW1iZXIgb2YgZm9ybWF0IHBhcmFtZXRlcnMganVzdCBs
aWtlIHByaW50aygpLgorICovCisjZGVmaW5lIGt1bml0X2luZm8odGVzdCwgZm10LCAuLi4pIFwK
KwkJa3VuaXRfcHJpbnRrKEtFUk5fSU5GTywgdGVzdCwgZm10LCAjI19fVkFfQVJHU19fKQorCisv
KioKKyAqIGt1bml0X3dhcm4oKSAtIFByaW50cyBhIFdBUk4gbGV2ZWwgbWVzc2FnZSBhc3NvY2lh
dGVkIHdpdGggdGhlIGN1cnJlbnQgdGVzdC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjb250ZXh0IG9i
amVjdC4KKyAqIEBmbXQ6IEEgcHJpbnRrKCkgc3R5bGUgZm9ybWF0IHN0cmluZy4KKyAqCisgKiBQ
cmludHMgYSB3YXJuaW5nIGxldmVsIG1lc3NhZ2UuCisgKi8KKyNkZWZpbmUga3VuaXRfd2Fybih0
ZXN0LCBmbXQsIC4uLikgXAorCQlrdW5pdF9wcmludGsoS0VSTl9XQVJOSU5HLCB0ZXN0LCBmbXQs
ICMjX19WQV9BUkdTX18pCisKKy8qKgorICoga3VuaXRfZXJyKCkgLSBQcmludHMgYW4gRVJST1Ig
bGV2ZWwgbWVzc2FnZSBhc3NvY2lhdGVkIHdpdGggdGhlIGN1cnJlbnQgdGVzdC4KKyAqIEB0ZXN0
OiBUaGUgdGVzdCBjb250ZXh0IG9iamVjdC4KKyAqIEBmbXQ6IEEgcHJpbnRrKCkgc3R5bGUgZm9y
bWF0IHN0cmluZy4KKyAqCisgKiBQcmludHMgYW4gZXJyb3IgbGV2ZWwgbWVzc2FnZS4KKyAqLwor
I2RlZmluZSBrdW5pdF9lcnIodGVzdCwgZm10LCAuLi4pIFwKKwkJa3VuaXRfcHJpbnRrKEtFUk5f
RVJSLCB0ZXN0LCBmbXQsICMjX19WQV9BUkdTX18pCisKKyNlbmRpZiAvKiBfS1VOSVRfVEVTVF9I
ICovCmRpZmYgLS1naXQgYS9rdW5pdC9LY29uZmlnIGIva3VuaXQvS2NvbmZpZwpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi4zMzBhZTgzNTI3YzIzCi0tLSAvZGV2L251
bGwKKysrIGIva3VuaXQvS2NvbmZpZwpAQCAtMCwwICsxLDE3IEBACisjCisjIEtVbml0IGJhc2Ug
Y29uZmlndXJhdGlvbgorIworCittZW51ICJLVW5pdCBzdXBwb3J0IgorCitjb25maWcgS1VOSVQK
Kwlib29sICJFbmFibGUgc3VwcG9ydCBmb3IgdW5pdCB0ZXN0cyAoS1VuaXQpIgorCWhlbHAKKwkg
IEVuYWJsZXMgc3VwcG9ydCBmb3Iga2VybmVsIHVuaXQgdGVzdHMgKEtVbml0KSwgYSBsaWdodHdl
aWdodCB1bml0CisJICB0ZXN0aW5nIGFuZCBtb2NraW5nIGZyYW1ld29yayBmb3IgdGhlIExpbnV4
IGtlcm5lbC4gVGhlc2UgdGVzdHMgYXJlCisJICBhYmxlIHRvIGJlIHJ1biBsb2NhbGx5IG9uIGEg
ZGV2ZWxvcGVyJ3Mgd29ya3N0YXRpb24gd2l0aG91dCBhIFZNIG9yCisJICBzcGVjaWFsIGhhcmR3
YXJlIHdoZW4gdXNpbmcgVU1MLiBDYW4gYWxzbyBiZSB1c2VkIG9uIG1vc3Qgb3RoZXIKKwkgIGFy
Y2hpdGVjdHVyZXMuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBwbGVhc2Ugc2VlCisJICBEb2N1bWVu
dGF0aW9uL2Rldi10b29scy9rdW5pdC8uCisKK2VuZG1lbnUKZGlmZiAtLWdpdCBhL2t1bml0L01h
a2VmaWxlIGIva3VuaXQvTWFrZWZpbGUKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMDAwMC4uNWVmZGM0ZGVhMmMwOAotLS0gL2Rldi9udWxsCisrKyBiL2t1bml0L01ha2VmaWxl
CkBAIC0wLDAgKzEgQEAKK29iai0kKENPTkZJR19LVU5JVCkgKz0JCQl0ZXN0Lm8KZGlmZiAtLWdp
dCBhL2t1bml0L3Rlc3QuYyBiL2t1bml0L3Rlc3QuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAwLi41NzFlNGM2NWRlYjVjCi0tLSAvZGV2L251bGwKKysrIGIva3VuaXQv
dGVzdC5jCkBAIC0wLDAgKzEsMTg5IEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BM
LTIuMAorLyoKKyAqIEJhc2UgdW5pdCB0ZXN0IChLVW5pdCkgQVBJLgorICoKKyAqIENvcHlyaWdo
dCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVu
ZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICovCisKKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4K
KyNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+CisKK3N0YXRpYyB2b2lkIGt1bml0X3NldF9mYWlsdXJl
KHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlXUklURV9PTkNFKHRlc3QtPnN1Y2Nlc3MsIGZhbHNl
KTsKK30KKworc3RhdGljIGludCBrdW5pdF92cHJpbnRrX2VtaXQoaW50IGxldmVsLCBjb25zdCBj
aGFyICpmbXQsIHZhX2xpc3QgYXJncykKK3sKKwlyZXR1cm4gdnByaW50a19lbWl0KDAsIGxldmVs
LCBOVUxMLCAwLCBmbXQsIGFyZ3MpOworfQorCitzdGF0aWMgaW50IGt1bml0X3ByaW50a19lbWl0
KGludCBsZXZlbCwgY29uc3QgY2hhciAqZm10LCAuLi4pCit7CisJdmFfbGlzdCBhcmdzOworCWlu
dCByZXQ7CisKKwl2YV9zdGFydChhcmdzLCBmbXQpOworCXJldCA9IGt1bml0X3ZwcmludGtfZW1p
dChsZXZlbCwgZm10LCBhcmdzKTsKKwl2YV9lbmQoYXJncyk7CisKKwlyZXR1cm4gcmV0OworfQor
CitzdGF0aWMgdm9pZCBrdW5pdF92cHJpbnRrKGNvbnN0IHN0cnVjdCBrdW5pdCAqdGVzdCwKKwkJ
CSAgY29uc3QgY2hhciAqbGV2ZWwsCisJCQkgIHN0cnVjdCB2YV9mb3JtYXQgKnZhZikKK3sKKwlr
dW5pdF9wcmludGtfZW1pdChsZXZlbFsxXSAtICcwJywgIlx0IyAlczogJXBWIiwgdGVzdC0+bmFt
ZSwgdmFmKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfcHJpbnRfdGFwX3ZlcnNpb24odm9pZCkK
K3sKKwlzdGF0aWMgYm9vbCBrdW5pdF9oYXNfcHJpbnRlZF90YXBfdmVyc2lvbjsKKworCWlmICgh
a3VuaXRfaGFzX3ByaW50ZWRfdGFwX3ZlcnNpb24pIHsKKwkJa3VuaXRfcHJpbnRrX2VtaXQoTE9H
TEVWRUxfSU5GTywgIlRBUCB2ZXJzaW9uIDE0XG4iKTsKKwkJa3VuaXRfaGFzX3ByaW50ZWRfdGFw
X3ZlcnNpb24gPSB0cnVlOworCX0KK30KKworc3RhdGljIHNpemVfdCBrdW5pdF90ZXN0X2Nhc2Vz
X2xlbihzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlcykKK3sKKwlzdHJ1Y3Qga3VuaXRfY2Fz
ZSAqdGVzdF9jYXNlOworCXNpemVfdCBsZW4gPSAwOworCisJZm9yICh0ZXN0X2Nhc2UgPSB0ZXN0
X2Nhc2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNlOyB0ZXN0X2Nhc2UrKykKKwkJbGVuKys7CisKKwly
ZXR1cm4gbGVuOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF9zdWJ0ZXN0X3N0YXJ0KHN0
cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGUpCit7CisJa3VuaXRfcHJpbnRfdGFwX3ZlcnNpb24oKTsK
KwlrdW5pdF9wcmludGtfZW1pdChMT0dMRVZFTF9JTkZPLCAiXHQjIFN1YnRlc3Q6ICVzXG4iLCBz
dWl0ZS0+bmFtZSk7CisJa3VuaXRfcHJpbnRrX2VtaXQoTE9HTEVWRUxfSU5GTywKKwkJCSAgIlx0
MS4uJXpkXG4iLAorCQkJICBrdW5pdF90ZXN0X2Nhc2VzX2xlbihzdWl0ZS0+dGVzdF9jYXNlcykp
OworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF9va19ub3Rfb2soYm9vbCBzaG91bGRfaW5k
ZW50LAorCQkJCSAgYm9vbCBpc19vaywKKwkJCQkgIHNpemVfdCB0ZXN0X251bWJlciwKKwkJCQkg
IGNvbnN0IGNoYXIgKmRlc2NyaXB0aW9uKQoreworCWNvbnN0IGNoYXIgKmluZGVudCwgKm9rX25v
dF9vazsKKworCWlmIChzaG91bGRfaW5kZW50KQorCQlpbmRlbnQgPSAiXHQiOworCWVsc2UKKwkJ
aW5kZW50ID0gIiI7CisKKwlpZiAoaXNfb2spCisJCW9rX25vdF9vayA9ICJvayI7CisJZWxzZQor
CQlva19ub3Rfb2sgPSAibm90IG9rIjsKKworCWt1bml0X3ByaW50a19lbWl0KExPR0xFVkVMX0lO
Rk8sCisJCQkgICIlcyVzICV6ZCAtICVzXG4iLAorCQkJICBpbmRlbnQsIG9rX25vdF9vaywgdGVz
dF9udW1iZXIsIGRlc2NyaXB0aW9uKTsKK30KKworc3RhdGljIGJvb2wga3VuaXRfc3VpdGVfaGFz
X3N1Y2NlZWRlZChzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlKQoreworCWNvbnN0IHN0cnVjdCBr
dW5pdF9jYXNlICp0ZXN0X2Nhc2U7CisKKwlmb3IgKHRlc3RfY2FzZSA9IHN1aXRlLT50ZXN0X2Nh
c2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNlOyB0ZXN0X2Nhc2UrKykKKwkJaWYgKCF0ZXN0X2Nhc2Ut
PnN1Y2Nlc3MpCisJCQlyZXR1cm4gZmFsc2U7CisKKwlyZXR1cm4gdHJ1ZTsKK30KKworc3RhdGlj
IHZvaWQga3VuaXRfcHJpbnRfc3VidGVzdF9lbmQoc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSkK
K3sKKwlzdGF0aWMgc2l6ZV90IGt1bml0X3N1aXRlX2NvdW50ZXIgPSAxOworCisJa3VuaXRfcHJp
bnRfb2tfbm90X29rKGZhbHNlLAorCQkJICAgICAga3VuaXRfc3VpdGVfaGFzX3N1Y2NlZWRlZChz
dWl0ZSksCisJCQkgICAgICBrdW5pdF9zdWl0ZV9jb3VudGVyKyssCisJCQkgICAgICBzdWl0ZS0+
bmFtZSk7Cit9CisKK3N0YXRpYyB2b2lkIGt1bml0X3ByaW50X3Rlc3RfY2FzZV9va19ub3Rfb2so
c3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSwKKwkJCQkJICAgIHNpemVfdCB0ZXN0X251bWJl
cikKK3sKKwlrdW5pdF9wcmludF9va19ub3Rfb2sodHJ1ZSwKKwkJCSAgICAgIHRlc3RfY2FzZS0+
c3VjY2VzcywKKwkJCSAgICAgIHRlc3RfbnVtYmVyLAorCQkJICAgICAgdGVzdF9jYXNlLT5uYW1l
KTsKK30KKwordm9pZCBrdW5pdF9pbml0X3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBjb25zdCBj
aGFyICpuYW1lKQoreworCXRlc3QtPm5hbWUgPSBuYW1lOworCXRlc3QtPnN1Y2Nlc3MgPSB0cnVl
OworfQorCisvKgorICogUGVyZm9ybXMgYWxsIGxvZ2ljIHRvIHJ1biBhIHRlc3QgY2FzZS4KKyAq
Lworc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSwK
KwkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCit7CisJc3RydWN0IGt1bml0IHRl
c3Q7CisJaW50IHJldCA9IDA7CisKKwlrdW5pdF9pbml0X3Rlc3QoJnRlc3QsIHRlc3RfY2FzZS0+
bmFtZSk7CisKKwlpZiAoc3VpdGUtPmluaXQpIHsKKwkJcmV0ID0gc3VpdGUtPmluaXQoJnRlc3Qp
OworCQlpZiAocmV0KSB7CisJCQlrdW5pdF9lcnIoJnRlc3QsICJmYWlsZWQgdG8gaW5pdGlhbGl6
ZTogJWRcbiIsIHJldCk7CisJCQlrdW5pdF9zZXRfZmFpbHVyZSgmdGVzdCk7CisJCQlyZXR1cm47
CisJCX0KKwl9CisKKwl0ZXN0X2Nhc2UtPnJ1bl9jYXNlKCZ0ZXN0KTsKKworCWlmIChzdWl0ZS0+
ZXhpdCkKKwkJc3VpdGUtPmV4aXQoJnRlc3QpOworCisJdGVzdF9jYXNlLT5zdWNjZXNzID0gdGVz
dC5zdWNjZXNzOworfQorCitpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9zdWl0ZSAq
c3VpdGUpCit7CisJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZTsKKwlzaXplX3QgdGVzdF9j
YXNlX2NvdW50ID0gMTsKKworCWt1bml0X3ByaW50X3N1YnRlc3Rfc3RhcnQoc3VpdGUpOworCisJ
Zm9yICh0ZXN0X2Nhc2UgPSBzdWl0ZS0+dGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsg
dGVzdF9jYXNlKyspIHsKKwkJa3VuaXRfcnVuX2Nhc2Uoc3VpdGUsIHRlc3RfY2FzZSk7CisJCWt1
bml0X3ByaW50X3Rlc3RfY2FzZV9va19ub3Rfb2sodGVzdF9jYXNlLCB0ZXN0X2Nhc2VfY291bnQr
Kyk7CisJfQorCisJa3VuaXRfcHJpbnRfc3VidGVzdF9lbmQoc3VpdGUpOworCisJcmV0dXJuIDA7
Cit9CisKK3ZvaWQga3VuaXRfcHJpbnRrKGNvbnN0IGNoYXIgKmxldmVsLAorCQkgIGNvbnN0IHN0
cnVjdCBrdW5pdCAqdGVzdCwKKwkJICBjb25zdCBjaGFyICpmbXQsIC4uLikKK3sKKwlzdHJ1Y3Qg
dmFfZm9ybWF0IHZhZjsKKwl2YV9saXN0IGFyZ3M7CisKKwl2YV9zdGFydChhcmdzLCBmbXQpOwor
CisJdmFmLmZtdCA9IGZtdDsKKwl2YWYudmEgPSAmYXJnczsKKworCWt1bml0X3ZwcmludGsodGVz
dCwgbGV2ZWwsICZ2YWYpOworCisJdmFfZW5kKGFyZ3MpOworfQotLSAKMi4yMi4wLjQxMC5nZDhm
ZGJlMjFiNS1nb29nCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2
ZWw=
