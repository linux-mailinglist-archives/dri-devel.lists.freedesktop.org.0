Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6549DC19A7
	for <lists+dri-devel@lfdr.de>; Sun, 29 Sep 2019 23:54:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 24AFF6E34B;
	Sun, 29 Sep 2019 21:54:26 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by gabe.freedesktop.org (Postfix) with ESMTPS id EB0946E34B
 for <dri-devel@lists.freedesktop.org>; Sun, 29 Sep 2019 21:54:24 +0000 (UTC)
From: bugzilla-daemon@bugzilla.kernel.org
To: dri-devel@lists.freedesktop.org
Subject: [Bug 204181] NULL pointer dereference regression in amdgpu
Date: Sun, 29 Sep 2019 21:54:23 +0000
X-Bugzilla-Reason: None
X-Bugzilla-Type: changed
X-Bugzilla-Watch-Reason: AssignedTo drivers_video-dri@kernel-bugs.osdl.org
X-Bugzilla-Product: Drivers
X-Bugzilla-Component: Video(DRI - non Intel)
X-Bugzilla-Version: 2.5
X-Bugzilla-Keywords: 
X-Bugzilla-Severity: high
X-Bugzilla-Who: virtuousfox@gmail.com
X-Bugzilla-Status: NEW
X-Bugzilla-Resolution: 
X-Bugzilla-Priority: P1
X-Bugzilla-Assigned-To: drivers_video-dri@kernel-bugs.osdl.org
X-Bugzilla-Flags: 
X-Bugzilla-Changed-Fields: 
Message-ID: <bug-204181-2300-T3L6Pjv38G@https.bugzilla.kernel.org/>
In-Reply-To: <bug-204181-2300@https.bugzilla.kernel.org/>
References: <bug-204181-2300@https.bugzilla.kernel.org/>
X-Bugzilla-URL: https://bugzilla.kernel.org/
Auto-Submitted: auto-generated
MIME-Version: 1.0
X-Mailman-Original-Authentication-Results: mail.kernel.org; dkim=permerror (bad
 message/signature format)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

aHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD0yMDQxODEKCi0tLSBD
b21tZW50ICM1OSBmcm9tIFNlcmdleSBLb25kYWtvdiAodmlydHVvdXNmb3hAZ21haWwuY29tKSAt
LS0KKEluIHJlcGx5IHRvIEFuZHJleSBHcm9kem92c2t5IGZyb20gY29tbWVudCAjNTcpCj4gU2Vy
Z2V5LCBpbnN0ZWFkIG9mIHRocm93aW5nIHRhbnRydW1zIHdoeSBjYW4ndCB5b3UganVzdCBkbyB3
aGF0IHlvdSBhcmUKPiBhc2tlZCA/IFlvdSBwcmVzZW50IGFuIGV4dHJlbWVseSBjb252b2x1dGVk
IHNldCBvZiBkcml2ZXIgY29uZmlnIHBhcmFtcyBhbmQKPiBkZW1hbmQgZnJvbSB1cyByZXNvbHZp
bmcgdGhlIGJ1ZyB3aXRoIHRob3NlIHBhcmFtZXRlcnMgaW4gcGxhY2UuIFRoaXMKPiBpbnRyb2R1
Y2VzIHVubmVlZGVkIGNvbXBsaWNhdGlvbiBvZiB0aGUgZmFpbHVyZSBzY2VuYXJpbyB3aGljaCBp
biB0dXJuCj4gaW50cm9kdWNlcyBhIGxvdCBvZiB1bmtub3ducy4gQWxleCBhc2tzIHlvdSB0byBz
aW1wbGlmeSB0aGUgc2V0dGluZ3Mgc28gbGVzcwo+IHVua25vd3MgYXJlIGluIHRoZSBzeXN0ZW0g
c28gaXQncyBlYXNpZXIgZm9yIHVzIHRvIHRyeSBhbmQgZmlndXJlIG91dCB3aGF0Cj4gZ29lcyB3
cm9uZyB3aGlsZSB3ZSBpbnNwZWN0IHRoZSBjb2RlLiAKPiBTbyBwbGVhc2UsIGJyaW5nIHRoZSBw
YXJhbWV0ZXJzIGJhY2sgdG8gZGVmYXVsdCBhcyB0aGlzIGlzIHRoZSBtb3N0IHdlbGwKPiB0ZXN0
ZWQgY29uZmlndXJhdGlvbiBhbmQgZ2l2ZXMgYSBiYXNlbGluZSBhbmQgYWxzbyBwbGVhc2UgcHJv
dmlkZSBhZGRyMmxpbmUKPiBmb3IgMDAxMDphbWRncHVfZG1fYXRvbWljX2NvbW1pdF90YWlsKzB4
MmVlIHNvIHdlIGNhbiBnZXQgYSBiZXR0ZXIgaWRlYQo+IHdoZXJlIGluIGNvZGUgdGhlIE5VTEwg
cHRyIGhhcHBlbmVkLgoKQW5kIGhvdyBhYm91dCBpbnN0ZWFkIG9mIGtub3dpbmdseSBwdXNoaW5n
IHVudGVzdGVkIGNvZGUgd2l0aCBrbm93biBmYXRhbAplcnJvcnMgeW91IHN0b3AgdGFraW5nIFFB
IG5vdGVzIGZyb20gRkdMUlggaW4gdGhlIGZpcnN0IHBsYWNlIGFuZCBkbyB5b3VyIG93bgpmdWxs
IHRlc3RpbmcgPyBZb3UgZG8gcmVhbGl6ZSB0aGF0IEksIGFzIGFsbCBvdGhlcnMsIHBhaWQgZm9y
IHRoYXQgY2FyZCB0byB5b3VyCmVtcGxveWVyLCByaWdodCA/IEFuZCBwZW9wbGUgZG9uJ3QgYnV5
IHlvdXIgdG9wIGNhcmRzLCBSWFs0LTVdWzctOF0wLCBWRUdBcyBhbmQKc28gb24sIHRvIHVzZSB0
aGVtIGFzIGV4cGVuc2l2ZSBiYXJlIG91dHB1dCBjb250cm9sbGVycy4KCkRPIE5PVCBTSE9PVCBU
SEUgTUVTU0VOR0VSLiBXaGF0IHlvdSBpZ25vcmUgZnJvbSBtZSwgb3RoZXJzIHdpbGwgZ2V0IG9u
ZSB3YXkgb3IKYW5vdGhlciwgbW9zdCBvZiB3aGljaCB3b3VsZCBiZSBpbmNhcGFibGUgdG8gZXZl
biByZXBvcnQgaXQgYW5kIGp1c3QgcmVzb3J0IHRvCmN1cnNpbmcgeW91IGFuZCBzZWxsIHRoZSBo
YXJkd2FyZSwgZ29pbmcgb24gTnZpZGlhICYgSW50ZWwgY29tYm8gZm9yZXZlcgppbnN0ZWFkLiBE
byB5b3UgaGF2ZSBhbnkgaWRlYSBob3cgbWFueSB0aW1lcyBpbiBteSBsaWZlIEkndmUgaGVhcmQg
ImF0IGxlYXN0Cml0J3Mgd2l0aG91dCBoYXNzbGUiIHNwaWVsIGFib3V0IGFsbCAoeWVzLCBhbGwp
IEFNRCBzdHVmZiBmcm9tICJub3JtYWwgcGVvcGxlIgo/CgpJIGRvbid0IGRlbWFuZCBmcm9tIHlv
dSByZXNvbHZpbmcgdGhpcyBwZXJzb25hbGx5IGZvciBtZSBhbmQgd2hhdGV2ZXIgSSBtaWdodApj
b25maWd1cmUuIEJ1dCBJIGRvIGRlbWFuZCB5b3Ugbm90IHB1c2hpbmcgdW50ZXN0ZWQgY29kZSwg
aGlkZSBpdCB1bmRlcgpwYXJhbWV0ZXJzIHRoYXQgbGltaXQgYWxsIGNhcmRzIHRvIGJhcmUgbWlu
aW11bSBhbmQgdGhlbiB1c2UgaXQgYXMgYW4gZXhjdXNlIHRvCmNvbnRpbnVlIG5vdCB0byB0ZXN0
IGl0LiBBbmQgdGhlbiBzaWxlbnRseSBleHBlY3QgbWUgdG8gd29yayBhcyB5b3VyIFFBIGFzIGlm
IEkKdHJhaW5lZCBvbiBob3cgdG8gZGVidWcga2VybmVsLWxldmVsIGNvZGUgYW5kIHRlbGVwYXRo
aWNhbGx5IGtub3cgd2hhdCBtaWdodCBiZQpvbiB5b3VyIG1pbmRzLiBXaGF0IGVsc2UsIHNob3Vs
ZCBJIGJlIGV4cGVjdGVkIHRvIHdoaXAgb3V0IGNoaXAgcHJvZ3JhbW1lciBhbmQKd3JpdGUgY3Vz
dG9tIGFzbS1jb2RlIGZvciB5b3VyIG15c3RlcnkgY2hpcHMgYnkgbXlzZWxmID8gSSBkb24ndCBo
YXZlIGEKbGFib3JhdG9yeSBvciBhIGRlZGljYXRlZCBkZWJ1ZyBzdGF0aW9uLgoKX1JlZ2FyZGlu
ZyB0aGlzIG5vdGlvbiBvZiAidGVzdGluZyBvbiBkZWZhdWx0cyJfLiBNYXliZSBJIHdhcyBub3Qg
Y2xlYXIgb24KdGhhdDogdGhhdCAjMyBkZXJlZmVyZW5jZSBoYXBwZW5lZCBqdXN0IG9uY2UgYWZ0
ZXIgYWJvdXQgYSBmdWxsIGRheSBvZiB1cHRpbWUuClRoZSBtYWNoaW5lIHNvbWV0aW1lIHdhcyBy
dW5uaW5nIGZvciBtb3JlIHRoYW4gYSB3ZWVrIHN0cmFpZ2h0IHdpdGhvdXQgaXNzdWVzLgpTbywg
ZGVmYXVsdGluZyB3aWxsIG5vdCBzaG93IGFueSBkaWZmZXJlbmNlIG9uIG15IGVuZCB1bmxlc3Mg
SSBydW4gYm90aCBjb25maWdzCm5vIGxlc3MgdGhhbiAyIHdlZWtzIG9mIHB1cmUgdXB0aW1lIGVh
Y2ggd2l0aG91dCBzaHV0dGluZyBkb3duIHRoZSBtYWNoaW5lLiBBbmQKaXQgc3RpbGwgYmUgdXNl
bGVzcyBndWVzc3dvcmsgd2hpY2ggd2lsbCBub3QgcHJvZHVjZSBhbnkgbW9yZSBwb2ludGVycyBv
biB3aGF0CmV4YWN0bHkgZ29lcyB3cm9uZywgYXQgYmVzdCBpdCBqdXN0IHdpbGwgcmVwZWF0IG9y
IG5vdC4KCkhvd2V2ZXIsIHlvdSBhcyBhIGRldmVsb3BlcnMgb2YgdGhhdCBjb2RlIGFuZCBhIHRy
YWluZWQgZXhwZXJ0cywgY2FuIHVzZSB0aGF0CmxpdHRsZSBkYXRhIHRoZXJlIGlzIHRvIHJlY2hl
Y2sgZXhhY3Qgb2ZmZW5kaW5nIGNvZGUgYWJvdXQgbm8gb25lIGVsc2UgaGF2ZSBhCmNsdWUgYWJv
dXQuIFlvdSBhbHNvIGNhbiBmdWxseSByZXByb2R1Y2UgbXkgY29uZmlndXJhdGlvbiAoaW5jbHVk
aW5nIGV4YWN0CnBhY2thZ2VzIG9mIG15IGtlcm5lbCB3aXRoIGRlYnVnLWluZm8pIGFuZCB3b3Jr
IHdpdGggZnVsbCBkYXRhIG9mIHlvdXIgb3duLApzaW5jZSB5b3Ugbm90IHdpbGxpbmcgdG8gdGVz
dCBhbGwgeW91ciBjb2RlcGF0aHMgcmVndWxhcmx5IGFzIGEgcnVsZS4KCkkgd2lsbCB0cnkgdG8g
ZmlndXJlIG91dCB3aGF0IHRoZSBoZWxsIHRoaXMgImFkZHIybGluZSIgaXMgYnV0IGl0IHdpbGwg
cHJvYmFibHkKaW5jbHVkZSBpbnN0YWxsaW5nIGdpZ2FieXRlcyBvZiBkZWJ1Zy1zeW1ib2xzIG9u
IFNTRCB0aGF0IGhhcyBubyBzcGFjZSBmb3IKdGhlbSwgc2/igKYgaXQgd2lsbCB0YWtlIGEgd2hp
bGUuCgpCdXQgdGhlIHdheSwgd2hhdCBoYXBwZW5lZCB3aXRoIG15IGFuc3dlciBhYm91dCAjMiA/
IFlvdSBrbm93LCB0aGUgYGxpc3QKKihhbWRncHVfdm1fdXBkYXRlX2RpcmVjdG9yaWVzKzB4ZTcp
YCBwYXJ0LCB3aGljaCB3YXMgcmVhbCB0aW1lLWNvbnN1bWluZyBwYWluCnRvIGdldCwgd2l0aDoK
MHgyZTEyNyBpcyBpbiBhbWRncHVfdm1fdXBkYXRlX2RpcmVjdG9yaWVzCiguLi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdm0uYzoxMTkxKS4Kd2hlcmUgbGluZSAjMTE5MSBpczoK
c3RydWN0IGFtZGdwdV9ibyAqYm8gPSBwYXJlbnQtPmJhc2UuYm8sICpwYm87CgpIYXZlIHlvdSBl
dmVuIHNlZW4gaXQgPyBXYXMgaXQgdGhlIHJpZ2h0IHRoaW5nID8gQW55IHRob3VnaHRzIG9uIHRo
ZSBjYXVzZSBmb3IKdGhpcyBvbmUgPyBTaG91bGQgSSBkbyB0aGUgc2FtZSBmb3IgdGhlICMzID8g
V2lsbCBpdCBhbHNvIGdvIGludG8gYSB2b2lkIG9mCnNpbGVuY2UgPwoKKEluIHJlcGx5IHRvIERh
bWlhbiBOb3dhayBmcm9tIGNvbW1lbnQgIzU4KQo+IEkgZW5jb3VudGVyIHRoaXMgZXJyb3Igb25j
ZSBhIHdlZWsgb24gYXZlcmFnZSBvbiBteSBSYWRlb24gNyAoVmVnYSAyMCkuCj4gR3JlYXQgb24g
c2VlIHlvdSBndXlzIGFjdGl2ZWx5IHdvcmtpbmcgb24gaXQuIFdoZW4gNS4zLjIgcmVsZWFzZXMg
dG8gQXJjaCwKPiBJJ2xsIGtlZXAgdXNpbmcgaXQgZm9yIGEgd2VlayBvciB0d28gYW5kIHJlcG9y
dCBiYWNrIHdoZXRoZXIgSSBlbmNvdW50ZXIgYW4KPiBpc3N1ZSBhZ2FpbiBvciBub3QuIFRoYW5r
cyEgCj4gCj4gQFNlcmdleSBZb3UgY291bGQgcmV2ZXJ0IHRvIGRlZmF1bHRzIGp1c3QgZm9yIHRo
ZSBkdXJhdGlvbiBvZgo+IHRlc3RpbmcvZGVidWdnaW5nLiBJdCdsbCBzdXJlIG1ha2UgdGhpbmdz
IGVhc2llciBmb3IgZGV2ZWxvcGVycywgYW5kIHlvdSBjYW4KPiBzdGlsbCBnbyBiYWNrIHRvIHlv
dXIgc2V0dGluZ3Mgb25jZSB0aGUgaXNzdWUgaXMgZml4ZWQuIEdyZWF0IHNldHRpbmdzCj4gbm9u
ZXRoZWxlc3MsIGRvIHRoZXNlIGtlcm5lbCBwYXJhbWV0ZXJzIHJlYWxseSBpbXByb3ZlIHRoZSBw
b3dlciBwZXJmb3JtYW5jZQo+IG9mIFJYIDU4MCwgb3IgZGlkIHlvdSBuZWVkIHRvIGRvIHNvbWV0
aGluZyBpbiBhZGRpdGlvbiB0b28/IEJ5IHRoZSB3YXksIEkKPiB1c2VkIFJYIDU4MCBvbiBkZWZh
dWx0IEFyY2ggTGludXggc2V0dGluZ3MgKHNvIG1vc3QgbGlrZWx5IGtlcm5lbCBkZWZhdWx0cykK
PiBmb3IgYSB5ZWFyIGFuZCBpdCB3YXMgZmluZSBzbyB5b3UgcHJvYmFibHkgZG9uJ3QgaGF2ZSB0
byB3b3JyeSBhYm91dCBmcnlpbmcKPiBpdC4gTm93IEknbSB1c2luZyBSYWRlb24gNywgd2hpbGUg
UlggNTgwIGlzIHN0aWxsIGFsaXZlIGluIGEgZGlmZmVyZW50Cj4gV2luZG93cy1iYXNlZCBjb21w
dXRlci4KCk9rLCBJIGNhbi4gQnV0IHdoYXQncyBuZXh0ID8gSG93IGV4YWN0bHkgZG9lcyB0aGF0
IHdvdWxkIGdpdmUgYW55IG1vcmUgZGF0YSA/CldoYXQgZXhhY3RseSBzaG91bGQgSSBkbyBhZnRl
ciBib290aW5nIHRoZSBtYWNoaW5lID8KClBvd2VyID8gTm8sIHRoZSBjdXN0b20gaGFja2VkIEdQ
VSBCSU9TIGRvZXMuIEFsdGhvdWdoLCBhZnRlciBmaWRkbGluZyB3aXRoCnZvbHRhZ2VzLCBJIGp1
c3QgbGVmdCB0aGVtIG9uIGF1dG8tZGVmYXVsdHMsIHdoZXJlIGRyaXZlci9maXJtd2FyZSB1c2Vz
CmJ1aWx0LWluIHBlci1jYXJkICJjaGlwIHF1YWxpdHkiIGFzIG11bHRpcGxpZXIgZm9yIGRlZmF1
bHRzLCBhbmQgbGltaXRlZApmcmVxdWVuY3kgdG8gMTMwMC4gUG93ZXItZHJhdyBpbmNyZWFzZXMg
ZXhwb25lbnRpYWxseSB3aXRoIGZyZXF1ZW5jeSBhbmQgYWZ0ZXIKMTMwMCBpdCBpbmNyZWFzZXMg
cmlkaWN1bG91cyBvbiBSWDU4MCdzIDE0bm0gY2hpcHMuIEkgYWxzbyBtYWRlIGZhbnMgbmV2ZXIg
c3RvcAphbmQgYWN0IG1vcmUgYWdncmVzc2l2ZWx5IGJ1dCBub3QgdG8gdGhlIHBvaW50IG9mIG91
dC1ub2lzaW5nIHRoZSBjYXNlIGFuZCBDUFUKZmFucy4gQW5kIEkgdGlnaHRlbmVkIG1lbW9yeSB0
aW1pbmdzIHRvby4gOTAtMTIwVyBhcmUgbnVtYmVycyBmcm9tIE1TSQpBZnRlcmJ1cm5lciwgbW9z
dGx5IGFib3V0IDkwVyBhbmQgcmFyZWx5IDEyMFcgaW4gc29tZSBzcGVjaWZpYyBsb2Fkcy4KClBy
ZS1SWCBjYXJkcywgdGhlIHdob2xlIDIwMDgtMjAxNSBnZW5lcmF0aW9uIG9mIEFNRCBHUFUgY2hp
cHMgKGFuZCBjaGlwc2V0cywKZm9yIHRoYXQgbWF0dGVyKSwgZXNwZWNpYWxseSBtb2JpbGUgb25l
cywgYXJlIHdlbGwga25vd24gdG8gYmUKc2VsZi1kZXN0cnVjdGl2ZS4gQW5kIG5vdCBsb25nIGFn
byBteSA2ODcwIGhhcyBqb2luZWQgdGhlbS4gSXJvbmljYWxseSwgZGVmYXVsdApmaXJtd2FyZSBz
ZXR0aW5ncyBvbiBjb21tZXJjaWFsIEdQVXMgYXJlIG5vdCBzYWZlLCBhdCBsZWFzdCBub3Qgb24g
dGhvc2UKZ2VuZXJhdGlvbnMuIFRoZXkgYXJlIGJhbGFuY2VkIGJ5IHRoZSBtYW51ZmFjdHVyZXJz
IHRvIGJhcmVseSBzdXJ2aXZlIHdhcnJhbnR5CnBlcmlvZHMuIFRoYXQncyB3aHkgcHJlLW92ZXJj
bG9ja2VkIGNhcmRzLCBvciBhbnkgY2hpcHMsIGlzIG5vdCBhIHByb2R1Y3QgdGhhdAphbnlvbmUg
c2hvdWxkIGJlIGV4aXRlZCBhYm91dC4gQU1EIGNoaXBzIGFyZSBrbm93cyBhcyAidGhlIHN0b3Zl
cyIgZm9yIHRoZQpyZWFzb24gYnV0IGRldmljZSBtYW51ZmFjdHVyZXJzIGJyaW5nIGl0IHRoZW0g
ZnJvbSAiaW5lZmZpY2llbnQiIHRvCiJoYWxmLWRlYWQiLiBQcmljZSdzIGdvb2QgdGhvdWdoLgoK
V2l0aCB0aGUgc29mdHdhcmUgcGFyYW1ldGVycyBJIG1haW5seSB0cnkgdG8gYmFsYW5jZSBsYXRl
bmN5IGFuZCBDUFUgdGltZSwKcmVtb3ZlIHNvdXJjZXMgb2Ygc3R1dHRlcmluZywgZG8gcHJvcGVy
IHByaW9yaXRpemF0aW9uIGR1cmluZyBDUFUgJiBJL08KY29udGVudGlvbiwgYW5kIGVuYWJsZSBm
ZWF0dXJlcyB0aGF0IGNhbiBiZSBzYWZlbHkgZW5hYmxlZCwgc28gd2hlbiBJIHJ1biBteQpsaXZl
IHRlc3QvaW5zdGFsbCBkaXN0cm8gYnVpbGQgb24gdW5rbm93biBoYXJkd2FyZSwgSSBjb3VsZCB0
ZXN0IGFuZC9vciB1c2UgaXQKZnVsbHkgd2l0aG91dCByZWRvaW5nIGFuZCBjdXN0b21pemluZyB0
aGUgd2hvbGUgZGFtbiB0aGluZy4gQnV0IGl0J3MgbW9yZSBvZiBhCmd1ZXNzd29yayB3aXRoIEdQ
VSB0aGFuIHdpdGggZXZlcnl0aGluZyBlbHNlLiBVbmZvcnR1bmF0ZWx5LCBkZXZlbG9wZXJzIGlu
CmdlbmVyYWwgYXJlIG5vdCBtdWNoIG9mIHRoZSBmYW5zIG9mICJtdWx0aS10YXNrIGRlc2t0b3Ag
dXNlciBleHBlcmllbmNlIiBvbgpsYXN0LWdlbiAoImxhc3QiIGJlaW5nICJvbGRlciB0aGFuIG9u
ZSBpbiBsYWJvcmF0b3J5IikgaGFyZHdhcmUuCgotLSAKWW91IGFyZSByZWNlaXZpbmcgdGhpcyBt
YWlsIGJlY2F1c2U6CllvdSBhcmUgd2F0Y2hpbmcgdGhlIGFzc2lnbmVlIG9mIHRoZSBidWcuCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBt
YWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
