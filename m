Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 33B359AC20
	for <lists+dri-devel@lfdr.de>; Fri, 23 Aug 2019 11:55:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8C3466EC65;
	Fri, 23 Aug 2019 09:55:28 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 484A26EC59
 for <dri-devel@lists.freedesktop.org>; Fri, 23 Aug 2019 09:55:13 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id D49DB18C4271;
 Fri, 23 Aug 2019 09:55:12 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-60.ams2.redhat.com
 [10.36.116.60])
 by smtp.corp.redhat.com (Postfix) with ESMTP id F2BF810016E9;
 Fri, 23 Aug 2019 09:55:10 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id 859E531EAC; Fri, 23 Aug 2019 11:55:05 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v8 14/18] drm/virtio: switch from ttm to gem shmem helpers
Date: Fri, 23 Aug 2019 11:54:59 +0200
Message-Id: <20190823095503.2261-15-kraxel@redhat.com>
In-Reply-To: <20190823095503.2261-1-kraxel@redhat.com>
References: <20190823095503.2261-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.6.2
 (mx1.redhat.com [10.5.110.62]); Fri, 23 Aug 2019 09:55:12 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>, open list <linux-kernel@vger.kernel.org>,
 gurchetansingh@chromium.org, Gerd Hoffmann <kraxel@redhat.com>,
 "open list:VIRTIO GPU DRIVER" <virtualization@lists.linux-foundation.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

dmlydGlvLWdwdSBiYXNpY2FsbHkgbmVlZHMgYSBzZ190YWJsZSBmb3IgdGhlIGJvLCB0byB0ZWxs
IHRoZSBob3N0IHdoZXJlCnRoZSBiYWNraW5nIHBhZ2VzIGZvciB0aGUgb2JqZWN0IGFyZS4gIFNv
IHRoZSBnZW0gc2htZW0gaGVscGVycyBhcmUgYQpwZXJmZWN0IGZpdC4gIFNvbWUgZHJtX2dlbV9v
YmplY3RfZnVuY3MgbmVlZCB0aGluIHdyYXBwZXJzIHRvIHVwZGF0ZSB0aGUKaG9zdCBzdGF0ZSwg
YnV0IG90aGVyd2lzZSB0aGUgaGVscGVycyBoYW5kbGUgZXZlcnl0aGluZyBqdXN0IGZpbmUuCgpP
bmNlIHRoZSBmZW5jaW5nIHdhcyBzb3J0ZWQgdGhlIHN3aXRjaCB3YXMgc3VycHJpc2luZ2x5IGVh
c3kgYW5kIGZvciB0aGUKbW9zdCBwYXJ0IGp1c3QgcmVtb3ZpbmcgdGhlIHR0bSBjb2RlLgoKdjQ6
IGZpeCBkcm1fZ2VtX29iamVjdF9mdW5jcyBuYW1lLgoKU2lnbmVkLW9mZi1ieTogR2VyZCBIb2Zm
bWFubiA8a3JheGVsQHJlZGhhdC5jb20+CkFja2VkLWJ5OiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwu
dmV0dGVyQGZmd2xsLmNoPgotLS0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYu
aCAgICB8ICA1MiArLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMgICAg
fCAgMjAgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9nZW0uYyAgICB8ICAxNiAr
LQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2lvY3RsLmMgIHwgICA1ICstCiBkcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMgICAgfCAgIDkgLQogZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby92aXJ0Z3B1X29iamVjdC5jIHwgMTQ2ICsrKystLS0tLS0tLQogZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ByaW1lLmMgIHwgIDM0IC0tLQogZHJpdmVycy9ncHUvZHJt
L3ZpcnRpby92aXJ0Z3B1X3R0bS5jICAgIHwgMzA1IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMgICAgIHwgIDI0ICstCiBkcml2ZXJz
L2dwdS9kcm0vdmlydGlvL0tjb25maWcgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vTWFrZWZpbGUgICAgICAgICB8ICAgMiArLQogMTEgZmlsZXMgY2hhbmdlZCwgODAg
aW5zZXJ0aW9ucygrKSwgNTM1IGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAwNjQ0IGRyaXZl
cnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV90dG0uYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdw
dV9kcnYuaAppbmRleCAxMjY2YThlNjQ5NjEuLmI2N2QyM2VmMmIxMSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9kcnYuaApAQCAtMzUsMTIgKzM1LDkgQEAKICNpbmNsdWRlIDxkcm0vZHJt
X2VuY29kZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fZ2VtLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmg+CiAjaW5j
bHVkZSA8ZHJtL2RybV9pb2N0bC5oPgogI2luY2x1ZGUgPGRybS9kcm1fcHJvYmVfaGVscGVyLmg+
Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fYXBpLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1f
Ym9fZHJpdmVyLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fbW9kdWxlLmg+Ci0jaW5jbHVkZSA8
ZHJtL3R0bS90dG1fcGxhY2VtZW50Lmg+CiAKICNkZWZpbmUgRFJJVkVSX05BTUUgInZpcnRpb19n
cHUiCiAjZGVmaW5lIERSSVZFUl9ERVNDICJ2aXJ0aW8gR1BVIgpAQCAtNjgsMjEgKzY1LDE2IEBA
IHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgewogfTsKIAogc3RydWN0IHZpcnRpb19n
cHVfb2JqZWN0IHsKLQlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgZ2VtX2Jhc2U7CisJc3RydWN0IGRy
bV9nZW1fc2htZW1fb2JqZWN0IGJhc2U7CiAJdWludDMyX3QgaHdfcmVzX2hhbmRsZTsKIAogCXN0
cnVjdCBzZ190YWJsZSAqcGFnZXM7CiAJdWludDMyX3QgbWFwcGVkOwotCXZvaWQgKnZtYXA7CiAJ
Ym9vbCBkdW1iOwotCXN0cnVjdCB0dG1fcGxhY2UgICAgICAgICAgICAgICAgcGxhY2VtZW50X2Nv
ZGU7Ci0Jc3RydWN0IHR0bV9wbGFjZW1lbnQJCXBsYWNlbWVudDsKLQlzdHJ1Y3QgdHRtX2J1ZmZl
cl9vYmplY3QJdGJvOwotCXN0cnVjdCB0dG1fYm9fa21hcF9vYmoJCWttYXA7CiAJYm9vbCBjcmVh
dGVkOwogfTsKICNkZWZpbmUgZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKGdvYmopIFwKLQljb250YWlu
ZXJfb2YoKGdvYmopLCBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QsIGdlbV9iYXNlKQorCWNvbnRh
aW5lcl9vZigoZ29iaiksIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgYmFzZS5iYXNlKQogCiBz
dHJ1Y3QgdmlydGlvX2dwdV9vYmplY3RfYXJyYXkgewogCXN0cnVjdCB3d19hY3F1aXJlX2N0eCB0
aWNrZXQ7CkBAIC0xNTMsMTAgKzE0NSw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVy
IHsKICNkZWZpbmUgdG9fdmlydGlvX2dwdV9mcmFtZWJ1ZmZlcih4KSBcCiAJY29udGFpbmVyX29m
KHgsIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVyLCBiYXNlKQogCi1zdHJ1Y3QgdmlydGlv
X2dwdV9tbWFuIHsKLQlzdHJ1Y3QgdHRtX2JvX2RldmljZQkJYmRldjsKLX07Ci0KIHN0cnVjdCB2
aXJ0aW9fZ3B1X3F1ZXVlIHsKIAlzdHJ1Y3QgdmlydHF1ZXVlICp2cTsKIAlzcGlubG9ja190IHFs
b2NrOwpAQCAtMTg1LDggKzE3Myw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSB7CiAKIAlz
dHJ1Y3QgdmlydGlvX2RldmljZSAqdmRldjsKIAotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gbW1h
bjsKLQogCXN0cnVjdCB2aXJ0aW9fZ3B1X291dHB1dCBvdXRwdXRzW1ZJUlRJT19HUFVfTUFYX1ND
QU5PVVRTXTsKIAl1aW50MzJfdCBudW1fc2Nhbm91dHM7CiAKQEAgLTM1OCwxMSArMzQ0LDYgQEAg
c3RydWN0IGRybV9wbGFuZSAqdmlydGlvX2dwdV9wbGFuZV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXYsCiAJCQkJCWVudW0gZHJtX3BsYW5lX3R5cGUgdHlwZSwKIAkJCQkJaW50
IGluZGV4KTsKIAotLyogdmlydGlvX2dwdV90dG0uYyAqLwotaW50IHZpcnRpb19ncHVfdHRtX2lu
aXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci12b2lkIHZpcnRpb19ncHVfdHRt
X2Zpbmkoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci1pbnQgdmlydGlvX2dwdV9t
bWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7Ci0KIC8q
IHZpcnRpb19ncHVfZmVuY2UuYyAqLwogYm9vbCB2aXJ0aW9fZmVuY2Vfc2lnbmFsZWQoc3RydWN0
IGRtYV9mZW5jZSAqZik7CiBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqdmlydGlvX2dwdV9mZW5j
ZV9hbGxvYygKQEAgLTM3NCw1OCArMzU1LDQ3IEBAIHZvaWQgdmlydGlvX2dwdV9mZW5jZV9ldmVu
dF9wcm9jZXNzKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmRldiwKIAkJCQkgICAgdTY0IGxh
c3Rfc2VxKTsKIAogLyogdmlydGlvX2dwdV9vYmplY3QgKi8KK3N0cnVjdCBkcm1fZ2VtX29iamVj
dCAqdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJ
CQlzaXplX3Qgc2l6ZSk7CiBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0
aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9w
YXJhbXMgKnBhcmFtcywKIAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICoqYm9fcHRy
LAogCQkJICAgICBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqZmVuY2UpOwotdm9pZCB2aXJ0aW9f
Z3B1X29iamVjdF9rdW5tYXAoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyk7Ci1pbnQgdmly
dGlvX2dwdV9vYmplY3Rfa21hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKTsKLWludCB2
aXJ0aW9fZ3B1X29iamVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpx
ZGV2LAotCQkJCSAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwotdm9pZCB2aXJ0aW9f
Z3B1X29iamVjdF9mcmVlX3NnX3RhYmxlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwog
CiAvKiB2aXJ0Z3B1X3ByaW1lLmMgKi8KLXN0cnVjdCBzZ190YWJsZSAqdmlydGdwdV9nZW1fcHJp
bWVfZ2V0X3NnX3RhYmxlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKTsKIHN0cnVjdCBkcm1f
Z2VtX29iamVjdCAqdmlydGdwdV9nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlKAogCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCwKIAlzdHJ1
Y3Qgc2dfdGFibGUgKnNndCk7Ci12b2lkICp2aXJ0Z3B1X2dlbV9wcmltZV92bWFwKHN0cnVjdCBk
cm1fZ2VtX29iamVjdCAqb2JqKTsKLXZvaWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVj
dCBkcm1fZ2VtX29iamVjdCAqb2JqLCB2b2lkICp2YWRkcik7Ci1pbnQgdmlydGdwdV9nZW1fcHJp
bWVfbW1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hKTsKIAogc3RhdGljIGlubGluZSBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Qq
CiB2aXJ0aW9fZ3B1X29iamVjdF9yZWYoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIHsK
LQl0dG1fYm9fZ2V0KCZiby0+dGJvKTsKKwlkcm1fZ2VtX29iamVjdF9nZXQoJmJvLT5iYXNlLmJh
c2UpOwogCXJldHVybiBibzsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIHZpcnRpb19ncHVfb2Jq
ZWN0X3VucmVmKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqKmJvKQogewotCXN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqdGJvOwotCiAJaWYgKCgqYm8pID09IE5VTEwpCiAJCXJldHVybjsKLQl0
Ym8gPSAmKCgqYm8pLT50Ym8pOwotCXR0bV9ib19wdXQodGJvKTsKKwlkcm1fZ2VtX29iamVjdF9w
dXQoJigqYm8pLT5iYXNlLmJhc2UpOwogCSpibyA9IE5VTEw7CiB9CiAKIHN0YXRpYyBpbmxpbmUg
dTY0IHZpcnRpb19ncHVfb2JqZWN0X21tYXBfb2Zmc2V0KHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dCAqYm8pCiB7Ci0JcmV0dXJuIGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmYm8tPnRiby5iYXNl
LnZtYV9ub2RlKTsKKwlyZXR1cm4gZHJtX3ZtYV9ub2RlX29mZnNldF9hZGRyKCZiby0+YmFzZS5i
YXNlLnZtYV9ub2RlKTsKIH0KIAogc3RhdGljIGlubGluZSBpbnQgdmlydGlvX2dwdV9vYmplY3Rf
cmVzZXJ2ZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQogewogCWludCByOwogCi0JciA9
IGRtYV9yZXN2X2xvY2tfaW50ZXJydXB0aWJsZShiby0+Z2VtX2Jhc2UucmVzdiwgTlVMTCk7CisJ
ciA9IGRtYV9yZXN2X2xvY2tfaW50ZXJydXB0aWJsZShiby0+YmFzZS5iYXNlLnJlc3YsIE5VTEwp
OwogCWlmICh1bmxpa2VseShyICE9IDApKSB7CiAJCWlmIChyICE9IC1FSU5UUikgewogCQkJc3Ry
dWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2ID0KLQkJCQliby0+Z2VtX2Jhc2UuZGV2LT5kZXZf
cHJpdmF0ZTsKKwkJCQliby0+YmFzZS5iYXNlLmRldi0+ZGV2X3ByaXZhdGU7CiAJCQlkZXZfZXJy
KHFkZXYtPmRldiwgIiVwIHJlc2VydmUgZmFpbGVkXG4iLCBibyk7CiAJCX0KIAkJcmV0dXJuIHI7
CkBAIC00MzUsNyArNDA1LDcgQEAgc3RhdGljIGlubGluZSBpbnQgdmlydGlvX2dwdV9vYmplY3Rf
cmVzZXJ2ZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQogCiBzdGF0aWMgaW5saW5lIHZv
aWQgdmlydGlvX2dwdV9vYmplY3RfdW5yZXNlcnZlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAq
Ym8pCiB7Ci0JZG1hX3Jlc3ZfdW5sb2NrKGJvLT5nZW1fYmFzZS5yZXN2KTsKKwlkbWFfcmVzdl91
bmxvY2soYm8tPmJhc2UuYmFzZS5yZXN2KTsKIH0KIAogLyogdmlyZ2wgZGVidWZzICovCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMgYi9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMKaW5kZXggM2QyNDE4MTYzNmUxLi45NzdhZWJmNTE2
YTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMKQEAgLTE4NCwxNyArMTg0LDcg
QEAgTU9EVUxFX0FVVEhPUigiRGF2ZSBBaXJsaWUgPGFpcmxpZWRAcmVkaGF0LmNvbT4iKTsKIE1P
RFVMRV9BVVRIT1IoIkdlcmQgSG9mZm1hbm4gPGtyYXhlbEByZWRoYXQuY29tPiIpOwogTU9EVUxF
X0FVVEhPUigiQWxvbiBMZXZ5Iik7CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRp
b25zIHZpcnRpb19ncHVfZHJpdmVyX2ZvcHMgPSB7Ci0JLm93bmVyID0gVEhJU19NT0RVTEUsCi0J
Lm9wZW4gPSBkcm1fb3BlbiwKLQkubW1hcCA9IHZpcnRpb19ncHVfbW1hcCwKLQkucG9sbCA9IGRy
bV9wb2xsLAotCS5yZWFkID0gZHJtX3JlYWQsCi0JLnVubG9ja2VkX2lvY3RsCT0gZHJtX2lvY3Rs
LAotCS5yZWxlYXNlID0gZHJtX3JlbGVhc2UsCi0JLmNvbXBhdF9pb2N0bCA9IGRybV9jb21wYXRf
aW9jdGwsCi0JLmxsc2VlayA9IG5vb3BfbGxzZWVrLAotfTsKK0RFRklORV9EUk1fR0VNX1NITUVN
X0ZPUFModmlydGlvX2dwdV9kcml2ZXJfZm9wcyk7CiAKIHN0YXRpYyBzdHJ1Y3QgZHJtX2RyaXZl
ciBkcml2ZXIgPSB7CiAJLmRyaXZlcl9mZWF0dXJlcyA9IERSSVZFUl9NT0RFU0VUIHwgRFJJVkVS
X0dFTSB8IERSSVZFUl9SRU5ERVIgfCBEUklWRVJfQVRPTUlDLApAQCAtMjA5LDE1ICsxOTksOSBA
QCBzdGF0aWMgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVyID0gewogI2VuZGlmCiAJLnByaW1lX2hh
bmRsZV90b19mZCA9IGRybV9nZW1fcHJpbWVfaGFuZGxlX3RvX2ZkLAogCS5wcmltZV9mZF90b19o
YW5kbGUgPSBkcm1fZ2VtX3ByaW1lX2ZkX3RvX2hhbmRsZSwKLQkuZ2VtX3ByaW1lX2dldF9zZ190
YWJsZSA9IHZpcnRncHVfZ2VtX3ByaW1lX2dldF9zZ190YWJsZSwKIAkuZ2VtX3ByaW1lX2ltcG9y
dF9zZ190YWJsZSA9IHZpcnRncHVfZ2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSwKLQkuZ2VtX3By
aW1lX3ZtYXAgPSB2aXJ0Z3B1X2dlbV9wcmltZV92bWFwLAotCS5nZW1fcHJpbWVfdnVubWFwID0g
dmlydGdwdV9nZW1fcHJpbWVfdnVubWFwLAotCS5nZW1fcHJpbWVfbW1hcCA9IHZpcnRncHVfZ2Vt
X3ByaW1lX21tYXAsCiAKLQkuZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2VkID0gdmlydGlvX2dwdV9n
ZW1fZnJlZV9vYmplY3QsCi0JLmdlbV9vcGVuX29iamVjdCA9IHZpcnRpb19ncHVfZ2VtX29iamVj
dF9vcGVuLAotCS5nZW1fY2xvc2Vfb2JqZWN0ID0gdmlydGlvX2dwdV9nZW1fb2JqZWN0X2Nsb3Nl
LAorCS5nZW1fY3JlYXRlX29iamVjdCA9IHZpcnRpb19ncHVfY3JlYXRlX29iamVjdCwKIAkuZm9w
cyA9ICZ2aXJ0aW9fZ3B1X2RyaXZlcl9mb3BzLAogCiAJLmlvY3RscyA9IHZpcnRpb19ncHVfaW9j
dGxzLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jIGIv
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jCmluZGV4IDE4OGMyMGFhYWU1Ni4u
NDUyYWQ3YWM1NGE1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVf
Z2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jCkBAIC0yOCwx
NCArMjgsNiBAQAogCiAjaW5jbHVkZSAidmlydGdwdV9kcnYuaCIKIAotdm9pZCB2aXJ0aW9fZ3B1
X2dlbV9mcmVlX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmdlbV9vYmopCi17Ci0Jc3Ry
dWN0IHZpcnRpb19ncHVfb2JqZWN0ICpvYmogPSBnZW1fdG9fdmlydGlvX2dwdV9vYmooZ2VtX29i
aik7Ci0KLQlpZiAob2JqKQotCQl2aXJ0aW9fZ3B1X29iamVjdF91bnJlZigmb2JqKTsKLX0KLQog
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KgogdmlydGlvX2dwdV9hbGxvY19vYmplY3Qoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwKIAkJCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgKnBh
cmFtcywKQEAgLTY2LDE2ICs1OCwxNiBAQCBpbnQgdmlydGlvX2dwdV9nZW1fY3JlYXRlKHN0cnVj
dCBkcm1fZmlsZSAqZmlsZSwKIAlpZiAoSVNfRVJSKG9iaikpCiAJCXJldHVybiBQVFJfRVJSKG9i
aik7CiAKLQlyZXQgPSBkcm1fZ2VtX2hhbmRsZV9jcmVhdGUoZmlsZSwgJm9iai0+Z2VtX2Jhc2Us
ICZoYW5kbGUpOworCXJldCA9IGRybV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlLCAmb2JqLT5iYXNl
LmJhc2UsICZoYW5kbGUpOwogCWlmIChyZXQpIHsKLQkJZHJtX2dlbV9vYmplY3RfcmVsZWFzZSgm
b2JqLT5nZW1fYmFzZSk7CisJCWRybV9nZW1fb2JqZWN0X3JlbGVhc2UoJm9iai0+YmFzZS5iYXNl
KTsKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQkqb2JqX3AgPSAmb2JqLT5nZW1fYmFzZTsKKwkqb2Jq
X3AgPSAmb2JqLT5iYXNlLmJhc2U7CiAKIAkvKiBkcm9wIHJlZmVyZW5jZSBmcm9tIGFsbG9jYXRl
IC0gaGFuZGxlIGhvbGRzIGl0IG5vdyAqLwotCWRybV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZCgm
b2JqLT5nZW1fYmFzZSk7CisJZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZvYmotPmJhc2Uu
YmFzZSk7CiAKIAkqaGFuZGxlX3AgPSBoYW5kbGU7CiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYyBiL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9pb2N0bC5jCmluZGV4IDk2ZWI5ZTU5YThjOC4uMWUyNWM2NTA4NzBjIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYwpAQCAtMjksNyArMjksNiBAQAog
I2luY2x1ZGUgPGxpbnV4L3N5bmNfZmlsZS5oPgogCiAjaW5jbHVkZSA8ZHJtL2RybV9maWxlLmg+
Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fZXhlY2J1Zl91dGlsLmg+CiAjaW5jbHVkZSA8ZHJtL3Zp
cnRncHVfZHJtLmg+CiAKICNpbmNsdWRlICJ2aXJ0Z3B1X2Rydi5oIgpAQCAtMjYxLDcgKzI2MCw3
IEBAIHN0YXRpYyBpbnQgdmlydGlvX2dwdV9yZXNvdXJjZV9jcmVhdGVfaW9jdGwoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAlkbWFfZmVuY2VfcHV0KCZmZW5jZS0+Zik7CiAJ
aWYgKElTX0VSUihxb2JqKSkKIAkJcmV0dXJuIFBUUl9FUlIocW9iaik7Ci0Jb2JqID0gJnFvYmot
PmdlbV9iYXNlOworCW9iaiA9ICZxb2JqLT5iYXNlLmJhc2U7CiAKIAlyZXQgPSBkcm1fZ2VtX2hh
bmRsZV9jcmVhdGUoZmlsZV9wcml2LCBvYmosICZoYW5kbGUpOwogCWlmIChyZXQpIHsKQEAgLTI4
OCw3ICsyODcsNyBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVfcmVzb3VyY2VfaW5mb19pb2N0bChz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCiAJcW9iaiA9IGdlbV90b192aXJ0
aW9fZ3B1X29iaihnb2JqKTsKIAotCXJpLT5zaXplID0gcW9iai0+Z2VtX2Jhc2Uuc2l6ZTsKKwly
aS0+c2l6ZSA9IHFvYmotPmJhc2UuYmFzZS5zaXplOwogCXJpLT5yZXNfaGFuZGxlID0gcW9iai0+
aHdfcmVzX2hhbmRsZTsKIAlkcm1fZ2VtX29iamVjdF9wdXRfdW5sb2NrZWQoZ29iaik7CiAJcmV0
dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMKaW5kZXggYzE5MDcwMmZhYjcy
Li4yMzFjNGUyN2IzYjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdw
dV9rbXMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMKQEAgLTE3
MywxMiArMTczLDYgQEAgaW50IHZpcnRpb19ncHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
KQogCQlnb3RvIGVycl92YnVmczsKIAl9CiAKLQlyZXQgPSB2aXJ0aW9fZ3B1X3R0bV9pbml0KHZn
ZGV2KTsKLQlpZiAocmV0KSB7Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIGluaXQgdHRtICVkXG4i
LCByZXQpOwotCQlnb3RvIGVycl90dG07Ci0JfQotCiAJLyogZ2V0IGRpc3BsYXkgaW5mbyAqLwog
CXZpcnRpb19jcmVhZCh2Z2Rldi0+dmRldiwgc3RydWN0IHZpcnRpb19ncHVfY29uZmlnLAogCQkg
ICAgIG51bV9zY2Fub3V0cywgJm51bV9zY2Fub3V0cyk7CkBAIC0yMTAsOCArMjA0LDYgQEAgaW50
IHZpcnRpb19ncHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXJldHVybiAwOwogCiBl
cnJfc2Nhbm91dHM6Ci0JdmlydGlvX2dwdV90dG1fZmluaSh2Z2Rldik7Ci1lcnJfdHRtOgogCXZp
cnRpb19ncHVfZnJlZV92YnVmcyh2Z2Rldik7CiBlcnJfdmJ1ZnM6CiAJdmdkZXYtPnZkZXYtPmNv
bmZpZy0+ZGVsX3Zxcyh2Z2Rldi0+dmRldik7CkBAIC0yNDIsNyArMjM0LDYgQEAgdm9pZCB2aXJ0
aW9fZ3B1X2RlaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXZnZGV2LT52ZGV2LT5jb25m
aWctPmRlbF92cXModmdkZXYtPnZkZXYpOwogCiAJdmlydGlvX2dwdV9tb2Rlc2V0X2Zpbmkodmdk
ZXYpOwotCXZpcnRpb19ncHVfdHRtX2ZpbmkodmdkZXYpOwogCXZpcnRpb19ncHVfZnJlZV92YnVm
cyh2Z2Rldik7CiAJdmlydGlvX2dwdV9jbGVhbnVwX2NhcF9jYWNoZSh2Z2Rldik7CiAJa2ZyZWUo
dmdkZXYtPmNhcHNldHMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0
Z3B1X29iamVjdC5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X29iamVjdC5jCmlu
ZGV4IDI5MDI0ODdmMDUxYS4uZmI5ZDA1YTY4ZjRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92
aXJ0Z3B1X29iamVjdC5jCkBAIC0yMyw4ICsyMyw2IEBACiAgKiBXSVRIIFRIRSBTT0ZUV0FSRSBP
UiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KICAqLwogCi0jaW5j
bHVkZSA8ZHJtL3R0bS90dG1fZXhlY2J1Zl91dGlsLmg+Ci0KICNpbmNsdWRlICJ2aXJ0Z3B1X2Ry
di5oIgogCiBzdGF0aWMgaW50IHZpcnRpb19ncHVfcmVzb3VyY2VfaWRfZ2V0KHN0cnVjdCB2aXJ0
aW9fZ3B1X2RldmljZSAqdmdkZXYsCkBAIC01NywzOSArNTUsNDUgQEAgc3RhdGljIHZvaWQgdmly
dGlvX2dwdV9yZXNvdXJjZV9pZF9wdXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldiwg
dWludDMyX3QKICNlbmRpZgogfQogCi1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3R0bV9ib19kZXN0
cm95KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqdGJvKQorc3RhdGljIHZvaWQgdmlydGlvX2dw
dV9mcmVlX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKIHsKLQlzdHJ1Y3Qgdmly
dGlvX2dwdV9vYmplY3QgKmJvOwotCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXY7Ci0K
LQlibyA9IGNvbnRhaW5lcl9vZih0Ym8sIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgdGJvKTsK
LQl2Z2RldiA9IChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKiliby0+Z2VtX2Jhc2UuZGV2LT5k
ZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvID0gZ2VtX3RvX3ZpcnRp
b19ncHVfb2JqKG9iaik7CisJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9IGJvLT5i
YXNlLmJhc2UuZGV2LT5kZXZfcHJpdmF0ZTsKIAorCWlmIChiby0+cGFnZXMpCisJCXZpcnRpb19n
cHVfb2JqZWN0X2RldGFjaCh2Z2RldiwgYm8pOwogCWlmIChiby0+Y3JlYXRlZCkKIAkJdmlydGlv
X2dwdV9jbWRfdW5yZWZfcmVzb3VyY2UodmdkZXYsIGJvLT5od19yZXNfaGFuZGxlKTsKLQlpZiAo
Ym8tPnBhZ2VzKQotCQl2aXJ0aW9fZ3B1X29iamVjdF9mcmVlX3NnX3RhYmxlKGJvKTsKLQlpZiAo
Ym8tPnZtYXApCi0JCXZpcnRpb19ncHVfb2JqZWN0X2t1bm1hcChibyk7Ci0JZHJtX2dlbV9vYmpl
Y3RfcmVsZWFzZSgmYm8tPmdlbV9iYXNlKTsKIAl2aXJ0aW9fZ3B1X3Jlc291cmNlX2lkX3B1dCh2
Z2RldiwgYm8tPmh3X3Jlc19oYW5kbGUpOwotCWtmcmVlKGJvKTsKKworCWRybV9nZW1fc2htZW1f
ZnJlZV9vYmplY3Qob2JqKTsKIH0KIAotc3RhdGljIHZvaWQgdmlydGlvX2dwdV9pbml0X3R0bV9w
bGFjZW1lbnQoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICp2Z2JvKQorc3RhdGljIGNvbnN0IHN0
cnVjdCBkcm1fZ2VtX29iamVjdF9mdW5jcyB2aXJ0aW9fZ3B1X2dlbV9mdW5jcyA9IHsKKwkuZnJl
ZSA9IHZpcnRpb19ncHVfZnJlZV9vYmplY3QsCisJLm9wZW4gPSB2aXJ0aW9fZ3B1X2dlbV9vYmpl
Y3Rfb3BlbiwKKwkuY2xvc2UgPSB2aXJ0aW9fZ3B1X2dlbV9vYmplY3RfY2xvc2UsCisKKwkucHJp
bnRfaW5mbyA9IGRybV9nZW1fc2htZW1fcHJpbnRfaW5mbywKKwkucGluID0gZHJtX2dlbV9zaG1l
bV9waW4sCisJLnVucGluID0gZHJtX2dlbV9zaG1lbV91bnBpbiwKKwkuZ2V0X3NnX3RhYmxlID0g
ZHJtX2dlbV9zaG1lbV9nZXRfc2dfdGFibGUsCisJLnZtYXAgPSBkcm1fZ2VtX3NobWVtX3ZtYXAs
CisJLnZ1bm1hcCA9IGRybV9nZW1fc2htZW1fdnVubWFwLAorCS52bV9vcHMgPSAmZHJtX2dlbV9z
aG1lbV92bV9vcHMsCit9OworCitzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKnZpcnRpb19ncHVfY3Jl
YXRlX29iamVjdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJCQkJc2l6ZV90IHNpemUpCiB7
Ci0JdTMyIGMgPSAxOworCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm87CiAKLQl2Z2JvLT5w
bGFjZW1lbnQucGxhY2VtZW50ID0gJnZnYm8tPnBsYWNlbWVudF9jb2RlOwotCXZnYm8tPnBsYWNl
bWVudC5idXN5X3BsYWNlbWVudCA9ICZ2Z2JvLT5wbGFjZW1lbnRfY29kZTsKLQl2Z2JvLT5wbGFj
ZW1lbnRfY29kZS5mcGZuID0gMDsKLQl2Z2JvLT5wbGFjZW1lbnRfY29kZS5scGZuID0gMDsKLQl2
Z2JvLT5wbGFjZW1lbnRfY29kZS5mbGFncyA9Ci0JCVRUTV9QTF9NQVNLX0NBQ0hJTkcgfCBUVE1f
UExfRkxBR19UVCB8Ci0JCVRUTV9QTF9GTEFHX05PX0VWSUNUOwotCXZnYm8tPnBsYWNlbWVudC5u
dW1fcGxhY2VtZW50ID0gYzsKLQl2Z2JvLT5wbGFjZW1lbnQubnVtX2J1c3lfcGxhY2VtZW50ID0g
YzsKKwlibyA9IGt6YWxsb2Moc2l6ZW9mKCpibyksIEdGUF9LRVJORUwpOworCWlmICghYm8pCisJ
CXJldHVybiBOVUxMOwogCisJYm8tPmJhc2UuYmFzZS5mdW5jcyA9ICZ2aXJ0aW9fZ3B1X2dlbV9m
dW5jczsKKwlyZXR1cm4gJmJvLT5iYXNlLmJhc2U7CiB9CiAKIGludCB2aXJ0aW9fZ3B1X29iamVj
dF9jcmVhdGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKQEAgLTk4LDI3ICsxMDIs
MjIgQEAgaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZp
Y2UgKnZnZGV2LAogCQkJICAgICBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqZmVuY2UpCiB7CiAJ
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0X2FycmF5ICpvYmpzID0gTlVMTDsKKwlzdHJ1Y3QgZHJt
X2dlbV9zaG1lbV9vYmplY3QgKnNobWVtX29iajsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Qg
KmJvOwotCXNpemVfdCBhY2Nfc2l6ZTsKIAlpbnQgcmV0OwogCiAJKmJvX3B0ciA9IE5VTEw7CiAK
LQlhY2Nfc2l6ZSA9IHR0bV9ib19kbWFfYWNjX3NpemUoJnZnZGV2LT5tbWFuLmJkZXYsIHBhcmFt
cy0+c2l6ZSwKLQkJCQkgICAgICAgc2l6ZW9mKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCkpOwor
CXBhcmFtcy0+c2l6ZSA9IHJvdW5kdXAocGFyYW1zLT5zaXplLCBQQUdFX1NJWkUpOworCXNobWVt
X29iaiA9IGRybV9nZW1fc2htZW1fY3JlYXRlKHZnZGV2LT5kZGV2LCBwYXJhbXMtPnNpemUpOwor
CWlmIChJU19FUlIoc2htZW1fb2JqKSkKKwkJcmV0dXJuIFBUUl9FUlIoc2htZW1fb2JqKTsKKwli
byA9IGdlbV90b192aXJ0aW9fZ3B1X29iaigmc2htZW1fb2JqLT5iYXNlKTsKIAotCWJvID0ga3ph
bGxvYyhzaXplb2Yoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KSwgR0ZQX0tFUk5FTCk7Ci0JaWYg
KGJvID09IE5VTEwpCi0JCXJldHVybiAtRU5PTUVNOwogCXJldCA9IHZpcnRpb19ncHVfcmVzb3Vy
Y2VfaWRfZ2V0KHZnZGV2LCAmYm8tPmh3X3Jlc19oYW5kbGUpOwogCWlmIChyZXQgPCAwKQogCQln
b3RvIGVycl9mcmVlX2dlbTsKIAotCXBhcmFtcy0+c2l6ZSA9IHJvdW5kdXAocGFyYW1zLT5zaXpl
LCBQQUdFX1NJWkUpOwotCXJldCA9IGRybV9nZW1fb2JqZWN0X2luaXQodmdkZXYtPmRkZXYsICZi
by0+Z2VtX2Jhc2UsIHBhcmFtcy0+c2l6ZSk7Ci0JaWYgKHJldCAhPSAwKQotCQlnb3RvIGVycl9w
dXRfaWQ7Ci0KIAliby0+ZHVtYiA9IHBhcmFtcy0+ZHVtYjsKIAogCWlmIChmZW5jZSkgewpAQCAt
MTI2LDcgKzEyNSw3IEBAIGludCB2aXJ0aW9fZ3B1X29iamVjdF9jcmVhdGUoc3RydWN0IHZpcnRp
b19ncHVfZGV2aWNlICp2Z2RldiwKIAkJb2JqcyA9IHZpcnRpb19ncHVfYXJyYXlfYWxsb2MoMSk7
CiAJCWlmICghb2JqcykKIAkJCWdvdG8gZXJyX3B1dF9pZDsKLQkJdmlydGlvX2dwdV9hcnJheV9h
ZGRfb2JqKG9ianMsICZiby0+Z2VtX2Jhc2UpOworCQl2aXJ0aW9fZ3B1X2FycmF5X2FkZF9vYmoo
b2JqcywgJmJvLT5iYXNlLmJhc2UpOwogCiAJCXJldCA9IHZpcnRpb19ncHVfYXJyYXlfbG9ja19y
ZXN2KG9ianMpOwogCQlpZiAocmV0ICE9IDApCkBAIC0xNDEsMTUgKzE0MCwxMSBAQCBpbnQgdmly
dGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJ
CQkJCSAgICAgICBvYmpzLCBmZW5jZSk7CiAJfQogCi0JdmlydGlvX2dwdV9pbml0X3R0bV9wbGFj
ZW1lbnQoYm8pOwotCXJldCA9IHR0bV9ib19pbml0KCZ2Z2Rldi0+bW1hbi5iZGV2LCAmYm8tPnRi
bywgcGFyYW1zLT5zaXplLAotCQkJICB0dG1fYm9fdHlwZV9kZXZpY2UsICZiby0+cGxhY2VtZW50
LCAwLAotCQkJICB0cnVlLCBhY2Nfc2l6ZSwgTlVMTCwKLQkJCSAgYm8tPmdlbV9iYXNlLnJlc3Ys
Ci0JCQkgICZ2aXJ0aW9fZ3B1X3R0bV9ib19kZXN0cm95KTsKLQkvKiB0dG1fYm9faW5pdCBmYWls
dXJlIHdpbGwgY2FsbCB0aGUgZGVzdHJveSAqLwotCWlmIChyZXQgIT0gMCkKKwlyZXQgPSB2aXJ0
aW9fZ3B1X29iamVjdF9hdHRhY2godmdkZXYsIGJvLCBOVUxMKTsKKwlpZiAocmV0ICE9IDApIHsK
KwkJdmlydGlvX2dwdV9mcmVlX29iamVjdCgmc2htZW1fb2JqLT5iYXNlKTsKIAkJcmV0dXJuIHJl
dDsKKwl9CiAKIAkqYm9fcHRyID0gYm87CiAJcmV0dXJuIDA7CkBAIC0xNTksNjUgKzE1NCw2IEBA
IGludCB2aXJ0aW9fZ3B1X29iamVjdF9jcmVhdGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2
Z2RldiwKIGVycl9wdXRfaWQ6CiAJdmlydGlvX2dwdV9yZXNvdXJjZV9pZF9wdXQodmdkZXYsIGJv
LT5od19yZXNfaGFuZGxlKTsKIGVycl9mcmVlX2dlbToKLQlrZnJlZShibyk7CisJZHJtX2dlbV9z
aG1lbV9mcmVlX29iamVjdCgmc2htZW1fb2JqLT5iYXNlKTsKIAlyZXR1cm4gcmV0OwogfQotCi12
b2lkIHZpcnRpb19ncHVfb2JqZWN0X2t1bm1hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJv
KQotewotCWJvLT52bWFwID0gTlVMTDsKLQl0dG1fYm9fa3VubWFwKCZiby0+a21hcCk7Ci19Ci0K
LWludCB2aXJ0aW9fZ3B1X29iamVjdF9rbWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8p
Ci17Ci0JYm9vbCBpc19pb21lbTsKLQlpbnQgcjsKLQotCVdBUk5fT04oYm8tPnZtYXApOwotCi0J
ciA9IHR0bV9ib19rbWFwKCZiby0+dGJvLCAwLCBiby0+dGJvLm51bV9wYWdlcywgJmJvLT5rbWFw
KTsKLQlpZiAocikKLQkJcmV0dXJuIHI7Ci0JYm8tPnZtYXAgPSB0dG1fa21hcF9vYmpfdmlydHVh
bCgmYm8tPmttYXAsICZpc19pb21lbSk7Ci0JcmV0dXJuIDA7Ci19Ci0KLWludCB2aXJ0aW9fZ3B1
X29iamVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2LAotCQkJ
CSAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JaW50IHJldDsKLQlzdHJ1Y3Qg
cGFnZSAqKnBhZ2VzID0gYm8tPnRiby50dG0tPnBhZ2VzOwotCWludCBucl9wYWdlcyA9IGJvLT50
Ym8ubnVtX3BhZ2VzOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7Ci0JCS5pbnRl
cnJ1cHRpYmxlID0gZmFsc2UsCi0JCS5ub193YWl0X2dwdSA9IGZhbHNlCi0JfTsKLQotCS8qIHd0
ZiBzd2FwcGluZyAqLwotCWlmIChiby0+cGFnZXMpCi0JCXJldHVybiAwOwotCi0JaWYgKGJvLT50
Ym8udHRtLT5zdGF0ZSA9PSB0dF91bnBvcHVsYXRlZCkKLQkJYm8tPnRiby50dG0tPmJkZXYtPmRy
aXZlci0+dHRtX3R0X3BvcHVsYXRlKGJvLT50Ym8udHRtLCAmY3R4KTsKLQliby0+cGFnZXMgPSBr
bWFsbG9jKHNpemVvZihzdHJ1Y3Qgc2dfdGFibGUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWJvLT5w
YWdlcykKLQkJZ290byBvdXQ7Ci0KLQlyZXQgPSBzZ19hbGxvY190YWJsZV9mcm9tX3BhZ2VzKGJv
LT5wYWdlcywgcGFnZXMsIG5yX3BhZ2VzLCAwLAotCQkJCQlucl9wYWdlcyA8PCBQQUdFX1NISUZU
LCBHRlBfS0VSTkVMKTsKLQlpZiAocmV0KQotCQlnb3RvIG91dDsKLQlyZXR1cm4gMDsKLW91dDoK
LQlrZnJlZShiby0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci0JcmV0dXJuIC1FTk9NRU07
Ci19Ci0KLXZvaWQgdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1Y3QgdmlydGlv
X2dwdV9vYmplY3QgKmJvKQotewotCXNnX2ZyZWVfdGFibGUoYm8tPnBhZ2VzKTsKLQlrZnJlZShi
by0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci19CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmly
dGdwdV9wcmltZS5jCmluZGV4IGRjNjQyYTg4NGI4OC4uMDUwZDI0YzM5YThmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYwpAQCAtMzAsNDMgKzMwLDkgQEAKICAqIGRldmlj
ZSB0aGF0IG1pZ2h0IHNoYXJlIGJ1ZmZlcnMgd2l0aCB2aXJ0Z3B1CiAgKi8KIAotc3RydWN0IHNn
X3RhYmxlICp2aXJ0Z3B1X2dlbV9wcmltZV9nZXRfc2dfdGFibGUoc3RydWN0IGRybV9nZW1fb2Jq
ZWN0ICpvYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192aXJ0
aW9fZ3B1X29iaihvYmopOwotCi0JaWYgKCFiby0+dGJvLnR0bS0+cGFnZXMgfHwgIWJvLT50Ym8u
dHRtLT5udW1fcGFnZXMpCi0JCS8qIHNob3VsZCBub3QgaGFwcGVuICovCi0JCXJldHVybiBFUlJf
UFRSKC1FSU5WQUwpOwotCi0JcmV0dXJuIGRybV9wcmltZV9wYWdlc190b19zZyhiby0+dGJvLnR0
bS0+cGFnZXMsCi0JCQkJICAgICBiby0+dGJvLnR0bS0+bnVtX3BhZ2VzKTsKLX0KLQogc3RydWN0
IGRybV9nZW1fb2JqZWN0ICp2aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUoCiAJc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoLAog
CXN0cnVjdCBzZ190YWJsZSAqdGFibGUpCiB7CiAJcmV0dXJuIEVSUl9QVFIoLUVOT0RFVik7CiB9
Ci0KLXZvaWQgKnZpcnRncHVfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpv
YmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192aXJ0aW9fZ3B1
X29iaihvYmopOwotCWludCByZXQ7Ci0KLQlyZXQgPSB2aXJ0aW9fZ3B1X29iamVjdF9rbWFwKGJv
KTsKLQlpZiAocmV0KQotCQlyZXR1cm4gTlVMTDsKLQlyZXR1cm4gYm8tPnZtYXA7Ci19Ci0KLXZv
aWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCB2
b2lkICp2YWRkcikKLXsKLQl2aXJ0aW9fZ3B1X29iamVjdF9rdW5tYXAoZ2VtX3RvX3ZpcnRpb19n
cHVfb2JqKG9iaikpOwotfQotCi1pbnQgdmlydGdwdV9nZW1fcHJpbWVfbW1hcChzdHJ1Y3QgZHJt
X2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQotewot
CXJldHVybiBkcm1fZ2VtX3ByaW1lX21tYXAob2JqLCB2bWEpOwotfQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRp
by92aXJ0Z3B1X3R0bS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCBmODc5MDM2NDE4
NDcuLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdHRt
LmMKKysrIC9kZXYvbnVsbApAQCAtMSwzMDUgKzAsMCBAQAotLyoKLSAqIENvcHlyaWdodCAoQykg
MjAxNSBSZWQgSGF0LCBJbmMuCi0gKiBBbGwgUmlnaHRzIFJlc2VydmVkLgotICoKLSAqIEF1dGhv
cnM6Ci0gKiAgICBEYXZlIEFpcmxpZQotICogICAgQWxvbiBMZXZ5Ci0gKgotICogUGVybWlzc2lv
biBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWlu
aW5nIGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0
aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCi0gKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3
aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCi0gKiB0aGUg
cmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwg
c3VibGljZW5zZSwKLSAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0
byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQotICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRv
IGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKLSAqCi0gKiBUaGUg
YWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBi
ZSBpbmNsdWRlZCBpbgotICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0
aGUgU29mdHdhcmUuCi0gKgotICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJ
VEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKLSAqIElNUExJRUQsIElOQ0xV
RElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZ
LAotICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVO
VC4gIElOIE5PIEVWRU5UIFNIQUxMCi0gKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRI
T1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKLSAqIE9USEVSIExJQUJJ
TElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNF
LAotICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZU
V0FSRSBPUiBUSEUgVVNFIE9SCi0gKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCi0g
Ki8KLQotI2luY2x1ZGUgPGxpbnV4L2RlbGF5Lmg+Ci0KLSNpbmNsdWRlIDxkcm0vZHJtLmg+Ci0j
aW5jbHVkZSA8ZHJtL2RybV9maWxlLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fYXBpLmg+
Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fZHJpdmVyLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90
dG1fbW9kdWxlLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fcGFnZV9hbGxvYy5oPgotI2luY2x1
ZGUgPGRybS90dG0vdHRtX3BsYWNlbWVudC5oPgotI2luY2x1ZGUgPGRybS92aXJ0Z3B1X2RybS5o
PgotCi0jaW5jbHVkZSAidmlydGdwdV9kcnYuaCIKLQotc3RhdGljIHN0cnVjdAotdmlydGlvX2dw
dV9kZXZpY2UgKnZpcnRpb19ncHVfZ2V0X3ZnZGV2KHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2
KQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gKm1tYW47Ci0Jc3RydWN0IHZpcnRpb19ncHVf
ZGV2aWNlICp2Z2RldjsKLQotCW1tYW4gPSBjb250YWluZXJfb2YoYmRldiwgc3RydWN0IHZpcnRp
b19ncHVfbW1hbiwgYmRldik7Ci0JdmdkZXYgPSBjb250YWluZXJfb2YobW1hbiwgc3RydWN0IHZp
cnRpb19ncHVfZGV2aWNlLCBtbWFuKTsKLQlyZXR1cm4gdmdkZXY7Ci19Ci0KLWludCB2aXJ0aW9f
Z3B1X21tYXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQot
ewotCXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2OwotCXN0cnVjdCB2aXJ0aW9fZ3B1X2Rldmlj
ZSAqdmdkZXY7Ci0JaW50IHI7Ci0KLQlmaWxlX3ByaXYgPSBmaWxwLT5wcml2YXRlX2RhdGE7Ci0J
dmdkZXYgPSBmaWxlX3ByaXYtPm1pbm9yLT5kZXYtPmRldl9wcml2YXRlOwotCWlmICh2Z2RldiA9
PSBOVUxMKSB7Ci0JCURSTV9FUlJPUigKLQkJICJmaWxwLT5wcml2YXRlX2RhdGEtPm1pbm9yLT5k
ZXYtPmRldl9wcml2YXRlID09IE5VTExcbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JciA9
IHR0bV9ib19tbWFwKGZpbHAsIHZtYSwgJnZnZGV2LT5tbWFuLmJkZXYpOwotCi0JcmV0dXJuIHI7
Ci19Ci0KLXN0YXRpYyBpbnQgdmlydGlvX2dwdV9pbnZhbGlkYXRlX2NhY2hlcyhzdHJ1Y3QgdHRt
X2JvX2RldmljZSAqYmRldiwKLQkJCQkJdWludDMyX3QgZmxhZ3MpCi17Ci0JcmV0dXJuIDA7Ci19
Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl9nZXRfbm9kZShzdHJ1Y3QgdHRtX21lbV90eXBlX21h
bmFnZXIgKm1hbiwKLQkJCSAgICAgICBzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJ
ICAgICAgIGNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAotCQkJICAgICAgIHN0cnVjdCB0
dG1fbWVtX3JlZyAqbWVtKQotewotCW1lbS0+bW1fbm9kZSA9ICh2b2lkICopMTsKLQlyZXR1cm4g
MDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9wdXRfbm9kZShzdHJ1Y3QgdHRtX21lbV90
eXBlX21hbmFnZXIgKm1hbiwKLQkJCQlzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsKLQltZW0t
Pm1tX25vZGUgPSAodm9pZCAqKU5VTEw7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl9pbml0
KHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuLAotCQkJICAgdW5zaWduZWQgbG9uZyBw
X3NpemUpCi17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl90YWtlZG93
bihzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbikKLXsKLQlyZXR1cm4gMDsKLX0KLQot
c3RhdGljIHZvaWQgdHRtX2JvX21hbl9kZWJ1ZyhzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIg
Km1hbiwKLQkJCSAgICAgc3RydWN0IGRybV9wcmludGVyICpwcmludGVyKQotewotfQotCi1zdGF0
aWMgY29uc3Qgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyX2Z1bmMgdmlydGlvX2dwdV9ib19t
YW5hZ2VyX2Z1bmMgPSB7Ci0JLmluaXQgPSB0dG1fYm9fbWFuX2luaXQsCi0JLnRha2Vkb3duID0g
dHRtX2JvX21hbl90YWtlZG93biwKLQkuZ2V0X25vZGUgPSB0dG1fYm9fbWFuX2dldF9ub2RlLAot
CS5wdXRfbm9kZSA9IHR0bV9ib19tYW5fcHV0X25vZGUsCi0JLmRlYnVnID0gdHRtX2JvX21hbl9k
ZWJ1ZwotfTsKLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X2luaXRfbWVtX3R5cGUoc3RydWN0IHR0
bV9ib19kZXZpY2UgKmJkZXYsIHVpbnQzMl90IHR5cGUsCi0JCQkJICAgIHN0cnVjdCB0dG1fbWVt
X3R5cGVfbWFuYWdlciAqbWFuKQotewotCXN3aXRjaCAodHlwZSkgewotCWNhc2UgVFRNX1BMX1NZ
U1RFTToKLQkJLyogU3lzdGVtIG1lbW9yeSAqLwotCQltYW4tPmZsYWdzID0gVFRNX01FTVRZUEVf
RkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9NQVNLX0NB
Q0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVEOwotCQli
cmVhazsKLQljYXNlIFRUTV9QTF9UVDoKLQkJbWFuLT5mdW5jID0gJnZpcnRpb19ncHVfYm9fbWFu
YWdlcl9mdW5jOwotCQltYW4tPmZsYWdzID0gVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJ
bWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVm
YXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVEOwotCQlicmVhazsKLQlkZWZhdWx0Ogot
CQlEUk1fRVJST1IoIlVuc3VwcG9ydGVkIG1lbW9yeSB0eXBlICV1XG4iLCAodW5zaWduZWQgaW50
KXR5cGUpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2
b2lkIHZpcnRpb19ncHVfZXZpY3RfZmxhZ3Moc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywK
LQkJCQlzdHJ1Y3QgdHRtX3BsYWNlbWVudCAqcGxhY2VtZW50KQotewotCXN0YXRpYyBjb25zdCBz
dHJ1Y3QgdHRtX3BsYWNlIHBsYWNlbWVudHMgPSB7Ci0JCS5mcGZuICA9IDAsCi0JCS5scGZuICA9
IDAsCi0JCS5mbGFncyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkcgfCBUVE1fUExfRkxBR19TWVNURU0s
Ci0JfTsKLQotCXBsYWNlbWVudC0+cGxhY2VtZW50ID0gJnBsYWNlbWVudHM7Ci0JcGxhY2VtZW50
LT5idXN5X3BsYWNlbWVudCA9ICZwbGFjZW1lbnRzOwotCXBsYWNlbWVudC0+bnVtX3BsYWNlbWVu
dCA9IDE7Ci0JcGxhY2VtZW50LT5udW1fYnVzeV9wbGFjZW1lbnQgPSAxOwotfQotCi1zdGF0aWMg
aW50IHZpcnRpb19ncHVfdmVyaWZ5X2FjY2VzcyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJv
LAotCQkJCSAgICBzdHJ1Y3QgZmlsZSAqZmlscCkKLXsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGlj
IGludCB2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fcmVzZXJ2ZShzdHJ1Y3QgdHRtX2JvX2RldmljZSAq
YmRldiwKLQkJCQkJIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCXN0cnVjdCB0dG1fbWVt
X3R5cGVfbWFuYWdlciAqbWFuID0gJmJkZXYtPm1hblttZW0tPm1lbV90eXBlXTsKLQotCW1lbS0+
YnVzLmFkZHIgPSBOVUxMOwotCW1lbS0+YnVzLm9mZnNldCA9IDA7Ci0JbWVtLT5idXMuc2l6ZSA9
IG1lbS0+bnVtX3BhZ2VzIDw8IFBBR0VfU0hJRlQ7Ci0JbWVtLT5idXMuYmFzZSA9IDA7Ci0JbWVt
LT5idXMuaXNfaW9tZW0gPSBmYWxzZTsKLQlpZiAoIShtYW4tPmZsYWdzICYgVFRNX01FTVRZUEVf
RkxBR19NQVBQQUJMRSkpCi0JCXJldHVybiAtRUlOVkFMOwotCXN3aXRjaCAobWVtLT5tZW1fdHlw
ZSkgewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQljYXNlIFRUTV9QTF9UVDoKLQkJLyogc3lzdGVt
IG1lbW9yeSAqLwotCQlyZXR1cm4gMDsKLQlkZWZhdWx0OgotCQlyZXR1cm4gLUVJTlZBTDsKLQl9
Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfdHRtX2lvX21lbV9mcmVl
KHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJCSAgICAgICBzdHJ1Y3QgdHRtX21lbV9y
ZWcgKm1lbSkKLXsKLX0KLQotLyoKLSAqIFRUTSBiYWNrZW5kIGZ1bmN0aW9ucy4KLSAqLwotc3Ry
dWN0IHZpcnRpb19ncHVfdHRtX3R0IHsKLQlzdHJ1Y3QgdHRtX2RtYV90dAkJdHRtOwotCXN0cnVj
dCB2aXJ0aW9fZ3B1X29iamVjdCAgICAgICAgKm9iajsKLX07Ci0KLXN0YXRpYyBpbnQgdmlydGlv
X2dwdV90dG1fdHRfYmluZChzdHJ1Y3QgdHRtX3R0ICp0dG0sCi0JCQkJICBzdHJ1Y3QgdHRtX21l
bV9yZWcgKmJvX21lbSkKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNv
bnRhaW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7Ci0Jc3Ry
dWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9Ci0JCXZpcnRpb19ncHVfZ2V0X3ZnZGV2KGd0
dC0+b2JqLT50Ym8uYmRldik7Ci0KLQl2aXJ0aW9fZ3B1X29iamVjdF9hdHRhY2godmdkZXYsIGd0
dC0+b2JqLCBOVUxMKTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X3R0
bV90dF91bmJpbmQoc3RydWN0IHR0bV90dCAqdHRtKQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X3R0
bV90dCAqZ3R0ID0KLQkJY29udGFpbmVyX29mKHR0bSwgc3RydWN0IHZpcnRpb19ncHVfdHRtX3R0
LCB0dG0udHRtKTsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0KLQkJdmlydGlv
X2dwdV9nZXRfdmdkZXYoZ3R0LT5vYmotPnRiby5iZGV2KTsKLQotCXZpcnRpb19ncHVfb2JqZWN0
X2RldGFjaCh2Z2RldiwgZ3R0LT5vYmopOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMgdm9pZCB2
aXJ0aW9fZ3B1X3R0bV90dF9kZXN0cm95KHN0cnVjdCB0dG1fdHQgKnR0bSkKLXsKLQlzdHJ1Y3Qg
dmlydGlvX2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNvbnRhaW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0
aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7Ci0KLQl0dG1fZG1hX3R0X2ZpbmkoJmd0dC0+dHRtKTsK
LQlrZnJlZShndHQpOwotfQotCi1zdGF0aWMgc3RydWN0IHR0bV9iYWNrZW5kX2Z1bmMgdmlydGlv
X2dwdV90dF9mdW5jID0gewotCS5iaW5kID0gJnZpcnRpb19ncHVfdHRtX3R0X2JpbmQsCi0JLnVu
YmluZCA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQsCi0JLmRlc3Ryb3kgPSAmdmlydGlvX2dw
dV90dG1fdHRfZGVzdHJveSwKLX07Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX3R0ICp2aXJ0aW9fZ3B1
X3R0bV90dF9jcmVhdGUoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKLQkJCQkJICAgICAg
IHVpbnQzMl90IHBhZ2VfZmxhZ3MpCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rl
djsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dDsKLQotCXZnZGV2ID0gdmlydGlvX2dw
dV9nZXRfdmdkZXYoYm8tPmJkZXYpOwotCWd0dCA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCB2aXJ0
aW9fZ3B1X3R0bV90dCksIEdGUF9LRVJORUwpOwotCWlmIChndHQgPT0gTlVMTCkKLQkJcmV0dXJu
IE5VTEw7Ci0JZ3R0LT50dG0udHRtLmZ1bmMgPSAmdmlydGlvX2dwdV90dF9mdW5jOwotCWd0dC0+
b2JqID0gY29udGFpbmVyX29mKGJvLCBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QsIHRibyk7Ci0J
aWYgKHR0bV9kbWFfdHRfaW5pdCgmZ3R0LT50dG0sIGJvLCBwYWdlX2ZsYWdzKSkgewotCQlrZnJl
ZShndHQpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0JcmV0dXJuICZndHQtPnR0bS50dG07Ci19Ci0K
LXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfYm9fc3dhcF9ub3RpZnkoc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICp0Ym8pCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibzsKLQotCWJvID0g
Y29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCB0Ym8pOwotCi0JaWYg
KGJvLT5wYWdlcykKLQkJdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShibyk7Ci19Ci0K
LXN0YXRpYyBzdHJ1Y3QgdHRtX2JvX2RyaXZlciB2aXJ0aW9fZ3B1X2JvX2RyaXZlciA9IHsKLQku
dHRtX3R0X2NyZWF0ZSA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF9jcmVhdGUsCi0JLmludmFsaWRhdGVf
Y2FjaGVzID0gJnZpcnRpb19ncHVfaW52YWxpZGF0ZV9jYWNoZXMsCi0JLmluaXRfbWVtX3R5cGUg
PSAmdmlydGlvX2dwdV9pbml0X21lbV90eXBlLAotCS5ldmljdGlvbl92YWx1YWJsZSA9IHR0bV9i
b19ldmljdGlvbl92YWx1YWJsZSwKLQkuZXZpY3RfZmxhZ3MgPSAmdmlydGlvX2dwdV9ldmljdF9m
bGFncywKLQkudmVyaWZ5X2FjY2VzcyA9ICZ2aXJ0aW9fZ3B1X3ZlcmlmeV9hY2Nlc3MsCi0JLmlv
X21lbV9yZXNlcnZlID0gJnZpcnRpb19ncHVfdHRtX2lvX21lbV9yZXNlcnZlLAotCS5pb19tZW1f
ZnJlZSA9ICZ2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fZnJlZSwKLQkuc3dhcF9ub3RpZnkgPSAmdmly
dGlvX2dwdV9ib19zd2FwX25vdGlmeSwKLX07Ci0KLWludCB2aXJ0aW9fZ3B1X3R0bV9pbml0KHN0
cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpCi17Ci0JaW50IHI7Ci0KLQkvKiBObyBvdGhl
cnMgdXNlciBvZiBhZGRyZXNzIHNwYWNlIHNvIHNldCBpdCB0byAwICovCi0JciA9IHR0bV9ib19k
ZXZpY2VfaW5pdCgmdmdkZXYtPm1tYW4uYmRldiwKLQkJCSAgICAgICAmdmlydGlvX2dwdV9ib19k
cml2ZXIsCi0JCQkgICAgICAgdmdkZXYtPmRkZXYtPmFub25faW5vZGUtPmlfbWFwcGluZywKLQkJ
CSAgICAgICBmYWxzZSk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJmYWlsZWQgaW5pdGlhbGl6
aW5nIGJ1ZmZlciBvYmplY3QgZHJpdmVyKCVkKS5cbiIsIHIpOwotCQlnb3RvIGVycl9kZXZfaW5p
dDsKLQl9Ci0KLQlyID0gdHRtX2JvX2luaXRfbW0oJnZnZGV2LT5tbWFuLmJkZXYsIFRUTV9QTF9U
VCwgMCk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJGYWlsZWQgaW5pdGlhbGl6aW5nIEdUVCBo
ZWFwLlxuIik7Ci0JCWdvdG8gZXJyX21tX2luaXQ7Ci0JfQotCXJldHVybiAwOwotCi1lcnJfbW1f
aW5pdDoKLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZnZGV2LT5tbWFuLmJkZXYpOwotZXJyX2Rl
dl9pbml0OgotCXJldHVybiByOwotfQotCi12b2lkIHZpcnRpb19ncHVfdHRtX2Zpbmkoc3RydWN0
IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldikKLXsKLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZn
ZGV2LT5tbWFuLmJkZXYpOwotCURSTV9JTkZPKCJ2aXJ0aW9fZ3B1OiB0dG0gZmluYWxpemVkXG4i
KTsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jIGIv
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMKaW5kZXggN2EzMTZlOTJjNzgzLi40
ZWNiMzc2YmQ3NWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92
cS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jCkBAIC05OTMsMTcg
Kzk5MywyMSBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfYXR0YWNoKHN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXYsCiAJYm9vbCB1c2VfZG1hX2FwaSA9ICF2aXJ0aW9faGFzX2lvbW11X3F1
aXJrKHZnZGV2LT52ZGV2KTsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9tZW1fZW50cnkgKmVudHM7CiAJ
c3RydWN0IHNjYXR0ZXJsaXN0ICpzZzsKLQlpbnQgc2ksIG5lbnRzOworCWludCBzaSwgbmVudHMs
IHJldDsKIAogCWlmIChXQVJOX09OX09OQ0UoIW9iai0+Y3JlYXRlZCkpCiAJCXJldHVybiAtRUlO
VkFMOworCWlmIChXQVJOX09OX09OQ0Uob2JqLT5wYWdlcykpCisJCXJldHVybiAtRUlOVkFMOwog
Ci0JaWYgKCFvYmotPnBhZ2VzKSB7Ci0JCWludCByZXQ7CisJcmV0ID0gZHJtX2dlbV9zaG1lbV9w
aW4oJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0dXJuIC1FSU5WQUw7CiAK
LQkJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfZ2V0X3NnX3RhYmxlKHZnZGV2LCBvYmopOwotCQlp
ZiAocmV0KQotCQkJcmV0dXJuIHJldDsKKwlvYmotPnBhZ2VzID0gZHJtX2dlbV9zaG1lbV9nZXRf
c2dfdGFibGUoJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAob2JqLT5wYWdlcyA9PSBOVUxMKSB7CisJ
CWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKKwkJcmV0dXJuIC1FSU5WQUw7
CiAJfQogCiAJaWYgKHVzZV9kbWFfYXBpKSB7CkBAIC0xMDQyLDYgKzEwNDYsOSBAQCB2b2lkIHZp
cnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAog
ewogCWJvb2wgdXNlX2RtYV9hcGkgPSAhdmlydGlvX2hhc19pb21tdV9xdWlyayh2Z2Rldi0+dmRl
dik7CiAKKwlpZiAoV0FSTl9PTl9PTkNFKCFvYmotPnBhZ2VzKSkKKwkJcmV0dXJuOworCiAJaWYg
KHVzZV9kbWFfYXBpICYmIG9iai0+bWFwcGVkKSB7CiAJCXN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNl
ICpmZW5jZSA9IHZpcnRpb19ncHVfZmVuY2VfYWxsb2ModmdkZXYpOwogCQkvKiBkZXRhY2ggYmFj
a2luZyBhbmQgd2FpdCBmb3IgdGhlIGhvc3QgcHJvY2VzcyBpdCAuLi4gKi8KQEAgLTEwNTcsNiAr
MTA2NCwxMSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3QgdmlydGlvX2dw
dV9kZXZpY2UgKnZnZGV2LAogCX0gZWxzZSB7CiAJCXZpcnRpb19ncHVfY21kX3Jlc291cmNlX2lu
dmFsX2JhY2tpbmcodmdkZXYsIG9iai0+aHdfcmVzX2hhbmRsZSwgTlVMTCk7CiAJfQorCisJc2df
ZnJlZV90YWJsZShvYmotPnBhZ2VzKTsKKwlvYmotPnBhZ2VzID0gTlVMTDsKKworCWRybV9nZW1f
c2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKIH0KIAogdm9pZCB2aXJ0aW9fZ3B1X2N1cnNv
cl9waW5nKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25m
aWcKaW5kZXggYmEzNmU5MzNiYjQ5Li5lZmYzMDQ3MDUyZDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS92aXJ0aW8vS2NvbmZpZworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25m
aWcKQEAgLTMsNyArMyw3IEBAIGNvbmZpZyBEUk1fVklSVElPX0dQVQogCXRyaXN0YXRlICJWaXJ0
aW8gR1BVIGRyaXZlciIKIAlkZXBlbmRzIG9uIERSTSAmJiBWSVJUSU8gJiYgTU1VCiAJc2VsZWN0
IERSTV9LTVNfSEVMUEVSCi0Jc2VsZWN0IERSTV9UVE0KKwlzZWxlY3QgRFJNX0dFTV9TSE1FTV9I
RUxQRVIKIAloZWxwCiAJICAgVGhpcyBpcyB0aGUgdmlydHVhbCBHUFUgZHJpdmVyIGZvciB2aXJ0
aW8uICBJdCBjYW4gYmUgdXNlZCB3aXRoCiAJICAgUUVNVSBiYXNlZCBWTU1zIChsaWtlIEtWTSBv
ciBYZW4pLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZSBiL2Ry
aXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUKaW5kZXggNDU4ZTYwNmE5MzZmLi45MmFhMmIz
ZDM0OWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQpAQCAtNCw3ICs0LDcgQEAKICMgRGlyZWN0
IFJlbmRlcmluZyBJbmZyYXN0cnVjdHVyZSAoRFJJKSBpbiBYRnJlZTg2IDQuMS4wIGFuZCBoaWdo
ZXIuCiAKIHZpcnRpby1ncHUteSA6PSB2aXJ0Z3B1X2Rydi5vIHZpcnRncHVfa21zLm8gdmlydGdw
dV9nZW0ubyBcCi0JdmlydGdwdV9kaXNwbGF5Lm8gdmlydGdwdV92cS5vIHZpcnRncHVfdHRtLm8g
XAorCXZpcnRncHVfZGlzcGxheS5vIHZpcnRncHVfdnEubyBcCiAJdmlydGdwdV9mZW5jZS5vIHZp
cnRncHVfb2JqZWN0Lm8gdmlydGdwdV9kZWJ1Z2ZzLm8gdmlydGdwdV9wbGFuZS5vIFwKIAl2aXJ0
Z3B1X2lvY3RsLm8gdmlydGdwdV9wcmltZS5vIHZpcnRncHVfdHJhY2VfcG9pbnRzLm8KIAotLSAK
Mi4xOC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpk
cmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
