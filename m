Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E003325A6B5
	for <lists+dri-devel@lfdr.de>; Wed,  2 Sep 2020 09:26:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8D0866E918;
	Wed,  2 Sep 2020 07:26:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-wr1-x444.google.com (mail-wr1-x444.google.com
 [IPv6:2a00:1450:4864:20::444])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 980B86E149
 for <dri-devel@lists.freedesktop.org>; Wed,  2 Sep 2020 07:26:37 +0000 (UTC)
Received: by mail-wr1-x444.google.com with SMTP id o5so4041990wrn.13
 for <dri-devel@lists.freedesktop.org>; Wed, 02 Sep 2020 00:26:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ffwll.ch; s=google;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=19Z3MQi86+vqK9BDPT2Hka2gEGhBTOatvnDf4JmJluU=;
 b=eNhpOPajgSaAPNYX4VHise64deBQXmLaIn7Le66eV3ZI6pVna3+42dKsoijoiICtwk
 Srjnt7toDZmXDxXqiQm+wDDSGHdRaDA7YR8+SHgDZDLxb6gmnZsiGijii8NTREzGotRM
 XHaPUXTVDUkgCtodXD0XDDo27LXaPKc/aNP88=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=19Z3MQi86+vqK9BDPT2Hka2gEGhBTOatvnDf4JmJluU=;
 b=dnUr8ezr9cCblHR57RUeKUGWtzhQIEGbNNRPIe28Sba1Ok8yos09MO0sjao+PSSHis
 9W5RUlefo6usLY16LsnLn0KlI+RMPoZRgQBDt4VlSaIaaK57N8gzK4c0d56uUzpziNFc
 9yzlhTG799mt3cOibJ0SH4pRSG8b8A1DP5jXv/+cGDwT8qsTJdUzAx4WePDero+aeDtJ
 Gf7N3X4d/nj00Jq99f4aEL4HRNQkPVmt5J7zwRHX7ckGG10upoOkU/5Gs5g85CWl8RNI
 etxAfwOJSWdYBgXGRgJiyIaEkgz3NdXbR1M4Vv0la7HlWWTGjzSZybeVLNBulQkO47Wx
 qPNg==
X-Gm-Message-State: AOAM533M7zxtBXrIcXamhujBy5WI+AdlwvVbz6RdyJdCtsawDoKC1CF1
 5NTpG0AGd5SO75R3qzzc9ruxtgwY7yoT1h1N
X-Google-Smtp-Source: ABdhPJzNYeFRcou96HQORsA9PUpLyvWAD+rGye0oF2N85C6xrs0KrlkzIKHX9pchwxH7Dzmn0a1V1Q==
X-Received: by 2002:adf:9ec5:: with SMTP id b5mr5456823wrf.190.1599031595804; 
 Wed, 02 Sep 2020 00:26:35 -0700 (PDT)
Received: from phenom.ffwll.local ([2a02:168:57f4:0:efd0:b9e5:5ae6:c2fa])
 by smtp.gmail.com with ESMTPSA id n4sm5522699wrp.61.2020.09.02.00.26.34
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 02 Sep 2020 00:26:34 -0700 (PDT)
From: Daniel Vetter <daniel.vetter@ffwll.ch>
To: DRI Development <dri-devel@lists.freedesktop.org>
Subject: [PATCH] drm/managed: Cleanup of unused functions and polishing docs
Date: Wed,  2 Sep 2020 09:26:27 +0200
Message-Id: <20200902072627.3617301-1-daniel.vetter@ffwll.ch>
X-Mailer: git-send-email 2.28.0
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Luben Tuikov <luben.tuikov@amd.com>, Daniel Vetter <daniel.vetter@ffwll.ch>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 amd-gfx@lists.freedesktop.org, Daniel Vetter <daniel.vetter@intel.com>,
 Sam Ravnborg <sam@ravnborg.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

Rm9sbG93aW5nIGZ1bmN0aW9ucyBhcmUgb25seSB1c2VkIGludGVybmFsbHksIG5vdCBieSBkcml2
ZXJzOgotIGRldm1fZHJtX2Rldl9pbml0CgpBbHNvLCBub3cgdGhhdCB3ZSBoYXZlIGEgdmVyeSBz
bGljayBhbmQgcG9saXNoZWQgd2F5IHRvIGFsbG9jYXRlIGEKZHJtX2RldmljZSB3aXRoIGRldm1f
ZHJtX2Rldl9hbGxvYywgdXBkYXRlIGFsbCB0aGUgZG9jcyB0byByZWZsZWN0IHRoZQpuZXcgcmVh
bGl0eS4gTW9zdGx5IHRoaXMgY29uc2lzdHMgb2YgZGVsZXRpbmcgb2xkIGFuZCBtaXNsZWFkaW5n
CmhpbnRzLiBUd28gbWFpbiBvbmVzOgoKLSBpdCBpcyBubyBsb25nZXIgcmVxdWlyZWQgdGhhdCB0
aGUgZHJtX2RldmljZSBiYXNlIGNsYXNzIGlzIGZpcnN0IGluCiAgdGhlIHN0cnVjdHVyZS4gZGV2
bV9kcm1fZGV2X2FsbG9jIGNhbiBjb3BlIHdpdGggaXQgYmVpbmcgYW55d2hlcmUKCi0gb2J2aW91
c2x5IGVtYmVkZGVkIG5vdyBzdHJvbmdseSByZWNvbW1lbmRzIHVzaW5nIGRldm1fZHJtX2Rldl9h
bGxvYwoKdjI6IEZpeCB0eXBvcyAoTm9yYWxmKQoKdjM6IFNwbGl0IG91dCB0aGUgcmVtb3ZhbCBv
ZiBkcm1fZGV2X2luaXQsIHRoYXQncyBibG9ja2VkIG9uIHNvbWUKZGlzY3Vzc2lvbnMgb24gaG93
IHRvIGNvbnZlcnQgdmdlbS92a21zL2k5MTUtc2VsZnRlc3RzLiBBZGp1c3QgY29tbWl0Cm1lc3Nh
Z2UgdG8gcmVmbGVjdCB0aGF0LgoKQ2M6IE5vcmFsZiBUcsO4bm5lcyA8bm9yYWxmQHRyb25uZXMu
b3JnPgpBY2tlZC1ieTogTm9yYWxmIFRyw7hubmVzIDxub3JhbGZAdHJvbm5lcy5vcmc+ICh2MikK
QWNrZWQtYnk6IFNhbSBSYXZuYm9yZyA8c2FtQHJhdm5ib3JnLm9yZz4KQ2M6IEx1YmVuIFR1aWtv
diA8bHViZW4udHVpa292QGFtZC5jb20+CkNjOiBhbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwudmV0dGVyQGludGVsLmNvbT4K
LS0tCiAuLi4vZHJpdmVyLWFwaS9kcml2ZXItbW9kZWwvZGV2cmVzLnJzdCAgICAgICAgfCAgMiAr
LQogZHJpdmVycy9ncHUvZHJtL2RybV9kcnYuYyAgICAgICAgICAgICAgICAgICAgIHwgNzggKysr
KystLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9tYW5hZ2VkLmMgICAgICAgICAg
ICAgICAgIHwgIDIgKy0KIGluY2x1ZGUvZHJtL2RybV9kZXZpY2UuaCAgICAgICAgICAgICAgICAg
ICAgICB8ICAyICstCiBpbmNsdWRlL2RybS9kcm1fZHJ2LmggICAgICAgICAgICAgICAgICAgICAg
ICAgfCAxNiArKy0tCiA1IGZpbGVzIGNoYW5nZWQsIDMwIGluc2VydGlvbnMoKyksIDcwIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9kcml2ZXItbW9k
ZWwvZGV2cmVzLnJzdCBiL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9kcml2ZXItbW9kZWwvZGV2
cmVzLnJzdAppbmRleCBlYWFhYWZjMjExMzQuLmFhNGQyNDIwZjc5ZSAxMDA2NDQKLS0tIGEvRG9j
dW1lbnRhdGlvbi9kcml2ZXItYXBpL2RyaXZlci1tb2RlbC9kZXZyZXMucnN0CisrKyBiL0RvY3Vt
ZW50YXRpb24vZHJpdmVyLWFwaS9kcml2ZXItbW9kZWwvZGV2cmVzLnJzdApAQCAtMjYzLDcgKzI2
Myw3IEBAIERNQQogICBkbWFtX3Bvb2xfZGVzdHJveSgpCiAKIERSTQotICBkZXZtX2RybV9kZXZf
aW5pdCgpCisgIGRldm1fZHJtX2Rldl9hbGxvYygpCiAKIEdQSU8KICAgZGV2bV9ncGlvZF9nZXQo
KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9kcm1fZHJ2LmMKaW5kZXggZDQ1MDZmN2EyMzRlLi43YzE2ODk4NDJlYzAgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9kcm1fZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2RybV9kcnYu
YwpAQCAtMjQwLDEzICsyNDAsMTMgQEAgdm9pZCBkcm1fbWlub3JfcmVsZWFzZShzdHJ1Y3QgZHJt
X21pbm9yICptaW5vcikKICAqIERPQzogZHJpdmVyIGluc3RhbmNlIG92ZXJ2aWV3CiAgKgogICog
QSBkZXZpY2UgaW5zdGFuY2UgZm9yIGEgZHJtIGRyaXZlciBpcyByZXByZXNlbnRlZCBieSAmc3Ry
dWN0IGRybV9kZXZpY2UuIFRoaXMKLSAqIGlzIGluaXRpYWxpemVkIHdpdGggZHJtX2Rldl9pbml0
KCksIHVzdWFsbHkgZnJvbSBidXMtc3BlY2lmaWMgLT5wcm9iZSgpCi0gKiBjYWxsYmFja3MgaW1w
bGVtZW50ZWQgYnkgdGhlIGRyaXZlci4gVGhlIGRyaXZlciB0aGVuIG5lZWRzIHRvIGluaXRpYWxp
emUgYWxsCi0gKiB0aGUgdmFyaW91cyBzdWJzeXN0ZW1zIGZvciB0aGUgZHJtIGRldmljZSBsaWtl
IG1lbW9yeSBtYW5hZ2VtZW50LCB2YmxhbmsKLSAqIGhhbmRsaW5nLCBtb2Rlc2V0dGluZyBzdXBw
b3J0IGFuZCBpbnRpYWwgb3V0cHV0IGNvbmZpZ3VyYXRpb24gcGx1cyBvYnZpb3VzbHkKLSAqIGlu
aXRpYWxpemUgYWxsIHRoZSBjb3JyZXNwb25kaW5nIGhhcmR3YXJlIGJpdHMuIEZpbmFsbHkgd2hl
biBldmVyeXRoaW5nIGlzIHVwCi0gKiBhbmQgcnVubmluZyBhbmQgcmVhZHkgZm9yIHVzZXJzcGFj
ZSB0aGUgZGV2aWNlIGluc3RhbmNlIGNhbiBiZSBwdWJsaXNoZWQKLSAqIHVzaW5nIGRybV9kZXZf
cmVnaXN0ZXIoKS4KKyAqIGlzIGFsbG9jYXRlZCBhbmQgaW5pdGlhbGl6ZWQgd2l0aCBkZXZtX2Ry
bV9kZXZfYWxsb2MoKSwgdXN1YWxseSBmcm9tCisgKiBidXMtc3BlY2lmaWMgLT5wcm9iZSgpIGNh
bGxiYWNrcyBpbXBsZW1lbnRlZCBieSB0aGUgZHJpdmVyLiBUaGUgZHJpdmVyIHRoZW4KKyAqIG5l
ZWRzIHRvIGluaXRpYWxpemUgYWxsIHRoZSB2YXJpb3VzIHN1YnN5c3RlbXMgZm9yIHRoZSBkcm0g
ZGV2aWNlIGxpa2UgbWVtb3J5CisgKiBtYW5hZ2VtZW50LCB2YmxhbmsgaGFuZGxpbmcsIG1vZGVz
ZXR0aW5nIHN1cHBvcnQgYW5kIGluaXRpYWwgb3V0cHV0CisgKiBjb25maWd1cmF0aW9uIHBsdXMg
b2J2aW91c2x5IGluaXRpYWxpemUgYWxsIHRoZSBjb3JyZXNwb25kaW5nIGhhcmR3YXJlIGJpdHMu
CisgKiBGaW5hbGx5IHdoZW4gZXZlcnl0aGluZyBpcyB1cCBhbmQgcnVubmluZyBhbmQgcmVhZHkg
Zm9yIHVzZXJzcGFjZSB0aGUgZGV2aWNlCisgKiBpbnN0YW5jZSBjYW4gYmUgcHVibGlzaGVkIHVz
aW5nIGRybV9kZXZfcmVnaXN0ZXIoKS4KICAqCiAgKiBUaGVyZSBpcyBhbHNvIGRlcHJlY2F0ZWQg
c3VwcG9ydCBmb3IgaW5pdGFsaXppbmcgZGV2aWNlIGluc3RhbmNlcyB1c2luZwogICogYnVzLXNw
ZWNpZmljIGhlbHBlcnMgYW5kIHRoZSAmZHJtX2RyaXZlci5sb2FkIGNhbGxiYWNrLiBCdXQgZHVl
IHRvCkBAIC0yNzQsNyArMjc0LDcgQEAgdm9pZCBkcm1fbWlub3JfcmVsZWFzZShzdHJ1Y3QgZHJt
X21pbm9yICptaW5vcikKICAqCiAgKiBUaGUgZm9sbG93aW5nIGV4YW1wbGUgc2hvd3MgYSB0eXBp
Y2FsIHN0cnVjdHVyZSBvZiBhIERSTSBkaXNwbGF5IGRyaXZlci4KICAqIFRoZSBleGFtcGxlIGZv
Y3VzIG9uIHRoZSBwcm9iZSgpIGZ1bmN0aW9uIGFuZCB0aGUgb3RoZXIgZnVuY3Rpb25zIHRoYXQg
aXMKLSAqIGFsbW9zdCBhbHdheXMgcHJlc2VudCBhbmQgc2VydmVzIGFzIGEgZGVtb25zdHJhdGlv
biBvZiBkZXZtX2RybV9kZXZfaW5pdCgpLgorICogYWxtb3N0IGFsd2F5cyBwcmVzZW50IGFuZCBz
ZXJ2ZXMgYXMgYSBkZW1vbnN0cmF0aW9uIG9mIGRldm1fZHJtX2Rldl9hbGxvYygpLgogICoKICAq
IC4uIGNvZGUtYmxvY2s6OiBjCiAgKgpAQCAtMjk0LDIyICsyOTQsMTIgQEAgdm9pZCBkcm1fbWlu
b3JfcmVsZWFzZShzdHJ1Y3QgZHJtX21pbm9yICptaW5vcikKICAqCQlzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZHJtOwogICoJCWludCByZXQ7CiAgKgotICoJCS8vIGRldm1fa3phbGxvYygpIGNhbid0IGJl
IHVzZWQgaGVyZSBiZWNhdXNlIHRoZSBkcm1fZGV2aWNlICcKLSAqCQkvLyBsaWZldGltZSBjYW4g
ZXhjZWVkIHRoZSBkZXZpY2UgbGlmZXRpbWUgaWYgZHJpdmVyIHVuYmluZAotICoJCS8vIGhhcHBl
bnMgd2hlbiB1c2Vyc3BhY2Ugc3RpbGwgaGFzIG9wZW4gZmlsZSBkZXNjcmlwdG9ycy4KLSAqCQlw
cml2ID0ga3phbGxvYyhzaXplb2YoKnByaXYpLCBHRlBfS0VSTkVMKTsKLSAqCQlpZiAoIXByaXYp
Ci0gKgkJCXJldHVybiAtRU5PTUVNOwotICoKKyAqCQlwcml2ID0gZGV2bV9kcm1fZGV2X2FsbG9j
KCZwZGV2LT5kZXYsICZkcml2ZXJfZHJtX2RyaXZlciwKKyAqCQkJCQkgIHN0cnVjdCBkcml2ZXJf
ZGV2aWNlLCBkcm0pOworICoJCWlmIChJU19FUlIocHJpdikpCisgKgkJCXJldHVybiBQVFJfRVJS
KHByaXYpOwogICoJCWRybSA9ICZwcml2LT5kcm07CiAgKgotICoJCXJldCA9IGRldm1fZHJtX2Rl
dl9pbml0KCZwZGV2LT5kZXYsIGRybSwgJmRyaXZlcl9kcm1fZHJpdmVyKTsKLSAqCQlpZiAocmV0
KSB7Ci0gKgkJCWtmcmVlKHByaXYpOwotICoJCQlyZXR1cm4gcmV0OwotICoJCX0KLSAqCQlkcm1t
X2FkZF9maW5hbF9rZnJlZShkcm0sIHByaXYpOwotICoKICAqCQlyZXQgPSBkcm1tX21vZGVfY29u
ZmlnX2luaXQoZHJtKTsKICAqCQlpZiAocmV0KQogICoJCQlyZXR1cm4gcmV0OwpAQCAtNTUwLDkg
KzU0MCw5IEBAIHN0YXRpYyB2b2lkIGRybV9mc19pbm9kZV9mcmVlKHN0cnVjdCBpbm9kZSAqaW5v
ZGUpCiAgKiBmb2xsb3dpbmcgZ3VpZGVsaW5lcyBhcHBseToKICAqCiAgKiAgLSBUaGUgZW50aXJl
IGRldmljZSBpbml0aWFsaXphdGlvbiBwcm9jZWR1cmUgc2hvdWxkIGJlIHJ1biBmcm9tIHRoZQot
ICogICAgJmNvbXBvbmVudF9tYXN0ZXJfb3BzLm1hc3Rlcl9iaW5kIGNhbGxiYWNrLCBzdGFydGlu
ZyB3aXRoIGRybV9kZXZfaW5pdCgpLAotICogICAgdGhlbiBiaW5kaW5nIGFsbCBjb21wb25lbnRz
IHdpdGggY29tcG9uZW50X2JpbmRfYWxsKCkgYW5kIGZpbmlzaGluZyB3aXRoCi0gKiAgICBkcm1f
ZGV2X3JlZ2lzdGVyKCkuCisgKiAgICAmY29tcG9uZW50X21hc3Rlcl9vcHMubWFzdGVyX2JpbmQg
Y2FsbGJhY2ssIHN0YXJ0aW5nIHdpdGgKKyAqICAgIGRldm1fZHJtX2Rldl9hbGxvYygpLCB0aGVu
IGJpbmRpbmcgYWxsIGNvbXBvbmVudHMgd2l0aAorICogICAgY29tcG9uZW50X2JpbmRfYWxsKCkg
YW5kIGZpbmlzaGluZyB3aXRoIGRybV9kZXZfcmVnaXN0ZXIoKS4KICAqCiAgKiAgLSBUaGUgb3Bh
cXVlIHBvaW50ZXIgcGFzc2VkIHRvIGFsbCBjb21wb25lbnRzIHRocm91Z2ggY29tcG9uZW50X2Jp
bmRfYWxsKCkKICAqICAgIHNob3VsZCBwb2ludCBhdCAmc3RydWN0IGRybV9kZXZpY2Ugb2YgdGhl
IGRldmljZSBpbnN0YW5jZSwgbm90IHNvbWUgZHJpdmVyCkBAIC03MDYsMjQgKzY5Niw5IEBAIHN0
YXRpYyB2b2lkIGRldm1fZHJtX2Rldl9pbml0X3JlbGVhc2Uodm9pZCAqZGF0YSkKIAlkcm1fZGV2
X3B1dChkYXRhKTsKIH0KIAotLyoqCi0gKiBkZXZtX2RybV9kZXZfaW5pdCAtIFJlc291cmNlIG1h
bmFnZWQgZHJtX2Rldl9pbml0KCkKLSAqIEBwYXJlbnQ6IFBhcmVudCBkZXZpY2Ugb2JqZWN0Ci0g
KiBAZGV2OiBEUk0gZGV2aWNlCi0gKiBAZHJpdmVyOiBEUk0gZHJpdmVyCi0gKgotICogTWFuYWdl
ZCBkcm1fZGV2X2luaXQoKS4gVGhlIERSTSBkZXZpY2UgaW5pdGlhbGl6ZWQgd2l0aCB0aGlzIGZ1
bmN0aW9uIGlzCi0gKiBhdXRvbWF0aWNhbGx5IHB1dCBvbiBkcml2ZXIgZGV0YWNoIHVzaW5nIGRy
bV9kZXZfcHV0KCkuCi0gKgotICogTm90ZSB0aGF0IGRyaXZlcnMgbXVzdCBjYWxsIGRybW1fYWRk
X2ZpbmFsX2tmcmVlKCkgYWZ0ZXIgdGhpcyBmdW5jdGlvbiBoYXMKLSAqIGNvbXBsZXRlZCBzdWNj
ZXNzZnVsbHkuCi0gKgotICogUkVUVVJOUzoKLSAqIDAgb24gc3VjY2Vzcywgb3IgZXJyb3IgY29k
ZSBvbiBmYWlsdXJlLgotICovCi1pbnQgZGV2bV9kcm1fZGV2X2luaXQoc3RydWN0IGRldmljZSAq
cGFyZW50LAotCQkgICAgICBzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAotCQkgICAgICBzdHJ1Y3Qg
ZHJtX2RyaXZlciAqZHJpdmVyKQorc3RhdGljIGludCBkZXZtX2RybV9kZXZfaW5pdChzdHJ1Y3Qg
ZGV2aWNlICpwYXJlbnQsCisJCQkgICAgIHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkgICAg
IHN0cnVjdCBkcm1fZHJpdmVyICpkcml2ZXIpCiB7CiAJaW50IHJldDsKIApAQCAtNzM3LDcgKzcx
Miw2IEBAIGludCBkZXZtX2RybV9kZXZfaW5pdChzdHJ1Y3QgZGV2aWNlICpwYXJlbnQsCiAKIAly
ZXR1cm4gcmV0OwogfQotRVhQT1JUX1NZTUJPTChkZXZtX2RybV9kZXZfaW5pdCk7CiAKIHZvaWQg
Kl9fZGV2bV9kcm1fZGV2X2FsbG9jKHN0cnVjdCBkZXZpY2UgKnBhcmVudCwgc3RydWN0IGRybV9k
cml2ZXIgKmRyaXZlciwKIAkJCSAgIHNpemVfdCBzaXplLCBzaXplX3Qgb2Zmc2V0KQpAQCAtNzY3
LDE5ICs3NDEsOSBAQCBFWFBPUlRfU1lNQk9MKF9fZGV2bV9kcm1fZGV2X2FsbG9jKTsKICAqIEBk
cml2ZXI6IERSTSBkcml2ZXIgdG8gYWxsb2NhdGUgZGV2aWNlIGZvcgogICogQHBhcmVudDogUGFy
ZW50IGRldmljZSBvYmplY3QKICAqCi0gKiBBbGxvY2F0ZSBhbmQgaW5pdGlhbGl6ZSBhIG5ldyBE
Uk0gZGV2aWNlLiBObyBkZXZpY2UgcmVnaXN0cmF0aW9uIGlzIGRvbmUuCi0gKiBDYWxsIGRybV9k
ZXZfcmVnaXN0ZXIoKSB0byBhZHZlcnRpY2UgdGhlIGRldmljZSB0byB1c2VyIHNwYWNlIGFuZCBy
ZWdpc3RlciBpdAotICogd2l0aCBvdGhlciBjb3JlIHN1YnN5c3RlbXMuIFRoaXMgc2hvdWxkIGJl
IGRvbmUgbGFzdCBpbiB0aGUgZGV2aWNlCi0gKiBpbml0aWFsaXphdGlvbiBzZXF1ZW5jZSB0byBt
YWtlIHN1cmUgdXNlcnNwYWNlIGNhbid0IGFjY2VzcyBhbiBpbmNvbnNpc3RlbnQKLSAqIHN0YXRl
LgotICoKLSAqIFRoZSBpbml0aWFsIHJlZi1jb3VudCBvZiB0aGUgb2JqZWN0IGlzIDEuIFVzZSBk
cm1fZGV2X2dldCgpIGFuZAotICogZHJtX2Rldl9wdXQoKSB0byB0YWtlIGFuZCBkcm9wIGZ1cnRo
ZXIgcmVmLWNvdW50cy4KLSAqCi0gKiBOb3RlIHRoYXQgZm9yIHB1cmVseSB2aXJ0dWFsIGRldmlj
ZXMgQHBhcmVudCBjYW4gYmUgTlVMTC4KLSAqCi0gKiBEcml2ZXJzIHRoYXQgd2lzaCB0byBzdWJj
bGFzcyBvciBlbWJlZCAmc3RydWN0IGRybV9kZXZpY2UgaW50byB0aGVpcgotICogb3duIHN0cnVj
dCBzaG91bGQgbG9vayBhdCB1c2luZyBkcm1fZGV2X2luaXQoKSBpbnN0ZWFkLgorICogVGhpcyBp
cyB0aGUgZGVwcmVjYXRlZCB2ZXJzaW9uIG9mIGRldm1fZHJtX2Rldl9hbGxvYygpLCB3aGljaCBk
b2VzIG5vdCBzdXBwb3J0CisgKiBzdWJjbGFzc2luZyB0aHJvdWdoIGVtYmVkZGluZyB0aGUgc3Ry
dWN0ICZkcm1fZGV2aWNlIGluIGEgZHJpdmVyIHByaXZhdGUKKyAqIHN0cnVjdHVyZSwgYW5kIHdo
aWNoIGRvZXMgbm90IHN1cHBvcnQgYXV0b21hdGljIGNsZWFudXAgdGhyb3VnaCBkZXZyZXMuCiAg
KgogICogUkVUVVJOUzoKICAqIFBvaW50ZXIgdG8gbmV3IERSTSBkZXZpY2UsIG9yIEVSUl9QVFIg
b24gZmFpbHVyZS4KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fbWFuYWdlZC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2RybV9tYW5hZ2VkLmMKaW5kZXggMWUxMzU2NTYwYzJlLi5jMzZlM2Q5
OGZkNzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fbWFuYWdlZC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9kcm1fbWFuYWdlZC5jCkBAIC0yNyw3ICsyNyw3IEBACiAgKiBiZSBkb25l
IGRpcmVjdGx5IHdpdGggZHJtbV9rbWFsbG9jKCkgYW5kIHRoZSByZWxhdGVkIGZ1bmN0aW9ucy4g
RXZlcnl0aGluZwogICogd2lsbCBiZSByZWxlYXNlZCBvbiB0aGUgZmluYWwgZHJtX2Rldl9wdXQo
KSBpbiByZXZlcnNlIG9yZGVyIG9mIGhvdyB0aGUKICAqIHJlbGVhc2UgYWN0aW9ucyBoYXZlIGJl
ZW4gYWRkZWQgYW5kIG1lbW9yeSBoYXMgYmVlbiBhbGxvY2F0ZWQgc2luY2UgZHJpdmVyCi0gKiBs
b2FkaW5nIHN0YXJ0ZWQgd2l0aCBkcm1fZGV2X2luaXQoKS4KKyAqIGxvYWRpbmcgc3RhcnRlZCB3
aXRoIGRldm1fZHJtX2Rldl9hbGxvYygpLgogICoKICAqIE5vdGUgdGhhdCByZWxlYXNlIGFjdGlv
bnMgYW5kIG1hbmFnZWQgbWVtb3J5IGNhbiBhbHNvIGJlIGFkZGVkIGFuZCByZW1vdmVkCiAgKiBk
dXJpbmcgdGhlIGxpZmV0aW1lIG9mIHRoZSBkcml2ZXIsIGFsbCB0aGUgZnVuY3Rpb25zIGFyZSBm
dWxseSBjb25jdXJyZW50CmRpZmYgLS1naXQgYS9pbmNsdWRlL2RybS9kcm1fZGV2aWNlLmggYi9p
bmNsdWRlL2RybS9kcm1fZGV2aWNlLmgKaW5kZXggMDk4ODM1MWQ3NDNjLi5mNGY2OGU3YTkxNDkg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2RybV9kZXZpY2UuaAorKysgYi9pbmNsdWRlL2RybS9k
cm1fZGV2aWNlLmgKQEAgLTkyLDcgKzkyLDcgQEAgc3RydWN0IGRybV9kZXZpY2UgewogCSAqIE5V
TEwuCiAJICoKIAkgKiBJbnN0ZWFkIG9mIHVzaW5nIHRoaXMgcG9pbnRlciBpdCBpcyByZWNvbW1l
bmRlZCB0aGF0IGRyaXZlcnMgdXNlCi0JICogZHJtX2Rldl9pbml0KCkgYW5kIGVtYmVkIHN0cnVj
dCAmZHJtX2RldmljZSBpbiB0aGVpciBsYXJnZXIKKwkgKiBkZXZtX2RybV9kZXZfYWxsb2MoKSBh
bmQgZW1iZWQgc3RydWN0ICZkcm1fZGV2aWNlIGluIHRoZWlyIGxhcmdlcgogCSAqIHBlci1kZXZp
Y2Ugc3RydWN0dXJlLgogCSAqLwogCXZvaWQgKmRldl9wcml2YXRlOwpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9kcm0vZHJtX2Rydi5oIGIvaW5jbHVkZS9kcm0vZHJtX2Rydi5oCmluZGV4IDZiYTdkZDEx
Mzg0ZC4uNTMzYzZlMWE1YTk1IDEwMDY0NAotLS0gYS9pbmNsdWRlL2RybS9kcm1fZHJ2LmgKKysr
IGIvaW5jbHVkZS9kcm0vZHJtX2Rydi5oCkBAIC0xNjMsMTMgKzE2MywxMiBAQCBzdHJ1Y3QgZHJt
X2RyaXZlciB7CiAJLyoqCiAJICogQGxvYWQ6CiAJICoKLQkgKiBCYWNrd2FyZC1jb21wYXRpYmxl
IGRyaXZlciBjYWxsYmFjayB0byBjb21wbGV0ZQotCSAqIGluaXRpYWxpemF0aW9uIHN0ZXBzIGFm
dGVyIHRoZSBkcml2ZXIgaXMgcmVnaXN0ZXJlZC4gIEZvcgotCSAqIHRoaXMgcmVhc29uLCBtYXkg
c3VmZmVyIGZyb20gcmFjZSBjb25kaXRpb25zIGFuZCBpdHMgdXNlIGlzCi0JICogZGVwcmVjYXRl
ZCBmb3IgbmV3IGRyaXZlcnMuICBJdCBpcyB0aGVyZWZvcmUgb25seSBzdXBwb3J0ZWQKLQkgKiBm
b3IgZXhpc3RpbmcgZHJpdmVycyBub3QgeWV0IGNvbnZlcnRlZCB0byB0aGUgbmV3IHNjaGVtZS4K
LQkgKiBTZWUgZHJtX2Rldl9pbml0KCkgYW5kIGRybV9kZXZfcmVnaXN0ZXIoKSBmb3IgcHJvcGVy
IGFuZAotCSAqIHJhY2UtZnJlZSB3YXkgdG8gc2V0IHVwIGEgJnN0cnVjdCBkcm1fZGV2aWNlLgor
CSAqIEJhY2t3YXJkLWNvbXBhdGlibGUgZHJpdmVyIGNhbGxiYWNrIHRvIGNvbXBsZXRlIGluaXRp
YWxpemF0aW9uIHN0ZXBzCisJICogYWZ0ZXIgdGhlIGRyaXZlciBpcyByZWdpc3RlcmVkLiAgRm9y
IHRoaXMgcmVhc29uLCBtYXkgc3VmZmVyIGZyb20KKwkgKiByYWNlIGNvbmRpdGlvbnMgYW5kIGl0
cyB1c2UgaXMgZGVwcmVjYXRlZCBmb3IgbmV3IGRyaXZlcnMuICBJdCBpcworCSAqIHRoZXJlZm9y
ZSBvbmx5IHN1cHBvcnRlZCBmb3IgZXhpc3RpbmcgZHJpdmVycyBub3QgeWV0IGNvbnZlcnRlZCB0
bworCSAqIHRoZSBuZXcgc2NoZW1lLiAgU2VlIGRldm1fZHJtX2Rldl9hbGxvYygpIGFuZCBkcm1f
ZGV2X3JlZ2lzdGVyKCkgZm9yCisJICogcHJvcGVyIGFuZCByYWNlLWZyZWUgd2F5IHRvIHNldCB1
cCBhICZzdHJ1Y3QgZHJtX2RldmljZS4KIAkgKgogCSAqIFRoaXMgaXMgZGVwcmVjYXRlZCwgZG8g
bm90IHVzZSEKIAkgKgpAQCAtNTk1LDkgKzU5NCw2IEBAIHN0cnVjdCBkcm1fZHJpdmVyIHsKIGlu
dCBkcm1fZGV2X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJIHN0cnVjdCBkcm1fZHJp
dmVyICpkcml2ZXIsCiAJCSBzdHJ1Y3QgZGV2aWNlICpwYXJlbnQpOwotaW50IGRldm1fZHJtX2Rl
dl9pbml0KHN0cnVjdCBkZXZpY2UgKnBhcmVudCwKLQkJICAgICAgc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwKLQkJICAgICAgc3RydWN0IGRybV9kcml2ZXIgKmRyaXZlcik7CiAKIHZvaWQgKl9fZGV2
bV9kcm1fZGV2X2FsbG9jKHN0cnVjdCBkZXZpY2UgKnBhcmVudCwgc3RydWN0IGRybV9kcml2ZXIg
KmRyaXZlciwKIAkJCSAgIHNpemVfdCBzaXplLCBzaXplX3Qgb2Zmc2V0KTsKLS0gCjIuMjguMAoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVs
IG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlz
dHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVsCg==
