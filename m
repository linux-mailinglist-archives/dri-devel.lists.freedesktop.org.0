Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BE6F460AEA
	for <lists+dri-devel@lfdr.de>; Fri,  5 Jul 2019 19:17:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E02066E529;
	Fri,  5 Jul 2019 17:17:33 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from metis.ext.pengutronix.de (metis.ext.pengutronix.de
 [IPv6:2001:67c:670:201:290:27ff:fe1d:cc33])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5CE946E52A
 for <dri-devel@lists.freedesktop.org>; Fri,  5 Jul 2019 17:17:32 +0000 (UTC)
Received: from dude02.hi.pengutronix.de ([2001:67c:670:100:1d::28]
 helo=dude02.pengutronix.de.)
 by metis.ext.pengutronix.de with esmtp (Exim 4.92)
 (envelope-from <l.stach@pengutronix.de>)
 id 1hjRpw-0007A3-6l; Fri, 05 Jul 2019 19:17:28 +0200
From: Lucas Stach <l.stach@pengutronix.de>
To: etnaviv@lists.freedesktop.org
Subject: [PATCH v2 5/8] drm/etnaviv: rework MMU handling
Date: Fri,  5 Jul 2019 19:17:24 +0200
Message-Id: <20190705171727.27501-5-l.stach@pengutronix.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190705171727.27501-1-l.stach@pengutronix.de>
References: <20190705171727.27501-1-l.stach@pengutronix.de>
MIME-Version: 1.0
X-SA-Exim-Connect-IP: 2001:67c:670:100:1d::28
X-SA-Exim-Mail-From: l.stach@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de);
 SAEximRunCond expanded to false
X-PTX-Original-Recipient: dri-devel@lists.freedesktop.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: patchwork-lst@pengutronix.de, kernel@pengutronix.de,
 dri-devel@lists.freedesktop.org, Russell King <linux+etnaviv@armlinux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyByZXdvcmtzIHRoZSBNTVUgaGFuZGxpbmcgdG8gbWFrZSBpdCBwb3NzaWJsZSB0byBoYXZl
IG11bHRpcGxlIE1NVSBjb250ZXh0cy4KQSBjb250ZXh0IGlzIGJhc2ljYWxseSBvbmUgaW5zdGFu
Y2Ugb2YgR1BVIHBhZ2UgdGFibGVzLiBDdXJyZW50bHkgd2UgaGF2ZSBvbmUKc2V0IG9mIHBhZ2Ug
dGFibGVzIHBlciBHUFUsIHdoaWNoIGlzbid0IGFsbCB0aGF0IGNsZXZlciwgYXMgaXQgaGFzIHRo
ZQpmb2xsb3dpbmcgdHdvIGNvbnNlcXVlbmNlczoKCjEuIEFsbCBHUFUgY2xpZW50cyAoYWthIHBy
b2Nlc3NlcykgYXJlIHNoYXJpbmcgdGhlIHNhbWUgcGFnZXRhYmxlcywgd2hpY2ggbWVhbnMKdGhl
cmUgaXMgbm8gaXNvbGF0aW9uIGJldHdlZW4gY2xpZW50cywgYnV0IG9ubHkgYmV0d2VlbiBHUFUg
YXNzaWduZWQgbWVtb3J5CnNwYWNlcyBhbmQgdGhlIHJlc3Qgb2YgdGhlIHN5c3RlbS4gQmV0dGVy
IHRoYW4gbm90aGluZywgYnV0IGFsc28gbm90IGdyZWF0LgoKMi4gQ2xpZW50cyBvcGVyYXRpbmcg
b24gdGhlIHNhbWUgc2V0IG9mIGJ1ZmZlcnMgd2l0aCBkaWZmZXJlbnQgZXRuYXZpdiBHUFUKY29y
ZXMsIGUuZy4gYSB3b3JrbG9hZCB1c2luZyBib3RoIHRoZSAyRCBhbmQgM0QgR1BVLCBuZWVkIHRv
IG1hcCB0aGUgdXNlZApidWZmZXJzIGludG8gdGhlIHBhZ2V0YWJsZSBzZXRzIG9mIGVhY2ggdXNl
ZCBHUFUuCgpUaGlzIHBhdGNoIHJld29ya3MgYWxsIHRoZSBNTVUgaGFuZGxpbmcgdG8gaW50cm9k
dWNlIHRoZSBhYnN0cmFjdGlvbiBvZiB0aGUKTU1VIGNvbnRleHQuIEEgY29udGV4dCBjYW4gYmUg
c2hhcmVkIGFjcm9zcyBkaWZmZXJlbnQgR1BVIGNvcmVzLCBhcyBsb25nIGFzCnRoZXkgaGF2ZSBj
b21wYXRpYmxlIE1NVSBpbXBsZW1lbnRhdGlvbnMsIHdoaWNoIGlzIHRoZSBjYXNlIGZvciBhbGwg
c3lzdGVtcwp3aXRoIFZpdmFudGUgR1BVcyBzZWVuIGluIHRoZSB3aWxkLgoKQXMgTU1VdjEgaXMg
bm90IGFibGUgdG8gY2hhbmdlIHBhZ2V0YWJsZXMgb24gdGhlIGZseSwgd2l0aG91dCBhCiJzdG9w
IHRoZSB3b3JsZCIgb3BlcmF0aW9uLCB3aGljaCBzdG9wcyBHUFUsIGNoYW5nZXMgcGFnZXRhYmxl
cyB2aWEgQ1BVCmludGVyYWN0aW9uLCByZXN0YXJ0cyBHUFUsIHRoZSBpbXBsZW1lbnRhdGlvbiBp
bnRyb2R1Y2VzIGEgc2hhcmVkIGNvbnRleHQgb24KTU1VdjEsIHdoaWNoIGlzIHJldHVybmVkIHdo
ZW5ldmVyIHRoZXJlIGlzIGEgcmVxdWVzdCBmb3IgYSBuZXcgY29udGV4dC4KClRoaXMgcGF0Y2gg
YXNzaWducyBhIE1NVSBjb250ZXh0IHRvIGVhY2ggR1BVLCBzbyBvbiBNTVV2MiBzeXN0ZW1zIHRo
ZXJlIGlzCnN0aWxsIG9uZSBzZXQgb2YgcGFnZXRhYmxlcyBwZXIgR1BVLCBidXQgZHVlIHRvIHRo
ZSBzaGFyZWQgY29udGV4dCBNTVV2MQpzeXN0ZW1zIHNlZSBhIGNoYW5nZSBpbiBiZWhhdmlvciBh
cyBub3cgYSBzaW5nbGUgcGFnZXRhYmxlIHNldCBpcyB1c2VkCmFjcm9zcyBhbGwgR1BVIGNvcmVz
LgoKU2lnbmVkLW9mZi1ieTogTHVjYXMgU3RhY2ggPGwuc3RhY2hAcGVuZ3V0cm9uaXguZGU+Ci0t
LQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9idWZmZXIuYyAgIHwgICA4ICstCiBk
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5jICAgfCAgIDggKy0KIGRyaXZl
cnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfY21kYnVmLmggICB8ICAgNiArLQogZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuaCAgICAgIHwgICA0ICstCiBkcml2ZXJzL2dwdS9k
cm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYyAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9l
dG5hdml2L2V0bmF2aXZfZ2VtLmMgICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2
aXYvZXRuYXZpdl9nZW0uaCAgICAgIHwgICAyICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X2dwdS5jICAgICAgfCAgMjAgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfZ3B1LmggICAgICB8ICAgMyArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9p
b21tdS5jICAgIHwgMTUxICsrKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRu
YXZpdl9pb21tdS5oICAgIHwgIDIwIC0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X2lvbW11X3YyLmMgfCAyNjQgKysrKysrKysrLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0v
ZXRuYXZpdi9ldG5hdml2X21tdS5jICAgICAgfCAyNjQgKysrKysrKysrKysrKy0tLS0tLS0tCiBk
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5oICAgICAgfCAgODggKysrKystLQog
MTQgZmlsZXMgY2hhbmdlZCwgNDQxIGluc2VydGlvbnMoKyksIDQxMyBkZWxldGlvbnMoLSkKIGRl
bGV0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11LmgK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZlci5jIGIv
ZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9idWZmZXIuYwppbmRleCA1MzJkYjc3NjI0
ZGEuLjAyMjEzNDIzODE4NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRu
YXZpdl9idWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZl
ci5jCkBAIC0yMDcsNyArMjA3LDcgQEAgdTE2IGV0bmF2aXZfYnVmZmVyX2NvbmZpZ19tbXV2Mihz
dHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwgdTMyIG10bGJfYWRkciwgdTMyIHNhZmUKIAlyZXR1cm4g
YnVmZmVyLT51c2VyX3NpemUgLyA4OwogfQogCi11MTYgZXRuYXZpdl9idWZmZXJfY29uZmlnX3B0
YShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKK3UxNiBldG5hdml2X2J1ZmZlcl9jb25maWdfcHRh
KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LCB1bnNpZ25lZCBzaG9ydCBpZCkKIHsKIAlzdHJ1Y3Qg
ZXRuYXZpdl9jbWRidWYgKmJ1ZmZlciA9ICZncHUtPmJ1ZmZlcjsKIApAQCAtMjE2LDcgKzIxNiw3
IEBAIHUxNiBldG5hdml2X2J1ZmZlcl9jb25maWdfcHRhKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1
KQogCWJ1ZmZlci0+dXNlcl9zaXplID0gMDsKIAogCUNNRF9MT0FEX1NUQVRFKGJ1ZmZlciwgVklW
U19NTVV2Ml9QVEFfQ09ORklHLAotCQkgICAgICAgVklWU19NTVV2Ml9QVEFfQ09ORklHX0lOREVY
KDApKTsKKwkJICAgICAgIFZJVlNfTU1VdjJfUFRBX0NPTkZJR19JTkRFWChpZCkpOwogCiAJQ01E
X0VORChidWZmZXIpOwogCkBAIC0zMzgsNyArMzM4LDcgQEAgdm9pZCBldG5hdml2X2J1ZmZlcl9x
dWV1ZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwgdTMyIGV4ZWNfc3RhdGUsCiAKIAkJLyogZmx1
c2ggY29tbWFuZCAqLwogCQlpZiAobmVlZF9mbHVzaCkgewotCQkJaWYgKGdwdS0+bW11LT52ZXJz
aW9uID09IEVUTkFWSVZfSU9NTVVfVjEpCisJCQlpZiAoZ3B1LT5tbXUtPmdsb2JhbC0+dmVyc2lv
biA9PSBFVE5BVklWX0lPTU1VX1YxKQogCQkJCWV4dHJhX2R3b3JkcyArPSAxOwogCQkJZWxzZQog
CQkJCWV4dHJhX2R3b3JkcyArPSAzOwpAQCAtMzUyLDcgKzM1Miw3IEBAIHZvaWQgZXRuYXZpdl9i
dWZmZXJfcXVldWUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHUzMiBleGVjX3N0YXRlLAogCiAJ
CWlmIChuZWVkX2ZsdXNoKSB7CiAJCQkvKiBBZGQgdGhlIE1NVSBmbHVzaCAqLwotCQkJaWYgKGdw
dS0+bW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpIHsKKwkJCWlmIChncHUtPm1tdS0+
Z2xvYmFsLT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpIHsKIAkJCQlDTURfTE9BRF9TVEFU
RShidWZmZXIsIFZJVlNfR0xfRkxVU0hfTU1VLAogCQkJCQkgICAgICAgVklWU19HTF9GTFVTSF9N
TVVfRkxVU0hfRkVNTVUgfAogCQkJCQkgICAgICAgVklWU19HTF9GTFVTSF9NTVVfRkxVU0hfVU5L
MSB8CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2NtZGJ1Zi5j
IGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9jbWRidWYuYwppbmRleCBhMmY1YWQz
OWM0ZTYuLjMzNzAyMzhlZTEzNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYv
ZXRuYXZpdl9jbWRidWYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Nt
ZGJ1Zi5jCkBAIC01OSwxOCArNTksMTggQEAgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfbmV3KHN0
cnVjdCBkZXZpY2UgKmRldikKIH0KIAogaW50IGV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX21hcChz
dHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2MgKnN1YmFsbG9jLAotCQkJCXN0cnVjdCBldG5h
dml2X2lvbW11ICptbXUsCisJCQkJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4
dCwKIAkJCQlzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcsCiAJCQkJdTMyIG1l
bW9yeV9iYXNlKQogewotCXJldHVybiBldG5hdml2X2lvbW11X2dldF9zdWJhbGxvY192YShtbXUs
IG1hcHBpbmcsIG1lbW9yeV9iYXNlLAorCXJldHVybiBldG5hdml2X2lvbW11X2dldF9zdWJhbGxv
Y192YShjb250ZXh0LCBtYXBwaW5nLCBtZW1vcnlfYmFzZSwKIAkJCQkJICAgICBzdWJhbGxvYy0+
cGFkZHIsIFNVQkFMTE9DX1NJWkUpOwogfQogCi12b2lkIGV0bmF2aXZfY21kYnVmX3N1YmFsbG9j
X3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCit2b2lkIGV0bmF2aXZfY21kYnVmX3N1
YmFsbG9jX3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiAJCQkJ
ICAgc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICptYXBwaW5nKQogewotCWV0bmF2aXZfaW9t
bXVfcHV0X3N1YmFsbG9jX3ZhKG1tdSwgbWFwcGluZyk7CisJZXRuYXZpdl9pb21tdV9wdXRfc3Vi
YWxsb2NfdmEoY29udGV4dCwgbWFwcGluZyk7CiB9CiAKIHZvaWQgZXRuYXZpdl9jbWRidWZfc3Vi
YWxsb2NfZGVzdHJveShzdHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2MgKnN1YmFsbG9jKQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9jbWRidWYuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfY21kYnVmLmgKaW5kZXggN2ZkYzJlM2ZlYTVm
Li5iNTlkZmZiOGQ5NDAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfY21kYnVmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9jbWRidWYu
aApAQCAtOSw3ICs5LDcgQEAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogCiBzdHJ1Y3QgZGV2
aWNlOwotc3RydWN0IGV0bmF2aXZfaW9tbXU7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0
Owogc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nOwogc3RydWN0IGV0bmF2aXZfY21kYnVmX3N1
YmFsbG9jOwogCkBAIC0yNywxMCArMjcsMTAgQEAgc3RydWN0IGV0bmF2aXZfY21kYnVmX3N1YmFs
bG9jICoKIGV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX25ldyhzdHJ1Y3QgZGV2aWNlICpkZXYpOwog
dm9pZCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY19kZXN0cm95KHN0cnVjdCBldG5hdml2X2NtZGJ1
Zl9zdWJhbGxvYyAqc3ViYWxsb2MpOwogaW50IGV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX21hcChz
dHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2MgKnN1YmFsbG9jLAotCQkJCXN0cnVjdCBldG5h
dml2X2lvbW11ICptbXUsCisJCQkJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4
dCwKIAkJCQlzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmcsCiAJCQkJdTMyIG1l
bW9yeV9iYXNlKTsKLXZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoc3RydWN0IGV0
bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkgICBzdHJ1Y3QgZXRuYXZp
dl92cmFtX21hcHBpbmcgKm1hcHBpbmcpOwogCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9ldG5hdml2L2V0bmF2aXZfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X2Rydi5oCmluZGV4IGUwNTJkN2RiNjZhZS4uNWY4ZGIwOGYxYzE3IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9l
dG5hdml2L2V0bmF2aXZfZHJ2LmgKQEAgLTIyLDYgKzIyLDcgQEAgc3RydWN0IGV0bmF2aXZfZ3B1
Owogc3RydWN0IGV0bmF2aXZfbW11Owogc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdDsKIHN0cnVj
dCBldG5hdml2X2dlbV9zdWJtaXQ7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWw7CiAKIHN0
cnVjdCBldG5hdml2X2ZpbGVfcHJpdmF0ZSB7CiAJLyoKQEAgLTM3LDYgKzM4LDcgQEAgc3RydWN0
IGV0bmF2aXZfZHJtX3ByaXZhdGUgewogCXN0cnVjdCBldG5hdml2X2dwdSAqZ3B1W0VUTkFfTUFY
X1BJUEVTXTsKIAogCXN0cnVjdCBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvYyAqY21kYnVmX3N1YmFs
bG9jOworCXN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqbW11X2dsb2JhbDsKIAogCS8qIGxp
c3Qgb2YgR0VNIG9iamVjdHM6ICovCiAJc3RydWN0IG11dGV4IGdlbV9sb2NrOwpAQCAtNjksNyAr
NzEsNyBAQCBpbnQgZXRuYXZpdl9nZW1fbmV3X3VzZXJwdHIoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgc3RydWN0IGRybV9maWxlICpmaWxlLAogCXVpbnRwdHJfdCBwdHIsIHUzMiBzaXplLCB1MzIg
ZmxhZ3MsIHUzMiAqaGFuZGxlKTsKIHUxNiBldG5hdml2X2J1ZmZlcl9pbml0KHN0cnVjdCBldG5h
dml2X2dwdSAqZ3B1KTsKIHUxNiBldG5hdml2X2J1ZmZlcl9jb25maWdfbW11djIoc3RydWN0IGV0
bmF2aXZfZ3B1ICpncHUsIHUzMiBtdGxiX2FkZHIsIHUzMiBzYWZlX2FkZHIpOwotdTE2IGV0bmF2
aXZfYnVmZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOwordTE2IGV0bmF2
aXZfYnVmZmVyX2NvbmZpZ19wdGEoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHVuc2lnbmVkIHNo
b3J0IGlkKTsKIHZvaWQgZXRuYXZpdl9idWZmZXJfZW5kKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1
KTsKIHZvaWQgZXRuYXZpdl9zeW5jX3BvaW50X3F1ZXVlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1
LCB1bnNpZ25lZCBpbnQgZXZlbnQpOwogdm9pZCBldG5hdml2X2J1ZmZlcl9xdWV1ZShzdHJ1Y3Qg
ZXRuYXZpdl9ncHUgKmdwdSwgdTMyIGV4ZWNfc3RhdGUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0
bmF2aXZfZHVtcC5jCmluZGV4IDEzYTYzZDlkY2Y1NC4uMmMxNjQ0ODBiY2ZjIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYwpAQCAtOTMsNyArOTMsNyBAQCBzdGF0aWMgdm9p
ZCBldG5hdml2X2NvcmVfZHVtcF9yZWdpc3RlcnMoc3RydWN0IGNvcmVfZHVtcF9pdGVyYXRvciAq
aXRlciwKIH0KIAogc3RhdGljIHZvaWQgZXRuYXZpdl9jb3JlX2R1bXBfbW11KHN0cnVjdCBjb3Jl
X2R1bXBfaXRlcmF0b3IgKml0ZXIsCi0Jc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwgc2l6ZV90
IG1tdV9zaXplKQorCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1tdSwgc2l6ZV90IG1t
dV9zaXplKQogewogCWV0bmF2aXZfaW9tbXVfZHVtcChtbXUsIGl0ZXItPmRhdGEpOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jIGIvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uYwppbmRleCBlMTk5YTY4MzNmZjAuLmUxODE1MDU4
ZDVmYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jCkBAIC0yMjMsMTIgKzIy
MywxMiBAQCBpbnQgZXRuYXZpdl9nZW1fbW1hcF9vZmZzZXQoc3RydWN0IGRybV9nZW1fb2JqZWN0
ICpvYmosIHU2NCAqb2Zmc2V0KQogCiBzdGF0aWMgc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5n
ICoKIGV0bmF2aXZfZ2VtX2dldF92cmFtX21hcHBpbmcoc3RydWN0IGV0bmF2aXZfZ2VtX29iamVj
dCAqb2JqLAotCQkJICAgICBzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11KQorCQkJICAgICBzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogewogCXN0cnVjdCBldG5hdml2X3Zy
YW1fbWFwcGluZyAqbWFwcGluZzsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkobWFwcGluZywgJm9i
ai0+dnJhbV9saXN0LCBvYmpfbm9kZSkgewotCQlpZiAobWFwcGluZy0+bW11ID09IG1tdSkKKwkJ
aWYgKG1hcHBpbmctPmNvbnRleHQgPT0gY29udGV4dCkKIAkJCXJldHVybiBtYXBwaW5nOwogCX0K
IApAQCAtMjY2LDcgKzI2Niw3IEBAIHN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqZXRuYXZp
dl9nZW1fbWFwcGluZ19nZXQoCiAJCSAqLwogCQlpZiAobWFwcGluZy0+dXNlID09IDApIHsKIAkJ
CW11dGV4X2xvY2soJmdwdS0+bW11LT5sb2NrKTsKLQkJCWlmIChtYXBwaW5nLT5tbXUgPT0gZ3B1
LT5tbXUpCisJCQlpZiAobWFwcGluZy0+Y29udGV4dCA9PSBncHUtPm1tdSkKIAkJCQltYXBwaW5n
LT51c2UgKz0gMTsKIAkJCWVsc2UKIAkJCQltYXBwaW5nID0gTlVMTDsKQEAgLTMwMyw3ICszMDMs
NyBAQCBzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKmV0bmF2aXZfZ2VtX21hcHBpbmdfZ2V0
KAogCQlsaXN0X2RlbCgmbWFwcGluZy0+b2JqX25vZGUpOwogCX0KIAotCW1hcHBpbmctPm1tdSA9
IGdwdS0+bW11OworCW1hcHBpbmctPmNvbnRleHQgPSBncHUtPm1tdTsKIAltYXBwaW5nLT51c2Ug
PSAxOwogCiAJcmV0ID0gZXRuYXZpdl9pb21tdV9tYXBfZ2VtKGdwdS0+bW11LCBldG5hdml2X29i
aiwgZ3B1LT5tZW1vcnlfYmFzZSwKQEAgLTUyNSwxMiArNTI1LDEyIEBAIHZvaWQgZXRuYXZpdl9n
ZW1fZnJlZV9vYmplY3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmopCiAKIAlsaXN0X2Zvcl9l
YWNoX2VudHJ5X3NhZmUobWFwcGluZywgdG1wLCAmZXRuYXZpdl9vYmotPnZyYW1fbGlzdCwKIAkJ
CQkgb2JqX25vZGUpIHsKLQkJc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSA9IG1hcHBpbmctPm1t
dTsKKwkJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCA9IG1hcHBpbmctPmNv
bnRleHQ7CiAKIAkJV0FSTl9PTihtYXBwaW5nLT51c2UpOwogCi0JCWlmIChtbXUpCi0JCQlldG5h
dml2X2lvbW11X3VubWFwX2dlbShtbXUsIG1hcHBpbmcpOworCQlpZiAoY29udGV4dCkKKwkJCWV0
bmF2aXZfaW9tbXVfdW5tYXBfZ2VtKGNvbnRleHQsIG1hcHBpbmcpOwogCiAJCWxpc3RfZGVsKCZt
YXBwaW5nLT5vYmpfbm9kZSk7CiAJCWtmcmVlKG1hcHBpbmcpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uaCBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfZ2VtLmgKaW5kZXggZDdkOGE4MzVmMzc5Li41YTAwNGQ1ZTRlYWEgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uaApAQCAtMjUsNyArMjUsNyBAQCBzdHJ1Y3QgZXRu
YXZpdl92cmFtX21hcHBpbmcgewogCXN0cnVjdCBsaXN0X2hlYWQgc2Nhbl9ub2RlOwogCXN0cnVj
dCBsaXN0X2hlYWQgbW11X25vZGU7CiAJc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdCAqb2JqZWN0
OwotCXN0cnVjdCBldG5hdml2X2lvbW11ICptbXU7CisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29u
dGV4dCAqY29udGV4dDsKIAlzdHJ1Y3QgZHJtX21tX25vZGUgdnJhbV9ub2RlOwogCXVuc2lnbmVk
IGludCB1c2U7CiAJdTMyIGlvdmE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2dwdS5jIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuYwpp
bmRleCA3YjM5NmFjNWRiYTUuLmE1M2ZlY2QxN2ZhOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X2dwdS5jCkBAIC02ODEsNyArNjgxLDcgQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9ncHVf
aHdfaW5pdChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAlldG5hdml2X2dwdV9zZXR1cF9wdWxz
ZV9lYXRlcihncHUpOwogCiAJLyogc2V0dXAgdGhlIE1NVSAqLwotCWV0bmF2aXZfaW9tbXVfcmVz
dG9yZShncHUpOworCWV0bmF2aXZfaW9tbXVfcmVzdG9yZShncHUsIGdwdS0+bW11KTsKIAogCS8q
IFN0YXJ0IGNvbW1hbmQgcHJvY2Vzc29yICovCiAJcHJlZmV0Y2ggPSBldG5hdml2X2J1ZmZlcl9p
bml0KGdwdSk7CkBAIC03NTQsMTEgKzc1NCwxNSBAQCBpbnQgZXRuYXZpdl9ncHVfaW5pdChzdHJ1
Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAkJZ290byBmYWlsOwogCX0KIAotCWdwdS0+bW11ID0gZXRu
YXZpdl9pb21tdV9uZXcoZ3B1KTsKKwlyZXQgPSBldG5hdml2X2lvbW11X2dsb2JhbF9pbml0KGdw
dSk7CisJaWYgKHJldCkKKwkJZ290byBmYWlsOworCisJZ3B1LT5tbXUgPSBldG5hdml2X2lvbW11
X2NvbnRleHRfaW5pdChwcml2LT5tbXVfZ2xvYmFsKTsKIAlpZiAoSVNfRVJSKGdwdS0+bW11KSkg
ewogCQlkZXZfZXJyKGdwdS0+ZGV2LCAiRmFpbGVkIHRvIGluc3RhbnRpYXRlIEdQVSBJT01NVVxu
Iik7CiAJCXJldCA9IFBUUl9FUlIoZ3B1LT5tbXUpOwotCQlnb3RvIGZhaWw7CisJCWdvdG8gaW9t
bXVfZ2xvYmFsX2Zpbmk7CiAJfQogCiAJcmV0ID0gZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfbWFw
KHByaXYtPmNtZGJ1Zl9zdWJhbGxvYywgZ3B1LT5tbXUsCkBAIC03NzcsNyArNzgxLDcgQEAgaW50
IGV0bmF2aXZfZ3B1X2luaXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJCWdvdG8gdW5tYXBf
c3ViYWxsb2M7CiAJfQogCi0JaWYgKGdwdS0+bW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVf
VjEgJiYKKwlpZiAoIShncHUtPmlkZW50aXR5Lm1pbm9yX2ZlYXR1cmVzMSAmIGNoaXBNaW5vckZl
YXR1cmVzMV9NTVVfVkVSU0lPTikgJiYKIAkgICAgZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKCZncHUt
PmJ1ZmZlciwgJmdwdS0+Y21kYnVmX21hcHBpbmcpID4gMHg4MDAwMDAwMCkgewogCQlyZXQgPSAt
RUlOVkFMOwogCQlkZXZfZXJyKGdwdS0+ZGV2LApAQCAtODEwLDcgKzgxNCw5IEBAIGludCBldG5h
dml2X2dwdV9pbml0KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogdW5tYXBfc3ViYWxsb2M6CiAJ
ZXRuYXZpdl9jbWRidWZfc3ViYWxsb2NfdW5tYXAoZ3B1LT5tbXUsICZncHUtPmNtZGJ1Zl9tYXBw
aW5nKTsKIGRlc3Ryb3lfaW9tbXU6Ci0JZXRuYXZpdl9pb21tdV9kZXN0cm95KGdwdS0+bW11KTsK
KwlldG5hdml2X2lvbW11X2NvbnRleHRfcHV0KGdwdS0+bW11KTsKK2lvbW11X2dsb2JhbF9maW5p
OgorCWV0bmF2aXZfaW9tbXVfZ2xvYmFsX2ZpbmkoZ3B1KTsKIGZhaWw6CiAJcG1fcnVudGltZV9t
YXJrX2xhc3RfYnVzeShncHUtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZ3B1
LT5kZXYpOwpAQCAtMTY4NCwxMSArMTY5MCwxMSBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dwdV91
bmJpbmQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlICptYXN0ZXIsCiAJaWYgKGdw
dS0+aW5pdGlhbGl6ZWQpIHsKIAkJZXRuYXZpdl9jbWRidWZfZnJlZSgmZ3B1LT5idWZmZXIpOwog
CQlldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY191bm1hcChncHUtPm1tdSwgJmdwdS0+Y21kYnVmX21h
cHBpbmcpOwotCQlldG5hdml2X2lvbW11X2Rlc3Ryb3koZ3B1LT5tbXUpOworCQlldG5hdml2X2lv
bW11X2NvbnRleHRfcHV0KGdwdS0+bW11KTsKKwkJZXRuYXZpdl9pb21tdV9nbG9iYWxfZmluaShn
cHUpOwogCQlncHUtPmluaXRpYWxpemVkID0gZmFsc2U7CiAJfQogCi0KIAlncHUtPmRybSA9IE5V
TEw7CiAJaWRyX2Rlc3Ryb3koJmdwdS0+ZmVuY2VfaWRyKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuaCBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfZ3B1LmgKaW5kZXggOTYzODA5NDJjZDhjLi44M2U5MjU2ODY1YTQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuaApAQCAtOCw2ICs4LDcgQEAKIAogI2luY2x1ZGUg
ImV0bmF2aXZfY21kYnVmLmgiCiAjaW5jbHVkZSAiZXRuYXZpdl9nZW0uaCIKKyNpbmNsdWRlICJl
dG5hdml2X21tdS5oIgogI2luY2x1ZGUgImV0bmF2aXZfZHJ2LmgiCiAKIHN0cnVjdCBldG5hdml2
X2dlbV9zdWJtaXQ7CkBAIC0xMzYsNyArMTM3LDcgQEAgc3RydWN0IGV0bmF2aXZfZ3B1IHsKIAl2
b2lkIF9faW9tZW0gKm1taW87CiAJaW50IGlycTsKIAotCXN0cnVjdCBldG5hdml2X2lvbW11ICpt
bXU7CisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqbW11OwogCXVuc2lnbmVkIGludCBm
bHVzaF9zZXE7CiAKIAkvKiBQb3dlciBDb250cm9sOiAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5jIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYv
ZXRuYXZpdl9pb21tdS5jCmluZGV4IDE4YzYyN2M1Y2FlMS4uYTJmMWZmMTUxODIyIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5jCkBAIC0xMSw3ICsxMSw2IEBACiAKICNp
bmNsdWRlICJldG5hdml2X2dwdS5oIgogI2luY2x1ZGUgImV0bmF2aXZfbW11LmgiCi0jaW5jbHVk
ZSAiZXRuYXZpdl9pb21tdS5oIgogI2luY2x1ZGUgInN0YXRlX2hpLnhtbC5oIgogCiAjZGVmaW5l
IFBUX1NJWkUJCVNaXzJNCkBAIC0xOSwxMTMgKzE4LDc4IEBACiAKICNkZWZpbmUgR1BVX01FTV9T
VEFSVAkweDgwMDAwMDAwCiAKLXN0cnVjdCBldG5hdml2X2lvbW11djFfZG9tYWluIHsKLQlzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gYmFzZTsKK3N0cnVjdCBldG5hdml2X2lvbW11djFfY29u
dGV4dCB7CisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCBiYXNlOwogCXUzMiAqcGd0YWJs
ZV9jcHU7CiAJZG1hX2FkZHJfdCBwZ3RhYmxlX2RtYTsKIH07CiAKLXN0YXRpYyBzdHJ1Y3QgZXRu
YXZpdl9pb21tdXYxX2RvbWFpbiAqCi10b19ldG5hdml2X2RvbWFpbihzdHJ1Y3QgZXRuYXZpdl9p
b21tdV9kb21haW4gKmRvbWFpbikKK3N0YXRpYyBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2NvbnRl
eHQgKgordG9fdjFfY29udGV4dChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0
KQogewotCXJldHVybiBjb250YWluZXJfb2YoZG9tYWluLCBzdHJ1Y3QgZXRuYXZpdl9pb21tdXYx
X2RvbWFpbiwgYmFzZSk7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihjb250ZXh0LCBzdHJ1Y3QgZXRu
YXZpdl9pb21tdXYxX2NvbnRleHQsIGJhc2UpOwogfQogCi1zdGF0aWMgaW50IF9fZXRuYXZpdl9p
b21tdV9pbml0KHN0cnVjdCBldG5hdml2X2lvbW11djFfZG9tYWluICpldG5hdml2X2RvbWFpbikK
K3N0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2MV9mcmVlKHN0cnVjdCBldG5hdml2X2lvbW11X2Nv
bnRleHQgKmNvbnRleHQpCiB7Ci0JdTMyICpwOwotCWludCBpOwotCi0JZXRuYXZpdl9kb21haW4t
PmJhc2UuYmFkX3BhZ2VfY3B1ID0KLQkJCWRtYV9hbGxvY193YyhldG5hdml2X2RvbWFpbi0+YmFz
ZS5kZXYsIFNaXzRLLAotCQkJCSAgICAgJmV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2Rt
YSwKLQkJCQkgICAgIEdGUF9LRVJORUwpOwotCWlmICghZXRuYXZpdl9kb21haW4tPmJhc2UuYmFk
X3BhZ2VfY3B1KQotCQlyZXR1cm4gLUVOT01FTTsKLQotCXAgPSBldG5hdml2X2RvbWFpbi0+YmFz
ZS5iYWRfcGFnZV9jcHU7Ci0JZm9yIChpID0gMDsgaSA8IFNaXzRLIC8gNDsgaSsrKQotCQkqcCsr
ID0gMHhkZWFkNTVhYTsKLQotCWV0bmF2aXZfZG9tYWluLT5wZ3RhYmxlX2NwdSA9IGRtYV9hbGxv
Y193YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYsCi0JCQkJCQkgICBQVF9TSVpFLAotCQkJCQkJ
ICAgJmV0bmF2aXZfZG9tYWluLT5wZ3RhYmxlX2RtYSwKLQkJCQkJCSAgIEdGUF9LRVJORUwpOwot
CWlmICghZXRuYXZpdl9kb21haW4tPnBndGFibGVfY3B1KSB7Ci0JCWRtYV9mcmVlX3djKGV0bmF2
aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEssCi0JCQkgICAgZXRuYXZpdl9kb21haW4tPmJhc2Uu
YmFkX3BhZ2VfY3B1LAotCQkJICAgIGV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2RtYSk7
Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQotCW1lbXNldDMyKGV0bmF2aXZfZG9tYWluLT5wZ3Rh
YmxlX2NwdSwgZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfZG1hLAotCQkgUFRfRU5UUklF
Uyk7Ci0KLQlyZXR1cm4gMDsKLX0KKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2NvbnRleHQgKnYx
X2NvbnRleHQgPSB0b192MV9jb250ZXh0KGNvbnRleHQpOwogCi1zdGF0aWMgdm9pZCBldG5hdml2
X2lvbW11djFfZG9tYWluX2ZyZWUoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4p
Ci17Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9kb21haW4gKmV0bmF2aXZfZG9tYWluID0KLQkJ
CXRvX2V0bmF2aXZfZG9tYWluKGRvbWFpbik7CisJZHJtX21tX3Rha2Vkb3duKCZjb250ZXh0LT5t
bSk7CiAKLQlkbWFfZnJlZV93YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYsIFBUX1NJWkUsCi0J
CSAgICBldG5hdml2X2RvbWFpbi0+cGd0YWJsZV9jcHUsIGV0bmF2aXZfZG9tYWluLT5wZ3RhYmxl
X2RtYSk7CisJZG1hX2ZyZWVfd2MoY29udGV4dC0+Z2xvYmFsLT5kZXYsIFBUX1NJWkUsIHYxX2Nv
bnRleHQtPnBndGFibGVfY3B1LAorCQkgICAgdjFfY29udGV4dC0+cGd0YWJsZV9kbWEpOwogCi0J
ZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80SywKLQkJICAgIGV0bmF2
aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2NwdSwKLQkJICAgIGV0bmF2aXZfZG9tYWluLT5iYXNl
LmJhZF9wYWdlX2RtYSk7CisJY29udGV4dC0+Z2xvYmFsLT52MS5zaGFyZWRfY29udGV4dCA9IE5V
TEw7CiAKLQlrZnJlZShldG5hdml2X2RvbWFpbik7CisJa2ZyZWUodjFfY29udGV4dCk7CiB9CiAK
LXN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdXYxX21hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21h
aW4gKmRvbWFpbiwKK3N0YXRpYyBpbnQgZXRuYXZpdl9pb21tdXYxX21hcChzdHJ1Y3QgZXRuYXZp
dl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJICAgICAgIHVuc2lnbmVkIGxvbmcgaW92YSwg
cGh5c19hZGRyX3QgcGFkZHIsCiAJCQkgICAgICAgc2l6ZV90IHNpemUsIGludCBwcm90KQogewot
CXN0cnVjdCBldG5hdml2X2lvbW11djFfZG9tYWluICpldG5hdml2X2RvbWFpbiA9IHRvX2V0bmF2
aXZfZG9tYWluKGRvbWFpbik7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0ICp2MV9j
b250ZXh0ID0gdG9fdjFfY29udGV4dChjb250ZXh0KTsKIAl1bnNpZ25lZCBpbnQgaW5kZXggPSAo
aW92YSAtIEdQVV9NRU1fU1RBUlQpIC8gU1pfNEs7CiAKIAlpZiAoc2l6ZSAhPSBTWl80SykKIAkJ
cmV0dXJuIC1FSU5WQUw7CiAKLQlldG5hdml2X2RvbWFpbi0+cGd0YWJsZV9jcHVbaW5kZXhdID0g
cGFkZHI7CisJdjFfY29udGV4dC0+cGd0YWJsZV9jcHVbaW5kZXhdID0gcGFkZHI7CiAKIAlyZXR1
cm4gMDsKIH0KIAotc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11djFfdW5tYXAoc3RydWN0IGV0
bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCitzdGF0aWMgc2l6ZV90IGV0bmF2aXZfaW9tbXV2
MV91bm1hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCXVuc2lnbmVk
IGxvbmcgaW92YSwgc2l6ZV90IHNpemUpCiB7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9kb21h
aW4gKmV0bmF2aXZfZG9tYWluID0KLQkJCXRvX2V0bmF2aXZfZG9tYWluKGRvbWFpbik7CisJc3Ry
dWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0ICp2MV9jb250ZXh0ID0gdG9fdjFfY29udGV4dChj
b250ZXh0KTsKIAl1bnNpZ25lZCBpbnQgaW5kZXggPSAoaW92YSAtIEdQVV9NRU1fU1RBUlQpIC8g
U1pfNEs7CiAKIAlpZiAoc2l6ZSAhPSBTWl80SykKIAkJcmV0dXJuIC1FSU5WQUw7CiAKLQlldG5h
dml2X2RvbWFpbi0+cGd0YWJsZV9jcHVbaW5kZXhdID0gZXRuYXZpdl9kb21haW4tPmJhc2UuYmFk
X3BhZ2VfZG1hOworCXYxX2NvbnRleHQtPnBndGFibGVfY3B1W2luZGV4XSA9IGNvbnRleHQtPmds
b2JhbC0+YmFkX3BhZ2VfZG1hOwogCiAJcmV0dXJuIFNaXzRLOwogfQogCi1zdGF0aWMgc2l6ZV90
IGV0bmF2aXZfaW9tbXV2MV9kdW1wX3NpemUoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpk
b21haW4pCitzdGF0aWMgc2l6ZV90IGV0bmF2aXZfaW9tbXV2MV9kdW1wX3NpemUoc3RydWN0IGV0
bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCkKIHsKIAlyZXR1cm4gUFRfU0laRTsKIH0KIAot
c3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYxX2R1bXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9t
YWluICpkb21haW4sIHZvaWQgKmJ1ZikKK3N0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2MV9kdW1w
KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCisJCQkJIHZvaWQgKmJ1ZikK
IHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2RvbWFpbiAqZXRuYXZpdl9kb21haW4gPQotCQkJ
dG9fZXRuYXZpdl9kb21haW4oZG9tYWluKTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2NvbnRl
eHQgKnYxX2NvbnRleHQgPSB0b192MV9jb250ZXh0KGNvbnRleHQpOwogCi0JbWVtY3B5KGJ1Ziwg
ZXRuYXZpdl9kb21haW4tPnBndGFibGVfY3B1LCBQVF9TSVpFKTsKKwltZW1jcHkoYnVmLCB2MV9j
b250ZXh0LT5wZ3RhYmxlX2NwdSwgUFRfU0laRSk7CiB9CiAKLXZvaWQgZXRuYXZpdl9pb21tdXYx
X3Jlc3RvcmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCitzdGF0aWMgdm9pZCBldG5hdml2X2lv
bW11djFfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwKKwkJCSAgICAgc3RydWN0IGV0
bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCkKIHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYx
X2RvbWFpbiAqZXRuYXZpdl9kb21haW4gPQotCQkJdG9fZXRuYXZpdl9kb21haW4oZ3B1LT5tbXUt
PmRvbWFpbik7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2MV9jb250ZXh0ICp2MV9jb250ZXh0ID0g
dG9fdjFfY29udGV4dChjb250ZXh0KTsKIAl1MzIgcGd0YWJsZTsKIAogCS8qIHNldCBiYXNlIGFk
ZHJlc3NlcyAqLwpAQCAtMTM2LDcgKzEwMCw3IEBAIHZvaWQgZXRuYXZpdl9pb21tdXYxX3Jlc3Rv
cmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NQ19NRU1P
UllfQkFTRV9BRERSX1BFLCBncHUtPm1lbW9yeV9iYXNlKTsKIAogCS8qIHNldCBwYWdlIHRhYmxl
IGFkZHJlc3MgaW4gTUMgKi8KLQlwZ3RhYmxlID0gKHUzMilldG5hdml2X2RvbWFpbi0+cGd0YWJs
ZV9kbWE7CisJcGd0YWJsZSA9ICh1MzIpdjFfY29udGV4dC0+cGd0YWJsZV9kbWE7CiAKIAlncHVf
d3JpdGUoZ3B1LCBWSVZTX01DX01NVV9GRV9QQUdFX1RBQkxFLCBwZ3RhYmxlKTsKIAlncHVfd3Jp
dGUoZ3B1LCBWSVZTX01DX01NVV9UWF9QQUdFX1RBQkxFLCBwZ3RhYmxlKTsKQEAgLTE0NSwzOSAr
MTA5LDYyIEBAIHZvaWQgZXRuYXZpdl9pb21tdXYxX3Jlc3RvcmUoc3RydWN0IGV0bmF2aXZfZ3B1
ICpncHUpCiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NQ19NTVVfUkFfUEFHRV9UQUJMRSwgcGd0YWJs
ZSk7CiB9CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW5fb3BzIGV0
bmF2aXZfaW9tbXV2MV9vcHMgPSB7Ci0JLmZyZWUgPSBldG5hdml2X2lvbW11djFfZG9tYWluX2Zy
ZWUsCisKK2NvbnN0IHN0cnVjdCBldG5hdml2X2lvbW11X29wcyBldG5hdml2X2lvbW11djFfb3Bz
ID0geworCS5mcmVlID0gZXRuYXZpdl9pb21tdXYxX2ZyZWUsCiAJLm1hcCA9IGV0bmF2aXZfaW9t
bXV2MV9tYXAsCiAJLnVubWFwID0gZXRuYXZpdl9pb21tdXYxX3VubWFwLAogCS5kdW1wX3NpemUg
PSBldG5hdml2X2lvbW11djFfZHVtcF9zaXplLAogCS5kdW1wID0gZXRuYXZpdl9pb21tdXYxX2R1
bXAsCisJLnJlc3RvcmUgPSBldG5hdml2X2lvbW11djFfcmVzdG9yZSwKIH07CiAKLXN0cnVjdCBl
dG5hdml2X2lvbW11X2RvbWFpbiAqCi1ldG5hdml2X2lvbW11djFfZG9tYWluX2FsbG9jKHN0cnVj
dCBldG5hdml2X2dwdSAqZ3B1KQorc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqCitldG5h
dml2X2lvbW11djFfY29udGV4dF9hbGxvYyhzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgKmds
b2JhbCkKIHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYxX2RvbWFpbiAqZXRuYXZpdl9kb21haW47
Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW47Ci0JaW50IHJldDsKKwlzdHJ1
Y3QgZXRuYXZpdl9pb21tdXYxX2NvbnRleHQgKnYxX2NvbnRleHQ7CisJc3RydWN0IGV0bmF2aXZf
aW9tbXVfY29udGV4dCAqY29udGV4dDsKKworCW11dGV4X2xvY2soJmdsb2JhbC0+bG9jayk7CisK
KwkvKgorCSAqIE1NVXYxIGRvZXMgbm90IHN1cHBvcnQgc3dpdGNoaW5nIGJldHdlZW4gZGlmZmVy
ZW50IGNvbnRleHRzIHdpdGhvdXQKKwkgKiBhIHN0b3AgdGhlIHdvcmxkIG9wZXJhdGlvbiwgc28g
d2Ugb25seSBzdXBwb3J0IGEgc2luZ2xlIHNoYXJlZAorCSAqIGNvbnRleHQgd2l0aCB0aGlzIHZl
cnNpb24uCisJICovCisJaWYgKGdsb2JhbC0+djEuc2hhcmVkX2NvbnRleHQpIHsKKwkJY29udGV4
dCA9IGdsb2JhbC0+djEuc2hhcmVkX2NvbnRleHQ7CisJCWV0bmF2aXZfaW9tbXVfY29udGV4dF9n
ZXQoY29udGV4dCk7CisJCW11dGV4X3VubG9jaygmZ2xvYmFsLT5sb2NrKTsKKwkJcmV0dXJuIGNv
bnRleHQ7CisJfQogCi0JZXRuYXZpdl9kb21haW4gPSBremFsbG9jKHNpemVvZigqZXRuYXZpdl9k
b21haW4pLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWV0bmF2aXZfZG9tYWluKQorCXYxX2NvbnRleHQg
PSBremFsbG9jKHNpemVvZigqdjFfY29udGV4dCksIEdGUF9LRVJORUwpOworCWlmICghdjFfY29u
dGV4dCkKIAkJcmV0dXJuIE5VTEw7CiAKLQlkb21haW4gPSAmZXRuYXZpdl9kb21haW4tPmJhc2U7
CisJdjFfY29udGV4dC0+cGd0YWJsZV9jcHUgPSBkbWFfYWxsb2Nfd2MoZ2xvYmFsLT5kZXYsIFBU
X1NJWkUsCisJCQkJCSAgICAgICAmdjFfY29udGV4dC0+cGd0YWJsZV9kbWEsCisJCQkJCSAgICAg
ICBHRlBfS0VSTkVMKTsKKwlpZiAoIXYxX2NvbnRleHQtPnBndGFibGVfY3B1KQorCQlnb3RvIG91
dF9mcmVlOwogCi0JZG9tYWluLT5kZXYgPSBncHUtPmRldjsKLQlkb21haW4tPmJhc2UgPSBHUFVf
TUVNX1NUQVJUOwotCWRvbWFpbi0+c2l6ZSA9IFBUX0VOVFJJRVMgKiBTWl80SzsKLQlkb21haW4t
Pm9wcyA9ICZldG5hdml2X2lvbW11djFfb3BzOworCW1lbXNldDMyKHYxX2NvbnRleHQtPnBndGFi
bGVfY3B1LCBnbG9iYWwtPmJhZF9wYWdlX2RtYSwgUFRfRU5UUklFUyk7CiAKLQlyZXQgPSBfX2V0
bmF2aXZfaW9tbXVfaW5pdChldG5hdml2X2RvbWFpbik7Ci0JaWYgKHJldCkKLQkJZ290byBvdXRf
ZnJlZTsKKwljb250ZXh0ID0gJnYxX2NvbnRleHQtPmJhc2U7CisJY29udGV4dC0+Z2xvYmFsID0g
Z2xvYmFsOworCWtyZWZfaW5pdCgmY29udGV4dC0+cmVmY291bnQpOworCW11dGV4X2luaXQoJmNv
bnRleHQtPmxvY2spOworCUlOSVRfTElTVF9IRUFEKCZjb250ZXh0LT5tYXBwaW5ncyk7CisJZHJt
X21tX2luaXQoJmNvbnRleHQtPm1tLCBHUFVfTUVNX1NUQVJULCBQVF9FTlRSSUVTICogU1pfNEsp
OworCWNvbnRleHQtPmdsb2JhbC0+djEuc2hhcmVkX2NvbnRleHQgPSBjb250ZXh0OworCisJbXV0
ZXhfdW5sb2NrKCZnbG9iYWwtPmxvY2spOwogCi0JcmV0dXJuICZldG5hdml2X2RvbWFpbi0+YmFz
ZTsKKwlyZXR1cm4gY29udGV4dDsKIAogb3V0X2ZyZWU6Ci0Ja2ZyZWUoZXRuYXZpdl9kb21haW4p
OworCW11dGV4X3VubG9jaygmZ2xvYmFsLT5sb2NrKTsKKwlrZnJlZSh2MV9jb250ZXh0KTsKIAly
ZXR1cm4gTlVMTDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfaW9tbXUuaCBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuaApkZWxl
dGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggYjI3OTQwNGNlOTFhLi4wMDAwMDAwMDAwMDAKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5oCisrKyAvZGV2L251bGwK
QEAgLTEsMjAgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8K
LS8qCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTQtMjAxOCBFdG5hdml2IFByb2plY3QKLSAqLwotCi0j
aWZuZGVmIF9fRVROQVZJVl9JT01NVV9IX18KLSNkZWZpbmUgX19FVE5BVklWX0lPTU1VX0hfXwot
Ci1zdHJ1Y3QgZXRuYXZpdl9ncHU7Ci1zdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW47Ci0KLXN0
cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqCi1ldG5hdml2X2lvbW11djFfZG9tYWluX2FsbG9j
KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsKLXZvaWQgZXRuYXZpdl9pb21tdXYxX3Jlc3RvcmUo
c3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOwotCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4g
KgotZXRuYXZpdl9pb21tdXYyX2RvbWFpbl9hbGxvYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSk7
Ci12b2lkIGV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsK
LQotI2VuZGlmIC8qIF9fRVROQVZJVl9JT01NVV9IX18gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXVfdjIuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfaW9tbXVfdjIuYwppbmRleCBkN2NjMTg0ZGE1NzEuLjVjYTIwNzdjMTQ4ZCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdV92Mi5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXVfdjIuYwpAQCAtMTMsNyAr
MTMsNiBAQAogI2luY2x1ZGUgImV0bmF2aXZfY21kYnVmLmgiCiAjaW5jbHVkZSAiZXRuYXZpdl9n
cHUuaCIKICNpbmNsdWRlICJldG5hdml2X21tdS5oIgotI2luY2x1ZGUgImV0bmF2aXZfaW9tbXUu
aCIKICNpbmNsdWRlICJzdGF0ZS54bWwuaCIKICNpbmNsdWRlICJzdGF0ZV9oaS54bWwuaCIKIApA
QCAtMjgsMTEgKzI3LDkgQEAKIAogI2RlZmluZSBNTVV2Ml9NQVhfU1RMQl9FTlRSSUVTCQkxMDI0
CiAKLXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluIHsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9kb21haW4gYmFzZTsKLQkvKiBQKGFnZSkgVChhYmxlKSBBKHJyYXkpICovCi0JdTY0ICpwdGFf
Y3B1OwotCWRtYV9hZGRyX3QgcHRhX2RtYTsKK3N0cnVjdCBldG5hdml2X2lvbW11djJfY29udGV4
dCB7CisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCBiYXNlOworCXVuc2lnbmVkIHNob3J0
IGlkOwogCS8qIE0oYXN0ZXIpIFRMQiBha2EgZmlyc3QgbGV2ZWwgcGFnZXRhYmxlICovCiAJdTMy
ICptdGxiX2NwdTsKIAlkbWFfYWRkcl90IG10bGJfZG1hOwpAQCAtNDEsNDEgKzM4LDYyIEBAIHN0
cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluIHsKIAlkbWFfYWRkcl90IHN0bGJfZG1hW01NVXYy
X01BWF9TVExCX0VOVFJJRVNdOwogfTsKIAotc3RhdGljIHN0cnVjdCBldG5hdml2X2lvbW11djJf
ZG9tYWluICoKLXRvX2V0bmF2aXZfZG9tYWluKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAq
ZG9tYWluKQorc3RhdGljIHN0cnVjdCBldG5hdml2X2lvbW11djJfY29udGV4dCAqCit0b192Ml9j
b250ZXh0KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7Ci0JcmV0dXJu
IGNvbnRhaW5lcl9vZihkb21haW4sIHN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluLCBiYXNl
KTsKKwlyZXR1cm4gY29udGFpbmVyX29mKGNvbnRleHQsIHN0cnVjdCBldG5hdml2X2lvbW11djJf
Y29udGV4dCwgYmFzZSk7CiB9CiAKK3N0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2Ml9mcmVlKHN0
cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCit7CisJc3RydWN0IGV0bmF2aXZf
aW9tbXV2Ml9jb250ZXh0ICp2Ml9jb250ZXh0ID0gdG9fdjJfY29udGV4dChjb250ZXh0KTsKKwlp
bnQgaTsKKworCWRybV9tbV90YWtlZG93bigmY29udGV4dC0+bW0pOworCisJZm9yIChpID0gMDsg
aSA8IE1NVXYyX01BWF9TVExCX0VOVFJJRVM7IGkrKykgeworCQlpZiAodjJfY29udGV4dC0+c3Rs
Yl9jcHVbaV0pCisJCQlkbWFfZnJlZV93Yyhjb250ZXh0LT5nbG9iYWwtPmRldiwgU1pfNEssCisJ
CQkJICAgIHYyX2NvbnRleHQtPnN0bGJfY3B1W2ldLAorCQkJCSAgICB2Ml9jb250ZXh0LT5zdGxi
X2RtYVtpXSk7CisJfQorCisJZG1hX2ZyZWVfd2MoY29udGV4dC0+Z2xvYmFsLT5kZXYsIFNaXzRL
LCB2Ml9jb250ZXh0LT5tdGxiX2NwdSwKKwkJICAgIHYyX2NvbnRleHQtPm10bGJfZG1hKTsKKwor
CWNsZWFyX2JpdCh2Ml9jb250ZXh0LT5pZCwgY29udGV4dC0+Z2xvYmFsLT52Mi5wdGFfYWxsb2Mp
OworCisJdmZyZWUodjJfY29udGV4dCk7Cit9CiBzdGF0aWMgaW50Ci1ldG5hdml2X2lvbW11djJf
ZW5zdXJlX3N0bGIoc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9kb21haW4gKmV0bmF2aXZfZG9tYWlu
LAorZXRuYXZpdl9pb21tdXYyX2Vuc3VyZV9zdGxiKHN0cnVjdCBldG5hdml2X2lvbW11djJfY29u
dGV4dCAqdjJfY29udGV4dCwKIAkJCSAgICBpbnQgc3RsYikKIHsKLQlpZiAoZXRuYXZpdl9kb21h
aW4tPnN0bGJfY3B1W3N0bGJdKQorCWlmICh2Ml9jb250ZXh0LT5zdGxiX2NwdVtzdGxiXSkKIAkJ
cmV0dXJuIDA7CiAKLQlldG5hdml2X2RvbWFpbi0+c3RsYl9jcHVbc3RsYl0gPQotCQkJZG1hX2Fs
bG9jX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEssCi0JCQkJICAgICAmZXRuYXZp
dl9kb21haW4tPnN0bGJfZG1hW3N0bGJdLAorCXYyX2NvbnRleHQtPnN0bGJfY3B1W3N0bGJdID0K
KwkJCWRtYV9hbGxvY193Yyh2Ml9jb250ZXh0LT5iYXNlLmdsb2JhbC0+ZGV2LCBTWl80SywKKwkJ
CQkgICAgICZ2Ml9jb250ZXh0LT5zdGxiX2RtYVtzdGxiXSwKIAkJCQkgICAgIEdGUF9LRVJORUwp
OwogCi0JaWYgKCFldG5hdml2X2RvbWFpbi0+c3RsYl9jcHVbc3RsYl0pCisJaWYgKCF2Ml9jb250
ZXh0LT5zdGxiX2NwdVtzdGxiXSkKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQltZW1zZXQzMihldG5h
dml2X2RvbWFpbi0+c3RsYl9jcHVbc3RsYl0sIE1NVXYyX1BURV9FWENFUFRJT04sCisJbWVtc2V0
MzIodjJfY29udGV4dC0+c3RsYl9jcHVbc3RsYl0sIE1NVXYyX1BURV9FWENFUFRJT04sCiAJCSBT
Wl80SyAvIHNpemVvZih1MzIpKTsKIAotCWV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdVtzdGxiXSA9
IGV0bmF2aXZfZG9tYWluLT5zdGxiX2RtYVtzdGxiXSB8Ci0JCQkJCQkgICAgICBNTVV2Ml9QVEVf
UFJFU0VOVDsKKwl2Ml9jb250ZXh0LT5tdGxiX2NwdVtzdGxiXSA9CisJCQl2Ml9jb250ZXh0LT5z
dGxiX2RtYVtzdGxiXSB8IE1NVXYyX1BURV9QUkVTRU5UOworCiAJcmV0dXJuIDA7CiB9CiAKLXN0
YXRpYyBpbnQgZXRuYXZpdl9pb21tdXYyX21hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4g
KmRvbWFpbiwKK3N0YXRpYyBpbnQgZXRuYXZpdl9pb21tdXYyX21hcChzdHJ1Y3QgZXRuYXZpdl9p
b21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJICAgICAgIHVuc2lnbmVkIGxvbmcgaW92YSwgcGh5
c19hZGRyX3QgcGFkZHIsCiAJCQkgICAgICAgc2l6ZV90IHNpemUsIGludCBwcm90KQogewotCXN0
cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5hdml2X2RvbWFpbiA9Ci0JCQl0b19ldG5h
dml2X2RvbWFpbihkb21haW4pOworCXN0cnVjdCBldG5hdml2X2lvbW11djJfY29udGV4dCAqdjJf
Y29udGV4dCA9IHRvX3YyX2NvbnRleHQoY29udGV4dCk7CiAJaW50IG10bGJfZW50cnksIHN0bGJf
ZW50cnksIHJldDsKIAl1MzIgZW50cnkgPSBsb3dlcl8zMl9iaXRzKHBhZGRyKSB8IE1NVXYyX1BU
RV9QUkVTRU5UOwogCkBAIC05MSwyMCArMTA5LDE5IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9pb21t
dXYyX21hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwKIAltdGxiX2VudHJ5
ID0gKGlvdmEgJiBNTVV2Ml9NVExCX01BU0spID4+IE1NVXYyX01UTEJfU0hJRlQ7CiAJc3RsYl9l
bnRyeSA9IChpb3ZhICYgTU1VdjJfU1RMQl9NQVNLKSA+PiBNTVV2Ml9TVExCX1NISUZUOwogCi0J
cmV0ID0gZXRuYXZpdl9pb21tdXYyX2Vuc3VyZV9zdGxiKGV0bmF2aXZfZG9tYWluLCBtdGxiX2Vu
dHJ5KTsKKwlyZXQgPSBldG5hdml2X2lvbW11djJfZW5zdXJlX3N0bGIodjJfY29udGV4dCwgbXRs
Yl9lbnRyeSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCWV0bmF2aXZfZG9tYWluLT5z
dGxiX2NwdVttdGxiX2VudHJ5XVtzdGxiX2VudHJ5XSA9IGVudHJ5OworCXYyX2NvbnRleHQtPnN0
bGJfY3B1W210bGJfZW50cnldW3N0bGJfZW50cnldID0gZW50cnk7CiAKIAlyZXR1cm4gMDsKIH0K
IAotc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11djJfdW5tYXAoc3RydWN0IGV0bmF2aXZfaW9t
bXVfZG9tYWluICpkb21haW4sCitzdGF0aWMgc2l6ZV90IGV0bmF2aXZfaW9tbXV2Ml91bm1hcChz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJCSAgICB1bnNpZ25lZCBs
b25nIGlvdmEsIHNpemVfdCBzaXplKQogewotCXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWlu
ICpldG5hdml2X2RvbWFpbiA9Ci0JCQl0b19ldG5hdml2X2RvbWFpbihkb21haW4pOworCXN0cnVj
dCBldG5hdml2X2lvbW11djJfY29udGV4dCAqZXRuYXZpdl9kb21haW4gPSB0b192Ml9jb250ZXh0
KGNvbnRleHQpOwogCWludCBtdGxiX2VudHJ5LCBzdGxiX2VudHJ5OwogCiAJaWYgKHNpemUgIT0g
U1pfNEspCkBAIC0xMTgsMTE4ICsxMzUsMzUgQEAgc3RhdGljIHNpemVfdCBldG5hdml2X2lvbW11
djJfdW5tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCiAJcmV0dXJuIFNa
XzRLOwogfQogCi1zdGF0aWMgaW50IGV0bmF2aXZfaW9tbXV2Ml9pbml0KHN0cnVjdCBldG5hdml2
X2lvbW11djJfZG9tYWluICpldG5hdml2X2RvbWFpbikKLXsKLQlpbnQgcmV0OwotCi0JLyogYWxs
b2NhdGUgc2NyYXRjaCBwYWdlICovCi0JZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfY3B1
ID0KLQkJCWRtYV9hbGxvY193YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYsIFNaXzRLLAotCQkJ
CSAgICAgJmV0bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2RtYSwKLQkJCQkgICAgIEdGUF9L
RVJORUwpOwotCWlmICghZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfY3B1KSB7Ci0JCXJl
dCA9IC1FTk9NRU07Ci0JCWdvdG8gZmFpbF9tZW07Ci0JfQotCi0JbWVtc2V0MzIoZXRuYXZpdl9k
b21haW4tPmJhc2UuYmFkX3BhZ2VfY3B1LCAweGRlYWQ1NWFhLAotCQkgU1pfNEsgLyBzaXplb2Yo
dTMyKSk7Ci0KLQlldG5hdml2X2RvbWFpbi0+cHRhX2NwdSA9IGRtYV9hbGxvY193YyhldG5hdml2
X2RvbWFpbi0+YmFzZS5kZXYsCi0JCQkJCSAgICAgICBTWl80SywgJmV0bmF2aXZfZG9tYWluLT5w
dGFfZG1hLAotCQkJCQkgICAgICAgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFldG5hdml2X2RvbWFpbi0+
cHRhX2NwdSkgewotCQlyZXQgPSAtRU5PTUVNOwotCQlnb3RvIGZhaWxfbWVtOwotCX0KLQotCWV0
bmF2aXZfZG9tYWluLT5tdGxiX2NwdSA9IGRtYV9hbGxvY193YyhldG5hdml2X2RvbWFpbi0+YmFz
ZS5kZXYsCi0JCQkJCQlTWl80SywgJmV0bmF2aXZfZG9tYWluLT5tdGxiX2RtYSwKLQkJCQkJCUdG
UF9LRVJORUwpOwotCWlmICghZXRuYXZpdl9kb21haW4tPm10bGJfY3B1KSB7Ci0JCXJldCA9IC1F
Tk9NRU07Ci0JCWdvdG8gZmFpbF9tZW07Ci0JfQotCi0JbWVtc2V0MzIoZXRuYXZpdl9kb21haW4t
Pm10bGJfY3B1LCBNTVV2Ml9QVEVfRVhDRVBUSU9OLAotCQkgTU1VdjJfTUFYX1NUTEJfRU5UUklF
Uyk7Ci0KLQlyZXR1cm4gMDsKLQotZmFpbF9tZW06Ci0JaWYgKGV0bmF2aXZfZG9tYWluLT5iYXNl
LmJhZF9wYWdlX2NwdSkKLQkJZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBT
Wl80SywKLQkJCSAgICBldG5hdml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9jcHUsCi0JCQkgICAg
ZXRuYXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfZG1hKTsKLQotCWlmIChldG5hdml2X2RvbWFp
bi0+cHRhX2NwdSkKLQkJZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80
SywKLQkJCSAgICBldG5hdml2X2RvbWFpbi0+cHRhX2NwdSwgZXRuYXZpdl9kb21haW4tPnB0YV9k
bWEpOwotCi0JaWYgKGV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdSkKLQkJZG1hX2ZyZWVfd2MoZXRu
YXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80SywKLQkJCSAgICBldG5hdml2X2RvbWFpbi0+bXRs
Yl9jcHUsIGV0bmF2aXZfZG9tYWluLT5tdGxiX2RtYSk7Ci0KLQlyZXR1cm4gcmV0OwotfQotCi1z
dGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfZG9tYWluX2ZyZWUoc3RydWN0IGV0bmF2aXZfaW9t
bXVfZG9tYWluICpkb21haW4pCi17Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9kb21haW4gKmV0
bmF2aXZfZG9tYWluID0KLQkJCXRvX2V0bmF2aXZfZG9tYWluKGRvbWFpbik7Ci0JaW50IGk7Ci0K
LQlkbWFfZnJlZV93YyhldG5hdml2X2RvbWFpbi0+YmFzZS5kZXYsIFNaXzRLLAotCQkgICAgZXRu
YXZpdl9kb21haW4tPmJhc2UuYmFkX3BhZ2VfY3B1LAotCQkgICAgZXRuYXZpdl9kb21haW4tPmJh
c2UuYmFkX3BhZ2VfZG1hKTsKLQotCWRtYV9mcmVlX3djKGV0bmF2aXZfZG9tYWluLT5iYXNlLmRl
diwgU1pfNEssCi0JCSAgICBldG5hdml2X2RvbWFpbi0+cHRhX2NwdSwgZXRuYXZpdl9kb21haW4t
PnB0YV9kbWEpOwotCi0JZG1hX2ZyZWVfd2MoZXRuYXZpdl9kb21haW4tPmJhc2UuZGV2LCBTWl80
SywKLQkJICAgIGV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdSwgZXRuYXZpdl9kb21haW4tPm10bGJf
ZG1hKTsKLQotCWZvciAoaSA9IDA7IGkgPCBNTVV2Ml9NQVhfU1RMQl9FTlRSSUVTOyBpKyspIHsK
LQkJaWYgKGV0bmF2aXZfZG9tYWluLT5zdGxiX2NwdVtpXSkKLQkJCWRtYV9mcmVlX3djKGV0bmF2
aXZfZG9tYWluLT5iYXNlLmRldiwgU1pfNEssCi0JCQkJICAgIGV0bmF2aXZfZG9tYWluLT5zdGxi
X2NwdVtpXSwKLQkJCQkgICAgZXRuYXZpdl9kb21haW4tPnN0bGJfZG1hW2ldKTsKLQl9Ci0KLQl2
ZnJlZShldG5hdml2X2RvbWFpbik7Ci19Ci0KLXN0YXRpYyBzaXplX3QgZXRuYXZpdl9pb21tdXYy
X2R1bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbikKK3N0YXRpYyBz
aXplX3QgZXRuYXZpdl9pb21tdXYyX2R1bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250
ZXh0ICpjb250ZXh0KQogewotCXN0cnVjdCBldG5hdml2X2lvbW11djJfZG9tYWluICpldG5hdml2
X2RvbWFpbiA9Ci0JCQl0b19ldG5hdml2X2RvbWFpbihkb21haW4pOworCXN0cnVjdCBldG5hdml2
X2lvbW11djJfY29udGV4dCAqdjJfY29udGV4dCA9IHRvX3YyX2NvbnRleHQoY29udGV4dCk7CiAJ
c2l6ZV90IGR1bXBfc2l6ZSA9IFNaXzRLOwogCWludCBpOwogCiAJZm9yIChpID0gMDsgaSA8IE1N
VXYyX01BWF9TVExCX0VOVFJJRVM7IGkrKykKLQkJaWYgKGV0bmF2aXZfZG9tYWluLT5tdGxiX2Nw
dVtpXSAmIE1NVXYyX1BURV9QUkVTRU5UKQorCQlpZiAodjJfY29udGV4dC0+bXRsYl9jcHVbaV0g
JiBNTVV2Ml9QVEVfUFJFU0VOVCkKIAkJCWR1bXBfc2l6ZSArPSBTWl80SzsKIAogCXJldHVybiBk
dW1wX3NpemU7CiB9CiAKLXN0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2Ml9kdW1wKHN0cnVjdCBl
dG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLCB2b2lkICpidWYpCitzdGF0aWMgdm9pZCBldG5h
dml2X2lvbW11djJfZHVtcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LCB2
b2lkICpidWYpCiB7Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9kb21haW4gKmV0bmF2aXZfZG9t
YWluID0KLQkJCXRvX2V0bmF2aXZfZG9tYWluKGRvbWFpbik7CisJc3RydWN0IGV0bmF2aXZfaW9t
bXV2Ml9jb250ZXh0ICp2Ml9jb250ZXh0ID0gdG9fdjJfY29udGV4dChjb250ZXh0KTsKIAlpbnQg
aTsKIAotCW1lbWNweShidWYsIGV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdSwgU1pfNEspOworCW1l
bWNweShidWYsIHYyX2NvbnRleHQtPm10bGJfY3B1LCBTWl80Syk7CiAJYnVmICs9IFNaXzRLOwog
CWZvciAoaSA9IDA7IGkgPCBNTVV2Ml9NQVhfU1RMQl9FTlRSSUVTOyBpKyssIGJ1ZiArPSBTWl80
SykKLQkJaWYgKGV0bmF2aXZfZG9tYWluLT5tdGxiX2NwdVtpXSAmIE1NVXYyX1BURV9QUkVTRU5U
KQotCQkJbWVtY3B5KGJ1ZiwgZXRuYXZpdl9kb21haW4tPnN0bGJfY3B1W2ldLCBTWl80Syk7CisJ
CWlmICh2Ml9jb250ZXh0LT5tdGxiX2NwdVtpXSAmIE1NVXYyX1BURV9QUkVTRU5UKQorCQkJbWVt
Y3B5KGJ1ZiwgdjJfY29udGV4dC0+c3RsYl9jcHVbaV0sIFNaXzRLKTsKIH0KIAotc3RhdGljIHZv
aWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfbm9uc2VjKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1
KQorc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfbm9uc2VjKHN0cnVjdCBldG5h
dml2X2dwdSAqZ3B1LAorCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7
Ci0Jc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9kb21haW4gKmV0bmF2aXZfZG9tYWluID0KLQkJCXRv
X2V0bmF2aXZfZG9tYWluKGdwdS0+bW11LT5kb21haW4pOworCXN0cnVjdCBldG5hdml2X2lvbW11
djJfY29udGV4dCAqdjJfY29udGV4dCA9IHRvX3YyX2NvbnRleHQoY29udGV4dCk7CiAJdTE2IHBy
ZWZldGNoOwogCiAJLyogSWYgdGhlIE1NVSBpcyBhbHJlYWR5IGVuYWJsZWQgdGhlIHN0YXRlIGlz
IHN0aWxsIHRoZXJlLiAqLwpAQCAtMjM3LDggKzE3MSw4IEBAIHN0YXRpYyB2b2lkIGV0bmF2aXZf
aW9tbXV2Ml9yZXN0b3JlX25vbnNlYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAkJcmV0dXJu
OwogCiAJcHJlZmV0Y2ggPSBldG5hdml2X2J1ZmZlcl9jb25maWdfbW11djIoZ3B1LAotCQkJCSh1
MzIpZXRuYXZpdl9kb21haW4tPm10bGJfZG1hLAotCQkJCSh1MzIpZXRuYXZpdl9kb21haW4tPmJh
c2UuYmFkX3BhZ2VfZG1hKTsKKwkJCQkodTMyKXYyX2NvbnRleHQtPm10bGJfZG1hLAorCQkJCSh1
MzIpY29udGV4dC0+Z2xvYmFsLT5iYWRfcGFnZV9kbWEpOwogCWV0bmF2aXZfZ3B1X3N0YXJ0X2Zl
KGdwdSwgKHUzMilldG5hdml2X2NtZGJ1Zl9nZXRfcGEoJmdwdS0+YnVmZmVyKSwKIAkJCSAgICAg
cHJlZmV0Y2gpOwogCWV0bmF2aXZfZ3B1X3dhaXRfaWRsZShncHUsIDEwMCk7CkBAIC0yNDYsMTAg
KzE4MCwxMCBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfcmVzdG9yZV9ub25zZWMoc3Ry
dWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NTVV2Ml9DT05UUk9M
LCBWSVZTX01NVXYyX0NPTlRST0xfRU5BQkxFKTsKIH0KIAotc3RhdGljIHZvaWQgZXRuYXZpdl9p
b21tdXYyX3Jlc3RvcmVfc2VjKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQorc3RhdGljIHZvaWQg
ZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfc2VjKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LAorCXN0
cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7Ci0Jc3RydWN0IGV0bmF2aXZf
aW9tbXV2Ml9kb21haW4gKmV0bmF2aXZfZG9tYWluID0KLQkJCQl0b19ldG5hdml2X2RvbWFpbihn
cHUtPm1tdS0+ZG9tYWluKTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2NvbnRleHQgKnYyX2Nv
bnRleHQgPSB0b192Ml9jb250ZXh0KGNvbnRleHQpOwogCXUxNiBwcmVmZXRjaDsKIAogCS8qIElm
IHRoZSBNTVUgaXMgYWxyZWFkeSBlbmFibGVkIHRoZSBzdGF0ZSBpcyBzdGlsbCB0aGVyZS4gKi8K
QEAgLTI1NywyNiArMTkxLDI2IEBAIHN0YXRpYyB2b2lkIGV0bmF2aXZfaW9tbXV2Ml9yZXN0b3Jl
X3NlYyhzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAkJcmV0dXJuOwogCiAJZ3B1X3dyaXRlKGdw
dSwgVklWU19NTVV2Ml9QVEFfQUREUkVTU19MT1csCi0JCSAgbG93ZXJfMzJfYml0cyhldG5hdml2
X2RvbWFpbi0+cHRhX2RtYSkpOworCQkgIGxvd2VyXzMyX2JpdHMoY29udGV4dC0+Z2xvYmFsLT52
Mi5wdGFfZG1hKSk7CiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NTVV2Ml9QVEFfQUREUkVTU19ISUdI
LAotCQkgIHVwcGVyXzMyX2JpdHMoZXRuYXZpdl9kb21haW4tPnB0YV9kbWEpKTsKKwkJICB1cHBl
cl8zMl9iaXRzKGNvbnRleHQtPmdsb2JhbC0+djIucHRhX2RtYSkpOwogCWdwdV93cml0ZShncHUs
IFZJVlNfTU1VdjJfUFRBX0NPTlRST0wsIFZJVlNfTU1VdjJfUFRBX0NPTlRST0xfRU5BQkxFKTsK
IAogCWdwdV93cml0ZShncHUsIFZJVlNfTU1VdjJfTk9OU0VDX1NBRkVfQUREUl9MT1csCi0JCSAg
bG93ZXJfMzJfYml0cyhldG5hdml2X2RvbWFpbi0+YmFzZS5iYWRfcGFnZV9kbWEpKTsKKwkJICBs
b3dlcl8zMl9iaXRzKGNvbnRleHQtPmdsb2JhbC0+YmFkX3BhZ2VfZG1hKSk7CiAJZ3B1X3dyaXRl
KGdwdSwgVklWU19NTVV2Ml9TRUNfU0FGRV9BRERSX0xPVywKLQkJICBsb3dlcl8zMl9iaXRzKGV0
bmF2aXZfZG9tYWluLT5iYXNlLmJhZF9wYWdlX2RtYSkpOworCQkgIGxvd2VyXzMyX2JpdHMoY29u
dGV4dC0+Z2xvYmFsLT5iYWRfcGFnZV9kbWEpKTsKIAlncHVfd3JpdGUoZ3B1LCBWSVZTX01NVXYy
X1NBRkVfQUREUkVTU19DT05GSUcsCiAJCSAgVklWU19NTVV2Ml9TQUZFX0FERFJFU1NfQ09ORklH
X05PTl9TRUNfU0FGRV9BRERSX0hJR0goCi0JCSAgdXBwZXJfMzJfYml0cyhldG5hdml2X2RvbWFp
bi0+YmFzZS5iYWRfcGFnZV9kbWEpKSB8CisJCSAgdXBwZXJfMzJfYml0cyhjb250ZXh0LT5nbG9i
YWwtPmJhZF9wYWdlX2RtYSkpIHwKIAkJICBWSVZTX01NVXYyX1NBRkVfQUREUkVTU19DT05GSUdf
U0VDX1NBRkVfQUREUl9ISUdIKAotCQkgIHVwcGVyXzMyX2JpdHMoZXRuYXZpdl9kb21haW4tPmJh
c2UuYmFkX3BhZ2VfZG1hKSkpOworCQkgIHVwcGVyXzMyX2JpdHMoY29udGV4dC0+Z2xvYmFsLT5i
YWRfcGFnZV9kbWEpKSk7CiAKLQlldG5hdml2X2RvbWFpbi0+cHRhX2NwdVswXSA9IGV0bmF2aXZf
ZG9tYWluLT5tdGxiX2RtYSB8Ci0JCQkJICAgICBWSVZTX01NVXYyX0NPTkZJR1VSQVRJT05fTU9E
RV9NT0RFNF9LOworCWNvbnRleHQtPmdsb2JhbC0+djIucHRhX2NwdVswXSA9IHYyX2NvbnRleHQt
Pm10bGJfZG1hIHwKKwkJCQkgCSBWSVZTX01NVXYyX0NPTkZJR1VSQVRJT05fTU9ERV9NT0RFNF9L
OwogCiAJLyogdHJpZ2dlciBhIFBUQSBsb2FkIHRocm91Z2ggdGhlIEZFICovCi0JcHJlZmV0Y2gg
PSBldG5hdml2X2J1ZmZlcl9jb25maWdfcHRhKGdwdSk7CisJcHJlZmV0Y2ggPSBldG5hdml2X2J1
ZmZlcl9jb25maWdfcHRhKGdwdSwgdjJfY29udGV4dC0+aWQpOwogCWV0bmF2aXZfZ3B1X3N0YXJ0
X2ZlKGdwdSwgKHUzMilldG5hdml2X2NtZGJ1Zl9nZXRfcGEoJmdwdS0+YnVmZmVyKSwKIAkJCSAg
ICAgcHJlZmV0Y2gpOwogCWV0bmF2aXZfZ3B1X3dhaXRfaWRsZShncHUsIDEwMCk7CkBAIC0yODQs
MTQgKzIxOCwxNSBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11djJfcmVzdG9yZV9zZWMoc3Ry
dWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJZ3B1X3dyaXRlKGdwdSwgVklWU19NTVV2Ml9TRUNfQ09O
VFJPTCwgVklWU19NTVV2Ml9TRUNfQ09OVFJPTF9FTkFCTEUpOwogfQogCi12b2lkIGV0bmF2aXZf
aW9tbXV2Ml9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQorc3RhdGljIHZvaWQgZXRu
YXZpdl9pb21tdXYyX3Jlc3RvcmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsCisJCQkJICAgIHN0
cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQpCiB7CiAJc3dpdGNoIChncHUtPnNl
Y19tb2RlKSB7CiAJY2FzZSBFVE5BX1NFQ19OT05FOgotCQlldG5hdml2X2lvbW11djJfcmVzdG9y
ZV9ub25zZWMoZ3B1KTsKKwkJZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfbm9uc2VjKGdwdSwgY29u
dGV4dCk7CiAJCWJyZWFrOwogCWNhc2UgRVROQV9TRUNfS0VSTkVMOgotCQlldG5hdml2X2lvbW11
djJfcmVzdG9yZV9zZWMoZ3B1KTsKKwkJZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfc2VjKGdwdSwg
Y29udGV4dCk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCVdBUk4oMSwgInVuaGFuZGxlZCBHUFUg
c2VjdXJpdHkgbW9kZVxuIik7CkBAIC0yOTksMzkgKzIzNCw1NiBAQCB2b2lkIGV0bmF2aXZfaW9t
bXV2Ml9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogCX0KIH0KIAotc3RhdGljIGNv
bnN0IHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbl9vcHMgZXRuYXZpdl9pb21tdXYyX29wcyA9
IHsKLQkuZnJlZSA9IGV0bmF2aXZfaW9tbXV2Ml9kb21haW5fZnJlZSwKK2NvbnN0IHN0cnVjdCBl
dG5hdml2X2lvbW11X29wcyBldG5hdml2X2lvbW11djJfb3BzID0geworCS5mcmVlID0gZXRuYXZp
dl9pb21tdXYyX2ZyZWUsCiAJLm1hcCA9IGV0bmF2aXZfaW9tbXV2Ml9tYXAsCiAJLnVubWFwID0g
ZXRuYXZpdl9pb21tdXYyX3VubWFwLAogCS5kdW1wX3NpemUgPSBldG5hdml2X2lvbW11djJfZHVt
cF9zaXplLAogCS5kdW1wID0gZXRuYXZpdl9pb21tdXYyX2R1bXAsCisJLnJlc3RvcmUgPSBldG5h
dml2X2lvbW11djJfcmVzdG9yZSwKIH07CiAKLXN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAq
Ci1ldG5hdml2X2lvbW11djJfZG9tYWluX2FsbG9jKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQor
c3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqCitldG5hdml2X2lvbW11djJfY29udGV4dF9h
bGxvYyhzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgKmdsb2JhbCkKIHsKLQlzdHJ1Y3QgZXRu
YXZpdl9pb21tdXYyX2RvbWFpbiAqZXRuYXZpdl9kb21haW47Ci0Jc3RydWN0IGV0bmF2aXZfaW9t
bXVfZG9tYWluICpkb21haW47Ci0JaW50IHJldDsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2Nv
bnRleHQgKnYyX2NvbnRleHQ7CisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4
dDsKIAotCWV0bmF2aXZfZG9tYWluID0gdnphbGxvYyhzaXplb2YoKmV0bmF2aXZfZG9tYWluKSk7
Ci0JaWYgKCFldG5hdml2X2RvbWFpbikKKwl2Ml9jb250ZXh0ID0gdnphbGxvYyhzaXplb2YoKnYy
X2NvbnRleHQpKTsKKwlpZiAoIXYyX2NvbnRleHQpCiAJCXJldHVybiBOVUxMOwogCi0JZG9tYWlu
ID0gJmV0bmF2aXZfZG9tYWluLT5iYXNlOworCW11dGV4X2xvY2soJmdsb2JhbC0+bG9jayk7CisJ
djJfY29udGV4dC0+aWQgPSBmaW5kX2ZpcnN0X3plcm9fYml0KGdsb2JhbC0+djIucHRhX2FsbG9j
LAorCQkJCQkgICAgIEVUTkFWSVZfUFRBX0VOVFJJRVMpOworCWlmICh2Ml9jb250ZXh0LT5pZCA8
IEVUTkFWSVZfUFRBX0VOVFJJRVMpIHsKKwkJc2V0X2JpdCh2Ml9jb250ZXh0LT5pZCwgZ2xvYmFs
LT52Mi5wdGFfYWxsb2MpOworCX0gZWxzZSB7CisJCW11dGV4X3VubG9jaygmZ2xvYmFsLT5sb2Nr
KTsKKwkJZ290byBvdXRfZnJlZTsKKwl9CisJbXV0ZXhfdW5sb2NrKCZnbG9iYWwtPmxvY2spOwog
Ci0JZG9tYWluLT5kZXYgPSBncHUtPmRldjsKLQlkb21haW4tPmJhc2UgPSBTWl80SzsKLQlkb21h
aW4tPnNpemUgPSAodTY0KVNaXzFHICogNCAtIFNaXzRLOwotCWRvbWFpbi0+b3BzID0gJmV0bmF2
aXZfaW9tbXV2Ml9vcHM7CisJdjJfY29udGV4dC0+bXRsYl9jcHUgPSBkbWFfYWxsb2Nfd2MoZ2xv
YmFsLT5kZXYsIFNaXzRLLAorCQkJCQkgICAgJnYyX2NvbnRleHQtPm10bGJfZG1hLCBHRlBfS0VS
TkVMKTsKKwlpZiAoIXYyX2NvbnRleHQtPm10bGJfY3B1KQorCQlnb3RvIG91dF9mcmVlX2lkOwog
Ci0JcmV0ID0gZXRuYXZpdl9pb21tdXYyX2luaXQoZXRuYXZpdl9kb21haW4pOwotCWlmIChyZXQp
Ci0JCWdvdG8gb3V0X2ZyZWU7CisJbWVtc2V0MzIodjJfY29udGV4dC0+bXRsYl9jcHUsIE1NVXYy
X1BURV9FWENFUFRJT04sCisJCSBNTVV2Ml9NQVhfU1RMQl9FTlRSSUVTKTsKKworCWNvbnRleHQg
PSAmdjJfY29udGV4dC0+YmFzZTsKKwljb250ZXh0LT5nbG9iYWwgPSBnbG9iYWw7CisJa3JlZl9p
bml0KCZjb250ZXh0LT5yZWZjb3VudCk7CisJbXV0ZXhfaW5pdCgmY29udGV4dC0+bG9jayk7CisJ
SU5JVF9MSVNUX0hFQUQoJmNvbnRleHQtPm1hcHBpbmdzKTsKKwlkcm1fbW1faW5pdCgmY29udGV4
dC0+bW0sIFNaXzRLLCAodTY0KVNaXzFHICogNCAtIFNaXzRLKTsKIAotCXJldHVybiAmZXRuYXZp
dl9kb21haW4tPmJhc2U7CisJcmV0dXJuIGNvbnRleHQ7CiAKK291dF9mcmVlX2lkOgorCWNsZWFy
X2JpdCh2Ml9jb250ZXh0LT5pZCwgZ2xvYmFsLT52Mi5wdGFfYWxsb2MpOwogb3V0X2ZyZWU6Ci0J
dmZyZWUoZXRuYXZpdl9kb21haW4pOworCXZmcmVlKHYyX2NvbnRleHQpOwogCXJldHVybiBOVUxM
OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuYyBi
L2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11LmMKaW5kZXggMzM0OGQ5OTYyMTc3
Li5jZjQ5ZjBlMmUxY2IgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfbW11LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuYwpAQCAt
Myw2ICszLDcgQEAKICAqIENvcHlyaWdodCAoQykgMjAxNS0yMDE4IEV0bmF2aXYgUHJvamVjdAog
ICovCiAKKyNpbmNsdWRlIDxsaW51eC9kbWEtbWFwcGluZy5oPgogI2luY2x1ZGUgPGxpbnV4L3Nj
YXR0ZXJsaXN0Lmg+CiAKICNpbmNsdWRlICJjb21tb24ueG1sLmgiCkBAIC0xMCwxMCArMTEsOSBA
QAogI2luY2x1ZGUgImV0bmF2aXZfZHJ2LmgiCiAjaW5jbHVkZSAiZXRuYXZpdl9nZW0uaCIKICNp
bmNsdWRlICJldG5hdml2X2dwdS5oIgotI2luY2x1ZGUgImV0bmF2aXZfaW9tbXUuaCIKICNpbmNs
dWRlICJldG5hdml2X21tdS5oIgogCi1zdGF0aWMgdm9pZCBldG5hdml2X2RvbWFpbl91bm1hcChz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwKK3N0YXRpYyB2b2lkIGV0bmF2aXZf
Y29udGV4dF91bm1hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJ
CSB1bnNpZ25lZCBsb25nIGlvdmEsIHNpemVfdCBzaXplKQogewogCXNpemVfdCB1bm1hcHBlZF9w
YWdlLCB1bm1hcHBlZCA9IDA7CkBAIC0yNiw3ICsyNiw4IEBAIHN0YXRpYyB2b2lkIGV0bmF2aXZf
ZG9tYWluX3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluLAogCX0KIAog
CXdoaWxlICh1bm1hcHBlZCA8IHNpemUpIHsKLQkJdW5tYXBwZWRfcGFnZSA9IGRvbWFpbi0+b3Bz
LT51bm1hcChkb21haW4sIGlvdmEsIHBnc2l6ZSk7CisJCXVubWFwcGVkX3BhZ2UgPSBjb250ZXh0
LT5nbG9iYWwtPm9wcy0+dW5tYXAoY29udGV4dCwgaW92YSwKKwkJCQkJCQkgICAgcGdzaXplKTsK
IAkJaWYgKCF1bm1hcHBlZF9wYWdlKQogCQkJYnJlYWs7CiAKQEAgLTM1LDcgKzM2LDcgQEAgc3Rh
dGljIHZvaWQgZXRuYXZpdl9kb21haW5fdW5tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWlu
ICpkb21haW4sCiAJfQogfQogCi1zdGF0aWMgaW50IGV0bmF2aXZfZG9tYWluX21hcChzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwKK3N0YXRpYyBpbnQgZXRuYXZpdl9jb250ZXh0
X21hcChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkJICAgICAgdW5z
aWduZWQgbG9uZyBpb3ZhLCBwaHlzX2FkZHJfdCBwYWRkciwKIAkJCSAgICAgIHNpemVfdCBzaXpl
LCBpbnQgcHJvdCkKIHsKQEAgLTUxLDcgKzUyLDggQEAgc3RhdGljIGludCBldG5hdml2X2RvbWFp
bl9tYXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCiAJfQogCiAJd2hpbGUg
KHNpemUpIHsKLQkJcmV0ID0gZG9tYWluLT5vcHMtPm1hcChkb21haW4sIGlvdmEsIHBhZGRyLCBw
Z3NpemUsIHByb3QpOworCQlyZXQgPSBjb250ZXh0LT5nbG9iYWwtPm9wcy0+bWFwKGNvbnRleHQs
IGlvdmEsIHBhZGRyLCBwZ3NpemUsCisJCQkJCQlwcm90KTsKIAkJaWYgKHJldCkKIAkJCWJyZWFr
OwogCkBAIC02MiwyMSArNjQsMTkgQEAgc3RhdGljIGludCBldG5hdml2X2RvbWFpbl9tYXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4sCiAKIAkvKiB1bnJvbGwgbWFwcGluZyBp
biBjYXNlIHNvbWV0aGluZyB3ZW50IHdyb25nICovCiAJaWYgKHJldCkKLQkJZXRuYXZpdl9kb21h
aW5fdW5tYXAoZG9tYWluLCBvcmlnX2lvdmEsIG9yaWdfc2l6ZSAtIHNpemUpOworCQlldG5hdml2
X2NvbnRleHRfdW5tYXAoY29udGV4dCwgb3JpZ19pb3ZhLCBvcmlnX3NpemUgLSBzaXplKTsKIAog
CXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9tYXAoc3RydWN0IGV0
bmF2aXZfaW9tbXUgKmlvbW11LCB1MzIgaW92YSwKK3N0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9t
YXAoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwgdTMyIGlvdmEsCiAJCQkg
ICAgIHN0cnVjdCBzZ190YWJsZSAqc2d0LCB1bnNpZ25lZCBsZW4sIGludCBwcm90KQotewotCXN0
cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWluID0gaW9tbXUtPmRvbWFpbjsKLQlzdHJ1
Y3Qgc2NhdHRlcmxpc3QgKnNnOworewlzdHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnOwogCXVuc2lnbmVk
IGludCBkYSA9IGlvdmE7CiAJdW5zaWduZWQgaW50IGksIGo7CiAJaW50IHJldDsKIAotCWlmICgh
ZG9tYWluIHx8ICFzZ3QpCisJaWYgKCFjb250ZXh0IHx8ICFzZ3QpCiAJCXJldHVybiAtRUlOVkFM
OwogCiAJZm9yX2VhY2hfc2coc2d0LT5zZ2wsIHNnLCBzZ3QtPm5lbnRzLCBpKSB7CkBAIC04NSw3
ICs4NSw3IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9tYXAoc3RydWN0IGV0bmF2aXZfaW9t
bXUgKmlvbW11LCB1MzIgaW92YSwKIAogCQlWRVJCKCJtYXBbJWRdOiAlMDh4ICUwOHgoJXp4KSIs
IGksIGlvdmEsIHBhLCBieXRlcyk7CiAKLQkJcmV0ID0gZXRuYXZpdl9kb21haW5fbWFwKGRvbWFp
biwgZGEsIHBhLCBieXRlcywgcHJvdCk7CisJCXJldCA9IGV0bmF2aXZfY29udGV4dF9tYXAoY29u
dGV4dCwgZGEsIHBhLCBieXRlcywgcHJvdCk7CiAJCWlmIChyZXQpCiAJCQlnb3RvIGZhaWw7CiAK
QEAgLTEwMCwxNiArMTAwLDE1IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9tYXAoc3RydWN0
IGV0bmF2aXZfaW9tbXUgKmlvbW11LCB1MzIgaW92YSwKIAlmb3JfZWFjaF9zZyhzZ3QtPnNnbCwg
c2csIGksIGopIHsKIAkJc2l6ZV90IGJ5dGVzID0gc2dfZG1hX2xlbihzZykgKyBzZy0+b2Zmc2V0
OwogCi0JCWV0bmF2aXZfZG9tYWluX3VubWFwKGRvbWFpbiwgZGEsIGJ5dGVzKTsKKwkJZXRuYXZp
dl9jb250ZXh0X3VubWFwKGNvbnRleHQsIGRhLCBieXRlcyk7CiAJCWRhICs9IGJ5dGVzOwogCX0K
IAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBldG5hdml2X2lvbW11X3VubWFwKHN0cnVj
dCBldG5hdml2X2lvbW11ICppb21tdSwgdTMyIGlvdmEsCitzdGF0aWMgdm9pZCBldG5hdml2X2lv
bW11X3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsIHUzMiBpb3Zh
LAogCQkJCXN0cnVjdCBzZ190YWJsZSAqc2d0LCB1bnNpZ25lZCBsZW4pCiB7Ci0Jc3RydWN0IGV0
bmF2aXZfaW9tbXVfZG9tYWluICpkb21haW4gPSBpb21tdS0+ZG9tYWluOwogCXN0cnVjdCBzY2F0
dGVybGlzdCAqc2c7CiAJdW5zaWduZWQgaW50IGRhID0gaW92YTsKIAlpbnQgaTsKQEAgLTExNyw3
ICsxMTYsNyBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2lvbW11X3VubWFwKHN0cnVjdCBldG5hdml2
X2lvbW11ICppb21tdSwgdTMyIGlvdmEsCiAJZm9yX2VhY2hfc2coc2d0LT5zZ2wsIHNnLCBzZ3Qt
Pm5lbnRzLCBpKSB7CiAJCXNpemVfdCBieXRlcyA9IHNnX2RtYV9sZW4oc2cpICsgc2ctPm9mZnNl
dDsKIAotCQlldG5hdml2X2RvbWFpbl91bm1hcChkb21haW4sIGRhLCBieXRlcyk7CisJCWV0bmF2
aXZfY29udGV4dF91bm1hcChjb250ZXh0LCBkYSwgYnl0ZXMpOwogCiAJCVZFUkIoInVubWFwWyVk
XTogJTA4eCglengpIiwgaSwgaW92YSwgYnl0ZXMpOwogCkBAIC0xMjcsMjQgKzEyNiwyNCBAQCBz
dGF0aWMgdm9pZCBldG5hdml2X2lvbW11X3VubWFwKHN0cnVjdCBldG5hdml2X2lvbW11ICppb21t
dSwgdTMyIGlvdmEsCiAJfQogfQogCi1zdGF0aWMgdm9pZCBldG5hdml2X2lvbW11X3JlbW92ZV9t
YXBwaW5nKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCitzdGF0aWMgdm9pZCBldG5hdml2X2lv
bW11X3JlbW92ZV9tYXBwaW5nKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQs
CiAJc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICptYXBwaW5nKQogewogCXN0cnVjdCBldG5h
dml2X2dlbV9vYmplY3QgKmV0bmF2aXZfb2JqID0gbWFwcGluZy0+b2JqZWN0OwogCi0JZXRuYXZp
dl9pb21tdV91bm1hcChtbXUsIG1hcHBpbmctPnZyYW1fbm9kZS5zdGFydCwKKwlldG5hdml2X2lv
bW11X3VubWFwKGNvbnRleHQsIG1hcHBpbmctPnZyYW1fbm9kZS5zdGFydCwKIAkJCSAgICBldG5h
dml2X29iai0+c2d0LCBldG5hdml2X29iai0+YmFzZS5zaXplKTsKIAlkcm1fbW1fcmVtb3ZlX25v
ZGUoJm1hcHBpbmctPnZyYW1fbm9kZSk7CiB9CiAKLXN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9m
aW5kX2lvdmEoc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK3N0YXRpYyBpbnQgZXRuYXZpdl9p
b21tdV9maW5kX2lvdmEoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJ
CQkgICBzdHJ1Y3QgZHJtX21tX25vZGUgKm5vZGUsIHNpemVfdCBzaXplKQogewogCXN0cnVjdCBl
dG5hdml2X3ZyYW1fbWFwcGluZyAqZnJlZSA9IE5VTEw7CiAJZW51bSBkcm1fbW1faW5zZXJ0X21v
ZGUgbW9kZSA9IERSTV9NTV9JTlNFUlRfTE9XOwogCWludCByZXQ7CiAKLQlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZtbXUtPmxvY2spOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNvbnRleHQtPmxvY2sp
OwogCiAJd2hpbGUgKDEpIHsKIAkJc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICptLCAqbjsK
QEAgLTE1MiwxNyArMTUxLDE3IEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9pb21tdV9maW5kX2lvdmEo
c3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKIAkJc3RydWN0IGxpc3RfaGVhZCBsaXN0OwogCQli
b29sIGZvdW5kOwogCi0JCXJldCA9IGRybV9tbV9pbnNlcnRfbm9kZV9pbl9yYW5nZSgmbW11LT5t
bSwgbm9kZSwKKwkJcmV0ID0gZHJtX21tX2luc2VydF9ub2RlX2luX3JhbmdlKCZjb250ZXh0LT5t
bSwgbm9kZSwKIAkJCQkJCSAgc2l6ZSwgMCwgMCwgMCwgVTY0X01BWCwgbW9kZSk7CiAJCWlmIChy
ZXQgIT0gLUVOT1NQQykKIAkJCWJyZWFrOwogCiAJCS8qIFRyeSB0byByZXRpcmUgc29tZSBlbnRy
aWVzICovCi0JCWRybV9tbV9zY2FuX2luaXQoJnNjYW4sICZtbXUtPm1tLCBzaXplLCAwLCAwLCBt
b2RlKTsKKwkJZHJtX21tX3NjYW5faW5pdCgmc2NhbiwgJmNvbnRleHQtPm1tLCBzaXplLCAwLCAw
LCBtb2RlKTsKIAogCQlmb3VuZCA9IDA7CiAJCUlOSVRfTElTVF9IRUFEKCZsaXN0KTsKLQkJbGlz
dF9mb3JfZWFjaF9lbnRyeShmcmVlLCAmbW11LT5tYXBwaW5ncywgbW11X25vZGUpIHsKKwkJbGlz
dF9mb3JfZWFjaF9lbnRyeShmcmVlLCAmY29udGV4dC0+bWFwcGluZ3MsIG1tdV9ub2RlKSB7CiAJ
CQkvKiBJZiB0aGlzIHZyYW0gbm9kZSBoYXMgbm90IGJlZW4gdXNlZCwgc2tpcCB0aGlzLiAqLwog
CQkJaWYgKCFmcmVlLT52cmFtX25vZGUubW0pCiAJCQkJY29udGludWU7CkBAIC0yMDQsOCArMjAz
LDggQEAgc3RhdGljIGludCBldG5hdml2X2lvbW11X2ZpbmRfaW92YShzdHJ1Y3QgZXRuYXZpdl9p
b21tdSAqbW11LAogCQkgKiB0aGlzIG1hcHBpbmcuCiAJCSAqLwogCQlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5X3NhZmUobSwgbiwgJmxpc3QsIHNjYW5fbm9kZSkgewotCQkJZXRuYXZpdl9pb21tdV9yZW1v
dmVfbWFwcGluZyhtbXUsIG0pOwotCQkJbS0+bW11ID0gTlVMTDsKKwkJCWV0bmF2aXZfaW9tbXVf
cmVtb3ZlX21hcHBpbmcoY29udGV4dCwgbSk7CisJCQltLT5jb250ZXh0ID0gTlVMTDsKIAkJCWxp
c3RfZGVsX2luaXQoJm0tPm1tdV9ub2RlKTsKIAkJCWxpc3RfZGVsX2luaXQoJm0tPnNjYW5fbm9k
ZSk7CiAJCX0KQEAgLTIyMSw3ICsyMjAsNyBAQCBzdGF0aWMgaW50IGV0bmF2aXZfaW9tbXVfZmlu
ZF9pb3ZhKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCiAJcmV0dXJuIHJldDsKIH0KIAotaW50
IGV0bmF2aXZfaW9tbXVfbWFwX2dlbShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAoraW50IGV0
bmF2aXZfaW9tbXVfbWFwX2dlbShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0
LAogCXN0cnVjdCBldG5hdml2X2dlbV9vYmplY3QgKmV0bmF2aXZfb2JqLCB1MzIgbWVtb3J5X2Jh
c2UsCiAJc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICptYXBwaW5nKQogewpAQCAtMjMxLDE3
ICsyMzAsMTcgQEAgaW50IGV0bmF2aXZfaW9tbXVfbWFwX2dlbShzdHJ1Y3QgZXRuYXZpdl9pb21t
dSAqbW11LAogCiAJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZXRuYXZpdl9vYmotPmxvY2spOwogCi0J
bXV0ZXhfbG9jaygmbW11LT5sb2NrKTsKKwltdXRleF9sb2NrKCZjb250ZXh0LT5sb2NrKTsKIAog
CS8qIHYxIE1NVSBjYW4gb3B0aW1pemUgc2luZ2xlIGVudHJ5IChjb250aWd1b3VzKSBzY2F0dGVy
bGlzdHMgKi8KLQlpZiAobW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEgJiYKKwlpZiAo
Y29udGV4dC0+Z2xvYmFsLT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEgJiYKIAkgICAgc2d0
LT5uZW50cyA9PSAxICYmICEoZXRuYXZpdl9vYmotPmZsYWdzICYgRVROQV9CT19GT1JDRV9NTVUp
KSB7CiAJCXUzMiBpb3ZhOwogCiAJCWlvdmEgPSBzZ19kbWFfYWRkcmVzcyhzZ3QtPnNnbCkgLSBt
ZW1vcnlfYmFzZTsKIAkJaWYgKGlvdmEgPCAweDgwMDAwMDAwIC0gc2dfZG1hX2xlbihzZ3QtPnNn
bCkpIHsKIAkJCW1hcHBpbmctPmlvdmEgPSBpb3ZhOwotCQkJbGlzdF9hZGRfdGFpbCgmbWFwcGlu
Zy0+bW11X25vZGUsICZtbXUtPm1hcHBpbmdzKTsKKwkJCWxpc3RfYWRkX3RhaWwoJm1hcHBpbmct
Pm1tdV9ub2RlLCAmY29udGV4dC0+bWFwcGluZ3MpOwogCQkJcmV0ID0gMDsKIAkJCWdvdG8gdW5s
b2NrOwogCQl9CkBAIC0yNDksMTIgKzI0OCwxMiBAQCBpbnQgZXRuYXZpdl9pb21tdV9tYXBfZ2Vt
KHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCiAKIAlub2RlID0gJm1hcHBpbmctPnZyYW1fbm9k
ZTsKIAotCXJldCA9IGV0bmF2aXZfaW9tbXVfZmluZF9pb3ZhKG1tdSwgbm9kZSwgZXRuYXZpdl9v
YmotPmJhc2Uuc2l6ZSk7CisJcmV0ID0gZXRuYXZpdl9pb21tdV9maW5kX2lvdmEoY29udGV4dCwg
bm9kZSwgZXRuYXZpdl9vYmotPmJhc2Uuc2l6ZSk7CiAJaWYgKHJldCA8IDApCiAJCWdvdG8gdW5s
b2NrOwogCiAJbWFwcGluZy0+aW92YSA9IG5vZGUtPnN0YXJ0OwotCXJldCA9IGV0bmF2aXZfaW9t
bXVfbWFwKG1tdSwgbm9kZS0+c3RhcnQsIHNndCwgZXRuYXZpdl9vYmotPmJhc2Uuc2l6ZSwKKwly
ZXQgPSBldG5hdml2X2lvbW11X21hcChjb250ZXh0LCBub2RlLT5zdGFydCwgc2d0LCBldG5hdml2
X29iai0+YmFzZS5zaXplLAogCQkJCUVUTkFWSVZfUFJPVF9SRUFEIHwgRVROQVZJVl9QUk9UX1dS
SVRFKTsKIAogCWlmIChyZXQgPCAwKSB7CkBAIC0yNjIsODQgKzI2MSw2MyBAQCBpbnQgZXRuYXZp
dl9pb21tdV9tYXBfZ2VtKHN0cnVjdCBldG5hdml2X2lvbW11ICptbXUsCiAJCWdvdG8gdW5sb2Nr
OwogCX0KIAotCWxpc3RfYWRkX3RhaWwoJm1hcHBpbmctPm1tdV9ub2RlLCAmbW11LT5tYXBwaW5n
cyk7Ci0JbW11LT5mbHVzaF9zZXErKzsKKwlsaXN0X2FkZF90YWlsKCZtYXBwaW5nLT5tbXVfbm9k
ZSwgJmNvbnRleHQtPm1hcHBpbmdzKTsKKwljb250ZXh0LT5mbHVzaF9zZXErKzsKIHVubG9jazoK
LQltdXRleF91bmxvY2soJm1tdS0+bG9jayk7CisJbXV0ZXhfdW5sb2NrKCZjb250ZXh0LT5sb2Nr
KTsKIAogCXJldHVybiByZXQ7CiB9CiAKLXZvaWQgZXRuYXZpdl9pb21tdV91bm1hcF9nZW0oc3Ry
dWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9pb21tdV91bm1hcF9nZW0oc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAlzdHJ1Y3QgZXRuYXZpdl92cmFt
X21hcHBpbmcgKm1hcHBpbmcpCiB7CiAJV0FSTl9PTihtYXBwaW5nLT51c2UpOwogCi0JbXV0ZXhf
bG9jaygmbW11LT5sb2NrKTsKKwltdXRleF9sb2NrKCZjb250ZXh0LT5sb2NrKTsKIAogCS8qIElm
IHRoZSB2cmFtIG5vZGUgaXMgb24gdGhlIG1tLCB1bm1hcCBhbmQgcmVtb3ZlIHRoZSBub2RlICov
Ci0JaWYgKG1hcHBpbmctPnZyYW1fbm9kZS5tbSA9PSAmbW11LT5tbSkKLQkJZXRuYXZpdl9pb21t
dV9yZW1vdmVfbWFwcGluZyhtbXUsIG1hcHBpbmcpOworCWlmIChtYXBwaW5nLT52cmFtX25vZGUu
bW0gPT0gJmNvbnRleHQtPm1tKQorCQlldG5hdml2X2lvbW11X3JlbW92ZV9tYXBwaW5nKGNvbnRl
eHQsIG1hcHBpbmcpOwogCiAJbGlzdF9kZWwoJm1hcHBpbmctPm1tdV9ub2RlKTsKLQltbXUtPmZs
dXNoX3NlcSsrOwotCW11dGV4X3VubG9jaygmbW11LT5sb2NrKTsKKwljb250ZXh0LT5mbHVzaF9z
ZXErKzsKKwltdXRleF91bmxvY2soJmNvbnRleHQtPmxvY2spOwogfQogCi12b2lkIGV0bmF2aXZf
aW9tbXVfZGVzdHJveShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11KQorc3RhdGljIHZvaWQgZXRu
YXZpdl9pb21tdV9jb250ZXh0X2ZyZWUoc3RydWN0IGtyZWYgKmtyZWYpCiB7Ci0JZHJtX21tX3Rh
a2Vkb3duKCZtbXUtPm1tKTsKLQltbXUtPmRvbWFpbi0+b3BzLT5mcmVlKG1tdS0+ZG9tYWluKTsK
LQlrZnJlZShtbXUpOwotfQorCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQg
PQorCQljb250YWluZXJfb2Yoa3JlZiwgc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCwgcmVm
Y291bnQpOwogCi1zdHJ1Y3QgZXRuYXZpdl9pb21tdSAqZXRuYXZpdl9pb21tdV9uZXcoc3RydWN0
IGV0bmF2aXZfZ3B1ICpncHUpCisJY29udGV4dC0+Z2xvYmFsLT5vcHMtPmZyZWUoY29udGV4dCk7
Cit9Cit2b2lkIGV0bmF2aXZfaW9tbXVfY29udGV4dF9wdXQoc3RydWN0IGV0bmF2aXZfaW9tbXVf
Y29udGV4dCAqY29udGV4dCkKIHsKLQllbnVtIGV0bmF2aXZfaW9tbXVfdmVyc2lvbiB2ZXJzaW9u
OwotCXN0cnVjdCBldG5hdml2X2lvbW11ICptbXU7Ci0KLQltbXUgPSBremFsbG9jKHNpemVvZigq
bW11KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFtbXUpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwotCi0JaWYgKCEoZ3B1LT5pZGVudGl0eS5taW5vcl9mZWF0dXJlczEgJiBjaGlwTWlub3JGZWF0
dXJlczFfTU1VX1ZFUlNJT04pKSB7Ci0JCW1tdS0+ZG9tYWluID0gZXRuYXZpdl9pb21tdXYxX2Rv
bWFpbl9hbGxvYyhncHUpOwotCQl2ZXJzaW9uID0gRVROQVZJVl9JT01NVV9WMTsKLQl9IGVsc2Ug
ewotCQltbXUtPmRvbWFpbiA9IGV0bmF2aXZfaW9tbXV2Ml9kb21haW5fYWxsb2MoZ3B1KTsKLQkJ
dmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjI7Ci0JfQotCi0JaWYgKCFtbXUtPmRvbWFpbikgewot
CQlkZXZfZXJyKGdwdS0+ZGV2LCAiRmFpbGVkIHRvIGFsbG9jYXRlIEdQVSBJT01NVSBkb21haW5c
biIpOwotCQlrZnJlZShtbXUpOwotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKLQl9Ci0KLQlt
bXUtPmdwdSA9IGdwdTsKLQltbXUtPnZlcnNpb24gPSB2ZXJzaW9uOwotCW11dGV4X2luaXQoJm1t
dS0+bG9jayk7Ci0JSU5JVF9MSVNUX0hFQUQoJm1tdS0+bWFwcGluZ3MpOwotCi0JZHJtX21tX2lu
aXQoJm1tdS0+bW0sIG1tdS0+ZG9tYWluLT5iYXNlLCBtbXUtPmRvbWFpbi0+c2l6ZSk7Ci0KLQly
ZXR1cm4gbW11OworCWtyZWZfcHV0KCZjb250ZXh0LT5yZWZjb3VudCwgZXRuYXZpdl9pb21tdV9j
b250ZXh0X2ZyZWUpOwogfQogCi12b2lkIGV0bmF2aXZfaW9tbXVfcmVzdG9yZShzdHJ1Y3QgZXRu
YXZpdl9ncHUgKmdwdSkKK3N0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKgorZXRuYXZpdl9p
b21tdV9jb250ZXh0X2luaXQoc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwpCiB7
Ci0JaWYgKGdwdS0+bW11LT52ZXJzaW9uID09IEVUTkFWSVZfSU9NTVVfVjEpCi0JCWV0bmF2aXZf
aW9tbXV2MV9yZXN0b3JlKGdwdSk7CisJaWYgKGdsb2JhbC0+dmVyc2lvbiA9PSBFVE5BVklWX0lP
TU1VX1YxKQorCQlyZXR1cm4gZXRuYXZpdl9pb21tdXYxX2NvbnRleHRfYWxsb2MoZ2xvYmFsKTsK
IAllbHNlCi0JCWV0bmF2aXZfaW9tbXV2Ml9yZXN0b3JlKGdwdSk7CisJCXJldHVybiBldG5hdml2
X2lvbW11djJfY29udGV4dF9hbGxvYyhnbG9iYWwpOworfQorCit2b2lkIGV0bmF2aXZfaW9tbXVf
cmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwKKwkJCSAgIHN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKmNvbnRleHQpCit7CisJY29udGV4dC0+Z2xvYmFsLT5vcHMtPnJlc3RvcmUo
Z3B1LCBjb250ZXh0KTsKIH0KIAotaW50IGV0bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3ZhKHN0
cnVjdCBldG5hdml2X2lvbW11ICptbXUsCitpbnQgZXRuYXZpdl9pb21tdV9nZXRfc3ViYWxsb2Nf
dmEoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJCQkgIHN0cnVjdCBl
dG5hdml2X3ZyYW1fbWFwcGluZyAqbWFwcGluZywKIAkJCQkgIHUzMiBtZW1vcnlfYmFzZSwgZG1h
X2FkZHJfdCBwYWRkciwKIAkJCQkgIHNpemVfdCBzaXplKQogewotCW11dGV4X2xvY2soJm1tdS0+
bG9jayk7CisJbXV0ZXhfbG9jaygmY29udGV4dC0+bG9jayk7CiAKIAkvKgogCSAqIEZvciBNTVV2
MSB3ZSBkb24ndCBhZGQgdGhlIHN1YmFsbG9jIHJlZ2lvbiB0byB0aGUgcGFnZXRhYmxlcywgYXMK
QEAgLTM0Nyw0MSArMzI1LDQxIEBAIGludCBldG5hdml2X2lvbW11X2dldF9zdWJhbGxvY192YShz
dHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAogCSAqIHdpbmRvdy4gSW5zdGVhZCB3ZSBtYW51ZmFj
dHVyZSBhIG1hcHBpbmcgdG8gbWFrZSBpdCBsb29rIHVuaWZvcm0KIAkgKiB0byB0aGUgdXBwZXIg
bGF5ZXJzLgogCSAqLwotCWlmIChtbXUtPnZlcnNpb24gPT0gRVROQVZJVl9JT01NVV9WMSkgewor
CWlmIChjb250ZXh0LT5nbG9iYWwtPnZlcnNpb24gPT0gRVROQVZJVl9JT01NVV9WMSkgewogCQlt
YXBwaW5nLT5pb3ZhID0gcGFkZHIgLSBtZW1vcnlfYmFzZTsKLQkJbGlzdF9hZGRfdGFpbCgmbWFw
cGluZy0+bW11X25vZGUsICZtbXUtPm1hcHBpbmdzKTsKKwkJbGlzdF9hZGRfdGFpbCgmbWFwcGlu
Zy0+bW11X25vZGUsICZjb250ZXh0LT5tYXBwaW5ncyk7CiAJfSBlbHNlIHsKIAkJc3RydWN0IGRy
bV9tbV9ub2RlICpub2RlID0gJm1hcHBpbmctPnZyYW1fbm9kZTsKIAkJaW50IHJldDsKIAotCQly
ZXQgPSBldG5hdml2X2lvbW11X2ZpbmRfaW92YShtbXUsIG5vZGUsIHNpemUpOworCQlyZXQgPSBl
dG5hdml2X2lvbW11X2ZpbmRfaW92YShjb250ZXh0LCBub2RlLCBzaXplKTsKIAkJaWYgKHJldCA8
IDApIHsKLQkJCW11dGV4X3VubG9jaygmbW11LT5sb2NrKTsKKwkJCW11dGV4X3VubG9jaygmY29u
dGV4dC0+bG9jayk7CiAJCQlyZXR1cm4gcmV0OwogCQl9CiAKIAkJbWFwcGluZy0+aW92YSA9IG5v
ZGUtPnN0YXJ0OwotCQlyZXQgPSBldG5hdml2X2RvbWFpbl9tYXAobW11LT5kb21haW4sIG5vZGUt
PnN0YXJ0LCBwYWRkciwgc2l6ZSwKLQkJCQkJIEVUTkFWSVZfUFJPVF9SRUFEKTsKKwkJcmV0ID0g
ZXRuYXZpdl9jb250ZXh0X21hcChjb250ZXh0LCBub2RlLT5zdGFydCwgcGFkZHIsIHNpemUsCisJ
CQkJCSAgRVROQVZJVl9QUk9UX1JFQUQpOwogCiAJCWlmIChyZXQgPCAwKSB7CiAJCQlkcm1fbW1f
cmVtb3ZlX25vZGUobm9kZSk7Ci0JCQltdXRleF91bmxvY2soJm1tdS0+bG9jayk7CisJCQltdXRl
eF91bmxvY2soJmNvbnRleHQtPmxvY2spOwogCQkJcmV0dXJuIHJldDsKIAkJfQogCi0JCWxpc3Rf
YWRkX3RhaWwoJm1hcHBpbmctPm1tdV9ub2RlLCAmbW11LT5tYXBwaW5ncyk7Ci0JCW1tdS0+Zmx1
c2hfc2VxKys7CisJCWxpc3RfYWRkX3RhaWwoJm1hcHBpbmctPm1tdV9ub2RlLCAmY29udGV4dC0+
bWFwcGluZ3MpOworCQljb250ZXh0LT5mbHVzaF9zZXErKzsKIAl9CiAKIAltYXBwaW5nLT51c2Ug
PSAxOwogCi0JbXV0ZXhfdW5sb2NrKCZtbXUtPmxvY2spOworCW11dGV4X3VubG9jaygmY29udGV4
dC0+bG9jayk7CiAKIAlyZXR1cm4gMDsKIH0KIAotdm9pZCBldG5hdml2X2lvbW11X3B1dF9zdWJh
bGxvY192YShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqbW11LAordm9pZCBldG5hdml2X2lvbW11X3B1
dF9zdWJhbGxvY192YShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCQkg
IHN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqbWFwcGluZykKIHsKIAlzdHJ1Y3QgZHJtX21t
X25vZGUgKm5vZGUgPSAmbWFwcGluZy0+dnJhbV9ub2RlOwpAQCAtMzkxLDIxICszNjksMTA3IEBA
IHZvaWQgZXRuYXZpdl9pb21tdV9wdXRfc3ViYWxsb2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXUg
Km1tdSwKIAogCW1hcHBpbmctPnVzZSA9IDA7CiAKLQlpZiAobW11LT52ZXJzaW9uID09IEVUTkFW
SVZfSU9NTVVfVjEpCisJaWYgKGNvbnRleHQtPmdsb2JhbC0+dmVyc2lvbiA9PSBFVE5BVklWX0lP
TU1VX1YxKQogCQlyZXR1cm47CiAKLQltdXRleF9sb2NrKCZtbXUtPmxvY2spOwotCWV0bmF2aXZf
ZG9tYWluX3VubWFwKG1tdS0+ZG9tYWluLCBub2RlLT5zdGFydCwgbm9kZS0+c2l6ZSk7CisJbXV0
ZXhfbG9jaygmY29udGV4dC0+bG9jayk7CisJZXRuYXZpdl9jb250ZXh0X3VubWFwKGNvbnRleHQs
IG5vZGUtPnN0YXJ0LCBub2RlLT5zaXplKTsKIAlkcm1fbW1fcmVtb3ZlX25vZGUobm9kZSk7Ci0J
bXV0ZXhfdW5sb2NrKCZtbXUtPmxvY2spOworCW11dGV4X3VubG9jaygmY29udGV4dC0+bG9jayk7
Cit9CisKK3NpemVfdCBldG5hdml2X2lvbW11X2R1bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9jb250ZXh0ICpjb250ZXh0KQoreworCXJldHVybiBjb250ZXh0LT5nbG9iYWwtPm9wcy0+ZHVt
cF9zaXplKGNvbnRleHQpOwogfQogCi1zaXplX3QgZXRuYXZpdl9pb21tdV9kdW1wX3NpemUoc3Ry
dWN0IGV0bmF2aXZfaW9tbXUgKmlvbW11KQordm9pZCBldG5hdml2X2lvbW11X2R1bXAoc3RydWN0
IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwgdm9pZCAqYnVmKQogewotCXJldHVybiBp
b21tdS0+ZG9tYWluLT5vcHMtPmR1bXBfc2l6ZShpb21tdS0+ZG9tYWluKTsKKwljb250ZXh0LT5n
bG9iYWwtPm9wcy0+ZHVtcChjb250ZXh0LCBidWYpOwogfQogCi12b2lkIGV0bmF2aXZfaW9tbXVf
ZHVtcChzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqaW9tbXUsIHZvaWQgKmJ1ZikKK2V4dGVybiBjb25z
dCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9vcHMgZXRuYXZpdl9pb21tdXYxX29wczsKK2V4dGVybiBj
b25zdCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9vcHMgZXRuYXZpdl9pb21tdXYyX29wczsKKworaW50
IGV0bmF2aXZfaW9tbXVfZ2xvYmFsX2luaXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiB7Ci0J
aW9tbXUtPmRvbWFpbi0+b3BzLT5kdW1wKGlvbW11LT5kb21haW4sIGJ1Zik7CisJZW51bSBldG5h
dml2X2lvbW11X3ZlcnNpb24gdmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjE7CisJc3RydWN0IGV0
bmF2aXZfZHJtX3ByaXZhdGUgKnByaXYgPSBncHUtPmRybS0+ZGV2X3ByaXZhdGU7CisJc3RydWN0
IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWw7CisJc3RydWN0IGRldmljZSAqZGV2ID0gZ3B1
LT5kcm0tPmRldjsKKworCWlmIChncHUtPmlkZW50aXR5Lm1pbm9yX2ZlYXR1cmVzMSAmIGNoaXBN
aW5vckZlYXR1cmVzMV9NTVVfVkVSU0lPTikKKwkJdmVyc2lvbiA9IEVUTkFWSVZfSU9NTVVfVjI7
CisKKwlpZiAocHJpdi0+bW11X2dsb2JhbCkgeworCQlpZiAocHJpdi0+bW11X2dsb2JhbC0+dmVy
c2lvbiAhPSB2ZXJzaW9uKSB7CisJCQlkZXZfZXJyKGdwdS0+ZGV2LAorCQkJCSJNTVUgdmVyc2lv
biBkb2Vzbid0IG1hdGNoIGdsb2JhbCB2ZXJzaW9uXG4iKTsKKwkJCXJldHVybiAtRU5YSU87CisJ
CX0KKworCQlwcml2LT5tbXVfZ2xvYmFsLT51c2UrKzsKKwkJcmV0dXJuIDA7CisJfQorCisJZ2xv
YmFsID0ga3phbGxvYyhzaXplb2YoKmdsb2JhbCksIEdGUF9LRVJORUwpOworCWlmICghZ2xvYmFs
KQorCQlyZXR1cm4gLUVOT01FTTsKKworCWdsb2JhbC0+YmFkX3BhZ2VfY3B1ID0gZG1hX2FsbG9j
X3djKGRldiwgU1pfNEssICZnbG9iYWwtPmJhZF9wYWdlX2RtYSwKKwkJCQkJICAgIEdGUF9LRVJO
RUwpOworCWlmICghZ2xvYmFsLT5iYWRfcGFnZV9jcHUpCisJCWdvdG8gZnJlZV9nbG9iYWw7CisK
KwltZW1zZXQzMihnbG9iYWwtPmJhZF9wYWdlX2NwdSwgMHhkZWFkNTVhYSwgU1pfNEsgLyBzaXpl
b2YodTMyKSk7CisKKwlpZiAodmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YyKSB7CisJCWdsb2Jh
bC0+djIucHRhX2NwdSA9IGRtYV9hbGxvY193YyhkZXYsIEVUTkFWSVZfUFRBX1NJWkUsCisJCQkJ
CSAgICAgICAmZ2xvYmFsLT52Mi5wdGFfZG1hLCBHRlBfS0VSTkVMKTsKKwkJaWYgKCFnbG9iYWwt
PnYyLnB0YV9jcHUpCisJCQlnb3RvIGZyZWVfYmFkX3BhZ2U7CisJfQorCisJZ2xvYmFsLT5kZXYg
PSBkZXY7CisJZ2xvYmFsLT52ZXJzaW9uID0gdmVyc2lvbjsKKwlnbG9iYWwtPnVzZSA9IDE7CisJ
bXV0ZXhfaW5pdCgmZ2xvYmFsLT5sb2NrKTsKKworCWlmICh2ZXJzaW9uID09IEVUTkFWSVZfSU9N
TVVfVjEpCisJCWdsb2JhbC0+b3BzID0gJmV0bmF2aXZfaW9tbXV2MV9vcHM7CisJZWxzZQorCQln
bG9iYWwtPm9wcyA9ICZldG5hdml2X2lvbW11djJfb3BzOworCisJcHJpdi0+bW11X2dsb2JhbCA9
IGdsb2JhbDsKKworCXJldHVybiAwOworCitmcmVlX2JhZF9wYWdlOgorCWRtYV9mcmVlX3djKGRl
diwgU1pfNEssIGdsb2JhbC0+YmFkX3BhZ2VfY3B1LCBnbG9iYWwtPmJhZF9wYWdlX2RtYSk7Citm
cmVlX2dsb2JhbDoKKwlrZnJlZShnbG9iYWwpOworCisJcmV0dXJuIC1FTk9NRU07Cit9CisKK3Zv
aWQgZXRuYXZpdl9pb21tdV9nbG9iYWxfZmluaShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkKK3sK
KwlzdHJ1Y3QgZXRuYXZpdl9kcm1fcHJpdmF0ZSAqcHJpdiA9IGdwdS0+ZHJtLT5kZXZfcHJpdmF0
ZTsKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgKmdsb2JhbCA9IHByaXYtPm1tdV9nbG9i
YWw7CisKKwlpZiAoLS1nbG9iYWwtPnVzZSA+IDApCisJCXJldHVybjsKKworCWlmIChnbG9iYWwt
PnYyLnB0YV9jcHUpCisJCWRtYV9mcmVlX3djKGdsb2JhbC0+ZGV2LCBFVE5BVklWX1BUQV9TSVpF
LAorCQkJICAgIGdsb2JhbC0+djIucHRhX2NwdSwgZ2xvYmFsLT52Mi5wdGFfZG1hKTsKKworCWlm
IChnbG9iYWwtPmJhZF9wYWdlX2NwdSkKKwkJZG1hX2ZyZWVfd2MoZ2xvYmFsLT5kZXYsIFNaXzRL
LAorCQkJICAgIGdsb2JhbC0+YmFkX3BhZ2VfY3B1LCBnbG9iYWwtPmJhZF9wYWdlX2RtYSk7CisK
KwltdXRleF9kZXN0cm95KCZnbG9iYWwtPmxvY2spOworCWtmcmVlKGdsb2JhbCk7CisKKwlwcml2
LT5tbXVfZ2xvYmFsID0gTlVMTDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5h
dml2L2V0bmF2aXZfbW11LmggYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5o
CmluZGV4IDM0YWZlMjVkZjljYS4uNGYxYmViY2QzNDJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfbW11LmgKQEAgLTE2LDMzICsxNiw1NSBAQCBlbnVtIGV0bmF2aXZfaW9tbXVfdmVy
c2lvbiB7CiAKIHN0cnVjdCBldG5hdml2X2dwdTsKIHN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGlu
ZzsKLXN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbjsKK3N0cnVjdCBldG5hdml2X2lvbW11X2ds
b2JhbDsKK3N0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQ7CiAKLXN0cnVjdCBldG5hdml2X2lv
bW11X2RvbWFpbl9vcHMgewotCXZvaWQgKCpmcmVlKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21h
aW4gKik7Ci0JaW50ICgqbWFwKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFpbiwg
dW5zaWduZWQgbG9uZyBpb3ZhLAorc3RydWN0IGV0bmF2aXZfaW9tbXVfb3BzIHsKKwlzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9jb250ZXh0ICooKmluaXQpKHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2Jh
bCAqKTsKKwl2b2lkICgqZnJlZSkoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqKTsKKwlp
bnQgKCptYXApKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsIHVuc2lnbmVk
IGxvbmcgaW92YSwKIAkJICAgcGh5c19hZGRyX3QgcGFkZHIsIHNpemVfdCBzaXplLCBpbnQgcHJv
dCk7Ci0Jc2l6ZV90ICgqdW5tYXApKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqZG9tYWlu
LCB1bnNpZ25lZCBsb25nIGlvdmEsCisJc2l6ZV90ICgqdW5tYXApKHN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKmNvbnRleHQsIHVuc2lnbmVkIGxvbmcgaW92YSwKIAkJCXNpemVfdCBzaXpl
KTsKLQlzaXplX3QgKCpkdW1wX3NpemUpKHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbiAqKTsK
LQl2b2lkICgqZHVtcCkoc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluICosIHZvaWQgKik7CisJ
c2l6ZV90ICgqZHVtcF9zaXplKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICopOworCXZv
aWQgKCpkdW1wKShzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICosIHZvaWQgKik7CisJdm9p
ZCAoKnJlc3RvcmUpKHN0cnVjdCBldG5hdml2X2dwdSAqLCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9j
b250ZXh0ICopOwogfTsKIAotc3RydWN0IGV0bmF2aXZfaW9tbXVfZG9tYWluIHsKKyNkZWZpbmUg
RVROQVZJVl9QVEFfU0laRQlTWl80SworI2RlZmluZSBFVE5BVklWX1BUQV9FTlRSSUVTCShFVE5B
VklWX1BUQV9TSVpFIC8gc2l6ZW9mKHU2NCkpCisKK3N0cnVjdCBldG5hdml2X2lvbW11X2dsb2Jh
bCB7CiAJc3RydWN0IGRldmljZSAqZGV2OworCWVudW0gZXRuYXZpdl9pb21tdV92ZXJzaW9uIHZl
cnNpb247CisJY29uc3Qgc3RydWN0IGV0bmF2aXZfaW9tbXVfb3BzICpvcHM7CisJdW5zaWduZWQg
aW50IHVzZTsKKwlzdHJ1Y3QgbXV0ZXggbG9jazsKKwogCXZvaWQgKmJhZF9wYWdlX2NwdTsKIAlk
bWFfYWRkcl90IGJhZF9wYWdlX2RtYTsKLQl1NjQgYmFzZTsKLQl1NjQgc2l6ZTsKIAotCWNvbnN0
IHN0cnVjdCBldG5hdml2X2lvbW11X2RvbWFpbl9vcHMgKm9wczsKKwkvKgorCSAqIFRoaXMgdW5p
b24gaG9sZHMgbWVtYmVycyBuZWVkZWQgYnkgZWl0aGVyIE1NVXYxIG9yIE1NVXYyLCB3aGljaAor
CSAqIGNhbiBub3QgZXhpc3QgYXQgdGhlIHNhbWUgdGltZS4KKwkgKi8KKwl1bmlvbiB7CisJCXN0
cnVjdCB7CisJCQlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpzaGFyZWRfY29udGV4dDsK
KwkJfSB2MTsKKwkJc3RydWN0IHsKKwkJCS8qIFAoYWdlKSBUKGFibGUpIEEocnJheSkgKi8KKwkJ
CXU2NCAqcHRhX2NwdTsKKwkJCWRtYV9hZGRyX3QgcHRhX2RtYTsKKwkJCXN0cnVjdCBzcGlubG9j
ayBwdGFfbG9jazsKKwkJCURFQ0xBUkVfQklUTUFQKHB0YV9hbGxvYywgRVROQVZJVl9QVEFfRU5U
UklFUyk7CisJCX0gdjI7CisJfTsKIH07CiAKLXN0cnVjdCBldG5hdml2X2lvbW11IHsKLQlzdHJ1
Y3QgZXRuYXZpdl9ncHUgKmdwdTsKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9kb21haW4gKmRvbWFp
bjsKLQotCWVudW0gZXRuYXZpdl9pb21tdV92ZXJzaW9uIHZlcnNpb247CitzdHJ1Y3QgZXRuYXZp
dl9pb21tdV9jb250ZXh0IHsKKwlzdHJ1Y3Qga3JlZiByZWZjb3VudDsKKwlzdHJ1Y3QgZXRuYXZp
dl9pb21tdV9nbG9iYWwgKmdsb2JhbDsKIAogCS8qIG1lbW9yeSBtYW5hZ2VyIGZvciBHUFUgYWRk
cmVzcyBhcmVhICovCiAJc3RydWN0IG11dGV4IGxvY2s7CkBAIC01MSwyNiArNzMsNDAgQEAgc3Ry
dWN0IGV0bmF2aXZfaW9tbXUgewogCXVuc2lnbmVkIGludCBmbHVzaF9zZXE7CiB9OwogCitpbnQg
ZXRuYXZpdl9pb21tdV9nbG9iYWxfaW5pdChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSk7Cit2b2lk
IGV0bmF2aXZfaW9tbXVfZ2xvYmFsX2Zpbmkoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpOworCiBz
dHJ1Y3QgZXRuYXZpdl9nZW1fb2JqZWN0OwogCi1pbnQgZXRuYXZpdl9pb21tdV9tYXBfZ2VtKHN0
cnVjdCBldG5hdml2X2lvbW11ICptbXUsCitpbnQgZXRuYXZpdl9pb21tdV9tYXBfZ2VtKHN0cnVj
dCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiAJc3RydWN0IGV0bmF2aXZfZ2VtX29i
amVjdCAqZXRuYXZpdl9vYmosIHUzMiBtZW1vcnlfYmFzZSwKIAlzdHJ1Y3QgZXRuYXZpdl92cmFt
X21hcHBpbmcgKm1hcHBpbmcpOwotdm9pZCBldG5hdml2X2lvbW11X3VubWFwX2dlbShzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdSAqbW11LAordm9pZCBldG5hdml2X2lvbW11X3VubWFwX2dlbShzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0LAogCXN0cnVjdCBldG5hdml2X3ZyYW1fbWFw
cGluZyAqbWFwcGluZyk7CiAKLWludCBldG5hdml2X2lvbW11X2dldF9zdWJhbGxvY192YShzdHJ1
Y3QgZXRuYXZpdl9pb21tdSAqbW11LAoraW50IGV0bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3Zh
KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmN0eCwKIAkJCQkgIHN0cnVjdCBldG5hdml2
X3ZyYW1fbWFwcGluZyAqbWFwcGluZywKIAkJCQkgIHUzMiBtZW1vcnlfYmFzZSwgZG1hX2FkZHJf
dCBwYWRkciwKIAkJCQkgIHNpemVfdCBzaXplKTsKLXZvaWQgZXRuYXZpdl9pb21tdV9wdXRfc3Vi
YWxsb2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXUgKm1tdSwKK3ZvaWQgZXRuYXZpdl9pb21tdV9w
dXRfc3ViYWxsb2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY3R4LAogCQkJCSAg
IHN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqbWFwcGluZyk7CiAKLXNpemVfdCBldG5hdml2
X2lvbW11X2R1bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9pb21tdSAqaW9tbXUpOwotdm9pZCBldG5h
dml2X2lvbW11X2R1bXAoc3RydWN0IGV0bmF2aXZfaW9tbXUgKmlvbW11LCB2b2lkICpidWYpOwot
Ci1zdHJ1Y3QgZXRuYXZpdl9pb21tdSAqZXRuYXZpdl9pb21tdV9uZXcoc3RydWN0IGV0bmF2aXZf
Z3B1ICpncHUpOwotdm9pZCBldG5hdml2X2lvbW11X2Rlc3Ryb3koc3RydWN0IGV0bmF2aXZfaW9t
bXUgKmlvbW11KTsKLXZvaWQgZXRuYXZpdl9pb21tdV9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dw
dSAqZ3B1KTsKK3NpemVfdCBldG5hdml2X2lvbW11X2R1bXBfc2l6ZShzdHJ1Y3QgZXRuYXZpdl9p
b21tdV9jb250ZXh0ICpjdHgpOwordm9pZCBldG5hdml2X2lvbW11X2R1bXAoc3RydWN0IGV0bmF2
aXZfaW9tbXVfY29udGV4dCAqY3R4LCB2b2lkICpidWYpOworCitzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9jb250ZXh0ICoKK2V0bmF2aXZfaW9tbXVfY29udGV4dF9pbml0KHN0cnVjdCBldG5hdml2X2lv
bW11X2dsb2JhbCAqZ2xvYmFsKTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBldG5hdml2X2lvbW11X2Nv
bnRleHRfZ2V0KHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmN0eCkKK3sKKwlrcmVmX2dl
dCgmY3R4LT5yZWZjb3VudCk7Cit9Cit2b2lkIGV0bmF2aXZfaW9tbXVfY29udGV4dF9wdXQoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY3R4KTsKK3ZvaWQgZXRuYXZpdl9pb21tdV9yZXN0
b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LAorCQkJICAgc3RydWN0IGV0bmF2aXZfaW9tbXVf
Y29udGV4dCAqY3R4KTsKKworc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqCitldG5hdml2
X2lvbW11djFfY29udGV4dF9hbGxvYyhzdHJ1Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgKmdsb2Jh
bCk7CitzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICoKK2V0bmF2aXZfaW9tbXV2Ml9jb250
ZXh0X2FsbG9jKHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsKTsKIAogI2VuZGlm
IC8qIF9fRVROQVZJVl9NTVVfSF9fICovCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRl
dmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
