Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C6964630FD
	for <lists+dri-devel@lfdr.de>; Tue,  9 Jul 2019 08:35:34 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 994F689EEB;
	Tue,  9 Jul 2019 06:35:32 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pl1-x649.google.com (mail-pl1-x649.google.com
 [IPv6:2607:f8b0:4864:20::649])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B41E66E030
 for <dri-devel@lists.freedesktop.org>; Tue,  9 Jul 2019 06:35:31 +0000 (UTC)
Received: by mail-pl1-x649.google.com with SMTP id y9so10153920plp.12
 for <dri-devel@lists.freedesktop.org>; Mon, 08 Jul 2019 23:35:31 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=9wLNCIVSUoQqeGTB89N+LVaQjLOY/UYArK2AxbIGTyA=;
 b=GxA7GckuCH7HjQAVsxxCM4q6+N0PVtdy9nDDj6G2DQ60Vfvj0CEkcDnt6QgAH3PP98
 GXQECJvjKNkuQLY98i07p/vclJ624wPTBHD0KvZhjoac/591sDf2p20+m8fyvrUndb9y
 e2FvJN5mRO+g+RBbOgB8dJhOTBeNa99LTNX0AMD1hY2PvOXFMofHdQfY+ltp1QnXSw77
 7Xfp48bcwZHvCFXuwDmfSz2X1R4j/kQhC5RhTlH1puTJRLzg62QWBau93iLJpH4nlaGq
 Ifw1lhPfwP/gm3pNwfqEx975VK57rmxGYwIlj8SiJBfsrJRfPioWvtQOW7PhrocYd/jD
 h86g==
X-Gm-Message-State: APjAAAWqFnAlTk9/qoV0tZvKu8K7UxXvQUR/KOS75T62Rtpe9fuOwzsx
 oKy+54J9vYtQHzyJ8rUDdnOQaE70j2z4jIkXIT3RnQ==
X-Google-Smtp-Source: APXvYqzzn6RZAD8ygVXxDl0uBJXywpEu9a9paRDsXOVggF+cFJf8KYH3zugHg8P99JXPssZkr1JuI9EwxMwEA51QDQ6w1w==
X-Received: by 2002:a63:374a:: with SMTP id g10mr28256682pgn.31.1562654130804; 
 Mon, 08 Jul 2019 23:35:30 -0700 (PDT)
Date: Mon,  8 Jul 2019 23:30:22 -0700
In-Reply-To: <20190709063023.251446-1-brendanhiggins@google.com>
Message-Id: <20190709063023.251446-18-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190709063023.251446-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v7 17/18] kernel/sysctl-test: Add null pointer test for
 sysctl.c:proc_dointvec()
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=9wLNCIVSUoQqeGTB89N+LVaQjLOY/UYArK2AxbIGTyA=;
 b=Pwon0M81V8AVB76h9QMHCNyf6Ulo+uJ38ERHtm3Xcp0TzHyqnKl2GlxHoih+L8HolU
 5ZpEEgMugCkhBR4w4LveLAOSR5ykLS47Q4LPrbXzwTX+DOyL7g4G0YeeErgwSDZyrhn8
 LXUChxba+34N3snEaXoRInodE6kMchtz/+MRZsXSAOKiSbRkvjpbf21ljZNQ8y2DnURc
 b+tugML870Ip6KdPO77zIHX7nWh+xLka+1u/PvilYLm+7nE6ZqWzgUdFM4j+EYPQr/3d
 MR2s/9sFFou0ckScoyUGwgdE2iCnQ8VvMT0bpPdXUNl977MQQeLz2Ro2Wb1z0A+4IjVC
 m7rQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com,
 Iurii Zaikin <yzaikin@google.com>, jdike@addtoit.com, dan.carpenter@oracle.com,
 devicetree@vger.kernel.org, linux-kbuild@vger.kernel.org, Tim.Bird@sony.com,
 linux-um@lists.infradead.org, rostedt@goodmis.org, julia.lawall@lip6.fr,
 kunit-dev@googlegroups.com, richard@nod.at, rdunlap@infradead.org,
 linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSXVyaWkgWmFpa2luIDx5emFpa2luQGdvb2dsZS5jb20+CgpLVW5pdCB0ZXN0cyBmb3Ig
aW5pdGlhbGl6ZWQgZGF0YSBiZWhhdmlvciBvZiBwcm9jX2RvaW50dmVjIHRoYXQgaXMKZXhwbGlj
aXRseSBjaGVja2VkIGluIHRoZSBjb2RlLiBJbmNsdWRlcyBiYXNpYyBwYXJzaW5nIHRlc3RzIGlu
Y2x1ZGluZwppbnQgbWluL21heCBvdmVyZmxvdy4KClNpZ25lZC1vZmYtYnk6IEl1cmlpIFphaWtp
biA8eXphaWtpbkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBCcmVuZGFuIEhpZ2dpbnMgPGJy
ZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBHcmVnIEtyb2FoLUhhcnRtYW4g
PGdyZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpSZXZpZXdlZC1ieTogTG9nYW4gR3VudGhvcnBl
IDxsb2dhbmdAZGVsdGF0ZWUuY29tPgpBY2tlZC1ieTogTHVpcyBDaGFtYmVybGFpbiA8bWNncm9m
QGtlcm5lbC5vcmc+Ci0tLQoga2VybmVsL01ha2VmaWxlICAgICAgfCAgIDIgKwoga2VybmVsL3N5
c2N0bC10ZXN0LmMgfCAzNzUgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKwogbGliL0tjb25maWcuZGVidWcgICAgfCAgMTEgKysKIDMgZmlsZXMgY2hhbmdlZCwgMzg4
IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBrZXJuZWwvc3lzY3RsLXRlc3QuYwoK
ZGlmZiAtLWdpdCBhL2tlcm5lbC9NYWtlZmlsZSBiL2tlcm5lbC9NYWtlZmlsZQppbmRleCBhOGQ5
MjNiNTQ4MWJhLi41MGZkNTExY2QwZWUwIDEwMDY0NAotLS0gYS9rZXJuZWwvTWFrZWZpbGUKKysr
IGIva2VybmVsL01ha2VmaWxlCkBAIC0xMTQsNiArMTE0LDggQEAgb2JqLSQoQ09ORklHX0hBU19J
T01FTSkgKz0gaW9tZW0ubwogb2JqLSQoQ09ORklHX1pPTkVfREVWSUNFKSArPSBtZW1yZW1hcC5v
CiBvYmotJChDT05GSUdfUlNFUSkgKz0gcnNlcS5vCiAKK29iai0kKENPTkZJR19TWVNDVExfS1VO
SVRfVEVTVCkgKz0gc3lzY3RsLXRlc3QubworCiBvYmotJChDT05GSUdfR0NDX1BMVUdJTl9TVEFD
S0xFQUspICs9IHN0YWNrbGVhay5vCiBLQVNBTl9TQU5JVElaRV9zdGFja2xlYWsubyA6PSBuCiBL
Q09WX0lOU1RSVU1FTlRfc3RhY2tsZWFrLm8gOj0gbgpkaWZmIC0tZ2l0IGEva2VybmVsL3N5c2N0
bC10ZXN0LmMgYi9rZXJuZWwvc3lzY3RsLXRlc3QuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAwLi5mYzI3YjJjMTE4NWNhCi0tLSAvZGV2L251bGwKKysrIGIva2VybmVs
L3N5c2N0bC10ZXN0LmMKQEAgLTAsMCArMSwzNzUgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wCisvKgorICogS1VuaXQgdGVzdCBvZiBwcm9jIHN5c2N0bC4KKyAqLworCisj
aW5jbHVkZSA8a3VuaXQvdGVzdC5oPgorI2luY2x1ZGUgPGxpbnV4L3N5c2N0bC5oPgorCisjZGVm
aW5lIEtVTklUX1BST0NfUkVBRCAwCisjZGVmaW5lIEtVTklUX1BST0NfV1JJVEUgMQorCitzdGF0
aWMgaW50IGlfemVybzsKK3N0YXRpYyBpbnQgaV9vbmVfaHVuZHJlZCA9IDEwMDsKKworLyoKKyAq
IFRlc3QgdGhhdCBwcm9jX2RvaW50dmVjIHdpbGwgbm90IHRyeSB0byB1c2UgYSBOVUxMIC5kYXRh
IGZpZWxkIGV2ZW4gd2hlbiB0aGUKKyAqIGxlbmd0aCBpcyBub24temVyby4KKyAqLworc3RhdGlj
IHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX251bGxfdGJsX2RhdGEoc3RydWN0IGt1bml0
ICp0ZXN0KQoreworCXN0cnVjdCBjdGxfdGFibGUgbnVsbF9kYXRhX3RhYmxlID0geworCQkucHJv
Y25hbWUgPSAiZm9vIiwKKwkJLyoKKwkJICogSGVyZSB3ZSBhcmUgdGVzdGluZyB0aGF0IHByb2Nf
ZG9pbnR2ZWMgYmVoYXZlcyBjb3JyZWN0bHkgd2hlbgorCQkgKiB3ZSBnaXZlIGl0IGEgTlVMTCAu
ZGF0YSBmaWVsZC4gTm9ybWFsbHkgdGhpcyB3b3VsZCBwb2ludCB0byBhCisJCSAqIHBpZWNlIG9m
IG1lbW9yeSB3aGVyZSB0aGUgdmFsdWUgd291bGQgYmUgc3RvcmVkLgorCQkgKi8KKwkJLmRhdGEJ
CT0gTlVMTCwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJ
LnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJ
LmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsKKwl2b2lkICpidWZmZXIgPSBr
dW5pdF9remFsbG9jKHRlc3QsIHNpemVvZihpbnQpLCBHRlBfVVNFUik7CisJc2l6ZV90IGxlbjsK
Kwlsb2ZmX3QgcG9zOworCisJLyoKKwkgKiBXZSBkb24ndCBjYXJlIHdoYXQgdGhlIHN0YXJ0aW5n
IGxlbmd0aCBpcyBzaW5jZSBwcm9jX2RvaW50dmVjIHNob3VsZAorCSAqIG5vdCB0cnkgdG8gcmVh
ZCBiZWNhdXNlIC5kYXRhIGlzIE5VTEwuCisJICovCisJbGVuID0gMTIzNDsKKwlLVU5JVF9FWFBF
Q1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmbnVsbF9kYXRhX3RhYmxlLAorCQkJCQkgICAg
ICAgS1VOSVRfUFJPQ19SRUFELCBidWZmZXIsICZsZW4sCisJCQkJCSAgICAgICAmcG9zKSk7CisJ
S1VOSVRfRVhQRUNUX0VRKHRlc3QsIChzaXplX3QpMCwgbGVuKTsKKworCS8qCisJICogU2VlIGFi
b3ZlLgorCSAqLworCWxlbiA9IDEyMzQ7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDAsIHByb2Nf
ZG9pbnR2ZWMoJm51bGxfZGF0YV90YWJsZSwKKwkJCQkJICAgICAgIEtVTklUX1BST0NfV1JJVEUs
IGJ1ZmZlciwgJmxlbiwKKwkJCQkJICAgICAgICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVz
dCwgKHNpemVfdCkwLCBsZW4pOworfQorCisvKgorICogU2ltaWxhciB0byB0aGUgcHJldmlvdXMg
dGVzdCwgd2UgY3JlYXRlIGEgc3RydWN0IGN0cmxfdGFibGUgdGhhdCBoYXMgYSAuZGF0YQorICog
ZmllbGQgdGhhdCBwcm9jX2RvaW50dmVjIGNhbm5vdCBkbyBhbnl0aGluZyB3aXRoOyBob3dldmVy
LCB0aGlzIHRpbWUgaXQgaXMKKyAqIGJlY2F1c2Ugd2UgdGVsbCBwcm9jX2RvaW50dmVjIHRoYXQg
dGhlIHNpemUgaXMgMC4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVj
X3RhYmxlX21heGxlbl91bnNldChzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAw
OworCXN0cnVjdCBjdGxfdGFibGUgZGF0YV9tYXhsZW5fdW5zZXRfdGFibGUgPSB7CisJCS5wcm9j
bmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLyoKKwkJICogU28gLmRhdGEgaXMg
bm8gbG9uZ2VyIE5VTEwsIGJ1dCB3ZSB0ZWxsIHByb2NfZG9pbnR2ZWMgaXRzCisJCSAqIGxlbmd0
aCBpcyAwLCBzbyBpdCBzdGlsbCBzaG91bGRuJ3QgdHJ5IHRvIHVzZSBpdC4KKwkJICovCisJCS5t
YXhsZW4JCT0gMCwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9p
bnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25l
X2h1bmRyZWQsCisJfTsKKwl2b2lkICpidWZmZXIgPSBrdW5pdF9remFsbG9jKHRlc3QsIHNpemVv
ZihpbnQpLCBHRlBfVVNFUik7CisJc2l6ZV90IGxlbjsKKwlsb2ZmX3QgcG9zOworCisJLyoKKwkg
KiBBcyBiZWZvcmUsIHdlIGRvbid0IGNhcmUgd2hhdCBidWZmZXIgbGVuZ3RoIGlzIGJlY2F1c2Ug
cHJvY19kb2ludHZlYworCSAqIGNhbm5vdCBkbyBhbnl0aGluZyBiZWNhdXNlIGl0cyBpbnRlcm5h
bCAuZGF0YSBidWZmZXIgaGFzIHplcm8gbGVuZ3RoLgorCSAqLworCWxlbiA9IDEyMzQ7CisJS1VO
SVRfRVhQRUNUX0VRKHRlc3QsIDAsIHByb2NfZG9pbnR2ZWMoJmRhdGFfbWF4bGVuX3Vuc2V0X3Rh
YmxlLAorCQkJCQkgICAgICAgS1VOSVRfUFJPQ19SRUFELCBidWZmZXIsICZsZW4sCisJCQkJCSAg
ICAgICAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIChzaXplX3QpMCwgbGVuKTsKKwor
CS8qCisJICogU2VlIHByZXZpb3VzIGNvbW1lbnQuCisJICovCisJbGVuID0gMTIzNDsKKwlLVU5J
VF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmZGF0YV9tYXhsZW5fdW5zZXRfdGFi
bGUsCisJCQkJCSAgICAgICBLVU5JVF9QUk9DX1dSSVRFLCBidWZmZXIsICZsZW4sCisJCQkJCSAg
ICAgICAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIChzaXplX3QpMCwgbGVuKTsKK30K
KworLyoKKyAqIEhlcmUgd2UgcHJvdmlkZSBhIHZhbGlkIHN0cnVjdCBjdGxfdGFibGUsIGJ1dCB3
ZSB0cnkgdG8gcmVhZCBhbmQgd3JpdGUgZnJvbQorICogaXQgdXNpbmcgYSBidWZmZXIgb2YgemVy
byBsZW5ndGgsIHNvIGl0IHNob3VsZCBzdGlsbCBmYWlsIGluIGEgc2ltaWxhciB3YXkgYXMKKyAq
IGJlZm9yZS4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxl
X2xlbl9pc196ZXJvKHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJLyog
R29vZCB0YWJsZS4gKi8KKwlzdHJ1Y3QgY3RsX3RhYmxlIHRhYmxlID0geworCQkucHJvY25hbWUg
PSAiZm9vIiwKKwkJLmRhdGEJCT0gJmRhdGEsCisJCS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJ
CS5tb2RlCQk9IDA2NDQsCisJCS5wcm9jX2hhbmRsZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0
cmExCQk9ICZpX3plcm8sCisJCS5leHRyYTIgICAgICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07
CisJdm9pZCAqYnVmZmVyID0ga3VuaXRfa3phbGxvYyh0ZXN0LCBzaXplb2YoaW50KSwgR0ZQX1VT
RVIpOworCS8qCisJICogSG93ZXZlciwgbm93IG91ciByZWFkL3dyaXRlIGJ1ZmZlciBoYXMgemVy
byBsZW5ndGguCisJICovCisJc2l6ZV90IGxlbiA9IDA7CisJbG9mZl90IHBvczsKKworCUtVTklU
X0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19SRUFE
LCBidWZmZXIsCisJCQkJCSAgICAgICAmbGVuLCAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRl
c3QsIChzaXplX3QpMCwgbGVuKTsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2Rv
aW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwgYnVmZmVyLAorCQkJCQkgICAgICAgJmxl
biwgJnBvcykpOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAoc2l6ZV90KTAsIGxlbik7Cit9CisK
Ky8qCisgKiBUZXN0IHRoYXQgcHJvY19kb2ludHZlYyByZWZ1c2VzIHRvIHJlYWQgd2hlbiB0aGUg
ZmlsZSBwb3NpdGlvbiBpcyBub24temVyby4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3Rf
YXBpX2RvaW50dmVjX3RhYmxlX3JlYWRfYnV0X3Bvc2l0aW9uX3NldCgKKwkJc3RydWN0IGt1bml0
ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwkvKiBHb29kIHRhYmxlLiAqLworCXN0cnVjdCBj
dGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0
YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2Nf
aGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJh
MiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsKKwl2b2lkICpidWZmZXIgPSBrdW5pdF9r
emFsbG9jKHRlc3QsIHNpemVvZihpbnQpLCBHRlBfVVNFUik7CisJLyoKKwkgKiBXZSBkb24ndCBj
YXJlIGFib3V0IG91ciBidWZmZXIgbGVuZ3RoIGJlY2F1c2Ugd2Ugc3RhcnQgb2ZmIHdpdGggYQor
CSAqIG5vbi16ZXJvIGZpbGUgcG9zaXRpb24uCisJICovCisJc2l6ZV90IGxlbiA9IDEyMzQ7CisJ
LyoKKwkgKiBwcm9jX2RvaW50dmVjIHNob3VsZCByZWZ1c2UgdG8gcmVhZCBpbnRvIHRoZSBidWZm
ZXIgc2luY2UgdGhlIGZpbGUKKwkgKiBwb3MgaXMgbm9uLXplcm8uCisJICovCisJbG9mZl90IHBv
cyA9IDE7CisKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUs
IEtVTklUX1BST0NfUkVBRCwgYnVmZmVyLAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtV
TklUX0VYUEVDVF9FUSh0ZXN0LCAoc2l6ZV90KTAsIGxlbik7Cit9CisKKy8qCisgKiBUZXN0IHRo
YXQgd2UgY2FuIHJlYWQgYSB0d28gZGlnaXQgbnVtYmVyIGluIGEgc3VmZmljaWVudGx5IHNpemUg
YnVmZmVyLgorICogTm90aGluZyBmYW5jeS4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3Rf
ZG9pbnR2ZWNfcmVhZF9oYXBweV9zaW5nbGVfcG9zaXRpdmUoc3RydWN0IGt1bml0ICp0ZXN0KQor
eworCWludCBkYXRhID0gMDsKKwkvKiBHb29kIHRhYmxlLiAqLworCXN0cnVjdCBjdGxfdGFibGUg
dGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1h
eGxlbgkJPSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9
IHByb2NfZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAg
ID0gJmlfb25lX2h1bmRyZWQsCisJfTsKKwkvKiBQdXQgc29tZXRoaW5nIGluIHRoZSBidWZmZXIg
Zm9yIGRlYnVnZ2luZyBwdXJwb3Nlcy4gKi8KKwljaGFyIGJ1ZltdID0gImJvZ3VzIjsKKwlzaXpl
X3QgbGVuID0gc2l6ZW9mKGJ1ZikgLSAxOworCWxvZmZfdCBwb3MgPSAwOworCS8qIFN0b3JlIDEz
IGluIHRoZSBkYXRhIGZpZWxkLiAqLworCSooKGludCAqKXRhYmxlLmRhdGEpID0gMTM7CisKKwlL
VU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklUX1BST0Nf
UkVBRCwgYnVmLAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtVTklUX0FTU0VSVF9FUSh0
ZXN0LCAoc2l6ZV90KTMsIGxlbik7CisJYnVmW2xlbl0gPSAnXDAnOworCS8qIEFuZCB3ZSByZWFk
IDEzIGJhY2sgb3V0LiAqLworCUtVTklUX0VYUEVDVF9TVFJFUSh0ZXN0LCAiMTNcbiIsIChjaGFy
ICopYnVmKTsKK30KKworLyoKKyAqIFNhbWUgYXMgcHJldmlvdXMgdGVzdCwganVzdCBub3cgd2l0
aCBuZWdhdGl2ZSBudW1iZXJzLgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9kb2ludHZl
Y19yZWFkX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZShzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50
IGRhdGEgPSAwOworCS8qIEdvb2QgdGFibGUuICovCisJc3RydWN0IGN0bF90YWJsZSB0YWJsZSA9
IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVuCQk9
IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19k
b2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9v
bmVfaHVuZHJlZCwKKwl9OworCWNoYXIgYnVmW10gPSAiYm9ndXMiOworCXNpemVfdCBsZW4gPSBz
aXplb2YoYnVmKSAtIDE7CisJbG9mZl90IHBvcyA9IDA7CisJKigoaW50ICopdGFibGUuZGF0YSkg
PSAtMTY7CisKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUs
IEtVTklUX1BST0NfUkVBRCwgYnVmLAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtVTklU
X0FTU0VSVF9FUSh0ZXN0LCAoc2l6ZV90KTQsIGxlbik7CisJYnVmW2xlbl0gPSAnXDAnOworCUtV
TklUX0VYUEVDVF9TVFJFUSh0ZXN0LCAiLTE2XG4iLCAoY2hhciAqKWJ1Zik7Cit9CisKKy8qCisg
KiBUZXN0IHRoYXQgYSBzaW1wbGUgcG9zaXRpdmUgd3JpdGUgd29ya3MuCisgKi8KK3N0YXRpYyB2
b2lkIHN5c2N0bF90ZXN0X2RvaW50dmVjX3dyaXRlX2hhcHB5X3NpbmdsZV9wb3NpdGl2ZShzdHJ1
Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAwOworCS8qIEdvb2QgdGFibGUuICovCisJ
c3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRh
CQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAor
CQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAor
CQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9OworCWNoYXIgaW5wdXRbXSA9
ICI5IjsKKwlzaXplX3QgbGVuID0gc2l6ZW9mKGlucHV0KSAtIDE7CisJbG9mZl90IHBvcyA9IDA7
CisKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklU
X1BST0NfV1JJVEUsIGlucHV0LAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtVTklUX0VY
UEVDVF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQpIC0gMSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEo
dGVzdCwgc2l6ZW9mKGlucHV0KSAtIDEsIChzaXplX3QpcG9zKTsKKwlLVU5JVF9FWFBFQ1RfRVEo
dGVzdCwgOSwgKigoaW50ICopdGFibGUuZGF0YSkpOworfQorCisvKgorICogU2FtZSBhcyBwcmV2
aW91cyB0ZXN0LCBidXQgbm93IHdpdGggbmVnYXRpdmUgbnVtYmVycy4KKyAqLworc3RhdGljIHZv
aWQgc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfd3JpdGVfaGFwcHlfc2luZ2xlX25lZ2F0aXZlKHN0cnVj
dCBrdW5pdCAqdGVzdCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSB0YWJs
ZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVu
CQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJv
Y19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAm
aV9vbmVfaHVuZHJlZCwKKwl9OworCWNoYXIgaW5wdXRbXSA9ICItOSI7CisJc2l6ZV90IGxlbiA9
IHNpemVvZihpbnB1dCkgLSAxOworCWxvZmZfdCBwb3MgPSAwOworCisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIDAsIHByb2NfZG9pbnR2ZWMoJnRhYmxlLCBLVU5JVF9QUk9DX1dSSVRFLCBpbnB1dCwK
KwkJCQkJICAgICAgICZsZW4sICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgc2l6ZW9m
KGlucHV0KSAtIDEsIGxlbik7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIHNpemVvZihpbnB1dCkg
LSAxLCAoc2l6ZV90KXBvcyk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIC05LCAqKChpbnQgKil0
YWJsZS5kYXRhKSk7Cit9CisKKy8qCisgKiBUZXN0IHRoYXQgd3JpdGluZyBhIHZhbHVlIHNtYWxs
ZXIgdGhhbiB0aGUgbWluaW11bSBwb3NzaWJsZSB2YWx1ZSBpcyBub3QKKyAqIGFsbG93ZWQuCisg
Ki8KK3N0YXRpYyB2b2lkIHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY193cml0ZV9zaW5nbGVfbGVz
c19pbnRfbWluKAorCQlzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAwOworCXN0
cnVjdCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJ
PSAmZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJ
LnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJ
LmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsKKwljaGFyIGlucHV0WzMyXTsK
KwlzaXplX3QgbGVuID0gc2l6ZW9mKGlucHV0KSAtIDE7CisJbG9mZl90IHBvcyA9IDA7CisJdW5z
aWduZWQgbG9uZyBhYnNfb2ZfbGVzc190aGFuX21pbiA9ICh1bnNpZ25lZCBsb25nKUlOVF9NQVgK
KwkJCQkJICAgICAtIChJTlRfTUFYICsgSU5UX01JTikgKyAxOworCisJLyoKKwkgKiBXZSB1c2Ug
dGhpcyByaWdtYXJvbGUgdG8gY3JlYXRlIGEgc3RyaW5nIHRoYXQgY29udGFpbnMgYSB2YWx1ZSBv
bmUKKwkgKiBsZXNzIHRoYW4gdGhlIG1pbmltdW0gYWNjZXB0ZWQgdmFsdWUuCisJICovCisJS1VO
SVRfQVNTRVJUX0xUKHRlc3QsCisJCQkoc2l6ZV90KXNucHJpbnRmKGlucHV0LCBzaXplb2YoaW5w
dXQpLCAiLSVsdSIsCisJCQkJCSBhYnNfb2ZfbGVzc190aGFuX21pbiksCisJCQlzaXplb2YoaW5w
dXQpKTsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAtRUlOVkFMLAorCQkJcHJvY19kb2ludHZl
YygmdGFibGUsIEtVTklUX1BST0NfV1JJVEUsIGlucHV0LCAmbGVuLAorCQkJCSAgICAgICZwb3Mp
KTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgc2l6ZW9mKGlucHV0KSAtIDEsIGxlbik7CisJS1VO
SVRfRVhQRUNUX0VRKHRlc3QsIDAsICooKGludCAqKXRhYmxlLmRhdGEpKTsKK30KKworLyoKKyAq
IFRlc3QgdGhhdCB3cml0aW5nIHRoZSBtYXhpbXVtIHBvc3NpYmxlIHZhbHVlIHdvcmtzLgorICov
CitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfd3JpdGVfc2luZ2xlX2dyZWF0
ZXJfaW50X21heCgKKwkJc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwlz
dHJ1Y3QgY3RsX3RhYmxlIHRhYmxlID0geworCQkucHJvY25hbWUgPSAiZm9vIiwKKwkJLmRhdGEJ
CT0gJmRhdGEsCisJCS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJCS5tb2RlCQk9IDA2NDQsCisJ
CS5wcm9jX2hhbmRsZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0cmExCQk9ICZpX3plcm8sCisJ
CS5leHRyYTIgICAgICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07CisJY2hhciBpbnB1dFszMl07
CisJc2l6ZV90IGxlbiA9IHNpemVvZihpbnB1dCkgLSAxOworCWxvZmZfdCBwb3MgPSAwOworCXVu
c2lnbmVkIGxvbmcgZ3JlYXRlcl90aGFuX21heCA9ICh1bnNpZ25lZCBsb25nKUlOVF9NQVggKyAx
OworCisJS1VOSVRfQVNTRVJUX0dUKHRlc3QsIGdyZWF0ZXJfdGhhbl9tYXgsICh1bnNpZ25lZCBs
b25nKUlOVF9NQVgpOworCUtVTklUX0FTU0VSVF9MVCh0ZXN0LCAoc2l6ZV90KXNucHJpbnRmKGlu
cHV0LCBzaXplb2YoaW5wdXQpLCAiJWx1IiwKKwkJCQkJICAgICAgIGdyZWF0ZXJfdGhhbl9tYXgp
LAorCQkJc2l6ZW9mKGlucHV0KSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIC1FSU5WQUwsCisJ
CQlwcm9jX2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwgaW5wdXQsICZsZW4sCisJ
CQkJICAgICAgJnBvcykpOworCUtVTklUX0FTU0VSVF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQpIC0g
MSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgKigoaW50ICopdGFibGUuZGF0YSkp
OworfQorCitzdGF0aWMgc3RydWN0IGt1bml0X2Nhc2Ugc3lzY3RsX3Rlc3RfY2FzZXNbXSA9IHsK
KwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY19udWxsX3RibF9kYXRhKSwKKwlL
VU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY190YWJsZV9tYXhsZW5fdW5zZXQpLAor
CUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxlX2xlbl9pc196ZXJvKSwK
KwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY190YWJsZV9yZWFkX2J1dF9wb3Np
dGlvbl9zZXQpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9oYXBweV9z
aW5nbGVfcG9zaXRpdmUpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9o
YXBweV9zaW5nbGVfbmVnYXRpdmUpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNf
d3JpdGVfaGFwcHlfc2luZ2xlX3Bvc2l0aXZlKSwKKwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2Rv
aW50dmVjX3dyaXRlX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZSksCisJS1VOSVRfQ0FTRShzeXNjdGxf
dGVzdF9hcGlfZG9pbnR2ZWNfd3JpdGVfc2luZ2xlX2xlc3NfaW50X21pbiksCisJS1VOSVRfQ0FT
RShzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfd3JpdGVfc2luZ2xlX2dyZWF0ZXJfaW50X21heCks
CisJe30KK307CisKK3N0YXRpYyBzdHJ1Y3Qga3VuaXRfc3VpdGUgc3lzY3RsX3Rlc3Rfc3VpdGUg
PSB7CisJLm5hbWUgPSAic3lzY3RsX3Rlc3QiLAorCS50ZXN0X2Nhc2VzID0gc3lzY3RsX3Rlc3Rf
Y2FzZXMsCit9OworCitrdW5pdF90ZXN0X3N1aXRlKHN5c2N0bF90ZXN0X3N1aXRlKTsKZGlmZiAt
LWdpdCBhL2xpYi9LY29uZmlnLmRlYnVnIGIvbGliL0tjb25maWcuZGVidWcKaW5kZXggY2JkZmFl
Mzc5ODk2NS4uNmY4MDA3ODAwYTc2ZiAxMDA2NDQKLS0tIGEvbGliL0tjb25maWcuZGVidWcKKysr
IGIvbGliL0tjb25maWcuZGVidWcKQEAgLTE5MzksNiArMTkzOSwxNyBAQCBjb25maWcgVEVTVF9T
WVNDVEwKIAogCSAgSWYgdW5zdXJlLCBzYXkgTi4KIAorY29uZmlnIFNZU0NUTF9LVU5JVF9URVNU
CisJYm9vbCAiS1VuaXQgdGVzdCBmb3Igc3lzY3RsIgorCWRlcGVuZHMgb24gS1VOSVQKKwloZWxw
CisJICBUaGlzIGJ1aWxkcyB0aGUgcHJvYyBzeXNjdGwgdW5pdCB0ZXN0LCB3aGljaCBydW5zIG9u
IGJvb3QuCisJICBUZXN0cyB0aGUgQVBJIGNvbnRyYWN0IGFuZCBpbXBsZW1lbnRhdGlvbiBjb3Jy
ZWN0bmVzcyBvZiBzeXNjdGwuCisJICBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBLVW5pdCBhbmQg
dW5pdCB0ZXN0cyBpbiBnZW5lcmFsIHBsZWFzZSByZWZlcgorCSAgdG8gdGhlIEtVbml0IGRvY3Vt
ZW50YXRpb24gaW4gRG9jdW1lbnRhdGlvbi9kZXYtdG9vbHMva3VuaXQvLgorCisJICBJZiB1bnN1
cmUsIHNheSBOLgorCiBjb25maWcgVEVTVF9VREVMQVkKIAl0cmlzdGF0ZSAidWRlbGF5IHRlc3Qg
ZHJpdmVyIgogCWhlbHAKLS0gCjIuMjIuMC40MTAuZ2Q4ZmRiZTIxYjUtZ29vZwoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcg
bGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
