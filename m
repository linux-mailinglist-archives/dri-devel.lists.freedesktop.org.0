Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 658E47EEF4
	for <lists+dri-devel@lfdr.de>; Fri,  2 Aug 2019 10:21:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 608206ED31;
	Fri,  2 Aug 2019 08:19:46 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pg1-x543.google.com (mail-pg1-x543.google.com
 [IPv6:2607:f8b0:4864:20::543])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4991F6E85E;
 Fri,  2 Aug 2019 02:17:00 +0000 (UTC)
Received: by mail-pg1-x543.google.com with SMTP id o13so35214858pgp.12;
 Thu, 01 Aug 2019 19:17:00 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=qVOEtC+FJUT8up8TCOoMm5YvZPMSmdk5e2B42ED2yyM=;
 b=kQGEAG3T+m8fOMUzKBHhCfIn0V/+m2MLWbDtXtFxERBv0Vo14TxGWQH0g6BYMAXnGU
 ozxModCTmcSwonAaRzo29YWp4A6HlJ2QBQcYMKd7wKpXiOhsDN43SLeN8yvlCLAdsIJ3
 4pjYo10DL+4FJYRvJy9UDCygxhqhSxZzYkSAnXreEko8C3inbn6bYi3FtkFvLD5SzAQU
 76zdZFeGX7aEo09bVeUUeKOxXiexpkl9ceb5Ba0gD7URDv3rvoNoIrzxduuMBTg9Udxy
 VDu/Vt+O88mmdhJrLzB7W7eFzm/HwgTiIdypwUYRzJUR9cKPTtnUYM1C1rlu9ibFri5I
 K42g==
X-Gm-Message-State: APjAAAXHdVecl/Y2hWvgdBG+n/8CVzlN1ZqRSWxqBXEBJVwlMNbHfU4d
 M3HEsvDJbR7TQyM57UHd4iE=
X-Google-Smtp-Source: APXvYqw2S5JdGupbqvZdIIqjMukPwNC3gLPKrMG21trP7y7Ol04k+QnkewfeqIGmjfDk06lFiTCaHg==
X-Received: by 2002:aa7:90d4:: with SMTP id k20mr12633478pfk.78.1564712219893; 
 Thu, 01 Aug 2019 19:16:59 -0700 (PDT)
Received: from blueforge.nvidia.com (searspoint.nvidia.com. [216.228.112.21])
 by smtp.gmail.com with ESMTPSA id
 p187sm118200292pfg.89.2019.08.01.19.16.58
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Thu, 01 Aug 2019 19:16:59 -0700 (PDT)
From: john.hubbard@gmail.com
X-Google-Original-From: jhubbard@nvidia.com
To: Andrew Morton <akpm@linux-foundation.org>
Subject: [PATCH 01/34] mm/gup: add make_dirty arg to
 put_user_pages_dirty_lock()
Date: Thu,  1 Aug 2019 19:16:20 -0700
Message-Id: <20190802021653.4882-2-jhubbard@nvidia.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190802021653.4882-1-jhubbard@nvidia.com>
References: <20190802021653.4882-1-jhubbard@nvidia.com>
MIME-Version: 1.0
X-NVConfidentiality: public
X-Mailman-Approved-At: Fri, 02 Aug 2019 08:19:03 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=qVOEtC+FJUT8up8TCOoMm5YvZPMSmdk5e2B42ED2yyM=;
 b=ukzb5bY0dD46KGXV7CH7yz04BRNR061FKYR9hNz7rbtA4m3PeuF0KKl8eqWWySHPYx
 qHTCJ+DrmOmw/+xikP17jl7twdln0u0SFZpk1B09q/bQ6IEd1+91SkWVISKDmwJ5R6GK
 4WWyhsPvTSwbTlkNgQnhHFgrn3+x9+K64k+sI36/9jpXOmtjH/jmUA/Sj4SYmn10jDnE
 r7TYPK4sSlnEUUDApSOXFQUX5rQcwET4H+VN6Xe+iN1m2f84OQcRvPADB5Aml4BXycR/
 T5z1ogXjUH/b2fTUcxAlW+xo8tStjNqQXkZJM1EXcCk/zT8JQ66XBoqwU6t+J0iFbLQP
 +KbA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Jan Kara <jack@suse.cz>, kvm@vger.kernel.org,
 Dave Hansen <dave.hansen@linux.intel.com>, Dave Chinner <david@fromorbit.com>,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 Matthew Wilcox <willy@infradead.org>, sparclinux@vger.kernel.org,
 Ira Weiny <ira.weiny@intel.com>, ceph-devel@vger.kernel.org,
 devel@driverdev.osuosl.org, rds-devel@oss.oracle.com,
 linux-rdma@vger.kernel.org, x86@kernel.org, amd-gfx@lists.freedesktop.org,
 Christoph Hellwig <hch@lst.de>, Christoph Hellwig <hch@infradead.org>,
 Jason Gunthorpe <jgg@ziepe.ca>, xen-devel@lists.xenproject.org,
 devel@lists.orangefs.org, linux-media@vger.kernel.org,
 John Hubbard <jhubbard@nvidia.com>, intel-gfx@lists.freedesktop.org,
 linux-block@vger.kernel.org,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-rpi-kernel@lists.infradead.org, Dan Williams <dan.j.williams@intel.com>,
 linux-arm-kernel@lists.infradead.org, linux-nfs@vger.kernel.org,
 netdev@vger.kernel.org, LKML <linux-kernel@vger.kernel.org>,
 linux-xfs@vger.kernel.org, linux-crypto@vger.kernel.org,
 linux-fsdevel@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSm9obiBIdWJiYXJkIDxqaHViYmFyZEBudmlkaWEuY29tPgoKUHJvdmlkZSBtb3JlIGNh
cGFibGUgdmFyaWF0aW9uIG9mIHB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2soKSwKYW5kIGRlbGV0
ZSBwdXRfdXNlcl9wYWdlc19kaXJ0eSgpLiBUaGlzIGlzIGJhc2VkIG9uIHRoZQpmb2xsb3dpbmc6
CgoxLiBMb3RzIG9mIGNhbGwgc2l0ZXMgYmVjb21lIHNpbXBsZXIgaWYgYSBib29sIGlzIHBhc3Nl
ZAppbnRvIHB1dF91c2VyX3BhZ2UqKCksIGluc3RlYWQgb2YgbWFraW5nIHRoZSBjYWxsIHNpdGUK
Y2hvb3NlIHdoaWNoIHB1dF91c2VyX3BhZ2UqKCkgdmFyaWFudCB0byBjYWxsLgoKMi4gQ2hyaXN0
b3BoIEhlbGx3aWcncyBvYnNlcnZhdGlvbiB0aGF0IHNldF9wYWdlX2RpcnR5X2xvY2soKQppcyB1
c3VhbGx5IGNvcnJlY3QsIGFuZCBzZXRfcGFnZV9kaXJ0eSgpIGlzIHVzdWFsbHkgYQpidWcsIG9y
IGF0IGxlYXN0IHF1ZXN0aW9uYWJsZSwgd2l0aGluIGEgcHV0X3VzZXJfcGFnZSooKQpjYWxsaW5n
IGNoYWluLgoKVGhpcyBsZWFkcyB0byB0aGUgZm9sbG93aW5nIEFQSSBjaG9pY2VzOgoKICAgICog
cHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhwYWdlLCBucGFnZXMsIG1ha2VfZGlydHkpCgogICAg
KiBUaGVyZSBpcyBubyBwdXRfdXNlcl9wYWdlc19kaXJ0eSgpLiBZb3UgaGF2ZSB0bwogICAgICBo
YW5kIGNvZGUgdGhhdCwgaW4gdGhlIHJhcmUgY2FzZSB0aGF0IGl0J3MKICAgICAgcmVxdWlyZWQu
CgpDYzogTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+CkNjOiBKYW4gS2FyYSA8
amFja0BzdXNlLmN6PgpDYzogQ2hyaXN0b3BoIEhlbGx3aWcgPGhjaEBsc3QuZGU+CkNjOiBJcmEg
V2VpbnkgPGlyYS53ZWlueUBpbnRlbC5jb20+CkNjOiBKYXNvbiBHdW50aG9ycGUgPGpnZ0B6aWVw
ZS5jYT4KU2lnbmVkLW9mZi1ieTogSm9obiBIdWJiYXJkIDxqaHViYmFyZEBudmlkaWEuY29tPgot
LS0KIGRyaXZlcnMvaW5maW5pYmFuZC9jb3JlL3VtZW0uYyAgICAgICAgICAgICB8ICAgNSArLQog
ZHJpdmVycy9pbmZpbmliYW5kL2h3L2hmaTEvdXNlcl9wYWdlcy5jICAgIHwgICA1ICstCiBkcml2
ZXJzL2luZmluaWJhbmQvaHcvcWliL3FpYl91c2VyX3BhZ2VzLmMgfCAgIDUgKy0KIGRyaXZlcnMv
aW5maW5pYmFuZC9ody91c25pYy91c25pY191aW9tLmMgICB8ICAgNSArLQogZHJpdmVycy9pbmZp
bmliYW5kL3N3L3Npdy9zaXdfbWVtLmMgICAgICAgIHwgIDEwICstCiBpbmNsdWRlL2xpbnV4L21t
LmggICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDUgKy0KIG1tL2d1cC5jICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8IDExNSArKysrKysrKystLS0tLS0tLS0tLS0KIDcgZmls
ZXMgY2hhbmdlZCwgNTggaW5zZXJ0aW9ucygrKSwgOTIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9pbmZpbmliYW5kL2NvcmUvdW1lbS5jIGIvZHJpdmVycy9pbmZpbmliYW5kL2Nv
cmUvdW1lbS5jCmluZGV4IDA4ZGE4NDBlZDdlZS4uOTY1Y2Y5ZGVhNzFhIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtLmMKKysrIGIvZHJpdmVycy9pbmZpbmliYW5kL2Nv
cmUvdW1lbS5jCkBAIC01NCwxMCArNTQsNyBAQCBzdGF0aWMgdm9pZCBfX2liX3VtZW1fcmVsZWFz
ZShzdHJ1Y3QgaWJfZGV2aWNlICpkZXYsIHN0cnVjdCBpYl91bWVtICp1bWVtLCBpbnQgZAogCiAJ
Zm9yX2VhY2hfc2dfcGFnZSh1bWVtLT5zZ19oZWFkLnNnbCwgJnNnX2l0ZXIsIHVtZW0tPnNnX25l
bnRzLCAwKSB7CiAJCXBhZ2UgPSBzZ19wYWdlX2l0ZXJfcGFnZSgmc2dfaXRlcik7Ci0JCWlmICh1
bWVtLT53cml0YWJsZSAmJiBkaXJ0eSkKLQkJCXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2soJnBh
Z2UsIDEpOwotCQllbHNlCi0JCQlwdXRfdXNlcl9wYWdlKHBhZ2UpOworCQlwdXRfdXNlcl9wYWdl
c19kaXJ0eV9sb2NrKCZwYWdlLCAxLCB1bWVtLT53cml0YWJsZSAmJiBkaXJ0eSk7CiAJfQogCiAJ
c2dfZnJlZV90YWJsZSgmdW1lbS0+c2dfaGVhZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmlu
aWJhbmQvaHcvaGZpMS91c2VyX3BhZ2VzLmMgYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvaGZpMS91
c2VyX3BhZ2VzLmMKaW5kZXggYjg5YTliOWFlZjdhLi40NjlhY2I5NjFmYmQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkxL3VzZXJfcGFnZXMuYworKysgYi9kcml2ZXJzL2lu
ZmluaWJhbmQvaHcvaGZpMS91c2VyX3BhZ2VzLmMKQEAgLTExOCwxMCArMTE4LDcgQEAgaW50IGhm
aTFfYWNxdWlyZV91c2VyX3BhZ2VzKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25n
IHZhZGRyLCBzaXplX3QgbnAKIHZvaWQgaGZpMV9yZWxlYXNlX3VzZXJfcGFnZXMoc3RydWN0IG1t
X3N0cnVjdCAqbW0sIHN0cnVjdCBwYWdlICoqcCwKIAkJCSAgICAgc2l6ZV90IG5wYWdlcywgYm9v
bCBkaXJ0eSkKIHsKLQlpZiAoZGlydHkpCi0JCXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2socCwg
bnBhZ2VzKTsKLQllbHNlCi0JCXB1dF91c2VyX3BhZ2VzKHAsIG5wYWdlcyk7CisJcHV0X3VzZXJf
cGFnZXNfZGlydHlfbG9jayhwLCBucGFnZXMsIGRpcnR5KTsKIAogCWlmIChtbSkgeyAvKiBkdXJp
bmcgY2xvc2UgYWZ0ZXIgc2lnbmFsLCBtbSBjYW4gYmUgTlVMTCAqLwogCQlhdG9taWM2NF9zdWIo
bnBhZ2VzLCAmbW0tPnBpbm5lZF92bSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQv
aHcvcWliL3FpYl91c2VyX3BhZ2VzLmMgYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvcWliL3FpYl91
c2VyX3BhZ2VzLmMKaW5kZXggYmZiZmJiN2UwZmY0Li42YmY3NjRlNDE4OTEgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvaW5maW5pYmFuZC9ody9xaWIvcWliX3VzZXJfcGFnZXMuYworKysgYi9kcml2ZXJz
L2luZmluaWJhbmQvaHcvcWliL3FpYl91c2VyX3BhZ2VzLmMKQEAgLTQwLDEwICs0MCw3IEBACiBz
dGF0aWMgdm9pZCBfX3FpYl9yZWxlYXNlX3VzZXJfcGFnZXMoc3RydWN0IHBhZ2UgKipwLCBzaXpl
X3QgbnVtX3BhZ2VzLAogCQkJCSAgICAgaW50IGRpcnR5KQogewotCWlmIChkaXJ0eSkKLQkJcHV0
X3VzZXJfcGFnZXNfZGlydHlfbG9jayhwLCBudW1fcGFnZXMpOwotCWVsc2UKLQkJcHV0X3VzZXJf
cGFnZXMocCwgbnVtX3BhZ2VzKTsKKwlwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKHAsIG51bV9w
YWdlcywgZGlydHkpOwogfQogCiAvKioKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW5maW5pYmFuZC9o
dy91c25pYy91c25pY191aW9tLmMgYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvdXNuaWMvdXNuaWNf
dWlvbS5jCmluZGV4IDBiMDIzN2Q0MTYxMy4uNjJlNmZmYTlhZDc4IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2luZmluaWJhbmQvaHcvdXNuaWMvdXNuaWNfdWlvbS5jCisrKyBiL2RyaXZlcnMvaW5maW5p
YmFuZC9ody91c25pYy91c25pY191aW9tLmMKQEAgLTc1LDEwICs3NSw3IEBAIHN0YXRpYyB2b2lk
IHVzbmljX3Vpb21fcHV0X3BhZ2VzKHN0cnVjdCBsaXN0X2hlYWQgKmNodW5rX2xpc3QsIGludCBk
aXJ0eSkKIAkJZm9yX2VhY2hfc2coY2h1bmstPnBhZ2VfbGlzdCwgc2csIGNodW5rLT5uZW50cywg
aSkgewogCQkJcGFnZSA9IHNnX3BhZ2Uoc2cpOwogCQkJcGEgPSBzZ19waHlzKHNnKTsKLQkJCWlm
IChkaXJ0eSkKLQkJCQlwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKCZwYWdlLCAxKTsKLQkJCWVs
c2UKLQkJCQlwdXRfdXNlcl9wYWdlKHBhZ2UpOworCQkJcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9j
aygmcGFnZSwgMSwgZGlydHkpOwogCQkJdXNuaWNfZGJnKCJwYTogJXBhXG4iLCAmcGEpOwogCQl9
CiAJCWtmcmVlKGNodW5rKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9zaXcv
c2l3X21lbS5jIGIvZHJpdmVycy9pbmZpbmliYW5kL3N3L3Npdy9zaXdfbWVtLmMKaW5kZXggNjcx
NzFjODJiMGM0Li5hYjgzYTljZWM1NjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9z
dy9zaXcvc2l3X21lbS5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9zaXcvc2l3X21lbS5j
CkBAIC02MywxNSArNjMsNyBAQCBzdHJ1Y3Qgc2l3X21lbSAqc2l3X21lbV9pZDJvYmooc3RydWN0
IHNpd19kZXZpY2UgKnNkZXYsIGludCBzdGFnX2luZGV4KQogc3RhdGljIHZvaWQgc2l3X2ZyZWVf
cGxpc3Qoc3RydWN0IHNpd19wYWdlX2NodW5rICpjaHVuaywgaW50IG51bV9wYWdlcywKIAkJCSAg
IGJvb2wgZGlydHkpCiB7Ci0Jc3RydWN0IHBhZ2UgKipwID0gY2h1bmstPnBsaXN0OwotCi0Jd2hp
bGUgKG51bV9wYWdlcy0tKSB7Ci0JCWlmICghUGFnZURpcnR5KCpwKSAmJiBkaXJ0eSkKLQkJCXB1
dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2socCwgMSk7Ci0JCWVsc2UKLQkJCXB1dF91c2VyX3BhZ2Uo
KnApOwotCQlwKys7Ci0JfQorCXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2soY2h1bmstPnBsaXN0
LCBudW1fcGFnZXMsIGRpcnR5KTsKIH0KIAogdm9pZCBzaXdfdW1lbV9yZWxlYXNlKHN0cnVjdCBz
aXdfdW1lbSAqdW1lbSwgYm9vbCBkaXJ0eSkKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvbW0u
aCBiL2luY2x1ZGUvbGludXgvbW0uaAppbmRleCAwMzM0Y2E5N2M1ODQuLjk3NTliNmEyNDQyMCAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9tbS5oCisrKyBiL2luY2x1ZGUvbGludXgvbW0uaApA
QCAtMTA1Nyw4ICsxMDU3LDkgQEAgc3RhdGljIGlubGluZSB2b2lkIHB1dF91c2VyX3BhZ2Uoc3Ry
dWN0IHBhZ2UgKnBhZ2UpCiAJcHV0X3BhZ2UocGFnZSk7CiB9CiAKLXZvaWQgcHV0X3VzZXJfcGFn
ZXNfZGlydHkoc3RydWN0IHBhZ2UgKipwYWdlcywgdW5zaWduZWQgbG9uZyBucGFnZXMpOwotdm9p
ZCBwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVk
IGxvbmcgbnBhZ2VzKTsKK3ZvaWQgcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhzdHJ1Y3QgcGFn
ZSAqKnBhZ2VzLCB1bnNpZ25lZCBsb25nIG5wYWdlcywKKwkJCSAgICAgICBib29sIG1ha2VfZGly
dHkpOworCiB2b2lkIHB1dF91c2VyX3BhZ2VzKHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVk
IGxvbmcgbnBhZ2VzKTsKIAogI2lmIGRlZmluZWQoQ09ORklHX1NQQVJTRU1FTSkgJiYgIWRlZmlu
ZWQoQ09ORklHX1NQQVJTRU1FTV9WTUVNTUFQKQpkaWZmIC0tZ2l0IGEvbW0vZ3VwLmMgYi9tbS9n
dXAuYwppbmRleCA5OGYxM2FiMzdiYWMuLjdmZWZkN2FiMDJjNCAxMDA2NDQKLS0tIGEvbW0vZ3Vw
LmMKKysrIGIvbW0vZ3VwLmMKQEAgLTI5LDg1ICsyOSw3MCBAQCBzdHJ1Y3QgZm9sbG93X3BhZ2Vf
Y29udGV4dCB7CiAJdW5zaWduZWQgaW50IHBhZ2VfbWFzazsKIH07CiAKLXR5cGVkZWYgaW50ICgq
c2V0X2RpcnR5X2Z1bmNfdCkoc3RydWN0IHBhZ2UgKnBhZ2UpOwotCi1zdGF0aWMgdm9pZCBfX3B1
dF91c2VyX3BhZ2VzX2RpcnR5KHN0cnVjdCBwYWdlICoqcGFnZXMsCi0JCQkJICAgdW5zaWduZWQg
bG9uZyBucGFnZXMsCi0JCQkJICAgc2V0X2RpcnR5X2Z1bmNfdCBzZGYpCi17Ci0JdW5zaWduZWQg
bG9uZyBpbmRleDsKLQotCWZvciAoaW5kZXggPSAwOyBpbmRleCA8IG5wYWdlczsgaW5kZXgrKykg
ewotCQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IGNvbXBvdW5kX2hlYWQocGFnZXNbaW5kZXhdKTsKLQot
CQkvKgotCQkgKiBDaGVja2luZyBQYWdlRGlydHkgYXQgdGhpcyBwb2ludCBtYXkgcmFjZSB3aXRo
Ci0JCSAqIGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKCksIGJ1dCB0aGF0J3MgT0suIFR3byBrZXkg
Y2FzZXM6Ci0JCSAqCi0JCSAqIDEpIFRoaXMgY29kZSBzZWVzIHRoZSBwYWdlIGFzIGFscmVhZHkg
ZGlydHksIHNvIGl0IHNraXBzCi0JCSAqIHRoZSBjYWxsIHRvIHNkZigpLiBUaGF0IGNvdWxkIGhh
cHBlbiBiZWNhdXNlCi0JCSAqIGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKCkgY2FsbGVkIHBhZ2Vf
bWtjbGVhbigpLAotCQkgKiBmb2xsb3dlZCBieSBzZXRfcGFnZV9kaXJ0eSgpLiBIb3dldmVyLCBu
b3cgdGhlIHBhZ2UgaXMKLQkJICogZ29pbmcgdG8gZ2V0IHdyaXR0ZW4gYmFjaywgd2hpY2ggbWVl
dHMgdGhlIG9yaWdpbmFsCi0JCSAqIGludGVudGlvbiBvZiBzZXR0aW5nIGl0IGRpcnR5LCBzbyBh
bGwgaXMgd2VsbDoKLQkJICogY2xlYXJfcGFnZV9kaXJ0eV9mb3JfaW8oKSBnb2VzIG9uIHRvIGNh
bGwKLQkJICogVGVzdENsZWFyUGFnZURpcnR5KCksIGFuZCB3cml0ZSB0aGUgcGFnZSBiYWNrLgot
CQkgKgotCQkgKiAyKSBUaGlzIGNvZGUgc2VlcyB0aGUgcGFnZSBhcyBjbGVhbiwgc28gaXQgY2Fs
bHMgc2RmKCkuCi0JCSAqIFRoZSBwYWdlIHN0YXlzIGRpcnR5LCBkZXNwaXRlIGJlaW5nIHdyaXR0
ZW4gYmFjaywgc28gaXQKLQkJICogZ2V0cyB3cml0dGVuIGJhY2sgYWdhaW4gaW4gdGhlIG5leHQg
d3JpdGViYWNrIGN5Y2xlLgotCQkgKiBUaGlzIGlzIGhhcm1sZXNzLgotCQkgKi8KLQkJaWYgKCFQ
YWdlRGlydHkocGFnZSkpCi0JCQlzZGYocGFnZSk7Ci0KLQkJcHV0X3VzZXJfcGFnZShwYWdlKTsK
LQl9Ci19Ci0KIC8qKgotICogcHV0X3VzZXJfcGFnZXNfZGlydHkoKSAtIHJlbGVhc2UgYW5kIGRp
cnR5IGFuIGFycmF5IG9mIGd1cC1waW5uZWQgcGFnZXMKLSAqIEBwYWdlczogIGFycmF5IG9mIHBh
Z2VzIHRvIGJlIG1hcmtlZCBkaXJ0eSBhbmQgcmVsZWFzZWQuCisgKiBwdXRfdXNlcl9wYWdlc19k
aXJ0eV9sb2NrKCkgLSByZWxlYXNlIGFuZCBvcHRpb25hbGx5IGRpcnR5IGd1cC1waW5uZWQgcGFn
ZXMKKyAqIEBwYWdlczogIGFycmF5IG9mIHBhZ2VzIHRvIGJlIG1heWJlIG1hcmtlZCBkaXJ0eSwg
YW5kIGRlZmluaXRlbHkgcmVsZWFzZWQuCiAgKiBAbnBhZ2VzOiBudW1iZXIgb2YgcGFnZXMgaW4g
dGhlIEBwYWdlcyBhcnJheS4KKyAqIEBtYWtlX2RpcnR5OiB3aGV0aGVyIHRvIG1hcmsgdGhlIHBh
Z2VzIGRpcnR5CiAgKgogICogImd1cC1waW5uZWQgcGFnZSIgcmVmZXJzIHRvIGEgcGFnZSB0aGF0
IGhhcyBoYWQgb25lIG9mIHRoZSBnZXRfdXNlcl9wYWdlcygpCiAgKiB2YXJpYW50cyBjYWxsZWQg
b24gdGhhdCBwYWdlLgogICoKICAqIEZvciBlYWNoIHBhZ2UgaW4gdGhlIEBwYWdlcyBhcnJheSwg
bWFrZSB0aGF0IHBhZ2UgKG9yIGl0cyBoZWFkIHBhZ2UsIGlmIGEKLSAqIGNvbXBvdW5kIHBhZ2Up
IGRpcnR5LCBpZiBpdCB3YXMgcHJldmlvdXNseSBsaXN0ZWQgYXMgY2xlYW4uIFRoZW4sIHJlbGVh
c2UKLSAqIHRoZSBwYWdlIHVzaW5nIHB1dF91c2VyX3BhZ2UoKS4KKyAqIGNvbXBvdW5kIHBhZ2Up
IGRpcnR5LCBpZiBAbWFrZV9kaXJ0eSBpcyB0cnVlLCBhbmQgaWYgdGhlIHBhZ2Ugd2FzIHByZXZp
b3VzbHkKKyAqIGxpc3RlZCBhcyBjbGVhbi4gSW4gYW55IGNhc2UsIHJlbGVhc2VzIGFsbCBwYWdl
cyB1c2luZyBwdXRfdXNlcl9wYWdlKCksCisgKiBwb3NzaWJseSB2aWEgcHV0X3VzZXJfcGFnZXMo
KSwgZm9yIHRoZSBub24tZGlydHkgY2FzZS4KICAqCiAgKiBQbGVhc2Ugc2VlIHRoZSBwdXRfdXNl
cl9wYWdlKCkgZG9jdW1lbnRhdGlvbiBmb3IgZGV0YWlscy4KICAqCi0gKiBzZXRfcGFnZV9kaXJ0
eSgpLCB3aGljaCBkb2VzIG5vdCBsb2NrIHRoZSBwYWdlLCBpcyB1c2VkIGhlcmUuCi0gKiBUaGVy
ZWZvcmUsIGl0IGlzIHRoZSBjYWxsZXIncyByZXNwb25zaWJpbGl0eSB0byBlbnN1cmUgdGhhdCB0
aGlzIGlzCi0gKiBzYWZlLiBJZiBub3QsIHRoZW4gcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jaygp
IHNob3VsZCBiZSBjYWxsZWQgaW5zdGVhZC4KKyAqIHNldF9wYWdlX2RpcnR5X2xvY2soKSBpcyB1
c2VkIGludGVybmFsbHkuIElmIGluc3RlYWQsIHNldF9wYWdlX2RpcnR5KCkgaXMKKyAqIHJlcXVp
cmVkLCB0aGVuIHRoZSBjYWxsZXIgc2hvdWxkIGEpIHZlcmlmeSB0aGF0IHRoaXMgaXMgcmVhbGx5
IGNvcnJlY3QsCisgKiBiZWNhdXNlIF9sb2NrKCkgaXMgdXN1YWxseSByZXF1aXJlZCwgYW5kIGIp
IGhhbmQgY29kZSBpdDoKKyAqIHNldF9wYWdlX2RpcnR5X2xvY2soKSwgcHV0X3VzZXJfcGFnZSgp
LgogICoKICAqLwotdm9pZCBwdXRfdXNlcl9wYWdlc19kaXJ0eShzdHJ1Y3QgcGFnZSAqKnBhZ2Vz
LCB1bnNpZ25lZCBsb25nIG5wYWdlcykKK3ZvaWQgcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhz
dHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25lZCBsb25nIG5wYWdlcywKKwkJCSAgICAgICBib29s
IG1ha2VfZGlydHkpCiB7Ci0JX19wdXRfdXNlcl9wYWdlc19kaXJ0eShwYWdlcywgbnBhZ2VzLCBz
ZXRfcGFnZV9kaXJ0eSk7Ci19Ci1FWFBPUlRfU1lNQk9MKHB1dF91c2VyX3BhZ2VzX2RpcnR5KTsK
Kwl1bnNpZ25lZCBsb25nIGluZGV4OwogCi0vKioKLSAqIHB1dF91c2VyX3BhZ2VzX2RpcnR5X2xv
Y2soKSAtIHJlbGVhc2UgYW5kIGRpcnR5IGFuIGFycmF5IG9mIGd1cC1waW5uZWQgcGFnZXMKLSAq
IEBwYWdlczogIGFycmF5IG9mIHBhZ2VzIHRvIGJlIG1hcmtlZCBkaXJ0eSBhbmQgcmVsZWFzZWQu
Ci0gKiBAbnBhZ2VzOiBudW1iZXIgb2YgcGFnZXMgaW4gdGhlIEBwYWdlcyBhcnJheS4KLSAqCi0g
KiBGb3IgZWFjaCBwYWdlIGluIHRoZSBAcGFnZXMgYXJyYXksIG1ha2UgdGhhdCBwYWdlIChvciBp
dHMgaGVhZCBwYWdlLCBpZiBhCi0gKiBjb21wb3VuZCBwYWdlKSBkaXJ0eSwgaWYgaXQgd2FzIHBy
ZXZpb3VzbHkgbGlzdGVkIGFzIGNsZWFuLiBUaGVuLCByZWxlYXNlCi0gKiB0aGUgcGFnZSB1c2lu
ZyBwdXRfdXNlcl9wYWdlKCkuCi0gKgotICogUGxlYXNlIHNlZSB0aGUgcHV0X3VzZXJfcGFnZSgp
IGRvY3VtZW50YXRpb24gZm9yIGRldGFpbHMuCi0gKgotICogVGhpcyBpcyBqdXN0IGxpa2UgcHV0
X3VzZXJfcGFnZXNfZGlydHkoKSwgZXhjZXB0IHRoYXQgaXQgaW52b2tlcwotICogc2V0X3BhZ2Vf
ZGlydHlfbG9jaygpLCBpbnN0ZWFkIG9mIHNldF9wYWdlX2RpcnR5KCkuCi0gKgotICovCi12b2lk
IHB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2soc3RydWN0IHBhZ2UgKipwYWdlcywgdW5zaWduZWQg
bG9uZyBucGFnZXMpCi17Ci0JX19wdXRfdXNlcl9wYWdlc19kaXJ0eShwYWdlcywgbnBhZ2VzLCBz
ZXRfcGFnZV9kaXJ0eV9sb2NrKTsKKwkvKgorCSAqIFRPRE86IHRoaXMgY2FuIGJlIG9wdGltaXpl
ZCBmb3IgaHVnZSBwYWdlczogaWYgYSBzZXJpZXMgb2YgcGFnZXMgaXMKKwkgKiBwaHlzaWNhbGx5
IGNvbnRpZ3VvdXMgYW5kIHBhcnQgb2YgdGhlIHNhbWUgY29tcG91bmQgcGFnZSwgdGhlbiBhCisJ
ICogc2luZ2xlIG9wZXJhdGlvbiB0byB0aGUgaGVhZCBwYWdlIHNob3VsZCBzdWZmaWNlLgorCSAq
LworCisJaWYgKCFtYWtlX2RpcnR5KSB7CisJCXB1dF91c2VyX3BhZ2VzKHBhZ2VzLCBucGFnZXMp
OworCQlyZXR1cm47CisJfQorCisJZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbnBhZ2VzOyBpbmRl
eCsrKSB7CisJCXN0cnVjdCBwYWdlICpwYWdlID0gY29tcG91bmRfaGVhZChwYWdlc1tpbmRleF0p
OworCQkvKgorCQkgKiBDaGVja2luZyBQYWdlRGlydHkgYXQgdGhpcyBwb2ludCBtYXkgcmFjZSB3
aXRoCisJCSAqIGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKCksIGJ1dCB0aGF0J3MgT0suIFR3byBr
ZXkKKwkJICogY2FzZXM6CisJCSAqCisJCSAqIDEpIFRoaXMgY29kZSBzZWVzIHRoZSBwYWdlIGFz
IGFscmVhZHkgZGlydHksIHNvIGl0CisJCSAqIHNraXBzIHRoZSBjYWxsIHRvIHNldF9wYWdlX2Rp
cnR5KCkuIFRoYXQgY291bGQgaGFwcGVuCisJCSAqIGJlY2F1c2UgY2xlYXJfcGFnZV9kaXJ0eV9m
b3JfaW8oKSBjYWxsZWQKKwkJICogcGFnZV9ta2NsZWFuKCksIGZvbGxvd2VkIGJ5IHNldF9wYWdl
X2RpcnR5KCkuCisJCSAqIEhvd2V2ZXIsIG5vdyB0aGUgcGFnZSBpcyBnb2luZyB0byBnZXQgd3Jp
dHRlbiBiYWNrLAorCQkgKiB3aGljaCBtZWV0cyB0aGUgb3JpZ2luYWwgaW50ZW50aW9uIG9mIHNl
dHRpbmcgaXQKKwkJICogZGlydHksIHNvIGFsbCBpcyB3ZWxsOiBjbGVhcl9wYWdlX2RpcnR5X2Zv
cl9pbygpIGdvZXMKKwkJICogb24gdG8gY2FsbCBUZXN0Q2xlYXJQYWdlRGlydHkoKSwgYW5kIHdy
aXRlIHRoZSBwYWdlCisJCSAqIGJhY2suCisJCSAqCisJCSAqIDIpIFRoaXMgY29kZSBzZWVzIHRo
ZSBwYWdlIGFzIGNsZWFuLCBzbyBpdCBjYWxscworCQkgKiBzZXRfcGFnZV9kaXJ0eSgpLiBUaGUg
cGFnZSBzdGF5cyBkaXJ0eSwgZGVzcGl0ZSBiZWluZworCQkgKiB3cml0dGVuIGJhY2ssIHNvIGl0
IGdldHMgd3JpdHRlbiBiYWNrIGFnYWluIGluIHRoZQorCQkgKiBuZXh0IHdyaXRlYmFjayBjeWNs
ZS4gVGhpcyBpcyBoYXJtbGVzcy4KKwkJICovCisJCWlmICghUGFnZURpcnR5KHBhZ2UpKQorCQkJ
c2V0X3BhZ2VfZGlydHlfbG9jayhwYWdlKTsKKwkJcHV0X3VzZXJfcGFnZShwYWdlKTsKKwl9CiB9
CiBFWFBPUlRfU1lNQk9MKHB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2spOwogCi0tIAoyLjIyLjAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZl
bCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
