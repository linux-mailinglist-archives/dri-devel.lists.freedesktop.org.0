Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id EFD71DAA5D
	for <lists+dri-devel@lfdr.de>; Thu, 17 Oct 2019 12:50:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CFB2B6EA4A;
	Thu, 17 Oct 2019 10:50:00 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 36CDA6EA47;
 Thu, 17 Oct 2019 10:49:59 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
 [10.5.11.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 734DE302C09E;
 Thu, 17 Oct 2019 10:49:58 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-185.pek2.redhat.com [10.72.12.185])
 by smtp.corp.redhat.com (Postfix) with ESMTP id E3A1E5D70D;
 Thu, 17 Oct 2019 10:49:04 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [PATCH V4 1/6] mdev: class id support
Date: Thu, 17 Oct 2019 18:48:31 +0800
Message-Id: <20191017104836.32464-2-jasowang@redhat.com>
In-Reply-To: <20191017104836.32464-1-jasowang@redhat.com>
References: <20191017104836.32464-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.46]); Thu, 17 Oct 2019 10:49:58 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: christophe.de.dinechin@gmail.com, sebott@linux.ibm.com, airlied@linux.ie,
 Jason Wang <jasowang@redhat.com>, heiko.carstens@de.ibm.com,
 kevin.tian@intel.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, parav@mellanox.com,
 zhihong.wang@intel.com, stefanha@redhat.com, akrowiak@linux.ibm.com,
 netdev@vger.kernel.org, cohuck@redhat.com, oberpar@linux.ibm.com,
 maxime.coquelin@redhat.com, lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

TWRldiBidXMgb25seSBzdXBwb3J0cyB2ZmlvIGRyaXZlciByaWdodCBub3csIHNvIGl0IGRvZXNu
J3QgaW1wbGVtZW50Cm1hdGNoIG1ldGhvZC4gQnV0IGluIHRoZSBmdXR1cmUsIHdlIG1heSBhZGQg
ZHJpdmVycyBvdGhlciB0aGFuIHZmaW8sCnRoZSBmaXJzdCBkcml2ZXIgY291bGQgYmUgdmlydGlv
LW1kZXYuIFRoaXMgbWVhbnMgd2UgbmVlZCB0byBhZGQKZGV2aWNlIGNsYXNzIGlkIHN1cHBvcnQg
aW4gYnVzIG1hdGNoIG1ldGhvZCB0byBwYWlyIHRoZSBtZGV2IGRldmljZQphbmQgbWRldiBkcml2
ZXIgY29ycmVjdGx5LgoKU28gdGhpcyBwYXRjaCBhZGRzIGlkX3RhYmxlIHRvIG1kZXZfZHJpdmVy
IGFuZCBjbGFzc19pZCBmb3IgbWRldgpkZXZpY2Ugd2l0aCB0aGUgbWF0Y2ggbWV0aG9kIGZvciBt
ZGV2IGJ1cy4KClNpZ25lZC1vZmYtYnk6IEphc29uIFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+
Ci0tLQogLi4uL2RyaXZlci1hcGkvdmZpby1tZWRpYXRlZC1kZXZpY2UucnN0ICAgICAgIHwgIDcg
KysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyAgICAgICAgICAgICAgfCAg
MSArCiBkcml2ZXJzL3MzOTAvY2lvL3ZmaW9fY2N3X29wcy5jICAgICAgICAgICAgICAgfCAgMSAr
CiBkcml2ZXJzL3MzOTAvY3J5cHRvL3ZmaW9fYXBfb3BzLmMgICAgICAgICAgICAgfCAgMSArCiBk
cml2ZXJzL3ZmaW8vbWRldi9tZGV2X2NvcmUuYyAgICAgICAgICAgICAgICAgfCAxOCArKysrKysr
KysrKysrKysKIGRyaXZlcnMvdmZpby9tZGV2L21kZXZfZHJpdmVyLmMgICAgICAgICAgICAgICB8
IDIyICsrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvdmZpby9tZGV2L21kZXZfcHJpdmF0ZS5o
ICAgICAgICAgICAgICB8ICAxICsKIGRyaXZlcnMvdmZpby9tZGV2L3ZmaW9fbWRldi5jICAgICAg
ICAgICAgICAgICB8ICA2ICsrKysrCiBpbmNsdWRlL2xpbnV4L21kZXYuaCAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgOCArKysrKysrCiBpbmNsdWRlL2xpbnV4L21vZF9kZXZpY2V0YWJsZS5o
ICAgICAgICAgICAgICAgfCAgOCArKysrKysrCiBzYW1wbGVzL3ZmaW8tbWRldi9tYm9jaHMuYyAg
ICAgICAgICAgICAgICAgICAgfCAgMSArCiBzYW1wbGVzL3ZmaW8tbWRldi9tZHB5LmMgICAgICAg
ICAgICAgICAgICAgICAgfCAgMSArCiBzYW1wbGVzL3ZmaW8tbWRldi9tdHR5LmMgICAgICAgICAg
ICAgICAgICAgICAgfCAgMSArCiAxMyBmaWxlcyBjaGFuZ2VkLCA3NSBpbnNlcnRpb25zKCspLCAx
IGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZmaW8t
bWVkaWF0ZWQtZGV2aWNlLnJzdCBiL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS92ZmlvLW1lZGlh
dGVkLWRldmljZS5yc3QKaW5kZXggMjVlYjdkNWI4MzRiLi5mOWE3OGQ3NWE2N2EgMTAwNjQ0Ci0t
LSBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS92ZmlvLW1lZGlhdGVkLWRldmljZS5yc3QKKysr
IGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZmaW8tbWVkaWF0ZWQtZGV2aWNlLnJzdApAQCAt
MTAyLDEyICsxMDIsMTQgQEAgc3RydWN0dXJlIHRvIHJlcHJlc2VudCBhIG1lZGlhdGVkIGRldmlj
ZSdzIGRyaXZlcjo6CiAgICAgICAqIEBwcm9iZTogY2FsbGVkIHdoZW4gbmV3IGRldmljZSBjcmVh
dGVkCiAgICAgICAqIEByZW1vdmU6IGNhbGxlZCB3aGVuIGRldmljZSByZW1vdmVkCiAgICAgICAq
IEBkcml2ZXI6IGRldmljZSBkcml2ZXIgc3RydWN0dXJlCisgICAgICAqIEBpZF90YWJsZTogdGhl
IGlkcyBzZXJ2aWNlZCBieSB0aGlzIGRyaXZlcgogICAgICAgKi8KICAgICAgc3RydWN0IG1kZXZf
ZHJpdmVyIHsKIAkgICAgIGNvbnN0IGNoYXIgKm5hbWU7CiAJICAgICBpbnQgICgqcHJvYmUpICAo
c3RydWN0IGRldmljZSAqZGV2KTsKIAkgICAgIHZvaWQgKCpyZW1vdmUpIChzdHJ1Y3QgZGV2aWNl
ICpkZXYpOwogCSAgICAgc3RydWN0IGRldmljZV9kcml2ZXIgICAgZHJpdmVyOworCSAgICAgY29u
c3Qgc3RydWN0IG1kZXZfY2xhc3NfaWQgKmlkX3RhYmxlOwogICAgICB9OwogCiBBIG1lZGlhdGVk
IGJ1cyBkcml2ZXIgZm9yIG1kZXYgc2hvdWxkIHVzZSB0aGlzIHN0cnVjdHVyZSBpbiB0aGUgZnVu
Y3Rpb24gY2FsbHMKQEAgLTE2NSwxMiArMTY3LDE1IEBAIHJlZ2lzdGVyIGl0c2VsZiB3aXRoIHRo
ZSBtZGV2IGNvcmUgZHJpdmVyOjoKIAlleHRlcm4gaW50ICBtZGV2X3JlZ2lzdGVyX2RldmljZShz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29u
c3Qgc3RydWN0IG1kZXZfcGFyZW50X29wcyAqb3BzKTsKIAorSXQgaXMgYWxzbyByZXF1aXJlZCB0
byBzcGVjaWZ5IHRoZSBjbGFzc19pZCBpbiBjcmVhdGUoKSBjYWxsYmFjayB0aHJvdWdoOjoKKwor
CWludCBtZGV2X3NldF9jbGFzcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZCk7CisK
IEhvd2V2ZXIsIHRoZSBtZGV2X3BhcmVudF9vcHMgc3RydWN0dXJlIGlzIG5vdCByZXF1aXJlZCBp
biB0aGUgZnVuY3Rpb24gY2FsbAogdGhhdCBhIGRyaXZlciBzaG91bGQgdXNlIHRvIHVucmVnaXN0
ZXIgaXRzZWxmIHdpdGggdGhlIG1kZXYgY29yZSBkcml2ZXI6OgogCiAJZXh0ZXJuIHZvaWQgbWRl
dl91bnJlZ2lzdGVyX2RldmljZShzdHJ1Y3QgZGV2aWNlICpkZXYpOwogCi0KIE1lZGlhdGVkIERl
dmljZSBNYW5hZ2VtZW50IEludGVyZmFjZSBUaHJvdWdoIHN5c2ZzCiA9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1n
dC5jCmluZGV4IDM0M2Q3OWMxY2I3ZS4uNjQyMGYwZGJkMzFiIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
a3ZtZ3QuYwpAQCAtNjc4LDYgKzY3OCw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfdmdwdV9jcmVhdGUo
c3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIAkJICAgICBk
ZXZfbmFtZShtZGV2X2RldihtZGV2KSkpOwogCXJldCA9IDA7CiAKKwltZGV2X3NldF9jbGFzcyht
ZGV2LCBNREVWX0NMQVNTX0lEX1ZGSU8pOwogb3V0OgogCXJldHVybiByZXQ7CiB9CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3MzOTAvY2lvL3ZmaW9fY2N3X29wcy5jIGIvZHJpdmVycy9zMzkwL2Npby92
ZmlvX2Njd19vcHMuYwppbmRleCBmMGQ3MWFiNzdjNTAuLmNmMmMwMTNhZTMyZiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9zMzkwL2Npby92ZmlvX2Njd19vcHMuYworKysgYi9kcml2ZXJzL3MzOTAvY2lv
L3ZmaW9fY2N3X29wcy5jCkBAIC0xMjksNiArMTI5LDcgQEAgc3RhdGljIGludCB2ZmlvX2Njd19t
ZGV2X2NyZWF0ZShzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IG1kZXZfZGV2aWNlICptZGV2
KQogCQkJICAgcHJpdmF0ZS0+c2NoLT5zY2hpZC5zc2lkLAogCQkJICAgcHJpdmF0ZS0+c2NoLT5z
Y2hpZC5zY2hfbm8pOwogCisJbWRldl9zZXRfY2xhc3MobWRldiwgTURFVl9DTEFTU19JRF9WRklP
KTsKIAlyZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9zMzkwL2NyeXB0by92Zmlv
X2FwX29wcy5jIGIvZHJpdmVycy9zMzkwL2NyeXB0by92ZmlvX2FwX29wcy5jCmluZGV4IDVjMGY1
M2M2ZGRlNy4uMDdjMzEwNzBhZmViIDEwMDY0NAotLS0gYS9kcml2ZXJzL3MzOTAvY3J5cHRvL3Zm
aW9fYXBfb3BzLmMKKysrIGIvZHJpdmVycy9zMzkwL2NyeXB0by92ZmlvX2FwX29wcy5jCkBAIC0z
NDMsNiArMzQzLDcgQEAgc3RhdGljIGludCB2ZmlvX2FwX21kZXZfY3JlYXRlKHN0cnVjdCBrb2Jq
ZWN0ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJbGlzdF9hZGQoJm1hdHJpeF9t
ZGV2LT5ub2RlLCAmbWF0cml4X2Rldi0+bWRldl9saXN0KTsKIAltdXRleF91bmxvY2soJm1hdHJp
eF9kZXYtPmxvY2spOwogCisJbWRldl9zZXRfY2xhc3MobWRldiwgTURFVl9DTEFTU19JRF9WRklP
KTsKIAlyZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy92ZmlvL21kZXYvbWRldl9j
b3JlLmMgYi9kcml2ZXJzL3ZmaW8vbWRldi9tZGV2X2NvcmUuYwppbmRleCBiNTU4ZDRjZmQwODIu
LjNhOWM1MmQ3MWI0ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy92ZmlvL21kZXYvbWRldl9jb3JlLmMK
KysrIGIvZHJpdmVycy92ZmlvL21kZXYvbWRldl9jb3JlLmMKQEAgLTQ1LDYgKzQ1LDE2IEBAIHZv
aWQgbWRldl9zZXRfZHJ2ZGF0YShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHZvaWQgKmRhdGEp
CiB9CiBFWFBPUlRfU1lNQk9MKG1kZXZfc2V0X2RydmRhdGEpOwogCisvKiBTcGVjaWZ5IHRoZSBj
bGFzcyBmb3IgdGhlIG1kZXYgZGV2aWNlLCB0aGlzIG11c3QgYmUgY2FsbGVkIGR1cmluZworICog
Y3JlYXRlKCkgY2FsbGJhY2suCisgKi8KK3ZvaWQgbWRldl9zZXRfY2xhc3Moc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2LCB1MTYgaWQpCit7CisJV0FSTl9PTihtZGV2LT5jbGFzc19pZCk7CisJbWRl
di0+Y2xhc3NfaWQgPSBpZDsKK30KK0VYUE9SVF9TWU1CT0wobWRldl9zZXRfY2xhc3MpOworCiBz
dHJ1Y3QgZGV2aWNlICptZGV2X2RldihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiB7CiAJcmV0
dXJuICZtZGV2LT5kZXY7CkBAIC0xMzUsNiArMTQ1LDcgQEAgc3RhdGljIGludCBtZGV2X2Rldmlj
ZV9yZW1vdmVfY2Ioc3RydWN0IGRldmljZSAqZGV2LCB2b2lkICpkYXRhKQogICogbWRldl9yZWdp
c3Rlcl9kZXZpY2UgOiBSZWdpc3RlciBhIGRldmljZQogICogQGRldjogZGV2aWNlIHN0cnVjdHVy
ZSByZXByZXNlbnRpbmcgcGFyZW50IGRldmljZS4KICAqIEBvcHM6IFBhcmVudCBkZXZpY2Ugb3Bl
cmF0aW9uIHN0cnVjdHVyZSB0byBiZSByZWdpc3RlcmVkLgorICogQGlkOiBjbGFzcyBpZC4KICAq
CiAgKiBBZGQgZGV2aWNlIHRvIGxpc3Qgb2YgcmVnaXN0ZXJlZCBwYXJlbnQgZGV2aWNlcy4KICAq
IFJldHVybnMgYSBuZWdhdGl2ZSB2YWx1ZSBvbiBlcnJvciwgb3RoZXJ3aXNlIDAuCkBAIC0zMjQs
NiArMzM1LDEzIEBAIGludCBtZGV2X2RldmljZV9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmos
CiAJaWYgKHJldCkKIAkJZ290byBvcHNfY3JlYXRlX2ZhaWw7CiAKKwlpZiAoIW1kZXYtPmNsYXNz
X2lkKSB7CisJCXJldCA9IC1FSU5WQUw7CisJCVdBUk4oMSwgImNsYXNzIGlkIG11c3QgYmUgc3Bl
Y2lmaWVkIGZvciBkZXZpY2UgJXNcbiIsCisJCSAgICAgZGV2X25hbWUoZGV2KSk7CisJCWdvdG8g
YWRkX2ZhaWw7CisJfQorCiAJcmV0ID0gZGV2aWNlX2FkZCgmbWRldi0+ZGV2KTsKIAlpZiAocmV0
KQogCQlnb3RvIGFkZF9mYWlsOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy92ZmlvL21kZXYvbWRldl9k
cml2ZXIuYyBiL2RyaXZlcnMvdmZpby9tZGV2L21kZXZfZHJpdmVyLmMKaW5kZXggMGQzMjIzYWVl
MjBiLi4zMTlkODg2ZmZhZjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmZpby9tZGV2L21kZXZfZHJp
dmVyLmMKKysrIGIvZHJpdmVycy92ZmlvL21kZXYvbWRldl9kcml2ZXIuYwpAQCAtNjksOCArNjks
MzAgQEAgc3RhdGljIGludCBtZGV2X3JlbW92ZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiAJcmV0dXJu
IDA7CiB9CiAKK3N0YXRpYyBpbnQgbWRldl9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVj
dCBkZXZpY2VfZHJpdmVyICpkcnYpCit7CisJdW5zaWduZWQgaW50IGk7CisJc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2ID0gdG9fbWRldl9kZXZpY2UoZGV2KTsKKwlzdHJ1Y3QgbWRldl9kcml2ZXIg
Km1kcnYgPSB0b19tZGV2X2RyaXZlcihkcnYpOworCWNvbnN0IHN0cnVjdCBtZGV2X2NsYXNzX2lk
ICppZHMgPSBtZHJ2LT5pZF90YWJsZTsKKworCWZvciAoaSA9IDA7IGlkc1tpXS5pZDsgaSsrKQor
CQlpZiAoaWRzW2ldLmlkID09IG1kZXYtPmNsYXNzX2lkKQorCQkJcmV0dXJuIDE7CisJcmV0dXJu
IDA7Cit9CisKK3N0YXRpYyBpbnQgbWRldl91ZXZlbnQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1
Y3Qga29ial91ZXZlbnRfZW52ICplbnYpCit7CisJc3RydWN0IG1kZXZfZGV2aWNlICptZGV2ID0g
dG9fbWRldl9kZXZpY2UoZGV2KTsKKworCXJldHVybiBhZGRfdWV2ZW50X3ZhcihlbnYsICJNT0RB
TElBUz1tZGV2OmMlMDJYIiwgbWRldi0+Y2xhc3NfaWQpOworfQorCiBzdHJ1Y3QgYnVzX3R5cGUg
bWRldl9idXNfdHlwZSA9IHsKIAkubmFtZQkJPSAibWRldiIsCisJLm1hdGNoCQk9IG1kZXZfbWF0
Y2gsCisJLnVldmVudAkJPSBtZGV2X3VldmVudCwKIAkucHJvYmUJCT0gbWRldl9wcm9iZSwKIAku
cmVtb3ZlCQk9IG1kZXZfcmVtb3ZlLAogfTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmZpby9tZGV2
L21kZXZfcHJpdmF0ZS5oIGIvZHJpdmVycy92ZmlvL21kZXYvbWRldl9wcml2YXRlLmgKaW5kZXgg
N2Q5MjI5NTBjYWFmLi5jNjVmNDM2YzE4NjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmZpby9tZGV2
L21kZXZfcHJpdmF0ZS5oCisrKyBiL2RyaXZlcnMvdmZpby9tZGV2L21kZXZfcHJpdmF0ZS5oCkBA
IC0zMyw2ICszMyw3IEBAIHN0cnVjdCBtZGV2X2RldmljZSB7CiAJc3RydWN0IGtvYmplY3QgKnR5
cGVfa29iajsKIAlzdHJ1Y3QgZGV2aWNlICppb21tdV9kZXZpY2U7CiAJYm9vbCBhY3RpdmU7CisJ
dTE2IGNsYXNzX2lkOwogfTsKIAogI2RlZmluZSB0b19tZGV2X2RldmljZShkZXYpCWNvbnRhaW5l
cl9vZihkZXYsIHN0cnVjdCBtZGV2X2RldmljZSwgZGV2KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy92
ZmlvL21kZXYvdmZpb19tZGV2LmMgYi9kcml2ZXJzL3ZmaW8vbWRldi92ZmlvX21kZXYuYwppbmRl
eCAzMDk2NGE0ZTBhMjguLjdiMjRlZTljYjhkZCAxMDA2NDQKLS0tIGEvZHJpdmVycy92ZmlvL21k
ZXYvdmZpb19tZGV2LmMKKysrIGIvZHJpdmVycy92ZmlvL21kZXYvdmZpb19tZGV2LmMKQEAgLTEy
MCwxMCArMTIwLDE2IEBAIHN0YXRpYyB2b2lkIHZmaW9fbWRldl9yZW1vdmUoc3RydWN0IGRldmlj
ZSAqZGV2KQogCXZmaW9fZGVsX2dyb3VwX2RldihkZXYpOwogfQogCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IG1kZXZfY2xhc3NfaWQgaWRfdGFibGVbXSA9IHsKKwl7IE1ERVZfQ0xBU1NfSURfVkZJTyB9
LAorCXsgMCB9LAorfTsKKwogc3RhdGljIHN0cnVjdCBtZGV2X2RyaXZlciB2ZmlvX21kZXZfZHJp
dmVyID0gewogCS5uYW1lCT0gInZmaW9fbWRldiIsCiAJLnByb2JlCT0gdmZpb19tZGV2X3Byb2Jl
LAogCS5yZW1vdmUJPSB2ZmlvX21kZXZfcmVtb3ZlLAorCS5pZF90YWJsZSA9IGlkX3RhYmxlLAog
fTsKIAogc3RhdGljIGludCBfX2luaXQgdmZpb19tZGV2X2luaXQodm9pZCkKZGlmZiAtLWdpdCBh
L2luY2x1ZGUvbGludXgvbWRldi5oIGIvaW5jbHVkZS9saW51eC9tZGV2LmgKaW5kZXggMGNlMzBj
YTc4ZGIwLi43OGI2OWQwOWViNTQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbWRldi5oCisr
KyBiL2luY2x1ZGUvbGludXgvbWRldi5oCkBAIC0xMTgsNiArMTE4LDcgQEAgc3RydWN0IG1kZXZf
dHlwZV9hdHRyaWJ1dGUgbWRldl90eXBlX2F0dHJfIyNfbmFtZSA9CQlcCiAgKiBAcHJvYmU6IGNh
bGxlZCB3aGVuIG5ldyBkZXZpY2UgY3JlYXRlZAogICogQHJlbW92ZTogY2FsbGVkIHdoZW4gZGV2
aWNlIHJlbW92ZWQKICAqIEBkcml2ZXI6IGRldmljZSBkcml2ZXIgc3RydWN0dXJlCisgKiBAaWRf
dGFibGU6IHRoZSBpZHMgc2VydmljZWQgYnkgdGhpcyBkcml2ZXIKICAqCiAgKiovCiBzdHJ1Y3Qg
bWRldl9kcml2ZXIgewpAQCAtMTI1LDYgKzEyNiw3IEBAIHN0cnVjdCBtZGV2X2RyaXZlciB7CiAJ
aW50ICAoKnByb2JlKShzdHJ1Y3QgZGV2aWNlICpkZXYpOwogCXZvaWQgKCpyZW1vdmUpKHN0cnVj
dCBkZXZpY2UgKmRldik7CiAJc3RydWN0IGRldmljZV9kcml2ZXIgZHJpdmVyOworCWNvbnN0IHN0
cnVjdCBtZGV2X2NsYXNzX2lkICppZF90YWJsZTsKIH07CiAKICNkZWZpbmUgdG9fbWRldl9kcml2
ZXIoZHJ2KQljb250YWluZXJfb2YoZHJ2LCBzdHJ1Y3QgbWRldl9kcml2ZXIsIGRyaXZlcikKQEAg
LTEzMiw2ICsxMzQsNyBAQCBzdHJ1Y3QgbWRldl9kcml2ZXIgewogdm9pZCAqbWRldl9nZXRfZHJ2
ZGF0YShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwogdm9pZCBtZGV2X3NldF9kcnZkYXRhKHN0
cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdm9pZCAqZGF0YSk7CiBjb25zdCBndWlkX3QgKm1kZXZf
dXVpZChzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwordm9pZCBtZGV2X3NldF9jbGFzcyhzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZCk7CiAKIGV4dGVybiBzdHJ1Y3QgYnVzX3R5cGUg
bWRldl9idXNfdHlwZTsKIApAQCAtMTQ1LDQgKzE0OCw5IEBAIHN0cnVjdCBkZXZpY2UgKm1kZXZf
cGFyZW50X2RldihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwogc3RydWN0IGRldmljZSAqbWRl
dl9kZXYoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKIHN0cnVjdCBtZGV2X2RldmljZSAqbWRl
dl9mcm9tX2RldihzdHJ1Y3QgZGV2aWNlICpkZXYpOwogCitlbnVtIHsKKwlNREVWX0NMQVNTX0lE
X1ZGSU8gPSAxLAorCS8qIE5ldyBlbnRyaWVzIG11c3QgYmUgYWRkZWQgaGVyZSAqLworfTsKKwog
I2VuZGlmIC8qIE1ERVZfSCAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9tb2RfZGV2aWNl
dGFibGUuaCBiL2luY2x1ZGUvbGludXgvbW9kX2RldmljZXRhYmxlLmgKaW5kZXggNTcxNGZkMzVh
ODNjLi5mMzJjNmU0NGZiMWEgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbW9kX2RldmljZXRh
YmxlLmgKKysrIGIvaW5jbHVkZS9saW51eC9tb2RfZGV2aWNldGFibGUuaApAQCAtODIxLDQgKzgy
MSwxMiBAQCBzdHJ1Y3Qgd21pX2RldmljZV9pZCB7CiAJY29uc3Qgdm9pZCAqY29udGV4dDsKIH07
CiAKKy8qKgorICogc3RydWN0IG1kZXZfY2xhc3NfaWQgLSBNREVWIGRldmljZSBjbGFzcyBpZGVu
dGlmaWVyCisgKiBAaWQ6IFVzZWQgdG8gaWRlbnRpZnkgYSBzcGVjaWZpYyBjbGFzcyBvZiBkZXZp
Y2UsIGUuZyB2ZmlvLW1kZXYgZGV2aWNlLgorICovCitzdHJ1Y3QgbWRldl9jbGFzc19pZCB7CisJ
X191MTYgaWQ7Cit9OworCiAjZW5kaWYgLyogTElOVVhfTU9EX0RFVklDRVRBQkxFX0ggKi8KZGlm
ZiAtLWdpdCBhL3NhbXBsZXMvdmZpby1tZGV2L21ib2Nocy5jIGIvc2FtcGxlcy92ZmlvLW1kZXYv
bWJvY2hzLmMKaW5kZXggYWM1YzhjMTdiMWZmLi4xMTViYzUwNzQ2NTYgMTAwNjQ0Ci0tLSBhL3Nh
bXBsZXMvdmZpby1tZGV2L21ib2Nocy5jCisrKyBiL3NhbXBsZXMvdmZpby1tZGV2L21ib2Nocy5j
CkBAIC01NjEsNiArNTYxLDcgQEAgc3RhdGljIGludCBtYm9jaHNfY3JlYXRlKHN0cnVjdCBrb2Jq
ZWN0ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCiAJbWJvY2hzX3Jlc2V0KG1kZXYp
OwogCiAJbWJvY2hzX3VzZWRfbWJ5dGVzICs9IHR5cGUtPm1ieXRlczsKKwltZGV2X3NldF9jbGFz
cyhtZGV2LCBNREVWX0NMQVNTX0lEX1ZGSU8pOwogCXJldHVybiAwOwogCiBlcnJfbWVtOgpkaWZm
IC0tZ2l0IGEvc2FtcGxlcy92ZmlvLW1kZXYvbWRweS5jIGIvc2FtcGxlcy92ZmlvLW1kZXYvbWRw
eS5jCmluZGV4IGNjODZiZjY1NjZlNC4uNjY1NjE0NTc0ZDUwIDEwMDY0NAotLS0gYS9zYW1wbGVz
L3ZmaW8tbWRldi9tZHB5LmMKKysrIGIvc2FtcGxlcy92ZmlvLW1kZXYvbWRweS5jCkBAIC0yNjks
NiArMjY5LDcgQEAgc3RhdGljIGludCBtZHB5X2NyZWF0ZShzdHJ1Y3Qga29iamVjdCAqa29iaiwg
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQogCW1kcHlfcmVzZXQobWRldik7CiAKIAltZHB5X2Nv
dW50Kys7CisJbWRldl9zZXRfY2xhc3MobWRldiwgTURFVl9DTEFTU19JRF9WRklPKTsKIAlyZXR1
cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvc2FtcGxlcy92ZmlvLW1kZXYvbXR0eS5jIGIvc2FtcGxl
cy92ZmlvLW1kZXYvbXR0eS5jCmluZGV4IGNlODRhMzAwYTRkYS4uOTBkYTEyZmY3ZmQ5IDEwMDY0
NAotLS0gYS9zYW1wbGVzL3ZmaW8tbWRldi9tdHR5LmMKKysrIGIvc2FtcGxlcy92ZmlvLW1kZXYv
bXR0eS5jCkBAIC03NTUsNiArNzU1LDcgQEAgc3RhdGljIGludCBtdHR5X2NyZWF0ZShzdHJ1Y3Qg
a29iamVjdCAqa29iaiwgc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQogCWxpc3RfYWRkKCZtZGV2
X3N0YXRlLT5uZXh0LCAmbWRldl9kZXZpY2VzX2xpc3QpOwogCW11dGV4X3VubG9jaygmbWRldl9s
aXN0X2xvY2spOwogCisJbWRldl9zZXRfY2xhc3MobWRldiwgTURFVl9DTEFTU19JRF9WRklPKTsK
IAlyZXR1cm4gMDsKIH0KIAotLSAKMi4xOS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
