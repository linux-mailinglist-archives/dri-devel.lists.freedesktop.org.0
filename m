Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5CD6BCB54A
	for <lists+dri-devel@lfdr.de>; Fri,  4 Oct 2019 09:40:02 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D03A66EAC6;
	Fri,  4 Oct 2019 07:38:53 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E4D616EA79;
 Thu,  3 Oct 2019 20:20:17 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 61908B071;
 Thu,  3 Oct 2019 20:20:16 +0000 (UTC)
From: Davidlohr Bueso <dave@stgolabs.net>
To: akpm@linux-foundation.org
Subject: [PATCH 03/11] drm/amdgpu: convert amdgpu_vm_it to half closed
 intervals
Date: Thu,  3 Oct 2019 13:18:50 -0700
Message-Id: <20191003201858.11666-4-dave@stgolabs.net>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20191003201858.11666-1-dave@stgolabs.net>
References: <20191003201858.11666-1-dave@stgolabs.net>
MIME-Version: 1.0
X-Mailman-Approved-At: Fri, 04 Oct 2019 07:38:50 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: dave@stgolabs.net, Davidlohr Bueso <dbueso@suse.de>, peterz@infradead.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org, Jerome Glisse <jglisse@redhat.com>,
 amd-gfx@lists.freedesktop.org, Alex Deucher <alexander.deucher@amd.com>,
 walken@google.com,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 linux-rdma@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGFtZGdwdV92bSBpbnRlcnZhbCB0cmVlIHJlYWxseSB3YW50cyBbYSwgYikgaW50ZXJ2YWxz
LApub3QgZnVsbHkgY2xvc2VkIG9uZXMuIEFzIHN1Y2ggY29udmVydCBpdCB0byB1c2UgdGhlIG5l
dwppbnRlcnZhbF90cmVlX2dlbi5oLCBhbmQgYWxzbyByZW5hbWUgdGhlICdsYXN0JyBlbmRwb2lu
dAppbiB0aGUgbm9kZSB0byAnZW5kJywgd2hpY2ggaXMgYm90aCBhIG1vcmUgc3VpdGFibGUgbmFt
ZQpmb3IgdGhlIGhhbGYgY2xvc2VkIGludGVydmFsIGFuZCBhbHNvIHJlZHVjZXMgdGhlIGNoYW5j
ZXMKb2YgbWlzc2luZyBhIGNvbnZlcnNpb24gd2hlbiBkb2luZyBpbnNlcnRpb24gb3IgbG9va3Vw
LgoKQ2M6IEplcm9tZSBHbGlzc2UgPGpnbGlzc2VAcmVkaGF0LmNvbT4KQ2M6IEFsZXggRGV1Y2hl
ciA8YWxleGFuZGVyLmRldWNoZXJAYW1kLmNvbT4KQ2M6ICJDaHJpc3RpYW4gS8O2bmlnIiA8Y2hy
aXN0aWFuLmtvZW5pZ0BhbWQuY29tPgpDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNo
PgpDYzogYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKU2lnbmVkLW9mZi1ieTogRGF2aWRs
b2hyIEJ1ZXNvIDxkYnVlc29Ac3VzZS5kZT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfY3MuYyAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X29iamVjdC5oIHwgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90
cmFjZS5oICB8IDE4ICsrKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X3V2ZC5jICAgIHwgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92
Y2UuYyAgICB8ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdm0uYyAg
ICAgfCA0NiArKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0KIDYgZmlsZXMgY2hhbmdlZCwg
MzYgaW5zZXJ0aW9ucygrKSwgMzcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfY3MuYwppbmRleCA0OWI3NjdiNzIzOGYuLjI5MGJmZTgyMDg5MCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMKQEAgLTc1Niw3ICs3NTYsNyBAQCBzdGF0aWMg
aW50IGFtZGdwdV9jc192bV9oYW5kbGluZyhzdHJ1Y3QgYW1kZ3B1X2NzX3BhcnNlciAqcCkKIAkJ
CX0KIAogCQkJaWYgKCh2YV9zdGFydCArIGNodW5rX2liLT5pYl9ieXRlcykgPgotCQkJICAgICht
LT5sYXN0ICsgMSkgKiBBTURHUFVfR1BVX1BBR0VfU0laRSkgeworCQkJICAgIG0tPmVuZCAqIEFN
REdQVV9HUFVfUEFHRV9TSVpFKSB7CiAJCQkJRFJNX0VSUk9SKCJJQiB2YV9zdGFydCtpYl9ieXRl
cyBpcyBpbnZhbGlkXG4iKTsKIAkJCQlyZXR1cm4gLUVJTlZBTDsKIAkJCX0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9vYmplY3QuaCBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9vYmplY3QuaAppbmRleCA3ZTk5ZjZjNThjNDguLjYwYjcz
YmM0ZDExYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X29i
amVjdC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9vYmplY3QuaApA
QCAtNTEsNyArNTEsNyBAQCBzdHJ1Y3QgYW1kZ3B1X2JvX3ZhX21hcHBpbmcgewogCXN0cnVjdCBs
aXN0X2hlYWQJCWxpc3Q7CiAJc3RydWN0IHJiX25vZGUJCQlyYjsKIAl1aW50NjRfdAkJCXN0YXJ0
OwotCXVpbnQ2NF90CQkJbGFzdDsKKwl1aW50NjRfdAkJCWVuZDsKIAl1aW50NjRfdAkJCV9fc3Vi
dHJlZV9sYXN0OwogCXVpbnQ2NF90CQkJb2Zmc2V0OwogCXVpbnQ2NF90CQkJZmxhZ3M7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHJhY2UuaCBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90cmFjZS5oCmluZGV4IDgyMjdlYmQwZjUxMS4u
YzViMGU4OGQwMTljIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfdHJhY2UuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHJhY2Uu
aApAQCAtMjQ3LDcgKzI0Nyw3IEBAIFRSQUNFX0VWRU5UKGFtZGdwdV92bV9ib19tYXAsCiAJICAg
IFRQX1NUUlVDVF9fZW50cnkoCiAJCQkgICAgIF9fZmllbGQoc3RydWN0IGFtZGdwdV9ibyAqLCBi
bykKIAkJCSAgICAgX19maWVsZChsb25nLCBzdGFydCkKLQkJCSAgICAgX19maWVsZChsb25nLCBs
YXN0KQorCQkJICAgICBfX2ZpZWxkKGxvbmcsIGVuZCkKIAkJCSAgICAgX19maWVsZCh1NjQsIG9m
ZnNldCkKIAkJCSAgICAgX19maWVsZCh1NjQsIGZsYWdzKQogCQkJICAgICApLApAQCAtMjU1LDEy
ICsyNTUsMTIgQEAgVFJBQ0VfRVZFTlQoYW1kZ3B1X3ZtX2JvX21hcCwKIAkgICAgVFBfZmFzdF9h
c3NpZ24oCiAJCQkgICBfX2VudHJ5LT5ibyA9IGJvX3ZhID8gYm9fdmEtPmJhc2UuYm8gOiBOVUxM
OwogCQkJICAgX19lbnRyeS0+c3RhcnQgPSBtYXBwaW5nLT5zdGFydDsKLQkJCSAgIF9fZW50cnkt
Pmxhc3QgPSBtYXBwaW5nLT5sYXN0OworCQkJICAgX19lbnRyeS0+ZW5kID0gbWFwcGluZy0+ZW5k
OwogCQkJICAgX19lbnRyeS0+b2Zmc2V0ID0gbWFwcGluZy0+b2Zmc2V0OwogCQkJICAgX19lbnRy
eS0+ZmxhZ3MgPSBtYXBwaW5nLT5mbGFnczsKIAkJCSAgICksCi0JICAgIFRQX3ByaW50aygiYm89
JXAsIHN0YXJ0PSVseCwgbGFzdD0lbHgsIG9mZnNldD0lMDEwbGx4LCBmbGFncz0lbGx4IiwKLQkJ
ICAgICAgX19lbnRyeS0+Ym8sIF9fZW50cnktPnN0YXJ0LCBfX2VudHJ5LT5sYXN0LAorCSAgICBU
UF9wcmludGsoImJvPSVwLCBzdGFydD0lbHgsIGVuZD0lbHgsIG9mZnNldD0lMDEwbGx4LCBmbGFn
cz0lbGx4IiwKKwkJICAgICAgX19lbnRyeS0+Ym8sIF9fZW50cnktPnN0YXJ0LCBfX2VudHJ5LT5l
bmQsCiAJCSAgICAgIF9fZW50cnktPm9mZnNldCwgX19lbnRyeS0+ZmxhZ3MpCiApOwogCkBAIC0y
NzEsNyArMjcxLDcgQEAgVFJBQ0VfRVZFTlQoYW1kZ3B1X3ZtX2JvX3VubWFwLAogCSAgICBUUF9T
VFJVQ1RfX2VudHJ5KAogCQkJICAgICBfX2ZpZWxkKHN0cnVjdCBhbWRncHVfYm8gKiwgYm8pCiAJ
CQkgICAgIF9fZmllbGQobG9uZywgc3RhcnQpCi0JCQkgICAgIF9fZmllbGQobG9uZywgbGFzdCkK
KwkJCSAgICAgX19maWVsZChsb25nLCBlbmQpCiAJCQkgICAgIF9fZmllbGQodTY0LCBvZmZzZXQp
CiAJCQkgICAgIF9fZmllbGQodTY0LCBmbGFncykKIAkJCSAgICAgKSwKQEAgLTI3OSwxMiArMjc5
LDEyIEBAIFRSQUNFX0VWRU5UKGFtZGdwdV92bV9ib191bm1hcCwKIAkgICAgVFBfZmFzdF9hc3Np
Z24oCiAJCQkgICBfX2VudHJ5LT5ibyA9IGJvX3ZhID8gYm9fdmEtPmJhc2UuYm8gOiBOVUxMOwog
CQkJICAgX19lbnRyeS0+c3RhcnQgPSBtYXBwaW5nLT5zdGFydDsKLQkJCSAgIF9fZW50cnktPmxh
c3QgPSBtYXBwaW5nLT5sYXN0OworCQkJICAgX19lbnRyeS0+ZW5kID0gbWFwcGluZy0+ZW5kOwog
CQkJICAgX19lbnRyeS0+b2Zmc2V0ID0gbWFwcGluZy0+b2Zmc2V0OwogCQkJICAgX19lbnRyeS0+
ZmxhZ3MgPSBtYXBwaW5nLT5mbGFnczsKIAkJCSAgICksCi0JICAgIFRQX3ByaW50aygiYm89JXAs
IHN0YXJ0PSVseCwgbGFzdD0lbHgsIG9mZnNldD0lMDEwbGx4LCBmbGFncz0lbGx4IiwKLQkJICAg
ICAgX19lbnRyeS0+Ym8sIF9fZW50cnktPnN0YXJ0LCBfX2VudHJ5LT5sYXN0LAorCSAgICBUUF9w
cmludGsoImJvPSVwLCBzdGFydD0lbHgsIGVuZD0lbHgsIG9mZnNldD0lMDEwbGx4LCBmbGFncz0l
bGx4IiwKKwkJICAgICAgX19lbnRyeS0+Ym8sIF9fZW50cnktPnN0YXJ0LCBfX2VudHJ5LT5lbmQs
CiAJCSAgICAgIF9fZW50cnktPm9mZnNldCwgX19lbnRyeS0+ZmxhZ3MpCiApOwogCkBAIC0yOTks
NyArMjk5LDcgQEAgREVDTEFSRV9FVkVOVF9DTEFTUyhhbWRncHVfdm1fbWFwcGluZywKIAogCSAg
ICBUUF9mYXN0X2Fzc2lnbigKIAkJCSAgIF9fZW50cnktPnNvZmZzZXQgPSBtYXBwaW5nLT5zdGFy
dDsKLQkJCSAgIF9fZW50cnktPmVvZmZzZXQgPSBtYXBwaW5nLT5sYXN0ICsgMTsKKwkJCSAgIF9f
ZW50cnktPmVvZmZzZXQgPSBtYXBwaW5nLT5lbmQ7CiAJCQkgICBfX2VudHJ5LT5mbGFncyA9IG1h
cHBpbmctPmZsYWdzOwogCQkJICAgKSwKIAkgICAgVFBfcHJpbnRrKCJzb2Zmcz0lMDEwbGx4LCBl
b2Zmcz0lMDEwbGx4LCBmbGFncz0lbGx4IiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV91dmQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV91dmQuYwppbmRleCBiMmMzNjRiODY5NWYuLjgwOTRkZDBiMDMzMiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3V2ZC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV91dmQuYwpAQCAtODE5LDcgKzgxOSw3IEBAIHN0YXRpYyBpbnQg
YW1kZ3B1X3V2ZF9jc19wYXNzMihzdHJ1Y3QgYW1kZ3B1X3V2ZF9jc19jdHggKmN0eCkKIAogCXN0
YXJ0ID0gYW1kZ3B1X2JvX2dwdV9vZmZzZXQoYm8pOwogCi0JZW5kID0gKG1hcHBpbmctPmxhc3Qg
KyAxIC0gbWFwcGluZy0+c3RhcnQpOworCWVuZCA9IG1hcHBpbmctPmVuZCAtIG1hcHBpbmctPnN0
YXJ0OwogCWVuZCA9IGVuZCAqIEFNREdQVV9HUFVfUEFHRV9TSVpFICsgc3RhcnQ7CiAKIAlhZGRy
IC09IG1hcHBpbmctPnN0YXJ0ICogQU1ER1BVX0dQVV9QQUdFX1NJWkU7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmNlLmMgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfdmNlLmMKaW5kZXggYjcwYjNjNDViYjI5Li5kNjUxMWJmNDQ2ZGYg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92Y2UuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmNlLmMKQEAgLTY0Miw4ICs2NDIs
NyBAQCBzdGF0aWMgaW50IGFtZGdwdV92Y2VfY3NfcmVsb2Moc3RydWN0IGFtZGdwdV9jc19wYXJz
ZXIgKnAsIHVpbnQzMl90IGliX2lkeCwKIAkJcmV0dXJuIHI7CiAJfQogCi0JaWYgKChhZGRyICsg
KHVpbnQ2NF90KXNpemUpID4KLQkgICAgKG1hcHBpbmctPmxhc3QgKyAxKSAqIEFNREdQVV9HUFVf
UEFHRV9TSVpFKSB7CisJaWYgKChhZGRyICsgKHVpbnQ2NF90KXNpemUpID4gbWFwcGluZy0+ZW5k
ICogQU1ER1BVX0dQVV9QQUdFX1NJWkUpIHsKIAkJRFJNX0VSUk9SKCJCTyB0byBzbWFsbCBmb3Ig
YWRkciAweCUwMTBMeCAlZCAlZFxuIiwKIAkJCSAgYWRkciwgbG8sIGhpKTsKIAkJcmV0dXJuIC1F
SU5WQUw7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdm0u
YyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92bS5jCmluZGV4IGEyYzc5N2Uz
NGEyOS4uMmY2MTgwMTc2MTdlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfdm0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdm0u
YwpAQCAtMjYsNyArMjYsNyBAQAogICogICAgICAgICAgSmVyb21lIEdsaXNzZQogICovCiAjaW5j
bHVkZSA8bGludXgvZG1hLWZlbmNlLWFycmF5Lmg+Ci0jaW5jbHVkZSA8bGludXgvaW50ZXJ2YWxf
dHJlZV9nZW5lcmljLmg+CisjaW5jbHVkZSA8bGludXgvaW50ZXJ2YWxfdHJlZV9nZW4uaD4KICNp
bmNsdWRlIDxsaW51eC9pZHIuaD4KIAogI2luY2x1ZGUgPGRybS9hbWRncHVfZHJtLmg+CkBAIC01
OCwxMyArNTgsMTMgQEAKICAqLwogCiAjZGVmaW5lIFNUQVJUKG5vZGUpICgobm9kZSktPnN0YXJ0
KQotI2RlZmluZSBMQVNUKG5vZGUpICgobm9kZSktPmxhc3QpCisjZGVmaW5lIEVORChub2RlKSAo
KG5vZGUpLT5lbmQpCiAKIElOVEVSVkFMX1RSRUVfREVGSU5FKHN0cnVjdCBhbWRncHVfYm9fdmFf
bWFwcGluZywgcmIsIHVpbnQ2NF90LCBfX3N1YnRyZWVfbGFzdCwKLQkJICAgICBTVEFSVCwgTEFT
VCwgc3RhdGljLCBhbWRncHVfdm1faXQpCisJCSAgICAgU1RBUlQsIEVORCwgc3RhdGljLCBhbWRn
cHVfdm1faXQpCiAKICN1bmRlZiBTVEFSVAotI3VuZGVmIExBU1QKKyN1bmRlZiBFTkQKIAogLyoq
CiAgKiBzdHJ1Y3QgYW1kZ3B1X3BydF9jYiAtIEhlbHBlciB0byBkaXNhYmxlIHBhcnRpYWwgcmVz
aWRlbnQgdGV4dHVyZSBmZWF0dXJlIGZyb20gYSBmZW5jZSBjYWxsYmFjawpAQCAtMTYxNiw3ICsx
NjE2LDcgQEAgc3RhdGljIGludCBhbWRncHVfdm1fYm9fc3BsaXRfbWFwcGluZyhzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiwKIAlkbyB7CiAJCWRtYV9hZGRyX3QgKmRtYV9hZGRyID0gTlVMTDsK
IAkJdWludDY0X3QgbWF4X2VudHJpZXM7Ci0JCXVpbnQ2NF90IGFkZHIsIGxhc3Q7CisJCXVpbnQ2
NF90IGFkZHIsIGVuZDsKIAogCQlpZiAobm9kZXMpIHsKIAkJCWFkZHIgPSBub2Rlcy0+c3RhcnQg
PDwgUEFHRV9TSElGVDsKQEAgLTE2NTQsMjEgKzE2NTQsMjEgQEAgc3RhdGljIGludCBhbWRncHVf
dm1fYm9fc3BsaXRfbWFwcGluZyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJCWFkZHIg
Kz0gcGZuIDw8IFBBR0VfU0hJRlQ7CiAJCX0KIAotCQlsYXN0ID0gbWluKCh1aW50NjRfdCltYXBw
aW5nLT5sYXN0LCBzdGFydCArIG1heF9lbnRyaWVzIC0gMSk7CisJCWVuZCA9IG1pbigodWludDY0
X3QpbWFwcGluZy0+ZW5kLCBzdGFydCArIG1heF9lbnRyaWVzKTsKIAkJciA9IGFtZGdwdV92bV9i
b191cGRhdGVfbWFwcGluZyhhZGV2LCB2bSwgZmFsc2UsIGV4Y2x1c2l2ZSwKLQkJCQkJCXN0YXJ0
LCBsYXN0LCBmbGFncywgYWRkciwKKwkJCQkJCXN0YXJ0LCBlbmQsIGZsYWdzLCBhZGRyLAogCQkJ
CQkJZG1hX2FkZHIsIGZlbmNlKTsKIAkJaWYgKHIpCiAJCQlyZXR1cm4gcjsKIAotCQlwZm4gKz0g
KGxhc3QgLSBzdGFydCArIDEpIC8gQU1ER1BVX0dQVV9QQUdFU19JTl9DUFVfUEFHRTsKKwkJcGZu
ICs9IChlbmQgLSBzdGFydCkgLyBBTURHUFVfR1BVX1BBR0VTX0lOX0NQVV9QQUdFOwogCQlpZiAo
bm9kZXMgJiYgbm9kZXMtPnNpemUgPT0gcGZuKSB7CiAJCQlwZm4gPSAwOwogCQkJKytub2RlczsK
IAkJfQotCQlzdGFydCA9IGxhc3QgKyAxOworCQlzdGFydCA9IGVuZDsKIAotCX0gd2hpbGUgKHVu
bGlrZWx5KHN0YXJ0ICE9IG1hcHBpbmctPmxhc3QgKyAxKSk7CisJfSB3aGlsZSAodW5saWtlbHko
c3RhcnQgIT0gbWFwcGluZy0+ZW5kKSk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTE5NDYsNyArMTk0
Niw3IEBAIGludCBhbWRncHVfdm1fY2xlYXJfZnJlZWQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYsCiAJCQlpbml0X3B0ZV92YWx1ZSA9IEFNREdQVV9QVEVfREVGQVVMVF9BVEM7CiAKIAkJciA9
IGFtZGdwdV92bV9ib191cGRhdGVfbWFwcGluZyhhZGV2LCB2bSwgZmFsc2UsIE5VTEwsCi0JCQkJ
CQltYXBwaW5nLT5zdGFydCwgbWFwcGluZy0+bGFzdCwKKwkJCQkJCW1hcHBpbmctPnN0YXJ0LCBt
YXBwaW5nLT5lbmQsCiAJCQkJCQlpbml0X3B0ZV92YWx1ZSwgMCwgTlVMTCwgJmYpOwogCQlhbWRn
cHVfdm1fZnJlZV9tYXBwaW5nKGFkZXYsIHZtLCBtYXBwaW5nLCBmKTsKIAkJaWYgKHIpIHsKQEAg
LTIxMjksNyArMjEyOSw3IEBAIGludCBhbWRncHVfdm1fYm9fbWFwKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAogCQlyZXR1cm4gLUVJTlZBTDsKIAogCS8qIG1ha2Ugc3VyZSBvYmplY3QgZml0
IGF0IHRoaXMgb2Zmc2V0ICovCi0JZWFkZHIgPSBzYWRkciArIHNpemUgLSAxOworCWVhZGRyID0g
c2FkZHIgKyBzaXplOwogCWlmIChzYWRkciA+PSBlYWRkciB8fAogCSAgICAoYm8gJiYgb2Zmc2V0
ICsgc2l6ZSA+IGFtZGdwdV9ib19zaXplKGJvKSkpCiAJCXJldHVybiAtRUlOVkFMOwpAQCAtMjE0
Miw3ICsyMTQyLDcgQEAgaW50IGFtZGdwdV92bV9ib19tYXAoc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYsCiAJCS8qIGJvIGFuZCB0bXAgb3ZlcmxhcCwgaW52YWxpZCBhZGRyICovCiAJCWRldl9l
cnIoYWRldi0+ZGV2LCAiYm8gJXAgdmEgMHglMDEwTHgtMHglMDEwTHggY29uZmxpY3Qgd2l0aCAi
CiAJCQkiMHglMDEwTHgtMHglMDEwTHhcbiIsIGJvLCBzYWRkciwgZWFkZHIsCi0JCQl0bXAtPnN0
YXJ0LCB0bXAtPmxhc3QgKyAxKTsKKwkJCXRtcC0+c3RhcnQsIHRtcC0+ZW5kKTsKIAkJcmV0dXJu
IC1FSU5WQUw7CiAJfQogCkBAIC0yMTUxLDcgKzIxNTEsNyBAQCBpbnQgYW1kZ3B1X3ZtX2JvX21h
cChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJcmV0dXJuIC1FTk9NRU07CiAKIAltYXBw
aW5nLT5zdGFydCA9IHNhZGRyOwotCW1hcHBpbmctPmxhc3QgPSBlYWRkcjsKKwltYXBwaW5nLT5l
bmQgPSBlYWRkcjsKIAltYXBwaW5nLT5vZmZzZXQgPSBvZmZzZXQ7CiAJbWFwcGluZy0+ZmxhZ3Mg
PSBmbGFnczsKIApAQCAtMjE5NCw3ICsyMTk0LDcgQEAgaW50IGFtZGdwdV92bV9ib19yZXBsYWNl
X21hcChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAkv
KiBtYWtlIHN1cmUgb2JqZWN0IGZpdCBhdCB0aGlzIG9mZnNldCAqLwotCWVhZGRyID0gc2FkZHIg
KyBzaXplIC0gMTsKKwllYWRkciA9IHNhZGRyICsgc2l6ZTsKIAlpZiAoc2FkZHIgPj0gZWFkZHIg
fHwKIAkgICAgKGJvICYmIG9mZnNldCArIHNpemUgPiBhbWRncHVfYm9fc2l6ZShibykpKQogCQly
ZXR1cm4gLUVJTlZBTDsKQEAgLTIyMTQsNyArMjIxNCw3IEBAIGludCBhbWRncHVfdm1fYm9fcmVw
bGFjZV9tYXAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJZWFkZHIgLz0gQU1ER1BVX0dQ
VV9QQUdFX1NJWkU7CiAKIAltYXBwaW5nLT5zdGFydCA9IHNhZGRyOwotCW1hcHBpbmctPmxhc3Qg
PSBlYWRkcjsKKwltYXBwaW5nLT5lbmQgPSBlYWRkcjsKIAltYXBwaW5nLT5vZmZzZXQgPSBvZmZz
ZXQ7CiAJbWFwcGluZy0+ZmxhZ3MgPSBmbGFnczsKIApAQCAtMjI5OSw3ICsyMjk5LDcgQEAgaW50
IGFtZGdwdV92bV9ib19jbGVhcl9tYXBwaW5ncyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwK
IAlMSVNUX0hFQUQocmVtb3ZlZCk7CiAJdWludDY0X3QgZWFkZHI7CiAKLQllYWRkciA9IHNhZGRy
ICsgc2l6ZSAtIDE7CisJZWFkZHIgPSBzYWRkciArIHNpemU7CiAJc2FkZHIgLz0gQU1ER1BVX0dQ
VV9QQUdFX1NJWkU7CiAJZWFkZHIgLz0gQU1ER1BVX0dQVV9QQUdFX1NJWkU7CiAKQEAgLTIzMjIs
NyArMjMyMiw3IEBAIGludCBhbWRncHVfdm1fYm9fY2xlYXJfbWFwcGluZ3Moc3RydWN0IGFtZGdw
dV9kZXZpY2UgKmFkZXYsCiAJCS8qIFJlbWVtYmVyIG1hcHBpbmcgc3BsaXQgYXQgdGhlIHN0YXJ0
ICovCiAJCWlmICh0bXAtPnN0YXJ0IDwgc2FkZHIpIHsKIAkJCWJlZm9yZS0+c3RhcnQgPSB0bXAt
PnN0YXJ0OwotCQkJYmVmb3JlLT5sYXN0ID0gc2FkZHIgLSAxOworCQkJYmVmb3JlLT5lbmQgPSBz
YWRkcjsKIAkJCWJlZm9yZS0+b2Zmc2V0ID0gdG1wLT5vZmZzZXQ7CiAJCQliZWZvcmUtPmZsYWdz
ID0gdG1wLT5mbGFnczsKIAkJCWJlZm9yZS0+Ym9fdmEgPSB0bXAtPmJvX3ZhOwpAQCAtMjMzMCw5
ICsyMzMwLDkgQEAgaW50IGFtZGdwdV92bV9ib19jbGVhcl9tYXBwaW5ncyhzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwKIAkJfQogCiAJCS8qIFJlbWVtYmVyIG1hcHBpbmcgc3BsaXQgYXQgdGhl
IGVuZCAqLwotCQlpZiAodG1wLT5sYXN0ID4gZWFkZHIpIHsKLQkJCWFmdGVyLT5zdGFydCA9IGVh
ZGRyICsgMTsKLQkJCWFmdGVyLT5sYXN0ID0gdG1wLT5sYXN0OworCQlpZiAodG1wLT5lbmQgPiBl
YWRkcikgeworCQkJYWZ0ZXItPnN0YXJ0ID0gZWFkZHI7CisJCQlhZnRlci0+ZW5kID0gdG1wLT5l
bmQ7CiAJCQlhZnRlci0+b2Zmc2V0ID0gdG1wLT5vZmZzZXQ7CiAJCQlhZnRlci0+b2Zmc2V0ICs9
IGFmdGVyLT5zdGFydCAtIHRtcC0+c3RhcnQ7CiAJCQlhZnRlci0+ZmxhZ3MgPSB0bXAtPmZsYWdz
OwpAQCAtMjM1Myw4ICsyMzUzLDggQEAgaW50IGFtZGdwdV92bV9ib19jbGVhcl9tYXBwaW5ncyhz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAogCQlpZiAodG1wLT5zdGFydCA8IHNhZGRyKQog
CQkgICAgdG1wLT5zdGFydCA9IHNhZGRyOwotCQlpZiAodG1wLT5sYXN0ID4gZWFkZHIpCi0JCSAg
ICB0bXAtPmxhc3QgPSBlYWRkcjsKKwkJaWYgKHRtcC0+ZW5kID4gZWFkZHIpCisJCSAgICB0bXAt
PmVuZCA9IGVhZGRyOwogCiAJCXRtcC0+Ym9fdmEgPSBOVUxMOwogCQlsaXN0X2FkZCgmdG1wLT5s
aXN0LCAmdm0tPmZyZWVkKTsKLS0gCjIuMTYuNAoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vZHJpLWRldmVs
