Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E3C00B8CDA
	for <lists+dri-devel@lfdr.de>; Fri, 20 Sep 2019 10:28:23 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F11F56FB78;
	Fri, 20 Sep 2019 08:28:20 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 262E76FB49;
 Fri, 20 Sep 2019 08:28:19 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 5E4F230607E2;
 Fri, 20 Sep 2019 08:28:18 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-88.pek2.redhat.com [10.72.12.88])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 59731100EBDE;
 Fri, 20 Sep 2019 08:27:23 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [RFC PATCH V2 6/6] docs: Sample driver to demonstrate how to
 implement virtio-mdev framework
Date: Fri, 20 Sep 2019 16:20:50 +0800
Message-Id: <20190920082050.19352-7-jasowang@redhat.com>
In-Reply-To: <20190920082050.19352-1-jasowang@redhat.com>
References: <20190920082050.19352-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.40]); Fri, 20 Sep 2019 08:28:18 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: sebott@linux.ibm.com, airlied@linux.ie, Jason Wang <jasowang@redhat.com>,
 heiko.carstens@de.ibm.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, zhihong.wang@intel.com,
 akrowiak@linux.ibm.com, pmorel@linux.ibm.com, netdev@vger.kernel.org,
 cohuck@redhat.com, oberpar@linux.ibm.com, maxime.coquelin@redhat.com,
 lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBzYW1wbGUgZHJpdmVyIGNyZWF0ZXMgbWRldiBkZXZpY2UgdGhhdCBzaW11bGF0ZSB2aXJ0
aW8gbmV0IGRldmljZQpvdmVyIHZpcnRpbyBtZGV2IHRyYW5zcG9ydC4gVGhlIGRldmljZSBpcyBp
bXBsZW1lbnRlZCB0aHJvdWdoIHZyaW5naAphbmQgd29ya3F1ZXVlLiBBIGRldmljZSBzcGVjaWZp
YyBkbWEgb3BzIGlzIHRvIG1ha2Ugc3VyZSBIVkEgaXMgdXNlZApkaXJlY3RseSBhcyB0aGUgSU9W
QS4gVGhpcyBzaG91bGQgYmUgc3VmZmljaWVudCBmb3Iga2VybmVsIHZpcnRpbwpkcml2ZXIgdG8g
d29yay4KCk5vIG1vcmUgd29yayBmb3IgdXNlcnNwYWNlIFZGSU8gYmFzZWQgdmhvc3QtbWRldiBk
cml2ZXIgdG8gd29yay4gRS5nCnRocm91Z2ggbm90aWZpZXIsIGl0IHdpbGwgYmUgYWRkcmVzc2Vk
IGluIHRoZSBmdXR1cmUuCgpTaWduZWQtb2ZmLWJ5OiBKYXNvbiBXYW5nIDxqYXNvd2FuZ0ByZWRo
YXQuY29tPgotLS0KIHNhbXBsZXMvS2NvbmZpZyAgICAgICAgICAgIHwgICA3ICsKIHNhbXBsZXMv
dmZpby1tZGV2L01ha2VmaWxlIHwgICAxICsKIHNhbXBsZXMvdmZpby1tZGV2L212bmV0LmMgIHwg
Njg4ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIDMgZmlsZXMgY2hhbmdl
ZCwgNjk2IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzYW1wbGVzL3ZmaW8tbWRl
di9tdm5ldC5jCgpkaWZmIC0tZ2l0IGEvc2FtcGxlcy9LY29uZmlnIGIvc2FtcGxlcy9LY29uZmln
CmluZGV4IGM4ZGFjYjRkZGE4MC4uYTFhMWNhMmMwMGI3IDEwMDY0NAotLS0gYS9zYW1wbGVzL0tj
b25maWcKKysrIGIvc2FtcGxlcy9LY29uZmlnCkBAIC0xMzEsNiArMTMxLDEzIEBAIGNvbmZpZyBT
QU1QTEVfVkZJT19NREVWX01EUFkKIAkgIG1lZGlhdGVkIGRldmljZS4gIEl0IGlzIGEgc2ltcGxl
IGZyYW1lYnVmZmVyIGFuZCBzdXBwb3J0cwogCSAgdGhlIHJlZ2lvbiBkaXNwbGF5IGludGVyZmFj
ZSAoVkZJT19HRlhfUExBTkVfVFlQRV9SRUdJT04pLgogCitjb25maWcgU0FNUExFX1ZJUlRJT19N
REVWX05FVAorICAgICAgICB0cmlzdGF0ZSAiQnVpbGQgdmlydGlvIG1kZXYgbmV0IGV4YW1wbGUg
bWVkaWF0ZWQgZGV2aWNlIHNhbXBsZSBjb2RlIC0tIGxvYWRhYmxlIG1vZHVsZXMgb25seSIKKwlk
ZXBlbmRzIG9uIFZJUlRJT19NREVWX0RFVklDRSAmJiBWSE9TVF9SSU5HICYmIG0KKwloZWxwCisJ
ICBCdWlsZCBhIG5ldHdvcmtpbmcgc2FtcGxlIGRldmljZSBmb3IgdXNlIGFzIGEgdmlydGlvCisJ
ICBtZWRpYXRlZCBkZXZpY2UuCisKIGNvbmZpZyBTQU1QTEVfVkZJT19NREVWX01EUFlfRkIKIAl0
cmlzdGF0ZSAiQnVpbGQgVkZJTyBtZHB5IGV4YW1wbGUgZ3Vlc3QgZmJkZXYgZHJpdmVyIC0tIGxv
YWRhYmxlIG1vZHVsZSBvbmx5IgogCWRlcGVuZHMgb24gRkIgJiYgbQpkaWZmIC0tZ2l0IGEvc2Ft
cGxlcy92ZmlvLW1kZXYvTWFrZWZpbGUgYi9zYW1wbGVzL3ZmaW8tbWRldi9NYWtlZmlsZQppbmRl
eCAxMGQxNzljNGZkZWIuLmYzNGFmOTBlZDBhMCAxMDA2NDQKLS0tIGEvc2FtcGxlcy92ZmlvLW1k
ZXYvTWFrZWZpbGUKKysrIGIvc2FtcGxlcy92ZmlvLW1kZXYvTWFrZWZpbGUKQEAgLTMsMyArMyw0
IEBAIG9iai0kKENPTkZJR19TQU1QTEVfVkZJT19NREVWX01UVFkpICs9IG10dHkubwogb2JqLSQo
Q09ORklHX1NBTVBMRV9WRklPX01ERVZfTURQWSkgKz0gbWRweS5vCiBvYmotJChDT05GSUdfU0FN
UExFX1ZGSU9fTURFVl9NRFBZX0ZCKSArPSBtZHB5LWZiLm8KIG9iai0kKENPTkZJR19TQU1QTEVf
VkZJT19NREVWX01CT0NIUykgKz0gbWJvY2hzLm8KK29iai0kKENPTkZJR19TQU1QTEVfVklSVElP
X01ERVZfTkVUKSArPSBtdm5ldC5vCmRpZmYgLS1naXQgYS9zYW1wbGVzL3ZmaW8tbWRldi9tdm5l
dC5jIGIvc2FtcGxlcy92ZmlvLW1kZXYvbXZuZXQuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLmUxMDM2ZTc1M2M3NgotLS0gL2Rldi9udWxsCisrKyBiL3NhbXBsZXMv
dmZpby1tZGV2L212bmV0LmMKQEAgLTAsMCArMSw2ODggQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wLW9ubHkKKy8qCisgKiBNZWRpYXRlZCB2aXJ0dWFsIHZpcnRpby1uZXQg
ZGV2aWNlIGRyaXZlci4KKyAqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTksIFJlZCBIYXQgSW5jLiBB
bGwgcmlnaHRzIHJlc2VydmVkLgorICogICAgIEF1dGhvcjogSmFzb24gV2FuZyA8amFzb3dhbmdA
cmVkaGF0LmNvbT4KKyAqCisgKiBTYW1wbGUgZHJpdmVyIHRoYXQgY3JlYXRlcyBtZGV2IGRldmlj
ZSB0aGF0IHNpbXVsYXRlcyBldGhlcm5ldCBsb29wYmFjaworICogZGV2aWNlLgorICoKKyAqIFVz
YWdlOgorICoKKyAqICMgbW9kcHJvYmUgdmlydGlvX21kZXYKKyAqICMgbW9kcHJvYmUgbXZuZXQK
KyAqICMgY2QgL3N5cy9kZXZpY2VzL3ZpcnR1YWwvbXZuZXQvbXZuZXQvbWRldl9zdXBwb3J0ZWRf
dHlwZXMvbXZuZXQtCisgKiAjIGVjaG8gIjgzYjhmNGYyLTUwOWYtMzgyZi0zYzFlLWU2YmZlMGZh
MTAwMSIgPiAuL2NyZWF0ZQorICogIyBjZCBkZXZpY2VzLzgzYjhmNGYyLTUwOWYtMzgyZi0zYzFl
LWU2YmZlMGZhMTAwMQorICogIyBscyAtZCB2aXJ0aW8wCisgKiB2aXJ0aW8wCisgKi8KKworI2lu
Y2x1ZGUgPGxpbnV4L2luaXQuaD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KKyNpbmNsdWRl
IDxsaW51eC9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KKyNpbmNsdWRlIDxs
aW51eC9mcy5oPgorI2luY2x1ZGUgPGxpbnV4L3BvbGwuaD4KKyNpbmNsdWRlIDxsaW51eC9zbGFi
Lmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQuaD4KKyNpbmNsdWRlIDxsaW51eC93YWl0Lmg+Cisj
aW5jbHVkZSA8bGludXgvdXVpZC5oPgorI2luY2x1ZGUgPGxpbnV4L2lvbW11Lmg+CisjaW5jbHVk
ZSA8bGludXgvc3lzZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9maWxlLmg+CisjaW5jbHVkZSA8bGlu
dXgvZXRoZXJkZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+CisjaW5jbHVkZSA8bGlu
dXgvdnJpbmdoLmg+CisjaW5jbHVkZSA8bGludXgvdmlydGlvX21kZXYuaD4KKyNpbmNsdWRlIDx1
YXBpL2xpbnV4L3ZpcnRpb19jb25maWcuaD4KKyNpbmNsdWRlIDx1YXBpL2xpbnV4L3ZpcnRpb19u
ZXQuaD4KKworI2RlZmluZSBWRVJTSU9OX1NUUklORyAgIjAuMSIKKyNkZWZpbmUgRFJJVkVSX0FV
VEhPUiAgICJSZWQgSGF0IENvcnBvcmF0aW9uIgorCisjZGVmaW5lIE1WTkVUX0NMQVNTX05BTUUg
Im12bmV0IgorI2RlZmluZSBNVk5FVF9OQU1FICAgICAgICJtdm5ldCIKKworLyoKKyAqIEdsb2Jh
bCBTdHJ1Y3R1cmVzCisgKi8KKworc3RhdGljIHN0cnVjdCBtdm5ldF9kZXYgeworCXN0cnVjdCBj
bGFzcwkqdmRfY2xhc3M7CisJc3RydWN0IGlkcgl2ZF9pZHI7CisJc3RydWN0IGRldmljZQlkZXY7
Cit9IG12bmV0X2RldjsKKworc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSB7CisJc3RydWN0IHZyaW5n
aCB2cmluZzsKKwlzdHJ1Y3QgdnJpbmdoX2tpb3YgaW92OworCXVuc2lnbmVkIHNob3J0IGhlYWQ7
CisJYm9vbCByZWFkeTsKKwl1NjQgZGVzY19hZGRyOworCXU2NCBkZXZpY2VfYWRkcjsKKwl1NjQg
ZHJpdmVyX2FkZHI7CisJdTMyIG51bTsKKwl2b2lkICpwcml2YXRlOworCWlycXJldHVybl90ICgq
Y2IpKHZvaWQgKik7Cit9OworCisjZGVmaW5lIE1WTkVUX1FVRVVFX0FMSUdOIFBBR0VfU0laRQor
I2RlZmluZSBNVk5FVF9RVUVVRV9NQVggMjU2CisjZGVmaW5lIE1WTkVUX0RFVklDRV9JRCAweDEK
KyNkZWZpbmUgTVZORVRfVkVORE9SX0lEIDAKKwordTY0IG12bmV0X2ZlYXR1cmVzID0gKDFVTEwg
PDwgVklSVElPX0ZfQU5ZX0xBWU9VVCkgfAorCSAgICAgICAgICAgICAoMVVMTCA8PCBWSVJUSU9f
Rl9WRVJTSU9OXzEpIHwKKwkJICAgICAoMVVMTCA8PCBWSVJUSU9fRl9JT01NVV9QTEFURk9STSkg
OworCisvKiBTdGF0ZSBvZiBlYWNoIG1kZXYgZGV2aWNlICovCitzdHJ1Y3QgbXZuZXRfc3RhdGUg
eworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgdnFzWzJdOworCXN0cnVjdCB3b3JrX3N0cnVjdCB3
b3JrOworCXNwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXY7CisJc3Ry
dWN0IHZpcnRpb19uZXRfY29uZmlnIGNvbmZpZzsKKwl2b2lkICpidWZmZXI7CisJdTMyIHN0YXR1
czsKKwl1MzIgZ2VuZXJhdGlvbjsKKwl1NjQgZmVhdHVyZXM7CisJc3RydWN0IGxpc3RfaGVhZCBu
ZXh0OworfTsKKworc3RhdGljIHN0cnVjdCBtdXRleCBtZGV2X2xpc3RfbG9jazsKK3N0YXRpYyBz
dHJ1Y3QgbGlzdF9oZWFkIG1kZXZfZGV2aWNlc19saXN0OworCitzdGF0aWMgdm9pZCBtdm5ldF9x
dWV1ZV9yZWFkeShzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0LCB1bnNpZ25lZCBpZHgpCit7CisJ
c3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEgPSAmbXZuZXQtPnZxc1tpZHhdOworCWludCByZXQ7
CisKKwlyZXQgPSB2cmluZ2hfaW5pdF9rZXJuKCZ2cS0+dnJpbmcsIG12bmV0X2ZlYXR1cmVzLCBN
Vk5FVF9RVUVVRV9NQVgsCisJCQkgICAgICAgZmFsc2UsIChzdHJ1Y3QgdnJpbmdfZGVzYyAqKXZx
LT5kZXNjX2FkZHIsCisJCQkgICAgICAgKHN0cnVjdCB2cmluZ19hdmFpbCAqKXZxLT5kcml2ZXJf
YWRkciwKKwkJCSAgICAgICAoc3RydWN0IHZyaW5nX3VzZWQgKil2cS0+ZGV2aWNlX2FkZHIpOwor
fQorCitzdGF0aWMgdm9pZCBtdm5ldF92cV9yZXNldChzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2
cSkKK3sKKwl2cS0+cmVhZHkgPSAwOworCXZxLT5kZXNjX2FkZHIgPSAwOworCXZxLT5kcml2ZXJf
YWRkciA9IDA7CisJdnEtPmRldmljZV9hZGRyID0gMDsKKwl2cS0+Y2IgPSBOVUxMOworCXZxLT5w
cml2YXRlID0gTlVMTDsKKwl2cmluZ2hfaW5pdF9rZXJuKCZ2cS0+dnJpbmcsIG12bmV0X2ZlYXR1
cmVzLCBNVk5FVF9RVUVVRV9NQVgsCisJCQlmYWxzZSwgMCwgMCwgMCk7Cit9CisKK3N0YXRpYyB2
b2lkIG12bmV0X3Jlc2V0KHN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQpCit7CisJaW50IGk7CisK
Kwlmb3IgKGkgPSAwOyBpIDwgMjsgaSsrKQorCQltdm5ldF92cV9yZXNldCgmbXZuZXQtPnZxc1tp
XSk7CisKKwltdm5ldC0+ZmVhdHVyZXMgPSAwOworCW12bmV0LT5zdGF0dXMgPSAwOworCSsrbXZu
ZXQtPmdlbmVyYXRpb247Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3dvcmsoc3RydWN0IHdvcmtf
c3RydWN0ICp3b3JrKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBjb250YWluZXJf
b2Yod29yaywgc3RydWN0CisJCQkJCQkgbXZuZXRfc3RhdGUsIHdvcmspOworCXN0cnVjdCBtdm5l
dF92aXJ0cXVldWUgKnR4cSA9ICZtdm5ldC0+dnFzWzFdOworCXN0cnVjdCBtdm5ldF92aXJ0cXVl
dWUgKnJ4cSA9ICZtdm5ldC0+dnFzWzBdOworCXNpemVfdCByZWFkLCB3cml0ZSwgdG90YWxfd3Jp
dGU7CisJaW50IGVycjsKKwlpbnQgcGt0cyA9IDA7CisKKwlzcGluX2xvY2soJm12bmV0LT5sb2Nr
KTsKKworCWlmICghdHhxLT5yZWFkeSB8fCAhcnhxLT5yZWFkeSkKKwkJZ290byBvdXQ7CisKKwl3
aGlsZSAodHJ1ZSkgeworCQl0b3RhbF93cml0ZSA9IDA7CisJCWVyciA9IHZyaW5naF9nZXRkZXNj
X2tlcm4oJnR4cS0+dnJpbmcsICZ0eHEtPmlvdiwgTlVMTCwKKwkJCQkJICAmdHhxLT5oZWFkLCBH
RlBfQVRPTUlDKTsKKwkJaWYgKGVyciA8PSAwKQorCQkJYnJlYWs7CisKKwkJZXJyID0gdnJpbmdo
X2dldGRlc2Nfa2VybigmcnhxLT52cmluZywgTlVMTCwgJnJ4cS0+aW92LAorCQkJCQkgICZyeHEt
PmhlYWQsIEdGUF9BVE9NSUMpOworCQlpZiAoZXJyIDw9IDApIHsKKwkJCXZyaW5naF9jb21wbGV0
ZV9rZXJuKCZ0eHEtPnZyaW5nLCB0eHEtPmhlYWQsIDApOworCQkJYnJlYWs7CisJCX0KKworCQl3
aGlsZSAodHJ1ZSkgeworCQkJcmVhZCA9IHZyaW5naF9pb3ZfcHVsbF9rZXJuKCZ0eHEtPmlvdiwg
bXZuZXQtPmJ1ZmZlciwKKwkJCQkJCSAgICBQQUdFX1NJWkUpOworCQkJaWYgKHJlYWQgPD0gMCkK
KwkJCQlicmVhazsKKworCQkJd3JpdGUgPSB2cmluZ2hfaW92X3B1c2hfa2VybigmcnhxLT5pb3Ys
IG12bmV0LT5idWZmZXIsCisJCQkJCQkgICAgIHJlYWQpOworCQkJaWYgKHdyaXRlIDw9IDApCisJ
CQkJYnJlYWs7CisKKwkJCXRvdGFsX3dyaXRlICs9IHdyaXRlOworCQl9CisKKwkJLyogTWFrZSBz
dXJlIGRhdGEgaXMgd3JvdGUgYmVmb3JlIGFkdmFuY2luZyBpbmRleCAqLworCQlzbXBfd21iKCk7
CisKKwkJdnJpbmdoX2NvbXBsZXRlX2tlcm4oJnR4cS0+dnJpbmcsIHR4cS0+aGVhZCwgMCk7CisJ
CXZyaW5naF9jb21wbGV0ZV9rZXJuKCZyeHEtPnZyaW5nLCByeHEtPmhlYWQsIHRvdGFsX3dyaXRl
KTsKKworCQkvKiBNYWtlIHN1cmUgdXNlZCBpcyB2aXNpYmxlIGJlZm9yZSByYXNpbmcgdGhlCisJ
CSAgIGludGVycnVwdCAqLworCQlzbXBfd21iKCk7CisKKwkJbG9jYWxfYmhfZGlzYWJsZSgpOwor
CQlpZiAodHhxLT5jYikKKwkJCXR4cS0+Y2IodHhxLT5wcml2YXRlKTsKKwkJaWYgKHJ4cS0+Y2Ip
CisJCQlyeHEtPmNiKHJ4cS0+cHJpdmF0ZSk7CisJCWxvY2FsX2JoX2VuYWJsZSgpOworCisJCWlm
ICgrK3BrdHMgPiA0KSB7CisJCQlzY2hlZHVsZV93b3JrKCZtdm5ldC0+d29yayk7CisJCQlnb3Rv
IG91dDsKKwkJfQorCX0KKworb3V0OgorCXNwaW5fdW5sb2NrKCZtdm5ldC0+bG9jayk7Cit9CisK
K3N0YXRpYyBkbWFfYWRkcl90IG12bmV0X21hcF9wYWdlKHN0cnVjdCBkZXZpY2UgKmRldiwgc3Ry
dWN0IHBhZ2UgKnBhZ2UsCisJCQkJIHVuc2lnbmVkIGxvbmcgb2Zmc2V0LCBzaXplX3Qgc2l6ZSwK
KwkJCQkgZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGlyLAorCQkJCSB1bnNpZ25lZCBsb25nIGF0
dHJzKQoreworCS8qIFZyaW5naCBjYW4gb25seSB1c2UgSFZBICovCisJcmV0dXJuIChkbWFfYWRk
cl90KShwYWdlX2FkZHJlc3MocGFnZSkgKyBvZmZzZXQpOworfQorCitzdGF0aWMgdm9pZCBtdm5l
dF91bm1hcF9wYWdlKHN0cnVjdCBkZXZpY2UgKmRldiwgZG1hX2FkZHJfdCBkbWFfYWRkciwKKwkJ
CSAgICAgc2l6ZV90IHNpemUsIGVudW0gZG1hX2RhdGFfZGlyZWN0aW9uIGRpciwKKwkJCSAgICAg
dW5zaWduZWQgbG9uZyBhdHRycykKK3sKKwlyZXR1cm4gOworfQorCitzdGF0aWMgdm9pZCAqbXZu
ZXRfYWxsb2NfY29oZXJlbnQoc3RydWN0IGRldmljZSAqZGV2LCBzaXplX3Qgc2l6ZSwKKwkJCQkg
IGRtYV9hZGRyX3QgKmRtYV9hZGRyLCBnZnBfdCBmbGFnLAorCQkJCSAgdW5zaWduZWQgbG9uZyBh
dHRycykKK3sKKwl2b2lkICphZGRyID0ga21hbGxvYyhzaXplLCBmbGFnKTsKKworCWlmIChhZGRy
ID09IE5VTEwpCisJCSpkbWFfYWRkciA9IERNQV9NQVBQSU5HX0VSUk9SOworCWVsc2UKKwkJKmRt
YV9hZGRyID0gKGRtYV9hZGRyX3QpIGFkZHI7CisKKwlyZXR1cm4gYWRkcjsKK30KKworc3RhdGlj
IHZvaWQgbXZuZXRfZnJlZV9jb2hlcmVudChzdHJ1Y3QgZGV2aWNlICpkZXYsIHNpemVfdCBzaXpl
LAorCQkJCXZvaWQgKnZhZGRyLCBkbWFfYWRkcl90IGRtYV9hZGRyLAorCQkJCXVuc2lnbmVkIGxv
bmcgYXR0cnMpCit7CisJa2ZyZWUoKHZvaWQgKilkbWFfYWRkcik7Cit9CisKK3N0YXRpYyBjb25z
dCBzdHJ1Y3QgZG1hX21hcF9vcHMgbXZuZXRfZG1hX29wcyA9IHsKKwkubWFwX3BhZ2UgPSBtdm5l
dF9tYXBfcGFnZSwKKwkudW5tYXBfcGFnZSA9IG12bmV0X3VubWFwX3BhZ2UsCisJLmFsbG9jID0g
bXZuZXRfYWxsb2NfY29oZXJlbnQsCisJLmZyZWUgPSBtdm5ldF9mcmVlX2NvaGVyZW50LAorfTsK
Kworc3RhdGljIGludCBtdm5ldF9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBt
ZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0OworCXN0cnVj
dCB2aXJ0aW9fbmV0X2NvbmZpZyAqY29uZmlnOworCXN0cnVjdCBkZXZpY2UgKmRldiA9IG1kZXZf
ZGV2KG1kZXYpOworCisJaWYgKCFtZGV2KQorCQlyZXR1cm4gLUVJTlZBTDsKKworCW12bmV0ID0g
a3phbGxvYyhzaXplb2Yoc3RydWN0IG12bmV0X3N0YXRlKSwgR0ZQX0tFUk5FTCk7CisJaWYgKG12
bmV0ID09IE5VTEwpCisJCXJldHVybiAtRU5PTUVNOworCisJbXZuZXQtPmJ1ZmZlciA9IGttYWxs
b2MoUEFHRV9TSVpFLCBHRlBfS0VSTkVMKTsKKwlpZiAoIW12bmV0LT5idWZmZXIpIHsKKwkJa2Zy
ZWUobXZuZXQpOworCQlyZXR1cm4gLUVOT01FTTsKKwl9CisKKwljb25maWcgPSAmbXZuZXQtPmNv
bmZpZzsKKwljb25maWctPm10dSA9IDE1MDA7CisJY29uZmlnLT5zdGF0dXMgPSBWSVJUSU9fTkVU
X1NfTElOS19VUDsKKwlldGhfcmFuZG9tX2FkZHIoY29uZmlnLT5tYWMpOworCisJSU5JVF9XT1JL
KCZtdm5ldC0+d29yaywgbXZuZXRfd29yayk7CisKKwlzcGluX2xvY2tfaW5pdCgmbXZuZXQtPmxv
Y2spOworCW12bmV0LT5tZGV2ID0gbWRldjsKKwltZGV2X3NldF9kcnZkYXRhKG1kZXYsIG12bmV0
KTsKKworCW11dGV4X2xvY2soJm1kZXZfbGlzdF9sb2NrKTsKKwlsaXN0X2FkZCgmbXZuZXQtPm5l
eHQsICZtZGV2X2RldmljZXNfbGlzdCk7CisJbXV0ZXhfdW5sb2NrKCZtZGV2X2xpc3RfbG9jayk7
CisKKwlkZXYtPmNvaGVyZW50X2RtYV9tYXNrID0gRE1BX0JJVF9NQVNLKDY0KTsKKwlzZXRfZG1h
X29wcyhkZXYsICZtdm5ldF9kbWFfb3BzKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50
IG12bmV0X3JlbW92ZShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0
X3N0YXRlICptZHMsICp0bXBfbWRzOworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2
X2dldF9kcnZkYXRhKG1kZXYpOworCWludCByZXQgPSAtRUlOVkFMOworCisJbXV0ZXhfbG9jaygm
bWRldl9saXN0X2xvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShtZHMsIHRtcF9tZHMs
ICZtZGV2X2RldmljZXNfbGlzdCwgbmV4dCkgeworCQlpZiAobXZuZXQgPT0gbWRzKSB7CisJCQls
aXN0X2RlbCgmbXZuZXQtPm5leHQpOworCQkJbWRldl9zZXRfZHJ2ZGF0YShtZGV2LCBOVUxMKTsK
KwkJCWtmcmVlKG12bmV0LT5idWZmZXIpOworCQkJa2ZyZWUobXZuZXQpOworCQkJcmV0ID0gMDsK
KwkJCWJyZWFrOworCQl9CisJfQorCW11dGV4X3VubG9jaygmbWRldl9saXN0X2xvY2spOworCisJ
cmV0dXJuIHJldDsKK30KKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9tdm5ldF9kZXZfc2hvdyhz
dHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAorCQkgICAg
IGNoYXIgKmJ1ZikKK3sKKwlpZiAobWRldl9mcm9tX2RldihkZXYpKQorCQlyZXR1cm4gc3ByaW50
ZihidWYsICJUaGlzIGlzIE1ERVYgJXNcbiIsIGRldl9uYW1lKGRldikpOworCisJcmV0dXJuIHNw
cmludGYoYnVmLCAiXG4iKTsKK30KKworc3RhdGljIERFVklDRV9BVFRSX1JPKHNhbXBsZV9tdm5l
dF9kZXYpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbXZuZXRfZGV2X2F0dHJzW10gPSB7
CisJJmRldl9hdHRyX3NhbXBsZV9tdm5ldF9kZXYuYXR0ciwKKwlOVUxMLAorfTsKKworc3RhdGlj
IGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgbXZuZXRfZGV2X2dyb3VwID0geworCS5uYW1l
ICA9ICJtdm5ldF9kZXYiLAorCS5hdHRycyA9IG12bmV0X2Rldl9hdHRycywKK307CisKK3N0YXRp
YyBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptdm5ldF9kZXZfZ3JvdXBzW10gPSB7CisJ
Jm12bmV0X2Rldl9ncm91cCwKKwlOVUxMLAorfTsKKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9t
ZGV2X2Rldl9zaG93KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUg
KmF0dHIsCisJCSAgICAgY2hhciAqYnVmKQoreworCWlmIChtZGV2X2Zyb21fZGV2KGRldikpCisJ
CXJldHVybiBzcHJpbnRmKGJ1ZiwgIlRoaXMgaXMgTURFViAlc1xuIiwgZGV2X25hbWUoZGV2KSk7
CisKKwlyZXR1cm4gc3ByaW50ZihidWYsICJcbiIpOworfQorCitzdGF0aWMgREVWSUNFX0FUVFJf
Uk8oc2FtcGxlX21kZXZfZGV2KTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKm1kZXZfZGV2
X2F0dHJzW10gPSB7CisJJmRldl9hdHRyX3NhbXBsZV9tZGV2X2Rldi5hdHRyLAorCU5VTEwsCit9
OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X2Rldl9ncm91cCA9
IHsKKwkubmFtZSAgPSAidmVuZG9yIiwKKwkuYXR0cnMgPSBtZGV2X2Rldl9hdHRycywKK307CisK
K3N0YXRpYyBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X2Rldl9ncm91cHNbXSA9
IHsKKwkmbWRldl9kZXZfZ3JvdXAsCisJTlVMTCwKK307CisKKyNkZWZpbmUgTVZORVRfU1RSSU5H
X0xFTiAxNgorCitzdGF0aWMgc3NpemVfdAorbmFtZV9zaG93KHN0cnVjdCBrb2JqZWN0ICprb2Jq
LCBzdHJ1Y3QgZGV2aWNlICpkZXYsIGNoYXIgKmJ1ZikKK3sKKwljaGFyIG5hbWVbTVZORVRfU1RS
SU5HX0xFTl07CisJY29uc3QgY2hhciAqbmFtZV9zdHIgPSAidmlydGlvLW5ldCI7CisKKwlzbnBy
aW50ZihuYW1lLCBNVk5FVF9TVFJJTkdfTEVOLCAiJXMiLCBkZXZfZHJpdmVyX3N0cmluZyhkZXYp
KTsKKwlpZiAoIXN0cmNtcChrb2JqLT5uYW1lLCBuYW1lKSkKKwkJcmV0dXJuIHNwcmludGYoYnVm
LCAiJXNcbiIsIG5hbWVfc3RyKTsKKworCXJldHVybiAtRUlOVkFMOworfQorCitzdGF0aWMgTURF
Vl9UWVBFX0FUVFJfUk8obmFtZSk7CisKK3N0YXRpYyBzc2l6ZV90CithdmFpbGFibGVfaW5zdGFu
Y2VzX3Nob3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwgY2hhciAq
YnVmKQoreworCXJldHVybiBzcHJpbnRmKGJ1ZiwgIiVkXG4iLCBJTlRfTUFYKTsKK30KKworc3Rh
dGljIE1ERVZfVFlQRV9BVFRSX1JPKGF2YWlsYWJsZV9pbnN0YW5jZXMpOworCitzdGF0aWMgc3Np
emVfdCBkZXZpY2VfYXBpX3Nob3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2Ug
KmRldiwKKwkJCSAgICAgICBjaGFyICpidWYpCit7CisJcmV0dXJuIHNwcmludGYoYnVmLCAiJXNc
biIsIFZJUlRJT19NREVWX0RFVklDRV9BUElfU1RSSU5HKTsKK30KKworc3RhdGljIE1ERVZfVFlQ
RV9BVFRSX1JPKGRldmljZV9hcGkpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbWRldl90
eXBlc19hdHRyc1tdID0geworCSZtZGV2X3R5cGVfYXR0cl9uYW1lLmF0dHIsCisJJm1kZXZfdHlw
ZV9hdHRyX2RldmljZV9hcGkuYXR0ciwKKwkmbWRldl90eXBlX2F0dHJfYXZhaWxhYmxlX2luc3Rh
bmNlcy5hdHRyLAorCU5VTEwsCit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBt
ZGV2X3R5cGVfZ3JvdXAgPSB7CisJLm5hbWUgID0gIiIsCisJLmF0dHJzID0gbWRldl90eXBlc19h
dHRycywKK307CisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X3R5cGVfZ3Jv
dXBzW10gPSB7CisJJm1kZXZfdHlwZV9ncm91cCwKKwlOVUxMLAorfTsKKworc3RhdGljIGludCBt
dm5ldF9zZXRfdnFfYWRkcmVzcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJ
CQkJdTY0IGRlc2NfYXJlYSwgdTY0IGRyaXZlcl9hcmVhLCB1NjQgZGV2aWNlX2FyZWEpCit7CisJ
c3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7CisJc3Ry
dWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEgPSAmbXZuZXQtPnZxc1tpZHhdOworCisJdnEtPmRlc2Nf
YWRkciA9IGRlc2NfYXJlYTsKKwl2cS0+ZHJpdmVyX2FkZHIgPSBkcml2ZXJfYXJlYTsKKwl2cS0+
ZGV2aWNlX2FkZHIgPSBkZXZpY2VfYXJlYTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9p
ZCBtdm5ldF9zZXRfdnFfbnVtKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgdTMy
IG51bSkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YSht
ZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisK
Kwl2cS0+bnVtID0gbnVtOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9raWNrX3ZxKHN0cnVjdCBt
ZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0
ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9
ICZtdm5ldC0+dnFzW2lkeF07CisKKwlpZiAodnEtPnJlYWR5KQorCQlzY2hlZHVsZV93b3JrKCZt
dm5ldC0+d29yayk7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3NldF92cV9jYihzdHJ1Y3QgbWRl
dl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJCQkgICAgc3RydWN0IHZpcnRpb19tZGV2X2NhbGxi
YWNrICpjYikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0
YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07
CisKKwl2cS0+Y2IgPSBjYi0+Y2FsbGJhY2s7CisJdnEtPnByaXZhdGUgPSBjYi0+cHJpdmF0ZTsK
K30KKworc3RhdGljIHZvaWQgbXZuZXRfc2V0X3ZxX3JlYWR5KHN0cnVjdCBtZGV2X2RldmljZSAq
bWRldiwgdTE2IGlkeCwgYm9vbCByZWFkeSkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0
ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9
ICZtdm5ldC0+dnFzW2lkeF07CisKKwlzcGluX2xvY2soJm12bmV0LT5sb2NrKTsKKwl2cS0+cmVh
ZHkgPSByZWFkeTsKKwlpZiAodnEtPnJlYWR5KQorCQltdm5ldF9xdWV1ZV9yZWFkeShtdm5ldCwg
aWR4KTsKKwlzcGluX3VubG9jaygmbXZuZXQtPmxvY2spOworfQorCitzdGF0aWMgYm9vbCBtdm5l
dF9nZXRfdnFfcmVhZHkoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4KQoreworCXN0
cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVj
dCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsKKworCXJldHVybiB2cS0+
cmVhZHk7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfc2V0X3ZxX3N0YXRlKHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldiwgdTE2IGlkeCwgdTY0IHN0YXRlKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAq
bXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUg
KnZxID0gJm12bmV0LT52cXNbaWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2cmggPSAmdnEtPnZyaW5n
OworCisJc3Bpbl9sb2NrKCZtdm5ldC0+bG9jayk7CisJdnJoLT5sYXN0X2F2YWlsX2lkeCA9IHN0
YXRlOworCXNwaW5fdW5sb2NrKCZtdm5ldC0+bG9jayk7CisKKwlyZXR1cm4gMDsKK30KKworc3Rh
dGljIHU2NCBtdm5ldF9nZXRfdnFfc3RhdGUoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYg
aWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1k
ZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsKKwlz
dHJ1Y3QgdnJpbmdoICp2cmggPSAmdnEtPnZyaW5nOworCisJcmV0dXJuIHZyaC0+bGFzdF9hdmFp
bF9pZHg7Cit9CisKK3N0YXRpYyB1MTYgbXZuZXRfZ2V0X3ZxX2FsaWduKHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldikKK3sKKwlyZXR1cm4gTVZORVRfUVVFVUVfQUxJR047Cit9CisKK3N0YXRpYyB1
NjQgbXZuZXRfZ2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1
cm4gbXZuZXRfZmVhdHVyZXM7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfc2V0X2ZlYXR1cmVzKHN0
cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTY0IGZlYXR1cmVzKQoreworCXN0cnVjdCBtdm5ldF9z
dGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCisJLyogRE1BIG1hcHBpbmcg
bXVzdCBiZSBkb25lIGJ5IGRyaXZlciAqLworCWlmICghKGZlYXR1cmVzICYgKDFVTEwgPDwgVklS
VElPX0ZfSU9NTVVfUExBVEZPUk0pKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwltdm5ldC0+ZmVh
dHVyZXMgPSBmZWF0dXJlcyAmIG12bmV0X2ZlYXR1cmVzOworCisJcmV0dXJuIDA7Cit9CisKK3N0
YXRpYyB2b2lkIG12bmV0X3NldF9jb25maWdfY2Ioc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LAor
CQkJCXN0cnVjdCB2aXJ0aW9fbWRldl9jYWxsYmFjayAqY2IpCit7CisJLyogV2UgZG9uJ3Qgc3Vw
cG9ydCBjb25maWcgaW50ZXJydXB0ICovCit9CisKK3N0YXRpYyB1MTYgbXZuZXRfZ2V0X3F1ZXVl
X21heChzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJcmV0dXJuIE1WTkVUX1FVRVVFX01B
WDsKK30KKworc3RhdGljIHUzMiBtdm5ldF9nZXRfZGV2aWNlX2lkKHN0cnVjdCBtZGV2X2Rldmlj
ZSAqbWRldikKK3sKKwlyZXR1cm4gTVZORVRfREVWSUNFX0lEOworfQorCitzdGF0aWMgdTMyIG12
bmV0X2dldF92ZW5kb3JfaWQoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQoreworCXJldHVybiBN
Vk5FVF9WRU5ET1JfSUQ7Cit9CisKK3N0YXRpYyB1OCBtdm5ldF9nZXRfc3RhdHVzKHN0cnVjdCBt
ZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9n
ZXRfZHJ2ZGF0YShtZGV2KTsKKworCXJldHVybiBtdm5ldC0+c3RhdHVzOworfQorCitzdGF0aWMg
dm9pZCBtdm5ldF9zZXRfc3RhdHVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTggc3RhdHVz
KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYp
OworCisJbXZuZXQtPnN0YXR1cyA9IHN0YXR1czsKKworCWlmIChzdGF0dXMgPT0gMCkgeworCQlz
cGluX2xvY2soJm12bmV0LT5sb2NrKTsKKwkJbXZuZXRfcmVzZXQobXZuZXQpOworCQlzcGluX3Vu
bG9jaygmbXZuZXQtPmxvY2spOworCX0KK30KKworc3RhdGljIHZvaWQgbXZuZXRfZ2V0X2NvbmZp
ZyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIG9mZnNldCwKKwkJCSAgICAgdm9p
ZCAqYnVmLCB1bnNpZ25lZCBsZW4pCit7CisJc3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1k
ZXZfZ2V0X2RydmRhdGEobWRldik7CisKKwlpZiAob2Zmc2V0ICsgbGVuIDwgc2l6ZW9mKHN0cnVj
dCB2aXJ0aW9fbmV0X2NvbmZpZykpCisJCW1lbWNweShidWYsICZtdm5ldC0+Y29uZmlnICsgb2Zm
c2V0LCBsZW4pOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfY29uZmlnKHN0cnVjdCBtZGV2
X2RldmljZSAqbWRldiwgdW5zaWduZWQgb2Zmc2V0LAorCQkJICAgICBjb25zdCB2b2lkICpidWYs
IHVuc2lnbmVkIGxlbikKK3sKKwkvKiBObyB3cml0YWJsZSBjb25maWcgc3VwcG9ydHRlZCBieSBt
dm5ldCAqLworfQorCitzdGF0aWMgaW50IG12bmV0X2dldF92ZXJzaW9uKHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldikKK3sKKwlyZXR1cm4gMHgxOworfQorCitzdGF0aWMgdTMyIG12bmV0X2dldF9n
ZW5lcmF0aW9uKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3Rh
dGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKworCXJldHVybiBtdm5ldC0+Z2Vu
ZXJhdGlvbjsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCB2aXJ0aW9fbWRldl9wYXJlbnRfb3Bz
IHZpcnRpb19tZGV2X29wcyA9IHsKKwkuc2V0X3ZxX2FkZHJlc3MgICAgICAgICA9IG12bmV0X3Nl
dF92cV9hZGRyZXNzLAorCS5zZXRfdnFfbnVtICAgICAgICAgICAgID0gbXZuZXRfc2V0X3ZxX251
bSwKKwkua2lja192cSAgICAgICAgICAgICAgICA9IG12bmV0X2tpY2tfdnEsCisJLnNldF92cV9j
YiAgICAgICAgICAgICAgPSBtdm5ldF9zZXRfdnFfY2IsCisJLnNldF92cV9yZWFkeSAgICAgICAg
ICAgPSBtdm5ldF9zZXRfdnFfcmVhZHksCisJLmdldF92cV9yZWFkeSAgICAgICAgICAgPSBtdm5l
dF9nZXRfdnFfcmVhZHksCisJLnNldF92cV9zdGF0ZSAgICAgICAgICAgPSBtdm5ldF9zZXRfdnFf
c3RhdGUsCisJLmdldF92cV9zdGF0ZSAgICAgICAgICAgPSBtdm5ldF9nZXRfdnFfc3RhdGUsCisJ
LmdldF92cV9hbGlnbiAgICAgICAgICAgPSBtdm5ldF9nZXRfdnFfYWxpZ24sCisJLmdldF9mZWF0
dXJlcyAgICAgICAgICAgPSBtdm5ldF9nZXRfZmVhdHVyZXMsCisJLnNldF9mZWF0dXJlcyAgICAg
ICAgICAgPSBtdm5ldF9zZXRfZmVhdHVyZXMsCisJLnNldF9jb25maWdfY2IgICAgICAgICAgPSBt
dm5ldF9zZXRfY29uZmlnX2NiLAorCS5nZXRfcXVldWVfbWF4ICAgICAgICAgID0gbXZuZXRfZ2V0
X3F1ZXVlX21heCwKKwkuZ2V0X2RldmljZV9pZCAgICAgICAgICA9IG12bmV0X2dldF9kZXZpY2Vf
aWQsCisJLmdldF92ZW5kb3JfaWQgICAgICAgICAgPSBtdm5ldF9nZXRfdmVuZG9yX2lkLAorCS5n
ZXRfc3RhdHVzICAgICAgICAgICAgID0gbXZuZXRfZ2V0X3N0YXR1cywKKwkuc2V0X3N0YXR1cyAg
ICAgICAgICAgICA9IG12bmV0X3NldF9zdGF0dXMsCisJLmdldF9jb25maWcgICAgICAgICAgICAg
PSBtdm5ldF9nZXRfY29uZmlnLAorCS5zZXRfY29uZmlnICAgICAgICAgICAgID0gbXZuZXRfc2V0
X2NvbmZpZywKKwkuZ2V0X3ZlcnNpb24gICAgICAgICAgICA9IG12bmV0X2dldF92ZXJzaW9uLAor
CS5nZXRfZ2VuZXJhdGlvbiAgICAgICAgID0gbXZuZXRfZ2V0X2dlbmVyYXRpb24sCit9OworCitz
dGF0aWMgY29uc3Qgc3RydWN0IG1kZXZfcGFyZW50X29wcyBtZGV2X2ZvcHMgPSB7CisJLm93bmVy
ICAgICAgICAgICAgICAgICAgPSBUSElTX01PRFVMRSwKKwkuZGV2X2F0dHJfZ3JvdXBzICAgICAg
ICA9IG12bmV0X2Rldl9ncm91cHMsCisJLm1kZXZfYXR0cl9ncm91cHMgICAgICAgPSBtZGV2X2Rl
dl9ncm91cHMsCisJLnN1cHBvcnRlZF90eXBlX2dyb3VwcyAgPSBtZGV2X3R5cGVfZ3JvdXBzLAor
CS5jcmVhdGUgICAgICAgICAgICAgICAgID0gbXZuZXRfY3JlYXRlLAorCS5yZW1vdmUJCQk9IG12
bmV0X3JlbW92ZSwKKwkuZGV2aWNlX29wcwkJPSAmdmlydGlvX21kZXZfb3BzLAorfTsKKworc3Rh
dGljIHZvaWQgbXZuZXRfZGV2aWNlX3JlbGVhc2Uoc3RydWN0IGRldmljZSAqZGV2KQoreworCWRl
dl9kYmcoZGV2LCAibXZuZXQ6IHJlbGVhc2VkXG4iKTsKK30KKworc3RhdGljIGludCBfX2luaXQg
bXZuZXRfZGV2X2luaXQodm9pZCkKK3sKKwlpbnQgcmV0ID0gMDsKKworCXByX2luZm8oIm12bmV0
X2RldjogJXNcbiIsIF9fZnVuY19fKTsKKworCW1lbXNldCgmbXZuZXRfZGV2LCAwLCBzaXplb2Yo
bXZuZXRfZGV2KSk7CisKKwlpZHJfaW5pdCgmbXZuZXRfZGV2LnZkX2lkcik7CisKKwltdm5ldF9k
ZXYudmRfY2xhc3MgPSBjbGFzc19jcmVhdGUoVEhJU19NT0RVTEUsIE1WTkVUX0NMQVNTX05BTUUp
OworCisJaWYgKElTX0VSUihtdm5ldF9kZXYudmRfY2xhc3MpKSB7CisJCXByX2VycigiRXJyb3I6
IGZhaWxlZCB0byByZWdpc3RlciBtdm5ldF9kZXYgY2xhc3NcbiIpOworCQlyZXQgPSBQVFJfRVJS
KG12bmV0X2Rldi52ZF9jbGFzcyk7CisJCWdvdG8gZmFpbGVkMTsKKwl9CisKKwltdm5ldF9kZXYu
ZGV2LmNsYXNzID0gbXZuZXRfZGV2LnZkX2NsYXNzOworCW12bmV0X2Rldi5kZXYucmVsZWFzZSA9
IG12bmV0X2RldmljZV9yZWxlYXNlOworCWRldl9zZXRfbmFtZSgmbXZuZXRfZGV2LmRldiwgIiVz
IiwgTVZORVRfTkFNRSk7CisKKwlyZXQgPSBkZXZpY2VfcmVnaXN0ZXIoJm12bmV0X2Rldi5kZXYp
OworCWlmIChyZXQpCisJCWdvdG8gZmFpbGVkMjsKKworCXJldCA9IG1kZXZfcmVnaXN0ZXJfdmly
dGlvX2RldmljZSgmbXZuZXRfZGV2LmRldiwgJm1kZXZfZm9wcyk7CisJaWYgKHJldCkKKwkJZ290
byBmYWlsZWQzOworCisJbXV0ZXhfaW5pdCgmbWRldl9saXN0X2xvY2spOworCUlOSVRfTElTVF9I
RUFEKCZtZGV2X2RldmljZXNfbGlzdCk7CisKKwlnb3RvIGFsbF9kb25lOworCitmYWlsZWQzOgor
CisJZGV2aWNlX3VucmVnaXN0ZXIoJm12bmV0X2Rldi5kZXYpOworZmFpbGVkMjoKKwljbGFzc19k
ZXN0cm95KG12bmV0X2Rldi52ZF9jbGFzcyk7CisKK2ZhaWxlZDE6CithbGxfZG9uZToKKwlyZXR1
cm4gcmV0OworfQorCitzdGF0aWMgdm9pZCBfX2V4aXQgbXZuZXRfZGV2X2V4aXQodm9pZCkKK3sK
Kwltdm5ldF9kZXYuZGV2LmJ1cyA9IE5VTEw7CisJbWRldl91bnJlZ2lzdGVyX2RldmljZSgmbXZu
ZXRfZGV2LmRldik7CisKKwlkZXZpY2VfdW5yZWdpc3RlcigmbXZuZXRfZGV2LmRldik7CisJaWRy
X2Rlc3Ryb3koJm12bmV0X2Rldi52ZF9pZHIpOworCWNsYXNzX2Rlc3Ryb3kobXZuZXRfZGV2LnZk
X2NsYXNzKTsKKwltdm5ldF9kZXYudmRfY2xhc3MgPSBOVUxMOworCXByX2luZm8oIm12bmV0X2Rl
djogVW5sb2FkZWQhXG4iKTsKK30KKworbW9kdWxlX2luaXQobXZuZXRfZGV2X2luaXQpCittb2R1
bGVfZXhpdChtdm5ldF9kZXZfZXhpdCkKKworTU9EVUxFX0xJQ0VOU0UoIkdQTCB2MiIpOworTU9E
VUxFX0lORk8oc3VwcG9ydGVkLCAiVGVzdCBkcml2ZXIgdGhhdCBzaW11bGF0ZSBzZXJpYWwgcG9y
dCBvdmVyIFBDSSIpOworTU9EVUxFX1ZFUlNJT04oVkVSU0lPTl9TVFJJTkcpOworTU9EVUxFX0FV
VEhPUihEUklWRVJfQVVUSE9SKTsKLS0gCjIuMTkuMQoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vZHJpLWRldmVs
