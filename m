Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6487845C5F
	for <lists+dri-devel@lfdr.de>; Fri, 14 Jun 2019 14:14:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2FA64897C8;
	Fri, 14 Jun 2019 12:13:58 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from relay4-d.mail.gandi.net (relay4-d.mail.gandi.net
 [217.70.183.196])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 323BE89781
 for <dri-devel@lists.freedesktop.org>; Fri, 14 Jun 2019 12:13:54 +0000 (UTC)
X-Originating-IP: 90.88.23.150
Received: from localhost (aaubervilliers-681-1-81-150.w90-88.abo.wanadoo.fr
 [90.88.23.150]) (Authenticated sender: maxime.ripard@bootlin.com)
 by relay4-d.mail.gandi.net (Postfix) with ESMTPSA id E3A8DE0005;
 Fri, 14 Jun 2019 12:13:48 +0000 (UTC)
From: Maxime Ripard <maxime.ripard@bootlin.com>
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Sean Paul <seanpaul@chromium.org>,
 Maxime Ripard <maxime.ripard@bootlin.com>,
 Daniel Vetter <daniel.vetter@intel.com>, David Airlie <airlied@linux.ie>
Subject: [PATCH v4 07/12] drm/modes: Allow to specify rotation and reflection
 on the commandline
Date: Fri, 14 Jun 2019 14:13:14 +0200
Message-Id: <bc0803209a42b1e1c1e33281b16cd6fa4a4556b3.1560514379.git-series.maxime.ripard@bootlin.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <cover.5fc7840dc8fb24744516c13acb8c8aa18e44c0d0.1560514379.git-series.maxime.ripard@bootlin.com>
References: <cover.5fc7840dc8fb24744516c13acb8c8aa18e44c0d0.1560514379.git-series.maxime.ripard@bootlin.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: eben@raspberrypi.org, dri-devel@lists.freedesktop.org,
 Paul Kocialkowski <paul.kocialkowski@bootlin.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

Um90YXRpb25zIGFuZCByZWZsZWN0aW9ucyBzZXR1cCBhcmUgbmVlZGVkIGluIHNvbWUgc2NlbmFy
aW9zIHRvIGluaXRpYWxpc2UKcHJvcGVybHkgdGhlIGluaXRpYWwgZnJhbWVidWZmZXIuIFNvbWUg
ZHJpdmVycyBhbHJlYWR5IGhhZCBhIGJ1bmNoIG9mCnF1aXJrcyB0byBkZWFsIHdpdGggdGhpcywg
c3VjaCBhcyBlaXRoZXIgYSBwcml2YXRlIGtlcm5lbCBjb21tYW5kIGxpbmUKcGFyYW1ldGVyIChv
bWFwZHNzKSBvciBvbiB0aGUgZGV2aWNlIHRyZWUgKHZhcmlvdXMgcGFuZWxzKS4KCkluIG9yZGVy
IHRvIGFjY29tb2RhdGUgdGhpcywgbGV0J3MgY3JlYXRlIGEgdmlkZW8gbW9kZSBwYXJhbWV0ZXIg
dG8gZGVhbAp3aXRoIHRoZSByb3RhdGlvbiBhbmQgcmVmbGV4aW9uLgoKU2lnbmVkLW9mZi1ieTog
TWF4aW1lIFJpcGFyZCA8bWF4aW1lLnJpcGFyZEBib290bGluLmNvbT4KLS0tCiBkcml2ZXJzL2dw
dS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMgfCAgMjAgKysrKystCiBkcml2ZXJzL2dwdS9kcm0v
ZHJtX21vZGVzLmMgICAgICAgICAgfCAxMTAgKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLQog
aW5jbHVkZS9kcm0vZHJtX2Nvbm5lY3Rvci5oICAgICAgICAgIHwgICA5ICsrLQogMyBmaWxlcyBj
aGFuZ2VkLCAxMTkgaW5zZXJ0aW9ucygrKSwgMjAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2RybV9jbGllbnRfbW9kZXNldC5jIGIvZHJpdmVycy9ncHUvZHJtL2Ry
bV9jbGllbnRfbW9kZXNldC5jCmluZGV4IDMzZDQ5ODhmMjJhZS4uNTc5MzdlMzg0OTJjIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2RybV9jbGllbnRfbW9kZXNldC5jCkBAIC04MjQsNiArODI0LDcgQEAgYm9vbCBk
cm1fY2xpZW50X3JvdGF0aW9uKHN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQsIHVuc2lnbmVk
IGludCAqcm90YXRpb24pCiB7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9IG1v
ZGVzZXQtPmNvbm5lY3RvcnNbMF07CiAJc3RydWN0IGRybV9wbGFuZSAqcGxhbmUgPSBtb2Rlc2V0
LT5jcnRjLT5wcmltYXJ5OworCXN0cnVjdCBkcm1fY21kbGluZV9tb2RlICpjbWRsaW5lOwogCXU2
NCB2YWxpZF9tYXNrID0gMDsKIAl1bnNpZ25lZCBpbnQgaTsKIApAQCAtODQ0LDYgKzg0NSwyNSBA
QCBib29sIGRybV9jbGllbnRfcm90YXRpb24oc3RydWN0IGRybV9tb2RlX3NldCAqbW9kZXNldCwg
dW5zaWduZWQgaW50ICpyb3RhdGlvbikKIAkJKnJvdGF0aW9uID0gRFJNX01PREVfUk9UQVRFXzA7
CiAJfQogCisJLyoqCisJICogVGhlIHBhbmVsIGFscmVhZHkgZGVmaW5lZCB0aGUgZGVmYXVsdCBy
b3RhdGlvbgorCSAqIHRocm91Z2ggaXRzIG9yaWVudGF0aW9uLiBXaGF0ZXZlciBoYXMgYmVlbiBw
cm92aWRlZAorCSAqIG9uIHRoZSBjb21tYW5kIGxpbmUgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhh
dC4KKwkgKgorCSAqIFVuZm9ydHVuYXRlbHksIHRoZSByb3RhdGlvbnMgYXJlIGF0IGRpZmZlcmVu
dCBiaXQKKwkgKiBpbmRpY2VzLCBzbyB0aGUgbWF0aCB0byBhZGQgdGhlbSB1cCBhcmUgbm90IGFz
CisJICogdHJpdmlhbCBhcyB0aGV5IGNvdWxkLgorCSAqLworCWNtZGxpbmUgPSAmY29ubmVjdG9y
LT5jbWRsaW5lX21vZGU7CisJaWYgKGNtZGxpbmUtPnNwZWNpZmllZCkgeworCQl1bnNpZ25lZCBp
bnQgcGFuZWxfcm90ID0gaWxvZzIoKnJvdGF0aW9uICYgRFJNX01PREVfUk9UQVRFX01BU0spOwor
CQl1bnNpZ25lZCBpbnQgY21kbGluZV9yb3QgPSBpbG9nMihjbWRsaW5lLT5yb3RhdGlvbiAmIERS
TV9NT0RFX1JPVEFURV9NQVNLKTsKKwkJdW5zaWduZWQgaW50IHN1bV9yb3Q7CisKKwkJc3VtX3Jv
dCA9IChwYW5lbF9yb3QgKyBjbWRsaW5lX3JvdCkgJSA0OworCQkqcm90YXRpb24gPSAxIDw8IHN1
bV9yb3Q7CisJfQorCiAJLyoKIAkgKiBUT0RPOiBzdXBwb3J0IDkwIC8gMjcwIGRlZ3JlZSBoYXJk
d2FyZSByb3RhdGlvbiwKIAkgKiBkZXBlbmRpbmcgb24gdGhlIGhhcmR3YXJlIHRoaXMgbWF5IHJl
cXVpcmUgdGhlIGZyYW1lYnVmZmVyCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX21v
ZGVzLmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX21vZGVzLmMKaW5kZXggNDI5ZDNiZTE3ODAwLi5i
OTJiN2RmNjc4NGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fbW9kZXMuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vZHJtX21vZGVzLmMKQEAgLTE1NTQsNiArMTU1NCw3MSBAQCBzdGF0
aWMgaW50IGRybV9tb2RlX3BhcnNlX2NtZGxpbmVfcmVzX21vZGUoY29uc3QgY2hhciAqc3RyLCB1
bnNpZ25lZCBpbnQgbGVuZ3RoLAogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IGRybV9tb2Rl
X3BhcnNlX2NtZGxpbmVfb3B0aW9ucyhjaGFyICpzdHIsIHNpemVfdCBsZW4sCisJCQkJCSAgc3Ry
dWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKKwkJCQkJICBzdHJ1Y3QgZHJtX2NtZGxpbmVf
bW9kZSAqbW9kZSkKK3sKKwl1bnNpZ25lZCBpbnQgcm90YXRpb24gPSAwOworCWNoYXIgKnNlcCA9
IHN0cjsKKworCXdoaWxlICgoc2VwID0gc3RyY2hyKHNlcCwgJywnKSkpIHsKKwkJY2hhciAqZGVs
aW0sICpvcHRpb247CisKKwkJb3B0aW9uID0gc2VwICsgMTsKKwkJZGVsaW0gPSBzdHJjaHIob3B0
aW9uLCAnPScpOworCQlpZiAoIWRlbGltKSB7CisJCQlkZWxpbSA9IHN0cmNocihvcHRpb24sICcs
Jyk7CisKKwkJCWlmICghZGVsaW0pCisJCQkJZGVsaW0gPSBzdHIgKyBsZW47CisJCX0KKworCQlp
ZiAoIXN0cm5jbXAob3B0aW9uLCAicm90YXRlIiwgZGVsaW0gLSBvcHRpb24pKSB7CisJCQljb25z
dCBjaGFyICp2YWx1ZSA9IGRlbGltICsgMTsKKwkJCXVuc2lnbmVkIGludCBkZWc7CisKKwkJCWRl
ZyA9IHNpbXBsZV9zdHJ0b2wodmFsdWUsICZzZXAsIDEwKTsKKworCQkJLyogTWFrZSBzdXJlIHdl
IGhhdmUgcGFyc2VkIHNvbWV0aGluZyAqLworCQkJaWYgKHNlcCA9PSB2YWx1ZSkKKwkJCQlyZXR1
cm4gLUVJTlZBTDsKKworCQkJc3dpdGNoIChkZWcpIHsKKwkJCWNhc2UgMDoKKwkJCQlyb3RhdGlv
biB8PSBEUk1fTU9ERV9ST1RBVEVfMDsKKwkJCQlicmVhazsKKworCQkJY2FzZSA5MDoKKwkJCQly
b3RhdGlvbiB8PSBEUk1fTU9ERV9ST1RBVEVfOTA7CisJCQkJYnJlYWs7CisKKwkJCWNhc2UgMTgw
OgorCQkJCXJvdGF0aW9uIHw9IERSTV9NT0RFX1JPVEFURV8xODA7CisJCQkJYnJlYWs7CisKKwkJ
CWNhc2UgMjcwOgorCQkJCXJvdGF0aW9uIHw9IERSTV9NT0RFX1JPVEFURV8yNzA7CisJCQkJYnJl
YWs7CisKKwkJCWRlZmF1bHQ6CisJCQkJcmV0dXJuIC1FSU5WQUw7CisJCQl9CisJCX0gZWxzZSBp
ZiAoIXN0cm5jbXAob3B0aW9uLCAicmVmbGVjdF94IiwgZGVsaW0gLSBvcHRpb24pKSB7CisJCQly
b3RhdGlvbiB8PSBEUk1fTU9ERV9SRUZMRUNUX1g7CisJCQlzZXAgPSBkZWxpbTsKKwkJfSBlbHNl
IGlmICghc3RybmNtcChvcHRpb24sICJyZWZsZWN0X3kiLCBkZWxpbSAtIG9wdGlvbikpIHsKKwkJ
CXJvdGF0aW9uIHw9IERSTV9NT0RFX1JFRkxFQ1RfWTsKKwkJCXNlcCA9IGRlbGltOworCQl9IGVs
c2UgeworCQkJcmV0dXJuIC1FSU5WQUw7CisJCX0KKwl9CisKKwltb2RlLT5yb3RhdGlvbiA9IHJv
dGF0aW9uOworCisJcmV0dXJuIDA7Cit9CisKIC8qKgogICogZHJtX21vZGVfcGFyc2VfY29tbWFu
ZF9saW5lX2Zvcl9jb25uZWN0b3IgLSBwYXJzZSBjb21tYW5kIGxpbmUgbW9kZWxpbmUgZm9yIGNv
bm5lY3RvcgogICogQG1vZGVfb3B0aW9uOiBvcHRpb25hbCBwZXIgY29ubmVjdG9yIG1vZGUgb3B0
aW9uCkBAIC0xNTgxLDkgKzE2NDYsMTAgQEAgYm9vbCBkcm1fbW9kZV9wYXJzZV9jb21tYW5kX2xp
bmVfZm9yX2Nvbm5lY3Rvcihjb25zdCBjaGFyICptb2RlX29wdGlvbiwKIHsKIAljb25zdCBjaGFy
ICpuYW1lOwogCWJvb2wgbmFtZWRfbW9kZSA9IGZhbHNlLCBwYXJzZV9leHRyYXMgPSBmYWxzZTsK
LQl1bnNpZ25lZCBpbnQgYnBwX29mZiA9IDAsIHJlZnJlc2hfb2ZmID0gMDsKKwl1bnNpZ25lZCBp
bnQgYnBwX29mZiA9IDAsIHJlZnJlc2hfb2ZmID0gMCwgb3B0aW9uc19vZmYgPSAwOwogCXVuc2ln
bmVkIGludCBtb2RlX2VuZCA9IDA7CiAJY2hhciAqYnBwX3B0ciA9IE5VTEwsICpyZWZyZXNoX3B0
ciA9IE5VTEwsICpleHRyYV9wdHIgPSBOVUxMOworCWNoYXIgKm9wdGlvbnNfcHRyID0gTlVMTDsK
IAljaGFyICpicHBfZW5kX3B0ciA9IE5VTEwsICpyZWZyZXNoX2VuZF9wdHIgPSBOVUxMOwogCWlu
dCByZXQ7CiAKQEAgLTE2MzIsMTMgKzE2OTgsMTggQEAgYm9vbCBkcm1fbW9kZV9wYXJzZV9jb21t
YW5kX2xpbmVfZm9yX2Nvbm5lY3Rvcihjb25zdCBjaGFyICptb2RlX29wdGlvbiwKIAkJbW9kZS0+
cmVmcmVzaF9zcGVjaWZpZWQgPSB0cnVlOwogCX0KIAorCS8qIExvY2F0ZSB0aGUgc3RhcnQgb2Yg
bmFtZWQgb3B0aW9ucyAqLworCW9wdGlvbnNfcHRyID0gc3RyY2hyKG5hbWUsICcsJyk7CisJaWYg
KG9wdGlvbnNfcHRyKQorCQlvcHRpb25zX29mZiA9IG9wdGlvbnNfcHRyIC0gbmFtZTsKKwogCS8q
IExvY2F0ZSB0aGUgZW5kIG9mIHRoZSBuYW1lIC8gcmVzb2x1dGlvbiwgYW5kIHBhcnNlIGl0ICov
Ci0JaWYgKGJwcF9wdHIgJiYgcmVmcmVzaF9wdHIpIHsKLQkJbW9kZV9lbmQgPSBtaW4oYnBwX29m
ZiwgcmVmcmVzaF9vZmYpOwotCX0gZWxzZSBpZiAoYnBwX3B0cikgeworCWlmIChicHBfcHRyKSB7
CiAJCW1vZGVfZW5kID0gYnBwX29mZjsKIAl9IGVsc2UgaWYgKHJlZnJlc2hfcHRyKSB7CiAJCW1v
ZGVfZW5kID0gcmVmcmVzaF9vZmY7CisJfSBlbHNlIGlmIChvcHRpb25zX3B0cikgeworCQltb2Rl
X2VuZCA9IG9wdGlvbnNfb2ZmOwogCX0gZWxzZSB7CiAJCW1vZGVfZW5kID0gc3RybGVuKG5hbWUp
OwogCQlwYXJzZV9leHRyYXMgPSB0cnVlOwpAQCAtMTY4MCwyNCArMTc1MSwyMyBAQCBib29sIGRy
bV9tb2RlX3BhcnNlX2NvbW1hbmRfbGluZV9mb3JfY29ubmVjdG9yKGNvbnN0IGNoYXIgKm1vZGVf
b3B0aW9uLAogCWVsc2UgaWYgKHJlZnJlc2hfcHRyKQogCQlleHRyYV9wdHIgPSByZWZyZXNoX2Vu
ZF9wdHI7CiAKLQlpZiAoZXh0cmFfcHRyKSB7Ci0JCWlmICghbmFtZWRfbW9kZSkgewotCQkJaW50
IGxlbiA9IHN0cmxlbihuYW1lKSAtIChleHRyYV9wdHIgLSBuYW1lKTsKKwlpZiAoZXh0cmFfcHRy
ICYmCisJICAgIGV4dHJhX3B0ciAhPSBvcHRpb25zX3B0cikgeworCQlpbnQgbGVuID0gc3RybGVu
KG5hbWUpIC0gKGV4dHJhX3B0ciAtIG5hbWUpOwogCi0JCQlyZXQgPSBkcm1fbW9kZV9wYXJzZV9j
bWRsaW5lX2V4dHJhKGV4dHJhX3B0ciwgbGVuLAotCQkJCQkJCSAgIGNvbm5lY3RvciwgbW9kZSk7
Ci0JCQlpZiAocmV0KQotCQkJCXJldHVybiBmYWxzZTsKLQkJfSBlbHNlIHsKLQkJCWludCByZW1h
aW5pbmcgPSBzdHJsZW4obmFtZSkgLSAoZXh0cmFfcHRyIC0gbmFtZSk7CisJCXJldCA9IGRybV9t
b2RlX3BhcnNlX2NtZGxpbmVfZXh0cmEoZXh0cmFfcHRyLCBsZW4sCisJCQkJCQkgICBjb25uZWN0
b3IsIG1vZGUpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIGZhbHNlOworCX0KIAotCQkJLyoKLQkJ
CSAqIFdlIHN0aWxsIGhhdmUgY2hhcmFjdGVycyB0byBwcm9jZXNzLCB3aGlsZQotCQkJICogd2Ug
c2hvdWxkbid0IGhhdmUgYW55Ci0JCQkgKi8KLQkJCWlmIChyZW1haW5pbmcgPiAwKQotCQkJCXJl
dHVybiBmYWxzZTsKLQkJfQorCWlmIChvcHRpb25zX3B0cikgeworCQlpbnQgbGVuID0gc3RybGVu
KG5hbWUpIC0gKG9wdGlvbnNfcHRyIC0gbmFtZSk7CisKKwkJcmV0ID0gZHJtX21vZGVfcGFyc2Vf
Y21kbGluZV9vcHRpb25zKG9wdGlvbnNfcHRyLCBsZW4sCisJCQkJCQkgICAgIGNvbm5lY3Rvciwg
bW9kZSk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gZmFsc2U7CiAJfQogCiAJcmV0dXJuIHRydWU7
CmRpZmYgLS1naXQgYS9pbmNsdWRlL2RybS9kcm1fY29ubmVjdG9yLmggYi9pbmNsdWRlL2RybS9k
cm1fY29ubmVjdG9yLmgKaW5kZXggZjQ2YTUzZTg2ZDc1Li42OGEwNDE2OWVhMzYgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvZHJtL2RybV9jb25uZWN0b3IuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fY29u
bmVjdG9yLmgKQEAgLTEwMDYsNiArMTAwNiwxNSBAQCBzdHJ1Y3QgZHJtX2NtZGxpbmVfbW9kZSB7
CiAJICogc3RhdGUgdG8gb25lIG9mIHRoZSBEUk1fRk9SQ0VfKiB2YWx1ZXMuCiAJICovCiAJZW51
bSBkcm1fY29ubmVjdG9yX2ZvcmNlIGZvcmNlOworCisJLyoqCisJICogQHJvdGF0aW9uOgorCSAq
CisJICogSW5pdGlhbCByb3RhdGlvbiBvZiB0aGUgbW9kZSBzZXR1cCBmcm9tIHRoZSBjb21tYW5k
IGxpbmUuCisJICogU2VlIERSTV9NT0RFX1JPVEFURV8qLiBPbmx5IERSTV9NT0RFX1JPVEFURV8w
IGFuZAorCSAqIERSTV9NT0RFX1JPVEFURV8xODAgYXJlIHN1cHBvcnRlZCBhdCB0aGUgbW9tZW50
LgorCSAqLworCXVuc2lnbmVkIGludCByb3RhdGlvbjsKIH07CiAKIC8qKgotLSAKZ2l0LXNlcmll
cyAwLjkuMQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpk
cmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
