Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 614D183811
	for <lists+dri-devel@lfdr.de>; Tue,  6 Aug 2019 19:40:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5375589B3C;
	Tue,  6 Aug 2019 17:40:20 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AC93089B3C
 for <dri-devel@lists.freedesktop.org>; Tue,  6 Aug 2019 17:40:19 +0000 (UTC)
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 06 Aug 2019 10:40:19 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,353,1559545200"; d="scan'208";a="168363539"
Received: from iweiny-desk2.sc.intel.com ([10.3.52.157])
 by orsmga008.jf.intel.com with ESMTP; 06 Aug 2019 10:40:17 -0700
Date: Tue, 6 Aug 2019 10:40:17 -0700
From: Ira Weiny <ira.weiny@intel.com>
To: john.hubbard@gmail.com
Subject: Re: [PATCH v6 1/3] mm/gup: add make_dirty arg to
 put_user_pages_dirty_lock()
Message-ID: <20190806174017.GB4748@iweiny-DESK2.sc.intel.com>
References: <20190804214042.4564-1-jhubbard@nvidia.com>
 <20190804214042.4564-2-jhubbard@nvidia.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20190804214042.4564-2-jhubbard@nvidia.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Boaz Harrosh <boaz@plexistor.com>, Jan Kara <jack@suse.cz>,
 David Airlie <airlied@linux.ie>, Dave Chinner <david@fromorbit.com>,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 Christoph Hellwig <hch@lst.de>, Sage Weil <sage@redhat.com>,
 Miklos Szeredi <miklos@szeredi.hu>, linux-rdma@vger.kernel.org,
 Matthew Wilcox <willy@infradead.org>, Jason Gunthorpe <jgg@ziepe.ca>,
 Johannes Thumshirn <jthumshirn@suse.de>, Ilya Dryomov <idryomov@gmail.com>,
 =?iso-8859-1?Q?Bj=F6rn_T=F6pel?= <bjorn.topel@intel.com>,
 John Hubbard <jhubbard@nvidia.com>,
 Santosh Shilimkar <santosh.shilimkar@oracle.com>,
 Ming Lei <ming.lei@redhat.com>,
 =?iso-8859-1?B?Suly9G1l?= Glisse <jglisse@redhat.com>,
 Alexander Viro <viro@zeniv.linux.org.uk>,
 Dan Williams <dan.j.williams@intel.com>, bpf@vger.kernel.org,
 Magnus Karlsson <magnus.karlsson@intel.com>, Jens Axboe <axboe@kernel.dk>,
 netdev@vger.kernel.org, LKML <linux-kernel@vger.kernel.org>,
 Yan Zheng <zyan@redhat.com>, Andrew Morton <akpm@linux-foundation.org>,
 "David S . Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gU3VuLCBBdWcgMDQsIDIwMTkgYXQgMDI6NDA6NDBQTSAtMDcwMCwgam9obi5odWJiYXJkQGdt
YWlsLmNvbSB3cm90ZToKPiBGcm9tOiBKb2huIEh1YmJhcmQgPGpodWJiYXJkQG52aWRpYS5jb20+
Cj4gCj4gUHJvdmlkZSBhIG1vcmUgY2FwYWJsZSB2YXJpYXRpb24gb2YgcHV0X3VzZXJfcGFnZXNf
ZGlydHlfbG9jaygpLAo+IGFuZCBkZWxldGUgcHV0X3VzZXJfcGFnZXNfZGlydHkoKS4gVGhpcyBp
cyBiYXNlZCBvbiB0aGUKPiBmb2xsb3dpbmc6Cj4gCj4gMS4gTG90cyBvZiBjYWxsIHNpdGVzIGJl
Y29tZSBzaW1wbGVyIGlmIGEgYm9vbCBpcyBwYXNzZWQKPiBpbnRvIHB1dF91c2VyX3BhZ2UqKCks
IGluc3RlYWQgb2YgbWFraW5nIHRoZSBjYWxsIHNpdGUKPiBjaG9vc2Ugd2hpY2ggcHV0X3VzZXJf
cGFnZSooKSB2YXJpYW50IHRvIGNhbGwuCj4gCj4gMi4gQ2hyaXN0b3BoIEhlbGx3aWcncyBvYnNl
cnZhdGlvbiB0aGF0IHNldF9wYWdlX2RpcnR5X2xvY2soKQo+IGlzIHVzdWFsbHkgY29ycmVjdCwg
YW5kIHNldF9wYWdlX2RpcnR5KCkgaXMgdXN1YWxseSBhCj4gYnVnLCBvciBhdCBsZWFzdCBxdWVz
dGlvbmFibGUsIHdpdGhpbiBhIHB1dF91c2VyX3BhZ2UqKCkKPiBjYWxsaW5nIGNoYWluLgo+IAo+
IFRoaXMgbGVhZHMgdG8gdGhlIGZvbGxvd2luZyBBUEkgY2hvaWNlczoKPiAKPiAgICAgKiBwdXRf
dXNlcl9wYWdlc19kaXJ0eV9sb2NrKHBhZ2UsIG5wYWdlcywgbWFrZV9kaXJ0eSkKPiAKPiAgICAg
KiBUaGVyZSBpcyBubyBwdXRfdXNlcl9wYWdlc19kaXJ0eSgpLiBZb3UgaGF2ZSB0bwo+ICAgICAg
IGhhbmQgY29kZSB0aGF0LCBpbiB0aGUgcmFyZSBjYXNlIHRoYXQgaXQncwo+ICAgICAgIHJlcXVp
cmVkLgo+IAo+IFJldmlld2VkLWJ5OiBDaHJpc3RvcGggSGVsbHdpZyA8aGNoQGxzdC5kZT4KPiBD
YzogTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+Cj4gQ2M6IEphbiBLYXJhIDxq
YWNrQHN1c2UuY3o+Cj4gQ2M6IElyYSBXZWlueSA8aXJhLndlaW55QGludGVsLmNvbT4KPiBDYzog
SmFzb24gR3VudGhvcnBlIDxqZ2dAemllcGUuY2E+Cj4gU2lnbmVkLW9mZi1ieTogSm9obiBIdWJi
YXJkIDxqaHViYmFyZEBudmlkaWEuY29tPgoKSSBhc3N1bWUgdGhpcyBpcyBzdXBlcnNlZGVkIGJ5
IHRoZSBwYXRjaCBpbiB0aGUgbGFyZ2Ugc2VyaWVzPwoKSXJhCgo+IC0tLQo+ICBkcml2ZXJzL2lu
ZmluaWJhbmQvY29yZS91bWVtLmMgICAgICAgICAgICAgfCAgIDUgKy0KPiAgZHJpdmVycy9pbmZp
bmliYW5kL2h3L2hmaTEvdXNlcl9wYWdlcy5jICAgIHwgICA1ICstCj4gIGRyaXZlcnMvaW5maW5p
YmFuZC9ody9xaWIvcWliX3VzZXJfcGFnZXMuYyB8ICAxMyArLS0KPiAgZHJpdmVycy9pbmZpbmli
YW5kL2h3L3VzbmljL3VzbmljX3Vpb20uYyAgIHwgICA1ICstCj4gIGRyaXZlcnMvaW5maW5pYmFu
ZC9zdy9zaXcvc2l3X21lbS5jICAgICAgICB8ICAxOSArLS0tCj4gIGluY2x1ZGUvbGludXgvbW0u
aCAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgNSArLQo+ICBtbS9ndXAuYyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgfCAxMTUgKysrKysrKysrLS0tLS0tLS0tLS0tCj4gIDcg
ZmlsZXMgY2hhbmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwgMTA2IGRlbGV0aW9ucygtKQo+IAo+IGRp
ZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtLmMgYi9kcml2ZXJzL2luZmlu
aWJhbmQvY29yZS91bWVtLmMKPiBpbmRleCAwOGRhODQwZWQ3ZWUuLjk2NWNmOWRlYTcxYSAxMDA2
NDQKPiAtLS0gYS9kcml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtLmMKPiArKysgYi9kcml2ZXJz
L2luZmluaWJhbmQvY29yZS91bWVtLmMKPiBAQCAtNTQsMTAgKzU0LDcgQEAgc3RhdGljIHZvaWQg
X19pYl91bWVtX3JlbGVhc2Uoc3RydWN0IGliX2RldmljZSAqZGV2LCBzdHJ1Y3QgaWJfdW1lbSAq
dW1lbSwgaW50IGQKPiAgCj4gIAlmb3JfZWFjaF9zZ19wYWdlKHVtZW0tPnNnX2hlYWQuc2dsLCAm
c2dfaXRlciwgdW1lbS0+c2dfbmVudHMsIDApIHsKPiAgCQlwYWdlID0gc2dfcGFnZV9pdGVyX3Bh
Z2UoJnNnX2l0ZXIpOwo+IC0JCWlmICh1bWVtLT53cml0YWJsZSAmJiBkaXJ0eSkKPiAtCQkJcHV0
X3VzZXJfcGFnZXNfZGlydHlfbG9jaygmcGFnZSwgMSk7Cj4gLQkJZWxzZQo+IC0JCQlwdXRfdXNl
cl9wYWdlKHBhZ2UpOwo+ICsJCXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2soJnBhZ2UsIDEsIHVt
ZW0tPndyaXRhYmxlICYmIGRpcnR5KTsKPiAgCX0KPiAgCj4gIAlzZ19mcmVlX3RhYmxlKCZ1bWVt
LT5zZ19oZWFkKTsKPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9pbmZpbmliYW5kL2h3L2hmaTEvdXNl
cl9wYWdlcy5jIGIvZHJpdmVycy9pbmZpbmliYW5kL2h3L2hmaTEvdXNlcl9wYWdlcy5jCj4gaW5k
ZXggYjg5YTliOWFlZjdhLi40NjlhY2I5NjFmYmQgMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9pbmZp
bmliYW5kL2h3L2hmaTEvdXNlcl9wYWdlcy5jCj4gKysrIGIvZHJpdmVycy9pbmZpbmliYW5kL2h3
L2hmaTEvdXNlcl9wYWdlcy5jCj4gQEAgLTExOCwxMCArMTE4LDcgQEAgaW50IGhmaTFfYWNxdWly
ZV91c2VyX3BhZ2VzKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIHZhZGRyLCBz
aXplX3QgbnAKPiAgdm9pZCBoZmkxX3JlbGVhc2VfdXNlcl9wYWdlcyhzdHJ1Y3QgbW1fc3RydWN0
ICptbSwgc3RydWN0IHBhZ2UgKipwLAo+ICAJCQkgICAgIHNpemVfdCBucGFnZXMsIGJvb2wgZGly
dHkpCj4gIHsKPiAtCWlmIChkaXJ0eSkKPiAtCQlwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKHAs
IG5wYWdlcyk7Cj4gLQllbHNlCj4gLQkJcHV0X3VzZXJfcGFnZXMocCwgbnBhZ2VzKTsKPiArCXB1
dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2socCwgbnBhZ2VzLCBkaXJ0eSk7Cj4gIAo+ICAJaWYgKG1t
KSB7IC8qIGR1cmluZyBjbG9zZSBhZnRlciBzaWduYWwsIG1tIGNhbiBiZSBOVUxMICovCj4gIAkJ
YXRvbWljNjRfc3ViKG5wYWdlcywgJm1tLT5waW5uZWRfdm0pOwo+IGRpZmYgLS1naXQgYS9kcml2
ZXJzL2luZmluaWJhbmQvaHcvcWliL3FpYl91c2VyX3BhZ2VzLmMgYi9kcml2ZXJzL2luZmluaWJh
bmQvaHcvcWliL3FpYl91c2VyX3BhZ2VzLmMKPiBpbmRleCBiZmJmYmI3ZTBmZjQuLjI2YzFmYjhk
NDVjYyAxMDA2NDQKPiAtLS0gYS9kcml2ZXJzL2luZmluaWJhbmQvaHcvcWliL3FpYl91c2VyX3Bh
Z2VzLmMKPiArKysgYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvcWliL3FpYl91c2VyX3BhZ2VzLmMK
PiBAQCAtMzcsMTUgKzM3LDYgQEAKPiAgCj4gICNpbmNsdWRlICJxaWIuaCIKPiAgCj4gLXN0YXRp
YyB2b2lkIF9fcWliX3JlbGVhc2VfdXNlcl9wYWdlcyhzdHJ1Y3QgcGFnZSAqKnAsIHNpemVfdCBu
dW1fcGFnZXMsCj4gLQkJCQkgICAgIGludCBkaXJ0eSkKPiAtewo+IC0JaWYgKGRpcnR5KQo+IC0J
CXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xvY2socCwgbnVtX3BhZ2VzKTsKPiAtCWVsc2UKPiAtCQlw
dXRfdXNlcl9wYWdlcyhwLCBudW1fcGFnZXMpOwo+IC19Cj4gLQo+ICAvKioKPiAgICogcWliX21h
cF9wYWdlIC0gYSBzYWZldHkgd3JhcHBlciBhcm91bmQgcGNpX21hcF9wYWdlKCkKPiAgICoKPiBA
QCAtMTI0LDcgKzExNSw3IEBAIGludCBxaWJfZ2V0X3VzZXJfcGFnZXModW5zaWduZWQgbG9uZyBz
dGFydF9wYWdlLCBzaXplX3QgbnVtX3BhZ2VzLAo+ICAKPiAgCXJldHVybiAwOwo+ICBiYWlsX3Jl
bGVhc2U6Cj4gLQlfX3FpYl9yZWxlYXNlX3VzZXJfcGFnZXMocCwgZ290LCAwKTsKPiArCXB1dF91
c2VyX3BhZ2VzX2RpcnR5X2xvY2socCwgZ290LCBmYWxzZSk7Cj4gIGJhaWw6Cj4gIAlhdG9taWM2
NF9zdWIobnVtX3BhZ2VzLCAmY3VycmVudC0+bW0tPnBpbm5lZF92bSk7Cj4gIAlyZXR1cm4gcmV0
Owo+IEBAIC0xMzIsNyArMTIzLDcgQEAgaW50IHFpYl9nZXRfdXNlcl9wYWdlcyh1bnNpZ25lZCBs
b25nIHN0YXJ0X3BhZ2UsIHNpemVfdCBudW1fcGFnZXMsCj4gIAo+ICB2b2lkIHFpYl9yZWxlYXNl
X3VzZXJfcGFnZXMoc3RydWN0IHBhZ2UgKipwLCBzaXplX3QgbnVtX3BhZ2VzKQo+ICB7Cj4gLQlf
X3FpYl9yZWxlYXNlX3VzZXJfcGFnZXMocCwgbnVtX3BhZ2VzLCAxKTsKPiArCXB1dF91c2VyX3Bh
Z2VzX2RpcnR5X2xvY2socCwgbnVtX3BhZ2VzLCB0cnVlKTsKPiAgCj4gIAkvKiBkdXJpbmcgY2xv
c2UgYWZ0ZXIgc2lnbmFsLCBtbSBjYW4gYmUgTlVMTCAqLwo+ICAJaWYgKGN1cnJlbnQtPm1tKQo+
IGRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQvaHcvdXNuaWMvdXNuaWNfdWlvbS5jIGIv
ZHJpdmVycy9pbmZpbmliYW5kL2h3L3VzbmljL3VzbmljX3Vpb20uYwo+IGluZGV4IDBiMDIzN2Q0
MTYxMy4uNjJlNmZmYTlhZDc4IDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9ody91
c25pYy91c25pY191aW9tLmMKPiArKysgYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvdXNuaWMvdXNu
aWNfdWlvbS5jCj4gQEAgLTc1LDEwICs3NSw3IEBAIHN0YXRpYyB2b2lkIHVzbmljX3Vpb21fcHV0
X3BhZ2VzKHN0cnVjdCBsaXN0X2hlYWQgKmNodW5rX2xpc3QsIGludCBkaXJ0eSkKPiAgCQlmb3Jf
ZWFjaF9zZyhjaHVuay0+cGFnZV9saXN0LCBzZywgY2h1bmstPm5lbnRzLCBpKSB7Cj4gIAkJCXBh
Z2UgPSBzZ19wYWdlKHNnKTsKPiAgCQkJcGEgPSBzZ19waHlzKHNnKTsKPiAtCQkJaWYgKGRpcnR5
KQo+IC0JCQkJcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jaygmcGFnZSwgMSk7Cj4gLQkJCWVsc2UK
PiAtCQkJCXB1dF91c2VyX3BhZ2UocGFnZSk7Cj4gKwkJCXB1dF91c2VyX3BhZ2VzX2RpcnR5X2xv
Y2soJnBhZ2UsIDEsIGRpcnR5KTsKPiAgCQkJdXNuaWNfZGJnKCJwYTogJXBhXG4iLCAmcGEpOwo+
ICAJCX0KPiAgCQlrZnJlZShjaHVuayk7Cj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW5maW5pYmFu
ZC9zdy9zaXcvc2l3X21lbS5jIGIvZHJpdmVycy9pbmZpbmliYW5kL3N3L3Npdy9zaXdfbWVtLmMK
PiBpbmRleCA2NzE3MWM4MmIwYzQuLjFlMTk3NzUzYmYyZiAxMDA2NDQKPiAtLS0gYS9kcml2ZXJz
L2luZmluaWJhbmQvc3cvc2l3L3Npd19tZW0uYwo+ICsrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9z
dy9zaXcvc2l3X21lbS5jCj4gQEAgLTYwLDIwICs2MCw2IEBAIHN0cnVjdCBzaXdfbWVtICpzaXdf
bWVtX2lkMm9iaihzdHJ1Y3Qgc2l3X2RldmljZSAqc2RldiwgaW50IHN0YWdfaW5kZXgpCj4gIAly
ZXR1cm4gTlVMTDsKPiAgfQo+ICAKPiAtc3RhdGljIHZvaWQgc2l3X2ZyZWVfcGxpc3Qoc3RydWN0
IHNpd19wYWdlX2NodW5rICpjaHVuaywgaW50IG51bV9wYWdlcywKPiAtCQkJICAgYm9vbCBkaXJ0
eSkKPiAtewo+IC0Jc3RydWN0IHBhZ2UgKipwID0gY2h1bmstPnBsaXN0Owo+IC0KPiAtCXdoaWxl
IChudW1fcGFnZXMtLSkgewo+IC0JCWlmICghUGFnZURpcnR5KCpwKSAmJiBkaXJ0eSkKPiAtCQkJ
cHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhwLCAxKTsKPiAtCQllbHNlCj4gLQkJCXB1dF91c2Vy
X3BhZ2UoKnApOwo+IC0JCXArKzsKPiAtCX0KPiAtfQo+IC0KPiAgdm9pZCBzaXdfdW1lbV9yZWxl
YXNlKHN0cnVjdCBzaXdfdW1lbSAqdW1lbSwgYm9vbCBkaXJ0eSkKPiAgewo+ICAJc3RydWN0IG1t
X3N0cnVjdCAqbW1fcyA9IHVtZW0tPm93bmluZ19tbTsKPiBAQCAtODIsOCArNjgsOSBAQCB2b2lk
IHNpd191bWVtX3JlbGVhc2Uoc3RydWN0IHNpd191bWVtICp1bWVtLCBib29sIGRpcnR5KQo+ICAJ
Zm9yIChpID0gMDsgbnVtX3BhZ2VzOyBpKyspIHsKPiAgCQlpbnQgdG9fZnJlZSA9IG1pbl90KGlu
dCwgUEFHRVNfUEVSX0NIVU5LLCBudW1fcGFnZXMpOwo+ICAKPiAtCQlzaXdfZnJlZV9wbGlzdCgm
dW1lbS0+cGFnZV9jaHVua1tpXSwgdG9fZnJlZSwKPiAtCQkJICAgICAgIHVtZW0tPndyaXRhYmxl
ICYmIGRpcnR5KTsKPiArCQlwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKHVtZW0tPnBhZ2VfY2h1
bmtbaV0ucGxpc3QsCj4gKwkJCQkJICB0b19mcmVlLAo+ICsJCQkJCSAgdW1lbS0+d3JpdGFibGUg
JiYgZGlydHkpOwo+ICAJCWtmcmVlKHVtZW0tPnBhZ2VfY2h1bmtbaV0ucGxpc3QpOwo+ICAJCW51
bV9wYWdlcyAtPSB0b19mcmVlOwo+ICAJfQo+IGRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L21t
LmggYi9pbmNsdWRlL2xpbnV4L21tLmgKPiBpbmRleCAwMzM0Y2E5N2M1ODQuLjk3NTliNmEyNDQy
MCAxMDA2NDQKPiAtLS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKPiArKysgYi9pbmNsdWRlL2xpbnV4
L21tLmgKPiBAQCAtMTA1Nyw4ICsxMDU3LDkgQEAgc3RhdGljIGlubGluZSB2b2lkIHB1dF91c2Vy
X3BhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UpCj4gIAlwdXRfcGFnZShwYWdlKTsKPiAgfQo+ICAKPiAt
dm9pZCBwdXRfdXNlcl9wYWdlc19kaXJ0eShzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25lZCBs
b25nIG5wYWdlcyk7Cj4gLXZvaWQgcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhzdHJ1Y3QgcGFn
ZSAqKnBhZ2VzLCB1bnNpZ25lZCBsb25nIG5wYWdlcyk7Cj4gK3ZvaWQgcHV0X3VzZXJfcGFnZXNf
ZGlydHlfbG9jayhzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25lZCBsb25nIG5wYWdlcywKPiAr
CQkJICAgICAgIGJvb2wgbWFrZV9kaXJ0eSk7Cj4gKwo+ICB2b2lkIHB1dF91c2VyX3BhZ2VzKHN0
cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVkIGxvbmcgbnBhZ2VzKTsKPiAgCj4gICNpZiBkZWZp
bmVkKENPTkZJR19TUEFSU0VNRU0pICYmICFkZWZpbmVkKENPTkZJR19TUEFSU0VNRU1fVk1FTU1B
UCkKPiBkaWZmIC0tZ2l0IGEvbW0vZ3VwLmMgYi9tbS9ndXAuYwo+IGluZGV4IDk4ZjEzYWIzN2Jh
Yy4uN2ZlZmQ3YWIwMmM0IDEwMDY0NAo+IC0tLSBhL21tL2d1cC5jCj4gKysrIGIvbW0vZ3VwLmMK
PiBAQCAtMjksODUgKzI5LDcwIEBAIHN0cnVjdCBmb2xsb3dfcGFnZV9jb250ZXh0IHsKPiAgCXVu
c2lnbmVkIGludCBwYWdlX21hc2s7Cj4gIH07Cj4gIAo+IC10eXBlZGVmIGludCAoKnNldF9kaXJ0
eV9mdW5jX3QpKHN0cnVjdCBwYWdlICpwYWdlKTsKPiAtCj4gLXN0YXRpYyB2b2lkIF9fcHV0X3Vz
ZXJfcGFnZXNfZGlydHkoc3RydWN0IHBhZ2UgKipwYWdlcywKPiAtCQkJCSAgIHVuc2lnbmVkIGxv
bmcgbnBhZ2VzLAo+IC0JCQkJICAgc2V0X2RpcnR5X2Z1bmNfdCBzZGYpCj4gLXsKPiAtCXVuc2ln
bmVkIGxvbmcgaW5kZXg7Cj4gLQo+IC0JZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbnBhZ2VzOyBp
bmRleCsrKSB7Cj4gLQkJc3RydWN0IHBhZ2UgKnBhZ2UgPSBjb21wb3VuZF9oZWFkKHBhZ2VzW2lu
ZGV4XSk7Cj4gLQo+IC0JCS8qCj4gLQkJICogQ2hlY2tpbmcgUGFnZURpcnR5IGF0IHRoaXMgcG9p
bnQgbWF5IHJhY2Ugd2l0aAo+IC0JCSAqIGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKCksIGJ1dCB0
aGF0J3MgT0suIFR3byBrZXkgY2FzZXM6Cj4gLQkJICoKPiAtCQkgKiAxKSBUaGlzIGNvZGUgc2Vl
cyB0aGUgcGFnZSBhcyBhbHJlYWR5IGRpcnR5LCBzbyBpdCBza2lwcwo+IC0JCSAqIHRoZSBjYWxs
IHRvIHNkZigpLiBUaGF0IGNvdWxkIGhhcHBlbiBiZWNhdXNlCj4gLQkJICogY2xlYXJfcGFnZV9k
aXJ0eV9mb3JfaW8oKSBjYWxsZWQgcGFnZV9ta2NsZWFuKCksCj4gLQkJICogZm9sbG93ZWQgYnkg
c2V0X3BhZ2VfZGlydHkoKS4gSG93ZXZlciwgbm93IHRoZSBwYWdlIGlzCj4gLQkJICogZ29pbmcg
dG8gZ2V0IHdyaXR0ZW4gYmFjaywgd2hpY2ggbWVldHMgdGhlIG9yaWdpbmFsCj4gLQkJICogaW50
ZW50aW9uIG9mIHNldHRpbmcgaXQgZGlydHksIHNvIGFsbCBpcyB3ZWxsOgo+IC0JCSAqIGNsZWFy
X3BhZ2VfZGlydHlfZm9yX2lvKCkgZ29lcyBvbiB0byBjYWxsCj4gLQkJICogVGVzdENsZWFyUGFn
ZURpcnR5KCksIGFuZCB3cml0ZSB0aGUgcGFnZSBiYWNrLgo+IC0JCSAqCj4gLQkJICogMikgVGhp
cyBjb2RlIHNlZXMgdGhlIHBhZ2UgYXMgY2xlYW4sIHNvIGl0IGNhbGxzIHNkZigpLgo+IC0JCSAq
IFRoZSBwYWdlIHN0YXlzIGRpcnR5LCBkZXNwaXRlIGJlaW5nIHdyaXR0ZW4gYmFjaywgc28gaXQK
PiAtCQkgKiBnZXRzIHdyaXR0ZW4gYmFjayBhZ2FpbiBpbiB0aGUgbmV4dCB3cml0ZWJhY2sgY3lj
bGUuCj4gLQkJICogVGhpcyBpcyBoYXJtbGVzcy4KPiAtCQkgKi8KPiAtCQlpZiAoIVBhZ2VEaXJ0
eShwYWdlKSkKPiAtCQkJc2RmKHBhZ2UpOwo+IC0KPiAtCQlwdXRfdXNlcl9wYWdlKHBhZ2UpOwo+
IC0JfQo+IC19Cj4gLQo+ICAvKioKPiAtICogcHV0X3VzZXJfcGFnZXNfZGlydHkoKSAtIHJlbGVh
c2UgYW5kIGRpcnR5IGFuIGFycmF5IG9mIGd1cC1waW5uZWQgcGFnZXMKPiAtICogQHBhZ2VzOiAg
YXJyYXkgb2YgcGFnZXMgdG8gYmUgbWFya2VkIGRpcnR5IGFuZCByZWxlYXNlZC4KPiArICogcHV0
X3VzZXJfcGFnZXNfZGlydHlfbG9jaygpIC0gcmVsZWFzZSBhbmQgb3B0aW9uYWxseSBkaXJ0eSBn
dXAtcGlubmVkIHBhZ2VzCj4gKyAqIEBwYWdlczogIGFycmF5IG9mIHBhZ2VzIHRvIGJlIG1heWJl
IG1hcmtlZCBkaXJ0eSwgYW5kIGRlZmluaXRlbHkgcmVsZWFzZWQuCj4gICAqIEBucGFnZXM6IG51
bWJlciBvZiBwYWdlcyBpbiB0aGUgQHBhZ2VzIGFycmF5Lgo+ICsgKiBAbWFrZV9kaXJ0eTogd2hl
dGhlciB0byBtYXJrIHRoZSBwYWdlcyBkaXJ0eQo+ICAgKgo+ICAgKiAiZ3VwLXBpbm5lZCBwYWdl
IiByZWZlcnMgdG8gYSBwYWdlIHRoYXQgaGFzIGhhZCBvbmUgb2YgdGhlIGdldF91c2VyX3BhZ2Vz
KCkKPiAgICogdmFyaWFudHMgY2FsbGVkIG9uIHRoYXQgcGFnZS4KPiAgICoKPiAgICogRm9yIGVh
Y2ggcGFnZSBpbiB0aGUgQHBhZ2VzIGFycmF5LCBtYWtlIHRoYXQgcGFnZSAob3IgaXRzIGhlYWQg
cGFnZSwgaWYgYQo+IC0gKiBjb21wb3VuZCBwYWdlKSBkaXJ0eSwgaWYgaXQgd2FzIHByZXZpb3Vz
bHkgbGlzdGVkIGFzIGNsZWFuLiBUaGVuLCByZWxlYXNlCj4gLSAqIHRoZSBwYWdlIHVzaW5nIHB1
dF91c2VyX3BhZ2UoKS4KPiArICogY29tcG91bmQgcGFnZSkgZGlydHksIGlmIEBtYWtlX2RpcnR5
IGlzIHRydWUsIGFuZCBpZiB0aGUgcGFnZSB3YXMgcHJldmlvdXNseQo+ICsgKiBsaXN0ZWQgYXMg
Y2xlYW4uIEluIGFueSBjYXNlLCByZWxlYXNlcyBhbGwgcGFnZXMgdXNpbmcgcHV0X3VzZXJfcGFn
ZSgpLAo+ICsgKiBwb3NzaWJseSB2aWEgcHV0X3VzZXJfcGFnZXMoKSwgZm9yIHRoZSBub24tZGly
dHkgY2FzZS4KPiAgICoKPiAgICogUGxlYXNlIHNlZSB0aGUgcHV0X3VzZXJfcGFnZSgpIGRvY3Vt
ZW50YXRpb24gZm9yIGRldGFpbHMuCj4gICAqCj4gLSAqIHNldF9wYWdlX2RpcnR5KCksIHdoaWNo
IGRvZXMgbm90IGxvY2sgdGhlIHBhZ2UsIGlzIHVzZWQgaGVyZS4KPiAtICogVGhlcmVmb3JlLCBp
dCBpcyB0aGUgY2FsbGVyJ3MgcmVzcG9uc2liaWxpdHkgdG8gZW5zdXJlIHRoYXQgdGhpcyBpcwo+
IC0gKiBzYWZlLiBJZiBub3QsIHRoZW4gcHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jaygpIHNob3Vs
ZCBiZSBjYWxsZWQgaW5zdGVhZC4KPiArICogc2V0X3BhZ2VfZGlydHlfbG9jaygpIGlzIHVzZWQg
aW50ZXJuYWxseS4gSWYgaW5zdGVhZCwgc2V0X3BhZ2VfZGlydHkoKSBpcwo+ICsgKiByZXF1aXJl
ZCwgdGhlbiB0aGUgY2FsbGVyIHNob3VsZCBhKSB2ZXJpZnkgdGhhdCB0aGlzIGlzIHJlYWxseSBj
b3JyZWN0LAo+ICsgKiBiZWNhdXNlIF9sb2NrKCkgaXMgdXN1YWxseSByZXF1aXJlZCwgYW5kIGIp
IGhhbmQgY29kZSBpdDoKPiArICogc2V0X3BhZ2VfZGlydHlfbG9jaygpLCBwdXRfdXNlcl9wYWdl
KCkuCj4gICAqCj4gICAqLwo+IC12b2lkIHB1dF91c2VyX3BhZ2VzX2RpcnR5KHN0cnVjdCBwYWdl
ICoqcGFnZXMsIHVuc2lnbmVkIGxvbmcgbnBhZ2VzKQo+ICt2b2lkIHB1dF91c2VyX3BhZ2VzX2Rp
cnR5X2xvY2soc3RydWN0IHBhZ2UgKipwYWdlcywgdW5zaWduZWQgbG9uZyBucGFnZXMsCj4gKwkJ
CSAgICAgICBib29sIG1ha2VfZGlydHkpCj4gIHsKPiAtCV9fcHV0X3VzZXJfcGFnZXNfZGlydHko
cGFnZXMsIG5wYWdlcywgc2V0X3BhZ2VfZGlydHkpOwo+IC19Cj4gLUVYUE9SVF9TWU1CT0wocHV0
X3VzZXJfcGFnZXNfZGlydHkpOwo+ICsJdW5zaWduZWQgbG9uZyBpbmRleDsKPiAgCj4gLS8qKgo+
IC0gKiBwdXRfdXNlcl9wYWdlc19kaXJ0eV9sb2NrKCkgLSByZWxlYXNlIGFuZCBkaXJ0eSBhbiBh
cnJheSBvZiBndXAtcGlubmVkIHBhZ2VzCj4gLSAqIEBwYWdlczogIGFycmF5IG9mIHBhZ2VzIHRv
IGJlIG1hcmtlZCBkaXJ0eSBhbmQgcmVsZWFzZWQuCj4gLSAqIEBucGFnZXM6IG51bWJlciBvZiBw
YWdlcyBpbiB0aGUgQHBhZ2VzIGFycmF5Lgo+IC0gKgo+IC0gKiBGb3IgZWFjaCBwYWdlIGluIHRo
ZSBAcGFnZXMgYXJyYXksIG1ha2UgdGhhdCBwYWdlIChvciBpdHMgaGVhZCBwYWdlLCBpZiBhCj4g
LSAqIGNvbXBvdW5kIHBhZ2UpIGRpcnR5LCBpZiBpdCB3YXMgcHJldmlvdXNseSBsaXN0ZWQgYXMg
Y2xlYW4uIFRoZW4sIHJlbGVhc2UKPiAtICogdGhlIHBhZ2UgdXNpbmcgcHV0X3VzZXJfcGFnZSgp
Lgo+IC0gKgo+IC0gKiBQbGVhc2Ugc2VlIHRoZSBwdXRfdXNlcl9wYWdlKCkgZG9jdW1lbnRhdGlv
biBmb3IgZGV0YWlscy4KPiAtICoKPiAtICogVGhpcyBpcyBqdXN0IGxpa2UgcHV0X3VzZXJfcGFn
ZXNfZGlydHkoKSwgZXhjZXB0IHRoYXQgaXQgaW52b2tlcwo+IC0gKiBzZXRfcGFnZV9kaXJ0eV9s
b2NrKCksIGluc3RlYWQgb2Ygc2V0X3BhZ2VfZGlydHkoKS4KPiAtICoKPiAtICovCj4gLXZvaWQg
cHV0X3VzZXJfcGFnZXNfZGlydHlfbG9jayhzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25lZCBs
b25nIG5wYWdlcykKPiAtewo+IC0JX19wdXRfdXNlcl9wYWdlc19kaXJ0eShwYWdlcywgbnBhZ2Vz
LCBzZXRfcGFnZV9kaXJ0eV9sb2NrKTsKPiArCS8qCj4gKwkgKiBUT0RPOiB0aGlzIGNhbiBiZSBv
cHRpbWl6ZWQgZm9yIGh1Z2UgcGFnZXM6IGlmIGEgc2VyaWVzIG9mIHBhZ2VzIGlzCj4gKwkgKiBw
aHlzaWNhbGx5IGNvbnRpZ3VvdXMgYW5kIHBhcnQgb2YgdGhlIHNhbWUgY29tcG91bmQgcGFnZSwg
dGhlbiBhCj4gKwkgKiBzaW5nbGUgb3BlcmF0aW9uIHRvIHRoZSBoZWFkIHBhZ2Ugc2hvdWxkIHN1
ZmZpY2UuCj4gKwkgKi8KPiArCj4gKwlpZiAoIW1ha2VfZGlydHkpIHsKPiArCQlwdXRfdXNlcl9w
YWdlcyhwYWdlcywgbnBhZ2VzKTsKPiArCQlyZXR1cm47Cj4gKwl9Cj4gKwo+ICsJZm9yIChpbmRl
eCA9IDA7IGluZGV4IDwgbnBhZ2VzOyBpbmRleCsrKSB7Cj4gKwkJc3RydWN0IHBhZ2UgKnBhZ2Ug
PSBjb21wb3VuZF9oZWFkKHBhZ2VzW2luZGV4XSk7Cj4gKwkJLyoKPiArCQkgKiBDaGVja2luZyBQ
YWdlRGlydHkgYXQgdGhpcyBwb2ludCBtYXkgcmFjZSB3aXRoCj4gKwkJICogY2xlYXJfcGFnZV9k
aXJ0eV9mb3JfaW8oKSwgYnV0IHRoYXQncyBPSy4gVHdvIGtleQo+ICsJCSAqIGNhc2VzOgo+ICsJ
CSAqCj4gKwkJICogMSkgVGhpcyBjb2RlIHNlZXMgdGhlIHBhZ2UgYXMgYWxyZWFkeSBkaXJ0eSwg
c28gaXQKPiArCQkgKiBza2lwcyB0aGUgY2FsbCB0byBzZXRfcGFnZV9kaXJ0eSgpLiBUaGF0IGNv
dWxkIGhhcHBlbgo+ICsJCSAqIGJlY2F1c2UgY2xlYXJfcGFnZV9kaXJ0eV9mb3JfaW8oKSBjYWxs
ZWQKPiArCQkgKiBwYWdlX21rY2xlYW4oKSwgZm9sbG93ZWQgYnkgc2V0X3BhZ2VfZGlydHkoKS4K
PiArCQkgKiBIb3dldmVyLCBub3cgdGhlIHBhZ2UgaXMgZ29pbmcgdG8gZ2V0IHdyaXR0ZW4gYmFj
aywKPiArCQkgKiB3aGljaCBtZWV0cyB0aGUgb3JpZ2luYWwgaW50ZW50aW9uIG9mIHNldHRpbmcg
aXQKPiArCQkgKiBkaXJ0eSwgc28gYWxsIGlzIHdlbGw6IGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lv
KCkgZ29lcwo+ICsJCSAqIG9uIHRvIGNhbGwgVGVzdENsZWFyUGFnZURpcnR5KCksIGFuZCB3cml0
ZSB0aGUgcGFnZQo+ICsJCSAqIGJhY2suCj4gKwkJICoKPiArCQkgKiAyKSBUaGlzIGNvZGUgc2Vl
cyB0aGUgcGFnZSBhcyBjbGVhbiwgc28gaXQgY2FsbHMKPiArCQkgKiBzZXRfcGFnZV9kaXJ0eSgp
LiBUaGUgcGFnZSBzdGF5cyBkaXJ0eSwgZGVzcGl0ZSBiZWluZwo+ICsJCSAqIHdyaXR0ZW4gYmFj
aywgc28gaXQgZ2V0cyB3cml0dGVuIGJhY2sgYWdhaW4gaW4gdGhlCj4gKwkJICogbmV4dCB3cml0
ZWJhY2sgY3ljbGUuIFRoaXMgaXMgaGFybWxlc3MuCj4gKwkJICovCj4gKwkJaWYgKCFQYWdlRGly
dHkocGFnZSkpCj4gKwkJCXNldF9wYWdlX2RpcnR5X2xvY2socGFnZSk7Cj4gKwkJcHV0X3VzZXJf
cGFnZShwYWdlKTsKPiArCX0KPiAgfQo+ICBFWFBPUlRfU1lNQk9MKHB1dF91c2VyX3BhZ2VzX2Rp
cnR5X2xvY2spOwo+ICAKPiAtLSAKPiAyLjIyLjAKPiAKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vZHJpLWRldmVs
