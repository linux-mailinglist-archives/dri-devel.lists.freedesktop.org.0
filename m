Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 666DC1740D
	for <lists+dri-devel@lfdr.de>; Wed,  8 May 2019 10:41:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0EC4D897EE;
	Wed,  8 May 2019 08:41:39 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0b-001b2d01.pphosted.com
 [148.163.158.5])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3ABBD8926D
 for <dri-devel@lists.freedesktop.org>; Wed,  8 May 2019 07:02:51 +0000 (UTC)
Received: from pps.filterd (m0098416.ppops.net [127.0.0.1])
 by mx0b-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x48723LD075967
 for <dri-devel@lists.freedesktop.org>; Wed, 8 May 2019 03:02:50 -0400
Received: from e06smtp03.uk.ibm.com (e06smtp03.uk.ibm.com [195.75.94.99])
 by mx0b-001b2d01.pphosted.com with ESMTP id 2sbt87revu-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Wed, 08 May 2019 03:02:50 -0400
Received: from localhost
 by e06smtp03.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Wed, 8 May 2019 08:02:47 +0100
Received: from b06cxnps4075.portsmouth.uk.ibm.com (9.149.109.197)
 by e06smtp03.uk.ibm.com (192.168.101.133) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Wed, 8 May 2019 08:02:39 +0100
Received: from d06av22.portsmouth.uk.ibm.com (d06av22.portsmouth.uk.ibm.com
 [9.149.105.58])
 by b06cxnps4075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x4872cJb58392592
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Wed, 8 May 2019 07:02:38 GMT
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 142EB4C044;
 Wed,  8 May 2019 07:02:38 +0000 (GMT)
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 6538A4C04E;
 Wed,  8 May 2019 07:02:37 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by d06av22.portsmouth.uk.ibm.com (Postfix) with ESMTP;
 Wed,  8 May 2019 07:02:37 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 38BE9A03B2;
 Wed,  8 May 2019 17:02:35 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v2 3/7] lib/hexdump.c: Optionally suppress lines of repeated
 bytes
Date: Wed,  8 May 2019 17:01:43 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190508070148.23130-1-alastair@au1.ibm.com>
References: <20190508070148.23130-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19050807-0012-0000-0000-000003196FA0
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19050807-0013-0000-0000-00002151EFD4
Message-Id: <20190508070148.23130-4-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-05-08_05:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1905080046
X-Mailman-Approved-At: Wed, 08 May 2019 08:41:38 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpTb21lIGJ1ZmZl
cnMgbWF5IG9ubHkgYmUgcGFydGlhbGx5IGZpbGxlZCB3aXRoIHVzZWZ1bCBkYXRhLCB3aGlsZSB0
aGUgcmVzdAppcyBwYWRkZWQgKHR5cGljYWxseSB3aXRoIDB4MDAgb3IgMHhmZikuCgpUaGlzIHBh
dGNoIGludHJvZHVjZXMgYSBmbGFnIHRvIGFsbG93IHRoZSBzdXByZXNzaW9uIG9mIGxpbmVzIG9m
IHJlcGVhdGVkCmJ5dGVzLCB3aGljaCBhcmUgcmVwbGFjZWQgd2l0aCAnKiogU2tpcHBlZCAldSBi
eXRlcyBvZiB2YWx1ZSAweCV4ICoqJwoKQW4gaW5saW5lIHdyYXBwZXIgZnVuY3Rpb24gaXMgcHJv
dmlkZWQgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IHdpdGgKZXhpc3RpbmcgY29kZSwgd2hp
Y2ggbWFpbnRhaW5zIHRoZSBvcmlnaW5hbCBiZWhhdmlvdXIuCgpTaWduZWQtb2ZmLWJ5OiBBbGFz
dGFpciBEJ1NpbHZhIDxhbGFzdGFpckBkLXNpbHZhLm9yZz4KLS0tCiBpbmNsdWRlL2xpbnV4L3By
aW50ay5oIHwgMjUgKysrKysrKysrLS0tCiBsaWIvaGV4ZHVtcC5jICAgICAgICAgIHwgOTEgKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQs
IDk5IGluc2VydGlvbnMoKyksIDE3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgvcHJpbnRrLmggYi9pbmNsdWRlL2xpbnV4L3ByaW50ay5oCmluZGV4IGQ3Yzc3ZWQxYTRj
Yi4uOTM4YTY3NTgwZDc4IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3ByaW50ay5oCisrKyBi
L2luY2x1ZGUvbGludXgvcHJpbnRrLmgKQEAgLTQ3OSwxMyArNDc5LDE4IEBAIGVudW0gewogCURV
TVBfUFJFRklYX0FERFJFU1MsCiAJRFVNUF9QUkVGSVhfT0ZGU0VUCiB9OworCiBleHRlcm4gaW50
IGhleF9kdW1wX3RvX2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dz
aXplLAogCQkJICAgICAgaW50IGdyb3Vwc2l6ZSwgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVi
dWZsZW4sCiAJCQkgICAgICBib29sIGFzY2lpKTsKKworI2RlZmluZSBIRVhEVU1QX0FTQ0lJCQkJ
KDEgPDwgMCkKKyNkZWZpbmUgSEVYRFVNUF9TVVBQUkVTU19SRVBFQVRFRAkoMSA8PCAxKQorCiAj
aWZkZWYgQ09ORklHX1BSSU5USwotZXh0ZXJuIHZvaWQgcHJpbnRfaGV4X2R1bXAoY29uc3QgY2hh
ciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCitleHRlcm4gdm9pZCBwcmludF9oZXhf
ZHVtcF9leHQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCiAJCQkg
ICBpbnQgcHJlZml4X3R5cGUsIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLAotCQkJICAgY29u
c3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBib29sIGFzY2lpKTsKKwkJCSAgIGNvbnN0IHZvaWQg
KmJ1Ziwgc2l6ZV90IGxlbiwgdTY0IGZsYWdzKTsKICNpZiBkZWZpbmVkKENPTkZJR19EWU5BTUlD
X0RFQlVHKQogI2RlZmluZSBwcmludF9oZXhfZHVtcF9ieXRlcyhwcmVmaXhfc3RyLCBwcmVmaXhf
dHlwZSwgYnVmLCBsZW4pCVwKIAlkeW5hbWljX2hleF9kdW1wKHByZWZpeF9zdHIsIHByZWZpeF90
eXBlLCAxNiwgMSwgYnVmLCBsZW4sIHRydWUpCkBAIC00OTQsMTggKzQ5OSwyOCBAQCBleHRlcm4g
dm9pZCBwcmludF9oZXhfZHVtcF9ieXRlcyhjb25zdCBjaGFyICpwcmVmaXhfc3RyLCBpbnQgcHJl
Zml4X3R5cGUsCiAJCQkJIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbik7CiAjZW5kaWYgLyog
ZGVmaW5lZChDT05GSUdfRFlOQU1JQ19ERUJVRykgKi8KICNlbHNlCi1zdGF0aWMgaW5saW5lIHZv
aWQgcHJpbnRfaGV4X2R1bXAoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9z
dHIsCitzdGF0aWMgaW5saW5lIHZvaWQgcHJpbnRfaGV4X2R1bXBfZXh0KGNvbnN0IGNoYXIgKmxl
dmVsLCBjb25zdCBjaGFyICpwcmVmaXhfc3RyLAogCQkJCSAgaW50IHByZWZpeF90eXBlLCBpbnQg
cm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKLQkJCQkgIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxl
biwgYm9vbCBhc2NpaSkKKwkJCQkgIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgdTY0IGZs
YWdzKQogewogfQogc3RhdGljIGlubGluZSB2b2lkIHByaW50X2hleF9kdW1wX2J5dGVzKGNvbnN0
IGNoYXIgKnByZWZpeF9zdHIsIGludCBwcmVmaXhfdHlwZSwKIAkJCQkJY29uc3Qgdm9pZCAqYnVm
LCBzaXplX3QgbGVuKQogewogfQotCiAjZW5kaWYKIAorc3RhdGljIF9fYWx3YXlzX2lubGluZSB2
b2lkIHByaW50X2hleF9kdW1wKGNvbnN0IGNoYXIgKmxldmVsLAorCQkJCQkgICBjb25zdCBjaGFy
ICpwcmVmaXhfc3RyLAorCQkJCQkgICBpbnQgcHJlZml4X3R5cGUsIGludCByb3dzaXplLAorCQkJ
CQkgICBpbnQgZ3JvdXBzaXplLCBjb25zdCB2b2lkICpidWYsCisJCQkJCSAgIHNpemVfdCBsZW4s
IGJvb2wgYXNjaWkpCit7CisJcHJpbnRfaGV4X2R1bXBfZXh0KGxldmVsLCBwcmVmaXhfc3RyLCBw
cmVmaXhfdHlwZSwgcm93c2l6ZSwgZ3JvdXBzaXplLAorCQkJYnVmLCBsZW4sIGFzY2lpID8gSEVY
RFVNUF9BU0NJSSA6IDApOworfQorCisKICNpZiBkZWZpbmVkKENPTkZJR19EWU5BTUlDX0RFQlVH
KQogI2RlZmluZSBwcmludF9oZXhfZHVtcF9kZWJ1ZyhwcmVmaXhfc3RyLCBwcmVmaXhfdHlwZSwg
cm93c2l6ZSwJXAogCQkJICAgICBncm91cHNpemUsIGJ1ZiwgbGVuLCBhc2NpaSkJXApkaWZmIC0t
Z2l0IGEvbGliL2hleGR1bXAuYyBiL2xpYi9oZXhkdW1wLmMKaW5kZXggMzk0MzUwN2JjMGU5Li5k
NjFhMWU0ZjE5ZmEgMTAwNjQ0Ci0tLSBhL2xpYi9oZXhkdW1wLmMKKysrIGIvbGliL2hleGR1bXAu
YwpAQCAtMjEyLDggKzIxMiw0NCBAQCBpbnQgaGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQg
KmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsIGludCBncm91cHNpemUsCiBFWFBPUlRfU1lN
Qk9MKGhleF9kdW1wX3RvX2J1ZmZlcik7CiAKICNpZmRlZiBDT05GSUdfUFJJTlRLCisKKy8qKgor
ICogQ2hlY2sgaWYgYSBidWZmZXIgY29udGFpbnMgb25seSBhIHNpbmdsZSBieXRlIHZhbHVlCisg
KiBAYnVmOiBwb2ludGVyIHRvIHRoZSBidWZmZXIKKyAqIEBsZW46IHRoZSBzaXplIG9mIHRoZSBi
dWZmZXIgaW4gYnl0ZXMKKyAqIEB2YWw6IG91dHB1dHMgdGhlIHZhbHVlIGlmIGlmIHRoZSBieXRl
cyBhcmUgaWRlbnRpY2FsCisgKi8KK3N0YXRpYyBib29sIGJ1Zl9pc19hbGwoY29uc3QgdTggKmJ1
Ziwgc2l6ZV90IGxlbiwgdTggKnZhbF9vdXQpCit7CisJc2l6ZV90IGk7CisJdTggdmFsOworCisJ
aWYgKGxlbiA8PSAxKQorCQlyZXR1cm4gZmFsc2U7CisKKwl2YWwgPSBidWZbMF07CisKKwlmb3Ig
KGkgPSAxOyBpIDwgbGVuOyBpKyspIHsKKwkJaWYgKGJ1ZltpXSAhPSB2YWwpCisJCQlyZXR1cm4g
ZmFsc2U7CisJfQorCisJKnZhbF9vdXQgPSB2YWw7CisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRp
YyB2b2lkIGFubm91bmNlX3NraXBwZWQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnBy
ZWZpeF9zdHIsCisJCQkJICAgdTggdmFsLCBzaXplX3QgY291bnQpCit7CisJaWYgKGNvdW50ID09
IDApCisJCXJldHVybjsKKworCXByaW50aygiJXMlcyAqKiBTa2lwcGVkICVsdSBieXRlcyBvZiB2
YWx1ZSAweCV4ICoqXG4iLAorCSAgICAgICBsZXZlbCwgcHJlZml4X3N0ciwgY291bnQsIHZhbCk7
Cit9CisKIC8qKgotICogcHJpbnRfaGV4X2R1bXAgLSBwcmludCBhIHRleHQgaGV4IGR1bXAgdG8g
c3lzbG9nIGZvciBhIGJpbmFyeSBibG9iIG9mIGRhdGEKKyAqIHByaW50X2hleF9kdW1wX2V4dDog
ZHVtcCBhIGJpbmFyeSBibG9iIG9mIGRhdGEgdG8gc3lzbG9nIGluIGhleGFkZWNpbWFsCiAgKiBA
bGV2ZWw6IGtlcm5lbCBsb2cgbGV2ZWwgKGUuZy4gS0VSTl9ERUJVRykKICAqIEBwcmVmaXhfc3Ry
OiBzdHJpbmcgdG8gcHJlZml4IGVhY2ggbGluZSB3aXRoOwogICogIGNhbGxlciBzdXBwbGllcyB0
cmFpbGluZyBzcGFjZXMgZm9yIGFsaWdubWVudCBpZiBkZXNpcmVkCkBAIC0yMjQsNiArMjYwLDEw
IEBAIEVYUE9SVF9TWU1CT0woaGV4X2R1bXBfdG9fYnVmZmVyKTsKICAqIEBidWY6IGRhdGEgYmxv
YiB0byBkdW1wCiAgKiBAbGVuOiBudW1iZXIgb2YgYnl0ZXMgaW4gdGhlIEBidWYKICAqIEBhc2Np
aTogaW5jbHVkZSBBU0NJSSBhZnRlciB0aGUgaGV4IG91dHB1dAorICogQGZsYWdzOiBBIGJpdHdp
c2UgT1Igb2YgdGhlIGZvbGxvd2luZyBmbGFnczoKKyAqCUhFWERVTVBfQVNDSUk6CQkJaW5jbHVk
ZSBBU0NJSSBhZnRlciB0aGUgaGV4IG91dHB1dAorICoJSEVYRFVNUF9TVVBQUkVTU19SRVBFQVRF
RDoJc3VwcHJlc3MgcmVwZWF0ZWQgbGluZXMgb2YgaWRlbnRpY2FsCisgKgkJCQkJYnl0ZXMKICAq
CiAgKiBHaXZlbiBhIGJ1ZmZlciBvZiB1OCBkYXRhLCBwcmludF9oZXhfZHVtcCgpIHByaW50cyBh
IGhleCArIEFTQ0lJIGR1bXAKICAqIHRvIHRoZSBrZXJuZWwgbG9nIGF0IHRoZSBzcGVjaWZpZWQg
a2VybmVsIGxvZyBsZXZlbCwgd2l0aCBhbiBvcHRpb25hbApAQCAtMjM0LDIyICsyNzQsMjUgQEAg
RVhQT1JUX1NZTUJPTChoZXhfZHVtcF90b19idWZmZXIpOwogICogKG9wdGlvbmFsbHkpIEFTQ0lJ
IG91dHB1dC4KICAqCiAgKiBFLmcuOgotICogICBwcmludF9oZXhfZHVtcChLRVJOX0RFQlVHLCAi
cmF3IGRhdGE6ICIsIERVTVBfUFJFRklYX0FERFJFU1MsCi0gKgkJICAgIDE2LCAxLCBmcmFtZS0+
ZGF0YSwgZnJhbWUtPmxlbiwgdHJ1ZSk7CisgKiAgIHByaW50X2hleF9kdW1wX2V4dChLRVJOX0RF
QlVHLCAicmF3IGRhdGE6ICIsIERVTVBfUFJFRklYX0FERFJFU1MsCisgKgkJICAgIDE2LCAxLCBm
cmFtZS0+ZGF0YSwgZnJhbWUtPmxlbiwgSEVYRFVNUF9BU0NJSSk7CiAgKgogICogRXhhbXBsZSBv
dXRwdXQgdXNpbmcgJURVTVBfUFJFRklYX09GRlNFVCBhbmQgMS1ieXRlIG1vZGU6CiAgKiAwMDA5
YWI0MjogNDAgNDEgNDIgNDMgNDQgNDUgNDYgNDcgNDggNDkgNGEgNGIgNGMgNGQgNGUgNGYgIEBB
QkNERUZHSElKS0xNTk8KICAqIEV4YW1wbGUgb3V0cHV0IHVzaW5nICVEVU1QX1BSRUZJWF9BRERS
RVNTIGFuZCA0LWJ5dGUgbW9kZToKICAqIGZmZmZmZmZmODgwODlhZjA6IDczNzI3MTcwIDc3NzY3
NTc0IDdiN2E3OTc4IDdmN2U3ZDdjICBwcXJzdHV2d3h5ent8fX4uCiAgKi8KLXZvaWQgcHJpbnRf
aGV4X2R1bXAoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsIGludCBw
cmVmaXhfdHlwZSwKLQkJICAgIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLAotCQkgICAgY29u
c3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBib29sIGFzY2lpKQordm9pZCBwcmludF9oZXhfZHVt
cF9leHQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCisJCQlpbnQg
cHJlZml4X3R5cGUsIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLAorCQkJY29uc3Qgdm9pZCAq
YnVmLCBzaXplX3QgbGVuLCB1NjQgZmxhZ3MpCiB7CiAJY29uc3QgdTggKnB0ciA9IGJ1ZjsKLQlp
bnQgaSwgbGluZWxlbiwgcmVtYWluaW5nID0gbGVuOworCWludCBpLCByZW1haW5pbmcgPSBsZW47
CiAJdW5zaWduZWQgY2hhciAqbGluZWJ1ZjsKIAl1bnNpZ25lZCBpbnQgbGluZWJ1Zl9sZW47CisJ
dTggc2tpcHBlZF92YWwgPSAwOworCXNpemVfdCBza2lwcGVkID0gMDsKKwogCiAJaWYgKHJvd3Np
emUgJSBncm91cHNpemUpCiAJCXJvd3NpemUgLT0gcm93c2l6ZSAlIGdyb3Vwc2l6ZTsKQEAgLTI2
NiwxMSArMzA5LDM1IEBAIHZvaWQgcHJpbnRfaGV4X2R1bXAoY29uc3QgY2hhciAqbGV2ZWwsIGNv
bnN0IGNoYXIgKnByZWZpeF9zdHIsIGludCBwcmVmaXhfdHlwZSwKIAl9CiAKIAlmb3IgKGkgPSAw
OyBpIDwgbGVuOyBpICs9IHJvd3NpemUpIHsKLQkJbGluZWxlbiA9IG1pbihyZW1haW5pbmcsIHJv
d3NpemUpOworCQlpbnQgbGluZWxlbiA9IG1pbihyZW1haW5pbmcsIHJvd3NpemUpOwogCQlyZW1h
aW5pbmcgLT0gcm93c2l6ZTsKIAorCQlpZiAoZmxhZ3MgJiBIRVhEVU1QX1NVUFBSRVNTX1JFUEVB
VEVEKSB7CisJCQl1OCBuZXdfdmFsOworCisJCQlpZiAoYnVmX2lzX2FsbChwdHIgKyBpLCBsaW5l
bGVuLCAmbmV3X3ZhbCkpIHsKKwkJCQlpZiAobmV3X3ZhbCA9PSBza2lwcGVkX3ZhbCkgeworCQkJ
CQlza2lwcGVkICs9IGxpbmVsZW47CisJCQkJCWNvbnRpbnVlOworCQkJCX0gZWxzZSB7CisJCQkJ
CWFubm91bmNlX3NraXBwZWQobGV2ZWwsIHByZWZpeF9zdHIsCisJCQkJCQkJIHNraXBwZWRfdmFs
LCBza2lwcGVkKTsKKwkJCQkJc2tpcHBlZF92YWwgPSBuZXdfdmFsOworCQkJCQlza2lwcGVkID0g
bGluZWxlbjsKKwkJCQkJY29udGludWU7CisJCQkJfQorCQkJfQorCQl9CisKKwkJaWYgKHNraXBw
ZWQpIHsKKwkJCWFubm91bmNlX3NraXBwZWQobGV2ZWwsIHByZWZpeF9zdHIsIHNraXBwZWRfdmFs
LAorCQkJCQkgc2tpcHBlZCk7CisJCQlza2lwcGVkID0gMDsKKwkJfQorCiAJCWhleF9kdW1wX3Rv
X2J1ZmZlcihwdHIgKyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0JCQkJICAgbGlu
ZWJ1ZiwgbGluZWJ1Zl9sZW4sIGFzY2lpKTsKKwkJCQkgICBsaW5lYnVmLCBsaW5lYnVmX2xlbiwK
KwkJCQkgICBmbGFncyAmIEhFWERVTVBfQVNDSUkpOwogCiAJCXN3aXRjaCAocHJlZml4X3R5cGUp
IHsKIAkJY2FzZSBEVU1QX1BSRUZJWF9BRERSRVNTOgpAQCAtMjg4LDcgKzM1NSw3IEBAIHZvaWQg
cHJpbnRfaGV4X2R1bXAoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIs
IGludCBwcmVmaXhfdHlwZSwKIAogCWtmcmVlKGxpbmVidWYpOwogfQotRVhQT1JUX1NZTUJPTChw
cmludF9oZXhfZHVtcCk7CitFWFBPUlRfU1lNQk9MKHByaW50X2hleF9kdW1wX2V4dCk7CiAKICNp
ZiAhZGVmaW5lZChDT05GSUdfRFlOQU1JQ19ERUJVRykKIC8qKgpAQCAtMzA2LDggKzM3Myw4IEBA
IEVYUE9SVF9TWU1CT0wocHJpbnRfaGV4X2R1bXApOwogdm9pZCBwcmludF9oZXhfZHVtcF9ieXRl
cyhjb25zdCBjaGFyICpwcmVmaXhfc3RyLCBpbnQgcHJlZml4X3R5cGUsCiAJCQkgIGNvbnN0IHZv
aWQgKmJ1Ziwgc2l6ZV90IGxlbikKIHsKLQlwcmludF9oZXhfZHVtcChLRVJOX0RFQlVHLCBwcmVm
aXhfc3RyLCBwcmVmaXhfdHlwZSwgMTYsIDEsCi0JCSAgICAgICBidWYsIGxlbiwgdHJ1ZSk7CisJ
cHJpbnRfaGV4X2R1bXBfZXh0KEtFUk5fREVCVUcsIHByZWZpeF9zdHIsIHByZWZpeF90eXBlLCAx
NiwgMSwKKwkJICAgICAgIGJ1ZiwgbGVuLCBIRVhEVU1QX0FTQ0lJKTsKIH0KIEVYUE9SVF9TWU1C
T0wocHJpbnRfaGV4X2R1bXBfYnl0ZXMpOwogI2VuZGlmIC8qICFkZWZpbmVkKENPTkZJR19EWU5B
TUlDX0RFQlVHKSAqLwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9kcmktZGV2ZWw=
