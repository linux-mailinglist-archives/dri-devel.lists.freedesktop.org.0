Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4E2BA30F7F
	for <lists+dri-devel@lfdr.de>; Fri, 31 May 2019 16:02:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EEB34894FE;
	Fri, 31 May 2019 14:02:01 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.domeneshop.no (smtp.domeneshop.no
 [IPv6:2a01:5b40:0:3005::1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 62CDE893EC;
 Fri, 31 May 2019 14:01:59 +0000 (UTC)
Received: from 211.81-166-168.customer.lyse.net ([81.166.168.211]:52318
 helo=localhost.localdomain)
 by smtp.domeneshop.no with esmtpsa (TLS1.2:ECDHE_RSA_AES_128_CBC_SHA1:128)
 (Exim 4.84_2) (envelope-from <noralf@tronnes.org>)
 id 1hWi6X-0002XY-Bn; Fri, 31 May 2019 16:01:57 +0200
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v7 2/8] drm/fb-helper: Remove drm_fb_helper_crtc
Date: Fri, 31 May 2019 16:01:11 +0200
Message-Id: <20190531140117.37751-3-noralf@tronnes.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190531140117.37751-1-noralf@tronnes.org>
References: <20190531140117.37751-1-noralf@tronnes.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; d=tronnes.org; s=ds201810; 
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From;
 bh=oy6CcCoMbvd45QSlvz4J5vI9jSPji+2SJlhbNWZfdCs=; 
 b=INGz/3VmNv837/LDZRx1irBiBVNFVhsCmE3BSQHSXugF67YMRb06i87gc/63jjtrt/ZeRewzWdDD6qOZygrRL3ayK7yNGwJELSVwpkls2hA+vGROacEbcAqYotzduoNFcJ5Dzqjhxwt5AuAlug7ZEMHB/QtYFim1LPUkU22+FfZy6nNcgIJ77lKRlp8NGl8M0CR41lkMkAsBl5nGzk806brJPaC2gO4A5t6X55Pgj3609knLP7GtUXrFTh5fVAf5nWBsvEgvbhcUch/OtxyxOiDc6xEQvppnGWSzFI7chY7t4Eb+RSKae8zqwBVgRNcH9wVvFSo55FMOavX1kZf7QQ==;
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org, Sam Ravnborg <sam@ravnborg.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

c3RydWN0IGRybV9mYl9oZWxwZXJfY3J0YyBpcyBub3cganVzdCBhIHdyYXBwZXIgYXJvdW5kIGRy
bV9tb2RlX3NldCBzbwp1c2UgdGhhdCBkaXJlY3RseSBpbnN0ZWFkIGFuZCBhdHRhY2ggaXQgYXMg
YSBtb2Rlc2V0IGFycmF5IG9udG8KZHJtX2NsaWVudF9kZXYuIGRybV9mYl9oZWxwZXIgd2lsbCB1
c2UgdGhpcyBhcnJheSB0byBzdG9yZSBpdHMgbW9kZXNldHMKd2hpY2ggbWVhbnMgaXQgd2lsbCBh
bHdheXMgaW5pdGlhbGl6ZSBhIGRybV9jbGllbnQsIGJ1dCBpdCB3aWxsIG5vdApyZWdpc3RlciB0
aGUgY2xpZW50IChjYWxsYmFja3MpIHVubGVzcyBpdCdzIHRoZSBnZW5lcmljIGZiZGV2IGVtdWxh
dGlvbi4KCkNvZGUgd2lsbCBsYXRlciBiZSBtb3ZlZCB0byBkcm1fY2xpZW50LCBzbyBhZGQgY29k
ZSB0aGVyZSBpbiBhIG5ldyBmaWxlCmRybV9jbGllbnRfbW9kZXNldC5jIHdpdGggTUlUIGxpY2Vu
c2UgdG8gbWF0Y2ggZHJtX2ZiX2hlbHBlci5jLgoKVGhlIG1vZGVzZXQgY29ubmVjdG9yIGFycmF5
IHNpemUgaXMgaGFyZGNvZGVkIGZvciB0aGUgY2xvbmVkIGNhc2UgdG8gYXZvaWQKaGF2aW5nIHRv
IHBhc3MgaW4gYSB2YWx1ZSBmcm9tIHRoZSBkcml2ZXIuIEEgdmFsdWUgb2YgOCBpcyBjaG9zZW4g
dG8gZXJyCm9uIHRoZSBzYWZlIHNpZGUuIFRoaXMgbWVhbnMgdGhhdCB0aGUgbWF4IGNvbm5lY3Rv
ciBhcmd1bWVudCBmb3IKZHJtX2ZiX2hlbHBlcl9pbml0KCkgYW5kIGRybV9mYl9oZWxwZXJfZmJk
ZXZfc2V0dXAoKSBpc24ndCB1c2VkIGFueW1vcmUsCmEgdG9kbyBlbnRyeSBmb3IgdGhpcyBpcyBh
ZGRlZC4KCkluIHBhbl9kaXNwbGF5X2F0b21pYygpIHJlc3RvcmVfZmJkZXZfbW9kZV9mb3JjZSgp
IGlzIHVzZWQgaW5zdGVhZCBvZgpyZXN0b3JlX2ZiZGV2X21vZGVfYXRvbWljKCkgYmVjYXVzZSB0
aGF0IG9uZSB3aWxsIGxhdGVyIGJlY29tZSBpbnRlcm5hbAp0byBkcm1fY2xpZW50X21vZGVzZXQu
CgpMb2NraW5nIG9yZGVyOgoxLiBkcm1fZmJfaGVscGVyLT5sb2NrCjIuIGRybV9tYXN0ZXJfaW50
ZXJuYWxfYWNxdWlyZQozLiBkcm1fY2xpZW50X2Rldi0+bW9kZXNldF9tdXRleAoKdjY6IEltcHJv
dmUgY29tbWl0IG1lc3NhZ2UgKFNhbSBSYXZuYm9yZykKCnYzOgotIFVzZSBmdWxsIGRybV9jbGll
bnRfaW5pdC9yZWxlYXNlIGZvciB0aGUgbW9kZXNldHMgKERhbmllbCBWZXR0ZXIpCi0gZHJtX2Ns
aWVudF9mb3JfZWFjaF9tb2Rlc2V0OiB1c2UgbG9ja2RlcF9hc3NlcnRfaGVsZCAoRGFuaWVsIFZl
dHRlcikKLSBIb29rIHVwIHRvIERvY3VtZW50YXRpb24vZ3B1L2RybS1jbGllbnQucnN0IChEYW5p
ZWwgVmV0dGVyKQoKdjI6Ci0gQWRkIG1vZGVzZXRzIGFycmF5IHRvIGRybV9jbGllbnQgKERhbmll
bCBWZXR0ZXIpCi0gVXNlIGEgbmV3IGZpbGUgZm9yIHRoZSBtb2Rlc2V0IGNvZGUgKERhbmllbCBW
ZXR0ZXIpCi0gRmlsZSBoYXMgdG8gYmUgTUlUIGxpY2Vuc2VkIChFbW1hbnVlbCBWYWRvdCkKLSBB
ZGQgY29weXJpZ2h0cyBmcm9tIGRybV9mYl9oZWxwZXIuYwoKU2lnbmVkLW9mZi1ieTogTm9yYWxm
IFRyw7hubmVzIDxub3JhbGZAdHJvbm5lcy5vcmc+ClJldmlld2VkLWJ5OiBTYW0gUmF2bmJvcmcg
PHNhbUByYXZuYm9yZy5vcmc+Ci0tLQogRG9jdW1lbnRhdGlvbi9ncHUvZHJtLWNsaWVudC5yc3Qg
ICAgIHwgICAzICsKIERvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0ICAgICAgICAgICB8ICAgMyAr
CiBkcml2ZXJzL2dwdS9kcm0vTWFrZWZpbGUgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMv
Z3B1L2RybS9kcm1fY2xpZW50LmMgICAgICAgICB8ICAxMCArLQogZHJpdmVycy9ncHUvZHJtL2Ry
bV9jbGllbnRfbW9kZXNldC5jIHwgMTA0ICsrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2RybV9m
Yl9oZWxwZXIuYyAgICAgIHwgMzAxICsrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLQogaW5jbHVk
ZS9kcm0vZHJtX2NsaWVudC5oICAgICAgICAgICAgIHwgIDMwICsrKwogaW5jbHVkZS9kcm0vZHJt
X2ZiX2hlbHBlci5oICAgICAgICAgIHwgICA4IC0KIDggZmlsZXMgY2hhbmdlZCwgMjc0IGluc2Vy
dGlvbnMoKyksIDE4NyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dw
dS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2dw
dS9kcm0tY2xpZW50LnJzdCBiL0RvY3VtZW50YXRpb24vZ3B1L2RybS1jbGllbnQucnN0CmluZGV4
IDdlNjcyMDYzZTdlYi4uNThiNWExZDEyMTlkIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2dw
dS9kcm0tY2xpZW50LnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2dwdS9kcm0tY2xpZW50LnJzdApA
QCAtMTAsMyArMTAsNiBAQCBLZXJuZWwgY2xpZW50cwogCiAuLiBrZXJuZWwtZG9jOjogZHJpdmVy
cy9ncHUvZHJtL2RybV9jbGllbnQuYwogICAgOmV4cG9ydDoKKworLi4ga2VybmVsLWRvYzo6IGRy
aXZlcnMvZ3B1L2RybS9kcm1fY2xpZW50X21vZGVzZXQuYworICAgOmV4cG9ydDoKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0IGIvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5y
c3QKaW5kZXggNjZmMDVmNGU0NjlmLi45ZDQwMzhjNTAwMTMgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50
YXRpb24vZ3B1L3RvZG8ucnN0CisrKyBiL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0CkBAIC0y
ODksNiArMjg5LDkgQEAgZHJtX2ZiX2hlbHBlciB0YXNrcwogICB0aGVzZSBpZ3QgdGVzdHMgbmVl
ZCB0byBiZSBmaXhlZDoga21zX2ZiY29uX2ZidEBwc3IgYW5kCiAgIGttc19mYmNvbl9mYnRAcHNy
LXN1c3BlbmQuCiAKKy0gVGhlIG1heCBjb25uZWN0b3IgYXJndW1lbnQgZm9yIGRybV9mYl9oZWxw
ZXJfaW5pdCgpIGFuZAorICBkcm1fZmJfaGVscGVyX2ZiZGV2X3NldHVwKCkgaXNuJ3QgdXNlZCBh
bnltb3JlIGFuZCBjYW4gYmUgcmVtb3ZlZC4KKwogQ29yZSByZWZhY3RvcmluZ3MKID09PT09PT09
PT09PT09PT09CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZSBiL2RyaXZl
cnMvZ3B1L2RybS9NYWtlZmlsZQppbmRleCA0YTYzYzFmY2YzODkuLmQzNmZlYjRhNjIzMyAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9N
YWtlZmlsZQpAQCAtMTcsNyArMTcsNyBAQCBkcm0teSAgICAgICA6PQlkcm1fYXV0aC5vIGRybV9j
YWNoZS5vIFwKIAkJZHJtX3BsYW5lLm8gZHJtX2NvbG9yX21nbXQubyBkcm1fcHJpbnQubyBcCiAJ
CWRybV9kdW1iX2J1ZmZlcnMubyBkcm1fbW9kZV9jb25maWcubyBkcm1fdmJsYW5rLm8gXAogCQlk
cm1fc3luY29iai5vIGRybV9sZWFzZS5vIGRybV93cml0ZWJhY2subyBkcm1fY2xpZW50Lm8gXAot
CQlkcm1fYXRvbWljX3VhcGkubyBkcm1faGRjcC5vCisJCWRybV9jbGllbnRfbW9kZXNldC5vIGRy
bV9hdG9taWNfdWFwaS5vIGRybV9oZGNwLm8KIAogZHJtLSQoQ09ORklHX0RSTV9MRUdBQ1kpICs9
IGRybV9sZWdhY3lfbWlzYy5vIGRybV9idWZzLm8gZHJtX2NvbnRleHQubyBkcm1fZG1hLm8gZHJt
X3NjYXR0ZXIubyBkcm1fbG9jay5vCiBkcm0tJChDT05GSUdfRFJNX0xJQl9SQU5ET00pICs9IGxp
Yi9kcm1fcmFuZG9tLm8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fY2xpZW50LmMg
Yi9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudC5jCmluZGV4IGU3ODcwYTU0ZjQ5OC4uNDEwNTcy
ZjE0MjU3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9kcm1fY2xpZW50LmMKQEAgLTI3LDcgKzI3LDYgQEAKICAqIERPQzogb3Zl
cnZpZXcKICAqCiAgKiBUaGlzIGxpYnJhcnkgcHJvdmlkZXMgc3VwcG9ydCBmb3IgY2xpZW50cyBy
dW5uaW5nIGluIHRoZSBrZXJuZWwgbGlrZSBmYmRldiBhbmQgYm9vdHNwbGFzaC4KLSAqIEN1cnJl
bnRseSBpdCdzIG9ubHkgcGFydGlhbGx5IGltcGxlbWVudGVkLCBqdXN0IGVub3VnaCB0byBzdXBw
b3J0IGZiZGV2LgogICoKICAqIEdFTSBkcml2ZXJzIHdoaWNoIHByb3ZpZGUgYSBHRU0gYmFzZWQg
ZHVtYiBidWZmZXIgd2l0aCBhIHZpcnR1YWwgYWRkcmVzcyBhcmUgc3VwcG9ydGVkLgogICovCkBA
IC05MiwxNCArOTEsMjAgQEAgaW50IGRybV9jbGllbnRfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2LCBzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwKIAljbGllbnQtPm5hbWUgPSBuYW1l
OwogCWNsaWVudC0+ZnVuY3MgPSBmdW5jczsKIAotCXJldCA9IGRybV9jbGllbnRfb3BlbihjbGll
bnQpOworCXJldCA9IGRybV9jbGllbnRfbW9kZXNldF9jcmVhdGUoY2xpZW50KTsKIAlpZiAocmV0
KQogCQlnb3RvIGVycl9wdXRfbW9kdWxlOwogCisJcmV0ID0gZHJtX2NsaWVudF9vcGVuKGNsaWVu
dCk7CisJaWYgKHJldCkKKwkJZ290byBlcnJfZnJlZTsKKwogCWRybV9kZXZfZ2V0KGRldik7CiAK
IAlyZXR1cm4gMDsKIAorZXJyX2ZyZWU6CisJZHJtX2NsaWVudF9tb2Rlc2V0X2ZyZWUoY2xpZW50
KTsKIGVycl9wdXRfbW9kdWxlOgogCWlmIChmdW5jcykKIAkJbW9kdWxlX3B1dChmdW5jcy0+b3du
ZXIpOwpAQCAtMTQ4LDYgKzE1Myw3IEBAIHZvaWQgZHJtX2NsaWVudF9yZWxlYXNlKHN0cnVjdCBk
cm1fY2xpZW50X2RldiAqY2xpZW50KQogCiAJRFJNX0RFVl9ERUJVR19LTVMoZGV2LT5kZXYsICIl
c1xuIiwgY2xpZW50LT5uYW1lKTsKIAorCWRybV9jbGllbnRfbW9kZXNldF9mcmVlKGNsaWVudCk7
CiAJZHJtX2NsaWVudF9jbG9zZShjbGllbnQpOwogCWRybV9kZXZfcHV0KGRldik7CiAJaWYgKGNs
aWVudC0+ZnVuY3MpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rl
c2V0LmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi42Njc3MGVkMzI5OWUKLS0tIC9kZXYvbnVsbAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMKQEAgLTAsMCArMSwxMDQg
QEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKy8qCisgKiBDb3B5cmlnaHQgMjAx
OCBOb3JhbGYgVHLDuG5uZXMKKyAqIENvcHlyaWdodCAoYykgMjAwNi0yMDA5IFJlZCBIYXQgSW5j
LgorICogQ29weXJpZ2h0IChjKSAyMDA2LTIwMDggSW50ZWwgQ29ycG9yYXRpb24KKyAqICAgSmVz
c2UgQmFybmVzIDxqZXNzZS5iYXJuZXNAaW50ZWwuY29tPgorICogQ29weXJpZ2h0IChjKSAyMDA3
IERhdmUgQWlybGllIDxhaXJsaWVkQGxpbnV4LmllPgorICovCisKKyNpbmNsdWRlIDxsaW51eC9t
b2R1bGUuaD4KKyNpbmNsdWRlIDxsaW51eC9tdXRleC5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIu
aD4KKworI2luY2x1ZGUgPGRybS9kcm1fY2xpZW50Lmg+CisjaW5jbHVkZSA8ZHJtL2RybV9jcnRj
Lmg+CisjaW5jbHVkZSA8ZHJtL2RybV9kZXZpY2UuaD4KKworaW50IGRybV9jbGllbnRfbW9kZXNl
dF9jcmVhdGUoc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQpCit7CisJc3RydWN0IGRybV9k
ZXZpY2UgKmRldiA9IGNsaWVudC0+ZGV2OworCXVuc2lnbmVkIGludCBudW1fY3J0YyA9IGRldi0+
bW9kZV9jb25maWcubnVtX2NydGM7CisJdW5zaWduZWQgaW50IG1heF9jb25uZWN0b3JfY291bnQg
PSAxOworCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7CisJc3RydWN0IGRybV9jcnRjICpj
cnRjOworCXVuc2lnbmVkIGludCBpID0gMDsKKworCS8qIEFkZCB0ZXJtaW5hdGluZyB6ZXJvIGVu
dHJ5IHRvIGVuYWJsZSBpbmRleCBsZXNzIGl0ZXJhdGlvbiAqLworCWNsaWVudC0+bW9kZXNldHMg
PSBrY2FsbG9jKG51bV9jcnRjICsgMSwgc2l6ZW9mKCpjbGllbnQtPm1vZGVzZXRzKSwgR0ZQX0tF
Uk5FTCk7CisJaWYgKCFjbGllbnQtPm1vZGVzZXRzKQorCQlyZXR1cm4gLUVOT01FTTsKKworCW11
dGV4X2luaXQoJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CisKKwlkcm1fZm9yX2VhY2hfY3J0Yyhj
cnRjLCBkZXYpCisJCWNsaWVudC0+bW9kZXNldHNbaSsrXS5jcnRjID0gY3J0YzsKKworCS8qIENs
b25pbmcgaXMgb25seSBzdXBwb3J0ZWQgaW4gdGhlIHNpbmdsZSBjcnRjIGNhc2UuICovCisJaWYg
KG51bV9jcnRjID09IDEpCisJCW1heF9jb25uZWN0b3JfY291bnQgPSBEUk1fQ0xJRU5UX01BWF9D
TE9ORURfQ09OTkVDVE9SUzsKKworCWZvciAobW9kZXNldCA9IGNsaWVudC0+bW9kZXNldHM7IG1v
ZGVzZXQtPmNydGM7IG1vZGVzZXQrKykgeworCQltb2Rlc2V0LT5jb25uZWN0b3JzID0ga2NhbGxv
YyhtYXhfY29ubmVjdG9yX2NvdW50LAorCQkJCQkgICAgICBzaXplb2YoKm1vZGVzZXQtPmNvbm5l
Y3RvcnMpLCBHRlBfS0VSTkVMKTsKKwkJaWYgKCFtb2Rlc2V0LT5jb25uZWN0b3JzKQorCQkJZ290
byBlcnJfZnJlZTsKKwl9CisKKwlyZXR1cm4gMDsKKworZXJyX2ZyZWU6CisJZHJtX2NsaWVudF9t
b2Rlc2V0X2ZyZWUoY2xpZW50KTsKKworCXJldHVybiAtRU5PTUVNOworfQorCit2b2lkIGRybV9j
bGllbnRfbW9kZXNldF9yZWxlYXNlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50KQorewor
CXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7CisJdW5zaWduZWQgaW50IGk7CisKKwlkcm1f
Y2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgY2xpZW50KSB7CisJCWRybV9tb2RlX2Rl
c3Ryb3koY2xpZW50LT5kZXYsIG1vZGVzZXQtPm1vZGUpOworCQltb2Rlc2V0LT5tb2RlID0gTlVM
TDsKKwkJbW9kZXNldC0+ZmIgPSBOVUxMOworCisJCWZvciAoaSA9IDA7IGkgPCBtb2Rlc2V0LT5u
dW1fY29ubmVjdG9yczsgaSsrKSB7CisJCQlkcm1fY29ubmVjdG9yX3B1dChtb2Rlc2V0LT5jb25u
ZWN0b3JzW2ldKTsKKwkJCW1vZGVzZXQtPmNvbm5lY3RvcnNbaV0gPSBOVUxMOworCQl9CisJCW1v
ZGVzZXQtPm51bV9jb25uZWN0b3JzID0gMDsKKwl9Cit9CisvKiBUT0RPOiBSZW1vdmUgZXhwb3J0
IHdoZW4gbW9kZXNldCBjb2RlIGhhcyBiZWVuIG1vdmVkIG92ZXIgKi8KK0VYUE9SVF9TWU1CT0wo
ZHJtX2NsaWVudF9tb2Rlc2V0X3JlbGVhc2UpOworCit2b2lkIGRybV9jbGllbnRfbW9kZXNldF9m
cmVlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50KQoreworCXN0cnVjdCBkcm1fbW9kZV9z
ZXQgKm1vZGVzZXQ7CisKKwltdXRleF9sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOworCisJ
ZHJtX2NsaWVudF9tb2Rlc2V0X3JlbGVhc2UoY2xpZW50KTsKKworCWRybV9jbGllbnRfZm9yX2Vh
Y2hfbW9kZXNldChtb2Rlc2V0LCBjbGllbnQpCisJCWtmcmVlKG1vZGVzZXQtPmNvbm5lY3RvcnMp
OworCisJbXV0ZXhfdW5sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOworCisJbXV0ZXhfZGVz
dHJveSgmY2xpZW50LT5tb2Rlc2V0X211dGV4KTsKKwlrZnJlZShjbGllbnQtPm1vZGVzZXRzKTsK
K30KKworc3RydWN0IGRybV9tb2RlX3NldCAqZHJtX2NsaWVudF9maW5kX21vZGVzZXQoc3RydWN0
IGRybV9jbGllbnRfZGV2ICpjbGllbnQsIHN0cnVjdCBkcm1fY3J0YyAqY3J0YykKK3sKKwlzdHJ1
Y3QgZHJtX21vZGVfc2V0ICptb2Rlc2V0OworCisJZHJtX2NsaWVudF9mb3JfZWFjaF9tb2Rlc2V0
KG1vZGVzZXQsIGNsaWVudCkKKwkJaWYgKG1vZGVzZXQtPmNydGMgPT0gY3J0YykKKwkJCXJldHVy
biBtb2Rlc2V0OworCisJcmV0dXJuIE5VTEw7Cit9CisvKiBUT0RPOiBSZW1vdmUgZXhwb3J0IHdo
ZW4gbW9kZXNldCBjb2RlIGhhcyBiZWVuIG1vdmVkIG92ZXIgKi8KK0VYUE9SVF9TWU1CT0woZHJt
X2NsaWVudF9maW5kX21vZGVzZXQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV9m
Yl9oZWxwZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fZmJfaGVscGVyLmMKaW5kZXggM2Y0Y2I2
NmM3ZDY1Li5iOWI3YzA2Y2JjNGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fZmJf
aGVscGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2RybV9mYl9oZWxwZXIuYwpAQCAtMzIyLDEz
ICszMjIsMTEgQEAgaW50IGRybV9mYl9oZWxwZXJfZGVidWdfZW50ZXIoc3RydWN0IGZiX2luZm8g
KmluZm8pCiB7CiAJc3RydWN0IGRybV9mYl9oZWxwZXIgKmhlbHBlciA9IGluZm8tPnBhcjsKIAlj
b25zdCBzdHJ1Y3QgZHJtX2NydGNfaGVscGVyX2Z1bmNzICpmdW5jczsKLQlpbnQgaTsKKwlzdHJ1
Y3QgZHJtX21vZGVfc2V0ICptb2RlX3NldDsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkoaGVscGVy
LCAma2VybmVsX2ZiX2hlbHBlcl9saXN0LCBrZXJuZWxfZmJfbGlzdCkgewotCQlmb3IgKGkgPSAw
OyBpIDwgaGVscGVyLT5jcnRjX2NvdW50OyBpKyspIHsKLQkJCXN0cnVjdCBkcm1fbW9kZV9zZXQg
Km1vZGVfc2V0ID0KLQkJCQkmaGVscGVyLT5jcnRjX2luZm9baV0ubW9kZV9zZXQ7Ci0KKwkJbXV0
ZXhfbG9jaygmaGVscGVyLT5jbGllbnQubW9kZXNldF9tdXRleCk7CisJCWRybV9jbGllbnRfZm9y
X2VhY2hfbW9kZXNldChtb2RlX3NldCwgJmhlbHBlci0+Y2xpZW50KSB7CiAJCQlpZiAoIW1vZGVf
c2V0LT5jcnRjLT5lbmFibGVkKQogCQkJCWNvbnRpbnVlOwogCkBAIC0zNDUsNiArMzQzLDcgQEAg
aW50IGRybV9mYl9oZWxwZXJfZGVidWdfZW50ZXIoc3RydWN0IGZiX2luZm8gKmluZm8pCiAJCQkJ
CQkgICAgbW9kZV9zZXQtPnksCiAJCQkJCQkgICAgRU5URVJfQVRPTUlDX01PREVfU0VUKTsKIAkJ
fQorCQltdXRleF91bmxvY2soJmhlbHBlci0+Y2xpZW50Lm1vZGVzZXRfbXV0ZXgpOwogCX0KIAog
CXJldHVybiAwOwpAQCAtMzU4LDE0ICszNTcsMTQgQEAgRVhQT1JUX1NZTUJPTChkcm1fZmJfaGVs
cGVyX2RlYnVnX2VudGVyKTsKIGludCBkcm1fZmJfaGVscGVyX2RlYnVnX2xlYXZlKHN0cnVjdCBm
Yl9pbmZvICppbmZvKQogewogCXN0cnVjdCBkcm1fZmJfaGVscGVyICpoZWxwZXIgPSBpbmZvLT5w
YXI7CisJc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQgPSAmaGVscGVyLT5jbGllbnQ7CiAJ
c3RydWN0IGRybV9jcnRjICpjcnRjOwogCWNvbnN0IHN0cnVjdCBkcm1fY3J0Y19oZWxwZXJfZnVu
Y3MgKmZ1bmNzOworCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0OwogCXN0cnVjdCBkcm1f
ZnJhbWVidWZmZXIgKmZiOwotCWludCBpOwotCi0JZm9yIChpID0gMDsgaSA8IGhlbHBlci0+Y3J0
Y19jb3VudDsgaSsrKSB7Ci0JCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0ID0gJmhlbHBl
ci0+Y3J0Y19pbmZvW2ldLm1vZGVfc2V0OwogCisJbXV0ZXhfbG9jaygmY2xpZW50LT5tb2Rlc2V0
X211dGV4KTsKKwlkcm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZV9zZXQsIGNsaWVudCkg
ewogCQljcnRjID0gbW9kZV9zZXQtPmNydGM7CiAJCWlmIChkcm1fZHJ2X3VzZXNfYXRvbWljX21v
ZGVzZXQoY3J0Yy0+ZGV2KSkKIAkJCWNvbnRpbnVlOwpAQCAtMzg4LDYgKzM4Nyw3IEBAIGludCBk
cm1fZmJfaGVscGVyX2RlYnVnX2xlYXZlKHN0cnVjdCBmYl9pbmZvICppbmZvKQogCQlmdW5jcy0+
bW9kZV9zZXRfYmFzZV9hdG9taWMobW9kZV9zZXQtPmNydGMsIGZiLCBjcnRjLT54LAogCQkJCQkg
ICAgY3J0Yy0+eSwgTEVBVkVfQVRPTUlDX01PREVfU0VUKTsKIAl9CisJbXV0ZXhfdW5sb2NrKCZj
bGllbnQtPm1vZGVzZXRfbXV0ZXgpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC00MzgsMTIgKzQzOCwx
NCBAQCBzdGF0aWMgYm9vbCBkcm1fZmJfaGVscGVyX3BhbmVsX3JvdGF0aW9uKHN0cnVjdCBkcm1f
bW9kZV9zZXQgKm1vZGVzZXQsCiAKIHN0YXRpYyBpbnQgcmVzdG9yZV9mYmRldl9tb2RlX2F0b21p
YyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLCBib29sIGFjdGl2ZSkKIHsKKwlzdHJ1
Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9oZWxwZXItPmNsaWVudDsKIAlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gZmJfaGVscGVyLT5kZXY7CiAJc3RydWN0IGRybV9wbGFuZV9zdGF0
ZSAqcGxhbmVfc3RhdGU7CiAJc3RydWN0IGRybV9wbGFuZSAqcGxhbmU7CiAJc3RydWN0IGRybV9h
dG9taWNfc3RhdGUgKnN0YXRlOwotCWludCBpLCByZXQ7CiAJc3RydWN0IGRybV9tb2Rlc2V0X2Fj
cXVpcmVfY3R4IGN0eDsKKwlzdHJ1Y3QgZHJtX21vZGVfc2V0ICptb2RlX3NldDsKKwlpbnQgcmV0
OwogCiAJZHJtX21vZGVzZXRfYWNxdWlyZV9pbml0KCZjdHgsIDApOwogCkBAIC00NzMsOCArNDc1
LDcgQEAgc3RhdGljIGludCByZXN0b3JlX2ZiZGV2X21vZGVfYXRvbWljKHN0cnVjdCBkcm1fZmJf
aGVscGVyICpmYl9oZWxwZXIsIGJvb2wgYWN0aXYKIAkJCWdvdG8gb3V0X3N0YXRlOwogCX0KIAot
CWZvciAoaSA9IDA7IGkgPCBmYl9oZWxwZXItPmNydGNfY291bnQ7IGkrKykgewotCQlzdHJ1Y3Qg
ZHJtX21vZGVfc2V0ICptb2RlX3NldCA9ICZmYl9oZWxwZXItPmNydGNfaW5mb1tpXS5tb2RlX3Nl
dDsKKwlkcm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZV9zZXQsIGNsaWVudCkgewogCQlz
dHJ1Y3QgZHJtX3BsYW5lICpwcmltYXJ5ID0gbW9kZV9zZXQtPmNydGMtPnByaW1hcnk7CiAJCXVu
c2lnbmVkIGludCByb3RhdGlvbjsKIApAQCAtNTIyLDkgKzUyMywxMSBAQCBzdGF0aWMgaW50IHJl
c3RvcmVfZmJkZXZfbW9kZV9hdG9taWMoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwg
Ym9vbCBhY3RpdgogCiBzdGF0aWMgaW50IHJlc3RvcmVfZmJkZXZfbW9kZV9sZWdhY3koc3RydWN0
IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIHsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNs
aWVudCA9ICZmYl9oZWxwZXItPmNsaWVudDsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZmJf
aGVscGVyLT5kZXY7CisJc3RydWN0IGRybV9tb2RlX3NldCAqbW9kZV9zZXQ7CiAJc3RydWN0IGRy
bV9wbGFuZSAqcGxhbmU7Ci0JaW50IGksIHJldCA9IDA7CisJaW50IHJldCA9IDA7CiAKIAlkcm1f
bW9kZXNldF9sb2NrX2FsbChmYl9oZWxwZXItPmRldik7CiAJZHJtX2Zvcl9lYWNoX3BsYW5lKHBs
YW5lLCBkZXYpIHsKQEAgLTUzNyw4ICs1NDAsNyBAQCBzdGF0aWMgaW50IHJlc3RvcmVfZmJkZXZf
bW9kZV9sZWdhY3koc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIAkJCQkJCSAgICBE
Uk1fTU9ERV9ST1RBVEVfMCk7CiAJfQogCi0JZm9yIChpID0gMDsgaSA8IGZiX2hlbHBlci0+Y3J0
Y19jb3VudDsgaSsrKSB7Ci0JCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0ID0gJmZiX2hl
bHBlci0+Y3J0Y19pbmZvW2ldLm1vZGVfc2V0OworCWRybV9jbGllbnRfZm9yX2VhY2hfbW9kZXNl
dChtb2RlX3NldCwgY2xpZW50KSB7CiAJCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IG1vZGVfc2V0
LT5jcnRjOwogCiAJCWlmIChjcnRjLT5mdW5jcy0+Y3Vyc29yX3NldDIpIHsKQEAgLTU2NCwxMSAr
NTY2LDE2IEBAIHN0YXRpYyBpbnQgcmVzdG9yZV9mYmRldl9tb2RlX2xlZ2FjeShzdHJ1Y3QgZHJt
X2ZiX2hlbHBlciAqZmJfaGVscGVyKQogc3RhdGljIGludCByZXN0b3JlX2ZiZGV2X21vZGVfZm9y
Y2Uoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIHsKIAlzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2ID0gZmJfaGVscGVyLT5kZXY7CisJaW50IHJldDsKIAorCW11dGV4X2xvY2soJmZiX2hl
bHBlci0+Y2xpZW50Lm1vZGVzZXRfbXV0ZXgpOwogCWlmIChkcm1fZHJ2X3VzZXNfYXRvbWljX21v
ZGVzZXQoZGV2KSkKLQkJcmV0dXJuIHJlc3RvcmVfZmJkZXZfbW9kZV9hdG9taWMoZmJfaGVscGVy
LCB0cnVlKTsKKwkJcmV0ID0gcmVzdG9yZV9mYmRldl9tb2RlX2F0b21pYyhmYl9oZWxwZXIsIHRy
dWUpOwogCWVsc2UKLQkJcmV0dXJuIHJlc3RvcmVfZmJkZXZfbW9kZV9sZWdhY3koZmJfaGVscGVy
KTsKKwkJcmV0ID0gcmVzdG9yZV9mYmRldl9tb2RlX2xlZ2FjeShmYl9oZWxwZXIpOworCW11dGV4
X3VubG9jaygmZmJfaGVscGVyLT5jbGllbnQubW9kZXNldF9tdXRleCk7CisKKwlyZXR1cm4gcmV0
OwogfQogCiBzdGF0aWMgaW50IHJlc3RvcmVfZmJkZXZfbW9kZShzdHJ1Y3QgZHJtX2ZiX2hlbHBl
ciAqZmJfaGVscGVyKQpAQCAtNjg3LDE1ICs2OTQsMTQgQEAgc3RhdGljIHN0cnVjdCBzeXNycV9r
ZXlfb3Agc3lzcnFfZHJtX2ZiX2hlbHBlcl9yZXN0b3JlX29wID0geyB9OwogCiBzdGF0aWMgdm9p
ZCBkcG1zX2xlZ2FjeShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLCBpbnQgZHBtc19t
b2RlKQogeworCXN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50ID0gJmZiX2hlbHBlci0+Y2xp
ZW50OwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBmYl9oZWxwZXItPmRldjsKIAlzdHJ1Y3Qg
ZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7
Ci0JaW50IGksIGo7CisJaW50IGo7CiAKIAlkcm1fbW9kZXNldF9sb2NrX2FsbChkZXYpOwotCWZv
ciAoaSA9IDA7IGkgPCBmYl9oZWxwZXItPmNydGNfY291bnQ7IGkrKykgewotCQltb2Rlc2V0ID0g
JmZiX2hlbHBlci0+Y3J0Y19pbmZvW2ldLm1vZGVfc2V0OwotCisJZHJtX2NsaWVudF9mb3JfZWFj
aF9tb2Rlc2V0KG1vZGVzZXQsIGNsaWVudCkgewogCQlpZiAoIW1vZGVzZXQtPmNydGMtPmVuYWJs
ZWQpCiAJCQljb250aW51ZTsKIApAQCAtNzEyLDYgKzcxOCw3IEBAIHN0YXRpYyB2b2lkIGRwbXNf
bGVnYWN5KHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsIGludCBkcG1zX21vZGUpCiBz
dGF0aWMgdm9pZCBkcm1fZmJfaGVscGVyX2RwbXMoc3RydWN0IGZiX2luZm8gKmluZm8sIGludCBk
cG1zX21vZGUpCiB7CiAJc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciA9IGluZm8tPnBh
cjsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9oZWxwZXItPmNsaWVudDsK
IAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZmJfaGVscGVyLT5kZXY7CiAKIAkvKgpAQCAtNzIx
LDEwICs3MjgsMTIgQEAgc3RhdGljIHZvaWQgZHJtX2ZiX2hlbHBlcl9kcG1zKHN0cnVjdCBmYl9p
bmZvICppbmZvLCBpbnQgZHBtc19tb2RlKQogCWlmICghZHJtX21hc3Rlcl9pbnRlcm5hbF9hY3F1
aXJlKGRldikpCiAJCWdvdG8gdW5sb2NrOwogCisJbXV0ZXhfbG9jaygmY2xpZW50LT5tb2Rlc2V0
X211dGV4KTsKIAlpZiAoZHJtX2Rydl91c2VzX2F0b21pY19tb2Rlc2V0KGRldikpCiAJCXJlc3Rv
cmVfZmJkZXZfbW9kZV9hdG9taWMoZmJfaGVscGVyLCBkcG1zX21vZGUgPT0gRFJNX01PREVfRFBN
U19PTik7CiAJZWxzZQogCQlkcG1zX2xlZ2FjeShmYl9oZWxwZXIsIGRwbXNfbW9kZSk7CisJbXV0
ZXhfdW5sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOwogCiAJZHJtX21hc3Rlcl9pbnRlcm5h
bF9yZWxlYXNlKGRldik7CiB1bmxvY2s6CkBAIC03NjcsNDMgKzc3Niw2IEBAIGludCBkcm1fZmJf
aGVscGVyX2JsYW5rKGludCBibGFuaywgc3RydWN0IGZiX2luZm8gKmluZm8pCiB9CiBFWFBPUlRf
U1lNQk9MKGRybV9mYl9oZWxwZXJfYmxhbmspOwogCi1zdGF0aWMgdm9pZCBkcm1fZmJfaGVscGVy
X21vZGVzZXRfcmVsZWFzZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyLAotCQkJCQkgIHN0
cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQpCi17Ci0JaW50IGk7Ci0KLQlmb3IgKGkgPSAwOyBp
IDwgbW9kZXNldC0+bnVtX2Nvbm5lY3RvcnM7IGkrKykgewotCQlkcm1fY29ubmVjdG9yX3B1dCht
b2Rlc2V0LT5jb25uZWN0b3JzW2ldKTsKLQkJbW9kZXNldC0+Y29ubmVjdG9yc1tpXSA9IE5VTEw7
Ci0JfQotCW1vZGVzZXQtPm51bV9jb25uZWN0b3JzID0gMDsKLQotCWRybV9tb2RlX2Rlc3Ryb3ko
aGVscGVyLT5kZXYsIG1vZGVzZXQtPm1vZGUpOwotCW1vZGVzZXQtPm1vZGUgPSBOVUxMOwotCi0J
LyogRklYTUUgc2hvdWxkIGhvbGQgYSByZWY/ICovCi0JbW9kZXNldC0+ZmIgPSBOVUxMOwotfQot
Ci1zdGF0aWMgdm9pZCBkcm1fZmJfaGVscGVyX2NydGNfZnJlZShzdHJ1Y3QgZHJtX2ZiX2hlbHBl
ciAqaGVscGVyKQotewotCWludCBpOwotCi0JZm9yIChpID0gMDsgaSA8IGhlbHBlci0+Y29ubmVj
dG9yX2NvdW50OyBpKyspIHsKLQkJZHJtX2Nvbm5lY3Rvcl9wdXQoaGVscGVyLT5jb25uZWN0b3Jf
aW5mb1tpXS0+Y29ubmVjdG9yKTsKLQkJa2ZyZWUoaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXSk7
Ci0JfQotCWtmcmVlKGhlbHBlci0+Y29ubmVjdG9yX2luZm8pOwotCi0JZm9yIChpID0gMDsgaSA8
IGhlbHBlci0+Y3J0Y19jb3VudDsgaSsrKSB7Ci0JCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVz
ZXQgPSAmaGVscGVyLT5jcnRjX2luZm9baV0ubW9kZV9zZXQ7Ci0KLQkJZHJtX2ZiX2hlbHBlcl9t
b2Rlc2V0X3JlbGVhc2UoaGVscGVyLCBtb2Rlc2V0KTsKLQkJa2ZyZWUobW9kZXNldC0+Y29ubmVj
dG9ycyk7Ci0JfQotCWtmcmVlKGhlbHBlci0+Y3J0Y19pbmZvKTsKLX0KLQogc3RhdGljIHZvaWQg
ZHJtX2ZiX2hlbHBlcl9yZXN1bWVfd29ya2VyKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIHsK
IAlzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVj
dCBkcm1fZmJfaGVscGVyLApAQCAtODgyLDcgKzg1NCw3IEBAIEVYUE9SVF9TWU1CT0woZHJtX2Zi
X2hlbHBlcl9wcmVwYXJlKTsKICAqIGRybV9mYl9oZWxwZXJfaW5pdCAtIGluaXRpYWxpemUgYSAm
c3RydWN0IGRybV9mYl9oZWxwZXIKICAqIEBkZXY6IGRybSBkZXZpY2UKICAqIEBmYl9oZWxwZXI6
IGRyaXZlci1hbGxvY2F0ZWQgZmJkZXYgaGVscGVyIHN0cnVjdHVyZSB0byBpbml0aWFsaXplCi0g
KiBAbWF4X2Nvbm5fY291bnQ6IG1heCBjb25uZWN0b3IgY291bnQKKyAqIEBtYXhfY29ubl9jb3Vu
dDogbWF4IGNvbm5lY3RvciBjb3VudCAobm90IHVzZWQpCiAgKgogICogVGhpcyBhbGxvY2F0ZXMg
dGhlIHN0cnVjdHVyZXMgZm9yIHRoZSBmYmRldiBoZWxwZXIgd2l0aCB0aGUgZ2l2ZW4gbGltaXRz
LgogICogTm90ZSB0aGF0IHRoaXMgd29uJ3QgeWV0IHRvdWNoIHRoZSBoYXJkd2FyZSAodGhyb3Vn
aCB0aGUgZHJpdmVyIGludGVyZmFjZXMpCkBAIC04OTgsNTMgKzg3MCwzNiBAQCBpbnQgZHJtX2Zi
X2hlbHBlcl9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCSAgICAgICBzdHJ1Y3QgZHJt
X2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCQkgICAgICAgaW50IG1heF9jb25uX2NvdW50KQogewot
CXN0cnVjdCBkcm1fY3J0YyAqY3J0YzsKLQlzdHJ1Y3QgZHJtX21vZGVfY29uZmlnICpjb25maWcg
PSAmZGV2LT5tb2RlX2NvbmZpZzsKLQlpbnQgaTsKKwlpbnQgcmV0OwogCiAJaWYgKCFkcm1fZmJk
ZXZfZW11bGF0aW9uKSB7CiAJCWRldi0+ZmJfaGVscGVyID0gZmJfaGVscGVyOwogCQlyZXR1cm4g
MDsKIAl9CiAKLQlpZiAoIW1heF9jb25uX2NvdW50KQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCWZi
X2hlbHBlci0+Y3J0Y19pbmZvID0ga2NhbGxvYyhjb25maWctPm51bV9jcnRjLCBzaXplb2Yoc3Ry
dWN0IGRybV9mYl9oZWxwZXJfY3J0YyksIEdGUF9LRVJORUwpOwotCWlmICghZmJfaGVscGVyLT5j
cnRjX2luZm8pCi0JCXJldHVybiAtRU5PTUVNOwotCi0JZmJfaGVscGVyLT5jcnRjX2NvdW50ID0g
Y29uZmlnLT5udW1fY3J0YzsKLQlmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvID0ga2NhbGxvYyhk
ZXYtPm1vZGVfY29uZmlnLm51bV9jb25uZWN0b3IsIHNpemVvZihzdHJ1Y3QgZHJtX2ZiX2hlbHBl
cl9jb25uZWN0b3IgKiksIEdGUF9LRVJORUwpOwotCWlmICghZmJfaGVscGVyLT5jb25uZWN0b3Jf
aW5mbykgewotCQlrZnJlZShmYl9oZWxwZXItPmNydGNfaW5mbyk7Ci0JCXJldHVybiAtRU5PTUVN
OworCS8qCisJICogSWYgdGhpcyBpcyBub3QgdGhlIGdlbmVyaWMgZmJkZXYgY2xpZW50LCBpbml0
aWFsaXplIGEgZHJtX2NsaWVudAorCSAqIHdpdGhvdXQgY2FsbGJhY2tzIHNvIHdlIGNhbiB1c2Ug
dGhlIG1vZGVzZXRzLgorCSAqLworCWlmICghZmJfaGVscGVyLT5jbGllbnQuZnVuY3MpIHsKKwkJ
cmV0ID0gZHJtX2NsaWVudF9pbml0KGRldiwgJmZiX2hlbHBlci0+Y2xpZW50LCAiZHJtX2ZiX2hl
bHBlciIsIE5VTEwpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKIAl9CisKKwlmYl9oZWxw
ZXItPmNvbm5lY3Rvcl9pbmZvID0ga2NhbGxvYyhkZXYtPm1vZGVfY29uZmlnLm51bV9jb25uZWN0
b3IsIHNpemVvZihzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jb25uZWN0b3IgKiksIEdGUF9LRVJORUwp
OworCWlmICghZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mbykKKwkJZ290byBvdXRfZnJlZTsKKwog
CWZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9fYWxsb2NfY291bnQgPSBkZXYtPm1vZGVfY29uZmln
Lm51bV9jb25uZWN0b3I7CiAJZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQgPSAwOwogCi0JZm9y
IChpID0gMDsgaSA8IGZiX2hlbHBlci0+Y3J0Y19jb3VudDsgaSsrKSB7Ci0JCWZiX2hlbHBlci0+
Y3J0Y19pbmZvW2ldLm1vZGVfc2V0LmNvbm5lY3RvcnMgPQotCQkJa2NhbGxvYyhtYXhfY29ubl9j
b3VudCwKLQkJCQlzaXplb2Yoc3RydWN0IGRybV9jb25uZWN0b3IgKiksCi0JCQkJR0ZQX0tFUk5F
TCk7Ci0KLQkJaWYgKCFmYl9oZWxwZXItPmNydGNfaW5mb1tpXS5tb2RlX3NldC5jb25uZWN0b3Jz
KQotCQkJZ290byBvdXRfZnJlZTsKLQkJZmJfaGVscGVyLT5jcnRjX2luZm9baV0ubW9kZV9zZXQu
bnVtX2Nvbm5lY3RvcnMgPSAwOwotCX0KLQotCWkgPSAwOwotCWRybV9mb3JfZWFjaF9jcnRjKGNy
dGMsIGRldikgewotCQlmYl9oZWxwZXItPmNydGNfaW5mb1tpXS5tb2RlX3NldC5jcnRjID0gY3J0
YzsKLQkJaSsrOwotCX0KLQogCWRldi0+ZmJfaGVscGVyID0gZmJfaGVscGVyOwogCiAJcmV0dXJu
IDA7CiBvdXRfZnJlZToKLQlkcm1fZmJfaGVscGVyX2NydGNfZnJlZShmYl9oZWxwZXIpOworCWRy
bV9jbGllbnRfcmVsZWFzZSgmZmJfaGVscGVyLT5jbGllbnQpOworCiAJcmV0dXJuIC1FTk9NRU07
CiB9CiBFWFBPUlRfU1lNQk9MKGRybV9mYl9oZWxwZXJfaW5pdCk7CkBAIC0xMDIwLDYgKzk3NSw3
IEBAIEVYUE9SVF9TWU1CT0woZHJtX2ZiX2hlbHBlcl91bnJlZ2lzdGVyX2ZiaSk7CiB2b2lkIGRy
bV9mYl9oZWxwZXJfZmluaShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyKQogewogCXN0
cnVjdCBmYl9pbmZvICppbmZvOworCWludCBpOwogCiAJaWYgKCFmYl9oZWxwZXIpCiAJCXJldHVy
bjsKQEAgLTEwNDksOCArMTAwNSwxNSBAQCB2b2lkIGRybV9mYl9oZWxwZXJfZmluaShzdHJ1Y3Qg
ZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyKQogCW11dGV4X3VubG9jaygma2VybmVsX2ZiX2hlbHBl
cl9sb2NrKTsKIAogCW11dGV4X2Rlc3Ryb3koJmZiX2hlbHBlci0+bG9jayk7Ci0JZHJtX2ZiX2hl
bHBlcl9jcnRjX2ZyZWUoZmJfaGVscGVyKTsKIAorCWlmICghZmJfaGVscGVyLT5jbGllbnQuZnVu
Y3MpCisJCWRybV9jbGllbnRfcmVsZWFzZSgmZmJfaGVscGVyLT5jbGllbnQpOworCisJZm9yIChp
ID0gMDsgaSA8IGZiX2hlbHBlci0+Y29ubmVjdG9yX2NvdW50OyBpKyspIHsKKwkJZHJtX2Nvbm5l
Y3Rvcl9wdXQoZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXS0+Y29ubmVjdG9yKTsKKwkJa2Zy
ZWUoZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXSk7CisJfQorCWtmcmVlKGZiX2hlbHBlci0+
Y29ubmVjdG9yX2luZm8pOwogfQogRVhQT1JUX1NZTUJPTChkcm1fZmJfaGVscGVyX2ZpbmkpOwog
CkBAIC0xMzk1LDEzICsxMzU4LDE0IEBAIHN0YXRpYyBpbnQgc2V0Y21hcF9wc2V1ZG9fcGFsZXR0
ZShzdHJ1Y3QgZmJfY21hcCAqY21hcCwgc3RydWN0IGZiX2luZm8gKmluZm8pCiBzdGF0aWMgaW50
IHNldGNtYXBfbGVnYWN5KHN0cnVjdCBmYl9jbWFwICpjbWFwLCBzdHJ1Y3QgZmJfaW5mbyAqaW5m
bykKIHsKIAlzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyID0gaW5mby0+cGFyOworCXN0
cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7CiAJc3RydWN0IGRybV9jcnRjICpjcnRjOwogCXUx
NiAqciwgKmcsICpiOwotCWludCBpLCByZXQgPSAwOworCWludCByZXQgPSAwOwogCiAJZHJtX21v
ZGVzZXRfbG9ja19hbGwoZmJfaGVscGVyLT5kZXYpOwotCWZvciAoaSA9IDA7IGkgPCBmYl9oZWxw
ZXItPmNydGNfY291bnQ7IGkrKykgewotCQljcnRjID0gZmJfaGVscGVyLT5jcnRjX2luZm9baV0u
bW9kZV9zZXQuY3J0YzsKKwlkcm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgJmZi
X2hlbHBlci0+Y2xpZW50KSB7CisJCWNydGMgPSBtb2Rlc2V0LT5jcnRjOwogCQlpZiAoIWNydGMt
PmZ1bmNzLT5nYW1tYV9zZXQgfHwgIWNydGMtPmdhbW1hX3NpemUpCiAJCQlyZXR1cm4gLUVJTlZB
TDsKIApAQCAtMTQ3NywxMCArMTQ0MSwxMSBAQCBzdGF0aWMgaW50IHNldGNtYXBfYXRvbWljKHN0
cnVjdCBmYl9jbWFwICpjbWFwLCBzdHJ1Y3QgZmJfaW5mbyAqaW5mbykKIAlzdHJ1Y3QgZHJtX21v
ZGVzZXRfYWNxdWlyZV9jdHggY3R4OwogCXN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZTsKIAlzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGU7CisJc3RydWN0IGRybV9tb2RlX3Nl
dCAqbW9kZXNldDsKIAlzdHJ1Y3QgZHJtX2NydGMgKmNydGM7CiAJdTE2ICpyLCAqZywgKmI7Ci0J
aW50IGksIHJldCA9IDA7CiAJYm9vbCByZXBsYWNlZDsKKwlpbnQgcmV0ID0gMDsKIAogCWRybV9t
b2Rlc2V0X2FjcXVpcmVfaW5pdCgmY3R4LCAwKTsKIApAQCAtMTQ5Miw4ICsxNDU3LDggQEAgc3Rh
dGljIGludCBzZXRjbWFwX2F0b21pYyhzdHJ1Y3QgZmJfY21hcCAqY21hcCwgc3RydWN0IGZiX2lu
Zm8gKmluZm8pCiAKIAlzdGF0ZS0+YWNxdWlyZV9jdHggPSAmY3R4OwogcmV0cnk6Ci0JZm9yIChp
ID0gMDsgaSA8IGZiX2hlbHBlci0+Y3J0Y19jb3VudDsgaSsrKSB7Ci0JCWNydGMgPSBmYl9oZWxw
ZXItPmNydGNfaW5mb1tpXS5tb2RlX3NldC5jcnRjOworCWRybV9jbGllbnRfZm9yX2VhY2hfbW9k
ZXNldChtb2Rlc2V0LCAmZmJfaGVscGVyLT5jbGllbnQpIHsKKwkJY3J0YyA9IG1vZGVzZXQtPmNy
dGM7CiAKIAkJaWYgKCFnYW1tYV9sdXQpCiAJCQlnYW1tYV9sdXQgPSBzZXRjbWFwX25ld19nYW1t
YV9sdXQoY3J0YywgY21hcCk7CkBAIC0xNTIxLDggKzE0ODYsOCBAQCBzdGF0aWMgaW50IHNldGNt
YXBfYXRvbWljKHN0cnVjdCBmYl9jbWFwICpjbWFwLCBzdHJ1Y3QgZmJfaW5mbyAqaW5mbykKIAlp
ZiAocmV0KQogCQlnb3RvIG91dF9zdGF0ZTsKIAotCWZvciAoaSA9IDA7IGkgPCBmYl9oZWxwZXIt
PmNydGNfY291bnQ7IGkrKykgewotCQljcnRjID0gZmJfaGVscGVyLT5jcnRjX2luZm9baV0ubW9k
ZV9zZXQuY3J0YzsKKwlkcm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgJmZiX2hl
bHBlci0+Y2xpZW50KSB7CisJCWNydGMgPSBtb2Rlc2V0LT5jcnRjOwogCiAJCXIgPSBjcnRjLT5n
YW1tYV9zdG9yZTsKIAkJZyA9IHIgKyBjcnRjLT5nYW1tYV9zaXplOwpAQCAtMTU3MiwxMiArMTUz
NywxNCBAQCBpbnQgZHJtX2ZiX2hlbHBlcl9zZXRjbWFwKHN0cnVjdCBmYl9jbWFwICpjbWFwLCBz
dHJ1Y3QgZmJfaW5mbyAqaW5mbykKIAkJZ290byB1bmxvY2s7CiAJfQogCisJbXV0ZXhfbG9jaygm
ZmJfaGVscGVyLT5jbGllbnQubW9kZXNldF9tdXRleCk7CiAJaWYgKGluZm8tPmZpeC52aXN1YWwg
PT0gRkJfVklTVUFMX1RSVUVDT0xPUikKIAkJcmV0ID0gc2V0Y21hcF9wc2V1ZG9fcGFsZXR0ZShj
bWFwLCBpbmZvKTsKIAllbHNlIGlmIChkcm1fZHJ2X3VzZXNfYXRvbWljX21vZGVzZXQoZmJfaGVs
cGVyLT5kZXYpKQogCQlyZXQgPSBzZXRjbWFwX2F0b21pYyhjbWFwLCBpbmZvKTsKIAllbHNlCiAJ
CXJldCA9IHNldGNtYXBfbGVnYWN5KGNtYXAsIGluZm8pOworCW11dGV4X3VubG9jaygmZmJfaGVs
cGVyLT5jbGllbnQubW9kZXNldF9tdXRleCk7CiAKIAlkcm1fbWFzdGVyX2ludGVybmFsX3JlbGVh
c2UoZGV2KTsKIHVubG9jazoKQEAgLTE2MDEsNyArMTU2OCw2IEBAIGludCBkcm1fZmJfaGVscGVy
X2lvY3RsKHN0cnVjdCBmYl9pbmZvICppbmZvLCB1bnNpZ25lZCBpbnQgY21kLAogewogCXN0cnVj
dCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIgPSBpbmZvLT5wYXI7CiAJc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IGZiX2hlbHBlci0+ZGV2OwotCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0
OwogCXN0cnVjdCBkcm1fY3J0YyAqY3J0YzsKIAlpbnQgcmV0ID0gMDsKIApAQCAtMTYyOSw4ICsx
NTk1LDcgQEAgaW50IGRybV9mYl9oZWxwZXJfaW9jdGwoc3RydWN0IGZiX2luZm8gKmluZm8sIHVu
c2lnbmVkIGludCBjbWQsCiAJCSAqIG1ha2UuIElmIHdlJ3JlIG5vdCBzbWFydCBlbm91Z2ggaGVy
ZSwgb25lIHNob3VsZAogCQkgKiBqdXN0IGNvbnNpZGVyIHN3aXRjaCB0aGUgdXNlcnNwYWNlIHRv
IEtNUy4KIAkJICovCi0JCW1vZGVfc2V0ID0gJmZiX2hlbHBlci0+Y3J0Y19pbmZvWzBdLm1vZGVf
c2V0OwotCQljcnRjID0gbW9kZV9zZXQtPmNydGM7CisJCWNydGMgPSBmYl9oZWxwZXItPmNsaWVu
dC5tb2Rlc2V0c1swXS5jcnRjOwogCiAJCS8qCiAJCSAqIE9ubHkgd2FpdCBmb3IgYSB2Ymxhbmsg
ZXZlbnQgaWYgdGhlIENSVEMgaXMKQEAgLTE4MjcsMTYgKzE3OTIsMTQgQEAgRVhQT1JUX1NZTUJP
TChkcm1fZmJfaGVscGVyX3NldF9wYXIpOwogCiBzdGF0aWMgdm9pZCBwYW5fc2V0KHN0cnVjdCBk
cm1fZmJfaGVscGVyICpmYl9oZWxwZXIsIGludCB4LCBpbnQgeSkKIHsKLQlpbnQgaTsKLQotCWZv
ciAoaSA9IDA7IGkgPCBmYl9oZWxwZXItPmNydGNfY291bnQ7IGkrKykgewotCQlzdHJ1Y3QgZHJt
X21vZGVfc2V0ICptb2RlX3NldDsKLQotCQltb2RlX3NldCA9ICZmYl9oZWxwZXItPmNydGNfaW5m
b1tpXS5tb2RlX3NldDsKKwlzdHJ1Y3QgZHJtX21vZGVfc2V0ICptb2RlX3NldDsKIAorCW11dGV4
X2xvY2soJmZiX2hlbHBlci0+Y2xpZW50Lm1vZGVzZXRfbXV0ZXgpOworCWRybV9jbGllbnRfZm9y
X2VhY2hfbW9kZXNldChtb2RlX3NldCwgJmZiX2hlbHBlci0+Y2xpZW50KSB7CiAJCW1vZGVfc2V0
LT54ID0geDsKIAkJbW9kZV9zZXQtPnkgPSB5OwogCX0KKwltdXRleF91bmxvY2soJmZiX2hlbHBl
ci0+Y2xpZW50Lm1vZGVzZXRfbXV0ZXgpOwogfQogCiBzdGF0aWMgaW50IHBhbl9kaXNwbGF5X2F0
b21pYyhzdHJ1Y3QgZmJfdmFyX3NjcmVlbmluZm8gKnZhciwKQEAgLTE4NDcsNyArMTgxMCw3IEBA
IHN0YXRpYyBpbnQgcGFuX2Rpc3BsYXlfYXRvbWljKHN0cnVjdCBmYl92YXJfc2NyZWVuaW5mbyAq
dmFyLAogCiAJcGFuX3NldChmYl9oZWxwZXIsIHZhci0+eG9mZnNldCwgdmFyLT55b2Zmc2V0KTsK
IAotCXJldCA9IHJlc3RvcmVfZmJkZXZfbW9kZV9hdG9taWMoZmJfaGVscGVyLCB0cnVlKTsKKwly
ZXQgPSByZXN0b3JlX2ZiZGV2X21vZGVfZm9yY2UoZmJfaGVscGVyKTsKIAlpZiAoIXJldCkgewog
CQlpbmZvLT52YXIueG9mZnNldCA9IHZhci0+eG9mZnNldDsKIAkJaW5mby0+dmFyLnlvZmZzZXQg
PSB2YXItPnlvZmZzZXQ7CkBAIC0xODYxLDE0ICsxODI0LDEzIEBAIHN0YXRpYyBpbnQgcGFuX2Rp
c3BsYXlfbGVnYWN5KHN0cnVjdCBmYl92YXJfc2NyZWVuaW5mbyAqdmFyLAogCQkJICAgICAgc3Ry
dWN0IGZiX2luZm8gKmluZm8pCiB7CiAJc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciA9
IGluZm8tPnBhcjsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9oZWxwZXIt
PmNsaWVudDsKIAlzdHJ1Y3QgZHJtX21vZGVfc2V0ICptb2Rlc2V0OwogCWludCByZXQgPSAwOwot
CWludCBpOwogCiAJZHJtX21vZGVzZXRfbG9ja19hbGwoZmJfaGVscGVyLT5kZXYpOwotCWZvciAo
aSA9IDA7IGkgPCBmYl9oZWxwZXItPmNydGNfY291bnQ7IGkrKykgewotCQltb2Rlc2V0ID0gJmZi
X2hlbHBlci0+Y3J0Y19pbmZvW2ldLm1vZGVfc2V0OwotCisJbXV0ZXhfbG9jaygmY2xpZW50LT5t
b2Rlc2V0X211dGV4KTsKKwlkcm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgY2xp
ZW50KSB7CiAJCW1vZGVzZXQtPnggPSB2YXItPnhvZmZzZXQ7CiAJCW1vZGVzZXQtPnkgPSB2YXIt
PnlvZmZzZXQ7CiAKQEAgLTE4ODAsNiArMTg0Miw3IEBAIHN0YXRpYyBpbnQgcGFuX2Rpc3BsYXlf
bGVnYWN5KHN0cnVjdCBmYl92YXJfc2NyZWVuaW5mbyAqdmFyLAogCQkJfQogCQl9CiAJfQorCW11
dGV4X3VubG9jaygmY2xpZW50LT5tb2Rlc2V0X211dGV4KTsKIAlkcm1fbW9kZXNldF91bmxvY2tf
YWxsKGZiX2hlbHBlci0+ZGV2KTsKIAogCXJldHVybiByZXQ7CkBAIC0xOTI2LDEwICsxODg5LDEy
IEBAIEVYUE9SVF9TWU1CT0woZHJtX2ZiX2hlbHBlcl9wYW5fZGlzcGxheSk7CiBzdGF0aWMgaW50
IGRybV9mYl9oZWxwZXJfc2luZ2xlX2ZiX3Byb2JlKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9o
ZWxwZXIsCiAJCQkJCSBpbnQgcHJlZmVycmVkX2JwcCkKIHsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9k
ZXYgKmNsaWVudCA9ICZmYl9oZWxwZXItPmNsaWVudDsKIAlpbnQgcmV0ID0gMDsKIAlpbnQgY3J0
Y19jb3VudCA9IDA7CiAJaW50IGk7CiAJc3RydWN0IGRybV9mYl9oZWxwZXJfc3VyZmFjZV9zaXpl
IHNpemVzOworCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0OwogCWludCBiZXN0X2RlcHRo
ID0gMDsKIAogCW1lbXNldCgmc2l6ZXMsIDAsIHNpemVvZihzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9z
dXJmYWNlX3NpemUpKTsKQEAgLTE5ODAsMTMgKzE5NDUsMTMgQEAgc3RhdGljIGludCBkcm1fZmJf
aGVscGVyX3NpbmdsZV9mYl9wcm9iZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAog
CSAqIHN1cHBvcnRzIFJHQkE1NTUxICgxNiBicHAsIGRlcHRoIDE1KSBidXQgbm90IFJHQjU2NSAo
MTYgYnBwLCBkZXB0aAogCSAqIDE2KSB3ZSBuZWVkIHRvIHNjYWxlIGRvd24gdGhlIGRlcHRoIG9m
IHRoZSBzaXplcyB3ZSByZXF1ZXN0LgogCSAqLwotCWZvciAoaSA9IDA7IGkgPCBmYl9oZWxwZXIt
PmNydGNfY291bnQ7IGkrKykgewotCQlzdHJ1Y3QgZHJtX21vZGVfc2V0ICptb2RlX3NldCA9ICZm
Yl9oZWxwZXItPmNydGNfaW5mb1tpXS5tb2RlX3NldDsKKwltdXRleF9sb2NrKCZjbGllbnQtPm1v
ZGVzZXRfbXV0ZXgpOworCWRybV9jbGllbnRfZm9yX2VhY2hfbW9kZXNldChtb2RlX3NldCwgY2xp
ZW50KSB7CiAJCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IG1vZGVfc2V0LT5jcnRjOwogCQlzdHJ1
Y3QgZHJtX3BsYW5lICpwbGFuZSA9IGNydGMtPnByaW1hcnk7CiAJCWludCBqOwogCi0JCURSTV9E
RUJVRygidGVzdCBDUlRDICVkIHByaW1hcnkgcGxhbmVcbiIsIGkpOworCQlEUk1fREVCVUcoInRl
c3QgQ1JUQyAldSBwcmltYXJ5IHBsYW5lXG4iLCBkcm1fY3J0Y19pbmRleChjcnRjKSk7CiAKIAkJ
Zm9yIChqID0gMDsgaiA8IHBsYW5lLT5mb3JtYXRfY291bnQ7IGorKykgewogCQkJY29uc3Qgc3Ry
dWN0IGRybV9mb3JtYXRfaW5mbyAqZm10OwpAQCAtMjAyNiw5ICsxOTkxLDggQEAgc3RhdGljIGlu
dCBkcm1fZmJfaGVscGVyX3NpbmdsZV9mYl9wcm9iZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJf
aGVscGVyLAogCiAJLyogZmlyc3QgdXAgZ2V0IGEgY291bnQgb2YgY3J0Y3Mgbm93IGluIHVzZSBh
bmQgbmV3IG1pbi9tYXhlcyB3aWR0aC9oZWlnaHRzICovCiAJY3J0Y19jb3VudCA9IDA7Ci0JZm9y
IChpID0gMDsgaSA8IGZiX2hlbHBlci0+Y3J0Y19jb3VudDsgaSsrKSB7CisJZHJtX2NsaWVudF9m
b3JfZWFjaF9tb2Rlc2V0KG1vZGVfc2V0LCBjbGllbnQpIHsKIAkJc3RydWN0IGRybV9kaXNwbGF5
X21vZGUgKmRlc2lyZWRfbW9kZTsKLQkJc3RydWN0IGRybV9tb2RlX3NldCAqbW9kZV9zZXQ7CiAJ
CWludCB4LCB5LCBqOwogCQkvKiBpbiBjYXNlIG9mIHRpbGUgZ3JvdXAsIGFyZSB3ZSB0aGUgbGFz
dCB0aWxlIHZlcnQgb3IgaG9yaXo/CiAJCSAqIElmIG5vIHRpbGUgZ3JvdXAgeW91IGFyZSBhbHdh
eXMgdGhlIGxhc3Qgb25lIGJvdGggdmVydGljYWxseQpAQCAtMjAzNiw3ICsyMDAwLDYgQEAgc3Rh
dGljIGludCBkcm1fZmJfaGVscGVyX3NpbmdsZV9mYl9wcm9iZShzdHJ1Y3QgZHJtX2ZiX2hlbHBl
ciAqZmJfaGVscGVyLAogCQkgKi8KIAkJYm9vbCBsYXN0diA9IHRydWUsIGxhc3RoID0gdHJ1ZTsK
IAotCQltb2RlX3NldCA9ICZmYl9oZWxwZXItPmNydGNfaW5mb1tpXS5tb2RlX3NldDsKIAkJZGVz
aXJlZF9tb2RlID0gbW9kZV9zZXQtPm1vZGU7CiAKIAkJaWYgKCFkZXNpcmVkX21vZGUpCkBAIC0y
MDY2LDYgKzIwMjksNyBAQCBzdGF0aWMgaW50IGRybV9mYl9oZWxwZXJfc2luZ2xlX2ZiX3Byb2Jl
KHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJCWlmIChsYXN0dikKIAkJCXNpemVz
LmZiX2hlaWdodCA9IG1pbl90KHUzMiwgZGVzaXJlZF9tb2RlLT52ZGlzcGxheSArIHksIHNpemVz
LmZiX2hlaWdodCk7CiAJfQorCW11dGV4X3VubG9jaygmY2xpZW50LT5tb2Rlc2V0X211dGV4KTsK
IAogCWlmIChjcnRjX2NvdW50ID09IDAgfHwgc2l6ZXMuZmJfd2lkdGggPT0gLTEgfHwgc2l6ZXMu
ZmJfaGVpZ2h0ID09IC0xKSB7CiAJCURSTV9JTkZPKCJDYW5ub3QgZmluZCBhbnkgY3J0YyBvciBz
aXplc1xuIik7CkBAIC0yMjk3LDcgKzIyNjEsNyBAQCBzdGF0aWMgYm9vbCBkcm1fdGFyZ2V0X2Ns
b25lZChzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCXN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICpkbXRfbW9kZSwgKm1vZGU7CiAKIAkvKiBvbmx5IGNvbnRlbXBsYXRlIGNsb25pbmcg
aW4gdGhlIHNpbmdsZSBjcnRjIGNhc2UgKi8KLQlpZiAoZmJfaGVscGVyLT5jcnRjX2NvdW50ID4g
MSkKKwlpZiAoZmJfaGVscGVyLT5kZXYtPm1vZGVfY29uZmlnLm51bV9jcnRjID4gMSkKIAkJcmV0
dXJuIGZhbHNlOwogCiAJY291bnQgPSAwOwpAQCAtMjQ4NiwxNSArMjQ1MCwxNyBAQCBzdGF0aWMg
Ym9vbCBjb25uZWN0b3JfaGFzX3Bvc3NpYmxlX2NydGMoc3RydWN0IGRybV9jb25uZWN0b3IgKmNv
bm5lY3RvciwKIH0KIAogc3RhdGljIGludCBkcm1fcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hl
bHBlciAqZmJfaGVscGVyLAotCQkJICBzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jcnRjICoqYmVzdF9j
cnRjcywKKwkJCSAgc3RydWN0IGRybV9jcnRjICoqYmVzdF9jcnRjcywKIAkJCSAgc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKiptb2RlcywKIAkJCSAgaW50IG4sIGludCB3aWR0aCwgaW50IGhlaWdo
dCkKIHsKLQlpbnQgYywgbzsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9o
ZWxwZXItPmNsaWVudDsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCWludCBt
eV9zY29yZSwgYmVzdF9zY29yZSwgc2NvcmU7Ci0Jc3RydWN0IGRybV9mYl9oZWxwZXJfY3J0YyAq
KmNydGNzLCAqY3J0YzsKKwlzdHJ1Y3QgZHJtX2NydGMgKipjcnRjcywgKmNydGM7CisJc3RydWN0
IGRybV9tb2RlX3NldCAqbW9kZXNldDsKIAlzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jb25uZWN0b3Ig
KmZiX2hlbHBlcl9jb25uOworCWludCBvOwogCiAJaWYgKG4gPT0gZmJfaGVscGVyLT5jb25uZWN0
b3JfY291bnQpCiAJCXJldHVybiAwOwpAQCAtMjUwNyw4ICsyNDczLDcgQEAgc3RhdGljIGludCBk
cm1fcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCWlmIChtb2Rl
c1tuXSA9PSBOVUxMKQogCQlyZXR1cm4gYmVzdF9zY29yZTsKIAotCWNydGNzID0ga2NhbGxvYyhm
Yl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCwKLQkJCXNpemVvZihzdHJ1Y3QgZHJtX2ZiX2hlbHBl
cl9jcnRjICopLCBHRlBfS0VSTkVMKTsKKwljcnRjcyA9IGtjYWxsb2MoZmJfaGVscGVyLT5jb25u
ZWN0b3JfY291bnQsIHNpemVvZigqY3J0Y3MpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIWNydGNzKQog
CQlyZXR1cm4gYmVzdF9zY29yZTsKIApAQCAtMjUyNCwxMSArMjQ4OSwxMCBAQCBzdGF0aWMgaW50
IGRybV9waWNrX2NydGNzKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJICogc2Vs
ZWN0IGEgY3J0YyBmb3IgdGhpcyBjb25uZWN0b3IgYW5kIHRoZW4gYXR0ZW1wdCB0byBjb25maWd1
cmUKIAkgKiByZW1haW5pbmcgY29ubmVjdG9ycwogCSAqLwotCWZvciAoYyA9IDA7IGMgPCBmYl9o
ZWxwZXItPmNydGNfY291bnQ7IGMrKykgewotCQljcnRjID0gJmZiX2hlbHBlci0+Y3J0Y19pbmZv
W2NdOworCWRybV9jbGllbnRfZm9yX2VhY2hfbW9kZXNldChtb2Rlc2V0LCBjbGllbnQpIHsKKwkJ
Y3J0YyA9IG1vZGVzZXQtPmNydGM7CiAKLQkJaWYgKCFjb25uZWN0b3JfaGFzX3Bvc3NpYmxlX2Ny
dGMoY29ubmVjdG9yLAotCQkJCQkJIGNydGMtPm1vZGVfc2V0LmNydGMpKQorCQlpZiAoIWNvbm5l
Y3Rvcl9oYXNfcG9zc2libGVfY3J0Yyhjb25uZWN0b3IsIGNydGMpKQogCQkJY29udGludWU7CiAK
IAkJZm9yIChvID0gMDsgbyA8IG47IG8rKykKQEAgLTI1MzcsNyArMjUwMSw3IEBAIHN0YXRpYyBp
bnQgZHJtX3BpY2tfY3J0Y3Moc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAogCQlp
ZiAobyA8IG4pIHsKIAkJCS8qIGlnbm9yZSBjbG9uaW5nIHVubGVzcyBvbmx5IGEgc2luZ2xlIGNy
dGMgKi8KLQkJCWlmIChmYl9oZWxwZXItPmNydGNfY291bnQgPiAxKQorCQkJaWYgKGZiX2hlbHBl
ci0+ZGV2LT5tb2RlX2NvbmZpZy5udW1fY3J0YyA+IDEpCiAJCQkJY29udGludWU7CiAKIAkJCWlm
ICghZHJtX21vZGVfZXF1YWwobW9kZXNbb10sIG1vZGVzW25dKSkKQEAgLTI1NDUsMTQgKzI1MDks
MTMgQEAgc3RhdGljIGludCBkcm1fcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJf
aGVscGVyLAogCQl9CiAKIAkJY3J0Y3Nbbl0gPSBjcnRjOwotCQltZW1jcHkoY3J0Y3MsIGJlc3Rf
Y3J0Y3MsIG4gKiBzaXplb2Yoc3RydWN0IGRybV9mYl9oZWxwZXJfY3J0YyAqKSk7CisJCW1lbWNw
eShjcnRjcywgYmVzdF9jcnRjcywgbiAqIHNpemVvZigqY3J0Y3MpKTsKIAkJc2NvcmUgPSBteV9z
Y29yZSArIGRybV9waWNrX2NydGNzKGZiX2hlbHBlciwgY3J0Y3MsIG1vZGVzLCBuICsgMSwKIAkJ
CQkJCSAgd2lkdGgsIGhlaWdodCk7CiAJCWlmIChzY29yZSA+IGJlc3Rfc2NvcmUpIHsKIAkJCWJl
c3Rfc2NvcmUgPSBzY29yZTsKIAkJCW1lbWNweShiZXN0X2NydGNzLCBjcnRjcywKLQkJCSAgICAg
ICBmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCAqCi0JCQkgICAgICAgc2l6ZW9mKHN0cnVjdCBk
cm1fZmJfaGVscGVyX2NydGMgKikpOworCQkJICAgICAgIGZiX2hlbHBlci0+Y29ubmVjdG9yX2Nv
dW50ICogc2l6ZW9mKCpjcnRjcykpOwogCQl9CiAJfQogCkBAIC0yNTYwLDIxICsyNTIzLDkgQEAg
c3RhdGljIGludCBkcm1fcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVy
LAogCXJldHVybiBiZXN0X3Njb3JlOwogfQogCi1zdGF0aWMgc3RydWN0IGRybV9mYl9oZWxwZXJf
Y3J0YyAqCi1kcm1fZmJfaGVscGVyX2NydGMoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBl
ciwgc3RydWN0IGRybV9jcnRjICpjcnRjKQotewotCWludCBpOwotCi0JZm9yIChpID0gMDsgaSA8
IGZiX2hlbHBlci0+Y3J0Y19jb3VudDsgaSsrKQotCQlpZiAoZmJfaGVscGVyLT5jcnRjX2luZm9b
aV0ubW9kZV9zZXQuY3J0YyA9PSBjcnRjKQotCQkJcmV0dXJuICZmYl9oZWxwZXItPmNydGNfaW5m
b1tpXTsKLQotCXJldHVybiBOVUxMOwotfQotCiAvKiBUcnkgdG8gcmVhZCB0aGUgQklPUyBkaXNw
bGF5IGNvbmZpZ3VyYXRpb24gYW5kIHVzZSBpdCBmb3IgdGhlIGluaXRpYWwgY29uZmlnICovCiBz
dGF0aWMgYm9vbCBkcm1fZmJfaGVscGVyX2Zpcm13YXJlX2NvbmZpZyhzdHJ1Y3QgZHJtX2ZiX2hl
bHBlciAqZmJfaGVscGVyLAotCQkJCQkgIHN0cnVjdCBkcm1fZmJfaGVscGVyX2NydGMgKipjcnRj
cywKKwkJCQkJICBzdHJ1Y3QgZHJtX2NydGMgKipjcnRjcywKIAkJCQkJICBzdHJ1Y3QgZHJtX2Rp
c3BsYXlfbW9kZSAqKm1vZGVzLAogCQkJCQkgIHN0cnVjdCBkcm1fZmJfb2Zmc2V0ICpvZmZzZXRz
LAogCQkJCQkgIGJvb2wgKmVuYWJsZWQsIGludCB3aWR0aCwgaW50IGhlaWdodCkKQEAgLTI2MTAs
NyArMjU2MSw3IEBAIHN0YXRpYyBib29sIGRybV9mYl9oZWxwZXJfZmlybXdhcmVfY29uZmlnKHN0
cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJCXN0cnVjdCBkcm1fZmJfaGVscGVyX2Nv
bm5lY3RvciAqZmJfY29ubjsKIAkJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKIAkJ
c3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyOwotCQlzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jcnRj
ICpuZXdfY3J0YzsKKwkJc3RydWN0IGRybV9jcnRjICpuZXdfY3J0YzsKIAogCQlmYl9jb25uID0g
ZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXTsKIAkJY29ubmVjdG9yID0gZmJfY29ubi0+Y29u
bmVjdG9yOwpAQCAtMjY1Miw3ICsyNjAzLDcgQEAgc3RhdGljIGJvb2wgZHJtX2ZiX2hlbHBlcl9m
aXJtd2FyZV9jb25maWcoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAogCQludW1f
Y29ubmVjdG9yc19lbmFibGVkKys7CiAKLQkJbmV3X2NydGMgPSBkcm1fZmJfaGVscGVyX2NydGMo
ZmJfaGVscGVyLCBjb25uZWN0b3ItPnN0YXRlLT5jcnRjKTsKKwkJbmV3X2NydGMgPSBjb25uZWN0
b3ItPnN0YXRlLT5jcnRjOwogCiAJCS8qCiAJCSAqIE1ha2Ugc3VyZSB3ZSdyZSBub3QgdHJ5aW5n
IHRvIGRyaXZlIG11bHRpcGxlIGNvbm5lY3RvcnMKQEAgLTI3NTIsMTAgKzI3MDMsMTEgQEAgc3Rh
dGljIGJvb2wgZHJtX2ZiX2hlbHBlcl9maXJtd2FyZV9jb25maWcoc3RydWN0IGRybV9mYl9oZWxw
ZXIgKmZiX2hlbHBlciwKIHN0YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjcyhzdHJ1Y3QgZHJtX2Zi
X2hlbHBlciAqZmJfaGVscGVyLAogCQkJICAgIHUzMiB3aWR0aCwgdTMyIGhlaWdodCkKIHsKKwlz
dHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9oZWxwZXItPmNsaWVudDsKIAlzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2ID0gZmJfaGVscGVyLT5kZXY7Ci0Jc3RydWN0IGRybV9mYl9oZWxw
ZXJfY3J0YyAqKmNydGNzOwogCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoqbW9kZXM7CiAJc3Ry
dWN0IGRybV9mYl9vZmZzZXQgKm9mZnNldHM7CisJc3RydWN0IGRybV9jcnRjICoqY3J0Y3M7CiAJ
Ym9vbCAqZW5hYmxlZDsKIAlpbnQgaTsKIApAQCAtMjc2Myw4ICsyNzE1LDcgQEAgc3RhdGljIHZv
aWQgZHJtX3NldHVwX2NydGNzKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJLyog
cHJldmVudCBjb25jdXJyZW50IG1vZGlmaWNhdGlvbiBvZiBjb25uZWN0b3JfY291bnQgYnkgaG90
cGx1ZyAqLwogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmZiX2hlbHBlci0+bG9jayk7CiAKLQljcnRj
cyA9IGtjYWxsb2MoZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQsCi0JCQlzaXplb2Yoc3RydWN0
IGRybV9mYl9oZWxwZXJfY3J0YyAqKSwgR0ZQX0tFUk5FTCk7CisJY3J0Y3MgPSBrY2FsbG9jKGZi
X2hlbHBlci0+Y29ubmVjdG9yX2NvdW50LCBzaXplb2YoKmNydGNzKSwgR0ZQX0tFUk5FTCk7CiAJ
bW9kZXMgPSBrY2FsbG9jKGZiX2hlbHBlci0+Y29ubmVjdG9yX2NvdW50LAogCQkJc2l6ZW9mKHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICopLCBHRlBfS0VSTkVMKTsKIAlvZmZzZXRzID0ga2NhbGxv
YyhmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCwKQEAgLTI3NzYsNiArMjcyNyw4IEBAIHN0YXRp
YyB2b2lkIGRybV9zZXR1cF9jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAog
CQlnb3RvIG91dDsKIAl9CiAKKwltdXRleF9sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOwor
CiAJbXV0ZXhfbG9jaygmZmJfaGVscGVyLT5kZXYtPm1vZGVfY29uZmlnLm11dGV4KTsKIAlpZiAo
ZHJtX2ZiX2hlbHBlcl9wcm9iZV9jb25uZWN0b3JfbW9kZXMoZmJfaGVscGVyLCB3aWR0aCwgaGVp
Z2h0KSA9PSAwKQogCQlEUk1fREVCVUdfS01TKCJObyBjb25uZWN0b3JzIHJlcG9ydGVkIGNvbm5l
Y3RlZCB3aXRoIG1vZGVzXG4iKTsKQEAgLTI4MDAsMjQgKzI3NTMsMjQgQEAgc3RhdGljIHZvaWQg
ZHJtX3NldHVwX2NydGNzKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJfQogCW11
dGV4X3VubG9jaygmZmJfaGVscGVyLT5kZXYtPm1vZGVfY29uZmlnLm11dGV4KTsKIAotCS8qIG5l
ZWQgdG8gc2V0IHRoZSBtb2Rlc2V0cyB1cCBoZXJlIGZvciB1c2UgbGF0ZXIgKi8KLQkvKiBmaWxs
IG91dCB0aGUgY29ubmVjdG9yPC0+Y3J0YyBtYXBwaW5ncyBpbnRvIHRoZSBtb2Rlc2V0cyAqLwot
CWZvciAoaSA9IDA7IGkgPCBmYl9oZWxwZXItPmNydGNfY291bnQ7IGkrKykKLQkJZHJtX2ZiX2hl
bHBlcl9tb2Rlc2V0X3JlbGVhc2UoZmJfaGVscGVyLAotCQkJCQkgICAgICAmZmJfaGVscGVyLT5j
cnRjX2luZm9baV0ubW9kZV9zZXQpOworCWRybV9jbGllbnRfbW9kZXNldF9yZWxlYXNlKGNsaWVu
dCk7CiAKIAlkcm1fZmJfaGVscGVyX2Zvcl9lYWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkpIHsK
IAkJc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUgPSBtb2Rlc1tpXTsKLQkJc3RydWN0IGRy
bV9mYl9oZWxwZXJfY3J0YyAqZmJfY3J0YyA9IGNydGNzW2ldOworCQlzdHJ1Y3QgZHJtX2NydGMg
KmNydGMgPSBjcnRjc1tpXTsKIAkJc3RydWN0IGRybV9mYl9vZmZzZXQgKm9mZnNldCA9ICZvZmZz
ZXRzW2ldOwogCi0JCWlmIChtb2RlICYmIGZiX2NydGMpIHsKLQkJCXN0cnVjdCBkcm1fbW9kZV9z
ZXQgKm1vZGVzZXQgPSAmZmJfY3J0Yy0+bW9kZV9zZXQ7CisJCWlmIChtb2RlICYmIGNydGMpIHsK
KwkJCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQgPSBkcm1fY2xpZW50X2ZpbmRfbW9kZXNl
dChjbGllbnQsIGNydGMpOwogCQkJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9CiAJ
CQkJZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXS0+Y29ubmVjdG9yOwogCiAJCQlEUk1fREVC
VUdfS01TKCJkZXNpcmVkIG1vZGUgJXMgc2V0IG9uIGNydGMgJWQgKCVkLCVkKVxuIiwKLQkJCQkg
ICAgICBtb2RlLT5uYW1lLCBmYl9jcnRjLT5tb2RlX3NldC5jcnRjLT5iYXNlLmlkLCBvZmZzZXQt
PngsIG9mZnNldC0+eSk7CisJCQkJICAgICAgbW9kZS0+bmFtZSwgY3J0Yy0+YmFzZS5pZCwgb2Zm
c2V0LT54LCBvZmZzZXQtPnkpOworCisJCQlpZiAoV0FSTl9PTl9PTkNFKG1vZGVzZXQtPm51bV9j
b25uZWN0b3JzID09IERSTV9DTElFTlRfTUFYX0NMT05FRF9DT05ORUNUT1JTIHx8CisJCQkJCSAo
ZGV2LT5tb2RlX2NvbmZpZy5udW1fY3J0YyA+IDEgJiYgbW9kZXNldC0+bnVtX2Nvbm5lY3RvcnMg
PT0gMSkpKQorCQkJCWJyZWFrOwogCiAJCQltb2Rlc2V0LT5tb2RlID0gZHJtX21vZGVfZHVwbGlj
YXRlKGRldiwgbW9kZSk7CiAJCQlkcm1fY29ubmVjdG9yX2dldChjb25uZWN0b3IpOwpAQCAtMjgy
Niw2ICsyNzc5LDggQEAgc3RhdGljIHZvaWQgZHJtX3NldHVwX2NydGNzKHN0cnVjdCBkcm1fZmJf
aGVscGVyICpmYl9oZWxwZXIsCiAJCQltb2Rlc2V0LT55ID0gb2Zmc2V0LT55OwogCQl9CiAJfQor
CisJbXV0ZXhfdW5sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOwogb3V0OgogCWtmcmVlKGNy
dGNzKTsKIAlrZnJlZShtb2Rlcyk7CkBAIC0yODQyLDEzICsyNzk3LDE0IEBAIHN0YXRpYyB2b2lk
IGRybV9zZXR1cF9jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogICovCiBz
dGF0aWMgdm9pZCBkcm1fc2V0dXBfY3J0Y3NfZmIoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hl
bHBlcikKIHsKKwlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZmYl9oZWxwZXItPmNs
aWVudDsKIAlzdHJ1Y3QgZmJfaW5mbyAqaW5mbyA9IGZiX2hlbHBlci0+ZmJkZXY7CiAJdW5zaWdu
ZWQgaW50IHJvdGF0aW9uLCBzd19yb3RhdGlvbnMgPSAwOworCXN0cnVjdCBkcm1fbW9kZV9zZXQg
Km1vZGVzZXQ7CiAJaW50IGk7CiAKLQlmb3IgKGkgPSAwOyBpIDwgZmJfaGVscGVyLT5jcnRjX2Nv
dW50OyBpKyspIHsKLQkJc3RydWN0IGRybV9tb2RlX3NldCAqbW9kZXNldCA9ICZmYl9oZWxwZXIt
PmNydGNfaW5mb1tpXS5tb2RlX3NldDsKLQorCW11dGV4X2xvY2soJmNsaWVudC0+bW9kZXNldF9t
dXRleCk7CisJZHJtX2NsaWVudF9mb3JfZWFjaF9tb2Rlc2V0KG1vZGVzZXQsIGNsaWVudCkgewog
CQlpZiAoIW1vZGVzZXQtPm51bV9jb25uZWN0b3JzKQogCQkJY29udGludWU7CiAKQEAgLTI4NjAs
NiArMjgxNiw3IEBAIHN0YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjc19mYihzdHJ1Y3QgZHJtX2Zi
X2hlbHBlciAqZmJfaGVscGVyKQogCQllbHNlCiAJCQlzd19yb3RhdGlvbnMgfD0gcm90YXRpb247
CiAJfQorCW11dGV4X3VubG9jaygmY2xpZW50LT5tb2Rlc2V0X211dGV4KTsKIAogCW11dGV4X2xv
Y2soJmZiX2hlbHBlci0+ZGV2LT5tb2RlX2NvbmZpZy5tdXRleCk7CiAJZHJtX2ZiX2hlbHBlcl9m
b3JfZWFjaF9jb25uZWN0b3IoZmJfaGVscGVyLCBpKSB7CkBAIC0zMDc1LDggKzMwMzIsNyBAQCBF
WFBPUlRfU1lNQk9MKGRybV9mYl9oZWxwZXJfaG90cGx1Z19ldmVudCk7CiAgKiBAZnVuY3M6IGZi
ZGV2IGhlbHBlciBmdW5jdGlvbnMKICAqIEBwcmVmZXJyZWRfYnBwOiBQcmVmZXJyZWQgYml0cyBw
ZXIgcGl4ZWwgZm9yIHRoZSBkZXZpY2UuCiAgKiAgICAgICAgICAgICAgICAgQGRldi0+bW9kZV9j
b25maWcucHJlZmVycmVkX2RlcHRoIGlzIHVzZWQgaWYgdGhpcyBpcyB6ZXJvLgotICogQG1heF9j
b25uX2NvdW50OiBNYXhpbXVtIG51bWJlciBvZiBjb25uZWN0b3JzLgotICogICAgICAgICAgICAg
ICAgICBAZGV2LT5tb2RlX2NvbmZpZy5udW1fY29ubmVjdG9yIGlzIHVzZWQgaWYgdGhpcyBpcyB6
ZXJvLgorICogQG1heF9jb25uX2NvdW50OiBNYXhpbXVtIG51bWJlciBvZiBjb25uZWN0b3JzIChu
b3QgdXNlZCkKICAqCiAgKiBUaGlzIGZ1bmN0aW9uIHNldHMgdXAgZmJkZXYgZW11bGF0aW9uIGFu
ZCByZWdpc3RlcnMgZmJkZXYgZm9yIGFjY2VzcyBieQogICogdXNlcnNwYWNlLiBJZiBhbGwgY29u
bmVjdG9ycyBhcmUgZGlzY29ubmVjdGVkLCBzZXR1cCBpcyBkZWZlcnJlZCB0byB0aGUgbmV4dApA
QCAtMzEwNCwxNiArMzA2MCw5IEBAIGludCBkcm1fZmJfaGVscGVyX2ZiZGV2X3NldHVwKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiAJaWYgKCFwcmVmZXJyZWRfYnBwKQogCQlwcmVmZXJyZWRfYnBw
ID0gMzI7CiAKLQlpZiAoIW1heF9jb25uX2NvdW50KQotCQltYXhfY29ubl9jb3VudCA9IGRldi0+
bW9kZV9jb25maWcubnVtX2Nvbm5lY3RvcjsKLQlpZiAoIW1heF9jb25uX2NvdW50KSB7Ci0JCURS
TV9ERVZfRVJST1IoZGV2LT5kZXYsICJmYmRldjogTm8gY29ubmVjdG9yc1xuIik7Ci0JCXJldHVy
biAtRUlOVkFMOwotCX0KLQogCWRybV9mYl9oZWxwZXJfcHJlcGFyZShkZXYsIGZiX2hlbHBlciwg
ZnVuY3MpOwogCi0JcmV0ID0gZHJtX2ZiX2hlbHBlcl9pbml0KGRldiwgZmJfaGVscGVyLCBtYXhf
Y29ubl9jb3VudCk7CisJcmV0ID0gZHJtX2ZiX2hlbHBlcl9pbml0KGRldiwgZmJfaGVscGVyLCAw
KTsKIAlpZiAocmV0IDwgMCkgewogCQlEUk1fREVWX0VSUk9SKGRldi0+ZGV2LCAiZmJkZXY6IEZh
aWxlZCB0byBpbml0aWFsaXplIChyZXQ9JWQpXG4iLCByZXQpOwogCQlyZXR1cm4gcmV0OwpAQCAt
MzQyNiw3ICszMzc1LDcgQEAgc3RhdGljIGludCBkcm1fZmJkZXZfY2xpZW50X2hvdHBsdWcoc3Ry
dWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQpCiAKIAlkcm1fZmJfaGVscGVyX3ByZXBhcmUoZGV2
LCBmYl9oZWxwZXIsICZkcm1fZmJfaGVscGVyX2dlbmVyaWNfZnVuY3MpOwogCi0JcmV0ID0gZHJt
X2ZiX2hlbHBlcl9pbml0KGRldiwgZmJfaGVscGVyLCBkZXYtPm1vZGVfY29uZmlnLm51bV9jb25u
ZWN0b3IpOworCXJldCA9IGRybV9mYl9oZWxwZXJfaW5pdChkZXYsIGZiX2hlbHBlciwgMCk7CiAJ
aWYgKHJldCkKIAkJZ290byBlcnI7CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9jbGll
bnQuaCBiL2luY2x1ZGUvZHJtL2RybV9jbGllbnQuaAppbmRleCAyNjhiMmNmMDA1MmEuLjg3YmU5
YWViMWZlMCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9kcm0vZHJtX2NsaWVudC5oCisrKyBiL2luY2x1
ZGUvZHJtL2RybV9jbGllbnQuaApAQCAtMyw4ICszLDEyIEBACiAjaWZuZGVmIF9EUk1fQ0xJRU5U
X0hfCiAjZGVmaW5lIF9EUk1fQ0xJRU5UX0hfCiAKKyNpbmNsdWRlIDxsaW51eC9sb2NrZGVwLmg+
CisjaW5jbHVkZSA8bGludXgvbXV0ZXguaD4KICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogCisj
aW5jbHVkZSA8ZHJtL2RybV9jcnRjLmg+CisKIHN0cnVjdCBkcm1fY2xpZW50X2RldjsKIHN0cnVj
dCBkcm1fZGV2aWNlOwogc3RydWN0IGRybV9maWxlOwpAQCAtMTMsNiArMTcsOCBAQCBzdHJ1Y3Qg
ZHJtX2dlbV9vYmplY3Q7CiBzdHJ1Y3QgZHJtX21pbm9yOwogc3RydWN0IG1vZHVsZTsKIAorI2Rl
ZmluZSBEUk1fQ0xJRU5UX01BWF9DTE9ORURfQ09OTkVDVE9SUwk4CisKIC8qKgogICogc3RydWN0
IGRybV9jbGllbnRfZnVuY3MgLSBEUk0gY2xpZW50IGNhbGxiYWNrcwogICovCkBAIC04NSw2ICs5
MSwxNiBAQCBzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgewogCSAqIEBmaWxlOiBEUk0gZmlsZQogCSAq
LwogCXN0cnVjdCBkcm1fZmlsZSAqZmlsZTsKKworCS8qKgorCSAqIEBtb2Rlc2V0X211dGV4OiBQ
cm90ZWN0cyBAbW9kZXNldHMuCisJICovCisJc3RydWN0IG11dGV4IG1vZGVzZXRfbXV0ZXg7CisK
KwkvKioKKwkgKiBAbW9kZXNldHM6IENSVEMgY29uZmlndXJhdGlvbnMKKwkgKi8KKwlzdHJ1Y3Qg
ZHJtX21vZGVfc2V0ICptb2Rlc2V0czsKIH07CiAKIGludCBkcm1fY2xpZW50X2luaXQoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQsCkBAIC0xMzUs
NiArMTUxLDIwIEBAIHN0cnVjdCBkcm1fY2xpZW50X2J1ZmZlciAqCiBkcm1fY2xpZW50X2ZyYW1l
YnVmZmVyX2NyZWF0ZShzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgdTMyIHdpZHRoLCB1
MzIgaGVpZ2h0LCB1MzIgZm9ybWF0KTsKIHZvaWQgZHJtX2NsaWVudF9mcmFtZWJ1ZmZlcl9kZWxl
dGUoc3RydWN0IGRybV9jbGllbnRfYnVmZmVyICpidWZmZXIpOwogCitpbnQgZHJtX2NsaWVudF9t
b2Rlc2V0X2NyZWF0ZShzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCk7Cit2b2lkIGRybV9j
bGllbnRfbW9kZXNldF9mcmVlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50KTsKK3ZvaWQg
ZHJtX2NsaWVudF9tb2Rlc2V0X3JlbGVhc2Uoc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQp
Oworc3RydWN0IGRybV9tb2RlX3NldCAqZHJtX2NsaWVudF9maW5kX21vZGVzZXQoc3RydWN0IGRy
bV9jbGllbnRfZGV2ICpjbGllbnQsIHN0cnVjdCBkcm1fY3J0YyAqY3J0Yyk7CisKKy8qKgorICog
ZHJtX2NsaWVudF9mb3JfZWFjaF9tb2Rlc2V0KCkgLSBJdGVyYXRlIG92ZXIgY2xpZW50IG1vZGVz
ZXRzCisgKiBAbW9kZXNldDogJmRybV9tb2RlX3NldCBsb29wIGN1cnNvcgorICogQGNsaWVudDog
RFJNIGNsaWVudAorICovCisjZGVmaW5lIGRybV9jbGllbnRfZm9yX2VhY2hfbW9kZXNldChtb2Rl
c2V0LCBjbGllbnQpIFwKKwlmb3IgKCh7IGxvY2tkZXBfYXNzZXJ0X2hlbGQoJihjbGllbnQpLT5t
b2Rlc2V0X211dGV4KTsgfSksIFwKKwkgICAgIG1vZGVzZXQgPSAoY2xpZW50KS0+bW9kZXNldHM7
IG1vZGVzZXQtPmNydGM7IG1vZGVzZXQrKykKKwogaW50IGRybV9jbGllbnRfZGVidWdmc19pbml0
KHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKTsKIAogI2VuZGlmCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2RybS9kcm1fZmJfaGVscGVyLmggYi9pbmNsdWRlL2RybS9kcm1fZmJfaGVscGVyLmgKaW5kZXgg
MmFmMWM2ZDNlMTQ3Li42YjMzNGY0ZDhhMjIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2RybV9m
Yl9oZWxwZXIuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fZmJfaGVscGVyLmgKQEAgLTQ3LDEwICs0
Nyw2IEBAIHN0cnVjdCBkcm1fZmJfb2Zmc2V0IHsKIAlpbnQgeCwgeTsKIH07CiAKLXN0cnVjdCBk
cm1fZmJfaGVscGVyX2NydGMgewotCXN0cnVjdCBkcm1fbW9kZV9zZXQgbW9kZV9zZXQ7Ci19Owot
CiAvKioKICAqIHN0cnVjdCBkcm1fZmJfaGVscGVyX3N1cmZhY2Vfc2l6ZSAtIGRlc2NyaWJlcyBm
YmRldiBzaXplIGFuZCBzY2Fub3V0IHN1cmZhY2Ugc2l6ZQogICogQGZiX3dpZHRoOiBmYmRldiB3
aWR0aApAQCAtMTA5LDggKzEwNSw2IEBAIHN0cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciB7
CiAgKiBzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAtIG1haW4gc3RydWN0dXJlIHRvIGVtdWxhdGUgZmJk
ZXYgb24gdG9wIG9mIEtNUwogICogQGZiOiBTY2Fub3V0IGZyYW1lYnVmZmVyIG9iamVjdAogICog
QGRldjogRFJNIGRldmljZQotICogQGNydGNfY291bnQ6IG51bWJlciBvZiBwb3NzaWJsZSBDUlRD
cwotICogQGNydGNfaW5mbzogcGVyLUNSVEMgaGVscGVyIHN0YXRlIChtb2RlLCB4L3kgb2Zmc2V0
LCBldGMpCiAgKiBAY29ubmVjdG9yX2NvdW50OiBudW1iZXIgb2YgY29ubmVjdGVkIGNvbm5lY3Rv
cnMKICAqIEBjb25uZWN0b3JfaW5mb19hbGxvY19jb3VudDogc2l6ZSBvZiBjb25uZWN0b3JfaW5m
bwogICogQGZ1bmNzOiBkcml2ZXIgY2FsbGJhY2tzIGZvciBmYiBoZWxwZXIKQEAgLTE0NCw4ICsx
MzgsNiBAQCBzdHJ1Y3QgZHJtX2ZiX2hlbHBlciB7CiAKIAlzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVy
ICpmYjsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2OwotCWludCBjcnRjX2NvdW50OwotCXN0cnVj
dCBkcm1fZmJfaGVscGVyX2NydGMgKmNydGNfaW5mbzsKIAlpbnQgY29ubmVjdG9yX2NvdW50Owog
CWludCBjb25uZWN0b3JfaW5mb19hbGxvY19jb3VudDsKIAkvKioKLS0gCjIuMjAuMQoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxp
bmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
