Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 7AA71B8CA7
	for <lists+dri-devel@lfdr.de>; Fri, 20 Sep 2019 10:24:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8402C6FB54;
	Fri, 20 Sep 2019 08:24:34 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B56486FB43;
 Fri, 20 Sep 2019 08:24:32 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id D963F7F743;
 Fri, 20 Sep 2019 08:24:31 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-88.pek2.redhat.com [10.72.12.88])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 03A7A1001938;
 Fri, 20 Sep 2019 08:23:20 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [RFC PATCH V2 3/6] mdev: introduce virtio device and its device ops
Date: Fri, 20 Sep 2019 16:20:47 +0800
Message-Id: <20190920082050.19352-4-jasowang@redhat.com>
In-Reply-To: <20190920082050.19352-1-jasowang@redhat.com>
References: <20190920082050.19352-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.6.2
 (mx1.redhat.com [10.5.110.71]); Fri, 20 Sep 2019 08:24:32 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: sebott@linux.ibm.com, airlied@linux.ie, Jason Wang <jasowang@redhat.com>,
 heiko.carstens@de.ibm.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, zhihong.wang@intel.com,
 akrowiak@linux.ibm.com, pmorel@linux.ibm.com, netdev@vger.kernel.org,
 cohuck@redhat.com, oberpar@linux.ibm.com, maxime.coquelin@redhat.com,
 lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBwYXRjaCBpbXBsZW1lbnRzIGJhc2ljIHN1cHBvcnQgZm9yIG1kZXYgZHJpdmVyIHRoYXQg
c3VwcG9ydAp2aXJ0aW8gdHJhbnNwb3J0IGZvciBrZXJuZWwgZHJpdmVyLgoKU2lnbmVkLW9mZi1i
eTogSmFzb24gV2FuZyA8amFzb3dhbmdAcmVkaGF0LmNvbT4KLS0tCiBkcml2ZXJzL3ZmaW8vbWRl
di9tZGV2X2NvcmUuYyB8ICAgNyArKwogaW5jbHVkZS9saW51eC9tZGV2LmggICAgICAgICAgfCAg
IDMgKwogaW5jbHVkZS9saW51eC92aXJ0aW9fbWRldi5oICAgfCAxNDEgKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCAxNTEgaW5zZXJ0aW9ucygrKQog
Y3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGludXgvdmlydGlvX21kZXYuaAoKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvdmZpby9tZGV2L21kZXZfY29yZS5jIGIvZHJpdmVycy92ZmlvL21kZXYvbWRl
dl9jb3JlLmMKaW5kZXggYTAyYzI1NmEzNTE0Li42ZDM5Y2FmOTYyMjIgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvdmZpby9tZGV2L21kZXZfY29yZS5jCisrKyBiL2RyaXZlcnMvdmZpby9tZGV2L21kZXZf
Y29yZS5jCkBAIC0yMjAsNiArMjIwLDEzIEBAIGludCBtZGV2X3JlZ2lzdGVyX3ZmaW9fZGV2aWNl
KHN0cnVjdCBkZXZpY2UgKmRldiwKIH0KIEVYUE9SVF9TWU1CT0wobWRldl9yZWdpc3Rlcl92Zmlv
X2RldmljZSk7CiAKK2ludCBtZGV2X3JlZ2lzdGVyX3ZpcnRpb19kZXZpY2Uoc3RydWN0IGRldmlj
ZSAqZGV2LAorCQkJCWNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgKm9wcykKK3sKKwlyZXR1
cm4gbWRldl9yZWdpc3Rlcl9kZXZpY2UoZGV2LCBvcHMsIE1ERVZfSURfVklSVElPKTsKK30KK0VY
UE9SVF9TWU1CT0wobWRldl9yZWdpc3Rlcl92aXJ0aW9fZGV2aWNlKTsKKwogLyoKICAqIG1kZXZf
dW5yZWdpc3Rlcl9kZXZpY2UgOiBVbnJlZ2lzdGVyIGEgcGFyZW50IGRldmljZQogICogQGRldjog
ZGV2aWNlIHN0cnVjdHVyZSByZXByZXNlbnRpbmcgcGFyZW50IGRldmljZS4KZGlmZiAtLWdpdCBh
L2luY2x1ZGUvbGludXgvbWRldi5oIGIvaW5jbHVkZS9saW51eC9tZGV2LmgKaW5kZXggOTlmZGZk
NzQ0MzNkLi43ODAxNTBjNjE0OTMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbWRldi5oCisr
KyBiL2luY2x1ZGUvbGludXgvbWRldi5oCkBAIC0xMDksNiArMTA5LDggQEAgZXh0ZXJuIHN0cnVj
dCBidXNfdHlwZSBtZGV2X2J1c190eXBlOwogCiBpbnQgbWRldl9yZWdpc3Rlcl92ZmlvX2Rldmlj
ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25z
dCBzdHJ1Y3QgbWRldl9wYXJlbnRfb3BzICpvcHMpOworaW50IG1kZXZfcmVnaXN0ZXJfdmlydGlv
X2RldmljZShzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCQkJY29uc3Qgc3RydWN0IG1kZXZfcGFyZW50
X29wcyAqb3BzKTsKIHZvaWQgbWRldl91bnJlZ2lzdGVyX2RldmljZShzdHJ1Y3QgZGV2aWNlICpk
ZXYpOwogCiBpbnQgbWRldl9yZWdpc3Rlcl9kcml2ZXIoc3RydWN0IG1kZXZfZHJpdmVyICpkcnYs
IHN0cnVjdCBtb2R1bGUgKm93bmVyKTsKQEAgLTExOSw1ICsxMjEsNiBAQCBzdHJ1Y3QgZGV2aWNl
ICptZGV2X2RldihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOwogc3RydWN0IG1kZXZfZGV2aWNl
ICptZGV2X2Zyb21fZGV2KHN0cnVjdCBkZXZpY2UgKmRldik7CiAKICNkZWZpbmUgTURFVl9JRF9W
RklPIDEgLyogVkZJTyBkZXZpY2UgKi8KKyNkZWZpbmUgTURFVl9JRF9WSVJUSU8gMiAvKiBWaXJ0
aW8gRGV2aWNlICovCiAKICNlbmRpZiAvKiBNREVWX0ggKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgvdmlydGlvX21kZXYuaCBiL2luY2x1ZGUvbGludXgvdmlydGlvX21kZXYuaApuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjAwMzMxNGE3NmY1YgotLS0gL2Rldi9u
dWxsCisrKyBiL2luY2x1ZGUvbGludXgvdmlydGlvX21kZXYuaApAQCAtMCwwICsxLDE0MSBAQAor
LyoKKyAqIFZpcnRpbyBtZWRpYXRlZCBkZXZpY2UgZHJpdmVyCisgKgorICogQ29weXJpZ2h0IDIw
MTksIFJlZCBIYXQgQ29ycC4KKyAqICAgICBBdXRob3I6IEphc29uIFdhbmcgPGphc293YW5nQHJl
ZGhhdC5jb20+CisgKi8KKyNpZm5kZWYgX0xJTlVYX1ZJUlRJT19NREVWX0gKKyNkZWZpbmUgX0xJ
TlVYX1ZJUlRJT19NREVWX0gKKworI2luY2x1ZGUgPGxpbnV4L2ludGVycnVwdC5oPgorI2luY2x1
ZGUgPHVhcGkvbGludXgvdmhvc3QuaD4KKworI2RlZmluZSBWSVJUSU9fTURFVl9ERVZJQ0VfQVBJ
X1NUUklORwkJInZpcnRpby1tZGV2IgorCitzdHJ1Y3QgdmlydGlvX21kZXZfY2FsbGJhY2sgewor
CWlycXJldHVybl90ICgqY2FsbGJhY2spKHZvaWQgKik7CisJdm9pZCAqcHJpdmF0ZTsKK307CisK
Ky8qKgorICogc3RydWN0IHZmaW9fbWRldl9wYXJlbnRfb3BzIC0gU3RydWN0dXJlIHRvIGJlIHJl
Z2lzdGVyZWQgZm9yIGVhY2gKKyAqIHBhcmVudCBkZXZpY2UgdG8gcmVnaXN0ZXIgdGhlIGRldmlj
ZSB0byB2aXJ0aW8tbWRldiBtb2R1bGUuCisgKgorICogQHNldF92cV9hZGRyZXNzOgkJU2V0IHRo
ZSBhZGRyZXNzIG9mIHZpcnRxdWV1ZQorICoJCQkJQG1kZXY6IG1lZGlhdGVkIGRldmljZQorICoJ
CQkJQGlkeDogdmlydHF1ZXVlIGluZGV4CisgKgkJCQlAZGVzY19hcmVhOiBhZGRyZXNzIG9mIGRl
c2MgYXJlYQorICoJCQkJQGRyaXZlcl9hcmVhOiBhZGRyZXNzIG9mIGRyaXZlciBhcmVhCisgKgkJ
CQlAZGV2aWNlX2FyZWE6IGFkZHJlc3Mgb2YgZGV2aWNlIGFyZWEKKyAqCQkJCVJldHVybnMgaW50
ZWdlcjogc3VjY2VzcyAoMCkgb3IgZXJyb3IgKDwgMCkKKyAqIEBzZXRfdnFfbnVtOgkJU2V0IHRo
ZSBzaXplIG9mIHZpcnRxdWV1ZQorICoJCQkJQG1kZXY6IG1lZGlhdGVkIGRldmljZQorICoJCQkJ
QGlkeDogdmlydHF1ZXVlIGluZGV4CisgKgkJCQlAbnVtOiB0aGUgc2l6ZSBvZiB2aXJ0cXVldWUK
KyAqIEBraWNrX3ZxOgkJCUtpY2sgdGhlIHZpcnRxdWV1ZQorICoJCQkJQG1kZXY6IG1lZGlhdGVk
IGRldmljZQorICoJCQkJQGlkeDogdmlydHF1ZXVlIGluZGV4CisgKiBAc2V0X3ZxX2NiOgkJCVNl
dCB0aGUgaW50ZXJydXQgY2FsYmFjayBmdW5jdGlvbiBmb3IgYSB2aXJ0cXVldWUKKyAqCQkJCUBt
ZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCUBpZHg6IHZpcnRxdWV1ZSBpbmRleAorICoJCQkJ
QGNiOiB2aXJ0aW8tbWRldiBpbnRlcnJ1cHQgY2FsbGJhY2sgc3RydWN0dXJlCisgKiBAc2V0X3Zx
X3JlYWR5OgkJU2V0IHJlYWR5IHN0YXR1cyBmb3IgYSB2aXJ0cXVldWUKKyAqCQkJCUBtZGV2OiBt
ZWRpYXRlZCBkZXZpY2UKKyAqCQkJCUBpZHg6IHZpcnRxdWV1ZSBpbmRleAorICoJCQkJQHJlYWR5
OiByZWFkeSAodHJ1ZSkgbm90IHJlYWR5KGZhbHNlKQorICogQGdldF92cV9yZWFkeToJCUdldCBy
ZWFkeSBzdGF0dXMgZm9yIGEgdmlydHF1ZXVlCisgKgkJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNl
CisgKgkJCQlAaWR4OiB2aXJ0cXVldWUgaW5kZXgKKyAqCQkJCVJldHVybnMgYm9vbGVhbjogcmVh
ZHkgKHRydWUpIG9yIG5vdCAoZmFsc2UpCisgKiBAc2V0X3ZxX3N0YXRlOgkJU2V0IHRoZSBzdGF0
ZSBmb3IgYSB2aXJ0cXVldWUKKyAqCQkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCUBp
ZHg6IHZpcnRxdWV1ZSBpbmRleAorICoJCQkJQHN0YXRlOiB2aXJ0cXVldWUgc3RhdGUgKGxhc3Rf
YXZhaWxfaWR4KQorICoJCQkJUmV0dXJucyBpbnRlZ2VyOiBzdWNjZXNzICgwKSBvciBlcnJvciAo
PCAwKQorICogQGdldF92cV9zdGF0ZToJCUdldCB0aGUgc3RhdGUgZm9yIGEgdmlydHF1ZXVlCisg
KgkJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNlCisgKgkJCQlAaWR4OiB2aXJ0cXVldWUgaW5kZXgK
KyAqCQkJCVJldHVybnMgdmlydHF1ZXVlIHN0YXRlIChsYXN0X2F2YWlsX2lkeCkKKyAqIEBnZXRf
dnFfYWxpZ246CQlHZXQgdGhlIHZpcnRxdWV1ZSBhbGlnbiByZXF1aXJlbWVudAorICoJCQkJZm9y
IHRoZSBkZXZpY2UKKyAqCQkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCVJldHVybnMg
dmlydHF1ZXVlIGFsZ2luIHJlcXVpcmVtZW50CisgKiBAZ2V0X2ZlYXR1cmVzOgkJR2V0IHZpcnRp
byBmZWF0dXJlcyBzdXBwb3J0ZWQgYnkgdGhlIGRldmljZQorICoJCQkJQG1kZXY6IG1lZGlhdGVk
IGRldmljZQorICoJCQkJUmV0dXJucyB0aGUgZmVhdHVyZXMgc3VwcG9ydCBieSB0aGUKKyAqCQkJ
CWRldmljZQorICogQGdldF9mZWF0dXJlczoJCVNldCB2aXJ0aW8gZmVhdHVyZXMgc3VwcG9ydGVk
IGJ5IHRoZSBkcml2ZXIKKyAqCQkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCUBmZWF0
dXJlczogZmVhdHVyZSBzdXBwb3J0IGJ5IHRoZSBkcml2ZXIKKyAqCQkJCVJldHVybnMgaW50ZWdl
cjogc3VjY2VzcyAoMCkgb3IgZXJyb3IgKDwgMCkKKyAqIEBzZXRfY29uZmlnX2NiOgkJU2V0IHRo
ZSBjb25maWcgaW50ZXJydXB0IGNhbGxiYWNrCisgKgkJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNl
CisgKgkJCQlAY2I6IHZpcnRpby1tZGV2IGludGVycnVwdCBjYWxsYmFjayBzdHJ1Y3R1cmUKKyAq
IEBnZXRfZGV2aWNlX2lkOgkJR2V0IHZpcnRpbyBkZXZpY2UgaWQKKyAqCQkJCUBtZGV2OiBtZWRp
YXRlZCBkZXZpY2UKKyAqCQkJCVJldHVybnMgdTMyOiB2aXJ0aW8gZGV2aWNlIGlkCisgKiBAZ2V0
X3ZlbmRvcl9pZDoJCUdldCB2aXJ0aW8gdmVuZG9yIGlkCisgKgkJCQlAbWRldjogbWVkaWF0ZWQg
ZGV2aWNlCisgKgkJCQlSZXR1cm5zIHUzMjogdmlydGlvIHZlbmRvciBpZAorICogQGdldF9zdGF0
dXM6CQlHZXQgdGhlIGRldmljZSBzdGF0dXMKKyAqCQkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UK
KyAqCQkJCVJldHVybnMgdTg6IHZpcnRpbyBkZXZpY2Ugc3RhdHVzCisgKiBAc2V0X3N0YXR1czoJ
CVNldCB0aGUgZGV2aWNlIHN0YXR1cworICoJCQkJQG1kZXY6IG1lZGlhdGVkIGRldmljZQorICoJ
CQkJQHN0YXR1czogdmlydGlvIGRldmljZSBzdGF0dXMKKyAqIEBnZXRfY29uZmlnOgkJUmVhZCBm
cm9tIGRldmljZSBzcGVjaWZpYyBjb25maXVncmF0aW9uIHNwYWNlCisgKgkJCQlAbWRldjogbWVk
aWF0ZWQgZGV2aWNlCisgKgkJCQlAb2Zmc2V0OiBvZmZzZXQgZnJvbSB0aGUgYmVnaW5uaW5nIG9m
CisgKgkJCQljb25maWd1cmF0aW9uIHNwYWNlCisgKgkJCQlAYnVmOiBidWZmZXIgdXNlZCB0byBy
ZWFkIHRvCisgKgkJCQlAbGVuOiB0aGUgbGVuZ3RoIHRvIHJlYWQgZnJvbQorICoJCQkJY29uZmln
cmF0aW9uIHNwYWNlCisgKiBAc2V0X2NvbmZpZzoJCVdyaXRlIHRvIGRldmljZSBzcGVjaWZpYyBj
b25maXVncmF0aW9uIHNwYWNlCisgKgkJCQlAbWRldjogbWVkaWF0ZWQgZGV2aWNlCisgKgkJCQlA
b2Zmc2V0OiBvZmZzZXQgZnJvbSB0aGUgYmVnaW5uaW5nIG9mCisgKgkJCQljb25maWd1cmF0aW9u
IHNwYWNlCisgKgkJCQlAYnVmOiBidWZmZXIgdXNlZCB0byB3cml0ZSBmcm9tCisgKgkJCQlAbGVu
OiB0aGUgbGVuZ3RoIHRvIHdyaXRlIHRvCisgKgkJCQljb25maWdyYXRpb24gc3BhY2UKKyAqIEBn
ZXRfdmVyc2lvbjoJCUdldCB0aGUgdmVyc2lvbiBvZiB2aXJ0aW8gbWRldiBkZXZpY2UKKyAqCQkJ
CUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCVJldHVybnMgaW50ZWdlcjogdmVyc2lvbiBv
ZiB0aGUgZGV2aWNlCisgKiBAZ2V0X2dlbmVyYXRpb246CQlHZXQgdGhlIGRldmljZSBnZW5lcmF0
b24KKyAqCQkJCUBtZGV2OiBtZWRpYXRlZCBkZXZpY2UKKyAqCQkJCVJldHVybnMgdTMyOiBkZXZp
Y2UgZ2VuZXJhdGlvbgorICovCitzdHJ1Y3QgdmlydGlvX21kZXZfcGFyZW50X29wcyB7CisJLyog
VmlydHF1ZXVlIG9wcyAqLworCWludCAoKnNldF92cV9hZGRyZXNzKShzdHJ1Y3QgbWRldl9kZXZp
Y2UgKm1kZXYsCisJCQkgICAgICB1MTYgaWR4LCB1NjQgZGVzY19hcmVhLCB1NjQgZHJpdmVyX2Fy
ZWEsCisJCQkgICAgICB1NjQgZGV2aWNlX2FyZWEpOworCXZvaWQgKCpzZXRfdnFfbnVtKShzdHJ1
Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsIHUzMiBudW0pOworCXZvaWQgKCpraWNrX3Zx
KShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgpOworCXZvaWQgKCpzZXRfdnFfY2Ip
KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwKKwkJCSAgc3RydWN0IHZpcnRpb19t
ZGV2X2NhbGxiYWNrICpjYik7CisJdm9pZCAoKnNldF92cV9yZWFkeSkoc3RydWN0IG1kZXZfZGV2
aWNlICptZGV2LCB1MTYgaWR4LCBib29sIHJlYWR5KTsKKwlib29sICgqZ2V0X3ZxX3JlYWR5KShz
dHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgpOworCWludCAoKnNldF92cV9zdGF0ZSko
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4LCB1NjQgc3RhdGUpOworCXU2NCAoKmdl
dF92cV9zdGF0ZSkoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4KTsKKworICAgICAg
ICAvKiBEZXZpY2Ugb3BzICovCisJdTE2ICgqZ2V0X3ZxX2FsaWduKShzdHJ1Y3QgbWRldl9kZXZp
Y2UgKm1kZXYpOworCXU2NCAoKmdldF9mZWF0dXJlcykoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2
KTsKKwlpbnQgKCpzZXRfZmVhdHVyZXMpKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTY0IGZl
YXR1cmVzKTsKKwl2b2lkICgqc2V0X2NvbmZpZ19jYikoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2
LAorCQkJICAgICAgc3RydWN0IHZpcnRpb19tZGV2X2NhbGxiYWNrICpjYik7CisJdTE2ICgqZ2V0
X3F1ZXVlX21heCkoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKKwl1MzIgKCpnZXRfZGV2aWNl
X2lkKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpOworCXUzMiAoKmdldF92ZW5kb3JfaWQpKHN0
cnVjdCBtZGV2X2RldmljZSAqbWRldik7CisJdTggKCpnZXRfc3RhdHVzKShzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXYpOworCXZvaWQgKCpzZXRfc3RhdHVzKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1k
ZXYsIHU4IHN0YXR1cyk7CisJdm9pZCAoKmdldF9jb25maWcpKHN0cnVjdCBtZGV2X2RldmljZSAq
bWRldiwgdW5zaWduZWQgb2Zmc2V0LAorCQkJICAgdm9pZCAqYnVmLCB1bnNpZ25lZCBsZW4pOwor
CXZvaWQgKCpzZXRfY29uZmlnKShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2lnbmVkIG9m
ZnNldCwKKwkJCSAgIGNvbnN0IHZvaWQgKmJ1ZiwgdW5zaWduZWQgbGVuKTsKKwlpbnQgKCpnZXRf
dmVyc2lvbikoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKKwl1MzIgKCpnZXRfZ2VuZXJhdGlv
bikoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KTsKK307CisKKyNlbmRpZgorCi0tIAoyLjE5LjEK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZl
bCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
