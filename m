Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id CE7DB47C80
	for <lists+dri-devel@lfdr.de>; Mon, 17 Jun 2019 10:27:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4EE9489196;
	Mon, 17 Jun 2019 08:27:20 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-ua1-x94a.google.com (mail-ua1-x94a.google.com
 [IPv6:2607:f8b0:4864:20::94a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6C81989196
 for <dri-devel@lists.freedesktop.org>; Mon, 17 Jun 2019 08:27:18 +0000 (UTC)
Received: by mail-ua1-x94a.google.com with SMTP id d5so898953uaj.18
 for <dri-devel@lists.freedesktop.org>; Mon, 17 Jun 2019 01:27:18 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=UGH/ZD8XZqg1Lpk8YuejdU6YYNS5JjsOCwDCLK06nvg=;
 b=ZPi/vRNizmnQNvv/FPuIo+6WRSdXg2pGoxCYFY1hzT9RauFvQEEjaQi1fairRQhxfF
 mUYkcCEYYifuTq5Y+DsB/aipazYSlXSNA7WPjbhWzoRHKjmBFsimxE71v8R16AW/Kqud
 ODU9XNFIIX5Y9/Od77PYEc4eZuUcV6iX0QELv61nMrQkkmj/yo6gd0zYHp5Rnc6Fro1i
 ailM+Lws9znGmoybljeqSib3OeVD5drudgdRsQSVaXSoSk4Njv4f2P+G2k8em0GLzukf
 cIr/idgcNczX3oZ9riqtA6HTwKotR6sqjMDpX53crufCc4tvY6aca78rj8jNE08RbatK
 76qg==
X-Gm-Message-State: APjAAAUxScXyRMmtXfNKFFb+Yq00ILJBLYj/1nKrRB95HzU8nXpN15hK
 ivRQE8GfPTjxCylck8rUa42k7kxYS3e+Dty129Ixhw==
X-Google-Smtp-Source: APXvYqx1JT12PYIme+N17c67y3e0mvq5DW4zq24/FXVLKrrU/jrGO2QPy3mp2TRjmKPWasp6RRtJWhCpQU3hEuQCWZwlag==
X-Received: by 2002:a67:d41d:: with SMTP id c29mr24889873vsj.101.1560760037365; 
 Mon, 17 Jun 2019 01:27:17 -0700 (PDT)
Date: Mon, 17 Jun 2019 01:26:04 -0700
In-Reply-To: <20190617082613.109131-1-brendanhiggins@google.com>
Message-Id: <20190617082613.109131-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190617082613.109131-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v5 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=UGH/ZD8XZqg1Lpk8YuejdU6YYNS5JjsOCwDCLK06nvg=;
 b=HIdrbAOR7Ai/LT5HpVPA+L1IOqjcHwboymymGvsio8gFfBn2C56DUt29hM1bmIQQwf
 vx6PBweqZrvP9vfTIQLrC5N3eTal19Yn3037gWAQQn77e0nDPItuI8OfRf88xaBFVeLm
 CcPtiYoyIHN1muhpvzfRVLBkE34UQ/MjLuNzUpxTjFYC8khUiCrrn+H4G4vqbR9SONhq
 rRlCH8w2EI7zLsDDToSUJlwUhwHCySWFCc6CbEsMy0NmSuw1iD2mHvdhY0Ij6PypYsxE
 0OyNE6X/8hyio8mWkbSQenznEXu0w2ax2qVNHVAlG3FolSoXJ+tPmqyrMrflBPVshQBm
 w8qw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAxNCArKysKIGluY2x1ZGUva3VuaXQvdHJ5LWNh
dGNoLmggfCAgNjkgKysrKysrKysrKysrKysrCiBrdW5pdC9NYWtlZmlsZSAgICAgICAgICAgIHwg
ICAzICstCiBrdW5pdC90ZXN0LmMgICAgICAgICAgICAgIHwgMTc3ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKystLS0tCiBrdW5pdC90cnktY2F0Y2guYyAgICAgICAgIHwgIDk1ICsr
KysrKysrKysrKysrKysrKysrCiA1IGZpbGVzIGNoYW5nZWQsIDM0MiBpbnNlcnRpb25zKCspLCAx
NiBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2t1bml0L3RyeS1jYXRj
aC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQga3VuaXQvdHJ5LWNhdGNoLmMKCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2t1bml0L3Rlc3QuaCBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCmluZGV4IGU0Yzc2MGNj
Yzg3MTcuLjE5NGM4NWFmYzY5YTggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUva3VuaXQvdGVzdC5oCisr
KyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC0xMyw2ICsxMyw3IEBACiAjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiAjaW5jbHVkZSA8a3VuaXQva3Vu
aXQtc3RyZWFtLmg+CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CiAKIHN0cnVjdCBrdW5p
dF9yZXNvdXJjZTsKIApAQCAtMTY3LDE1ICsxNjgsMjggQEAgc3RydWN0IGt1bml0IHsKIAogCS8q
IHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLwogCWNvbnN0IGNoYXIgKm5hbWU7IC8qIFJl
YWQgb25seSBhZnRlciBpbml0aWFsaXphdGlvbiEgKi8KKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNo
IHRyeV9jYXRjaDsKIAlzcGlubG9ja190IGxvY2s7IC8qIEdhdXJkcyBhbGwgbXV0YWJsZSB0ZXN0
IHN0YXRlLiAqLwogCWJvb2wgc3VjY2VzczsgLyogUHJvdGVjdGVkIGJ5IGxvY2suICovCisJYm9v
bCBkZWF0aF90ZXN0OyAvKiBQcm90ZWN0ZWQgYnkgbG9jay4gKi8KIAlzdHJ1Y3QgbGlzdF9oZWFk
IHJlc291cmNlczsgLyogUHJvdGVjdGVkIGJ5IGxvY2suICovCiB9OwogCitzdGF0aWMgaW5saW5l
IHZvaWQga3VuaXRfc2V0X2RlYXRoX3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBib29sIGRlYXRo
X3Rlc3QpCit7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ0
ZXN0LT5sb2NrLCBmbGFncyk7CisJdGVzdC0+ZGVhdGhfdGVzdCA9IGRlYXRoX3Rlc3Q7CisJc3Bp
bl91bmxvY2tfaXJxcmVzdG9yZSgmdGVzdC0+bG9jaywgZmxhZ3MpOworfQorCiB2b2lkIGt1bml0
X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3QsIGNvbnN0IGNoYXIgKm5hbWUpOwogCiB2b2lk
IGt1bml0X2ZhaWwoc3RydWN0IGt1bml0ICp0ZXN0LCBzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJl
YW0pOwogCit2b2lkIGt1bml0X2Fib3J0KHN0cnVjdCBrdW5pdCAqdGVzdCk7CisKIGludCBrdW5p
dF9ydW5fdGVzdHMoc3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlKTsKIAogLyoqCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2t1bml0L3RyeS1jYXRjaC5oIGIvaW5jbHVkZS9rdW5pdC90cnktY2F0Y2gu
aApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi44YTQxNGE5YWYwYjY0
Ci0tLSAvZGV2L251bGwKKysrIGIvaW5jbHVkZS9rdW5pdC90cnktY2F0Y2guaApAQCAtMCwwICsx
LDY5IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLworLyoKKyAqIEFu
IEFQSSB0byBhbGxvdyBhIGZ1bmN0aW9uLCB0aGF0IG1heSBmYWlsLCB0byBiZSBleGVjdXRlZCwg
YW5kIHJlY292ZXIgaW4gYQorICogY29udHJvbGxlZCBtYW5uZXIuCisgKgorICogQ29weXJpZ2h0
IChDKSAyMDE5LCBHb29nbGUgTExDLgorICogQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5k
YW5oaWdnaW5zQGdvb2dsZS5jb20+CisgKi8KKworI2lmbmRlZiBfS1VOSVRfVFJZX0NBVENIX0gK
KyNkZWZpbmUgX0tVTklUX1RSWV9DQVRDSF9ICisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgor
Cit0eXBlZGVmIHZvaWQgKCprdW5pdF90cnlfY2F0Y2hfZnVuY190KSh2b2lkICopOworCitzdHJ1
Y3Qga3VuaXQ7CisKKy8qCisgKiBzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoIC0gcHJvdmlkZXMgYSBn
ZW5lcmljIHdheSB0byBydW4gY29kZSB3aGljaCBtaWdodCBmYWlsLgorICogQGNvbnRleHQ6IHVz
ZWQgdG8gcGFzcyB1c2VyIGRhdGEgdG8gdGhlIHRyeSBhbmQgY2F0Y2ggZnVuY3Rpb25zLgorICoK
KyAqIGt1bml0X3RyeV9jYXRjaCBwcm92aWRlcyBhIGdlbmVyaWMsIGFyY2hpdGVjdHVyZSBpbmRl
cGVuZGVudCB3YXkgdG8gZXhlY3V0ZQorICogYW4gYXJiaXRyYXJ5IGZ1bmN0aW9uIG9mIHR5cGUg
a3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB3aGljaCBtYXkgYmFpbCBvdXQgYnkKKyAqIGNhbGxpbmcg
a3VuaXRfdHJ5X2NhdGNoX3Rocm93KCkuIElmIGt1bml0X3RyeV9jYXRjaF90aHJvdygpIGlzIGNh
bGxlZCwgQHRyeQorICogaXMgc3RvcHBlZCBhdCB0aGUgc2l0ZSBvZiBpbnZvY2F0aW9uIGFuZCBA
Y2F0Y2ggaXMgY2F0Y2ggaXMgY2FsbGVkLgorICoKKyAqIHN0cnVjdCBrdW5pdF90cnlfY2F0Y2gg
cHJvdmlkZXMgYSBnZW5lcmljIGludGVyZmFjZSBmb3IgdGhlIGZ1bmN0aW9uYWxpdHkKKyAqIG5l
ZWRlZCB0byBpbXBsZW1lbnQga3VuaXQtPmFib3J0KCkgd2hpY2ggaW4gdHVybiBpcyBuZWVkZWQg
Zm9yIGltcGxlbWVudGluZworICogYXNzZXJ0aW9ucy4gQXNzZXJ0aW9ucyBhbGxvdyBzdGF0aW5n
IGEgcHJlY29uZGl0aW9uIGZvciBhIHRlc3Qgc2ltcGxpZnlpbmcKKyAqIGhvdyB0ZXN0IGNhc2Vz
IGFyZSB3cml0dGVuIGFuZCBwcmVzZW50ZWQuCisgKgorICogQXNzZXJ0aW9ucyBhcmUgbGlrZSBl
eHBlY3RhdGlvbnMsIGV4Y2VwdCB0aGV5IGFib3J0IChjYWxsCisgKiBrdW5pdF90cnlfY2F0Y2hf
dGhyb3coKSkgd2hlbiB0aGUgc3BlY2lmaWVkIGNvbmRpdGlvbiBpcyBub3QgbWV0LiBUaGlzIGlz
CisgKiB1c2VmdWwgd2hlbiB5b3UgbG9vayBhdCBhIHRlc3QgY2FzZSBhcyBhIGxvZ2ljYWwgc3Rh
dGVtZW50IGFib3V0IHNvbWUgcGllY2UKKyAqIG9mIGNvZGUsIHdoZXJlIGFzc2VydGlvbnMgYXJl
IHRoZSBwcmVtaXNlcyBmb3IgdGhlIHRlc3QgY2FzZSwgYW5kIHRoZQorICogY29uY2x1c2lvbiBp
cyBhIHNldCBvZiBwcmVkaWNhdGVzLCByYXRoZXIgZXhwZWN0YXRpb25zLCB0aGF0IG11c3QgYWxs
IGJlCisgKiB0cnVlLiBJZiB5b3VyIHByZW1pc2VzIGFyZSB2aW9sYXRlZCwgaXQgZG9lcyBub3Qg
bWFrZXMgc2Vuc2UgdG8gY29udGludWUuCisgKi8KK3N0cnVjdCBrdW5pdF90cnlfY2F0Y2ggewor
CS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLworCXN0cnVjdCBrdW5pdCAqdGVzdDsK
KwlzdHJ1Y3QgY29tcGxldGlvbiAqdHJ5X2NvbXBsZXRpb247CisJaW50IHRyeV9yZXN1bHQ7CisJ
a3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB0cnk7CisJa3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRj
aDsKKwl2b2lkICpjb250ZXh0OworfTsKKwordm9pZCBrdW5pdF90cnlfY2F0Y2hfaW5pdChzdHJ1
Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsCisJCQkgIHN0cnVjdCBrdW5pdCAqdGVzdCwK
KwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB0cnksCisJCQkgIGt1bml0X3RyeV9jYXRjaF9m
dW5jX3QgY2F0Y2gpOworCit2b2lkIGt1bml0X3RyeV9jYXRjaF9ydW4oc3RydWN0IGt1bml0X3Ry
eV9jYXRjaCAqdHJ5X2NhdGNoLCB2b2lkICpjb250ZXh0KTsKKwordm9pZCBfX25vcmV0dXJuIGt1
bml0X3RyeV9jYXRjaF90aHJvdyhzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpOwor
CitzdGF0aWMgaW5saW5lIGludCBrdW5pdF90cnlfY2F0Y2hfZ2V0X3Jlc3VsdChzdHJ1Y3Qga3Vu
aXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpCit7CisJcmV0dXJuIHRyeV9jYXRjaC0+dHJ5X3Jlc3Vs
dDsKK30KKworLyoKKyAqIEV4cG9zZWQgZm9yIHRlc3Rpbmcgb25seS4KKyAqLwordm9pZCBrdW5p
dF9nZW5lcmljX3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRj
aCk7CisKKyNlbmRpZiAvKiBfS1VOSVRfVFJZX0NBVENIX0ggKi8KZGlmZiAtLWdpdCBhL2t1bml0
L01ha2VmaWxlIGIva3VuaXQvTWFrZWZpbGUKaW5kZXggNjBhOWVhNmNiNDY5Ny4uMWY3NjgwY2Zh
MTFhZCAxMDA2NDQKLS0tIGEva3VuaXQvTWFrZWZpbGUKKysrIGIva3VuaXQvTWFrZWZpbGUKQEAg
LTEsNiArMSw3IEBACiBvYmotJChDT05GSUdfS1VOSVQpICs9CQkJdGVzdC5vIFwKIAkJCQkJc3Ry
aW5nLXN0cmVhbS5vIFwKLQkJCQkJa3VuaXQtc3RyZWFtLm8KKwkJCQkJa3VuaXQtc3RyZWFtLm8g
XAorCQkJCQl0cnktY2F0Y2gubwogCiBvYmotJChDT05GSUdfS1VOSVRfVEVTVCkgKz0JCXN0cmlu
Zy1zdHJlYW0tdGVzdC5vCiAKZGlmZiAtLWdpdCBhL2t1bml0L3Rlc3QuYyBiL2t1bml0L3Rlc3Qu
YwppbmRleCAwYmEwNTQ2N2Q1MjVmLi5jYjA3ZTA5MTZlOTAxIDEwMDY0NAotLS0gYS9rdW5pdC90
ZXN0LmMKKysrIGIva3VuaXQvdGVzdC5jCkBAIC04LDYgKzgsNyBAQAogCiAjaW5jbHVkZSA8bGlu
dXgvc2NoZWQvZGVidWcuaD4KICNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+CisjaW5jbHVkZSA8a3Vu
aXQvdHJ5LWNhdGNoLmg+CiAKIHN0YXRpYyBib29sIGt1bml0X2dldF9zdWNjZXNzKHN0cnVjdCBr
dW5pdCAqdGVzdCkKIHsKQEAgLTMwLDYgKzMxLDE4IEBAIHN0YXRpYyB2b2lkIGt1bml0X3NldF9z
dWNjZXNzKHN0cnVjdCBrdW5pdCAqdGVzdCwgYm9vbCBzdWNjZXNzKQogCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJnRlc3QtPmxvY2ssIGZsYWdzKTsKIH0KIAorc3RhdGljIGJvb2wga3VuaXRfZ2V0
X2RlYXRoX3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7
CisJYm9vbCBkZWF0aF90ZXN0OworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnRlc3QtPmxvY2ssIGZs
YWdzKTsKKwlkZWF0aF90ZXN0ID0gdGVzdC0+ZGVhdGhfdGVzdDsKKwlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZ0ZXN0LT5sb2NrLCBmbGFncyk7CisKKwlyZXR1cm4gZGVhdGhfdGVzdDsKK30KKwog
c3RhdGljIGludCBrdW5pdF92cHJpbnRrX2VtaXQoaW50IGxldmVsLCBjb25zdCBjaGFyICpmbXQs
IHZhX2xpc3QgYXJncykKIHsKIAlyZXR1cm4gdnByaW50a19lbWl0KDAsIGxldmVsLCBOVUxMLCAw
LCBmbXQsIGFyZ3MpOwpAQCAtMTQ1LDQxICsxNTgsMTc1IEBAIHZvaWQga3VuaXRfZmFpbChzdHJ1
Y3Qga3VuaXQgKnRlc3QsIHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSkKIAlrdW5pdF9zdHJl
YW1fY29tbWl0KHN0cmVhbSk7CiB9CiAKK3ZvaWQgX19ub3JldHVybiBrdW5pdF9hYm9ydChzdHJ1
Y3Qga3VuaXQgKnRlc3QpCit7CisJa3VuaXRfc2V0X2RlYXRoX3Rlc3QodGVzdCwgdHJ1ZSk7CisK
KwlrdW5pdF90cnlfY2F0Y2hfdGhyb3coJnRlc3QtPnRyeV9jYXRjaCk7CisKKwkvKgorCSAqIFRo
cm93IGNvdWxkIG5vdCBhYm9ydCBmcm9tIHRlc3QuCisJICoKKwkgKiBYWFg6IHdlIHNob3VsZCBu
ZXZlciByZWFjaCB0aGlzIGxpbmUhIEFzIGt1bml0X3RyeV9jYXRjaF90aHJvdyBpcworCSAqIG1h
cmtlZCBfX25vcmV0dXJuLgorCSAqLworCVdBUk5fT05DRSh0cnVlLCAiVGhyb3cgY291bGQgbm90
IGFib3J0IGZyb20gdGVzdCFcbiIpOworfQorCiB2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qg
a3VuaXQgKnRlc3QsIGNvbnN0IGNoYXIgKm5hbWUpCiB7CiAJc3Bpbl9sb2NrX2luaXQoJnRlc3Qt
PmxvY2spOwogCUlOSVRfTElTVF9IRUFEKCZ0ZXN0LT5yZXNvdXJjZXMpOwogCXRlc3QtPm5hbWUg
PSBuYW1lOwogCXRlc3QtPnN1Y2Nlc3MgPSB0cnVlOworCXRlc3QtPmRlYXRoX3Rlc3QgPSBmYWxz
ZTsKIH0KIAogLyoKLSAqIFBlcmZvcm1zIGFsbCBsb2dpYyB0byBydW4gYSB0ZXN0IGNhc2UuCisg
KiBJbml0aWFsaXplcyBhbmQgcnVucyB0ZXN0IGNhc2UuIERvZXMgbm90IGNsZWFuIHVwIG9yIGRv
IHBvc3QgdmFsaWRhdGlvbnMuCiAgKi8KLXN0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlKHN0cnVj
dCBrdW5pdF9tb2R1bGUgKm1vZHVsZSwKLQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nh
c2UpCitzdGF0aWMgdm9pZCBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbChzdHJ1Y3Qga3VuaXQgKnRl
c3QsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSwKKwkJCQkgICAgc3RydWN0
IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSkKIHsKLQlzdHJ1Y3Qga3VuaXQgdGVzdDsKLQlpbnQgcmV0
ID0gMDsKLQotCWt1bml0X2luaXRfdGVzdCgmdGVzdCwgdGVzdF9jYXNlLT5uYW1lKTsKKwlpbnQg
cmV0OwogCiAJaWYgKG1vZHVsZS0+aW5pdCkgewotCQlyZXQgPSBtb2R1bGUtPmluaXQoJnRlc3Qp
OworCQlyZXQgPSBtb2R1bGUtPmluaXQodGVzdCk7CiAJCWlmIChyZXQpIHsKLQkJCWt1bml0X2Vy
cigmdGVzdCwgImZhaWxlZCB0byBpbml0aWFsaXplOiAlZFxuIiwgcmV0KTsKLQkJCWt1bml0X3Nl
dF9zdWNjZXNzKCZ0ZXN0LCBmYWxzZSk7CisJCQlrdW5pdF9lcnIodGVzdCwgImZhaWxlZCB0byBp
bml0aWFsaXplOiAlZFxuIiwgcmV0KTsKKwkJCWt1bml0X3NldF9zdWNjZXNzKHRlc3QsIGZhbHNl
KTsKIAkJCXJldHVybjsKIAkJfQogCX0KIAotCWlmICghcmV0KQotCQl0ZXN0X2Nhc2UtPnJ1bl9j
YXNlKCZ0ZXN0KTsKKwl0ZXN0X2Nhc2UtPnJ1bl9jYXNlKHRlc3QpOworfQorCitzdGF0aWMgdm9p
ZCBrdW5pdF9jYXNlX2ludGVybmFsX2NsZWFudXAoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWt1
bml0X2NsZWFudXAodGVzdCk7Cit9CiAKKy8qCisgKiBQZXJmb3JtcyBwb3N0IHZhbGlkYXRpb25z
IGFuZCBjbGVhbnVwIGFmdGVyIGEgdGVzdCBjYXNlIHdhcyBydW4uCisgKiBYWFg6IFNob3VsZCBP
TkxZIEJFIENBTExFRCBBRlRFUiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCEKKyAqLworc3RhdGlj
IHZvaWQga3VuaXRfcnVuX2Nhc2VfY2xlYW51cChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAg
c3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlKQorewogCWlmIChtb2R1bGUtPmV4aXQpCi0JCW1v
ZHVsZS0+ZXhpdCgmdGVzdCk7CisJCW1vZHVsZS0+ZXhpdCh0ZXN0KTsKKworCWt1bml0X2Nhc2Vf
aW50ZXJuYWxfY2xlYW51cCh0ZXN0KTsKK30KKworLyoKKyAqIEhhbmRsZXMgYW4gdW5leHBlY3Rl
ZCBjcmFzaCBpbiBhIHRlc3QgY2FzZS4KKyAqLworc3RhdGljIHZvaWQga3VuaXRfaGFuZGxlX3Rl
c3RfY3Jhc2goc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJCSAgIHN0cnVjdCBrdW5pdF9tb2R1bGUg
Km1vZHVsZSwKKwkJCQkgICBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCWt1bml0
X2Vycih0ZXN0LCAia3VuaXQgdGVzdCBjYXNlIGNyYXNoZWQhIik7CisJLyoKKwkgKiBUT0RPKGJy
ZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20pOiBUaGlzIHByaW50cyB0aGUgc3RhY2sgdHJhY2UgdXAK
KwkgKiB0aHJvdWdoIHRoaXMgZnJhbWUsIG5vdCB1cCB0byB0aGUgZnJhbWUgdGhhdCBjYXVzZWQg
dGhlIGNyYXNoLgorCSAqLworCXNob3dfc3RhY2soTlVMTCwgTlVMTCk7CisKKwlrdW5pdF9jYXNl
X2ludGVybmFsX2NsZWFudXAodGVzdCk7Cit9CisKK3N0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29u
dGV4dCB7CisJc3RydWN0IGt1bml0ICp0ZXN0OworCXN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVs
ZTsKKwlzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlOworfTsKKworc3RhdGljIHZvaWQga3Vu
aXRfdHJ5X3J1bl9jYXNlKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaF9j
b250ZXh0ICpjdHggPSBkYXRhOworCXN0cnVjdCBrdW5pdCAqdGVzdCA9IGN0eC0+dGVzdDsKKwlz
dHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUgPSBjdHgtPm1vZHVsZTsKKwlzdHJ1Y3Qga3VuaXRf
Y2FzZSAqdGVzdF9jYXNlID0gY3R4LT50ZXN0X2Nhc2U7CisKKwkvKgorCSAqIGt1bml0X3J1bl9j
YXNlX2ludGVybmFsIG1heSBlbmNvdW50ZXIgYSBmYXRhbCBlcnJvcjsgaWYgaXQgZG9lcywKKwkg
KiBhYm9ydCB3aWxsIGJlIGNhbGxlZCwgdGhpcyB0aHJlYWQgd2lsbCBleGl0LCBhbmQgZmluYWxs
eSB0aGUgcGFyZW50CisJICogdGhyZWFkIHdpbGwgcmVzdW1lIGNvbnRyb2wgYW5kIGhhbmRsZSBh
bnkgbmVjZXNzYXJ5IGNsZWFuIHVwLgorCSAqLworCWt1bml0X3J1bl9jYXNlX2ludGVybmFsKHRl
c3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKKwkvKiBUaGlzIGxpbmUgbWF5IG5ldmVyIGJlIHJlYWNo
ZWQuICovCisJa3VuaXRfcnVuX2Nhc2VfY2xlYW51cCh0ZXN0LCBtb2R1bGUpOworfQorCitzdGF0
aWMgdm9pZCBrdW5pdF9jYXRjaF9ydW5fY2FzZSh2b2lkICpkYXRhKQoreworCXN0cnVjdCBrdW5p
dF90cnlfY2F0Y2hfY29udGV4dCAqY3R4ID0gZGF0YTsKKwlzdHJ1Y3Qga3VuaXQgKnRlc3QgPSBj
dHgtPnRlc3Q7CisJc3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlID0gY3R4LT5tb2R1bGU7CisJ
c3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSA9IGN0eC0+dGVzdF9jYXNlOworCWludCB0cnlf
ZXhpdF9jb2RlID0ga3VuaXRfdHJ5X2NhdGNoX2dldF9yZXN1bHQoJnRlc3QtPnRyeV9jYXRjaCk7
CisKKwlpZiAodHJ5X2V4aXRfY29kZSkgeworCQlrdW5pdF9zZXRfc3VjY2Vzcyh0ZXN0LCBmYWxz
ZSk7CisJCS8qCisJCSAqIFRlc3QgY2FzZSBjb3VsZCBub3QgZmluaXNoLCB3ZSBoYXZlIG5vIGlk
ZWEgd2hhdCBzdGF0ZSBpdCBpcworCQkgKiBpbiwgc28gZG9uJ3QgZG8gY2xlYW4gdXAuCisJCSAq
LworCQlpZiAodHJ5X2V4aXRfY29kZSA9PSAtRVRJTUVET1VUKQorCQkJa3VuaXRfZXJyKHRlc3Qs
ICJ0ZXN0IGNhc2UgdGltZWQgb3V0XG4iKTsKKwkJLyoKKwkJICogVW5rbm93biBpbnRlcm5hbCBl
cnJvciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBmcm9tCisJCSAqIHJ1bm5pbmcsIHNv
IHRoZXJlIGlzIG5vdGhpbmcgdG8gY2xlYW4gdXAuCisJCSAqLworCQllbHNlCisJCQlrdW5pdF9l
cnIodGVzdCwgImludGVybmFsIGVycm9yIG9jY3VycmVkIHByZXZlbnRpbmcgdGVzdCBjYXNlIGZy
b20gcnVubmluZzogJWRcbiIsCisJCQkJICB0cnlfZXhpdF9jb2RlKTsKKwkJcmV0dXJuOworCX0K
KworCWlmIChrdW5pdF9nZXRfZGVhdGhfdGVzdCh0ZXN0KSkgeworCQkvKgorCQkgKiBFWFBFQ1RF
RCBERUFUSDoga3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwgZW5jb3VudGVyZWQKKwkJICogYW50aWNp
cGF0ZWQgZmF0YWwgZXJyb3IuIEV2ZXJ5dGhpbmcgc2hvdWxkIGJlIGluIGEgc2FmZQorCQkgKiBz
dGF0ZS4KKwkJICovCisJCWt1bml0X3J1bl9jYXNlX2NsZWFudXAodGVzdCwgbW9kdWxlKTsKKwl9
IGVsc2UgeworCQkvKgorCQkgKiBVTkVYUEVDVEVEIERFQVRIOiBrdW5pdF9ydW5fY2FzZV9pbnRl
cm5hbCBlbmNvdW50ZXJlZCBhbgorCQkgKiB1bmFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBXZSBo
YXZlIG5vIGlkZWEgd2hhdCB0aGUgc3RhdGUgb2YKKwkJICogdGhlIHRlc3QgY2FzZSBpcyBpbi4K
KwkJICovCisJCWt1bml0X2hhbmRsZV90ZXN0X2NyYXNoKHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNl
KTsKKwkJa3VuaXRfc2V0X3N1Y2Nlc3ModGVzdCwgZmFsc2UpOworCX0KK30KKworLyoKKyAqIFBl
cmZvcm1zIGFsbCBsb2dpYyB0byBydW4gYSB0ZXN0IGNhc2UuIEl0IGFsc28gY2F0Y2hlcyBtb3N0
IGVycm9ycyB0aGF0CisgKiBvY2N1cnMgaW4gYSB0ZXN0IGNhc2UgYW5kIHJlcG9ydHMgdGhlbSBh
cyBmYWlsdXJlcy4KKyAqLworc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2VfY2F0Y2hfZXJyb3Jz
KHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSwKKwkJCQkJc3RydWN0IGt1bml0X2Nhc2UgKnRl
c3RfY2FzZSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgY29udGV4dDsKKwlz
dHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2g7CisJc3RydWN0IGt1bml0IHRlc3Q7CisK
KwlrdW5pdF9pbml0X3Rlc3QoJnRlc3QsIHRlc3RfY2FzZS0+bmFtZSk7CisJdHJ5X2NhdGNoID0g
JnRlc3QudHJ5X2NhdGNoOwogCi0Ja3VuaXRfY2xlYW51cCgmdGVzdCk7CisJa3VuaXRfdHJ5X2Nh
dGNoX2luaXQodHJ5X2NhdGNoLAorCQkJICAgICAmdGVzdCwKKwkJCSAgICAga3VuaXRfdHJ5X3J1
bl9jYXNlLAorCQkJICAgICBrdW5pdF9jYXRjaF9ydW5fY2FzZSk7CisJY29udGV4dC50ZXN0ID0g
JnRlc3Q7CisJY29udGV4dC5tb2R1bGUgPSBtb2R1bGU7CisJY29udGV4dC50ZXN0X2Nhc2UgPSB0
ZXN0X2Nhc2U7CisJa3VuaXRfdHJ5X2NhdGNoX3J1bih0cnlfY2F0Y2gsICZjb250ZXh0KTsKIAog
CXRlc3RfY2FzZS0+c3VjY2VzcyA9IGt1bml0X2dldF9zdWNjZXNzKCZ0ZXN0KTsKIH0KQEAgLTE5
Miw3ICszMzksNyBAQCBpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1v
ZHVsZSkKIAlrdW5pdF9wcmludF9zdWJ0ZXN0X3N0YXJ0KG1vZHVsZSk7CiAKIAlmb3IgKHRlc3Rf
Y2FzZSA9IG1vZHVsZS0+dGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsgdGVzdF9jYXNl
KyspIHsKLQkJa3VuaXRfcnVuX2Nhc2UobW9kdWxlLCB0ZXN0X2Nhc2UpOworCQlrdW5pdF9ydW5f
Y2FzZV9jYXRjaF9lcnJvcnMobW9kdWxlLCB0ZXN0X2Nhc2UpOwogCQlrdW5pdF9wcmludF90ZXN0
X2Nhc2Vfb2tfbm90X29rKHRlc3RfY2FzZSwgdGVzdF9jYXNlX2NvdW50KyspOwogCX0KIApkaWZm
IC0tZ2l0IGEva3VuaXQvdHJ5LWNhdGNoLmMgYi9rdW5pdC90cnktY2F0Y2guYwpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi5kZTU4MGYwNzQzODdiCi0tLSAvZGV2L251
bGwKKysrIGIva3VuaXQvdHJ5LWNhdGNoLmMKQEAgLTAsMCArMSw5NSBAQAorLy8gU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBBbiBBUEkgdG8gYWxsb3cgYSBmdW5jdGlv
biwgdGhhdCBtYXkgZmFpbCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGluIGEKKyAqIGNv
bnRyb2xsZWQgbWFubmVyLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4K
KyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgor
ICovCisKKyNpbmNsdWRlIDxrdW5pdC90cnktY2F0Y2guaD4KKyNpbmNsdWRlIDxrdW5pdC90ZXN0
Lmg+CisjaW5jbHVkZSA8bGludXgvY29tcGxldGlvbi5oPgorI2luY2x1ZGUgPGxpbnV4L2t0aHJl
YWQuaD4KKwordm9pZCBfX25vcmV0dXJuIGt1bml0X3RyeV9jYXRjaF90aHJvdyhzdHJ1Y3Qga3Vu
aXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpCit7CisJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gLUVG
QVVMVDsKKwljb21wbGV0ZV9hbmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uLCAtRUZB
VUxUKTsKK30KKworc3RhdGljIGludCBrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFwdGVy
KHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoID0gZGF0
YTsKKworCXRyeV9jYXRjaC0+dHJ5KHRyeV9jYXRjaC0+Y29udGV4dCk7CisKKwljb21wbGV0ZV9h
bmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uLCAwKTsKK30KKwordm9pZCBrdW5pdF90
cnlfY2F0Y2hfcnVuKHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwgdm9pZCAqY29u
dGV4dCkKK3sKKwlERUNMQVJFX0NPTVBMRVRJT05fT05TVEFDSyh0cnlfY29tcGxldGlvbik7CisJ
c3RydWN0IGt1bml0ICp0ZXN0ID0gdHJ5X2NhdGNoLT50ZXN0OworCXN0cnVjdCB0YXNrX3N0cnVj
dCAqdGFza19zdHJ1Y3Q7CisJaW50IGV4aXRfY29kZSwgc3RhdHVzOworCisJdHJ5X2NhdGNoLT5j
b250ZXh0ID0gY29udGV4dDsKKwl0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uID0gJnRyeV9jb21w
bGV0aW9uOworCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IDA7CisJdGFza19zdHJ1Y3QgPSBrdGhy
ZWFkX3J1bihrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFwdGVyLAorCQkJCSAgdHJ5X2Nh
dGNoLAorCQkJCSAgImt1bml0X3RyeV9jYXRjaF90aHJlYWQiKTsKKwlpZiAoSVNfRVJSKHRhc2tf
c3RydWN0KSkgeworCQl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4dCk7CisJCXJl
dHVybjsKKwl9CisKKwkvKgorCSAqIFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6IFdl
IHNob3VsZCBwcm9iYWJseSBoYXZlIHNvbWUgdHlwZSBvZgorCSAqIHZhcmlhYmxlIHRpbWVvdXQg
aGVyZS4gVGhlIG9ubHkgcXVlc3Rpb24gaXMgd2hhdCB0aGF0IHRpbWVvdXQgdmFsdWUKKwkgKiBz
aG91bGQgYmUuCisJICoKKwkgKiBUaGUgaW50ZW50aW9uIGhhcyBhbHdheXMgYmVlbiwgYXQgc29t
ZSBwb2ludCwgdG8gYmUgYWJsZSB0byBsYWJlbAorCSAqIHRlc3RzIHdpdGggc29tZSB0eXBlIG9m
IHNpemUgYnVja2V0ICh1bml0L3NtYWxsLCBpbnRlZ3JhdGlvbi9tZWRpdW0sCisJICogbGFyZ2Uv
c3lzdGVtL2VuZC10by1lbmQsIGV0YyksIHdoZXJlIGVhY2ggc2l6ZSBidWNrZXQgd291bGQgZ2V0
IGEKKwkgKiBkZWZhdWx0IHRpbWVvdXQgdmFsdWUga2luZCBvZiBsaWtlIHdoYXQgQmF6ZWwgZG9l
czoKKwkgKiBodHRwczovL2RvY3MuYmF6ZWwuYnVpbGQvdmVyc2lvbnMvbWFzdGVyL2JlL2NvbW1v
bi1kZWZpbml0aW9ucy5odG1sI3Rlc3Quc2l6ZQorCSAqIFRoZXJlIGlzIHN0aWxsIHNvbWUgZGVi
YXRlIHRvIGJlIGhhZCBvbiBleGFjdGx5IGhvdyB3ZSBkbyB0aGlzLiAoRm9yCisJICogb25lLCB3
ZSBwcm9iYWJseSB3YW50IHRvIGhhdmUgc29tZSBzb3J0IG9mIHRlc3QgcnVubmVyIGxldmVsCisJ
ICogdGltZW91dC4pCisJICoKKwkgKiBGb3IgbW9yZSBiYWNrZ3JvdW5kIG9uIHRoaXMgdG9waWMs
IHNlZToKKwkgKiBodHRwczovL21pa2UtYmxhbmQuY29tLzIwMTEvMTEvMDEvc21hbGwtbWVkaXVt
LWxhcmdlLmh0bWwKKwkgKi8KKwlzdGF0dXMgPSB3YWl0X2Zvcl9jb21wbGV0aW9uX3RpbWVvdXQo
JnRyeV9jb21wbGV0aW9uLAorCQkJCQkgICAgIDMwMCAqIE1TRUNfUEVSX1NFQyk7IC8qIDUgbWlu
ICovCisJaWYgKHN0YXR1cyA8IDApIHsKKwkJa3VuaXRfZXJyKHRlc3QsICJ0cnkgdGltZWQgb3V0
XG4iKTsKKwkJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gLUVUSU1FRE9VVDsKKwl9CisKKwlleGl0
X2NvZGUgPSB0cnlfY2F0Y2gtPnRyeV9yZXN1bHQ7CisKKwlpZiAoIWV4aXRfY29kZSkKKwkJcmV0
dXJuOworCisJaWYgKGV4aXRfY29kZSA9PSAtRUZBVUxUKQorCQl0cnlfY2F0Y2gtPnRyeV9yZXN1
bHQgPSAwOworCWVsc2UgaWYgKGV4aXRfY29kZSA9PSAtRUlOVFIpCisJCWt1bml0X2Vycih0ZXN0
LCAid2FrZV91cF9wcm9jZXNzKCkgd2FzIG5ldmVyIGNhbGxlZFxuIik7CisJZWxzZSBpZiAoZXhp
dF9jb2RlKQorCQlrdW5pdF9lcnIodGVzdCwgIlVua25vd24gZXJyb3I6ICVkXG4iLCBleGl0X2Nv
ZGUpOworCisJdHJ5X2NhdGNoLT5jYXRjaCh0cnlfY2F0Y2gtPmNvbnRleHQpOworfQorCit2b2lk
IGt1bml0X3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwK
KwkJCSAgc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IHRy
eSwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaCkKK3sKKwl0cnlfY2F0Y2gtPnRl
c3QgPSB0ZXN0OworCXRyeV9jYXRjaC0+dHJ5ID0gdHJ5OworCXRyeV9jYXRjaC0+Y2F0Y2ggPSBj
YXRjaDsKK30KLS0gCjIuMjIuMC40MTAuZ2Q4ZmRiZTIxYjUtZ29vZwoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApk
cmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
