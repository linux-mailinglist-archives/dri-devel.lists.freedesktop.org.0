Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 78B4DD2133
	for <lists+dri-devel@lfdr.de>; Thu, 10 Oct 2019 08:55:50 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 125C46EAA0;
	Thu, 10 Oct 2019 06:55:33 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from Galois.linutronix.de (Galois.linutronix.de
 [IPv6:2a0a:51c0:0:12e:550::1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E465F892AC;
 Wed,  9 Oct 2019 13:00:23 +0000 (UTC)
Received: from [5.158.153.53] (helo=tip-bot2.lab.linutronix.de)
 by Galois.linutronix.de with esmtpsa (TLS1.2:DHE_RSA_AES_256_CBC_SHA256:256)
 (Exim 4.80) (envelope-from <tip-bot2@linutronix.de>)
 id 1iIBZ8-0002z4-7q; Wed, 09 Oct 2019 14:59:42 +0200
Received: from [127.0.1.1] (localhost [IPv6:::1])
 by tip-bot2.lab.linutronix.de (Postfix) with ESMTP id C952A1C0196;
 Wed,  9 Oct 2019 14:59:41 +0200 (CEST)
Date: Wed, 09 Oct 2019 12:59:41 -0000
From: "tip-bot2 for Qian Cai" <tip-bot2@linutronix.de>
To: linux-tip-commits@vger.kernel.org
Subject: [tip: locking/core] locking/lockdep: Remove unused @nested argument
 from lock_release()
In-Reply-To: <1568909380-32199-1-git-send-email-cai@lca.pw>
References: <1568909380-32199-1-git-send-email-cai@lca.pw>
MIME-Version: 1.0
Message-ID: <157062598168.9978.11253468599912894904.tip-bot2@tip-bot2>
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot2.linutronix.de>
Robot-Unsubscribe: Contact <mailto:tglx@linutronix.de> to get blacklisted from
 these emails
Precedence: bulk
X-Linutronix-Spam-Score: -1.0
X-Linutronix-Spam-Level: -
X-Linutronix-Spam-Status: No , -1.0 points, 5.0 required, ALL_TRUSTED=-1,
 SHORTCIRCUIT=-0.0001
X-Mailman-Approved-At: Thu, 10 Oct 2019 06:55:04 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Reply-To: linux-kernel@vger.kernel.org
Cc: juri.lelli@redhat.com, "Peter Zijlstra \(Intel\)" <peterz@infradead.org>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, dri-devel@lists.freedesktop.org,
 mhocko@kernel.org, alexander.levin@microsoft.com, joseph.qi@linux.alibaba.com,
 st@kernel.org, Will Deacon <will@kernel.org>, duyuyang@gmail.com,
 vincent.guittot@linaro.org, daniel@iogearbox.net, mark@fasheh.com,
 Ingo Molnar <mingo@kernel.org>, airlied@linux.ie, vdavydov.dev@gmail.com,
 jslaby@suse.com, intel-gfx@lists.freedesktop.org, jack@suse.com,
 mripard@kernel.org, Qian Cai <cai@lca.pw>, viro@zeniv.linux.org.uk,
 rodrigo.vivi@intel.com, Thomas Gleixner <tglx@linutronix.de>, sean@poorly.run,
 tytso@mit.edu, gregkh@linuxfoundation.org, linux-kernel@vger.kernel.org,
 jlbec@evilplan.or, hannes@cmpxchg.org, tj@kernel.org,
 Borislav Petkov <bp@alien8.de>, akpm@linux-foundation.org,
 Linus Torvalds <torvalds@linux-foundation.org>, davem@davemloft.net,
 ocfs2-devel@oss.oracle.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGZvbGxvd2luZyBjb21taXQgaGFzIGJlZW4gbWVyZ2VkIGludG8gdGhlIGxvY2tpbmcvY29y
ZSBicmFuY2ggb2YgdGlwOgoKQ29tbWl0LUlEOiAgICAgNWZhY2FlNGYzNTQ5YjVjZjdjMGUxMGVj
MzEyYTY1ZmZkNDNiNTcyNgpHaXR3ZWI6ICAgICAgICBodHRwczovL2dpdC5rZXJuZWwub3JnL3Rp
cC81ZmFjYWU0ZjM1NDliNWNmN2MwZTEwZWMzMTJhNjVmZmQ0M2I1NzI2CkF1dGhvcjogICAgICAg
IFFpYW4gQ2FpIDxjYWlAbGNhLnB3PgpBdXRob3JEYXRlOiAgICBUaHUsIDE5IFNlcCAyMDE5IDEy
OjA5OjQwIC0wNDowMApDb21taXR0ZXI6ICAgICBJbmdvIE1vbG5hciA8bWluZ29Aa2VybmVsLm9y
Zz4KQ29tbWl0dGVyRGF0ZTogV2VkLCAwOSBPY3QgMjAxOSAxMjo0NjoxMCArMDI6MDAKCmxvY2tp
bmcvbG9ja2RlcDogUmVtb3ZlIHVudXNlZCBAbmVzdGVkIGFyZ3VtZW50IGZyb20gbG9ja19yZWxl
YXNlKCkKClNpbmNlIHRoZSBmb2xsb3dpbmcgY29tbWl0OgoKICBiNGFkZmU4ZTA1ZjEgKCJsb2Nr
aW5nL2xvY2tkZXA6IFJlbW92ZSB1bnVzZWQgYXJndW1lbnQgaW4gX19sb2NrX3JlbGVhc2UiKQoK
QG5lc3RlZCBpcyBubyBsb25nZXIgdXNlZCBpbiBsb2NrX3JlbGVhc2UoKSwgc28gcmVtb3ZlIGl0
IGZyb20gYWxsCmxvY2tfcmVsZWFzZSgpIGNhbGxzIGFuZCBmcmllbmRzLgoKU2lnbmVkLW9mZi1i
eTogUWlhbiBDYWkgPGNhaUBsY2EucHc+ClNpZ25lZC1vZmYtYnk6IFBldGVyIFppamxzdHJhIChJ
bnRlbCkgPHBldGVyekBpbmZyYWRlYWQub3JnPgpBY2tlZC1ieTogV2lsbCBEZWFjb24gPHdpbGxA
a2VybmVsLm9yZz4KQWNrZWQtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAZmZ3bGwu
Y2g+CkNjOiBMaW51cyBUb3J2YWxkcyA8dG9ydmFsZHNAbGludXgtZm91bmRhdGlvbi5vcmc+CkNj
OiBQZXRlciBaaWpsc3RyYSA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiBUaG9tYXMgR2xlaXhu
ZXIgPHRnbHhAbGludXRyb25peC5kZT4KQ2M6IGFpcmxpZWRAbGludXguaWUKQ2M6IGFrcG1AbGlu
dXgtZm91bmRhdGlvbi5vcmcKQ2M6IGFsZXhhbmRlci5sZXZpbkBtaWNyb3NvZnQuY29tCkNjOiBk
YW5pZWxAaW9nZWFyYm94Lm5ldApDYzogZGF2ZW1AZGF2ZW1sb2Z0Lm5ldApDYzogZHJpLWRldmVs
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpDYzogZHV5dXlhbmdAZ21haWwuY29tCkNjOiBncmVna2hA
bGludXhmb3VuZGF0aW9uLm9yZwpDYzogaGFubmVzQGNtcHhjaGcub3JnCkNjOiBpbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCkNjOiBqYWNrQHN1c2UuY29tCkNjOiBqbGJlY0BldmlscGxh
bi5vcgpDYzogam9vbmFzLmxhaHRpbmVuQGxpbnV4LmludGVsLmNvbQpDYzogam9zZXBoLnFpQGxp
bnV4LmFsaWJhYmEuY29tCkNjOiBqc2xhYnlAc3VzZS5jb20KQ2M6IGp1cmkubGVsbGlAcmVkaGF0
LmNvbQpDYzogbWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwuY29tCkNjOiBtYXJrQGZhc2hl
aC5jb20KQ2M6IG1ob2Nrb0BrZXJuZWwub3JnCkNjOiBtcmlwYXJkQGtlcm5lbC5vcmcKQ2M6IG9j
ZnMyLWRldmVsQG9zcy5vcmFjbGUuY29tCkNjOiByb2RyaWdvLnZpdmlAaW50ZWwuY29tCkNjOiBz
ZWFuQHBvb3JseS5ydW4KQ2M6IHN0QGtlcm5lbC5vcmcKQ2M6IHRqQGtlcm5lbC5vcmcKQ2M6IHR5
dHNvQG1pdC5lZHUKQ2M6IHZkYXZ5ZG92LmRldkBnbWFpbC5jb20KQ2M6IHZpbmNlbnQuZ3VpdHRv
dEBsaW5hcm8ub3JnCkNjOiB2aXJvQHplbml2LmxpbnV4Lm9yZy51awpMaW5rOiBodHRwczovL2xr
bWwua2VybmVsLm9yZy9yLzE1Njg5MDkzODAtMzIxOTktMS1naXQtc2VuZC1lbWFpbC1jYWlAbGNh
LnB3ClNpZ25lZC1vZmYtYnk6IEluZ28gTW9sbmFyIDxtaW5nb0BrZXJuZWwub3JnPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9kcm1fY29ubmVjdG9yLmMgICAgICAgICAgICAgICB8ICAyICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fc2hyaW5rZXIuYyAgfCAgNiArKy0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgICAgIHwgIDIgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8ICAyICstCiBkcml2ZXJz
L3R0eS90dHlfbGRzZW0uYyAgICAgICAgICAgICAgICAgICAgICAgfCAgOCArKystLS0KIGZzL2Rj
YWNoZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBmcy9qYmQy
L3RyYW5zYWN0aW9uLmMgICAgICAgICAgICAgICAgICAgICAgICAgfCAgNCArLS0KIGZzL2tlcm5m
cy9kaXIuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA0ICstLQogZnMvb2NmczIv
ZGxtZ2x1ZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGluY2x1ZGUvbGlu
dXgvamJkMi5oICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBpbmNsdWRlL2xpbnV4
L2xvY2tkZXAuaCAgICAgICAgICAgICAgICAgICAgICAgfCAyMSArKysrKysrLS0tLS0tLS0tCiBp
bmNsdWRlL2xpbnV4L3BlcmNwdS1yd3NlbS5oICAgICAgICAgICAgICAgICAgfCAgNCArLS0KIGlu
Y2x1ZGUvbGludXgvcmN1cGRhdGUuaCAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBpbmNs
dWRlL2xpbnV4L3J3bG9ja19hcGlfc21wLmggICAgICAgICAgICAgICAgfCAxNiArKysrKystLS0t
LS0KIGluY2x1ZGUvbGludXgvc2VxbG9jay5oICAgICAgICAgICAgICAgICAgICAgICB8ICA0ICst
LQogaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21wLmggICAgICAgICAgICAgIHwgIDggKysr
LS0tCiBpbmNsdWRlL2xpbnV4L3d3X211dGV4LmggICAgICAgICAgICAgICAgICAgICAgfCAgMiAr
LQogaW5jbHVkZS9uZXQvc29jay5oICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0K
IGtlcm5lbC9icGYvc3RhY2ttYXAuYyAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBr
ZXJuZWwvY3B1LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQoga2Vy
bmVsL2xvY2tpbmcvbG9ja2RlcC5jICAgICAgICAgICAgICAgICAgICAgIHwgIDMgKy0tCiBrZXJu
ZWwvbG9ja2luZy9tdXRleC5jICAgICAgICAgICAgICAgICAgICAgICAgfCAgNCArLS0KIGtlcm5l
bC9sb2NraW5nL3J0bXV0ZXguYyAgICAgICAgICAgICAgICAgICAgICB8ICA2ICsrLS0tCiBrZXJu
ZWwvbG9ja2luZy9yd3NlbS5jICAgICAgICAgICAgICAgICAgICAgICAgfCAxMCArKysrLS0tLQog
a2VybmVsL3ByaW50ay9wcmludGsuYyAgICAgICAgICAgICAgICAgICAgICAgIHwgMTAgKysrKy0t
LS0KIGtlcm5lbC9zY2hlZC9jb3JlLmMgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICst
CiBsaWIvbG9ja2luZy1zZWxmdGVzdC5jICAgICAgICAgICAgICAgICAgICAgICAgfCAyNCArKysr
KysrKystLS0tLS0tLS0KIG1tL21lbWNvbnRyb2wuYyAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB8ICAyICstCiBuZXQvY29yZS9zb2NrLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgMiArLQogdG9vbHMvbGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL2NvbW1vbi5o
IHwgIDMgKy0tCiB0b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvbXV0ZXguaCAg
fCAgMiArLQogdG9vbHMvbGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL3J3bG9jay5oIHwg
IDIgKy0KIHRvb2xzL2xpYi9sb2NrZGVwL3ByZWxvYWQuYyAgICAgICAgICAgICAgICAgICB8IDE2
ICsrKysrKy0tLS0tLQogMzMgZmlsZXMgY2hhbmdlZCwgOTAgaW5zZXJ0aW9ucygrKSwgOTMgZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV9jb25uZWN0b3IuYyBi
L2RyaXZlcnMvZ3B1L2RybS9kcm1fY29ubmVjdG9yLmMKaW5kZXggNGM3NjY2Mi4uNGE4YjJlNSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV9jb25uZWN0b3IuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vZHJtX2Nvbm5lY3Rvci5jCkBAIC03MTksNyArNzE5LDcgQEAgdm9pZCBkcm1fY29u
bmVjdG9yX2xpc3RfaXRlcl9lbmQoc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyICppdGVy
KQogCQlfX2RybV9jb25uZWN0b3JfcHV0X3NhZmUoaXRlci0+Y29ubik7CiAJCXNwaW5fdW5sb2Nr
X2lycXJlc3RvcmUoJmNvbmZpZy0+Y29ubmVjdG9yX2xpc3RfbG9jaywgZmxhZ3MpOwogCX0KLQls
b2NrX3JlbGVhc2UoJmNvbm5lY3Rvcl9saXN0X2l0ZXJfZGVwX21hcCwgMCwgX1JFVF9JUF8pOwor
CWxvY2tfcmVsZWFzZSgmY29ubmVjdG9yX2xpc3RfaXRlcl9kZXBfbWFwLCBfUkVUX0lQXyk7CiB9
CiBFWFBPUlRfU1lNQk9MKGRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCk7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9zaHJpbmtlci5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3Nocmlua2VyLmMKaW5kZXggZWRkMjFkMS4uMWE1
MWIzNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3Nocmlu
a2VyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3Nocmlua2VyLmMK
QEAgLTUwOSwxNCArNTA5LDE0IEBAIHZvaWQgaTkxNV9nZW1fc2hyaW5rZXJfdGFpbnRzX211dGV4
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkgICAgICBJOTE1X01NX1NIUklOS0VS
LCAwLCBfUkVUX0lQXyk7CiAKIAltdXRleF9hY3F1aXJlKCZtdXRleC0+ZGVwX21hcCwgMCwgMCwg
X1JFVF9JUF8pOwotCW11dGV4X3JlbGVhc2UoJm11dGV4LT5kZXBfbWFwLCAwLCBfUkVUX0lQXyk7
CisJbXV0ZXhfcmVsZWFzZSgmbXV0ZXgtPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAotCW11dGV4X3Jl
bGVhc2UoJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXguZGVwX21hcCwgMCwgX1JFVF9JUF8pOworCW11
dGV4X3JlbGVhc2UoJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXguZGVwX21hcCwgX1JFVF9JUF8pOwog
CiAJZnNfcmVjbGFpbV9yZWxlYXNlKEdGUF9LRVJORUwpOwogCiAJaWYgKHVubG9jaykKLQkJbXV0
ZXhfcmVsZWFzZSgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleC5kZXBfbWFwLCAwLCBfUkVUX0lQXyk7
CisJCW11dGV4X3JlbGVhc2UoJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXguZGVwX21hcCwgX1JFVF9J
UF8pOwogfQogCiAjZGVmaW5lIG9ial90b19pOTE1KG9ial9fKSB0b19pOTE1KChvYmpfXyktPmJh
c2UuZGV2KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYwppbmRleCA2
NWI1Y2E3Li43ZjY0NzI0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
cG0uYwpAQCAtNTIsNyArNTIsNyBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgX190aW1l
bGluZV9tYXJrX2xvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogc3RhdGljIGlubGluZSB2
b2lkIF9fdGltZWxpbmVfbWFya191bmxvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCQkJ
CQkgIHVuc2lnbmVkIGxvbmcgZmxhZ3MpCiB7Ci0JbXV0ZXhfcmVsZWFzZSgmY2UtPnRpbWVsaW5l
LT5tdXRleC5kZXBfbWFwLCAwLCBfVEhJU19JUF8pOworCW11dGV4X3JlbGVhc2UoJmNlLT50aW1l
bGluZS0+bXV0ZXguZGVwX21hcCwgX1RISVNfSVBfKTsKIAlsb2NhbF9pcnFfcmVzdG9yZShmbGFn
cyk7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKaW5kZXggYTUzNzc3ZC4uZTFm
MWJlNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAgLTE0NTYsNyArMTQ1Niw3
IEBAIGxvbmcgaTkxNV9yZXF1ZXN0X3dhaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJZG1h
X2ZlbmNlX3JlbW92ZV9jYWxsYmFjaygmcnEtPmZlbmNlLCAmd2FpdC5jYik7CiAKIG91dDoKLQlt
dXRleF9yZWxlYXNlKCZycS0+ZW5naW5lLT5ndC0+cmVzZXQubXV0ZXguZGVwX21hcCwgMCwgX1RI
SVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZycS0+ZW5naW5lLT5ndC0+cmVzZXQubXV0ZXguZGVw
X21hcCwgX1RISVNfSVBfKTsKIAl0cmFjZV9pOTE1X3JlcXVlc3Rfd2FpdF9lbmQocnEpOwogCXJl
dHVybiB0aW1lb3V0OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvdHR5X2xkc2VtLmMgYi9k
cml2ZXJzL3R0eS90dHlfbGRzZW0uYwppbmRleCA2MGZmMjM2Li5jZTgyOTEwIDEwMDY0NAotLS0g
YS9kcml2ZXJzL3R0eS90dHlfbGRzZW0uYworKysgYi9kcml2ZXJzL3R0eS90dHlfbGRzZW0uYwpA
QCAtMzAzLDcgKzMwMyw3IEBAIHN0YXRpYyBpbnQgX19sZHNlbV9kb3duX3JlYWRfbmVzdGVkKHN0
cnVjdCBsZF9zZW1hcGhvcmUgKnNlbSwKIAlpZiAoY291bnQgPD0gMCkgewogCQlsb2NrX2NvbnRl
bmRlZCgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJCWlmICghZG93bl9yZWFkX2ZhaWxlZChz
ZW0sIGNvdW50LCB0aW1lb3V0KSkgewotCQkJcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAx
LCBfUkVUX0lQXyk7CisJCQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIF9SRVRfSVBfKTsK
IAkJCXJldHVybiAwOwogCQl9CiAJfQpAQCAtMzIyLDcgKzMyMiw3IEBAIHN0YXRpYyBpbnQgX19s
ZHNlbV9kb3duX3dyaXRlX25lc3RlZChzdHJ1Y3QgbGRfc2VtYXBob3JlICpzZW0sCiAJaWYgKChj
b3VudCAmIExEU0VNX0FDVElWRV9NQVNLKSAhPSBMRFNFTV9BQ1RJVkVfQklBUykgewogCQlsb2Nr
X2NvbnRlbmRlZCgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJCWlmICghZG93bl93cml0ZV9m
YWlsZWQoc2VtLCBjb3VudCwgdGltZW91dCkpIHsKLQkJCXJ3c2VtX3JlbGVhc2UoJnNlbS0+ZGVw
X21hcCwgMSwgX1JFVF9JUF8pOworCQkJcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVU
X0lQXyk7CiAJCQlyZXR1cm4gMDsKIAkJfQogCX0KQEAgLTM5MCw3ICszOTAsNyBAQCB2b2lkIGxk
c2VtX3VwX3JlYWQoc3RydWN0IGxkX3NlbWFwaG9yZSAqc2VtKQogewogCWxvbmcgY291bnQ7CiAK
LQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlyd3NlbV9yZWxl
YXNlKCZzZW0tPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAogCWNvdW50ID0gYXRvbWljX2xvbmdfYWRk
X3JldHVybigtTERTRU1fUkVBRF9CSUFTLCAmc2VtLT5jb3VudCk7CiAJaWYgKGNvdW50IDwgMCAm
JiAoY291bnQgJiBMRFNFTV9BQ1RJVkVfTUFTSykgPT0gMCkKQEAgLTQwNCw3ICs0MDQsNyBAQCB2
b2lkIGxkc2VtX3VwX3dyaXRlKHN0cnVjdCBsZF9zZW1hcGhvcmUgKnNlbSkKIHsKIAlsb25nIGNv
dW50OwogCi0JcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndz
ZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAKIAljb3VudCA9IGF0b21pY19s
b25nX2FkZF9yZXR1cm4oLUxEU0VNX1dSSVRFX0JJQVMsICZzZW0tPmNvdW50KTsKIAlpZiAoY291
bnQgPCAwKQpkaWZmIC0tZ2l0IGEvZnMvZGNhY2hlLmMgYi9mcy9kY2FjaGUuYwppbmRleCBlODhj
ZjA1Li5mNzkzMWI2IDEwMDY0NAotLS0gYS9mcy9kY2FjaGUuYworKysgYi9mcy9kY2FjaGUuYwpA
QCAtMTMxOSw3ICsxMzE5LDcgQEAgcmVzdW1lOgogCiAJCWlmICghbGlzdF9lbXB0eSgmZGVudHJ5
LT5kX3N1YmRpcnMpKSB7CiAJCQlzcGluX3VubG9jaygmdGhpc19wYXJlbnQtPmRfbG9jayk7Ci0J
CQlzcGluX3JlbGVhc2UoJmRlbnRyeS0+ZF9sb2NrLmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJ
CXNwaW5fcmVsZWFzZSgmZGVudHJ5LT5kX2xvY2suZGVwX21hcCwgX1JFVF9JUF8pOwogCQkJdGhp
c19wYXJlbnQgPSBkZW50cnk7CiAJCQlzcGluX2FjcXVpcmUoJnRoaXNfcGFyZW50LT5kX2xvY2su
ZGVwX21hcCwgMCwgMSwgX1JFVF9JUF8pOwogCQkJZ290byByZXBlYXQ7CmRpZmYgLS1naXQgYS9m
cy9qYmQyL3RyYW5zYWN0aW9uLmMgYi9mcy9qYmQyL3RyYW5zYWN0aW9uLmMKaW5kZXggYmVlODQ5
OC4uYjI1ZWJkYyAxMDA2NDQKLS0tIGEvZnMvamJkMi90cmFuc2FjdGlvbi5jCisrKyBiL2ZzL2pi
ZDIvdHJhbnNhY3Rpb24uYwpAQCAtNzEzLDcgKzcxMyw3IEBAIGludCBqYmQyX19qb3VybmFsX3Jl
c3RhcnQoaGFuZGxlX3QgKmhhbmRsZSwgaW50IG5ibG9ja3MsIGdmcF90IGdmcF9tYXNrKQogCWlm
IChuZWVkX3RvX3N0YXJ0KQogCQlqYmQyX2xvZ19zdGFydF9jb21taXQoam91cm5hbCwgdGlkKTsK
IAotCXJ3c2VtX3JlbGVhc2UoJmpvdXJuYWwtPmpfdHJhbnNfY29tbWl0X21hcCwgMSwgX1RISVNf
SVBfKTsKKwlyd3NlbV9yZWxlYXNlKCZqb3VybmFsLT5qX3RyYW5zX2NvbW1pdF9tYXAsIF9USElT
X0lQXyk7CiAJaGFuZGxlLT5oX2J1ZmZlcl9jcmVkaXRzID0gbmJsb2NrczsKIAkvKgogCSAqIFJl
c3RvcmUgdGhlIG9yaWdpbmFsIG5vZnMgY29udGV4dCBiZWNhdXNlIHRoZSBqb3VybmFsIHJlc3Rh
cnQKQEAgLTE4NDgsNyArMTg0OCw3IEBAIGludCBqYmQyX2pvdXJuYWxfc3RvcChoYW5kbGVfdCAq
aGFuZGxlKQogCQkJd2FrZV91cCgmam91cm5hbC0+al93YWl0X3RyYW5zYWN0aW9uX2xvY2tlZCk7
CiAJfQogCi0JcndzZW1fcmVsZWFzZSgmam91cm5hbC0+al90cmFuc19jb21taXRfbWFwLCAxLCBf
VEhJU19JUF8pOworCXJ3c2VtX3JlbGVhc2UoJmpvdXJuYWwtPmpfdHJhbnNfY29tbWl0X21hcCwg
X1RISVNfSVBfKTsKIAogCWlmICh3YWl0X2Zvcl9jb21taXQpCiAJCWVyciA9IGpiZDJfbG9nX3dh
aXRfY29tbWl0KGpvdXJuYWwsIHRpZCk7CmRpZmYgLS1naXQgYS9mcy9rZXJuZnMvZGlyLmMgYi9m
cy9rZXJuZnMvZGlyLmMKaW5kZXggNmViYWU2Yi4uYzQ1YjgyZiAxMDA2NDQKLS0tIGEvZnMva2Vy
bmZzL2Rpci5jCisrKyBiL2ZzL2tlcm5mcy9kaXIuYwpAQCAtNDM4LDcgKzQzOCw3IEBAIHZvaWQg
a2VybmZzX3B1dF9hY3RpdmUoc3RydWN0IGtlcm5mc19ub2RlICprbikKIAkJcmV0dXJuOwogCiAJ
aWYgKGtlcm5mc19sb2NrZGVwKGtuKSkKLQkJcndzZW1fcmVsZWFzZSgma24tPmRlcF9tYXAsIDEs
IF9SRVRfSVBfKTsKKwkJcndzZW1fcmVsZWFzZSgma24tPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAl2
ID0gYXRvbWljX2RlY19yZXR1cm4oJmtuLT5hY3RpdmUpOwogCWlmIChsaWtlbHkodiAhPSBLTl9E
RUFDVElWQVRFRF9CSUFTKSkKIAkJcmV0dXJuOwpAQCAtNDc2LDcgKzQ3Niw3IEBAIHN0YXRpYyB2
b2lkIGtlcm5mc19kcmFpbihzdHJ1Y3Qga2VybmZzX25vZGUgKmtuKQogCiAJaWYgKGtlcm5mc19s
b2NrZGVwKGtuKSkgewogCQlsb2NrX2FjcXVpcmVkKCZrbi0+ZGVwX21hcCwgX1JFVF9JUF8pOwot
CQlyd3NlbV9yZWxlYXNlKCZrbi0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCQlyd3NlbV9yZWxl
YXNlKCZrbi0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCX0KIAogCWtlcm5mc19kcmFpbl9vcGVuX2Zp
bGVzKGtuKTsKZGlmZiAtLWdpdCBhL2ZzL29jZnMyL2RsbWdsdWUuYyBiL2ZzL29jZnMyL2RsbWds
dWUuYwppbmRleCA2ZTc3NGM1Li4xYzRjNTFmIDEwMDY0NAotLS0gYS9mcy9vY2ZzMi9kbG1nbHVl
LmMKKysrIGIvZnMvb2NmczIvZGxtZ2x1ZS5jCkBAIC0xNjg3LDcgKzE2ODcsNyBAQCBzdGF0aWMg
dm9pZCBfX29jZnMyX2NsdXN0ZXJfdW5sb2NrKHN0cnVjdCBvY2ZzMl9zdXBlciAqb3NiLAogCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmxvY2tyZXMtPmxfbG9jaywgZmxhZ3MpOwogI2lmZGVmIENP
TkZJR19ERUJVR19MT0NLX0FMTE9DCiAJaWYgKGxvY2tyZXMtPmxfbG9ja2RlcF9tYXAua2V5ICE9
IE5VTEwpCi0JCXJ3c2VtX3JlbGVhc2UoJmxvY2tyZXMtPmxfbG9ja2RlcF9tYXAsIDEsIGNhbGxl
cl9pcCk7CisJCXJ3c2VtX3JlbGVhc2UoJmxvY2tyZXMtPmxfbG9ja2RlcF9tYXAsIGNhbGxlcl9p
cCk7CiAjZW5kaWYKIH0KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9qYmQyLmggYi9pbmNs
dWRlL2xpbnV4L2piZDIuaAppbmRleCA2MDNmYmM0Li41NjQ3OTNjIDEwMDY0NAotLS0gYS9pbmNs
dWRlL2xpbnV4L2piZDIuaAorKysgYi9pbmNsdWRlL2xpbnV4L2piZDIuaApAQCAtMTE3MCw3ICsx
MTcwLDcgQEAgc3RydWN0IGpvdXJuYWxfcwogI2RlZmluZSBqYmQyX21pZ2h0X3dhaXRfZm9yX2Nv
bW1pdChqKSBcCiAJZG8geyBcCiAJCXJ3c2VtX2FjcXVpcmUoJmotPmpfdHJhbnNfY29tbWl0X21h
cCwgMCwgMCwgX1RISVNfSVBfKTsgXAotCQlyd3NlbV9yZWxlYXNlKCZqLT5qX3RyYW5zX2NvbW1p
dF9tYXAsIDEsIF9USElTX0lQXyk7IFwKKwkJcndzZW1fcmVsZWFzZSgmai0+al90cmFuc19jb21t
aXRfbWFwLCBfVEhJU19JUF8pOyBcCiAJfSB3aGlsZSAoMCkKIAogLyogam91cm5hbCBmZWF0dXJl
IHByZWRpY2F0ZSBmdW5jdGlvbnMgKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvbG9ja2Rl
cC5oIGIvaW5jbHVkZS9saW51eC9sb2NrZGVwLmgKaW5kZXggYjhhODM1Zi4uYzUwZDAxZSAxMDA2
NDQKLS0tIGEvaW5jbHVkZS9saW51eC9sb2NrZGVwLmgKKysrIGIvaW5jbHVkZS9saW51eC9sb2Nr
ZGVwLmgKQEAgLTM0OSw4ICszNDksNyBAQCBleHRlcm4gdm9pZCBsb2NrX2FjcXVpcmUoc3RydWN0
IGxvY2tkZXBfbWFwICpsb2NrLCB1bnNpZ25lZCBpbnQgc3ViY2xhc3MsCiAJCQkgaW50IHRyeWxv
Y2ssIGludCByZWFkLCBpbnQgY2hlY2ssCiAJCQkgc3RydWN0IGxvY2tkZXBfbWFwICpuZXN0X2xv
Y2ssIHVuc2lnbmVkIGxvbmcgaXApOwogCi1leHRlcm4gdm9pZCBsb2NrX3JlbGVhc2Uoc3RydWN0
IGxvY2tkZXBfbWFwICpsb2NrLCBpbnQgbmVzdGVkLAotCQkJIHVuc2lnbmVkIGxvbmcgaXApOwor
ZXh0ZXJuIHZvaWQgbG9ja19yZWxlYXNlKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWdu
ZWQgbG9uZyBpcCk7CiAKIC8qCiAgKiBTYW1lICJyZWFkIiBhcyBmb3IgbG9ja19hY3F1aXJlKCks
IGV4Y2VwdCAtMSBtZWFucyBhbnkuCkBAIC00MjgsNyArNDI3LDcgQEAgc3RhdGljIGlubGluZSB2
b2lkIGxvY2tkZXBfc2V0X3NlbGZ0ZXN0X3Rhc2soc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQog
fQogCiAjIGRlZmluZSBsb2NrX2FjcXVpcmUobCwgcywgdCwgciwgYywgbiwgaSkJZG8geyB9IHdo
aWxlICgwKQotIyBkZWZpbmUgbG9ja19yZWxlYXNlKGwsIG4sIGkpCQkJZG8geyB9IHdoaWxlICgw
KQorIyBkZWZpbmUgbG9ja19yZWxlYXNlKGwsIGkpCQkJZG8geyB9IHdoaWxlICgwKQogIyBkZWZp
bmUgbG9ja19kb3duZ3JhZGUobCwgaSkJCQlkbyB7IH0gd2hpbGUgKDApCiAjIGRlZmluZSBsb2Nr
X3NldF9jbGFzcyhsLCBuLCBrLCBzLCBpKQkJZG8geyB9IHdoaWxlICgwKQogIyBkZWZpbmUgbG9j
a19zZXRfc3ViY2xhc3MobCwgcywgaSkJCWRvIHsgfSB3aGlsZSAoMCkKQEAgLTU5MSw0MiArNTkw
LDQyIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBwcmludF9pcnF0cmFjZV9ldmVudHMoc3RydWN0IHRh
c2tfc3RydWN0ICpjdXJyKQogCiAjZGVmaW5lIHNwaW5fYWNxdWlyZShsLCBzLCB0LCBpKQkJbG9j
a19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBOVUxMLCBpKQogI2RlZmluZSBzcGluX2FjcXVp
cmVfbmVzdChsLCBzLCB0LCBuLCBpKQlsb2NrX2FjcXVpcmVfZXhjbHVzaXZlKGwsIHMsIHQsIG4s
IGkpCi0jZGVmaW5lIHNwaW5fcmVsZWFzZShsLCBuLCBpKQkJCWxvY2tfcmVsZWFzZShsLCBuLCBp
KQorI2RlZmluZSBzcGluX3JlbGVhc2UobCwgaSkJCQlsb2NrX3JlbGVhc2UobCwgaSkKIAogI2Rl
ZmluZSByd2xvY2tfYWNxdWlyZShsLCBzLCB0LCBpKQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShs
LCBzLCB0LCBOVUxMLCBpKQogI2RlZmluZSByd2xvY2tfYWNxdWlyZV9yZWFkKGwsIHMsIHQsIGkp
CQlsb2NrX2FjcXVpcmVfc2hhcmVkX3JlY3Vyc2l2ZShsLCBzLCB0LCBOVUxMLCBpKQotI2RlZmlu
ZSByd2xvY2tfcmVsZWFzZShsLCBuLCBpKQkJCWxvY2tfcmVsZWFzZShsLCBuLCBpKQorI2RlZmlu
ZSByd2xvY2tfcmVsZWFzZShsLCBpKQkJCWxvY2tfcmVsZWFzZShsLCBpKQogCiAjZGVmaW5lIHNl
cWNvdW50X2FjcXVpcmUobCwgcywgdCwgaSkJCWxvY2tfYWNxdWlyZV9leGNsdXNpdmUobCwgcywg
dCwgTlVMTCwgaSkKICNkZWZpbmUgc2VxY291bnRfYWNxdWlyZV9yZWFkKGwsIHMsIHQsIGkpCWxv
Y2tfYWNxdWlyZV9zaGFyZWRfcmVjdXJzaXZlKGwsIHMsIHQsIE5VTEwsIGkpCi0jZGVmaW5lIHNl
cWNvdW50X3JlbGVhc2UobCwgbiwgaSkJCWxvY2tfcmVsZWFzZShsLCBuLCBpKQorI2RlZmluZSBz
ZXFjb3VudF9yZWxlYXNlKGwsIGkpCQkJbG9ja19yZWxlYXNlKGwsIGkpCiAKICNkZWZpbmUgbXV0
ZXhfYWNxdWlyZShsLCBzLCB0LCBpKQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBO
VUxMLCBpKQogI2RlZmluZSBtdXRleF9hY3F1aXJlX25lc3QobCwgcywgdCwgbiwgaSkJbG9ja19h
Y3F1aXJlX2V4Y2x1c2l2ZShsLCBzLCB0LCBuLCBpKQotI2RlZmluZSBtdXRleF9yZWxlYXNlKGws
IG4sIGkpCQkJbG9ja19yZWxlYXNlKGwsIG4sIGkpCisjZGVmaW5lIG11dGV4X3JlbGVhc2UobCwg
aSkJCQlsb2NrX3JlbGVhc2UobCwgaSkKIAogI2RlZmluZSByd3NlbV9hY3F1aXJlKGwsIHMsIHQs
IGkpCQlsb2NrX2FjcXVpcmVfZXhjbHVzaXZlKGwsIHMsIHQsIE5VTEwsIGkpCiAjZGVmaW5lIHJ3
c2VtX2FjcXVpcmVfbmVzdChsLCBzLCB0LCBuLCBpKQlsb2NrX2FjcXVpcmVfZXhjbHVzaXZlKGws
IHMsIHQsIG4sIGkpCiAjZGVmaW5lIHJ3c2VtX2FjcXVpcmVfcmVhZChsLCBzLCB0LCBpKQkJbG9j
a19hY3F1aXJlX3NoYXJlZChsLCBzLCB0LCBOVUxMLCBpKQotI2RlZmluZSByd3NlbV9yZWxlYXNl
KGwsIG4sIGkpCQkJbG9ja19yZWxlYXNlKGwsIG4sIGkpCisjZGVmaW5lIHJ3c2VtX3JlbGVhc2Uo
bCwgaSkJCQlsb2NrX3JlbGVhc2UobCwgaSkKIAogI2RlZmluZSBsb2NrX21hcF9hY3F1aXJlKGwp
CQkJbG9ja19hY3F1aXJlX2V4Y2x1c2l2ZShsLCAwLCAwLCBOVUxMLCBfVEhJU19JUF8pCiAjZGVm
aW5lIGxvY2tfbWFwX2FjcXVpcmVfcmVhZChsKQkJbG9ja19hY3F1aXJlX3NoYXJlZF9yZWN1cnNp
dmUobCwgMCwgMCwgTlVMTCwgX1RISVNfSVBfKQogI2RlZmluZSBsb2NrX21hcF9hY3F1aXJlX3Ry
eXJlYWQobCkJCWxvY2tfYWNxdWlyZV9zaGFyZWRfcmVjdXJzaXZlKGwsIDAsIDEsIE5VTEwsIF9U
SElTX0lQXykKLSNkZWZpbmUgbG9ja19tYXBfcmVsZWFzZShsKQkJCWxvY2tfcmVsZWFzZShsLCAx
LCBfVEhJU19JUF8pCisjZGVmaW5lIGxvY2tfbWFwX3JlbGVhc2UobCkJCQlsb2NrX3JlbGVhc2Uo
bCwgX1RISVNfSVBfKQogCiAjaWZkZWYgQ09ORklHX1BST1ZFX0xPQ0tJTkcKICMgZGVmaW5lIG1p
Z2h0X2xvY2sobG9jaykgCQkJCQkJXAogZG8gewkJCQkJCQkJCVwKIAl0eXBlY2hlY2soc3RydWN0
IGxvY2tkZXBfbWFwICosICYobG9jayktPmRlcF9tYXApOwkJXAogCWxvY2tfYWNxdWlyZSgmKGxv
Y2spLT5kZXBfbWFwLCAwLCAwLCAwLCAxLCBOVUxMLCBfVEhJU19JUF8pOwlcCi0JbG9ja19yZWxl
YXNlKCYobG9jayktPmRlcF9tYXAsIDAsIF9USElTX0lQXyk7CQkJXAorCWxvY2tfcmVsZWFzZSgm
KGxvY2spLT5kZXBfbWFwLCBfVEhJU19JUF8pOwkJCVwKIH0gd2hpbGUgKDApCiAjIGRlZmluZSBt
aWdodF9sb2NrX3JlYWQobG9jaykgCQkJCQkJXAogZG8gewkJCQkJCQkJCVwKIAl0eXBlY2hlY2so
c3RydWN0IGxvY2tkZXBfbWFwICosICYobG9jayktPmRlcF9tYXApOwkJXAogCWxvY2tfYWNxdWly
ZSgmKGxvY2spLT5kZXBfbWFwLCAwLCAwLCAxLCAxLCBOVUxMLCBfVEhJU19JUF8pOwlcCi0JbG9j
a19yZWxlYXNlKCYobG9jayktPmRlcF9tYXAsIDAsIF9USElTX0lQXyk7CQkJXAorCWxvY2tfcmVs
ZWFzZSgmKGxvY2spLT5kZXBfbWFwLCBfVEhJU19JUF8pOwkJCVwKIH0gd2hpbGUgKDApCiAKICNk
ZWZpbmUgbG9ja2RlcF9hc3NlcnRfaXJxc19lbmFibGVkKCkJZG8gewkJCQlcCmRpZmYgLS1naXQg
YS9pbmNsdWRlL2xpbnV4L3BlcmNwdS1yd3NlbS5oIGIvaW5jbHVkZS9saW51eC9wZXJjcHUtcndz
ZW0uaAppbmRleCAzOTk4Y2RmLi5hZDJjYTJhIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3Bl
cmNwdS1yd3NlbS5oCisrKyBiL2luY2x1ZGUvbGludXgvcGVyY3B1LXJ3c2VtLmgKQEAgLTkzLDcg
KzkzLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHBlcmNwdV91cF9yZWFkKHN0cnVjdCBwZXJjcHVf
cndfc2VtYXBob3JlICpzZW0pCiAJCV9fcGVyY3B1X3VwX3JlYWQoc2VtKTsgLyogVW5jb25kaXRp
b25hbCBtZW1vcnkgYmFycmllciAqLwogCXByZWVtcHRfZW5hYmxlKCk7CiAKLQlyd3NlbV9yZWxl
YXNlKCZzZW0tPnJ3X3NlbS5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJcndzZW1fcmVsZWFzZSgm
c2VtLT5yd19zZW0uZGVwX21hcCwgX1JFVF9JUF8pOwogfQogCiBleHRlcm4gdm9pZCBwZXJjcHVf
ZG93bl93cml0ZShzdHJ1Y3QgcGVyY3B1X3J3X3NlbWFwaG9yZSAqKTsKQEAgLTExOCw3ICsxMTgs
NyBAQCBleHRlcm4gdm9pZCBwZXJjcHVfZnJlZV9yd3NlbShzdHJ1Y3QgcGVyY3B1X3J3X3NlbWFw
aG9yZSAqKTsKIHN0YXRpYyBpbmxpbmUgdm9pZCBwZXJjcHVfcndzZW1fcmVsZWFzZShzdHJ1Y3Qg
cGVyY3B1X3J3X3NlbWFwaG9yZSAqc2VtLAogCQkJCQlib29sIHJlYWQsIHVuc2lnbmVkIGxvbmcg
aXApCiB7Ci0JbG9ja19yZWxlYXNlKCZzZW0tPnJ3X3NlbS5kZXBfbWFwLCAxLCBpcCk7CisJbG9j
a19yZWxlYXNlKCZzZW0tPnJ3X3NlbS5kZXBfbWFwLCBpcCk7CiAjaWZkZWYgQ09ORklHX1JXU0VN
X1NQSU5fT05fT1dORVIKIAlpZiAoIXJlYWQpCiAJCWF0b21pY19sb25nX3NldCgmc2VtLT5yd19z
ZW0ub3duZXIsIFJXU0VNX09XTkVSX1VOS05PV04pOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9yY3VwZGF0ZS5oIGIvaW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oCmluZGV4IDc1YTJlZGUuLjI2
OWIzMWUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcmN1cGRhdGUuaAorKysgYi9pbmNsdWRl
L2xpbnV4L3JjdXBkYXRlLmgKQEAgLTIxMCw3ICsyMTAsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQg
cmN1X2xvY2tfYWNxdWlyZShzdHJ1Y3QgbG9ja2RlcF9tYXAgKm1hcCkKIAogc3RhdGljIGlubGlu
ZSB2b2lkIHJjdV9sb2NrX3JlbGVhc2Uoc3RydWN0IGxvY2tkZXBfbWFwICptYXApCiB7Ci0JbG9j
a19yZWxlYXNlKG1hcCwgMSwgX1RISVNfSVBfKTsKKwlsb2NrX3JlbGVhc2UobWFwLCBfVEhJU19J
UF8pOwogfQogCiBleHRlcm4gc3RydWN0IGxvY2tkZXBfbWFwIHJjdV9sb2NrX21hcDsKZGlmZiAt
LWdpdCBhL2luY2x1ZGUvbGludXgvcndsb2NrX2FwaV9zbXAuaCBiL2luY2x1ZGUvbGludXgvcnds
b2NrX2FwaV9zbXAuaAppbmRleCA4NmViYjRiLi5hYmZiNTNhIDEwMDY0NAotLS0gYS9pbmNsdWRl
L2xpbnV4L3J3bG9ja19hcGlfc21wLmgKKysrIGIvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3Nt
cC5oCkBAIC0yMTUsMTQgKzIxNSwxNCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVf
bG9jayhyd2xvY2tfdCAqbG9jaykKIAogc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3dyaXRlX3Vu
bG9jayhyd2xvY2tfdCAqbG9jaykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwg
MSwgX1JFVF9JUF8pOworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7
CiAJZG9fcmF3X3dyaXRlX3VubG9jayhsb2NrKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwogfQogCiBz
dGF0aWMgaW5saW5lIHZvaWQgX19yYXdfcmVhZF91bmxvY2socndsb2NrX3QgKmxvY2spCiB7Ci0J
cndsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlyd2xvY2tfcmVs
ZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRvX3Jhd19yZWFkX3VubG9jayhsb2Nr
KTsKIAlwcmVlbXB0X2VuYWJsZSgpOwogfQpAQCAtMjMwLDcgKzIzMCw3IEBAIHN0YXRpYyBpbmxp
bmUgdm9pZCBfX3Jhd19yZWFkX3VubG9jayhyd2xvY2tfdCAqbG9jaykKIHN0YXRpYyBpbmxpbmUg
dm9pZAogX19yYXdfcmVhZF91bmxvY2tfaXJxcmVzdG9yZShyd2xvY2tfdCAqbG9jaywgdW5zaWdu
ZWQgbG9uZyBmbGFncykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JF
VF9JUF8pOworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9f
cmF3X3JlYWRfdW5sb2NrKGxvY2spOwogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdzKTsKIAlwcmVl
bXB0X2VuYWJsZSgpOwpAQCAtMjM4LDcgKzIzOCw3IEBAIF9fcmF3X3JlYWRfdW5sb2NrX2lycXJl
c3RvcmUocndsb2NrX3QgKmxvY2ssIHVuc2lnbmVkIGxvbmcgZmxhZ3MpCiAKIHN0YXRpYyBpbmxp
bmUgdm9pZCBfX3Jhd19yZWFkX3VubG9ja19pcnEocndsb2NrX3QgKmxvY2spCiB7Ci0Jcndsb2Nr
X3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlyd2xvY2tfcmVsZWFzZSgm
bG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRvX3Jhd19yZWFkX3VubG9jayhsb2NrKTsKIAls
b2NhbF9pcnFfZW5hYmxlKCk7CiAJcHJlZW1wdF9lbmFibGUoKTsKQEAgLTI0Niw3ICsyNDYsNyBA
QCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfcmVhZF91bmxvY2tfaXJxKHJ3bG9ja190ICpsb2Nr
KQogCiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfcmVhZF91bmxvY2tfYmgocndsb2NrX3QgKmxv
Y2spCiB7Ci0Jcndsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwly
d2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRvX3Jhd19yZWFkX3Vu
bG9jayhsb2NrKTsKIAlfX2xvY2FsX2JoX2VuYWJsZV9pcChfUkVUX0lQXywgU09GVElSUV9MT0NL
X09GRlNFVCk7CiB9CkBAIC0yNTQsNyArMjU0LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIF9fcmF3
X3JlYWRfdW5sb2NrX2JoKHJ3bG9ja190ICpsb2NrKQogc3RhdGljIGlubGluZSB2b2lkIF9fcmF3
X3dyaXRlX3VubG9ja19pcnFyZXN0b3JlKHJ3bG9ja190ICpsb2NrLAogCQkJCQkgICAgIHVuc2ln
bmVkIGxvbmcgZmxhZ3MpCiB7Ci0Jcndsb2NrX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9S
RVRfSVBfKTsKKwlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWRv
X3Jhd193cml0ZV91bmxvY2sobG9jayk7CiAJbG9jYWxfaXJxX3Jlc3RvcmUoZmxhZ3MpOwogCXBy
ZWVtcHRfZW5hYmxlKCk7CkBAIC0yNjIsNyArMjYyLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIF9f
cmF3X3dyaXRlX3VubG9ja19pcnFyZXN0b3JlKHJ3bG9ja190ICpsb2NrLAogCiBzdGF0aWMgaW5s
aW5lIHZvaWQgX19yYXdfd3JpdGVfdW5sb2NrX2lycShyd2xvY2tfdCAqbG9jaykKIHsKLQlyd2xv
Y2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8pOworCXJ3bG9ja19yZWxlYXNl
KCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3dyaXRlX3VubG9jayhsb2NrKTsK
IAlsb2NhbF9pcnFfZW5hYmxlKCk7CiAJcHJlZW1wdF9lbmFibGUoKTsKQEAgLTI3MCw3ICsyNzAs
NyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVfdW5sb2NrX2lycShyd2xvY2tfdCAq
bG9jaykKIAogc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3dyaXRlX3VubG9ja19iaChyd2xvY2tf
dCAqbG9jaykKIHsKLQlyd2xvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMSwgX1JFVF9JUF8p
OworCXJ3bG9ja19yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3dy
aXRlX3VubG9jayhsb2NrKTsKIAlfX2xvY2FsX2JoX2VuYWJsZV9pcChfUkVUX0lQXywgU09GVElS
UV9MT0NLX09GRlNFVCk7CiB9CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3NlcWxvY2suaCBi
L2luY2x1ZGUvbGludXgvc2VxbG9jay5oCmluZGV4IGJjZjRjZjIuLjA0OTFkOTYgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvbGludXgvc2VxbG9jay5oCisrKyBiL2luY2x1ZGUvbGludXgvc2VxbG9jay5o
CkBAIC03OSw3ICs3OSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBzZXFjb3VudF9sb2NrZGVwX3Jl
YWRlcl9hY2Nlc3MoY29uc3Qgc2VxY291bnRfdCAqcykKIAogCWxvY2FsX2lycV9zYXZlKGZsYWdz
KTsKIAlzZXFjb3VudF9hY3F1aXJlX3JlYWQoJmwtPmRlcF9tYXAsIDAsIDAsIF9SRVRfSVBfKTsK
LQlzZXFjb3VudF9yZWxlYXNlKCZsLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJc2VxY291bnRf
cmVsZWFzZSgmbC0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdz
KTsKIH0KIApAQCAtMzg0LDcgKzM4NCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB3cml0ZV9zZXFj
b3VudF9iZWdpbihzZXFjb3VudF90ICpzKQogCiBzdGF0aWMgaW5saW5lIHZvaWQgd3JpdGVfc2Vx
Y291bnRfZW5kKHNlcWNvdW50X3QgKnMpCiB7Ci0Jc2VxY291bnRfcmVsZWFzZSgmcy0+ZGVwX21h
cCwgMSwgX1JFVF9JUF8pOworCXNlcWNvdW50X3JlbGVhc2UoJnMtPmRlcF9tYXAsIF9SRVRfSVBf
KTsKIAlyYXdfd3JpdGVfc2VxY291bnRfZW5kKHMpOwogfQogCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L3NwaW5sb2NrX2FwaV9zbXAuaCBiL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfYXBpX3Nt
cC5oCmluZGV4IGI3NjJlYWIuLjE5YTliZTkgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvc3Bp
bmxvY2tfYXBpX3NtcC5oCisrKyBiL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfYXBpX3NtcC5oCkBA
IC0xNDcsNyArMTQ3LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3NwaW5fbG9jayhyYXdf
c3BpbmxvY2tfdCAqbG9jaykKIAogc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3NwaW5fdW5sb2Nr
KHJhd19zcGlubG9ja190ICpsb2NrKQogewotCXNwaW5fcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwg
MSwgX1JFVF9JUF8pOworCXNwaW5fcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwog
CWRvX3Jhd19zcGluX3VubG9jayhsb2NrKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwogfQpAQCAtMTU1
LDcgKzE1NSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19zcGluX3VubG9jayhyYXdfc3Bp
bmxvY2tfdCAqbG9jaykKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19zcGluX3VubG9ja19pcnFy
ZXN0b3JlKHJhd19zcGlubG9ja190ICpsb2NrLAogCQkJCQkgICAgdW5zaWduZWQgbG9uZyBmbGFn
cykKIHsKLQlzcGluX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlzcGlu
X3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAlkb19yYXdfc3Bpbl91bmxvY2so
bG9jayk7CiAJbG9jYWxfaXJxX3Jlc3RvcmUoZmxhZ3MpOwogCXByZWVtcHRfZW5hYmxlKCk7CkBA
IC0xNjMsNyArMTYzLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3NwaW5fdW5sb2NrX2ly
cXJlc3RvcmUocmF3X3NwaW5sb2NrX3QgKmxvY2ssCiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jh
d19zcGluX3VubG9ja19pcnEocmF3X3NwaW5sb2NrX3QgKmxvY2spCiB7Ci0Jc3Bpbl9yZWxlYXNl
KCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJc3Bpbl9yZWxlYXNlKCZsb2NrLT5kZXBf
bWFwLCBfUkVUX0lQXyk7CiAJZG9fcmF3X3NwaW5fdW5sb2NrKGxvY2spOwogCWxvY2FsX2lycV9l
bmFibGUoKTsKIAlwcmVlbXB0X2VuYWJsZSgpOwpAQCAtMTcxLDcgKzE3MSw3IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBfX3Jhd19zcGluX3VubG9ja19pcnEocmF3X3NwaW5sb2NrX3QgKmxvY2spCiAK
IHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd19zcGluX3VubG9ja19iaChyYXdfc3BpbmxvY2tfdCAq
bG9jaykKIHsKLQlzcGluX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwlz
cGluX3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAlkb19yYXdfc3Bpbl91bmxv
Y2sobG9jayk7CiAJX19sb2NhbF9iaF9lbmFibGVfaXAoX1JFVF9JUF8sIFNPRlRJUlFfTE9DS19P
RkZTRVQpOwogfQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC93d19tdXRleC5oIGIvaW5jbHVk
ZS9saW51eC93d19tdXRleC5oCmluZGV4IDNhZjdjMGUuLmQ3NTU0MjUgMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvbGludXgvd3dfbXV0ZXguaAorKysgYi9pbmNsdWRlL2xpbnV4L3d3X211dGV4LmgKQEAg
LTE4Miw3ICsxODIsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgd3dfYWNxdWlyZV9kb25lKHN0cnVj
dCB3d19hY3F1aXJlX2N0eCAqY3R4KQogc3RhdGljIGlubGluZSB2b2lkIHd3X2FjcXVpcmVfZmlu
aShzdHJ1Y3Qgd3dfYWNxdWlyZV9jdHggKmN0eCkKIHsKICNpZmRlZiBDT05GSUdfREVCVUdfTVVU
RVhFUwotCW11dGV4X3JlbGVhc2UoJmN0eC0+ZGVwX21hcCwgMCwgX1RISVNfSVBfKTsKKwltdXRl
eF9yZWxlYXNlKCZjdHgtPmRlcF9tYXAsIF9USElTX0lQXyk7CiAKIAlERUJVR19MT0NLU19XQVJO
X09OKGN0eC0+YWNxdWlyZWQpOwogCWlmICghSVNfRU5BQkxFRChDT05GSUdfUFJPVkVfTE9DS0lO
RykpCmRpZmYgLS1naXQgYS9pbmNsdWRlL25ldC9zb2NrLmggYi9pbmNsdWRlL25ldC9zb2NrLmgK
aW5kZXggMmM1M2YxYS4uZTQ2ZGIwYyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9uZXQvc29jay5oCisr
KyBiL2luY2x1ZGUvbmV0L3NvY2suaApAQCAtMTQ4NCw3ICsxNDg0LDcgQEAgc3RhdGljIGlubGlu
ZSB2b2lkIHNvY2tfcmVsZWFzZV9vd25lcnNoaXAoc3RydWN0IHNvY2sgKnNrKQogCQlzay0+c2tf
bG9jay5vd25lZCA9IDA7CiAKIAkJLyogVGhlIHNrX2xvY2sgaGFzIG11dGV4X3VubG9jaygpIHNl
bWFudGljczogKi8KLQkJbXV0ZXhfcmVsZWFzZSgmc2stPnNrX2xvY2suZGVwX21hcCwgMSwgX1JF
VF9JUF8pOworCQltdXRleF9yZWxlYXNlKCZzay0+c2tfbG9jay5kZXBfbWFwLCBfUkVUX0lQXyk7
CiAJfQogfQogCmRpZmYgLS1naXQgYS9rZXJuZWwvYnBmL3N0YWNrbWFwLmMgYi9rZXJuZWwvYnBm
L3N0YWNrbWFwLmMKaW5kZXggMDUyNTgwYy4uZGNmZTJkMyAxMDA2NDQKLS0tIGEva2VybmVsL2Jw
Zi9zdGFja21hcC5jCisrKyBiL2tlcm5lbC9icGYvc3RhY2ttYXAuYwpAQCAtMzM4LDcgKzMzOCw3
IEBAIHN0YXRpYyB2b2lkIHN0YWNrX21hcF9nZXRfYnVpbGRfaWRfb2Zmc2V0KHN0cnVjdCBicGZf
c3RhY2tfYnVpbGRfaWQgKmlkX29mZnMsCiAJCSAqIHVwX3JlYWRfbm9uX293bmVyKCkuIFRoZSBy
d3NlbV9yZWxlYXNlKCkgaXMgY2FsbGVkCiAJCSAqIGhlcmUgdG8gcmVsZWFzZSB0aGUgbG9jayBm
cm9tIGxvY2tkZXAncyBwZXJzcGVjdGl2ZS4KIAkJICovCi0JCXJ3c2VtX3JlbGVhc2UoJmN1cnJl
bnQtPm1tLT5tbWFwX3NlbS5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCXJ3c2VtX3JlbGVhc2Uo
JmN1cnJlbnQtPm1tLT5tbWFwX3NlbS5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJfQogfQogCmRpZmYg
LS1naXQgYS9rZXJuZWwvY3B1LmMgYi9rZXJuZWwvY3B1LmMKaW5kZXggZmMyOGUxNy4uNjhmODU2
MiAxMDA2NDQKLS0tIGEva2VybmVsL2NwdS5jCisrKyBiL2tlcm5lbC9jcHUuYwpAQCAtMzM2LDcg
KzMzNiw3IEBAIHN0YXRpYyB2b2lkIGxvY2tkZXBfYWNxdWlyZV9jcHVzX2xvY2sodm9pZCkKIAog
c3RhdGljIHZvaWQgbG9ja2RlcF9yZWxlYXNlX2NwdXNfbG9jayh2b2lkKQogewotCXJ3c2VtX3Jl
bGVhc2UoJmNwdV9ob3RwbHVnX2xvY2sucndfc2VtLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJ
cndzZW1fcmVsZWFzZSgmY3B1X2hvdHBsdWdfbG9jay5yd19zZW0uZGVwX21hcCwgX1RISVNfSVBf
KTsKIH0KIAogLyoKZGlmZiAtLWdpdCBhL2tlcm5lbC9sb2NraW5nL2xvY2tkZXAuYyBiL2tlcm5l
bC9sb2NraW5nL2xvY2tkZXAuYwppbmRleCAyMzM0NTljLi44MTIzNTE4IDEwMDY0NAotLS0gYS9r
ZXJuZWwvbG9ja2luZy9sb2NrZGVwLmMKKysrIGIva2VybmVsL2xvY2tpbmcvbG9ja2RlcC5jCkBA
IC00NDkxLDggKzQ0OTEsNyBAQCB2b2lkIGxvY2tfYWNxdWlyZShzdHJ1Y3QgbG9ja2RlcF9tYXAg
KmxvY2ssIHVuc2lnbmVkIGludCBzdWJjbGFzcywKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGxvY2tf
YWNxdWlyZSk7CiAKLXZvaWQgbG9ja19yZWxlYXNlKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9jaywg
aW50IG5lc3RlZCwKLQkJCSAgdW5zaWduZWQgbG9uZyBpcCkKK3ZvaWQgbG9ja19yZWxlYXNlKHN0
cnVjdCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWduZWQgbG9uZyBpcCkKIHsKIAl1bnNpZ25lZCBs
b25nIGZsYWdzOwogCmRpZmYgLS1naXQgYS9rZXJuZWwvbG9ja2luZy9tdXRleC5jIGIva2VybmVs
L2xvY2tpbmcvbXV0ZXguYwppbmRleCA0NjhhOWI4Li41MzUyY2U1IDEwMDY0NAotLS0gYS9rZXJu
ZWwvbG9ja2luZy9tdXRleC5jCisrKyBiL2tlcm5lbC9sb2NraW5nL211dGV4LmMKQEAgLTEwOTEs
NyArMTA5MSw3IEBAIGVycjoKIGVycl9lYXJseV9raWxsOgogCXNwaW5fdW5sb2NrKCZsb2NrLT53
YWl0X2xvY2spOwogCWRlYnVnX211dGV4X2ZyZWVfd2FpdGVyKCZ3YWl0ZXIpOwotCW11dGV4X3Jl
bGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIGlwKTsKKwltdXRleF9yZWxlYXNlKCZsb2NrLT5kZXBf
bWFwLCBpcCk7CiAJcHJlZW1wdF9lbmFibGUoKTsKIAlyZXR1cm4gcmV0OwogfQpAQCAtMTIyNSw3
ICsxMjI1LDcgQEAgc3RhdGljIG5vaW5saW5lIHZvaWQgX19zY2hlZCBfX211dGV4X3VubG9ja19z
bG93cGF0aChzdHJ1Y3QgbXV0ZXggKmxvY2ssIHVuc2lnbmUKIAlERUZJTkVfV0FLRV9RKHdha2Vf
cSk7CiAJdW5zaWduZWQgbG9uZyBvd25lcjsKIAotCW11dGV4X3JlbGVhc2UoJmxvY2stPmRlcF9t
YXAsIDEsIGlwKTsKKwltdXRleF9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCBpcCk7CiAKIAkvKgog
CSAqIFJlbGVhc2UgdGhlIGxvY2sgYmVmb3JlIChwb3RlbnRpYWxseSkgdGFraW5nIHRoZSBzcGlu
bG9jayBzdWNoIHRoYXQKZGlmZiAtLWdpdCBhL2tlcm5lbC9sb2NraW5nL3J0bXV0ZXguYyBiL2tl
cm5lbC9sb2NraW5nL3J0bXV0ZXguYwppbmRleCAyODc0YmY1Li44NTFiYmIxIDEwMDY0NAotLS0g
YS9rZXJuZWwvbG9ja2luZy9ydG11dGV4LmMKKysrIGIva2VybmVsL2xvY2tpbmcvcnRtdXRleC5j
CkBAIC0xNTE3LDcgKzE1MTcsNyBAQCBpbnQgX19zY2hlZCBydF9tdXRleF9sb2NrX2ludGVycnVw
dGlibGUoc3RydWN0IHJ0X211dGV4ICpsb2NrKQogCW11dGV4X2FjcXVpcmUoJmxvY2stPmRlcF9t
YXAsIDAsIDAsIF9SRVRfSVBfKTsKIAlyZXQgPSBydF9tdXRleF9mYXN0bG9jayhsb2NrLCBUQVNL
X0lOVEVSUlVQVElCTEUsIHJ0X211dGV4X3Nsb3dsb2NrKTsKIAlpZiAocmV0KQotCQltdXRleF9y
ZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCW11dGV4X3JlbGVhc2UoJmxv
Y2stPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAogCXJldHVybiByZXQ7CiB9CkBAIC0xNTYxLDcgKzE1
NjEsNyBAQCBydF9tdXRleF90aW1lZF9sb2NrKHN0cnVjdCBydF9tdXRleCAqbG9jaywgc3RydWN0
IGhydGltZXJfc2xlZXBlciAqdGltZW91dCkKIAkJCQkgICAgICAgUlRfTVVURVhfTUlOX0NIQUlO
V0FMSywKIAkJCQkgICAgICAgcnRfbXV0ZXhfc2xvd2xvY2spOwogCWlmIChyZXQpCi0JCW11dGV4
X3JlbGVhc2UoJmxvY2stPmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJbXV0ZXhfcmVsZWFzZSgm
bG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTE2MDAsNyAr
MTYwMCw3IEBAIEVYUE9SVF9TWU1CT0xfR1BMKHJ0X211dGV4X3RyeWxvY2spOwogICovCiB2b2lk
IF9fc2NoZWQgcnRfbXV0ZXhfdW5sb2NrKHN0cnVjdCBydF9tdXRleCAqbG9jaykKIHsKLQltdXRl
eF9yZWxlYXNlKCZsb2NrLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgm
bG9jay0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCXJ0X211dGV4X2Zhc3R1bmxvY2sobG9jaywgcnRf
bXV0ZXhfc2xvd3VubG9jayk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChydF9tdXRleF91bmxvY2sp
OwpkaWZmIC0tZ2l0IGEva2VybmVsL2xvY2tpbmcvcndzZW0uYyBiL2tlcm5lbC9sb2NraW5nL3J3
c2VtLmMKaW5kZXggZWVmMDQ1NS4uNDRlNjg3NiAxMDA2NDQKLS0tIGEva2VybmVsL2xvY2tpbmcv
cndzZW0uYworKysgYi9rZXJuZWwvbG9ja2luZy9yd3NlbS5jCkBAIC0xNTA0LDcgKzE1MDQsNyBA
QCBpbnQgX19zY2hlZCBkb3duX3JlYWRfa2lsbGFibGUoc3RydWN0IHJ3X3NlbWFwaG9yZSAqc2Vt
KQogCXJ3c2VtX2FjcXVpcmVfcmVhZCgmc2VtLT5kZXBfbWFwLCAwLCAwLCBfUkVUX0lQXyk7CiAK
IAlpZiAoTE9DS19DT05URU5ERURfUkVUVVJOKHNlbSwgX19kb3duX3JlYWRfdHJ5bG9jaywgX19k
b3duX3JlYWRfa2lsbGFibGUpKSB7Ci0JCXJ3c2VtX3JlbGVhc2UoJnNlbS0+ZGVwX21hcCwgMSwg
X1JFVF9JUF8pOworCQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIF9SRVRfSVBfKTsKIAkJ
cmV0dXJuIC1FSU5UUjsKIAl9CiAKQEAgLTE1NDYsNyArMTU0Niw3IEBAIGludCBfX3NjaGVkIGRv
d25fd3JpdGVfa2lsbGFibGUoc3RydWN0IHJ3X3NlbWFwaG9yZSAqc2VtKQogCiAJaWYgKExPQ0tf
Q09OVEVOREVEX1JFVFVSTihzZW0sIF9fZG93bl93cml0ZV90cnlsb2NrLAogCQkJCSAgX19kb3du
X3dyaXRlX2tpbGxhYmxlKSkgewotCQlyd3NlbV9yZWxlYXNlKCZzZW0tPmRlcF9tYXAsIDEsIF9S
RVRfSVBfKTsKKwkJcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJCXJl
dHVybiAtRUlOVFI7CiAJfQogCkBAIC0xNTczLDcgKzE1NzMsNyBAQCBFWFBPUlRfU1lNQk9MKGRv
d25fd3JpdGVfdHJ5bG9jayk7CiAgKi8KIHZvaWQgdXBfcmVhZChzdHJ1Y3Qgcndfc2VtYXBob3Jl
ICpzZW0pCiB7Ci0JcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJ
cndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJX191cF9yZWFkKHNlbSk7
CiB9CiBFWFBPUlRfU1lNQk9MKHVwX3JlYWQpOwpAQCAtMTU4Myw3ICsxNTgzLDcgQEAgRVhQT1JU
X1NZTUJPTCh1cF9yZWFkKTsKICAqLwogdm9pZCB1cF93cml0ZShzdHJ1Y3Qgcndfc2VtYXBob3Jl
ICpzZW0pCiB7Ci0JcndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJ
cndzZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCBfUkVUX0lQXyk7CiAJX191cF93cml0ZShzZW0p
OwogfQogRVhQT1JUX1NZTUJPTCh1cF93cml0ZSk7CkBAIC0xNjM5LDcgKzE2MzksNyBAQCBpbnQg
X19zY2hlZCBkb3duX3dyaXRlX2tpbGxhYmxlX25lc3RlZChzdHJ1Y3Qgcndfc2VtYXBob3JlICpz
ZW0sIGludCBzdWJjbGFzcykKIAogCWlmIChMT0NLX0NPTlRFTkRFRF9SRVRVUk4oc2VtLCBfX2Rv
d25fd3JpdGVfdHJ5bG9jaywKIAkJCQkgIF9fZG93bl93cml0ZV9raWxsYWJsZSkpIHsKLQkJcndz
ZW1fcmVsZWFzZSgmc2VtLT5kZXBfbWFwLCAxLCBfUkVUX0lQXyk7CisJCXJ3c2VtX3JlbGVhc2Uo
JnNlbS0+ZGVwX21hcCwgX1JFVF9JUF8pOwogCQlyZXR1cm4gLUVJTlRSOwogCX0KIApkaWZmIC0t
Z2l0IGEva2VybmVsL3ByaW50ay9wcmludGsuYyBiL2tlcm5lbC9wcmludGsvcHJpbnRrLmMKaW5k
ZXggY2E2NTMyNy4uYzhiZTVhMCAxMDA2NDQKLS0tIGEva2VybmVsL3ByaW50ay9wcmludGsuYwor
KysgYi9rZXJuZWwvcHJpbnRrL3ByaW50ay5jCkBAIC0yNDgsNyArMjQ4LDcgQEAgc3RhdGljIHZv
aWQgX191cF9jb25zb2xlX3NlbSh1bnNpZ25lZCBsb25nIGlwKQogewogCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CiAKLQltdXRleF9yZWxlYXNlKCZjb25zb2xlX2xvY2tfZGVwX21hcCwgMSwgaXApOwor
CW11dGV4X3JlbGVhc2UoJmNvbnNvbGVfbG9ja19kZXBfbWFwLCBpcCk7CiAKIAlwcmludGtfc2Fm
ZV9lbnRlcl9pcnFzYXZlKGZsYWdzKTsKIAl1cCgmY29uc29sZV9zZW0pOwpAQCAtMTY3OSwyMCAr
MTY3OSwyMCBAQCBzdGF0aWMgaW50IGNvbnNvbGVfbG9ja19zcGlubmluZ19kaXNhYmxlX2FuZF9j
aGVjayh2b2lkKQogCXJhd19zcGluX3VubG9jaygmY29uc29sZV9vd25lcl9sb2NrKTsKIAogCWlm
ICghd2FpdGVyKSB7Ci0JCXNwaW5fcmVsZWFzZSgmY29uc29sZV9vd25lcl9kZXBfbWFwLCAxLCBf
VEhJU19JUF8pOworCQlzcGluX3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwgX1RISVNf
SVBfKTsKIAkJcmV0dXJuIDA7CiAJfQogCiAJLyogVGhlIHdhaXRlciBpcyBub3cgZnJlZSB0byBj
b250aW51ZSAqLwogCVdSSVRFX09OQ0UoY29uc29sZV93YWl0ZXIsIGZhbHNlKTsKIAotCXNwaW5f
cmVsZWFzZSgmY29uc29sZV9vd25lcl9kZXBfbWFwLCAxLCBfVEhJU19JUF8pOworCXNwaW5fcmVs
ZWFzZSgmY29uc29sZV9vd25lcl9kZXBfbWFwLCBfVEhJU19JUF8pOwogCiAJLyoKIAkgKiBIYW5k
IG9mZiBjb25zb2xlX2xvY2sgdG8gd2FpdGVyLiBUaGUgd2FpdGVyIHdpbGwgcGVyZm9ybQogCSAq
IHRoZSB1cCgpLiBBZnRlciB0aGlzLCB0aGUgd2FpdGVyIGlzIHRoZSBjb25zb2xlX2xvY2sgb3du
ZXIuCiAJICovCi0JbXV0ZXhfcmVsZWFzZSgmY29uc29sZV9sb2NrX2RlcF9tYXAsIDEsIF9USElT
X0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmY29uc29sZV9sb2NrX2RlcF9tYXAsIF9USElTX0lQXyk7
CiAJcmV0dXJuIDE7CiB9CiAKQEAgLTE3NDYsNyArMTc0Niw3IEBAIHN0YXRpYyBpbnQgY29uc29s
ZV90cnlsb2NrX3NwaW5uaW5nKHZvaWQpCiAJLyogT3duZXIgd2lsbCBjbGVhciBjb25zb2xlX3dh
aXRlciBvbiBoYW5kIG9mZiAqLwogCXdoaWxlIChSRUFEX09OQ0UoY29uc29sZV93YWl0ZXIpKQog
CQljcHVfcmVsYXgoKTsKLQlzcGluX3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwgMSwg
X1RISVNfSVBfKTsKKwlzcGluX3JlbGVhc2UoJmNvbnNvbGVfb3duZXJfZGVwX21hcCwgX1RISVNf
SVBfKTsKIAogCXByaW50a19zYWZlX2V4aXRfaXJxcmVzdG9yZShmbGFncyk7CiAJLyoKZGlmZiAt
LWdpdCBhL2tlcm5lbC9zY2hlZC9jb3JlLmMgYi9rZXJuZWwvc2NoZWQvY29yZS5jCmluZGV4IGRk
MDVhMzcuLmViNDJiNzEgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9zY2hlZC9jb3JlLmMKKysrIGIva2Vy
bmVsL3NjaGVkL2NvcmUuYwpAQCAtMzEwNSw3ICszMTA1LDcgQEAgcHJlcGFyZV9sb2NrX3N3aXRj
aChzdHJ1Y3QgcnEgKnJxLCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKm5leHQsIHN0cnVjdCBycV9mbGFn
cyAqcmYKIAkgKiBkbyBhbiBlYXJseSBsb2NrZGVwIHJlbGVhc2UgaGVyZToKIAkgKi8KIAlycV91
bnBpbl9sb2NrKHJxLCByZik7Ci0Jc3Bpbl9yZWxlYXNlKCZycS0+bG9jay5kZXBfbWFwLCAxLCBf
VEhJU19JUF8pOworCXNwaW5fcmVsZWFzZSgmcnEtPmxvY2suZGVwX21hcCwgX1RISVNfSVBfKTsK
ICNpZmRlZiBDT05GSUdfREVCVUdfU1BJTkxPQ0sKIAkvKiB0aGlzIGlzIGEgdmFsaWQgY2FzZSB3
aGVuIGFub3RoZXIgdGFzayByZWxlYXNlcyB0aGUgc3BpbmxvY2sgKi8KIAlycS0+bG9jay5vd25l
ciA9IG5leHQ7CmRpZmYgLS1naXQgYS9saWIvbG9ja2luZy1zZWxmdGVzdC5jIGIvbGliL2xvY2tp
bmctc2VsZnRlc3QuYwppbmRleCBhMTcwNTU0Li4xNGY0NGY1IDEwMDY0NAotLS0gYS9saWIvbG9j
a2luZy1zZWxmdGVzdC5jCisrKyBiL2xpYi9sb2NraW5nLXNlbGZ0ZXN0LmMKQEAgLTE0NzUsNyAr
MTQ3NSw3IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19ub3JtYWwodm9pZCkKIAogCW11
dGV4X2xvY2soJm8yLmJhc2UpOwogCW8yLmN0eCA9ICZ0MjsKLQltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBf
bWFwLCBfVEhJU19JUF8pOwogCiAJV1dBSSgmdCk7CiAJdDIgPSB0OwpAQCAtMTUwMCw3ICsxNTAw
LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX25vcm1hbF9zbG93KHZvaWQpCiAJaW50
IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2Uu
ZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAs
IF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNTI3LDcgKzE1
MjcsNyBAQCBzdGF0aWMgdm9pZCB3d190ZXN0X2VkZWFkbGtfbm9fdW5sb2NrKHZvaWQpCiAKIAlt
dXRleF9sb2NrKCZvMi5iYXNlKTsKIAlvMi5jdHggPSAmdDI7Ci0JbXV0ZXhfcmVsZWFzZSgmbzIu
YmFzZS5kZXBfbWFwLCAxLCBfVEhJU19JUF8pOworCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVw
X21hcCwgX1RISVNfSVBfKTsKIAogCVdXQUkoJnQpOwogCXQyID0gdDsKQEAgLTE1NTEsNyArMTU1
MSw3IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19ub191bmxvY2tfc2xvdyh2b2lkKQog
CWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNlKTsKLQltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBf
bWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsKIAogCVdXQUkoJnQpOwpAQCAtMTU3Niw3
ICsxNTc2LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX2FjcXVpcmVfbW9yZSh2b2lk
KQogCWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNlKTsKLQltdXRleF9yZWxlYXNlKCZv
Mi5iYXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0ZXhfcmVsZWFzZSgmbzIuYmFzZS5k
ZXBfbWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsKIAogCVdXQUkoJnQpOwpAQCAtMTU5
Nyw3ICsxNTk3LDcgQEAgc3RhdGljIHZvaWQgd3dfdGVzdF9lZGVhZGxrX2FjcXVpcmVfbW9yZV9z
bG93KHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3Jl
bGVhc2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZv
Mi5iYXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7
CkBAIC0xNjE4LDExICsxNjE4LDExIEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19hY3F1
aXJlX21vcmVfZWRlYWRsayh2b2lkKQogCWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZvMi5iYXNl
KTsKLQltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIDEsIF9USElTX0lQXyk7CisJbXV0
ZXhfcmVsZWFzZSgmbzIuYmFzZS5kZXBfbWFwLCBfVEhJU19JUF8pOwogCW8yLmN0eCA9ICZ0MjsK
IAogCW11dGV4X2xvY2soJm8zLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8zLmJhc2UuZGVwX21h
cCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMy5iYXNlLmRlcF9tYXAsIF9USElT
X0lQXyk7CiAJbzMuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNjQ0LDExICsxNjQ0LDEx
IEBAIHN0YXRpYyB2b2lkIHd3X3Rlc3RfZWRlYWRsa19hY3F1aXJlX21vcmVfZWRlYWRsa19zbG93
KHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVh
c2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5i
YXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJbXV0ZXhfbG9jaygm
bzMuYmFzZSk7Ci0JbXV0ZXhfcmVsZWFzZSgmbzMuYmFzZS5kZXBfbWFwLCAxLCBfVEhJU19JUF8p
OworCW11dGV4X3JlbGVhc2UoJm8zLmJhc2UuZGVwX21hcCwgX1RISVNfSVBfKTsKIAlvMy5jdHgg
PSAmdDI7CiAKIAlXV0FJKCZ0KTsKQEAgLTE2NjksNyArMTY2OSw3IEBAIHN0YXRpYyB2b2lkIHd3
X3Rlc3RfZWRlYWRsa19hY3F1aXJlX3dyb25nKHZvaWQpCiAJaW50IHJldDsKIAogCW11dGV4X2xv
Y2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVwX21hcCwgMSwgX1RISVNf
SVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIF9USElTX0lQXyk7CiAJbzIu
Y3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CkBAIC0xNjk0LDcgKzE2OTQsNyBAQCBzdGF0aWMgdm9p
ZCB3d190ZXN0X2VkZWFkbGtfYWNxdWlyZV93cm9uZ19zbG93KHZvaWQpCiAJaW50IHJldDsKIAog
CW11dGV4X2xvY2soJm8yLmJhc2UpOwotCW11dGV4X3JlbGVhc2UoJm8yLmJhc2UuZGVwX21hcCwg
MSwgX1RISVNfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZvMi5iYXNlLmRlcF9tYXAsIF9USElTX0lQ
Xyk7CiAJbzIuY3R4ID0gJnQyOwogCiAJV1dBSSgmdCk7CmRpZmYgLS1naXQgYS9tbS9tZW1jb250
cm9sLmMgYi9tbS9tZW1jb250cm9sLmMKaW5kZXggYmRhYzU2MC4uMTIyMzM0NiAxMDA2NDQKLS0t
IGEvbW0vbWVtY29udHJvbC5jCisrKyBiL21tL21lbWNvbnRyb2wuYwpAQCAtMTgwMCw3ICsxODAw
LDcgQEAgc3RhdGljIHZvaWQgbWVtX2Nncm91cF9vb21fdW5sb2NrKHN0cnVjdCBtZW1fY2dyb3Vw
ICptZW1jZykKIAlzdHJ1Y3QgbWVtX2Nncm91cCAqaXRlcjsKIAogCXNwaW5fbG9jaygmbWVtY2df
b29tX2xvY2spOwotCW11dGV4X3JlbGVhc2UoJm1lbWNnX29vbV9sb2NrX2RlcF9tYXAsIDEsIF9S
RVRfSVBfKTsKKwltdXRleF9yZWxlYXNlKCZtZW1jZ19vb21fbG9ja19kZXBfbWFwLCBfUkVUX0lQ
Xyk7CiAJZm9yX2VhY2hfbWVtX2Nncm91cF90cmVlKGl0ZXIsIG1lbWNnKQogCQlpdGVyLT5vb21f
bG9jayA9IGZhbHNlOwogCXNwaW5fdW5sb2NrKCZtZW1jZ19vb21fbG9jayk7CmRpZmYgLS1naXQg
YS9uZXQvY29yZS9zb2NrLmMgYi9uZXQvY29yZS9zb2NrLmMKaW5kZXggZmFjMmI0ZC4uNTBiOTMw
MyAxMDA2NDQKLS0tIGEvbmV0L2NvcmUvc29jay5jCisrKyBiL25ldC9jb3JlL3NvY2suYwpAQCAt
NTIxLDcgKzUyMSw3IEBAIGludCBfX3NrX3JlY2VpdmVfc2tiKHN0cnVjdCBzb2NrICpzaywgc3Ry
dWN0IHNrX2J1ZmYgKnNrYiwKIAogCQlyYyA9IHNrX2JhY2tsb2dfcmN2KHNrLCBza2IpOwogCi0J
CW11dGV4X3JlbGVhc2UoJnNrLT5za19sb2NrLmRlcF9tYXAsIDEsIF9SRVRfSVBfKTsKKwkJbXV0
ZXhfcmVsZWFzZSgmc2stPnNrX2xvY2suZGVwX21hcCwgX1JFVF9JUF8pOwogCX0gZWxzZSBpZiAo
c2tfYWRkX2JhY2tsb2coc2ssIHNrYiwgc2stPnNrX3JjdmJ1ZikpIHsKIAkJYmhfdW5sb2NrX3Nv
Y2soc2spOwogCQlhdG9taWNfaW5jKCZzay0+c2tfZHJvcHMpOwpkaWZmIC0tZ2l0IGEvdG9vbHMv
bGliL2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL2NvbW1vbi5oIGIvdG9vbHMvbGliL2xvY2tk
ZXAvaW5jbHVkZS9saWJsb2NrZGVwL2NvbW1vbi5oCmluZGV4IGE4MWQ5MWQuLmE2ZDdlZTUgMTAw
NjQ0Ci0tLSBhL3Rvb2xzL2xpYi9sb2NrZGVwL2luY2x1ZGUvbGlibG9ja2RlcC9jb21tb24uaAor
KysgYi90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvY29tbW9uLmgKQEAgLTQy
LDggKzQyLDcgQEAgdm9pZCBsb2NrZGVwX2luaXRfbWFwKHN0cnVjdCBsb2NrZGVwX21hcCAqbG9j
aywgY29uc3QgY2hhciAqbmFtZSwKIHZvaWQgbG9ja19hY3F1aXJlKHN0cnVjdCBsb2NrZGVwX21h
cCAqbG9jaywgdW5zaWduZWQgaW50IHN1YmNsYXNzLAogCQkJaW50IHRyeWxvY2ssIGludCByZWFk
LCBpbnQgY2hlY2ssCiAJCQlzdHJ1Y3QgbG9ja2RlcF9tYXAgKm5lc3RfbG9jaywgdW5zaWduZWQg
bG9uZyBpcCk7Ci12b2lkIGxvY2tfcmVsZWFzZShzdHJ1Y3QgbG9ja2RlcF9tYXAgKmxvY2ssIGlu
dCBuZXN0ZWQsCi0JCQl1bnNpZ25lZCBsb25nIGlwKTsKK3ZvaWQgbG9ja19yZWxlYXNlKHN0cnVj
dCBsb2NrZGVwX21hcCAqbG9jaywgdW5zaWduZWQgbG9uZyBpcCk7CiB2b2lkIGxvY2tkZXBfcmVz
ZXRfbG9jayhzdHJ1Y3QgbG9ja2RlcF9tYXAgKmxvY2spOwogdm9pZCBsb2NrZGVwX3JlZ2lzdGVy
X2tleShzdHJ1Y3QgbG9ja19jbGFzc19rZXkgKmtleSk7CiB2b2lkIGxvY2tkZXBfdW5yZWdpc3Rl
cl9rZXkoc3RydWN0IGxvY2tfY2xhc3Nfa2V5ICprZXkpOwpkaWZmIC0tZ2l0IGEvdG9vbHMvbGli
L2xvY2tkZXAvaW5jbHVkZS9saWJsb2NrZGVwL211dGV4LmggYi90b29scy9saWIvbG9ja2RlcC9p
bmNsdWRlL2xpYmxvY2tkZXAvbXV0ZXguaAppbmRleCA3ODNkZDBkLi5iZDEwNmI4IDEwMDY0NAot
LS0gYS90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvbXV0ZXguaAorKysgYi90
b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvbXV0ZXguaApAQCAtNDIsNyArNDIs
NyBAQCBzdGF0aWMgaW5saW5lIGludCBsaWJsb2NrZGVwX3B0aHJlYWRfbXV0ZXhfbG9jayhsaWJs
b2NrZGVwX3B0aHJlYWRfbXV0ZXhfdCAqbG9jawogCiBzdGF0aWMgaW5saW5lIGludCBsaWJsb2Nr
ZGVwX3B0aHJlYWRfbXV0ZXhfdW5sb2NrKGxpYmxvY2tkZXBfcHRocmVhZF9tdXRleF90ICpsb2Nr
KQogewotCWxvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgMCwgKHVuc2lnbmVkIGxvbmcpX1JF
VF9JUF8pOworCWxvY2tfcmVsZWFzZSgmbG9jay0+ZGVwX21hcCwgKHVuc2lnbmVkIGxvbmcpX1JF
VF9JUF8pOwogCXJldHVybiBwdGhyZWFkX211dGV4X3VubG9jaygmbG9jay0+bXV0ZXgpOwogfQog
CmRpZmYgLS1naXQgYS90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvcndsb2Nr
LmggYi90b29scy9saWIvbG9ja2RlcC9pbmNsdWRlL2xpYmxvY2tkZXAvcndsb2NrLmgKaW5kZXgg
MzY1NzYyZS4uNmQ1ZDI5MyAxMDA2NDQKLS0tIGEvdG9vbHMvbGliL2xvY2tkZXAvaW5jbHVkZS9s
aWJsb2NrZGVwL3J3bG9jay5oCisrKyBiL3Rvb2xzL2xpYi9sb2NrZGVwL2luY2x1ZGUvbGlibG9j
a2RlcC9yd2xvY2suaApAQCAtNDQsNyArNDQsNyBAQCBzdGF0aWMgaW5saW5lIGludCBsaWJsb2Nr
ZGVwX3B0aHJlYWRfcndsb2NrX3JkbG9jayhsaWJsb2NrZGVwX3B0aHJlYWRfcndsb2NrX3QgKgog
CiBzdGF0aWMgaW5saW5lIGludCBsaWJsb2NrZGVwX3B0aHJlYWRfcndsb2NrX3VubG9jayhsaWJs
b2NrZGVwX3B0aHJlYWRfcndsb2NrX3QgKmxvY2spCiB7Ci0JbG9ja19yZWxlYXNlKCZsb2NrLT5k
ZXBfbWFwLCAwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CisJbG9ja19yZWxlYXNlKCZsb2Nr
LT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CiAJcmV0dXJuIHB0aHJlYWRfcnds
b2NrX3VubG9jaygmbG9jay0+cndsb2NrKTsKIH0KIApkaWZmIC0tZ2l0IGEvdG9vbHMvbGliL2xv
Y2tkZXAvcHJlbG9hZC5jIGIvdG9vbHMvbGliL2xvY2tkZXAvcHJlbG9hZC5jCmluZGV4IDc2MjQ1
ZDEuLjhmMWFkYmUgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2xpYi9sb2NrZGVwL3ByZWxvYWQuYworKysg
Yi90b29scy9saWIvbG9ja2RlcC9wcmVsb2FkLmMKQEAgLTI3MCw3ICsyNzAsNyBAQCBpbnQgcHRo
cmVhZF9tdXRleF9sb2NrKHB0aHJlYWRfbXV0ZXhfdCAqbXV0ZXgpCiAJICovCiAJciA9IGxsX3B0
aHJlYWRfbXV0ZXhfbG9jayhtdXRleCk7CiAJaWYgKHIpCi0JCWxvY2tfcmVsZWFzZSgmX19nZXRf
bG9jayhtdXRleCktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwkJbG9j
a19yZWxlYXNlKCZfX2dldF9sb2NrKG11dGV4KS0+ZGVwX21hcCwgKHVuc2lnbmVkIGxvbmcpX1JF
VF9JUF8pOwogCiAJcmV0dXJuIHI7CiB9CkBAIC0yODQsNyArMjg0LDcgQEAgaW50IHB0aHJlYWRf
bXV0ZXhfdHJ5bG9jayhwdGhyZWFkX211dGV4X3QgKm11dGV4KQogCWxvY2tfYWNxdWlyZSgmX19n
ZXRfbG9jayhtdXRleCktPmRlcF9tYXAsIDAsIDEsIDAsIDEsIE5VTEwsICh1bnNpZ25lZCBsb25n
KV9SRVRfSVBfKTsKIAlyID0gbGxfcHRocmVhZF9tdXRleF90cnlsb2NrKG11dGV4KTsKIAlpZiAo
cikKLQkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKG11dGV4KS0+ZGVwX21hcCwgMCwgKHVuc2ln
bmVkIGxvbmcpX1JFVF9JUF8pOworCQlsb2NrX3JlbGVhc2UoJl9fZ2V0X2xvY2sobXV0ZXgpLT5k
ZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CiAKIAlyZXR1cm4gcjsKIH0KQEAgLTI5
NSw3ICsyOTUsNyBAQCBpbnQgcHRocmVhZF9tdXRleF91bmxvY2socHRocmVhZF9tdXRleF90ICpt
dXRleCkKIAogCXRyeV9pbml0X3ByZWxvYWQoKTsKIAotCWxvY2tfcmVsZWFzZSgmX19nZXRfbG9j
ayhtdXRleCktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2NrX3Jl
bGVhc2UoJl9fZ2V0X2xvY2sobXV0ZXgpLT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQ
Xyk7CiAJLyoKIAkgKiBKdXN0IGxpa2UgdGFraW5nIGEgbG9jaywgb25seSBpbiByZXZlcnNlIQog
CSAqCkBAIC0zNTUsNyArMzU1LDcgQEAgaW50IHB0aHJlYWRfcndsb2NrX3JkbG9jayhwdGhyZWFk
X3J3bG9ja190ICpyd2xvY2spCiAJbG9ja19hY3F1aXJlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRl
cF9tYXAsIDAsIDAsIDIsIDEsIE5VTEwsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAlyID0g
bGxfcHRocmVhZF9yd2xvY2tfcmRsb2NrKHJ3bG9jayk7CiAJaWYgKHIpCi0JCWxvY2tfcmVsZWFz
ZSgmX19nZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQ
Xyk7CisJCWxvY2tfcmVsZWFzZSgmX19nZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAodW5zaWdu
ZWQgbG9uZylfUkVUX0lQXyk7CiAKIAlyZXR1cm4gcjsKIH0KQEAgLTM2OSw3ICszNjksNyBAQCBp
bnQgcHRocmVhZF9yd2xvY2tfdHJ5cmRsb2NrKHB0aHJlYWRfcndsb2NrX3QgKnJ3bG9jaykKIAls
b2NrX2FjcXVpcmUoJl9fZ2V0X2xvY2socndsb2NrKS0+ZGVwX21hcCwgMCwgMSwgMiwgMSwgTlVM
TCwgKHVuc2lnbmVkIGxvbmcpX1JFVF9JUF8pOwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja190cnly
ZGxvY2socndsb2NrKTsKIAlpZiAocikKLQkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3bG9j
ayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwkJbG9ja19yZWxlYXNl
KCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsK
IAogCXJldHVybiByOwogfQpAQCAtMzgzLDcgKzM4Myw3IEBAIGludCBwdGhyZWFkX3J3bG9ja190
cnl3cmxvY2socHRocmVhZF9yd2xvY2tfdCAqcndsb2NrKQogCWxvY2tfYWNxdWlyZSgmX19nZXRf
bG9jayhyd2xvY2spLT5kZXBfbWFwLCAwLCAxLCAwLCAxLCBOVUxMLCAodW5zaWduZWQgbG9uZylf
UkVUX0lQXyk7CiAJciA9IGxsX3B0aHJlYWRfcndsb2NrX3RyeXdybG9jayhyd2xvY2spOwogCWlm
IChyKQotICAgICAgICAgICAgICAgIGxvY2tfcmVsZWFzZSgmX19nZXRfbG9jayhyd2xvY2spLT5k
ZXBfbWFwLCAwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CisJCWxvY2tfcmVsZWFzZSgmX19n
ZXRfbG9jayhyd2xvY2spLT5kZXBfbWFwLCAodW5zaWduZWQgbG9uZylfUkVUX0lQXyk7CiAKIAly
ZXR1cm4gcjsKIH0KQEAgLTM5Nyw3ICszOTcsNyBAQCBpbnQgcHRocmVhZF9yd2xvY2tfd3Jsb2Nr
KHB0aHJlYWRfcndsb2NrX3QgKnJ3bG9jaykKIAlsb2NrX2FjcXVpcmUoJl9fZ2V0X2xvY2socnds
b2NrKS0+ZGVwX21hcCwgMCwgMCwgMCwgMSwgTlVMTCwgKHVuc2lnbmVkIGxvbmcpX1JFVF9JUF8p
OwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja193cmxvY2socndsb2NrKTsKIAlpZiAocikKLQkJbG9j
a19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25n
KV9SRVRfSVBfKTsKKwkJbG9ja19yZWxlYXNlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAs
ICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKIAogCXJldHVybiByOwogfQpAQCAtNDA4LDcgKzQw
OCw3IEBAIGludCBwdGhyZWFkX3J3bG9ja191bmxvY2socHRocmVhZF9yd2xvY2tfdCAqcndsb2Nr
KQogCiAgICAgICAgIGluaXRfcHJlbG9hZCgpOwogCi0JbG9ja19yZWxlYXNlKCZfX2dldF9sb2Nr
KHJ3bG9jayktPmRlcF9tYXAsIDAsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKKwlsb2NrX3Jl
bGVhc2UoJl9fZ2V0X2xvY2socndsb2NrKS0+ZGVwX21hcCwgKHVuc2lnbmVkIGxvbmcpX1JFVF9J
UF8pOwogCXIgPSBsbF9wdGhyZWFkX3J3bG9ja191bmxvY2socndsb2NrKTsKIAlpZiAocikKIAkJ
bG9ja19hY3F1aXJlKCZfX2dldF9sb2NrKHJ3bG9jayktPmRlcF9tYXAsIDAsIDAsIDAsIDEsIE5V
TEwsICh1bnNpZ25lZCBsb25nKV9SRVRfSVBfKTsKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vZHJpLWRldmVs
