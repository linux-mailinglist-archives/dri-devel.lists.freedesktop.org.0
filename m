Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C2A31968EE
	for <lists+dri-devel@lfdr.de>; Tue, 20 Aug 2019 21:06:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6EB7B6E85D;
	Tue, 20 Aug 2019 19:06:53 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.codeaurora.org (smtp.codeaurora.org [198.145.29.96])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AD7136E85B;
 Tue, 20 Aug 2019 19:06:51 +0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
 id 967D4611FB; Tue, 20 Aug 2019 19:06:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
 pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
 DKIM_INVALID,DKIM_SIGNED,SPF_NONE autolearn=no autolearn_force=no
 version=3.4.0
Received: from jcrouse1-lnx.qualcomm.com (i-global254.qualcomm.com
 [199.106.103.254])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: jcrouse@smtp.codeaurora.org)
 by smtp.codeaurora.org (Postfix) with ESMTPSA id 9A1DA611FD;
 Tue, 20 Aug 2019 19:06:46 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 9A1DA611FD
From: Jordan Crouse <jcrouse@codeaurora.org>
To: freedreno@lists.freedesktop.org
Subject: [PATCH 7/7] drm/msm: Use per-target functions to set up address spaces
Date: Tue, 20 Aug 2019 13:06:32 -0600
Message-Id: <1566327992-362-8-git-send-email-jcrouse@codeaurora.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1566327992-362-1-git-send-email-jcrouse@codeaurora.org>
References: <1566327992-362-1-git-send-email-jcrouse@codeaurora.org>
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1566328011;
 bh=gpp/EGoRwhbdqjjcbCs1y2zrh/0RF0f4+kowfzln/4k=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=VpQu7xRVw87gGW9aIrKgRL4EqhaMERS0qC6Sav3DKOCt3s9ET+CvF3cb1fOhYz+ir
 RFUR3m0PN908nfSf0YEnTbU65YmCjuhIgYNZPiSF2zQEyB+/AVAFYo3ZHXf/TcALCb
 PvTFGGAYkhx2/4ZqVHtUagUbraMcaaaY1v961F5Q=
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1566328008;
 bh=gpp/EGoRwhbdqjjcbCs1y2zrh/0RF0f4+kowfzln/4k=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=me4plxyT/w3phpb+180hkMp5Xb51ylNPkvGgBKfh8VII/wNrSCdJalHPRE6T1W6Yk
 SoDDPD0az0xDQWEKXVlwQplbRO1qiQBoYzXXoPuO1jWizSas2osxwuTrS4pJe91T7X
 huivYqWMf7KOM4NpBDS1alVkOyXaPxQumkVGrlrY=
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 dmarc=none (p=none dis=none)
 header.from=codeaurora.org
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 spf=none
 smtp.mailfrom=jcrouse@codeaurora.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Jonathan Marek <jonathan@marek.ca>, Jeffrey Hugo <jeffrey.l.hugo@gmail.com>,
 David Airlie <airlied@linux.ie>, linux-arm-msm@vger.kernel.org,
 Sharat Masetty <smasetty@codeaurora.org>, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, Douglas Anderson <dianders@chromium.org>,
 Alexios Zavras <alexios.zavras@intel.com>,
 Mamta Shukla <mamtashukla555@gmail.com>,
 Thomas Zimmermann <tzimmermann@suse.de>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Thomas Gleixner <tglx@linutronix.de>, Sean Paul <sean@poorly.run>,
 Wen Yang <wen.yang99@zte.com.cn>, Allison Randal <allison@lohutok.net>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VXNlIGEgcGVyLXRhcmdldCBmdW5jdGlvbiB0byBzZXQgdXAgdGhlIGRlZmF1bHQgYWRkcmVzcyBz
cGFjZSBmb3IKZWFjaCBHUFUuIFRoaXMgYWxsb3dzIGE2eHggdGFyZ2V0cyB0byBzZXQgdXAgdGhl
IGNvcnJlY3QgYWRkcmVzcwpyYW5nZSBpZiBzcGxpdCBwYWdldGFibGVzIGFyZSBlbmFibGVkIGJ5
IHRoZSBJT01NVSBkZXZpY2UuIFRoaXMKYWxzbyBnZXRzIHJpZCBvZiBhIG1pc3BsYWNlZCBiaXQg
b2YgYTJ4eCBjb2RlIGluIG1zbV9ncHUKYW5kIHJldHVybnMgaXQgdG8gd2hlcmUgaXQgYmVsb25n
cy4KClNpZ25lZC1vZmYtYnk6IEpvcmRhbiBDcm91c2UgPGpjcm91c2VAY29kZWF1cm9yYS5vcmc+
Ci0tLQoKIGRyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2EyeHhfZ3B1LmMgICB8IDI4ICsrKysr
KysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hM3h4X2dwdS5jICAgfCAg
MSArCiBkcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNHh4X2dwdS5jICAgfCAgMSArCiBkcml2
ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNXh4X2dwdS5jICAgfCAgMSArCiBkcml2ZXJzL2dwdS9k
cm0vbXNtL2FkcmVuby9hNnh4X2dwdS5jICAgfCA1NiArKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2FkcmVub19ncHUuYyB8IDQzICsr
KysrKysrKysrKysrKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2FkcmVu
b19ncHUuaCB8ICA1ICsrKwogZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmMgICAgICAgICAg
IHwgNTYgKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0v
bXNtL21zbV9ncHUuaCAgICAgICAgICAgfCAgNCArLS0KIDkgZmlsZXMgY2hhbmdlZCwgMTM0IGlu
c2VydGlvbnMoKyksIDYxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9tc20vYWRyZW5vL2EyeHhfZ3B1LmMgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hMnh4
X2dwdS5jCmluZGV4IDFmODNiYzEuLmM5YzAzMmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9tc20vYWRyZW5vL2EyeHhfZ3B1LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8v
YTJ4eF9ncHUuYwpAQCAtNDAxLDYgKzQwMSwzMyBAQCBzdGF0aWMgc3RydWN0IG1zbV9ncHVfc3Rh
dGUgKmEyeHhfZ3B1X3N0YXRlX2dldChzdHJ1Y3QgbXNtX2dwdSAqZ3B1KQogCXJldHVybiBzdGF0
ZTsKIH0KIAorc3RhdGljIHN0cnVjdCBtc21fZ2VtX2FkZHJlc3Nfc3BhY2UgKgorYTJ4eF9jcmVh
dGVfYWRkcmVzc19zcGFjZShzdHJ1Y3QgbXNtX2dwdSAqZ3B1LCBzdHJ1Y3QgcGxhdGZvcm1fZGV2
aWNlICpwZGV2KQoreworCXN0cnVjdCBtc21fZ2VtX2FkZHJlc3Nfc3BhY2UgKmFzcGFjZTsKKwlz
dHJ1Y3QgbXNtX21tdSAqbW11ID0gbXNtX2dwdW1tdV9uZXcoJnBkZXYtPmRldiwgZ3B1KTsKKwlp
bnQgcmV0OworCisJaWYgKElTX0VSUihtbXUpKQorCQlyZXR1cm4gRVJSX0NBU1QobW11KTsKKwor
CXJldCA9IG1tdS0+ZnVuY3MtPmF0dGFjaChtbXUsIE5VTEwsIDApOworCWlmIChyZXQpIHsKKwkJ
bW11LT5mdW5jcy0+ZGVzdHJveShtbXUpOworCQlyZXR1cm4gRVJSX1BUUihyZXQpOworCX0KKwor
CWFzcGFjZSA9IG1zbV9nZW1fYWRkcmVzc19zcGFjZV9jcmVhdGUobW11LCAiZ3B1IiwKKwkJU1pf
MTZNLCBTWl8xNk0gKyAweGZmZiAqIFNaXzY0Syk7CisKKwlpZiAoSVNfRVJSKGFzcGFjZSkpIHsK
KwkJbW11LT5mdW5jcy0+ZGV0YWNoKG1tdSwgTlVMTCwgMCk7CisJCW1tdS0+ZnVuY3MtPmRlc3Ry
b3kobW11KTsKKwl9CisKKwlyZXR1cm4gYXNwYWNlOworfQorCiAvKiBSZWdpc3RlciBvZmZzZXQg
ZGVmaW5lcyBmb3IgQTJYWCAtIGNvcHkgb2YgQTNYWCAqLwogc3RhdGljIGNvbnN0IHVuc2lnbmVk
IGludCBhMnh4X3JlZ2lzdGVyX29mZnNldHNbUkVHX0FEUkVOT19SRUdJU1RFUl9NQVhdID0gewog
CVJFR19BRFJFTk9fREVGSU5FKFJFR19BRFJFTk9fQ1BfUkJfQkFTRSwgUkVHX0FYWFhfQ1BfUkJf
QkFTRSksCkBAIC00MjksNiArNDU2LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhZHJlbm9fZ3B1
X2Z1bmNzIGZ1bmNzID0gewogI2VuZGlmCiAJCS5ncHVfc3RhdGVfZ2V0ID0gYTJ4eF9ncHVfc3Rh
dGVfZ2V0LAogCQkuZ3B1X3N0YXRlX3B1dCA9IGFkcmVub19ncHVfc3RhdGVfcHV0LAorCQkuY3Jl
YXRlX2FkZHJlc3Nfc3BhY2UgPSBhMnh4X2NyZWF0ZV9hZGRyZXNzX3NwYWNlLAogCX0sCiB9Owog
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hM3h4X2dwdS5jIGIvZHJp
dmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYTN4eF9ncHUuYwppbmRleCA1ZjdlOTgwLi5mMjRkYzIx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hM3h4X2dwdS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2EzeHhfZ3B1LmMKQEAgLTQ0OCw2ICs0NDgsNyBA
QCBzdGF0aWMgY29uc3Qgc3RydWN0IGFkcmVub19ncHVfZnVuY3MgZnVuY3MgPSB7CiAjZW5kaWYK
IAkJLmdwdV9zdGF0ZV9nZXQgPSBhM3h4X2dwdV9zdGF0ZV9nZXQsCiAJCS5ncHVfc3RhdGVfcHV0
ID0gYWRyZW5vX2dwdV9zdGF0ZV9wdXQsCisJCS5jcmVhdGVfYWRkcmVzc19zcGFjZSA9IGFkcmVu
b19ncHVfY3JlYXRlX2FkZHJlc3Nfc3BhY2UsCiAJfSwKIH07CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9tc20vYWRyZW5vL2E0eHhfZ3B1LmMgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL2Fk
cmVuby9hNHh4X2dwdS5jCmluZGV4IGFiMmI3NTIuLjA4ZjQyOTIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9tc20vYWRyZW5vL2E0eHhfZ3B1LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL21z
bS9hZHJlbm8vYTR4eF9ncHUuYwpAQCAtNTM4LDYgKzUzOCw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgYWRyZW5vX2dwdV9mdW5jcyBmdW5jcyA9IHsKICNlbmRpZgogCQkuZ3B1X3N0YXRlX2dldCA9
IGE0eHhfZ3B1X3N0YXRlX2dldCwKIAkJLmdwdV9zdGF0ZV9wdXQgPSBhZHJlbm9fZ3B1X3N0YXRl
X3B1dCwKKwkJLmNyZWF0ZV9hZGRyZXNzX3NwYWNlID0gYWRyZW5vX2dwdV9jcmVhdGVfYWRkcmVz
c19zcGFjZSwKIAl9LAogCS5nZXRfdGltZXN0YW1wID0gYTR4eF9nZXRfdGltZXN0YW1wLAogfTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2E1eHhfZ3B1LmMgYi9kcml2
ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNXh4X2dwdS5jCmluZGV4IDE2NzFkYjQuLmUyOWZlYTUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2E1eHhfZ3B1LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYTV4eF9ncHUuYwpAQCAtMTM4NSw2ICsxMzg1LDcg
QEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhZHJlbm9fZ3B1X2Z1bmNzIGZ1bmNzID0gewogCQkuZ3B1
X2J1c3kgPSBhNXh4X2dwdV9idXN5LAogCQkuZ3B1X3N0YXRlX2dldCA9IGE1eHhfZ3B1X3N0YXRl
X2dldCwKIAkJLmdwdV9zdGF0ZV9wdXQgPSBhNXh4X2dwdV9zdGF0ZV9wdXQsCisJCS5jcmVhdGVf
YWRkcmVzc19zcGFjZSA9IGFkcmVub19ncHVfY3JlYXRlX2FkZHJlc3Nfc3BhY2UsCiAJfSwKIAku
Z2V0X3RpbWVzdGFtcCA9IGE1eHhfZ2V0X3RpbWVzdGFtcCwKIH07CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNnh4X2dwdS5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9h
ZHJlbm8vYTZ4eF9ncHUuYwppbmRleCBiZTM5Y2YwLi4zMDkyNDI2IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNnh4X2dwdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9t
c20vYWRyZW5vL2E2eHhfZ3B1LmMKQEAgLTgxMCw2ICs4MTAsNjEgQEAgc3RhdGljIHVuc2lnbmVk
IGxvbmcgYTZ4eF9ncHVfYnVzeShzdHJ1Y3QgbXNtX2dwdSAqZ3B1KQogCXJldHVybiAodW5zaWdu
ZWQgbG9uZylidXN5X3RpbWU7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgbXNtX2dlbV9hZGRyZXNzX3Nw
YWNlICoKK2E2eHhfY3JlYXRlX2FkZHJlc3Nfc3BhY2Uoc3RydWN0IG1zbV9ncHUgKmdwdSwgc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlzdHJ1Y3QgbXNtX2dlbV9hZGRyZXNzX3Nw
YWNlICphc3BhY2U7CisJc3RydWN0IGlvbW11X2RvbWFpbiAqaW9tbXU7CisJc3RydWN0IG1zbV9t
bXUgKm1tdTsKKwlpbnQgcmV0LCB2YWwgPSAwOworCXU2NCBzdGFydCwgZW5kOworCisJaW9tbXUg
PSBpb21tdV9kb21haW5fYWxsb2MoJnBsYXRmb3JtX2J1c190eXBlKTsKKwlpZiAoIWlvbW11KQor
CQlyZXR1cm4gTlVMTDsKKworCW1tdSA9IG1zbV9pb21tdV9uZXcoJnBkZXYtPmRldiwgaW9tbXUp
OworCWlmIChJU19FUlIobW11KSkgeworCQlpb21tdV9kb21haW5fZnJlZShpb21tdSk7CisJCXJl
dHVybiBFUlJfQ0FTVChtbXUpOworCX0KKworCXJldCA9IG1tdS0+ZnVuY3MtPmF0dGFjaChtbXUs
IE5VTEwsIDApOworCWlmIChyZXQpIHsKKwkJbW11LT5mdW5jcy0+ZGVzdHJveShtbXUpOworCQly
ZXR1cm4gRVJSX1BUUihyZXQpOworCX0KKworCWlvbW11X2RvbWFpbl9nZXRfYXR0cihpb21tdSwg
RE9NQUlOX0FUVFJfU1BMSVRfVEFCTEVTLCAmdmFsKTsKKworCS8qCisJICogSWYgc3BsaXQgcGFn
ZXRhYmxlcyBhcmUgZW5hYmxlZCBvdXIgdmlydHVhbCBhZGRyZXNzIHJhbmdlIHdpbGwgc3RhcnQK
KwkgKiBhdCAweGZmZjAwMDAwMDAwMDAwMDAgYW5kIHdlIGRvbid0IG5lZWQgdG8gd29ycnkgYWJv
dXQgYSBob2xlIGZvciB0aGUKKwkgKiBHTUVNLgorCSAqLworCWlmICh2YWwpCisJCXN0YXJ0ID0g
aW9tbXUtPmdlb21ldHJ5LmFwZXJ0dXJlX3N0YXJ0OworCWVsc2UKKwkJc3RhcnQgPSBTWl8xNk07
CisKKwkvKgorCSAqIFJlZ2FyZGxlc3Mgb2YgdGhlIHN0YXJ0LCBhbHdheXMgdGFrZSBhZHZhbnRh
Z2Ugb2YgdGhlIGVudGlyZQorCSAqIGF2YWlsYWJsZSBzcGFjZQorCSAqLworCWVuZCA9IGlvbW11
LT5nZW9tZXRyeS5hcGVydHVyZV9lbmQ7CisKKwlEUk1fREVWX0lORk8oZ3B1LT5kZXYtPmRldiwg
IiVzOiB1c2luZyBJT01NVVxuIiwgZ3B1LT5uYW1lKTsKKworCWFzcGFjZSA9IG1zbV9nZW1fYWRk
cmVzc19zcGFjZV9jcmVhdGUobW11LCAiZ3B1Iiwgc3RhcnQsIGVuZCk7CisJaWYgKElTX0VSUihh
c3BhY2UpKSB7CisJCW1tdS0+ZnVuY3MtPmRldGFjaChtbXUsIE5VTEwsIDApOworCQltbXUtPmZ1
bmNzLT5kZXN0cm95KG1tdSk7CisJfQorCisJcmV0dXJuIGFzcGFjZTsKK30KKworCiBzdGF0aWMg
Y29uc3Qgc3RydWN0IGFkcmVub19ncHVfZnVuY3MgZnVuY3MgPSB7CiAJLmJhc2UgPSB7CiAJCS5n
ZXRfcGFyYW0gPSBhZHJlbm9fZ2V0X3BhcmFtLApAQCAtODMyLDYgKzg4Nyw3IEBAIHN0YXRpYyBj
b25zdCBzdHJ1Y3QgYWRyZW5vX2dwdV9mdW5jcyBmdW5jcyA9IHsKIAkJLmdwdV9zdGF0ZV9nZXQg
PSBhNnh4X2dwdV9zdGF0ZV9nZXQsCiAJCS5ncHVfc3RhdGVfcHV0ID0gYTZ4eF9ncHVfc3RhdGVf
cHV0LAogI2VuZGlmCisJCS5jcmVhdGVfYWRkcmVzc19zcGFjZSA9IGE2eHhfY3JlYXRlX2FkZHJl
c3Nfc3BhY2UsCiAJfSwKIAkuZ2V0X3RpbWVzdGFtcCA9IGE2eHhfZ2V0X3RpbWVzdGFtcCwKIH07
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hZHJlbm9fZ3B1LmMgYi9k
cml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hZHJlbm9fZ3B1LmMKaW5kZXggOWFjYmJjMC4uNmVk
Y2QyYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYWRyZW5vX2dwdS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2FkcmVub19ncHUuYwpAQCAtMTgsNiAr
MTgsNDMgQEAKICNpbmNsdWRlICJtc21fZ2VtLmgiCiAjaW5jbHVkZSAibXNtX21tdS5oIgogCisv
KiBIZWxwZXIgZnVuY3Rpb24gZm9yIEdQVSB0YXJnZXRzIHRoYXQgdXNlIGFybS1zbW11IGJ1dCBu
b3Qgc3BsaXQgcGFnZXRhYmxlcyAqLworc3RydWN0IG1zbV9nZW1fYWRkcmVzc19zcGFjZSAqCith
ZHJlbm9fZ3B1X2NyZWF0ZV9hZGRyZXNzX3NwYWNlKHN0cnVjdCBtc21fZ3B1ICpncHUsCisJCXN0
cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCit7CisJc3RydWN0IG1zbV9nZW1fYWRkcmVzc19z
cGFjZSAqYXNwYWNlOworCXN0cnVjdCBpb21tdV9kb21haW4gKmlvbW11OworCXN0cnVjdCBtc21f
bW11ICptbXU7CisJaW50IHJldDsKKworCWlvbW11ID0gaW9tbXVfZG9tYWluX2FsbG9jKCZwbGF0
Zm9ybV9idXNfdHlwZSk7CisJaWYgKCFpb21tdSkKKwkJcmV0dXJuIE5VTEw7CisKKwltbXUgPSBt
c21faW9tbXVfbmV3KCZwZGV2LT5kZXYsIGlvbW11KTsKKwlpZiAoSVNfRVJSKG1tdSkpIHsKKwkJ
aW9tbXVfZG9tYWluX2ZyZWUoaW9tbXUpOworCQlyZXR1cm4gRVJSX0NBU1QobW11KTsKKwl9CisK
KwlyZXQgPSBtbXUtPmZ1bmNzLT5hdHRhY2gobW11LCBOVUxMLCAwKTsKKwlpZiAocmV0KSB7CisJ
CW1tdS0+ZnVuY3MtPmRlc3Ryb3kobW11KTsKKwkJcmV0dXJuIEVSUl9QVFIocmV0KTsKKwl9CisK
KwlEUk1fREVWX0lORk8oZ3B1LT5kZXYtPmRldiwgIiVzOiB1c2luZyBJT01NVVxuIiwgZ3B1LT5u
YW1lKTsKKworCWFzcGFjZSA9IG1zbV9nZW1fYWRkcmVzc19zcGFjZV9jcmVhdGUobW11LCAiZ3B1
IiwgU1pfMTZNLCAweGZmZmZmZmZmKTsKKwlpZiAoSVNfRVJSKGFzcGFjZSkpIHsKKwkJbW11LT5m
dW5jcy0+ZGV0YWNoKG1tdSwgTlVMTCwgMCk7CisJCW1tdS0+ZnVuY3MtPmRlc3Ryb3kobW11KTsK
Kwl9CisKKwlyZXR1cm4gYXNwYWNlOworfQorCiBzdGF0aWMgYm9vbCB6YXBfYXZhaWxhYmxlID0g
dHJ1ZTsKIAogc3RhdGljIGludCB6YXBfc2hhZGVyX2xvYWRfbWR0KHN0cnVjdCBtc21fZ3B1ICpn
cHUsIGNvbnN0IGNoYXIgKmZ3bmFtZSwKQEAgLTkwOCwxMiArOTQ1LDYgQEAgaW50IGFkcmVub19n
cHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZHJtLCBzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpw
ZGV2LAogCiAJYWRyZW5vX2dwdV9jb25maWcuaW9uYW1lID0gImtnc2xfM2QwX3JlZ19tZW1vcnki
OwogCi0JYWRyZW5vX2dwdV9jb25maWcudmFfc3RhcnQgPSBTWl8xNk07Ci0JYWRyZW5vX2dwdV9j
b25maWcudmFfZW5kID0gMHhmZmZmZmZmZjsKLQkvKiBtYXhpbXVtIHJhbmdlIG9mIGEyeHggbW11
ICovCi0JaWYgKGFkcmVub19pc19hMnh4KGFkcmVub19ncHUpKQotCQlhZHJlbm9fZ3B1X2NvbmZp
Zy52YV9lbmQgPSBTWl8xNk0gKyAweGZmZiAqIFNaXzY0SzsKLQogCWFkcmVub19ncHVfY29uZmln
Lm5yX3JpbmdzID0gbnJfcmluZ3M7CiAKIAlhZHJlbm9fZ2V0X3B3cmxldmVscygmcGRldi0+ZGV2
LCBncHUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYWRyZW5vX2dw
dS5oIGIvZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYWRyZW5vX2dwdS5oCmluZGV4IGM3NDQx
ZmIuLjE0MWZmM2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9tc20vYWRyZW5vL2FkcmVu
b19ncHUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hZHJlbm9fZ3B1LmgKQEAg
LTI0Nyw2ICsyNDcsMTEgQEAgdm9pZCBhZHJlbm9fZ3B1X3N0YXRlX2Rlc3Ryb3koc3RydWN0IG1z
bV9ncHVfc3RhdGUgKnN0YXRlKTsKIGludCBhZHJlbm9fZ3B1X3N0YXRlX2dldChzdHJ1Y3QgbXNt
X2dwdSAqZ3B1LCBzdHJ1Y3QgbXNtX2dwdV9zdGF0ZSAqc3RhdGUpOwogaW50IGFkcmVub19ncHVf
c3RhdGVfcHV0KHN0cnVjdCBtc21fZ3B1X3N0YXRlICpzdGF0ZSk7CiAKKworc3RydWN0IG1zbV9n
ZW1fYWRkcmVzc19zcGFjZSAqCithZHJlbm9fZ3B1X2NyZWF0ZV9hZGRyZXNzX3NwYWNlKHN0cnVj
dCBtc21fZ3B1ICpncHUsCisJCXN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpOworCiAvKgog
ICogRm9yIGE1eHggYW5kIGE2eHggdGFyZ2V0cyBsb2FkIHRoZSB6YXAgc2hhZGVyIHRoYXQgaXMg
dXNlZCB0byBwdWxsIHRoZSBHUFUKICAqIG91dCBvZiBzZWN1cmUgbW9kZQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmMgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9n
cHUuYwppbmRleCA5MjcxZjM5Li41YTM2YzNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
bXNtL21zbV9ncHUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9ncHUuYwpAQCAtOSw3
ICs5LDYgQEAKICNpbmNsdWRlICJtc21fbW11LmgiCiAjaW5jbHVkZSAibXNtX2ZlbmNlLmgiCiAj
aW5jbHVkZSAibXNtX2dwdV90cmFjZS5oIgotI2luY2x1ZGUgImFkcmVuby9hZHJlbm9fZ3B1Lmgi
CiAKICNpbmNsdWRlIDxnZW5lcmF0ZWQvdXRzcmVsZWFzZS5oPgogI2luY2x1ZGUgPGxpbnV4L3N0
cmluZ19oZWxwZXJzLmg+CkBAIC04MDEsNTYgKzgwMCw2IEBAIHN0YXRpYyBpbnQgZ2V0X2Nsb2Nr
cyhzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2LCBzdHJ1Y3QgbXNtX2dwdSAqZ3B1KQogCXJl
dHVybiAwOwogfQogCi1zdGF0aWMgc3RydWN0IG1zbV9nZW1fYWRkcmVzc19zcGFjZSAqCi1tc21f
Z3B1X2NyZWF0ZV9hZGRyZXNzX3NwYWNlKHN0cnVjdCBtc21fZ3B1ICpncHUsIHN0cnVjdCBwbGF0
Zm9ybV9kZXZpY2UgKnBkZXYsCi0JCXVpbnQ2NF90IHZhX3N0YXJ0LCB1aW50NjRfdCB2YV9lbmQp
Ci17Ci0Jc3RydWN0IG1zbV9nZW1fYWRkcmVzc19zcGFjZSAqYXNwYWNlOwotCXN0cnVjdCBtc21f
bW11ICptbXU7Ci0JaW50IHJldDsKLQotCS8qCi0JICogU2V0dXAgSU9NTVUuLiBldmVudHVhbGx5
IHdlIHdpbGwgKEkgdGhpbmspIGRvIHRoaXMgb25jZSBwZXIgY29udGV4dAotCSAqIGFuZCBoYXZl
IHNlcGFyYXRlIHBhZ2UgdGFibGVzIHBlciBjb250ZXh0LiAgRm9yIG5vdywgdG8ga2VlcCB0aGlu
Z3MKLQkgKiBzaW1wbGUgYW5kIHRvIGdldCBzb21ldGhpbmcgd29ya2luZywganVzdCB1c2UgYSBz
aW5nbGUgYWRkcmVzcyBzcGFjZToKLQkgKi8KLQlpZiAoIWFkcmVub19pc19hMnh4KHRvX2FkcmVu
b19ncHUoZ3B1KSkpIHsKLQkJc3RydWN0IGlvbW11X2RvbWFpbiAqaW9tbXUgPSBpb21tdV9kb21h
aW5fYWxsb2MoJnBsYXRmb3JtX2J1c190eXBlKTsKLQkJaWYgKCFpb21tdSkKLQkJCXJldHVybiBO
VUxMOwotCi0JCW1tdSA9IG1zbV9pb21tdV9uZXcoJnBkZXYtPmRldiwgaW9tbXUpOwotCQlpZiAo
SVNfRVJSKG1tdSkpIHsKLQkJCWlvbW11X2RvbWFpbl9mcmVlKGlvbW11KTsKLQkJCXJldHVybiBF
UlJfQ0FTVChtbXUpOwotCQl9Ci0KLQkJRFJNX0RFVl9JTkZPKGdwdS0+ZGV2LT5kZXYsICIlczog
dXNpbmcgSU9NTVVcbiIsIGdwdS0+bmFtZSk7Ci0KLQl9IGVsc2UgewotCQltbXUgPSBtc21fZ3B1
bW11X25ldygmcGRldi0+ZGV2LCBncHUpOwotCQlpZiAoSVNfRVJSKG1tdSkpCi0JCQlyZXR1cm4g
RVJSX0NBU1QobW11KTsKLQl9Ci0KLQlhc3BhY2UgPSBtc21fZ2VtX2FkZHJlc3Nfc3BhY2VfY3Jl
YXRlKG1tdSwgImdwdSIsIHZhX3N0YXJ0LCB2YV9lbmQpOwotCWlmIChJU19FUlIoYXNwYWNlKSkg
ewotCQltbXUtPmZ1bmNzLT5kZXN0cm95KG1tdSk7Ci0KLQkJRFJNX0RFVl9FUlJPUihncHUtPmRl
di0+ZGV2LCAiZmFpbGVkIHRvIGluaXQgbW11OiAlbGRcbiIsCi0JCQlQVFJfRVJSKGFzcGFjZSkp
OwotCQlyZXR1cm4gRVJSX0NBU1QoYXNwYWNlKTsKLQl9Ci0KLQlyZXQgPSBhc3BhY2UtPm1tdS0+
ZnVuY3MtPmF0dGFjaChhc3BhY2UtPm1tdSwgTlVMTCwgMCk7Ci0JaWYgKHJldCkgewotCQltc21f
Z2VtX2FkZHJlc3Nfc3BhY2VfcHV0KGFzcGFjZSk7Ci0JCXJldHVybiBFUlJfUFRSKHJldCk7Ci0J
fQotCi0JcmV0dXJuIGFzcGFjZTsKLX0KLQogaW50IG1zbV9ncHVfaW5pdChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZHJtLCBzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2LAogCQlzdHJ1Y3QgbXNtX2dw
dSAqZ3B1LCBjb25zdCBzdHJ1Y3QgbXNtX2dwdV9mdW5jcyAqZnVuY3MsCiAJCWNvbnN0IGNoYXIg
Km5hbWUsIHN0cnVjdCBtc21fZ3B1X2NvbmZpZyAqY29uZmlnKQpAQCAtOTIzLDEyICs4NzIsMTMg
QEAgaW50IG1zbV9ncHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZHJtLCBzdHJ1Y3QgcGxhdGZv
cm1fZGV2aWNlICpwZGV2LAogCiAJbXNtX2RldmZyZXFfaW5pdChncHUpOwogCi0JZ3B1LT5hc3Bh
Y2UgPSBtc21fZ3B1X2NyZWF0ZV9hZGRyZXNzX3NwYWNlKGdwdSwgcGRldiwKLQkJY29uZmlnLT52
YV9zdGFydCwgY29uZmlnLT52YV9lbmQpOworCWdwdS0+YXNwYWNlID0gZnVuY3MtPmNyZWF0ZV9h
ZGRyZXNzX3NwYWNlKGdwdSwgcGRldik7CiAKIAlpZiAoZ3B1LT5hc3BhY2UgPT0gTlVMTCkKIAkJ
RFJNX0RFVl9JTkZPKGRybS0+ZGV2LCAiJXM6IG5vIElPTU1VLCBmYWxsYmFjayB0byBWUkFNIGNh
cnZlb3V0IVxuIiwgbmFtZSk7CiAJZWxzZSBpZiAoSVNfRVJSKGdwdS0+YXNwYWNlKSkgeworCQlE
Uk1fREVWX0VSUk9SKGdwdS0+ZGV2LT5kZXYsICJmYWlsZWQgdG8gaW5pdCBtbXU6ICVsZFxuIiwK
KwkJCVBUUl9FUlIoZ3B1LT5hc3BhY2UpKTsKIAkJcmV0ID0gUFRSX0VSUihncHUtPmFzcGFjZSk7
CiAJCWdvdG8gZmFpbDsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9n
cHUuaCBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dwdS5oCmluZGV4IGFiOGYwZjljLi40MWQ4
NmMyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9ncHUuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vbXNtL21zbV9ncHUuaApAQCAtMjEsOCArMjEsNiBAQCBzdHJ1Y3QgbXNtX2dw
dV9zdGF0ZTsKIAogc3RydWN0IG1zbV9ncHVfY29uZmlnIHsKIAljb25zdCBjaGFyICppb25hbWU7
Ci0JdWludDY0X3QgdmFfc3RhcnQ7Ci0JdWludDY0X3QgdmFfZW5kOwogCXVuc2lnbmVkIGludCBu
cl9yaW5nczsKIH07CiAKQEAgLTY0LDYgKzYyLDggQEAgc3RydWN0IG1zbV9ncHVfZnVuY3Mgewog
CWludCAoKmdwdV9zdGF0ZV9wdXQpKHN0cnVjdCBtc21fZ3B1X3N0YXRlICpzdGF0ZSk7CiAJdW5z
aWduZWQgbG9uZyAoKmdwdV9nZXRfZnJlcSkoc3RydWN0IG1zbV9ncHUgKmdwdSk7CiAJdm9pZCAo
KmdwdV9zZXRfZnJlcSkoc3RydWN0IG1zbV9ncHUgKmdwdSwgdW5zaWduZWQgbG9uZyBmcmVxKTsK
KwlzdHJ1Y3QgbXNtX2dlbV9hZGRyZXNzX3NwYWNlICooKmNyZWF0ZV9hZGRyZXNzX3NwYWNlKQor
CQkoc3RydWN0IG1zbV9ncHUgKmdwdSwgc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldik7CiB9
OwogCiBzdHJ1Y3QgbXNtX2dwdSB7Ci0tIAoyLjcuNAoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vZHJpLWRldmVs
