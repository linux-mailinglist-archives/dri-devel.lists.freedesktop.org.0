Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B2AA464214
	for <lists+dri-devel@lfdr.de>; Wed, 10 Jul 2019 09:16:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 84F6789A5D;
	Wed, 10 Jul 2019 07:16:42 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-vs1-xe49.google.com (mail-vs1-xe49.google.com
 [IPv6:2607:f8b0:4864:20::e49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B626289A5D
 for <dri-devel@lists.freedesktop.org>; Wed, 10 Jul 2019 07:16:40 +0000 (UTC)
Received: by mail-vs1-xe49.google.com with SMTP id m186so191859vsm.2
 for <dri-devel@lists.freedesktop.org>; Wed, 10 Jul 2019 00:16:40 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=moR8mS5ZxuPlK2h/KaH4EIbjDw/4+buyp665ZJm/PuU=;
 b=th+L8cWcpwpMLA1iXYdrI6OdZnT4uB2Hg9HYFJPGJDSirX4wVknOF76QNRGFdTkZQG
 rWTxZPh8uu3spJbfQNLQ0k2lst2rzZw/9dLMuU1yPpq9Ugrh2h5kSljg0rg6D6/1gOV6
 7ctw5xvXE+R8sDg50aLJ/HOOgyD1z15TpM6dPb7T90MY90hruvdlpLGJyGq+iVLc01RL
 7/+FaJbEzcUJZf119Hx/qZQLHgpiHxk8HWfhWUQq2SC96V2XyAY49cEMbeffTpPU0htW
 j1oUK9VaAQ1JuWQbJog1Q75eLxjYU0TfQIpoSD4x+LUcIh+aj9sm4LVTUZT4+tnLcrwZ
 iOdQ==
X-Gm-Message-State: APjAAAUmzq+RNiDGkVz7ehF7CkSlDYbc/OTAl6hKEGW+16A8lg2YOk2G
 zTDQcteNP4N3YrK0rgZPUzztYXZSTAlnrOT/tICMMQ==
X-Google-Smtp-Source: APXvYqwGUdyp4jQYt5407R0LN4qOCqbAG6SN16l6rNDa75XJ0S9Xm8bN8cFDYxyBKqVinj2EEf60f6pUofVrTkFSTHM0Aw==
X-Received: by 2002:a05:6102:252:: with SMTP id
 a18mr17083518vsq.53.1562742999518; 
 Wed, 10 Jul 2019 00:16:39 -0700 (PDT)
Date: Wed, 10 Jul 2019 00:14:59 -0700
In-Reply-To: <20190710071508.173491-1-brendanhiggins@google.com>
Message-Id: <20190710071508.173491-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190710071508.173491-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v8 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=moR8mS5ZxuPlK2h/KaH4EIbjDw/4+buyp665ZJm/PuU=;
 b=GoqNdM7o9m/Xwdm8I+nURW0zt2iZNNOXnmwmVb3niyE1f4GBF08yNl4sLx+RhCsnN3
 6CBAfdWhYnxXf5Jm3t3v4lGZKMae9THGLz4+UcD/Pr1K60lMXvYOTq3kxI4Qlg5SDDcN
 amLG+iJNhFHmldVs4OFNSGr02JHG4AFIY/1M38656/2sOKFoUla8jmmkIocvkvo7nOL3
 y0yiJMzp95G0nNCS+EMruf1QIYwMXnVr4wRZl/E9BT3Xr6I5qmVptmWS/lg/oDGyWhX6
 eSCPUa+hiUQ2Rgl3JnjFs9KtQ10bce81ApvUVbWBQoNT1izccdCyVPG19YzfLT8gQfaR
 tDmg==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAxNiArKysrCiBpbmNsdWRlL2t1bml0L3RyeS1j
YXRjaC5oIHwgIDY5ICsrKysrKysrKysrKysrKwoga3VuaXQvTWFrZWZpbGUgICAgICAgICAgICB8
ICAgMyArLQoga3VuaXQvdGVzdC5jICAgICAgICAgICAgICB8IDE3NiArKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKy0tLQoga3VuaXQvdHJ5LWNhdGNoLmMgICAgICAgICB8ICA5NSAr
KysrKysrKysrKysrKysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCAzNDQgaW5zZXJ0aW9ucygrKSwg
MTUgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5pdC90cnktY2F0
Y2guaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L3RyeS1jYXRjaC5jCgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9rdW5pdC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3QuaAppbmRleCBkZjE4NzY1
ZTZlYTI1Li4wMTQ0MGYzNTY5ODQ3IDEwMDY0NAotLS0gYS9pbmNsdWRlL2t1bml0L3Rlc3QuaAor
KysgYi9pbmNsdWRlL2t1bml0L3Rlc3QuaApAQCAtMTMsNiArMTMsNyBAQAogI2luY2x1ZGUgPGxp
bnV4L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgogI2luY2x1ZGUgPGt1bml0L2t1
bml0LXN0cmVhbS5oPgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgogCiBzdHJ1Y3Qga3Vu
aXRfcmVzb3VyY2U7CiAKQEAgLTE2Nyw2ICsxNjgsNyBAQCBzdHJ1Y3Qga3VuaXQgewogCiAJLyog
cHJpdmF0ZTogaW50ZXJuYWwgdXNlIG9ubHkuICovCiAJY29uc3QgY2hhciAqbmFtZTsgLyogUmVh
ZCBvbmx5IGFmdGVyIGluaXRpYWxpemF0aW9uISAqLworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2gg
dHJ5X2NhdGNoOwogCS8qCiAJICogc3VjY2VzcyBzdGFydHMgYXMgdHJ1ZSwgYW5kIG1heSBvbmx5
IGJlIHNldCB0byBmYWxzZSBkdXJpbmcgYSB0ZXN0CiAJICogY2FzZTsgdGh1cywgaXQgaXMgc2Fm
ZSB0byB1cGRhdGUgdGhpcyBhY3Jvc3MgbXVsdGlwbGUgdGhyZWFkcyB1c2luZwpAQCAtMTc2LDYg
KzE3OCwxMSBAQCBzdHJ1Y3Qga3VuaXQgewogCSAqLwogCWJvb2wgc3VjY2VzczsgLyogUmVhZCBv
bmx5IGFmdGVyIHRlc3RfY2FzZSBmaW5pc2hlcyEgKi8KIAlzdHJ1Y3QgbXV0ZXggbG9jazsgLyog
R2F1cmRzIGFsbCBtdXRhYmxlIHRlc3Qgc3RhdGUuICovCisJLyoKKwkgKiBkZWF0aF90ZXN0IG1h
eSBiZSBib3RoIHNldCBhbmQgdW5zZXQgZnJvbSBtdWx0aXBsZSB0aHJlYWRzIGluIGEgdGVzdAor
CSAqIGNhc2UuCisJICovCisJYm9vbCBkZWF0aF90ZXN0OyAvKiBQcm90ZWN0ZWQgYnkgbG9jay4g
Ki8KIAkvKgogCSAqIEJlY2F1c2UgcmVzb3VyY2VzIGlzIGEgbGlzdCB0aGF0IG1heSBiZSB1cGRh
dGVkIG11bHRpcGxlIHRpbWVzICh3aXRoCiAJICogbmV3IHJlc291cmNlcykgZnJvbSBhbnkgdGhy
ZWFkIGFzc29jaWF0ZWQgd2l0aCBhIHRlc3QgY2FzZSwgd2UgbXVzdApAQCAtMTg0LDEwICsxOTEs
MTkgQEAgc3RydWN0IGt1bml0IHsKIAlzdHJ1Y3QgbGlzdF9oZWFkIHJlc291cmNlczsgLyogUHJv
dGVjdGVkIGJ5IGxvY2suICovCiB9OwogCitzdGF0aWMgaW5saW5lIHZvaWQga3VuaXRfc2V0X2Rl
YXRoX3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBib29sIGRlYXRoX3Rlc3QpCit7CisJbXV0ZXhf
bG9jaygmdGVzdC0+bG9jayk7CisJdGVzdC0+ZGVhdGhfdGVzdCA9IGRlYXRoX3Rlc3Q7CisJbXV0
ZXhfdW5sb2NrKCZ0ZXN0LT5sb2NrKTsKK30KKwogdm9pZCBrdW5pdF9pbml0X3Rlc3Qoc3RydWN0
IGt1bml0ICp0ZXN0LCBjb25zdCBjaGFyICpuYW1lKTsKIAogdm9pZCBrdW5pdF9mYWlsKHN0cnVj
dCBrdW5pdCAqdGVzdCwgc3RydWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtKTsKIAordm9pZCBrdW5p
dF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRlc3QpOworCiBpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVj
dCBrdW5pdF9zdWl0ZSAqc3VpdGUpOwogCiAvKioKZGlmZiAtLWdpdCBhL2luY2x1ZGUva3VuaXQv
dHJ5LWNhdGNoLmggYi9pbmNsdWRlL2t1bml0L3RyeS1jYXRjaC5oCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLjhhNDE0YTlhZjBiNjQKLS0tIC9kZXYvbnVsbAorKysg
Yi9pbmNsdWRlL2t1bml0L3RyeS1jYXRjaC5oCkBAIC0wLDAgKzEsNjkgQEAKKy8qIFNQRFgtTGlj
ZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wICovCisvKgorICogQW4gQVBJIHRvIGFsbG93IGEgZnVu
Y3Rpb24sIHRoYXQgbWF5IGZhaWwsIHRvIGJlIGV4ZWN1dGVkLCBhbmQgcmVjb3ZlciBpbiBhCisg
KiBjb250cm9sbGVkIG1hbm5lci4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBM
TEMuCisgKiBBdXRob3I6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNv
bT4KKyAqLworCisjaWZuZGVmIF9LVU5JVF9UUllfQ0FUQ0hfSAorI2RlZmluZSBfS1VOSVRfVFJZ
X0NBVENIX0gKKworI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKK3R5cGVkZWYgdm9pZCAoKmt1
bml0X3RyeV9jYXRjaF9mdW5jX3QpKHZvaWQgKik7CisKK3N0cnVjdCBrdW5pdDsKKworLyoKKyAq
IHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggLSBwcm92aWRlcyBhIGdlbmVyaWMgd2F5IHRvIHJ1biBj
b2RlIHdoaWNoIG1pZ2h0IGZhaWwuCisgKiBAY29udGV4dDogdXNlZCB0byBwYXNzIHVzZXIgZGF0
YSB0byB0aGUgdHJ5IGFuZCBjYXRjaCBmdW5jdGlvbnMuCisgKgorICoga3VuaXRfdHJ5X2NhdGNo
IHByb3ZpZGVzIGEgZ2VuZXJpYywgYXJjaGl0ZWN0dXJlIGluZGVwZW5kZW50IHdheSB0byBleGVj
dXRlCisgKiBhbiBhcmJpdHJhcnkgZnVuY3Rpb24gb2YgdHlwZSBrdW5pdF90cnlfY2F0Y2hfZnVu
Y190IHdoaWNoIG1heSBiYWlsIG91dCBieQorICogY2FsbGluZyBrdW5pdF90cnlfY2F0Y2hfdGhy
b3coKS4gSWYga3VuaXRfdHJ5X2NhdGNoX3Rocm93KCkgaXMgY2FsbGVkLCBAdHJ5CisgKiBpcyBz
dG9wcGVkIGF0IHRoZSBzaXRlIG9mIGludm9jYXRpb24gYW5kIEBjYXRjaCBpcyBjYXRjaCBpcyBj
YWxsZWQuCisgKgorICogc3RydWN0IGt1bml0X3RyeV9jYXRjaCBwcm92aWRlcyBhIGdlbmVyaWMg
aW50ZXJmYWNlIGZvciB0aGUgZnVuY3Rpb25hbGl0eQorICogbmVlZGVkIHRvIGltcGxlbWVudCBr
dW5pdC0+YWJvcnQoKSB3aGljaCBpbiB0dXJuIGlzIG5lZWRlZCBmb3IgaW1wbGVtZW50aW5nCisg
KiBhc3NlcnRpb25zLiBBc3NlcnRpb25zIGFsbG93IHN0YXRpbmcgYSBwcmVjb25kaXRpb24gZm9y
IGEgdGVzdCBzaW1wbGlmeWluZworICogaG93IHRlc3QgY2FzZXMgYXJlIHdyaXR0ZW4gYW5kIHBy
ZXNlbnRlZC4KKyAqCisgKiBBc3NlcnRpb25zIGFyZSBsaWtlIGV4cGVjdGF0aW9ucywgZXhjZXB0
IHRoZXkgYWJvcnQgKGNhbGwKKyAqIGt1bml0X3RyeV9jYXRjaF90aHJvdygpKSB3aGVuIHRoZSBz
cGVjaWZpZWQgY29uZGl0aW9uIGlzIG5vdCBtZXQuIFRoaXMgaXMKKyAqIHVzZWZ1bCB3aGVuIHlv
dSBsb29rIGF0IGEgdGVzdCBjYXNlIGFzIGEgbG9naWNhbCBzdGF0ZW1lbnQgYWJvdXQgc29tZSBw
aWVjZQorICogb2YgY29kZSwgd2hlcmUgYXNzZXJ0aW9ucyBhcmUgdGhlIHByZW1pc2VzIGZvciB0
aGUgdGVzdCBjYXNlLCBhbmQgdGhlCisgKiBjb25jbHVzaW9uIGlzIGEgc2V0IG9mIHByZWRpY2F0
ZXMsIHJhdGhlciBleHBlY3RhdGlvbnMsIHRoYXQgbXVzdCBhbGwgYmUKKyAqIHRydWUuIElmIHlv
dXIgcHJlbWlzZXMgYXJlIHZpb2xhdGVkLCBpdCBkb2VzIG5vdCBtYWtlcyBzZW5zZSB0byBjb250
aW51ZS4KKyAqLworc3RydWN0IGt1bml0X3RyeV9jYXRjaCB7CisJLyogcHJpdmF0ZTogaW50ZXJu
YWwgdXNlIG9ubHkuICovCisJc3RydWN0IGt1bml0ICp0ZXN0OworCXN0cnVjdCBjb21wbGV0aW9u
ICp0cnlfY29tcGxldGlvbjsKKwlpbnQgdHJ5X3Jlc3VsdDsKKwlrdW5pdF90cnlfY2F0Y2hfZnVu
Y190IHRyeTsKKwlrdW5pdF90cnlfY2F0Y2hfZnVuY190IGNhdGNoOworCXZvaWQgKmNvbnRleHQ7
Cit9OworCit2b2lkIGt1bml0X3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2gg
KnRyeV9jYXRjaCwKKwkJCSAgc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJICBrdW5pdF90cnlfY2F0
Y2hfZnVuY190IHRyeSwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaCk7CisKK3Zv
aWQga3VuaXRfdHJ5X2NhdGNoX3J1bihzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gs
IHZvaWQgKmNvbnRleHQpOworCit2b2lkIF9fbm9yZXR1cm4ga3VuaXRfdHJ5X2NhdGNoX3Rocm93
KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCk7CisKK3N0YXRpYyBpbmxpbmUgaW50
IGt1bml0X3RyeV9jYXRjaF9nZXRfcmVzdWx0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9j
YXRjaCkKK3sKKwlyZXR1cm4gdHJ5X2NhdGNoLT50cnlfcmVzdWx0OworfQorCisvKgorICogRXhw
b3NlZCBmb3IgdGVzdGluZyBvbmx5LgorICovCit2b2lkIGt1bml0X2dlbmVyaWNfdHJ5X2NhdGNo
X2luaXQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKTsKKworI2VuZGlmIC8qIF9L
VU5JVF9UUllfQ0FUQ0hfSCAqLwpkaWZmIC0tZ2l0IGEva3VuaXQvTWFrZWZpbGUgYi9rdW5pdC9N
YWtlZmlsZQppbmRleCA2MGE5ZWE2Y2I0Njk3Li4xZjc2ODBjZmExMWFkIDEwMDY0NAotLS0gYS9r
dW5pdC9NYWtlZmlsZQorKysgYi9rdW5pdC9NYWtlZmlsZQpAQCAtMSw2ICsxLDcgQEAKIG9iai0k
KENPTkZJR19LVU5JVCkgKz0JCQl0ZXN0Lm8gXAogCQkJCQlzdHJpbmctc3RyZWFtLm8gXAotCQkJ
CQlrdW5pdC1zdHJlYW0ubworCQkJCQlrdW5pdC1zdHJlYW0ubyBcCisJCQkJCXRyeS1jYXRjaC5v
CiAKIG9iai0kKENPTkZJR19LVU5JVF9URVNUKSArPQkJc3RyaW5nLXN0cmVhbS10ZXN0Lm8KIApk
aWZmIC0tZ2l0IGEva3VuaXQvdGVzdC5jIGIva3VuaXQvdGVzdC5jCmluZGV4IDhjNzQ1ZmQwYzgy
ZDMuLjczMWYzYzllZWNmMjAgMTAwNjQ0Ci0tLSBhL2t1bml0L3Rlc3QuYworKysgYi9rdW5pdC90
ZXN0LmMKQEAgLTcsMTMgKzcsMjYgQEAKICAqLwogCiAjaW5jbHVkZSA8bGludXgva2VybmVsLmg+
CisjaW5jbHVkZSA8bGludXgvc2NoZWQvZGVidWcuaD4KICNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+
CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CiAKIHN0YXRpYyB2b2lkIGt1bml0X3NldF9m
YWlsdXJlKHN0cnVjdCBrdW5pdCAqdGVzdCkKIHsKIAlXUklURV9PTkNFKHRlc3QtPnN1Y2Nlc3Ms
IGZhbHNlKTsKIH0KIAorc3RhdGljIGJvb2wga3VuaXRfZ2V0X2RlYXRoX3Rlc3Qoc3RydWN0IGt1
bml0ICp0ZXN0KQoreworCWJvb2wgZGVhdGhfdGVzdDsKKworCW11dGV4X2xvY2soJnRlc3QtPmxv
Y2spOworCWRlYXRoX3Rlc3QgPSB0ZXN0LT5kZWF0aF90ZXN0OworCW11dGV4X3VubG9jaygmdGVz
dC0+bG9jayk7CisKKwlyZXR1cm4gZGVhdGhfdGVzdDsKK30KKwogc3RhdGljIGludCBrdW5pdF92
cHJpbnRrX2VtaXQoaW50IGxldmVsLCBjb25zdCBjaGFyICpmbXQsIHZhX2xpc3QgYXJncykKIHsK
IAlyZXR1cm4gdnByaW50a19lbWl0KDAsIGxldmVsLCBOVUxMLCAwLCBmbXQsIGFyZ3MpOwpAQCAt
MTI2LDQwICsxMzksMTc1IEBAIHZvaWQga3VuaXRfZmFpbChzdHJ1Y3Qga3VuaXQgKnRlc3QsIHN0
cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSkKIAlrdW5pdF9zdHJlYW1fY29tbWl0KHN0cmVhbSk7
CiB9CiAKK3ZvaWQgX19ub3JldHVybiBrdW5pdF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7
CisJa3VuaXRfc2V0X2RlYXRoX3Rlc3QodGVzdCwgdHJ1ZSk7CisKKwlrdW5pdF90cnlfY2F0Y2hf
dGhyb3coJnRlc3QtPnRyeV9jYXRjaCk7CisKKwkvKgorCSAqIFRocm93IGNvdWxkIG5vdCBhYm9y
dCBmcm9tIHRlc3QuCisJICoKKwkgKiBYWFg6IHdlIHNob3VsZCBuZXZlciByZWFjaCB0aGlzIGxp
bmUhIEFzIGt1bml0X3RyeV9jYXRjaF90aHJvdyBpcworCSAqIG1hcmtlZCBfX25vcmV0dXJuLgor
CSAqLworCVdBUk5fT05DRSh0cnVlLCAiVGhyb3cgY291bGQgbm90IGFib3J0IGZyb20gdGVzdCFc
biIpOworfQorCiB2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3QsIGNvbnN0
IGNoYXIgKm5hbWUpCiB7CiAJbXV0ZXhfaW5pdCgmdGVzdC0+bG9jayk7CiAJSU5JVF9MSVNUX0hF
QUQoJnRlc3QtPnJlc291cmNlcyk7CiAJdGVzdC0+bmFtZSA9IG5hbWU7CiAJdGVzdC0+c3VjY2Vz
cyA9IHRydWU7CisJdGVzdC0+ZGVhdGhfdGVzdCA9IGZhbHNlOwogfQogCiAvKgotICogUGVyZm9y
bXMgYWxsIGxvZ2ljIHRvIHJ1biBhIHRlc3QgY2FzZS4KKyAqIEluaXRpYWxpemVzIGFuZCBydW5z
IHRlc3QgY2FzZS4gRG9lcyBub3QgY2xlYW4gdXAgb3IgZG8gcG9zdCB2YWxpZGF0aW9ucy4KICAq
Lwotc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSwK
LQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCitzdGF0aWMgdm9pZCBrdW5pdF9y
dW5fY2FzZV9pbnRlcm5hbChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgIHN0cnVjdCBrdW5p
dF9zdWl0ZSAqc3VpdGUsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCiB7
Ci0Jc3RydWN0IGt1bml0IHRlc3Q7Ci0JaW50IHJldCA9IDA7Ci0KLQlrdW5pdF9pbml0X3Rlc3Qo
JnRlc3QsIHRlc3RfY2FzZS0+bmFtZSk7CisJaW50IHJldDsKIAogCWlmIChzdWl0ZS0+aW5pdCkg
ewotCQlyZXQgPSBzdWl0ZS0+aW5pdCgmdGVzdCk7CisJCXJldCA9IHN1aXRlLT5pbml0KHRlc3Qp
OwogCQlpZiAocmV0KSB7Ci0JCQlrdW5pdF9lcnIoJnRlc3QsICJmYWlsZWQgdG8gaW5pdGlhbGl6
ZTogJWRcbiIsIHJldCk7Ci0JCQlrdW5pdF9zZXRfZmFpbHVyZSgmdGVzdCk7CisJCQlrdW5pdF9l
cnIodGVzdCwgImZhaWxlZCB0byBpbml0aWFsaXplOiAlZFxuIiwgcmV0KTsKKwkJCWt1bml0X3Nl
dF9mYWlsdXJlKHRlc3QpOwogCQkJcmV0dXJuOwogCQl9CiAJfQogCi0JdGVzdF9jYXNlLT5ydW5f
Y2FzZSgmdGVzdCk7CisJdGVzdF9jYXNlLT5ydW5fY2FzZSh0ZXN0KTsKK30KKworc3RhdGljIHZv
aWQga3VuaXRfY2FzZV9pbnRlcm5hbF9jbGVhbnVwKHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlr
dW5pdF9jbGVhbnVwKHRlc3QpOworfQogCisvKgorICogUGVyZm9ybXMgcG9zdCB2YWxpZGF0aW9u
cyBhbmQgY2xlYW51cCBhZnRlciBhIHRlc3QgY2FzZSB3YXMgcnVuLgorICogWFhYOiBTaG91bGQg
T05MWSBCRSBDQUxMRUQgQUZURVIga3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwhCisgKi8KK3N0YXRp
YyB2b2lkIGt1bml0X3J1bl9jYXNlX2NsZWFudXAoc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJCSAg
IHN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGUpCit7CiAJaWYgKHN1aXRlLT5leGl0KQotCQlzdWl0
ZS0+ZXhpdCgmdGVzdCk7CisJCXN1aXRlLT5leGl0KHRlc3QpOworCisJa3VuaXRfY2FzZV9pbnRl
cm5hbF9jbGVhbnVwKHRlc3QpOworfQorCisvKgorICogSGFuZGxlcyBhbiB1bmV4cGVjdGVkIGNy
YXNoIGluIGEgdGVzdCBjYXNlLgorICovCitzdGF0aWMgdm9pZCBrdW5pdF9oYW5kbGVfdGVzdF9j
cmFzaChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgc3RydWN0IGt1bml0X3N1aXRlICpzdWl0
ZSwKKwkJCQkgICBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCWt1bml0X2Vycih0
ZXN0LCAia3VuaXQgdGVzdCBjYXNlIGNyYXNoZWQhIik7CisJLyoKKwkgKiBUT0RPKGJyZW5kYW5o
aWdnaW5zQGdvb2dsZS5jb20pOiBUaGlzIHByaW50cyB0aGUgc3RhY2sgdHJhY2UgdXAKKwkgKiB0
aHJvdWdoIHRoaXMgZnJhbWUsIG5vdCB1cCB0byB0aGUgZnJhbWUgdGhhdCBjYXVzZWQgdGhlIGNy
YXNoLgorCSAqLworCXNob3dfc3RhY2soTlVMTCwgTlVMTCk7CisKKwlrdW5pdF9jYXNlX2ludGVy
bmFsX2NsZWFudXAodGVzdCk7Cit9CisKK3N0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29udGV4dCB7
CisJc3RydWN0IGt1bml0ICp0ZXN0OworCXN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGU7CisJc3Ry
dWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZTsKK307CisKK3N0YXRpYyB2b2lkIGt1bml0X3RyeV9y
dW5fY2FzZSh2b2lkICpkYXRhKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29udGV4dCAq
Y3R4ID0gZGF0YTsKKwlzdHJ1Y3Qga3VuaXQgKnRlc3QgPSBjdHgtPnRlc3Q7CisJc3RydWN0IGt1
bml0X3N1aXRlICpzdWl0ZSA9IGN0eC0+c3VpdGU7CisJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3Rf
Y2FzZSA9IGN0eC0+dGVzdF9jYXNlOworCisJLyoKKwkgKiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5h
bCBtYXkgZW5jb3VudGVyIGEgZmF0YWwgZXJyb3I7IGlmIGl0IGRvZXMsCisJICogYWJvcnQgd2ls
bCBiZSBjYWxsZWQsIHRoaXMgdGhyZWFkIHdpbGwgZXhpdCwgYW5kIGZpbmFsbHkgdGhlIHBhcmVu
dAorCSAqIHRocmVhZCB3aWxsIHJlc3VtZSBjb250cm9sIGFuZCBoYW5kbGUgYW55IG5lY2Vzc2Fy
eSBjbGVhbiB1cC4KKwkgKi8KKwlrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCh0ZXN0LCBzdWl0ZSwg
dGVzdF9jYXNlKTsKKwkvKiBUaGlzIGxpbmUgbWF5IG5ldmVyIGJlIHJlYWNoZWQuICovCisJa3Vu
aXRfcnVuX2Nhc2VfY2xlYW51cCh0ZXN0LCBzdWl0ZSk7Cit9CisKK3N0YXRpYyB2b2lkIGt1bml0
X2NhdGNoX3J1bl9jYXNlKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaF9j
b250ZXh0ICpjdHggPSBkYXRhOworCXN0cnVjdCBrdW5pdCAqdGVzdCA9IGN0eC0+dGVzdDsKKwlz
dHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlID0gY3R4LT5zdWl0ZTsKKwlzdHJ1Y3Qga3VuaXRfY2Fz
ZSAqdGVzdF9jYXNlID0gY3R4LT50ZXN0X2Nhc2U7CisJaW50IHRyeV9leGl0X2NvZGUgPSBrdW5p
dF90cnlfY2F0Y2hfZ2V0X3Jlc3VsdCgmdGVzdC0+dHJ5X2NhdGNoKTsKKworCWlmICh0cnlfZXhp
dF9jb2RlKSB7CisJCWt1bml0X3NldF9mYWlsdXJlKHRlc3QpOworCQkvKgorCQkgKiBUZXN0IGNh
c2UgY291bGQgbm90IGZpbmlzaCwgd2UgaGF2ZSBubyBpZGVhIHdoYXQgc3RhdGUgaXQgaXMKKwkJ
ICogaW4sIHNvIGRvbid0IGRvIGNsZWFuIHVwLgorCQkgKi8KKwkJaWYgKHRyeV9leGl0X2NvZGUg
PT0gLUVUSU1FRE9VVCkKKwkJCWt1bml0X2Vycih0ZXN0LCAidGVzdCBjYXNlIHRpbWVkIG91dFxu
Iik7CisJCS8qCisJCSAqIFVua25vd24gaW50ZXJuYWwgZXJyb3Igb2NjdXJyZWQgcHJldmVudGlu
ZyB0ZXN0IGNhc2UgZnJvbQorCQkgKiBydW5uaW5nLCBzbyB0aGVyZSBpcyBub3RoaW5nIHRvIGNs
ZWFuIHVwLgorCQkgKi8KKwkJZWxzZQorCQkJa3VuaXRfZXJyKHRlc3QsICJpbnRlcm5hbCBlcnJv
ciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBmcm9tIHJ1bm5pbmc6ICVkXG4iLAorCQkJ
CSAgdHJ5X2V4aXRfY29kZSk7CisJCXJldHVybjsKKwl9CisKKwlpZiAoa3VuaXRfZ2V0X2RlYXRo
X3Rlc3QodGVzdCkpIHsKKwkJLyoKKwkJICogRVhQRUNURUQgREVBVEg6IGt1bml0X3J1bl9jYXNl
X2ludGVybmFsIGVuY291bnRlcmVkCisJCSAqIGFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBFdmVy
eXRoaW5nIHNob3VsZCBiZSBpbiBhIHNhZmUKKwkJICogc3RhdGUuCisJCSAqLworCQlrdW5pdF9y
dW5fY2FzZV9jbGVhbnVwKHRlc3QsIHN1aXRlKTsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBVTkVY
UEVDVEVEIERFQVRIOiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCBlbmNvdW50ZXJlZCBhbgorCQkg
KiB1bmFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBXZSBoYXZlIG5vIGlkZWEgd2hhdCB0aGUgc3Rh
dGUgb2YKKwkJICogdGhlIHRlc3QgY2FzZSBpcyBpbi4KKwkJICovCisJCWt1bml0X2hhbmRsZV90
ZXN0X2NyYXNoKHRlc3QsIHN1aXRlLCB0ZXN0X2Nhc2UpOworCQlrdW5pdF9zZXRfZmFpbHVyZSh0
ZXN0KTsKKwl9Cit9CisKKy8qCisgKiBQZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEgdGVzdCBj
YXNlLiBJdCBhbHNvIGNhdGNoZXMgbW9zdCBlcnJvcnMgdGhhdAorICogb2NjdXJzIGluIGEgdGVz
dCBjYXNlIGFuZCByZXBvcnRzIHRoZW0gYXMgZmFpbHVyZXMuCisgKi8KK3N0YXRpYyB2b2lkIGt1
bml0X3J1bl9jYXNlX2NhdGNoX2Vycm9ycyhzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlLAorCQkJ
CQlzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0
Y2hfY29udGV4dCBjb250ZXh0OworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaDsK
KwlzdHJ1Y3Qga3VuaXQgdGVzdDsKKworCWt1bml0X2luaXRfdGVzdCgmdGVzdCwgdGVzdF9jYXNl
LT5uYW1lKTsKKwl0cnlfY2F0Y2ggPSAmdGVzdC50cnlfY2F0Y2g7CiAKLQlrdW5pdF9jbGVhbnVw
KCZ0ZXN0KTsKKwlrdW5pdF90cnlfY2F0Y2hfaW5pdCh0cnlfY2F0Y2gsCisJCQkgICAgICZ0ZXN0
LAorCQkJICAgICBrdW5pdF90cnlfcnVuX2Nhc2UsCisJCQkgICAgIGt1bml0X2NhdGNoX3J1bl9j
YXNlKTsKKwljb250ZXh0LnRlc3QgPSAmdGVzdDsKKwljb250ZXh0LnN1aXRlID0gc3VpdGU7CisJ
Y29udGV4dC50ZXN0X2Nhc2UgPSB0ZXN0X2Nhc2U7CisJa3VuaXRfdHJ5X2NhdGNoX3J1bih0cnlf
Y2F0Y2gsICZjb250ZXh0KTsKIAogCXRlc3RfY2FzZS0+c3VjY2VzcyA9IHRlc3Quc3VjY2VzczsK
IH0KQEAgLTE3Miw3ICszMjAsNyBAQCBpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9z
dWl0ZSAqc3VpdGUpCiAJa3VuaXRfcHJpbnRfc3VidGVzdF9zdGFydChzdWl0ZSk7CiAKIAlmb3Ig
KHRlc3RfY2FzZSA9IHN1aXRlLT50ZXN0X2Nhc2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNlOyB0ZXN0
X2Nhc2UrKykgewotCQlrdW5pdF9ydW5fY2FzZShzdWl0ZSwgdGVzdF9jYXNlKTsKKwkJa3VuaXRf
cnVuX2Nhc2VfY2F0Y2hfZXJyb3JzKHN1aXRlLCB0ZXN0X2Nhc2UpOwogCQlrdW5pdF9wcmludF90
ZXN0X2Nhc2Vfb2tfbm90X29rKHRlc3RfY2FzZSwgdGVzdF9jYXNlX2NvdW50KyspOwogCX0KIApk
aWZmIC0tZ2l0IGEva3VuaXQvdHJ5LWNhdGNoLmMgYi9rdW5pdC90cnktY2F0Y2guYwpuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi5kZTU4MGYwNzQzODdiCi0tLSAvZGV2
L251bGwKKysrIGIva3VuaXQvdHJ5LWNhdGNoLmMKQEAgLTAsMCArMSw5NSBAQAorLy8gU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBBbiBBUEkgdG8gYWxsb3cgYSBmdW5j
dGlvbiwgdGhhdCBtYXkgZmFpbCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGluIGEKKyAq
IGNvbnRyb2xsZWQgbWFubmVyLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExM
Qy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29t
PgorICovCisKKyNpbmNsdWRlIDxrdW5pdC90cnktY2F0Y2guaD4KKyNpbmNsdWRlIDxrdW5pdC90
ZXN0Lmg+CisjaW5jbHVkZSA8bGludXgvY29tcGxldGlvbi5oPgorI2luY2x1ZGUgPGxpbnV4L2t0
aHJlYWQuaD4KKwordm9pZCBfX25vcmV0dXJuIGt1bml0X3RyeV9jYXRjaF90aHJvdyhzdHJ1Y3Qg
a3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpCit7CisJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0g
LUVGQVVMVDsKKwljb21wbGV0ZV9hbmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uLCAt
RUZBVUxUKTsKK30KKworc3RhdGljIGludCBrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFw
dGVyKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoID0g
ZGF0YTsKKworCXRyeV9jYXRjaC0+dHJ5KHRyeV9jYXRjaC0+Y29udGV4dCk7CisKKwljb21wbGV0
ZV9hbmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uLCAwKTsKK30KKwordm9pZCBrdW5p
dF90cnlfY2F0Y2hfcnVuKHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwgdm9pZCAq
Y29udGV4dCkKK3sKKwlERUNMQVJFX0NPTVBMRVRJT05fT05TVEFDSyh0cnlfY29tcGxldGlvbik7
CisJc3RydWN0IGt1bml0ICp0ZXN0ID0gdHJ5X2NhdGNoLT50ZXN0OworCXN0cnVjdCB0YXNrX3N0
cnVjdCAqdGFza19zdHJ1Y3Q7CisJaW50IGV4aXRfY29kZSwgc3RhdHVzOworCisJdHJ5X2NhdGNo
LT5jb250ZXh0ID0gY29udGV4dDsKKwl0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uID0gJnRyeV9j
b21wbGV0aW9uOworCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IDA7CisJdGFza19zdHJ1Y3QgPSBr
dGhyZWFkX3J1bihrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFwdGVyLAorCQkJCSAgdHJ5
X2NhdGNoLAorCQkJCSAgImt1bml0X3RyeV9jYXRjaF90aHJlYWQiKTsKKwlpZiAoSVNfRVJSKHRh
c2tfc3RydWN0KSkgeworCQl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4dCk7CisJ
CXJldHVybjsKKwl9CisKKwkvKgorCSAqIFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6
IFdlIHNob3VsZCBwcm9iYWJseSBoYXZlIHNvbWUgdHlwZSBvZgorCSAqIHZhcmlhYmxlIHRpbWVv
dXQgaGVyZS4gVGhlIG9ubHkgcXVlc3Rpb24gaXMgd2hhdCB0aGF0IHRpbWVvdXQgdmFsdWUKKwkg
KiBzaG91bGQgYmUuCisJICoKKwkgKiBUaGUgaW50ZW50aW9uIGhhcyBhbHdheXMgYmVlbiwgYXQg
c29tZSBwb2ludCwgdG8gYmUgYWJsZSB0byBsYWJlbAorCSAqIHRlc3RzIHdpdGggc29tZSB0eXBl
IG9mIHNpemUgYnVja2V0ICh1bml0L3NtYWxsLCBpbnRlZ3JhdGlvbi9tZWRpdW0sCisJICogbGFy
Z2Uvc3lzdGVtL2VuZC10by1lbmQsIGV0YyksIHdoZXJlIGVhY2ggc2l6ZSBidWNrZXQgd291bGQg
Z2V0IGEKKwkgKiBkZWZhdWx0IHRpbWVvdXQgdmFsdWUga2luZCBvZiBsaWtlIHdoYXQgQmF6ZWwg
ZG9lczoKKwkgKiBodHRwczovL2RvY3MuYmF6ZWwuYnVpbGQvdmVyc2lvbnMvbWFzdGVyL2JlL2Nv
bW1vbi1kZWZpbml0aW9ucy5odG1sI3Rlc3Quc2l6ZQorCSAqIFRoZXJlIGlzIHN0aWxsIHNvbWUg
ZGViYXRlIHRvIGJlIGhhZCBvbiBleGFjdGx5IGhvdyB3ZSBkbyB0aGlzLiAoRm9yCisJICogb25l
LCB3ZSBwcm9iYWJseSB3YW50IHRvIGhhdmUgc29tZSBzb3J0IG9mIHRlc3QgcnVubmVyIGxldmVs
CisJICogdGltZW91dC4pCisJICoKKwkgKiBGb3IgbW9yZSBiYWNrZ3JvdW5kIG9uIHRoaXMgdG9w
aWMsIHNlZToKKwkgKiBodHRwczovL21pa2UtYmxhbmQuY29tLzIwMTEvMTEvMDEvc21hbGwtbWVk
aXVtLWxhcmdlLmh0bWwKKwkgKi8KKwlzdGF0dXMgPSB3YWl0X2Zvcl9jb21wbGV0aW9uX3RpbWVv
dXQoJnRyeV9jb21wbGV0aW9uLAorCQkJCQkgICAgIDMwMCAqIE1TRUNfUEVSX1NFQyk7IC8qIDUg
bWluICovCisJaWYgKHN0YXR1cyA8IDApIHsKKwkJa3VuaXRfZXJyKHRlc3QsICJ0cnkgdGltZWQg
b3V0XG4iKTsKKwkJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gLUVUSU1FRE9VVDsKKwl9CisKKwll
eGl0X2NvZGUgPSB0cnlfY2F0Y2gtPnRyeV9yZXN1bHQ7CisKKwlpZiAoIWV4aXRfY29kZSkKKwkJ
cmV0dXJuOworCisJaWYgKGV4aXRfY29kZSA9PSAtRUZBVUxUKQorCQl0cnlfY2F0Y2gtPnRyeV9y
ZXN1bHQgPSAwOworCWVsc2UgaWYgKGV4aXRfY29kZSA9PSAtRUlOVFIpCisJCWt1bml0X2Vycih0
ZXN0LCAid2FrZV91cF9wcm9jZXNzKCkgd2FzIG5ldmVyIGNhbGxlZFxuIik7CisJZWxzZSBpZiAo
ZXhpdF9jb2RlKQorCQlrdW5pdF9lcnIodGVzdCwgIlVua25vd24gZXJyb3I6ICVkXG4iLCBleGl0
X2NvZGUpOworCisJdHJ5X2NhdGNoLT5jYXRjaCh0cnlfY2F0Y2gtPmNvbnRleHQpOworfQorCit2
b2lkIGt1bml0X3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRj
aCwKKwkJCSAgc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190
IHRyeSwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaCkKK3sKKwl0cnlfY2F0Y2gt
PnRlc3QgPSB0ZXN0OworCXRyeV9jYXRjaC0+dHJ5ID0gdHJ5OworCXRyeV9jYXRjaC0+Y2F0Y2gg
PSBjYXRjaDsKK30KLS0gCjIuMjIuMC40MTAuZ2Q4ZmRiZTIxYjUtZ29vZwoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlz
dApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
