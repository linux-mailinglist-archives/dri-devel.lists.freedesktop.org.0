Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id ABA61BC990
	for <lists+dri-devel@lfdr.de>; Tue, 24 Sep 2019 15:57:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E08DE6EA43;
	Tue, 24 Sep 2019 13:57:24 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 284576EA3D;
 Tue, 24 Sep 2019 13:57:23 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
 [10.5.11.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 63D9720F6;
 Tue, 24 Sep 2019 13:57:22 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-44.pek2.redhat.com [10.72.12.44])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 9DE3261559;
 Tue, 24 Sep 2019 13:56:56 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [PATCH V2 8/8] docs: sample driver to demonstrate how to implement
 virtio-mdev framework
Date: Tue, 24 Sep 2019 21:53:32 +0800
Message-Id: <20190924135332.14160-9-jasowang@redhat.com>
In-Reply-To: <20190924135332.14160-1-jasowang@redhat.com>
References: <20190924135332.14160-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.6.2
 (mx1.redhat.com [10.5.110.71]); Tue, 24 Sep 2019 13:57:22 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: christophe.de.dinechin@gmail.com, sebott@linux.ibm.com, airlied@linux.ie,
 Jason Wang <jasowang@redhat.com>, heiko.carstens@de.ibm.com,
 kevin.tian@intel.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, parav@mellanox.com,
 zhihong.wang@intel.com, akrowiak@linux.ibm.com, netdev@vger.kernel.org,
 cohuck@redhat.com, oberpar@linux.ibm.com, maxime.coquelin@redhat.com,
 lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBzYW1wbGUgZHJpdmVyIGNyZWF0ZXMgbWRldiBkZXZpY2UgdGhhdCBzaW11bGF0ZSB2aXJ0
aW8gbmV0IGRldmljZQpvdmVyIHZpcnRpbyBtZGV2IHRyYW5zcG9ydC4gVGhlIGRldmljZSBpcyBp
bXBsZW1lbnRlZCB0aHJvdWdoIHZyaW5naAphbmQgd29ya3F1ZXVlLiBBIGRldmljZSBzcGVjaWZp
YyBkbWEgb3BzIGlzIHRvIG1ha2Ugc3VyZSBIVkEgaXMgdXNlZApkaXJlY3RseSBhcyB0aGUgSU9W
QS4gVGhpcyBzaG91bGQgYmUgc3VmZmljaWVudCBmb3Iga2VybmVsIHZpcnRpbwpkcml2ZXIgdG8g
d29yay4KCk9ubHkgJ3ZpcnRpbycgdHlwZSBpcyBzdXBwb3J0ZWQgcmlnaHQgbm93LiBJIHBsYW4g
dG8gYWRkICd2aG9zdCcgdHlwZQpvbiB0b3Agd2hpY2ggcmVxdWlyZXMgc29tZSB2aXJ0dWFsIElP
TU1VIGltcGxlbWVudGVkIGluIHRoaXMgc2FtcGxlCmRyaXZlci4KClNpZ25lZC1vZmYtYnk6IEph
c29uIFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+Ci0tLQogTUFJTlRBSU5FUlMgICAgICAgICAg
ICAgICAgfCAgIDEgKwogc2FtcGxlcy9LY29uZmlnICAgICAgICAgICAgfCAgIDcgKwogc2FtcGxl
cy92ZmlvLW1kZXYvTWFrZWZpbGUgfCAgIDEgKwogc2FtcGxlcy92ZmlvLW1kZXYvbXZuZXQuYyAg
fCA2OTIgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNCBmaWxlcyBjaGFu
Z2VkLCA3MDEgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHNhbXBsZXMvdmZpby1t
ZGV2L212bmV0LmMKCmRpZmYgLS1naXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTCmluZGV4
IDg5ODMyYjMxNjUwMC4uMzQ3ZGM2NGNkYzIzIDEwMDY0NAotLS0gYS9NQUlOVEFJTkVSUworKysg
Yi9NQUlOVEFJTkVSUwpAQCAtMTcyMDIsNiArMTcyMDIsNyBAQCBGOglpbmNsdWRlL2xpbnV4L3Zp
cnRpbyouaAogRjoJaW5jbHVkZS91YXBpL2xpbnV4L3ZpcnRpb18qLmgKIEY6CWRyaXZlcnMvY3J5
cHRvL3ZpcnRpby8KIEY6CW1tL2JhbGxvb25fY29tcGFjdGlvbi5jCitGOglzYW1wbGVzL3ZmaW8t
bWRldi9tdm5ldC5jCiAKIFZJUlRJTyBCTE9DSyBBTkQgU0NTSSBEUklWRVJTCiBNOgkiTWljaGFl
bCBTLiBUc2lya2luIiA8bXN0QHJlZGhhdC5jb20+CmRpZmYgLS1naXQgYS9zYW1wbGVzL0tjb25m
aWcgYi9zYW1wbGVzL0tjb25maWcKaW5kZXggYzhkYWNiNGRkYTgwLi5hMWExY2EyYzAwYjcgMTAw
NjQ0Ci0tLSBhL3NhbXBsZXMvS2NvbmZpZworKysgYi9zYW1wbGVzL0tjb25maWcKQEAgLTEzMSw2
ICsxMzEsMTMgQEAgY29uZmlnIFNBTVBMRV9WRklPX01ERVZfTURQWQogCSAgbWVkaWF0ZWQgZGV2
aWNlLiAgSXQgaXMgYSBzaW1wbGUgZnJhbWVidWZmZXIgYW5kIHN1cHBvcnRzCiAJICB0aGUgcmVn
aW9uIGRpc3BsYXkgaW50ZXJmYWNlIChWRklPX0dGWF9QTEFORV9UWVBFX1JFR0lPTikuCiAKK2Nv
bmZpZyBTQU1QTEVfVklSVElPX01ERVZfTkVUCisgICAgICAgIHRyaXN0YXRlICJCdWlsZCB2aXJ0
aW8gbWRldiBuZXQgZXhhbXBsZSBtZWRpYXRlZCBkZXZpY2Ugc2FtcGxlIGNvZGUgLS0gbG9hZGFi
bGUgbW9kdWxlcyBvbmx5IgorCWRlcGVuZHMgb24gVklSVElPX01ERVZfREVWSUNFICYmIFZIT1NU
X1JJTkcgJiYgbQorCWhlbHAKKwkgIEJ1aWxkIGEgbmV0d29ya2luZyBzYW1wbGUgZGV2aWNlIGZv
ciB1c2UgYXMgYSB2aXJ0aW8KKwkgIG1lZGlhdGVkIGRldmljZS4KKwogY29uZmlnIFNBTVBMRV9W
RklPX01ERVZfTURQWV9GQgogCXRyaXN0YXRlICJCdWlsZCBWRklPIG1kcHkgZXhhbXBsZSBndWVz
dCBmYmRldiBkcml2ZXIgLS0gbG9hZGFibGUgbW9kdWxlIG9ubHkiCiAJZGVwZW5kcyBvbiBGQiAm
JiBtCmRpZmYgLS1naXQgYS9zYW1wbGVzL3ZmaW8tbWRldi9NYWtlZmlsZSBiL3NhbXBsZXMvdmZp
by1tZGV2L01ha2VmaWxlCmluZGV4IDEwZDE3OWM0ZmRlYi4uZjM0YWY5MGVkMGEwIDEwMDY0NAot
LS0gYS9zYW1wbGVzL3ZmaW8tbWRldi9NYWtlZmlsZQorKysgYi9zYW1wbGVzL3ZmaW8tbWRldi9N
YWtlZmlsZQpAQCAtMywzICszLDQgQEAgb2JqLSQoQ09ORklHX1NBTVBMRV9WRklPX01ERVZfTVRU
WSkgKz0gbXR0eS5vCiBvYmotJChDT05GSUdfU0FNUExFX1ZGSU9fTURFVl9NRFBZKSArPSBtZHB5
Lm8KIG9iai0kKENPTkZJR19TQU1QTEVfVkZJT19NREVWX01EUFlfRkIpICs9IG1kcHktZmIubwog
b2JqLSQoQ09ORklHX1NBTVBMRV9WRklPX01ERVZfTUJPQ0hTKSArPSBtYm9jaHMubworb2JqLSQo
Q09ORklHX1NBTVBMRV9WSVJUSU9fTURFVl9ORVQpICs9IG12bmV0Lm8KZGlmZiAtLWdpdCBhL3Nh
bXBsZXMvdmZpby1tZGV2L212bmV0LmMgYi9zYW1wbGVzL3ZmaW8tbWRldi9tdm5ldC5jCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNTNhMzlmMGYzNDYwCi0tLSAvZGV2
L251bGwKKysrIGIvc2FtcGxlcy92ZmlvLW1kZXYvbXZuZXQuYwpAQCAtMCwwICsxLDY5MiBAQAor
Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQorLyoKKyAqIE1lZGlhdGVk
IHZpcnR1YWwgdmlydGlvLW5ldCBkZXZpY2UgZHJpdmVyLgorICoKKyAqIENvcHlyaWdodCAoYykg
MjAxOSwgUmVkIEhhdCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCisgKiAgICAgQXV0aG9yOiBK
YXNvbiBXYW5nIDxqYXNvd2FuZ0ByZWRoYXQuY29tPgorICoKKyAqIFNhbXBsZSBkcml2ZXIgdGhh
dCBjcmVhdGVzIG1kZXYgZGV2aWNlIHRoYXQgc2ltdWxhdGVzIGV0aGVybmV0IGxvb3BiYWNrCisg
KiBkZXZpY2UuCisgKgorICogVXNhZ2U6CisgKgorICogIyBtb2Rwcm9iZSB2aXJ0aW9fbWRldgor
ICogIyBtb2Rwcm9iZSBtdm5ldAorICogIyBjZCAvc3lzL2RldmljZXMvdmlydHVhbC9tdm5ldC9t
dm5ldC9tZGV2X3N1cHBvcnRlZF90eXBlcy9tdm5ldC12aXJ0aW8KKyAqICMgZWNobyAiODNiOGY0
ZjItNTA5Zi0zODJmLTNjMWUtZTZiZmUwZmExMDAxIiA+IC4vY3JlYXRlCisgKiAjIGNkIGRldmlj
ZXMvODNiOGY0ZjItNTA5Zi0zODJmLTNjMWUtZTZiZmUwZmExMDAxCisgKiAjIGxzIC1kIHZpcnRp
bzAKKyAqIHZpcnRpbzAKKyAqLworCisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUg
PGxpbnV4L21vZHVsZS5oPgorI2luY2x1ZGUgPGxpbnV4L2RldmljZS5oPgorI2luY2x1ZGUgPGxp
bnV4L2tlcm5lbC5oPgorI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvcG9s
bC5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNsdWRlIDxsaW51eC9zY2hlZC5oPgor
I2luY2x1ZGUgPGxpbnV4L3dhaXQuaD4KKyNpbmNsdWRlIDxsaW51eC91dWlkLmg+CisjaW5jbHVk
ZSA8bGludXgvaW9tbXUuaD4KKyNpbmNsdWRlIDxsaW51eC9zeXNmcy5oPgorI2luY2x1ZGUgPGxp
bnV4L2ZpbGUuaD4KKyNpbmNsdWRlIDxsaW51eC9ldGhlcmRldmljZS5oPgorI2luY2x1ZGUgPGxp
bnV4L21kZXYuaD4KKyNpbmNsdWRlIDxsaW51eC92cmluZ2guaD4KKyNpbmNsdWRlIDxsaW51eC92
aXJ0aW9fbWRldi5oPgorI2luY2x1ZGUgPHVhcGkvbGludXgvdmlydGlvX2NvbmZpZy5oPgorI2lu
Y2x1ZGUgPHVhcGkvbGludXgvdmlydGlvX25ldC5oPgorCisjZGVmaW5lIFZFUlNJT05fU1RSSU5H
ICAiMC4xIgorI2RlZmluZSBEUklWRVJfQVVUSE9SICAgIlJlZCBIYXQgQ29ycG9yYXRpb24iCisK
KyNkZWZpbmUgTVZORVRfQ0xBU1NfTkFNRSAibXZuZXQiCisjZGVmaW5lIE1WTkVUX05BTUUgICAg
ICAgIm12bmV0IgorCisvKgorICogR2xvYmFsIFN0cnVjdHVyZXMKKyAqLworCitzdGF0aWMgc3Ry
dWN0IG12bmV0X2RldiB7CisJc3RydWN0IGNsYXNzCSp2ZF9jbGFzczsKKwlzdHJ1Y3QgaWRyCXZk
X2lkcjsKKwlzdHJ1Y3QgZGV2aWNlCWRldjsKK30gbXZuZXRfZGV2OworCitzdHJ1Y3QgbXZuZXRf
dmlydHF1ZXVlIHsKKwlzdHJ1Y3QgdnJpbmdoIHZyaW5nOworCXN0cnVjdCB2cmluZ2hfa2lvdiBp
b3Y7CisJdW5zaWduZWQgc2hvcnQgaGVhZDsKKwlib29sIHJlYWR5OworCXU2NCBkZXNjX2FkZHI7
CisJdTY0IGRldmljZV9hZGRyOworCXU2NCBkcml2ZXJfYWRkcjsKKwl1MzIgbnVtOworCXZvaWQg
KnByaXZhdGU7CisJaXJxcmV0dXJuX3QgKCpjYikodm9pZCAqZGF0YSk7Cit9OworCisjZGVmaW5l
IE1WTkVUX1FVRVVFX0FMSUdOIFBBR0VfU0laRQorI2RlZmluZSBNVk5FVF9RVUVVRV9NQVggMjU2
CisjZGVmaW5lIE1WTkVUX0RFVklDRV9JRCAweDEKKyNkZWZpbmUgTVZORVRfVkVORE9SX0lEIDAK
KwordTY0IG12bmV0X2ZlYXR1cmVzID0gKDFVTEwgPDwgVklSVElPX0ZfQU5ZX0xBWU9VVCkgfAor
CQkgICAgICgxVUxMIDw8IFZJUlRJT19GX1ZFUlNJT05fMSkgfAorCQkgICAgICgxVUxMIDw8IFZJ
UlRJT19GX0lPTU1VX1BMQVRGT1JNKTsKKworLyogU3RhdGUgb2YgZWFjaCBtZGV2IGRldmljZSAq
Lworc3RydWN0IG12bmV0X3N0YXRlIHsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlIHZxc1syXTsK
KwlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKKwlzcGlubG9ja190IGxvY2s7CisJc3RydWN0IG1k
ZXZfZGV2aWNlICptZGV2OworCXN0cnVjdCB2aXJ0aW9fbmV0X2NvbmZpZyBjb25maWc7CisJdm9p
ZCAqYnVmZmVyOworCXUzMiBzdGF0dXM7CisJdTMyIGdlbmVyYXRpb247CisJdTY0IGZlYXR1cmVz
OworCXN0cnVjdCBsaXN0X2hlYWQgbmV4dDsKK307CisKK3N0YXRpYyBzdHJ1Y3QgbXV0ZXggbWRl
dl9saXN0X2xvY2s7CitzdGF0aWMgc3RydWN0IGxpc3RfaGVhZCBtZGV2X2RldmljZXNfbGlzdDsK
Kworc3RhdGljIHZvaWQgbXZuZXRfcXVldWVfcmVhZHkoc3RydWN0IG12bmV0X3N0YXRlICptdm5l
dCwgdW5zaWduZWQgaW50IGlkeCkKK3sKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZt
dm5ldC0+dnFzW2lkeF07CisJaW50IHJldDsKKworCXJldCA9IHZyaW5naF9pbml0X2tlcm4oJnZx
LT52cmluZywgbXZuZXRfZmVhdHVyZXMsIE1WTkVUX1FVRVVFX01BWCwKKwkJCSAgICAgICBmYWxz
ZSwgKHN0cnVjdCB2cmluZ19kZXNjICopdnEtPmRlc2NfYWRkciwKKwkJCSAgICAgICAoc3RydWN0
IHZyaW5nX2F2YWlsICopdnEtPmRyaXZlcl9hZGRyLAorCQkJICAgICAgIChzdHJ1Y3QgdnJpbmdf
dXNlZCAqKXZxLT5kZXZpY2VfYWRkcik7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3ZxX3Jlc2V0
KHN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxKQoreworCXZxLT5yZWFkeSA9IDA7CisJdnEtPmRl
c2NfYWRkciA9IDA7CisJdnEtPmRyaXZlcl9hZGRyID0gMDsKKwl2cS0+ZGV2aWNlX2FkZHIgPSAw
OworCXZxLT5jYiA9IE5VTEw7CisJdnEtPnByaXZhdGUgPSBOVUxMOworCXZyaW5naF9pbml0X2tl
cm4oJnZxLT52cmluZywgbXZuZXRfZmVhdHVyZXMsIE1WTkVUX1FVRVVFX01BWCwKKwkJCWZhbHNl
LCAwLCAwLCAwKTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfcmVzZXQoc3RydWN0IG12bmV0X3N0
YXRlICptdm5ldCkKK3sKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCAyOyBpKyspCisJCW12
bmV0X3ZxX3Jlc2V0KCZtdm5ldC0+dnFzW2ldKTsKKworCW12bmV0LT5mZWF0dXJlcyA9IDA7CisJ
bXZuZXQtPnN0YXR1cyA9IDA7CisJKyttdm5ldC0+Z2VuZXJhdGlvbjsKK30KKworc3RhdGljIHZv
aWQgbXZuZXRfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCit7CisJc3RydWN0IG12bmV0
X3N0YXRlICptdm5ldCA9IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3QKKwkJCQkJCSBtdm5ldF9z
dGF0ZSwgd29yayk7CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdHhxID0gJm12bmV0LT52cXNb
MV07CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqcnhxID0gJm12bmV0LT52cXNbMF07CisJc2l6
ZV90IHJlYWQsIHdyaXRlLCB0b3RhbF93cml0ZTsKKwlpbnQgZXJyOworCWludCBwa3RzID0gMDsK
KworCXNwaW5fbG9jaygmbXZuZXQtPmxvY2spOworCisJaWYgKCF0eHEtPnJlYWR5IHx8ICFyeHEt
PnJlYWR5KQorCQlnb3RvIG91dDsKKworCXdoaWxlICh0cnVlKSB7CisJCXRvdGFsX3dyaXRlID0g
MDsKKwkJZXJyID0gdnJpbmdoX2dldGRlc2Nfa2VybigmdHhxLT52cmluZywgJnR4cS0+aW92LCBO
VUxMLAorCQkJCQkgICZ0eHEtPmhlYWQsIEdGUF9BVE9NSUMpOworCQlpZiAoZXJyIDw9IDApCisJ
CQlicmVhazsKKworCQllcnIgPSB2cmluZ2hfZ2V0ZGVzY19rZXJuKCZyeHEtPnZyaW5nLCBOVUxM
LCAmcnhxLT5pb3YsCisJCQkJCSAgJnJ4cS0+aGVhZCwgR0ZQX0FUT01JQyk7CisJCWlmIChlcnIg
PD0gMCkgeworCQkJdnJpbmdoX2NvbXBsZXRlX2tlcm4oJnR4cS0+dnJpbmcsIHR4cS0+aGVhZCwg
MCk7CisJCQlicmVhazsKKwkJfQorCisJCXdoaWxlICh0cnVlKSB7CisJCQlyZWFkID0gdnJpbmdo
X2lvdl9wdWxsX2tlcm4oJnR4cS0+aW92LCBtdm5ldC0+YnVmZmVyLAorCQkJCQkJICAgIFBBR0Vf
U0laRSk7CisJCQlpZiAocmVhZCA8PSAwKQorCQkJCWJyZWFrOworCisJCQl3cml0ZSA9IHZyaW5n
aF9pb3ZfcHVzaF9rZXJuKCZyeHEtPmlvdiwgbXZuZXQtPmJ1ZmZlciwKKwkJCQkJCSAgICAgcmVh
ZCk7CisJCQlpZiAod3JpdGUgPD0gMCkKKwkJCQlicmVhazsKKworCQkJdG90YWxfd3JpdGUgKz0g
d3JpdGU7CisJCX0KKworCQkvKiBNYWtlIHN1cmUgZGF0YSBpcyB3cm90ZSBiZWZvcmUgYWR2YW5j
aW5nIGluZGV4ICovCisJCXNtcF93bWIoKTsKKworCQl2cmluZ2hfY29tcGxldGVfa2VybigmdHhx
LT52cmluZywgdHhxLT5oZWFkLCAwKTsKKwkJdnJpbmdoX2NvbXBsZXRlX2tlcm4oJnJ4cS0+dnJp
bmcsIHJ4cS0+aGVhZCwgdG90YWxfd3JpdGUpOworCisJCS8qIE1ha2Ugc3VyZSB1c2VkIGlzIHZp
c2libGUgYmVmb3JlIHJhc2luZyB0aGUgaW50ZXJydXB0LiAqLworCQlzbXBfd21iKCk7CisKKwkJ
bG9jYWxfYmhfZGlzYWJsZSgpOworCQlpZiAodHhxLT5jYikKKwkJCXR4cS0+Y2IodHhxLT5wcml2
YXRlKTsKKwkJaWYgKHJ4cS0+Y2IpCisJCQlyeHEtPmNiKHJ4cS0+cHJpdmF0ZSk7CisJCWxvY2Fs
X2JoX2VuYWJsZSgpOworCisJCWlmICgrK3BrdHMgPiA0KSB7CisJCQlzY2hlZHVsZV93b3JrKCZt
dm5ldC0+d29yayk7CisJCQlnb3RvIG91dDsKKwkJfQorCX0KKworb3V0OgorCXNwaW5fdW5sb2Nr
KCZtdm5ldC0+bG9jayk7Cit9CisKK3N0YXRpYyBkbWFfYWRkcl90IG12bmV0X21hcF9wYWdlKHN0
cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IHBhZ2UgKnBhZ2UsCisJCQkJIHVuc2lnbmVkIGxvbmcg
b2Zmc2V0LCBzaXplX3Qgc2l6ZSwKKwkJCQkgZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGlyLAor
CQkJCSB1bnNpZ25lZCBsb25nIGF0dHJzKQoreworCS8qIFZyaW5naCBjYW4gb25seSB1c2UgSFZB
ICovCisJcmV0dXJuIChkbWFfYWRkcl90KShwYWdlX2FkZHJlc3MocGFnZSkgKyBvZmZzZXQpOwor
fQorCitzdGF0aWMgdm9pZCBtdm5ldF91bm1hcF9wYWdlKHN0cnVjdCBkZXZpY2UgKmRldiwgZG1h
X2FkZHJfdCBkbWFfYWRkciwKKwkJCSAgICAgc2l6ZV90IHNpemUsIGVudW0gZG1hX2RhdGFfZGly
ZWN0aW9uIGRpciwKKwkJCSAgICAgdW5zaWduZWQgbG9uZyBhdHRycykKK3sKK30KKworc3RhdGlj
IHZvaWQgKm12bmV0X2FsbG9jX2NvaGVyZW50KHN0cnVjdCBkZXZpY2UgKmRldiwgc2l6ZV90IHNp
emUsCisJCQkJICBkbWFfYWRkcl90ICpkbWFfYWRkciwgZ2ZwX3QgZmxhZywKKwkJCQkgIHVuc2ln
bmVkIGxvbmcgYXR0cnMpCit7CisJdm9pZCAqYWRkciA9IGttYWxsb2Moc2l6ZSwgZmxhZyk7CisK
KwlpZiAoYWRkciA9PSBOVUxMKQorCQkqZG1hX2FkZHIgPSBETUFfTUFQUElOR19FUlJPUjsKKwll
bHNlCisJCSpkbWFfYWRkciA9IChkbWFfYWRkcl90KSBhZGRyOworCisJcmV0dXJuIGFkZHI7Cit9
CisKK3N0YXRpYyB2b2lkIG12bmV0X2ZyZWVfY29oZXJlbnQoc3RydWN0IGRldmljZSAqZGV2LCBz
aXplX3Qgc2l6ZSwKKwkJCQl2b2lkICp2YWRkciwgZG1hX2FkZHJfdCBkbWFfYWRkciwKKwkJCQl1
bnNpZ25lZCBsb25nIGF0dHJzKQoreworCWtmcmVlKCh2b2lkICopZG1hX2FkZHIpOworfQorCitz
dGF0aWMgY29uc3Qgc3RydWN0IGRtYV9tYXBfb3BzIG12bmV0X2RtYV9vcHMgPSB7CisJLm1hcF9w
YWdlID0gbXZuZXRfbWFwX3BhZ2UsCisJLnVubWFwX3BhZ2UgPSBtdm5ldF91bm1hcF9wYWdlLAor
CS5hbGxvYyA9IG12bmV0X2FsbG9jX2NvaGVyZW50LAorCS5mcmVlID0gbXZuZXRfZnJlZV9jb2hl
cmVudCwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmlydGlvX21kZXZfZGV2aWNlX29wcyB2
aXJ0aW9fbWRldl9vcHM7CisKK3N0YXRpYyBpbnQgbXZuZXRfY3JlYXRlKHN0cnVjdCBrb2JqZWN0
ICprb2JqLCBzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0X3N0YXRl
ICptdm5ldDsKKwlzdHJ1Y3QgdmlydGlvX25ldF9jb25maWcgKmNvbmZpZzsKKwlzdHJ1Y3QgZGV2
aWNlICpkZXYgPSBtZGV2X2RldihtZGV2KTsKKworCWlmICghbWRldikKKwkJcmV0dXJuIC1FSU5W
QUw7CisKKwltdm5ldCA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCBtdm5ldF9zdGF0ZSksIEdGUF9L
RVJORUwpOworCWlmIChtdm5ldCA9PSBOVUxMKQorCQlyZXR1cm4gLUVOT01FTTsKKworCW12bmV0
LT5idWZmZXIgPSBrbWFsbG9jKFBBR0VfU0laRSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFtdm5ldC0+
YnVmZmVyKSB7CisJCWtmcmVlKG12bmV0KTsKKwkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJY29u
ZmlnID0gJm12bmV0LT5jb25maWc7CisJY29uZmlnLT5tdHUgPSAxNTAwOworCWNvbmZpZy0+c3Rh
dHVzID0gVklSVElPX05FVF9TX0xJTktfVVA7CisJZXRoX3JhbmRvbV9hZGRyKGNvbmZpZy0+bWFj
KTsKKworCUlOSVRfV09SSygmbXZuZXQtPndvcmssIG12bmV0X3dvcmspOworCisJc3Bpbl9sb2Nr
X2luaXQoJm12bmV0LT5sb2NrKTsKKwltdm5ldC0+bWRldiA9IG1kZXY7CisJbWRldl9zZXRfZHJ2
ZGF0YShtZGV2LCBtdm5ldCk7CisKKwltdXRleF9sb2NrKCZtZGV2X2xpc3RfbG9jayk7CisJbGlz
dF9hZGQoJm12bmV0LT5uZXh0LCAmbWRldl9kZXZpY2VzX2xpc3QpOworCW11dGV4X3VubG9jaygm
bWRldl9saXN0X2xvY2spOworCisJZGV2LT5jb2hlcmVudF9kbWFfbWFzayA9IERNQV9CSVRfTUFT
Syg2NCk7CisJc2V0X2RtYV9vcHMoZGV2LCAmbXZuZXRfZG1hX29wcyk7CisKKwltZGV2X3NldF9j
bGFzc19pZChtZGV2LCBNREVWX0lEX1ZJUlRJTyk7CisJbWRldl9zZXRfZGV2X29wcyhtZGV2LCAm
dmlydGlvX21kZXZfb3BzKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IG12bmV0X3Jl
bW92ZShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0X3N0YXRlICpt
ZHMsICp0bXBfbWRzOworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZk
YXRhKG1kZXYpOworCWludCByZXQgPSAtRUlOVkFMOworCisJbXV0ZXhfbG9jaygmbWRldl9saXN0
X2xvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShtZHMsIHRtcF9tZHMsICZtZGV2X2Rl
dmljZXNfbGlzdCwgbmV4dCkgeworCQlpZiAobXZuZXQgPT0gbWRzKSB7CisJCQlsaXN0X2RlbCgm
bXZuZXQtPm5leHQpOworCQkJbWRldl9zZXRfZHJ2ZGF0YShtZGV2LCBOVUxMKTsKKwkJCWtmcmVl
KG12bmV0LT5idWZmZXIpOworCQkJa2ZyZWUobXZuZXQpOworCQkJcmV0ID0gMDsKKwkJCWJyZWFr
OworCQl9CisJfQorCW11dGV4X3VubG9jaygmbWRldl9saXN0X2xvY2spOworCisJcmV0dXJuIHJl
dDsKK30KKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9tdm5ldF9kZXZfc2hvdyhzdHJ1Y3QgZGV2
aWNlICpkZXYsIHN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAorCQkgICAgIGNoYXIgKmJ1
ZikKK3sKKwlpZiAobWRldl9mcm9tX2RldihkZXYpKQorCQlyZXR1cm4gc3ByaW50ZihidWYsICJU
aGlzIGlzIE1ERVYgJXNcbiIsIGRldl9uYW1lKGRldikpOworCisJcmV0dXJuIHNwcmludGYoYnVm
LCAiXG4iKTsKK30KKworc3RhdGljIERFVklDRV9BVFRSX1JPKHNhbXBsZV9tdm5ldF9kZXYpOwor
CitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbXZuZXRfZGV2X2F0dHJzW10gPSB7CisJJmRldl9h
dHRyX3NhbXBsZV9tdm5ldF9kZXYuYXR0ciwKKwlOVUxMLAorfTsKKworc3RhdGljIGNvbnN0IHN0
cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgbXZuZXRfZGV2X2dyb3VwID0geworCS5uYW1lICA9ICJtdm5l
dF9kZXYiLAorCS5hdHRycyA9IG12bmV0X2Rldl9hdHRycywKK307CisKK3N0YXRpYyBjb25zdCBz
dHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptdm5ldF9kZXZfZ3JvdXBzW10gPSB7CisJJm12bmV0X2Rl
dl9ncm91cCwKKwlOVUxMLAorfTsKKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9tZGV2X2Rldl9z
aG93KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCisJ
CSAgICAgY2hhciAqYnVmKQoreworCWlmIChtZGV2X2Zyb21fZGV2KGRldikpCisJCXJldHVybiBz
cHJpbnRmKGJ1ZiwgIlRoaXMgaXMgTURFViAlc1xuIiwgZGV2X25hbWUoZGV2KSk7CisKKwlyZXR1
cm4gc3ByaW50ZihidWYsICJcbiIpOworfQorCitzdGF0aWMgREVWSUNFX0FUVFJfUk8oc2FtcGxl
X21kZXZfZGV2KTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKm1kZXZfZGV2X2F0dHJzW10g
PSB7CisJJmRldl9hdHRyX3NhbXBsZV9tZGV2X2Rldi5hdHRyLAorCU5VTEwsCit9OworCitzdGF0
aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X2Rldl9ncm91cCA9IHsKKwkubmFt
ZSAgPSAidmVuZG9yIiwKKwkuYXR0cnMgPSBtZGV2X2Rldl9hdHRycywKK307CisKK3N0YXRpYyBj
b25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X2Rldl9ncm91cHNbXSA9IHsKKwkmbWRl
dl9kZXZfZ3JvdXAsCisJTlVMTCwKK307CisKKyNkZWZpbmUgTVZORVRfU1RSSU5HX0xFTiAxNgor
CitzdGF0aWMgc3NpemVfdAorbmFtZV9zaG93KHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3Qg
ZGV2aWNlICpkZXYsIGNoYXIgKmJ1ZikKK3sKKwljaGFyIG5hbWVbTVZORVRfU1RSSU5HX0xFTl07
CisJY29uc3QgY2hhciAqbmFtZV9zdHIgPSAidmlydGlvLW5ldCI7CisKKwlzbnByaW50ZihuYW1l
LCBNVk5FVF9TVFJJTkdfTEVOLCAiJXMiLCBkZXZfZHJpdmVyX3N0cmluZyhkZXYpKTsKKwlpZiAo
IXN0cmNtcChrb2JqLT5uYW1lLCBuYW1lKSkKKwkJcmV0dXJuIHNwcmludGYoYnVmLCAiJXNcbiIs
IG5hbWVfc3RyKTsKKworCXJldHVybiAtRUlOVkFMOworfQorCitzdGF0aWMgTURFVl9UWVBFX0FU
VFJfUk8obmFtZSk7CisKK3N0YXRpYyBzc2l6ZV90CithdmFpbGFibGVfaW5zdGFuY2VzX3Nob3co
c3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwgY2hhciAqYnVmKQorewor
CXJldHVybiBzcHJpbnRmKGJ1ZiwgIiVkXG4iLCBJTlRfTUFYKTsKK30KKworc3RhdGljIE1ERVZf
VFlQRV9BVFRSX1JPKGF2YWlsYWJsZV9pbnN0YW5jZXMpOworCitzdGF0aWMgc3NpemVfdCBkZXZp
Y2VfYXBpX3Nob3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwKKwkJ
CSAgICAgICBjaGFyICpidWYpCit7CisJcmV0dXJuIHNwcmludGYoYnVmLCAiJXNcbiIsIFZJUlRJ
T19NREVWX0RFVklDRV9BUElfU1RSSU5HKTsKK30KKworc3RhdGljIE1ERVZfVFlQRV9BVFRSX1JP
KGRldmljZV9hcGkpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbWRldl90eXBlc19hdHRy
c1tdID0geworCSZtZGV2X3R5cGVfYXR0cl9uYW1lLmF0dHIsCisJJm1kZXZfdHlwZV9hdHRyX2Rl
dmljZV9hcGkuYXR0ciwKKwkmbWRldl90eXBlX2F0dHJfYXZhaWxhYmxlX2luc3RhbmNlcy5hdHRy
LAorCU5VTEwsCit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X3R5cGVf
Z3JvdXAgPSB7CisJLm5hbWUgID0gInZpcnRpbyIsCisJLmF0dHJzID0gbWRldl90eXBlc19hdHRy
cywKK307CisKKy8qIFRCRDogInZob3N0IiB0eXBlICovCisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmli
dXRlX2dyb3VwICptZGV2X3R5cGVfZ3JvdXBzW10gPSB7CisJJm1kZXZfdHlwZV9ncm91cCwKKwlO
VUxMLAorfTsKKworc3RhdGljIGludCBtdm5ldF9zZXRfdnFfYWRkcmVzcyhzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJCQkJdTY0IGRlc2NfYXJlYSwgdTY0IGRyaXZlcl9hcmVh
LCB1NjQgZGV2aWNlX2FyZWEpCit7CisJc3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZf
Z2V0X2RydmRhdGEobWRldik7CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEgPSAmbXZuZXQt
PnZxc1tpZHhdOworCisJdnEtPmRlc2NfYWRkciA9IGRlc2NfYXJlYTsKKwl2cS0+ZHJpdmVyX2Fk
ZHIgPSBkcml2ZXJfYXJlYTsKKwl2cS0+ZGV2aWNlX2FkZHIgPSBkZXZpY2VfYXJlYTsKKworCXJl
dHVybiAwOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfdnFfbnVtKHN0cnVjdCBtZGV2X2Rl
dmljZSAqbWRldiwgdTE2IGlkeCwgdTMyIG51bSkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12
bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2
cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwl2cS0+bnVtID0gbnVtOworfQorCitzdGF0aWMgdm9p
ZCBtdm5ldF9raWNrX3ZxKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCkKK3sKKwlz
dHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1
Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwlpZiAodnEtPnJl
YWR5KQorCQlzY2hlZHVsZV93b3JrKCZtdm5ldC0+d29yayk7Cit9CisKK3N0YXRpYyB2b2lkIG12
bmV0X3NldF92cV9jYihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJCQkgICAg
c3RydWN0IHZpcnRpb19tZGV2X2NhbGxiYWNrICpjYikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUg
Km12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVl
ICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwl2cS0+Y2IgPSBjYi0+Y2FsbGJhY2s7CisJdnEt
PnByaXZhdGUgPSBjYi0+cHJpdmF0ZTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfc2V0X3ZxX3Jl
YWR5KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgYm9vbCByZWFkeSkKK3sKKwlz
dHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1
Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwlzcGluX2xvY2so
Jm12bmV0LT5sb2NrKTsKKwl2cS0+cmVhZHkgPSByZWFkeTsKKwlpZiAodnEtPnJlYWR5KQorCQlt
dm5ldF9xdWV1ZV9yZWFkeShtdm5ldCwgaWR4KTsKKwlzcGluX3VubG9jaygmbXZuZXQtPmxvY2sp
OworfQorCitzdGF0aWMgYm9vbCBtdm5ldF9nZXRfdnFfcmVhZHkoc3RydWN0IG1kZXZfZGV2aWNl
ICptZGV2LCB1MTYgaWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dl
dF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52
cXNbaWR4XTsKKworCXJldHVybiB2cS0+cmVhZHk7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfc2V0
X3ZxX3N0YXRlKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgdTY0IHN0YXRlKQor
eworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOwor
CXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsKKwlzdHJ1Y3Qg
dnJpbmdoICp2cmggPSAmdnEtPnZyaW5nOworCisJc3Bpbl9sb2NrKCZtdm5ldC0+bG9jayk7CisJ
dnJoLT5sYXN0X2F2YWlsX2lkeCA9IHN0YXRlOworCXNwaW5fdW5sb2NrKCZtdm5ldC0+bG9jayk7
CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHU2NCBtdm5ldF9nZXRfdnFfc3RhdGUoc3RydWN0
IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZu
ZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZx
ID0gJm12bmV0LT52cXNbaWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2cmggPSAmdnEtPnZyaW5nOwor
CisJcmV0dXJuIHZyaC0+bGFzdF9hdmFpbF9pZHg7Cit9CisKK3N0YXRpYyB1MTYgbXZuZXRfZ2V0
X3ZxX2FsaWduKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1cm4gTVZORVRfUVVF
VUVfQUxJR047Cit9CisKK3N0YXRpYyB1NjQgbXZuZXRfZ2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2
X2RldmljZSAqbWRldikKK3sKKwlyZXR1cm4gbXZuZXRfZmVhdHVyZXM7Cit9CisKK3N0YXRpYyBp
bnQgbXZuZXRfc2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTY0IGZlYXR1
cmVzKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1k
ZXYpOworCisJLyogRE1BIG1hcHBpbmcgbXVzdCBiZSBkb25lIGJ5IGRyaXZlciAqLworCWlmICgh
KGZlYXR1cmVzICYgKDFVTEwgPDwgVklSVElPX0ZfSU9NTVVfUExBVEZPUk0pKSkKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwltdm5ldC0+ZmVhdHVyZXMgPSBmZWF0dXJlcyAmIG12bmV0X2ZlYXR1cmVz
OworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3NldF9jb25maWdfY2Ioc3Ry
dWN0IG1kZXZfZGV2aWNlICptZGV2LAorCQkJCXN0cnVjdCB2aXJ0aW9fbWRldl9jYWxsYmFjayAq
Y2IpCit7CisJLyogV2UgZG9uJ3Qgc3VwcG9ydCBjb25maWcgaW50ZXJydXB0ICovCit9CisKK3N0
YXRpYyB1MTYgbXZuZXRfZ2V0X3F1ZXVlX21heChzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7
CisJcmV0dXJuIE1WTkVUX1FVRVVFX01BWDsKK30KKworc3RhdGljIHUzMiBtdm5ldF9nZXRfZGV2
aWNlX2lkKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1cm4gTVZORVRfREVWSUNF
X0lEOworfQorCitzdGF0aWMgdTMyIG12bmV0X2dldF92ZW5kb3JfaWQoc3RydWN0IG1kZXZfZGV2
aWNlICptZGV2KQoreworCXJldHVybiBNVk5FVF9WRU5ET1JfSUQ7Cit9CisKK3N0YXRpYyB1OCBt
dm5ldF9nZXRfc3RhdHVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZu
ZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKworCXJldHVybiBtdm5l
dC0+c3RhdHVzOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfc3RhdHVzKHN0cnVjdCBtZGV2
X2RldmljZSAqbWRldiwgdTggc3RhdHVzKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQg
PSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCisJbXZuZXQtPnN0YXR1cyA9IHN0YXR1czsKKwor
CWlmIChzdGF0dXMgPT0gMCkgeworCQlzcGluX2xvY2soJm12bmV0LT5sb2NrKTsKKwkJbXZuZXRf
cmVzZXQobXZuZXQpOworCQlzcGluX3VubG9jaygmbXZuZXQtPmxvY2spOworCX0KK30KKworc3Rh
dGljIHZvaWQgbXZuZXRfZ2V0X2NvbmZpZyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHVuc2ln
bmVkIGludCBvZmZzZXQsCisJCQkgICAgIHZvaWQgKmJ1ZiwgdW5zaWduZWQgaW50IGxlbikKK3sK
KwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwor
CWlmIChvZmZzZXQgKyBsZW4gPCBzaXplb2Yoc3RydWN0IHZpcnRpb19uZXRfY29uZmlnKSkKKwkJ
bWVtY3B5KGJ1ZiwgJm12bmV0LT5jb25maWcgKyBvZmZzZXQsIGxlbik7Cit9CisKK3N0YXRpYyB2
b2lkIG12bmV0X3NldF9jb25maWcoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1bnNpZ25lZCBp
bnQgb2Zmc2V0LAorCQkJICAgICBjb25zdCB2b2lkICpidWYsIHVuc2lnbmVkIGludCBsZW4pCit7
CisJLyogTm8gd3JpdGFibGUgY29uZmlnIHN1cHBvcnR0ZWQgYnkgbXZuZXQgKi8KK30KKworc3Rh
dGljIGludCBtdm5ldF9nZXRfdmVyc2lvbihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJ
cmV0dXJuIDB4MTsKK30KKworc3RhdGljIHUzMiBtdm5ldF9nZXRfZ2VuZXJhdGlvbihzdHJ1Y3Qg
bWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZf
Z2V0X2RydmRhdGEobWRldik7CisKKwlyZXR1cm4gbXZuZXQtPmdlbmVyYXRpb247Cit9CisKK3N0
YXRpYyBjb25zdCBzdHJ1Y3QgdmlydGlvX21kZXZfZGV2aWNlX29wcyB2aXJ0aW9fbWRldl9vcHMg
PSB7CisJLnNldF92cV9hZGRyZXNzICAgICAgICAgPSBtdm5ldF9zZXRfdnFfYWRkcmVzcywKKwku
c2V0X3ZxX251bSAgICAgICAgICAgICA9IG12bmV0X3NldF92cV9udW0sCisJLmtpY2tfdnEgICAg
ICAgICAgICAgICAgPSBtdm5ldF9raWNrX3ZxLAorCS5zZXRfdnFfY2IgICAgICAgICAgICAgID0g
bXZuZXRfc2V0X3ZxX2NiLAorCS5zZXRfdnFfcmVhZHkgICAgICAgICAgID0gbXZuZXRfc2V0X3Zx
X3JlYWR5LAorCS5nZXRfdnFfcmVhZHkgICAgICAgICAgID0gbXZuZXRfZ2V0X3ZxX3JlYWR5LAor
CS5zZXRfdnFfc3RhdGUgICAgICAgICAgID0gbXZuZXRfc2V0X3ZxX3N0YXRlLAorCS5nZXRfdnFf
c3RhdGUgICAgICAgICAgID0gbXZuZXRfZ2V0X3ZxX3N0YXRlLAorCS5nZXRfdnFfYWxpZ24gICAg
ICAgICAgID0gbXZuZXRfZ2V0X3ZxX2FsaWduLAorCS5nZXRfZmVhdHVyZXMgICAgICAgICAgID0g
bXZuZXRfZ2V0X2ZlYXR1cmVzLAorCS5zZXRfZmVhdHVyZXMgICAgICAgICAgID0gbXZuZXRfc2V0
X2ZlYXR1cmVzLAorCS5zZXRfY29uZmlnX2NiICAgICAgICAgID0gbXZuZXRfc2V0X2NvbmZpZ19j
YiwKKwkuZ2V0X3F1ZXVlX21heCAgICAgICAgICA9IG12bmV0X2dldF9xdWV1ZV9tYXgsCisJLmdl
dF9kZXZpY2VfaWQgICAgICAgICAgPSBtdm5ldF9nZXRfZGV2aWNlX2lkLAorCS5nZXRfdmVuZG9y
X2lkICAgICAgICAgID0gbXZuZXRfZ2V0X3ZlbmRvcl9pZCwKKwkuZ2V0X3N0YXR1cyAgICAgICAg
ICAgICA9IG12bmV0X2dldF9zdGF0dXMsCisJLnNldF9zdGF0dXMgICAgICAgICAgICAgPSBtdm5l
dF9zZXRfc3RhdHVzLAorCS5nZXRfY29uZmlnICAgICAgICAgICAgID0gbXZuZXRfZ2V0X2NvbmZp
ZywKKwkuc2V0X2NvbmZpZyAgICAgICAgICAgICA9IG12bmV0X3NldF9jb25maWcsCisJLmdldF92
ZXJzaW9uICAgICAgICAgICAgPSBtdm5ldF9nZXRfdmVyc2lvbiwKKwkuZ2V0X2dlbmVyYXRpb24g
ICAgICAgICA9IG12bmV0X2dldF9nZW5lcmF0aW9uLAorfTsKKworc3RhdGljIGNvbnN0IHN0cnVj
dCBtZGV2X3BhcmVudF9vcHMgbWRldl9mb3BzID0geworCS5vd25lciAgICAgICAgICAgICAgICAg
ID0gVEhJU19NT0RVTEUsCisJLmRldl9hdHRyX2dyb3VwcyAgICAgICAgPSBtdm5ldF9kZXZfZ3Jv
dXBzLAorCS5tZGV2X2F0dHJfZ3JvdXBzICAgICAgID0gbWRldl9kZXZfZ3JvdXBzLAorCS5zdXBw
b3J0ZWRfdHlwZV9ncm91cHMgID0gbWRldl90eXBlX2dyb3VwcywKKwkuY3JlYXRlICAgICAgICAg
ICAgICAgICA9IG12bmV0X2NyZWF0ZSwKKwkucmVtb3ZlCQkJPSBtdm5ldF9yZW1vdmUsCit9Owor
CitzdGF0aWMgdm9pZCBtdm5ldF9kZXZpY2VfcmVsZWFzZShzdHJ1Y3QgZGV2aWNlICpkZXYpCit7
CisJZGV2X2RiZyhkZXYsICJtdm5ldDogcmVsZWFzZWRcbiIpOworfQorCitzdGF0aWMgaW50IF9f
aW5pdCBtdm5ldF9kZXZfaW5pdCh2b2lkKQoreworCWludCByZXQgPSAwOworCisJcHJfaW5mbygi
bXZuZXRfZGV2OiAlc1xuIiwgX19mdW5jX18pOworCisJbWVtc2V0KCZtdm5ldF9kZXYsIDAsIHNp
emVvZihtdm5ldF9kZXYpKTsKKworCWlkcl9pbml0KCZtdm5ldF9kZXYudmRfaWRyKTsKKworCW12
bmV0X2Rldi52ZF9jbGFzcyA9IGNsYXNzX2NyZWF0ZShUSElTX01PRFVMRSwgTVZORVRfQ0xBU1Nf
TkFNRSk7CisKKwlpZiAoSVNfRVJSKG12bmV0X2Rldi52ZF9jbGFzcykpIHsKKwkJcHJfZXJyKCJF
cnJvcjogZmFpbGVkIHRvIHJlZ2lzdGVyIG12bmV0X2RldiBjbGFzc1xuIik7CisJCXJldCA9IFBU
Ul9FUlIobXZuZXRfZGV2LnZkX2NsYXNzKTsKKwkJZ290byBmYWlsZWQxOworCX0KKworCW12bmV0
X2Rldi5kZXYuY2xhc3MgPSBtdm5ldF9kZXYudmRfY2xhc3M7CisJbXZuZXRfZGV2LmRldi5yZWxl
YXNlID0gbXZuZXRfZGV2aWNlX3JlbGVhc2U7CisJZGV2X3NldF9uYW1lKCZtdm5ldF9kZXYuZGV2
LCAiJXMiLCBNVk5FVF9OQU1FKTsKKworCXJldCA9IGRldmljZV9yZWdpc3RlcigmbXZuZXRfZGV2
LmRldik7CisJaWYgKHJldCkKKwkJZ290byBmYWlsZWQyOworCisJcmV0ID0gbWRldl9yZWdpc3Rl
cl9kZXZpY2UoJm12bmV0X2Rldi5kZXYsICZtZGV2X2ZvcHMpOworCWlmIChyZXQpCisJCWdvdG8g
ZmFpbGVkMzsKKworCW11dGV4X2luaXQoJm1kZXZfbGlzdF9sb2NrKTsKKwlJTklUX0xJU1RfSEVB
RCgmbWRldl9kZXZpY2VzX2xpc3QpOworCisJZ290byBhbGxfZG9uZTsKKworZmFpbGVkMzoKKwor
CWRldmljZV91bnJlZ2lzdGVyKCZtdm5ldF9kZXYuZGV2KTsKK2ZhaWxlZDI6CisJY2xhc3NfZGVz
dHJveShtdm5ldF9kZXYudmRfY2xhc3MpOworCitmYWlsZWQxOgorYWxsX2RvbmU6CisJcmV0dXJu
IHJldDsKK30KKworc3RhdGljIHZvaWQgX19leGl0IG12bmV0X2Rldl9leGl0KHZvaWQpCit7CisJ
bXZuZXRfZGV2LmRldi5idXMgPSBOVUxMOworCW1kZXZfdW5yZWdpc3Rlcl9kZXZpY2UoJm12bmV0
X2Rldi5kZXYpOworCisJZGV2aWNlX3VucmVnaXN0ZXIoJm12bmV0X2Rldi5kZXYpOworCWlkcl9k
ZXN0cm95KCZtdm5ldF9kZXYudmRfaWRyKTsKKwljbGFzc19kZXN0cm95KG12bmV0X2Rldi52ZF9j
bGFzcyk7CisJbXZuZXRfZGV2LnZkX2NsYXNzID0gTlVMTDsKKwlwcl9pbmZvKCJtdm5ldF9kZXY6
IFVubG9hZGVkIVxuIik7Cit9CisKK21vZHVsZV9pbml0KG12bmV0X2Rldl9pbml0KQorbW9kdWxl
X2V4aXQobXZuZXRfZGV2X2V4aXQpCisKK01PRFVMRV9MSUNFTlNFKCJHUEwgdjIiKTsKK01PRFVM
RV9JTkZPKHN1cHBvcnRlZCwgIlNpbXVsYXRlIGxvb3BiYWNrIGV0aGVybmV0IGRldmljZSBvdmVy
IG1kZXYiKTsKK01PRFVMRV9WRVJTSU9OKFZFUlNJT05fU1RSSU5HKTsKK01PRFVMRV9BVVRIT1Io
RFJJVkVSX0FVVEhPUik7Ci0tIAoyLjE5LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2RyaS1kZXZlbA==
