Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9764D61EF1
	for <lists+dri-devel@lfdr.de>; Mon,  8 Jul 2019 14:54:15 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4168B89D46;
	Mon,  8 Jul 2019 12:54:12 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E688D89D7D;
 Mon,  8 Jul 2019 12:54:08 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 08 Jul 2019 05:54:08 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,466,1557212400"; d="scan'208";a="165452256"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga008.fm.intel.com with SMTP; 08 Jul 2019 05:54:06 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Mon, 08 Jul 2019 15:54:05 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Subject: [PATCH 13/19] drm/i915: Allow planes to declare their minimum
 acceptable cdclk
Date: Mon,  8 Jul 2019 15:53:19 +0300
Message-Id: <20190708125325.16576-14-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190708125325.16576-1-ville.syrjala@linux.intel.com>
References: <20190708125325.16576-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClZh
cmlvdXMgcGl4ZWwgZm9ybWF0cyBhbmQgcGxhbmUgc2NhbGluZyBpbXBvc2UgYWRkaXRpb25hbCBj
b25zdHJhaW50cwpvbiB0aGUgY2RjbGsgZnJlcXVlbmN5LiBQcm92aWRlIGEgbmV3IHBsYW5lLT5t
aW5fY2RjbGsoKSBob29rIHRoYXQKd2lsbCBiZSB1c2VkIHRvIGNvbXB1dGUgdGhlIG1pbmltdW0g
YWNjZXB0YWJsZSBjZGNsayBmcmVxdWVuY3kgZm9yCmVhY2ggcGxhbmUuCgpBbm5veWluZ2x5IG9u
IHNvbWUgcGxhdGZvcm1zIHRoZSBudW1lciBvZiBhY3RpdmUgcGxhbmVzIGFmZmVjdHMKdGhpcyBj
YWxjdWxhdGlvbiBzbyB3ZSBtdXN0IGFsc28gdG9zcyBpbiBtb3JlIHBsYW5lcyBpbnRvIHRoZQpz
dGF0ZSB3aGVuIHRoZSBudW1iZXIgb2YgYWN0aXZlIHBsYW5lcyBjaGFuZ2VzLgoKVGhlIHNlcXVl
bmNlIG9mIHN0YXRlIGNvbXB1dGF0aW9uIG11c3QgYWxzbyBiZSBjaGFuZ2VkOgoxLiBjaGVja19w
bGFuZSgpICh1cGRhdGVzIHBsYW5lJ3MgdmlzaWJpbGl0eSBldGMuKQoyLiBmaWd1cmUgb3V0IGlm
IG1vcmUgcGxhbmVzIG5vdyByZXF1aXJlIHVwZGF0ZSBtaW5fY2RjbGsKICAgY29tcHV0YWlvbgoz
LiBjYWxjdWxhdGUgdGhlIG5ldyBtaW4gY2RjbGsgZm9yIGVhY2ggcGxhbmUgaW4gdGhlIHN0YXRl
CjQuIGlmIHRoZSBtaW5pbXVtIG9mIGFueSBwbGFuZSBub3cgZXhjZWVkcyB0aGUgY3VycmVudAog
ICBsb2dpY2FsIGNkY2xrIHdlIHJlY29tcHV0ZSB0aGUgY2RjbGsKNC4gZHVyaW5nIGNkY2xrIGNv
bXB1dGF0aW9uIHRha2UgdGhlIHBsYW5lcycgbWluX2NkY2xrIGludG8KICAgYWNjb3V0bgo1LiBm
b2xsb3cgdGhlIG5vcm1hbCBjZGNsayBwcm9ncmFtbWluZyB0byBjaGFuZ2UgdGhlCiAgIGNkY2xr
IGZyZXF1ZW5jeS4gVGhpcyBtYXkgbm93IHJlcXVpcmUgYSBtb2Rlc2V0IChleGNlcHQKICAgb24g
Ynh0L2dsayBpbiBzb21lIGNhc2VzKSwgd2hpY2ggZWl0aGVyIHN1Y2NlZWRzIG9yCiAgIGZhaWxz
IGRlcGVuZGluZyBvbiB3aGV0aGVyIHVzZXJzcGFjZSBoYXMgZ2l2ZW4KICAgdXMgcGVybWlzc2lv
biB0byBwZXJmb3JtIGEgbW9kZXNldCBvciBub3QuCgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJq
w6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIC4uLi9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYyB8ICAzMCArKwogLi4uL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5oIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYyAgICB8ICAxNiArCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAxODcgKysrKysrKystLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyAgIHwgMzQyICsrKysrKysrKysrKysrKysr
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaCAgIHwgICA3ICsK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oICAgICAgICAgICAgICB8ICAgNCArCiA3
IGZpbGVzIGNoYW5nZWQsIDU2NiBpbnNlcnRpb25zKCspLCAyMiBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYwppbmRl
eCBkNzQ5MzU1MWIyOGMuLjkxZTg0MWQzODA4NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5jCkBAIC0xMzcsNiArMTM3LDM1IEBAIHVu
c2lnbmVkIGludCBpbnRlbF9wbGFuZV9kYXRhX3JhdGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJcmV0dXJuIGNwcCAqIGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7
CiB9CiAKK2Jvb2wgaW50ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21p
Y19zdGF0ZSAqc3RhdGUsCisJCQkJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSkKK3sKKwljb25z
dCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlID0KKwkJaW50ZWxfYXRvbWlj
X2dldF9uZXdfcGxhbmVfc3RhdGUoc3RhdGUsIHBsYW5lKTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YyA9IHRvX2ludGVsX2NydGMocGxhbmVfc3RhdGUtPmJhc2UuY3J0Yyk7CisJc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7CisKKwlpZiAoIXBsYW5lX3N0YXRlLT5iYXNlLnZp
c2libGUgfHwgIXBsYW5lLT5taW5fY2RjbGspCisJCXJldHVybiBmYWxzZTsKKworCWNydGNfc3Rh
dGUgPSBpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKKworCWNy
dGNfc3RhdGUtPm1pbl9jZGNsa1twbGFuZS0+aWRdID0KKwkJcGxhbmUtPm1pbl9jZGNsayhjcnRj
X3N0YXRlLCBwbGFuZV9zdGF0ZSk7CisKKwlEUk1fREVCVUdfS01TKCJbUExBTkU6JWQ6JXNdIG1p
bl9jZGNsayAlZCBrSHogKGxvZ2ljYWwgY2RjbGsgJWQga0h6KVxuIiwKKwkJICAgICAgcGxhbmUt
PmJhc2UuYmFzZS5pZCwgcGxhbmUtPmJhc2UubmFtZSwKKwkJICAgICAgY3J0Y19zdGF0ZS0+bWlu
X2NkY2xrW3BsYW5lLT5pZF0sCisJCSAgICAgIHN0YXRlLT5jZGNsay5sb2dpY2FsLmNkY2xrKTsK
KworCS8qIHNob3VsZCBoYXZlIGJlZW4gcG9wdWxhdGVkIGluIGludGVsX2F0b21pY19jaGVja19w
bGFuZXMoKSAqLworCVdBUk5fT04oc3RhdGUtPmNkY2xrLmxvZ2ljYWwuY2RjbGsgPT0gMCk7CisK
KwkvKiBEb2VzIHRoZSBjZGNsayBuZWVkIHRvIGJlIGJ1bWJlZCB1cD8gKi8KKwlyZXR1cm4gY3J0
Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0gPgorCQlzdGF0ZS0+Y2RjbGsubG9naWNhbC5j
ZGNsazsKK30KKwogaW50IGludGVsX3BsYW5lX2F0b21pY19jaGVja193aXRoX3N0YXRlKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlLAogCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxf
cGxhbmVfc3RhdGUgKm9sZF9wbGFuZV9zdGF0ZSwKQEAgLTE1MCw2ICsxNzksNyBAQCBpbnQgaW50
ZWxfcGxhbmVfYXRvbWljX2NoZWNrX3dpdGhfc3RhdGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKm9sZF9jcnRjXwogCW5ld19jcnRjX3N0YXRlLT5udjEyX3BsYW5lcyAmPSB+QklUKHBs
YW5lLT5pZCk7CiAJbmV3X2NydGNfc3RhdGUtPmM4X3BsYW5lcyAmPSB+QklUKHBsYW5lLT5pZCk7
CiAJbmV3X2NydGNfc3RhdGUtPmRhdGFfcmF0ZVtwbGFuZS0+aWRdID0gMDsKKwluZXdfY3J0Y19z
dGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0gPSAwOwogCW5ld19wbGFuZV9zdGF0ZS0+YmFzZS52
aXNpYmxlID0gZmFsc2U7CiAKIAlpZiAoIW5ld19wbGFuZV9zdGF0ZS0+YmFzZS5jcnRjICYmICFv
bGRfcGxhbmVfc3RhdGUtPmJhc2UuY3J0YykKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5oCmluZGV4IGRjODVhZjAyZTliNy4uZTYxZTlhODJh
YWRmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21p
Y19wbGFuZS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWlj
X3BsYW5lLmgKQEAgLTQ3LDUgKzQ3LDcgQEAgaW50IGludGVsX3BsYW5lX2F0b21pY19jYWxjX2No
YW5nZXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXQKIAkJCQkg
ICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJICAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqb2xkX3BsYW5lX3N0YXRlLAogCQkJCSAgICBzdHJ1Y3Qg
aW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKTsKK2Jvb2wgaW50ZWxfcGxhbmVfY2FsY19t
aW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJc3RydWN0IGlu
dGVsX3BsYW5lICpwbGFuZSk7CiAKICNlbmRpZiAvKiBfX0lOVEVMX0FUT01JQ19QTEFORV9IX18g
Ki8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYwppbmRleCA0MDU4
M2Q4ZDI1OWIuLjE4NzFjNTZlNDhlYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9jZGNsay5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfY2RjbGsuYwpAQCAtMjIyNyw2ICsyMjI3LDE5IEBAIHN0YXRpYyBpbnQgaW50ZWxfcGl4
ZWxfcmF0ZV90b19jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSkKIAkJcmV0dXJuIERJVl9ST1VORF9VUChwaXhlbF9yYXRlICogMTAwLCA5MCk7CiB9CiAKK3N0
YXRpYyBpbnQgaW50ZWxfcGxhbmVzX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVs
X2NydGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfcGxhbmUg
KnBsYW5lOworCWludCBtaW5fY2RjbGsgPSAwOworCisJZm9yX2VhY2hfaW50ZWxfcGxhbmVfb25f
Y3J0YygmZGV2X3ByaXYtPmRybSwgY3J0YywgcGxhbmUpCisJCW1pbl9jZGNsayA9IG1heChjcnRj
X3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSwgbWluX2NkY2xrKTsKKworCXJldHVybiBtaW5f
Y2RjbGs7Cit9CisKIGludCBpbnRlbF9jcnRjX2NvbXB1dGVfbWluX2NkY2xrKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9CkBAIC0yMjg0LDYgKzIyOTcsOSBAQCBpbnQgaW50ZWxfY3J0Y19jb21w
dXRlX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkK
IAkgICAgSVNfR0VNSU5JTEFLRShkZXZfcHJpdikpCiAJCW1pbl9jZGNsayA9IG1heCgxNTg0MDAs
IG1pbl9jZGNsayk7CiAKKwkvKiBBY2NvdW50IGZvciBhZGRpdGlvbmFsIG5lZWRzIGZyb20gdGhl
IHBsYW5lcyAqLworCW1pbl9jZGNsayA9IG1heChpbnRlbF9wbGFuZXNfbWluX2NkY2xrKGNydGNf
c3RhdGUpLCBtaW5fY2RjbGspOworCiAJaWYgKG1pbl9jZGNsayA+IGRldl9wcml2LT5tYXhfY2Rj
bGtfZnJlcSkgewogCQlEUk1fREVCVUdfS01TKCJyZXF1aXJlZCBjZGNsayAoJWQga0h6KSBleGNl
ZWRzIG1heCAoJWQga0h6KVxuIiwKIAkJCSAgICAgIG1pbl9jZGNsaywgZGV2X3ByaXYtPm1heF9j
ZGNsa19mcmVxKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMKaW5kZXggZWFlZDRhZWU0ZWU0Li42ODczOGQxNzdmZDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0zMTY3LDYgKzMxNjcsNyBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9wbGFuZV9kaXNhYmxlX25vYXRvbWljKHN0cnVjdCBpbnRlbF9jcnRjICpj
cnRjLAogCWludGVsX3NldF9wbGFuZV92aXNpYmxlKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlLCBm
YWxzZSk7CiAJZml4dXBfYWN0aXZlX3BsYW5lcyhjcnRjX3N0YXRlKTsKIAljcnRjX3N0YXRlLT5k
YXRhX3JhdGVbcGxhbmUtPmlkXSA9IDA7CisJY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5p
ZF0gPSAwOwogCiAJaWYgKHBsYW5lLT5pZCA9PSBQTEFORV9QUklNQVJZKQogCQlpbnRlbF9wcmVf
ZGlzYWJsZV9wcmltYXJ5X25vYXRvbWljKCZjcnRjLT5iYXNlKTsKQEAgLTM1NjEsNiArMzU2Miw1
MyBAQCBpbnQgc2tsX2NoZWNrX3BsYW5lX3N1cmZhY2Uoc3RydWN0IGludGVsX3BsYW5lX3N0YXRl
ICpwbGFuZV9zdGF0ZSkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgaTl4eF9wbGFuZV9y
YXRpbyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCSAgICAg
Y29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJCSAgICAgdW5z
aWduZWQgaW50ICpudW0sIHVuc2lnbmVkIGludCAqZGVuKQoreworCWNvbnN0IHN0cnVjdCBkcm1f
ZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmJhc2UuZmI7CisJdW5zaWduZWQgaW50IGNw
cCA9IGZiLT5mb3JtYXQtPmNwcFswXTsKKworCS8qCisJICogZzR4IGJzcGVjIHNheXMgNjRicHAg
cGl4ZWwgcmF0ZSBjYW4ndCBleGNlZWQgODAlCisJICogb2YgY2RjbGsgd2hlbiB0aGUgc3ByaXRl
IHBsYW5lIGlzIGVuYWJsZWQgb24gdGhlCisJICogc2FtZSBwaXBlLiBpbGsvc25iIGJzcGVjIHNh
eXMgNjRicHAgcGl4ZWwgcmF0ZSBpcworCSAqIG5ldmVyIGFsbG93ZWQgdG8gZXhjZWVkIDgwJSBv
ZiBjZGNsay4gTGV0J3MganVzdCBnbworCSAqIHdpdGggdGhlIGlsay9zbmIgbGltaXQgYWx3YXlz
LgorCSAqLworCWlmIChjcHAgPT0gOCkgeworCQkqbnVtID0gMTA7CisJCSpkZW4gPSA4OworCX0g
ZWxzZSB7CisJCSpudW0gPSAxOworCQkqZGVuID0gMTsKKwl9Cit9CisKK3N0YXRpYyBpbnQgaTl4
eF9wbGFuZV9taW5fY2RjbGsoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCisJCQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKK3sK
Kwl1bnNpZ25lZCBpbnQgcGl4ZWxfcmF0ZTsKKwl1bnNpZ25lZCBpbnQgbnVtLCBkZW47CisKKwkv
KgorCSAqIE5vdGUgdGhhdCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRzIGZvciBib3Ro
CisJICogaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25zY2FsaW5nIGZh
Y3RvcnMuCisJICogUHJlLUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNpZGVyIHRoZSBo
b3Jpem9udGFsCisJICogZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9yZSB0aGF0IGFu
ZCBqdXN0IGNvbnNpZGVyCisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8KKwlwaXhlbF9y
YXRlID0gY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZTsKKworCWk5eHhfcGxhbmVfcmF0aW8oY3J0Y19z
dGF0ZSwgcGxhbmVfc3RhdGUsICZudW0sICZkZW4pOworCisJLyogdHdvIHBpeGVscyBwZXIgY2xv
Y2sgd2l0aCBkb3VibGUgd2lkZSBwaXBlICovCisJaWYgKGNydGNfc3RhdGUtPmRvdWJsZV93aWRl
KQorCQlkZW4gKj0gMjsKKworCXJldHVybiBESVZfUk9VTkRfVVAocGl4ZWxfcmF0ZSAqIG51bSwg
ZGVuKTsKK30KKwogdW5zaWduZWQgaW50CiBpOXh4X3BsYW5lX21heF9zdHJpZGUoc3RydWN0IGlu
dGVsX3BsYW5lICpwbGFuZSwKIAkJICAgICAgdTMyIHBpeGVsX2Zvcm1hdCwgdTY0IG1vZGlmaWVy
LApAQCAtMTE1MDgsNiArMTE1NTYsNyBAQCBpbnQgaW50ZWxfcGxhbmVfYXRvbWljX2NhbGNfY2hh
bmdlcyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdAogCQlwbGFu
ZV9zdGF0ZS0+YmFzZS52aXNpYmxlID0gdmlzaWJsZSA9IGZhbHNlOwogCQljcnRjX3N0YXRlLT5h
Y3RpdmVfcGxhbmVzICY9IH5CSVQocGxhbmUtPmlkKTsKIAkJY3J0Y19zdGF0ZS0+ZGF0YV9yYXRl
W3BsYW5lLT5pZF0gPSAwOworCQljcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSA9IDA7
CiAJfQogCiAJaWYgKCF3YXNfdmlzaWJsZSAmJiAhdmlzaWJsZSkKQEAgLTExNzk2LDkgKzExODQ1
LDYgQEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSwKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KSB7CiAJCWlm
IChtb2RlX2NoYW5nZWQgfHwgY3J0Y19zdGF0ZS0+dXBkYXRlX3BpcGUpCiAJCQlyZXQgPSBza2xf
dXBkYXRlX3NjYWxlcl9jcnRjKGNydGNfc3RhdGUpOwotCi0JCWlmICghcmV0KQotCQkJcmV0ID0g
aWNsX2NoZWNrX252MTJfcGxhbmVzKGNydGNfc3RhdGUpOwogCQlpZiAoIXJldCkKIAkJCXJldCA9
IHNrbF9jaGVja19waXBlX21heF9waXhlbF9yYXRlKGNydGMsIGNydGNfc3RhdGUpOwogCQlpZiAo
IXJldCkKQEAgLTEzNDU4LDEyICsxMzUwNCw0OSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9jcnRjX2No
ZWNrX2Zhc3RzZXQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YQog
CW5ld19jcnRjX3N0YXRlLT5oYXNfZHJycyA9IG9sZF9jcnRjX3N0YXRlLT5oYXNfZHJyczsKIH0K
IAotc3RhdGljIGludCBpbnRlbF9hdG9taWNfY2hlY2tfcGxhbmVzKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBpbnRlbF9jcnRjX2FkZF9wbGFuZXNfdG9fc3Rh
dGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJCSAgc3RydWN0IGludGVs
X2NydGMgKmNydGMsCisJCQkJCSAgdTggcGxhbmVfaWRzX21hc2spCiB7CisJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOworCXN0cnVj
dCBpbnRlbF9wbGFuZSAqcGxhbmU7CisKKwlmb3JfZWFjaF9pbnRlbF9wbGFuZV9vbl9jcnRjKCZk
ZXZfcHJpdi0+ZHJtLCBjcnRjLCBwbGFuZSkgeworCQlzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUg
KnBsYW5lX3N0YXRlOworCisJCWlmICgocGxhbmVfaWRzX21hc2sgJiBwbGFuZS0+aWQpID09IDAp
CisJCQljb250aW51ZTsKKworCQlwbGFuZV9zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfcGxhbmVf
c3RhdGUoc3RhdGUsIHBsYW5lKTsKKwkJaWYgKElTX0VSUihwbGFuZV9zdGF0ZSkpCisJCQlyZXR1
cm4gUFRSX0VSUihwbGFuZV9zdGF0ZSk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBi
b29sIGFjdGl2ZV9wbGFuZXNfYWZmZWN0c19taW5fY2RjbGsoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQoreworCS8qIFNlZSB7aHN3LHZsdixpdmJ9X3BsYW5lX3JhdGlvKCkgKi8K
KwlyZXR1cm4gSVNfQlJPQURXRUxMKGRldl9wcml2KSB8fCBJU19IQVNXRUxMKGRldl9wcml2KSB8
fAorCQlJU19DSEVSUllWSUVXKGRldl9wcml2KSB8fCBJU19WQUxMRVlWSUVXKGRldl9wcml2KSB8
fAorCQlJU19JVllCUklER0UoZGV2X3ByaXYpOworfQorCitzdGF0aWMgaW50IGludGVsX2F0b21p
Y19jaGVja19wbGFuZXMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJICAg
ICBib29sICpuZWVkX21vZGVzZXQpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpvbGRfY3J0Y19zdGF0ZSwgKm5ld19jcnRjX3N0YXRlOwogCXN0cnVjdCBpbnRlbF9wbGFuZV9z
dGF0ZSAqcGxhbmVfc3RhdGU7CiAJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsKKwlzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YzsKIAlpbnQgaSwgcmV0OwogCisJcmV0ID0gaWNsX2FkZF9saW5rZWRf
cGxhbmVzKHN0YXRlKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCiAJZm9yX2VhY2hfbmV3
X2ludGVsX3BsYW5lX2luX3N0YXRlKHN0YXRlLCBwbGFuZSwgcGxhbmVfc3RhdGUsIGkpIHsKIAkJ
cmV0ID0gaW50ZWxfcGxhbmVfYXRvbWljX2NoZWNrKHN0YXRlLCBwbGFuZSk7CiAJCWlmIChyZXQp
IHsKQEAgLTEzNDczLDYgKzEzNTU2LDQ0IEBAIHN0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NoZWNr
X3BsYW5lcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJfQogCX0KIAorCWZv
cl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBvbGRfY3J0Y19z
dGF0ZSwKKwkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJCXU4IG9sZF9hY3RpdmVfcGxh
bmVzLCBuZXdfYWN0aXZlX3BsYW5lczsKKworCQkvKiBzYWZlIGFzIGxvbmcgYXMgd2UgYXJlIGhv
bGRpbmcgYXQgbGVhc3Qgb25lIGNydGMgbXV0ZXggKi8KKwkJc3RhdGUtPmNkY2xrLmxvZ2ljYWwg
PSBkZXZfcHJpdi0+Y2RjbGsubG9naWNhbDsKKworCQlyZXQgPSBpY2xfY2hlY2tfbnYxMl9wbGFu
ZXMobmV3X2NydGNfc3RhdGUpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKworCQkvKgor
CQkgKiBPbiBzb21lIHBsYXRmb3JtcyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBwbGFuZXMgYWZmZWN0
cworCQkgKiB0aGUgcGxhbmVzJyBtaW51bXVtIGNkY2xrIGNhbGN1bGF0aW9uLiBBZGQgc3VjaCBw
bGFuZXMKKwkJICogdG8gdGhlIHN0YXRlIGJlZm9yZSB3ZSBjb21wdXRlIHRoZSBtaW5pbXVtIGNk
Y2xrLgorCQkgKi8KKwkJaWYgKCFhY3RpdmVfcGxhbmVzX2FmZmVjdHNfbWluX2NkY2xrKGRldl9w
cml2KSkKKwkJCWNvbnRpbnVlOworCisJCW9sZF9hY3RpdmVfcGxhbmVzID0gb2xkX2NydGNfc3Rh
dGUtPmFjdGl2ZV9wbGFuZXMgJiB+QklUKFBMQU5FX0NVUlNPUik7CisJCW5ld19hY3RpdmVfcGxh
bmVzID0gbmV3X2NydGNfc3RhdGUtPmFjdGl2ZV9wbGFuZXMgJiB+QklUKFBMQU5FX0NVUlNPUik7
CisKKwkJaWYgKGh3ZWlnaHQ4KG9sZF9hY3RpdmVfcGxhbmVzKSA9PSBod2VpZ2h0OChuZXdfYWN0
aXZlX3BsYW5lcykpCisJCQljb250aW51ZTsKKworCQlyZXQgPSBpbnRlbF9jcnRjX2FkZF9wbGFu
ZXNfdG9fc3RhdGUoc3RhdGUsIGNydGMsIG5ld19hY3RpdmVfcGxhbmVzKTsKKwkJaWYgKHJldCkK
KwkJCXJldHVybiByZXQ7CisJfQorCisJLyoKKwkgKiBhY3RpdmVfcGxhbmVzIGJpdG1hc2sgaGFz
IGJlZW4gdXBkYXRlZCwgYW5kIHBvdGVudGlhbGx5CisJICogYWZmZWN0ZWQgcGxhbmVzIGFyZSBw
YXJ0IG9mIHRoZSBzdGF0ZS4gV2UgY2FuIG5vdworCSAqIGNvbXB1dGUgdGhlIG1pbnVtdW0gY2Rj
bGsgZm9yIGVhY2ggcGxhbmUuCisJICovCisJZm9yX2VhY2hfbmV3X2ludGVsX3BsYW5lX2luX3N0
YXRlKHN0YXRlLCBwbGFuZSwgcGxhbmVfc3RhdGUsIGkpCisJCSpuZWVkX21vZGVzZXQgfD0gaW50
ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RhdGUsIHBsYW5lKTsKKwogCXJldHVybiAwOwogfQog
CkBAIC0xMzU1MywyMiArMTM2NzQsMTYgQEAgc3RhdGljIGludCBpbnRlbF9hdG9taWNfY2hlY2so
c3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAogCWFueV9tcyB8PSBzdGF0ZS0+Y2RjbGsuZm9yY2Vf
bWluX2NkY2xrX2NoYW5nZWQ7CiAKKwlyZXQgPSBpbnRlbF9hdG9taWNfY2hlY2tfcGxhbmVzKHN0
YXRlLCAmYW55X21zKTsKKwlpZiAocmV0KQorCQlnb3RvIGZhaWw7CisKIAlpZiAoYW55X21zKSB7
CiAJCXJldCA9IGludGVsX21vZGVzZXRfY2hlY2tzKHN0YXRlKTsKIAkJaWYgKHJldCkKIAkJCWdv
dG8gZmFpbDsKLQl9IGVsc2UgewotCQlzdGF0ZS0+Y2RjbGsubG9naWNhbCA9IGRldl9wcml2LT5j
ZGNsay5sb2dpY2FsOwogCX0KIAotCXJldCA9IGljbF9hZGRfbGlua2VkX3BsYW5lcyhzdGF0ZSk7
Ci0JaWYgKHJldCkKLQkJZ290byBmYWlsOwotCi0JcmV0ID0gaW50ZWxfYXRvbWljX2NoZWNrX3Bs
YW5lcyhzdGF0ZSk7Ci0JaWYgKHJldCkKLQkJZ290byBmYWlsOwotCiAJcmV0ID0gaW50ZWxfYXRv
bWljX2NoZWNrX2NydGNzKHN0YXRlKTsKIAlpZiAocmV0KQogCQlnb3RvIGZhaWw7CkBAIC0xNDgw
OSw2ICsxNDkyNCwxNSBAQCBpbnRlbF9wcmltYXJ5X3BsYW5lX2NyZWF0ZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGlwZSBwaXBlKQogCQlwbGFuZS0+Z2V0X2h3X3N0
YXRlID0gaTl4eF9wbGFuZV9nZXRfaHdfc3RhdGU7CiAJCXBsYW5lLT5jaGVja19wbGFuZSA9IGk5
eHhfcGxhbmVfY2hlY2s7CiAKKwkJaWYgKElTX0JST0FEV0VMTChkZXZfcHJpdikgfHwgSVNfSEFT
V0VMTChkZXZfcHJpdikpCisJCQlwbGFuZS0+bWluX2NkY2xrID0gaHN3X3BsYW5lX21pbl9jZGNs
azsKKwkJZWxzZSBpZiAoSVNfSVZZQlJJREdFKGRldl9wcml2KSkKKwkJCXBsYW5lLT5taW5fY2Rj
bGsgPSBpdmJfcGxhbmVfbWluX2NkY2xrOworCQllbHNlIGlmIChJU19DSEVSUllWSUVXKGRldl9w
cml2KSB8fCBJU19WQUxMRVlWSUVXKGRldl9wcml2KSkKKwkJCXBsYW5lLT5taW5fY2RjbGsgPSB2
bHZfcGxhbmVfbWluX2NkY2xrOworCQllbHNlCisJCQlwbGFuZS0+bWluX2NkY2xrID0gaTl4eF9w
bGFuZV9taW5fY2RjbGs7CisKIAkJcGxhbmVfZnVuY3MgPSAmaTk2NV9wbGFuZV9mdW5jczsKIAl9
IGVsc2UgewogCQlmb3JtYXRzID0gaTh4eF9wcmltYXJ5X2Zvcm1hdHM7CkBAIC0xNDgyMCw2ICsx
NDk0NCw3IEBAIGludGVsX3ByaW1hcnlfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwgZW51bSBwaXBlIHBpcGUpCiAJCXBsYW5lLT5kaXNhYmxlX3BsYW5lID0g
aTl4eF9kaXNhYmxlX3BsYW5lOwogCQlwbGFuZS0+Z2V0X2h3X3N0YXRlID0gaTl4eF9wbGFuZV9n
ZXRfaHdfc3RhdGU7CiAJCXBsYW5lLT5jaGVja19wbGFuZSA9IGk5eHhfcGxhbmVfY2hlY2s7CisJ
CXBsYW5lLT5taW5fY2RjbGsgPSBpOXh4X3BsYW5lX21pbl9jZGNsazsKIAogCQlwbGFuZV9mdW5j
cyA9ICZpOHh4X3BsYW5lX2Z1bmNzOwogCX0KQEAgLTE2NzI1LDE5ICsxNjg1MCwxMSBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9tb2Rlc2V0X3JlYWRvdXRfaHdfc3RhdGUoc3RydWN0IGRybV9kZXZpY2Ug
KmRldikKIAogCQkJaW50ZWxfY3J0Y19jb21wdXRlX3BpeGVsX3JhdGUoY3J0Y19zdGF0ZSk7CiAK
LQkJCW1pbl9jZGNsayA9IGludGVsX2NydGNfY29tcHV0ZV9taW5fY2RjbGsoY3J0Y19zdGF0ZSk7
Ci0JCQlpZiAoV0FSTl9PTihtaW5fY2RjbGsgPCAwKSkKLQkJCQltaW5fY2RjbGsgPSAwOwotCiAJ
CQlkcm1fY2FsY190aW1lc3RhbXBpbmdfY29uc3RhbnRzKCZjcnRjLT5iYXNlLAogCQkJCQkJCSZj
cnRjX3N0YXRlLT5iYXNlLmFkanVzdGVkX21vZGUpOwogCQkJdXBkYXRlX3NjYW5saW5lX29mZnNl
dChjcnRjX3N0YXRlKTsKIAkJfQogCi0JCWRldl9wcml2LT5taW5fY2RjbGtbY3J0Yy0+cGlwZV0g
PSBtaW5fY2RjbGs7Ci0JCWRldl9wcml2LT5taW5fdm9sdGFnZV9sZXZlbFtjcnRjLT5waXBlXSA9
Ci0JCQljcnRjX3N0YXRlLT5taW5fdm9sdGFnZV9sZXZlbDsKLQogCQlmb3JfZWFjaF9pbnRlbF9w
bGFuZV9vbl9jcnRjKCZkZXZfcHJpdi0+ZHJtLCBjcnRjLCBwbGFuZSkgewogCQkJY29uc3Qgc3Ry
dWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSA9CiAJCQkJdG9faW50ZWxfcGxhbmVf
c3RhdGUocGxhbmUtPmJhc2Uuc3RhdGUpOwpAQCAtMTY3NDksOCArMTY4NjYsMzQgQEAgc3RhdGlj
IHZvaWQgaW50ZWxfbW9kZXNldF9yZWFkb3V0X2h3X3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpCiAJCQlpZiAocGxhbmVfc3RhdGUtPmJhc2UudmlzaWJsZSkKIAkJCQljcnRjX3N0YXRlLT5k
YXRhX3JhdGVbcGxhbmUtPmlkXSA9CiAJCQkJCTQgKiBjcnRjX3N0YXRlLT5waXhlbF9yYXRlOwor
CQkJLyoKKwkJCSAqIEZJWE1FIGRvbid0IGhhdmUgdGhlIGZiIHlldCwgc28gY2FuJ3QKKwkJCSAq
IHVzZSBwbGFuZS0+bWluX2NkY2xrKCkgOigKKwkJCSAqLworCQkJaWYgKHBsYW5lX3N0YXRlLT5i
YXNlLnZpc2libGUgJiYgcGxhbmUtPm1pbl9jZGNsaykgeworCQkJCWlmIChjcnRjX3N0YXRlLT5k
b3VibGVfd2lkZSB8fAorCQkJCSAgICBJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEwIHx8IElTX0dF
TUlOSUxBS0UoZGV2X3ByaXYpKQorCQkJCQljcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlk
XSA9CisJCQkJCQlESVZfUk9VTkRfVVAoY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSwgMik7CisJCQkJ
ZWxzZQorCQkJCQljcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSA9CisJCQkJCQljcnRj
X3N0YXRlLT5waXhlbF9yYXRlOworCQkJfQorCQkJRFJNX0RFQlVHX0tNUygiW1BMQU5FOiVkOiVz
XSBtaW5fY2RjbGsgJWQga0h6XG4iLAorCQkJCSAgICAgIHBsYW5lLT5iYXNlLmJhc2UuaWQsIHBs
YW5lLT5iYXNlLm5hbWUsCisJCQkJICAgICAgY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5p
ZF0pOworCQl9CisKKwkJaWYgKGNydGNfc3RhdGUtPmJhc2UuYWN0aXZlKSB7CisJCQltaW5fY2Rj
bGsgPSBpbnRlbF9jcnRjX2NvbXB1dGVfbWluX2NkY2xrKGNydGNfc3RhdGUpOworCQkJaWYgKFdB
Uk5fT04obWluX2NkY2xrIDwgMCkpCisJCQkJbWluX2NkY2xrID0gMDsKIAkJfQogCisJCWRldl9w
cml2LT5taW5fY2RjbGtbY3J0Yy0+cGlwZV0gPSBtaW5fY2RjbGs7CisJCWRldl9wcml2LT5taW5f
dm9sdGFnZV9sZXZlbFtjcnRjLT5waXBlXSA9CisJCQljcnRjX3N0YXRlLT5taW5fdm9sdGFnZV9s
ZXZlbDsKKwogCQlpbnRlbF9id19jcnRjX3VwZGF0ZShid19zdGF0ZSwgY3J0Y19zdGF0ZSk7CiAK
IAkJaW50ZWxfcGlwZV9jb25maWdfc2FuaXR5X2NoZWNrKGRldl9wcml2LCBjcnRjX3N0YXRlKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nwcml0ZS5jCmluZGV4IGU4OWYz
ZjdmYWUwNS4uYTA3ODg3Mjc5ZTFhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3Nwcml0ZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfc3ByaXRlLmMKQEAgLTMxNyw2ICszMTcsNTYgQEAgaW50IGludGVsX3BsYW5lX2NoZWNr
X3NyY19jb29yZGluYXRlcyhzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQog
CXJldHVybiAwOwogfQogCitzdGF0aWMgdm9pZAorc2tsX3BsYW5lX3JhdGlvKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxh
bmVfc3RhdGUgKnBsYW5lX3N0YXRlLAorCQl1bnNpZ25lZCBpbnQgKm51bSwgdW5zaWduZWQgaW50
ICpkZW4pCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShw
bGFuZV9zdGF0ZS0+YmFzZS5wbGFuZS0+ZGV2KTsKKwljb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVm
ZmVyICpmYiA9IHBsYW5lX3N0YXRlLT5iYXNlLmZiOworCisJaWYgKGZiLT5mb3JtYXQtPmNwcFsw
XSA9PSA4KSB7CisJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEwIHx8IElTX0dFTUlOSUxB
S0UoZGV2X3ByaXYpKSB7CisJCQkqbnVtID0gMTA7CisJCQkqZGVuID0gODsKKwkJfSBlbHNlIHsK
KwkJCSpudW0gPSA5OworCQkJKmRlbiA9IDg7CisJCX0KKwl9IGVsc2UgeworCQkqbnVtID0gMTsK
KwkJKmRlbiA9IDE7CisJfQorfQorCitzdGF0aWMgaW50IHNrbF9wbGFuZV9taW5fY2RjbGsoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgICAgICAgY29uc3Qg
c3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHBsYW5lX3N0YXRlLT5iYXNlLnBsYW5lLT5k
ZXYpOworCXVuc2lnbmVkIGludCBwaXhlbF9yYXRlID0gY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZTsK
Kwl1bnNpZ25lZCBpbnQgc3JjX3csIHNyY19oLCBkc3RfdywgZHN0X2g7CisJdW5zaWduZWQgaW50
IG51bSwgZGVuOworCisJc2tsX3BsYW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlLCAm
bnVtLCAmZGVuKTsKKworCS8qIHR3byBwaXhlbHMgcGVyIGNsb2NrIG9uIGdsaysgKi8KKwlpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSAxMCB8fCBJU19HRU1JTklMQUtFKGRldl9wcml2KSkKKwkJ
ZGVuICo9IDI7CisKKwlzcmNfdyA9IGRybV9yZWN0X3dpZHRoKCZwbGFuZV9zdGF0ZS0+YmFzZS5z
cmMpID4+IDE2OworCXNyY19oID0gZHJtX3JlY3RfaGVpZ2h0KCZwbGFuZV9zdGF0ZS0+YmFzZS5z
cmMpID4+IDE2OworCWRzdF93ID0gZHJtX3JlY3Rfd2lkdGgoJnBsYW5lX3N0YXRlLT5iYXNlLmRz
dCk7CisJZHN0X2ggPSBkcm1fcmVjdF9oZWlnaHQoJnBsYW5lX3N0YXRlLT5iYXNlLmRzdCk7CisK
KwkvKiBEb3duc2NhbGluZyBsaW1pdHMgdGhlIG1heGltdW0gcGl4ZWwgcmF0ZSAqLworCWRzdF93
ID0gbWluKHNyY193LCBkc3Rfdyk7CisJZHN0X2ggPSBtaW4oc3JjX2gsIGRzdF9oKTsKKworCXJl
dHVybiBESVY2NF9VNjRfUk9VTkRfVVAobXVsX3UzMl91MzIocGl4ZWxfcmF0ZSAqIG51bSwgc3Jj
X3cgKiBzcmNfaCksCisJCQkJICBtdWxfdTMyX3UzMihkZW4sIGRzdF93ICogZHN0X2gpKTsKK30K
KworCiBzdGF0aWMgdW5zaWduZWQgaW50CiBza2xfcGxhbmVfbWF4X3N0cmlkZShzdHJ1Y3QgaW50
ZWxfcGxhbmUgKnBsYW5lLAogCQkgICAgIHUzMiBwaXhlbF9mb3JtYXQsIHU2NCBtb2RpZmllciwK
QEAgLTc3OSw2ICs4MjksODUgQEAgdmx2X3VwZGF0ZV9jbHJjKGNvbnN0IHN0cnVjdCBpbnRlbF9w
bGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCiAJCSAgICAgIFNQX1NIX1NJTihzaF9zaW4pIHwgU1Bf
U0hfQ09TKHNoX2NvcykpOwogfQogCitzdGF0aWMgdm9pZAordmx2X3BsYW5lX3JhdGlvKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQljb25zdCBzdHJ1Y3QgaW50
ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLAorCQl1bnNpZ25lZCBpbnQgKm51bSwgdW5zaWdu
ZWQgaW50ICpkZW4pCit7CisJdTggYWN0aXZlX3BsYW5lcyA9IGNydGNfc3RhdGUtPmFjdGl2ZV9w
bGFuZXMgJiB+QklUKFBMQU5FX0NVUlNPUik7CisJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZl
ciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsKKwl1bnNpZ25lZCBpbnQgY3BwID0gZmItPmZv
cm1hdC0+Y3BwWzBdOworCisJLyoKKwkgKiBWTFYgYnNwZWMgb25seSBjb25zaWRlcnMgY2FzZXMg
d2hlcmUgYWxsIHRocmVlIHBsYW5lcyBhcmUKKwkgKiBlbmFibGVkLCBhbmQgY2FzZXMgd2hlcmUg
dGhlIHByaW1hcnkgYW5kIG9uZSBzcHJpdGUgaXMgZW5hYmxlZC4KKwkgKiBMZXQncyBhc3N1bWUg
dGhlIGNhc2Ugd2l0aCBqdXN0IHR3byBzcHJpdGVzIGVuYWJsZWQgYWxzbworCSAqIG1hcHMgdG8g
dGhlIGxhdHRlciBjYXNlLgorCSAqLworCWlmIChod2VpZ2h0OChhY3RpdmVfcGxhbmVzKSA9PSAz
KSB7CisJCXN3aXRjaCAoY3BwKSB7CisJCWNhc2UgODoKKwkJCSpudW0gPSAxMTsKKwkJCSpkZW4g
PSA4OworCQkJYnJlYWs7CisJCWNhc2UgNDoKKwkJCSpudW0gPSAxODsKKwkJCSpkZW4gPSAxNjsK
KwkJCWJyZWFrOworCQlkZWZhdWx0OgorCQkJKm51bSA9IDE7CisJCQkqZGVuID0gMTsKKwkJCWJy
ZWFrOworCQl9CisJfSBlbHNlIGlmIChod2VpZ2h0OChhY3RpdmVfcGxhbmVzKSA9PSAyKSB7CisJ
CXN3aXRjaCAoY3BwKSB7CisJCWNhc2UgODoKKwkJCSpudW0gPSAxMDsKKwkJCSpkZW4gPSA4Owor
CQkJYnJlYWs7CisJCWNhc2UgNDoKKwkJCSpudW0gPSAxNzsKKwkJCSpkZW4gPSAxNjsKKwkJCWJy
ZWFrOworCQlkZWZhdWx0OgorCQkJKm51bSA9IDE7CisJCQkqZGVuID0gMTsKKwkJCWJyZWFrOwor
CQl9CisJfSBlbHNlIHsKKwkJc3dpdGNoIChjcHApIHsKKwkJY2FzZSA4OgorCQkJKm51bSA9IDEw
OworCQkJKmRlbiA9IDg7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCSpudW0gPSAxOworCQkJ
KmRlbiA9IDE7CisJCQlicmVhazsKKwkJfQorCX0KK30KKworaW50IHZsdl9wbGFuZV9taW5fY2Rj
bGsoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQljb25zdCBz
dHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQoreworCXVuc2lnbmVkIGludCBw
aXhlbF9yYXRlOworCXVuc2lnbmVkIGludCBudW0sIGRlbjsKKworCS8qCisJICogTm90ZSB0aGF0
IGNydGNfc3RhdGUtPnBpeGVsX3JhdGUgYWNjb3VudHMgZm9yIGJvdGgKKwkgKiBob3Jpem9udGFs
IGFuZCB2ZXJ0aWNhbCBwYW5lbCBmaXR0ZXIgZG93bnNjYWxpbmcgZmFjdG9ycy4KKwkgKiBQcmUt
SFNXIGJzcGVjIHRlbGxzIHVzIHRvIG9ubHkgY29uc2lkZXIgdGhlIGhvcml6b250YWwKKwkgKiBk
b3duc2NhbGluZyBmYWN0b3IgaGVyZS4gV2UgaWdub3JlIHRoYXQgYW5kIGp1c3QgY29uc2lkZXIK
KwkgKiBib3RoIGZvciBzaW1wbGljaXR5LgorCSAqLworCXBpeGVsX3JhdGUgPSBjcnRjX3N0YXRl
LT5waXhlbF9yYXRlOworCisJdmx2X3BsYW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRl
LCAmbnVtLCAmZGVuKTsKKworCXJldHVybiBESVZfUk9VTkRfVVAocGl4ZWxfcmF0ZSAqIG51bSwg
ZGVuKTsKK30KKwogc3RhdGljIHUzMiB2bHZfc3ByaXRlX2N0bF9jcnRjKGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXUzMiBzcHJjdGwgPSAwOwpAQCAtOTg1
LDYgKzExMTQsMTY0IEBAIHZsdl9wbGFuZV9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVsX3BsYW5l
ICpwbGFuZSwKIAlyZXR1cm4gcmV0OwogfQogCitzdGF0aWMgdm9pZCBpdmJfcGxhbmVfcmF0aW8o
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgICAgY29uc3Qg
c3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJCSAgICB1bnNpZ25lZCBp
bnQgKm51bSwgdW5zaWduZWQgaW50ICpkZW4pCit7CisJdTggYWN0aXZlX3BsYW5lcyA9IGNydGNf
c3RhdGUtPmFjdGl2ZV9wbGFuZXMgJiB+QklUKFBMQU5FX0NVUlNPUik7CisJY29uc3Qgc3RydWN0
IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsKKwl1bnNpZ25lZCBp
bnQgY3BwID0gZmItPmZvcm1hdC0+Y3BwWzBdOworCisJaWYgKGh3ZWlnaHQ4KGFjdGl2ZV9wbGFu
ZXMpID09IDIpIHsKKwkJc3dpdGNoIChjcHApIHsKKwkJY2FzZSA4OgorCQkJKm51bSA9IDEwOwor
CQkJKmRlbiA9IDg7CisJCQlicmVhazsKKwkJY2FzZSA0OgorCQkJKm51bSA9IDE3OworCQkJKmRl
biA9IDE2OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJCSpkZW4gPSAx
OworCQkJYnJlYWs7CisJCX0KKwl9IGVsc2UgeworCQlzd2l0Y2ggKGNwcCkgeworCQljYXNlIDg6
CisJCQkqbnVtID0gOTsKKwkJCSpkZW4gPSA4OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkq
bnVtID0gMTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9Cit9CisKK3N0YXRpYyB2
b2lkIGl2Yl9wbGFuZV9yYXRpb19zY2FsaW5nKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAorCQkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBs
YW5lX3N0YXRlLAorCQkJCSAgICB1bnNpZ25lZCBpbnQgKm51bSwgdW5zaWduZWQgaW50ICpkZW4p
Cit7CisJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFz
ZS5mYjsKKwl1bnNpZ25lZCBpbnQgY3BwID0gZmItPmZvcm1hdC0+Y3BwWzBdOworCisJc3dpdGNo
IChjcHApIHsKKwljYXNlIDg6CisJCSpudW0gPSAxMjsKKwkJKmRlbiA9IDg7CisJCWJyZWFrOwor
CWNhc2UgNDoKKwkJKm51bSA9IDE5OworCQkqZGVuID0gMTY7CisJCWJyZWFrOworCWNhc2UgMjoK
KwkJKm51bSA9IDMzOworCQkqZGVuID0gMzI7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCSpudW0g
PSAxOworCQkqZGVuID0gMTsKKwkJYnJlYWs7CisJfQorfQorCitpbnQgaXZiX3BsYW5lX21pbl9j
ZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCWNvbnN0
IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCit7CisJdW5zaWduZWQgaW50
IHBpeGVsX3JhdGU7CisJdW5zaWduZWQgaW50IG51bSwgZGVuOworCisJLyoKKwkgKiBOb3RlIHRo
YXQgY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSBhY2NvdW50cyBmb3IgYm90aAorCSAqIGhvcml6b250
YWwgYW5kIHZlcnRpY2FsIHBhbmVsIGZpdHRlciBkb3duc2NhbGluZyBmYWN0b3JzLgorCSAqIFBy
ZS1IU1cgYnNwZWMgdGVsbHMgdXMgdG8gb25seSBjb25zaWRlciB0aGUgaG9yaXpvbnRhbAorCSAq
IGRvd25zY2FsaW5nIGZhY3RvciBoZXJlLiBXZSBpZ25vcmUgdGhhdCBhbmQganVzdCBjb25zaWRl
cgorCSAqIGJvdGggZm9yIHNpbXBsaWNpdHkuCisJICovCisJcGl4ZWxfcmF0ZSA9IGNydGNfc3Rh
dGUtPnBpeGVsX3JhdGU7CisKKwlpdmJfcGxhbmVfcmF0aW8oY3J0Y19zdGF0ZSwgcGxhbmVfc3Rh
dGUsICZudW0sICZkZW4pOworCisJcmV0dXJuIERJVl9ST1VORF9VUChwaXhlbF9yYXRlICogbnVt
LCBkZW4pOworfQorCitzdGF0aWMgaW50IGl2Yl9zcHJpdGVfbWluX2NkY2xrKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9w
bGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCit7CisJdW5zaWduZWQgaW50IHNyY193LCBkc3Rfdywg
cGl4ZWxfcmF0ZTsKKwl1bnNpZ25lZCBpbnQgbnVtLCBkZW47CisKKwkvKgorCSAqIE5vdGUgdGhh
dCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRzIGZvciBib3RoCisJICogaG9yaXpvbnRh
bCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25zY2FsaW5nIGZhY3RvcnMuCisJICogUHJl
LUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNpZGVyIHRoZSBob3Jpem9udGFsCisJICog
ZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9yZSB0aGF0IGFuZCBqdXN0IGNvbnNpZGVy
CisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8KKwlwaXhlbF9yYXRlID0gY3J0Y19zdGF0
ZS0+cGl4ZWxfcmF0ZTsKKworCXNyY193ID0gZHJtX3JlY3Rfd2lkdGgoJnBsYW5lX3N0YXRlLT5i
YXNlLnNyYykgPj4gMTY7CisJZHN0X3cgPSBkcm1fcmVjdF93aWR0aCgmcGxhbmVfc3RhdGUtPmJh
c2UuZHN0KTsKKworCWlmIChzcmNfdyAhPSBkc3RfdykKKwkJaXZiX3BsYW5lX3JhdGlvX3NjYWxp
bmcoY3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUsICZudW0sICZkZW4pOworCWVsc2UKKwkJaXZiX3Bs
YW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlLCAmbnVtLCAmZGVuKTsKKworCS8qIEhv
cml6b250YWwgZG93bnNjYWxpbmcgbGltaXRzIHRoZSBtYXhpbXVtIHBpeGVsIHJhdGUgKi8KKwlk
c3RfdyA9IG1pbihzcmNfdywgZHN0X3cpOworCisJcmV0dXJuIERJVl9ST1VORF9VUF9VTEwobXVs
X3UzMl91MzIocGl4ZWxfcmF0ZSwgbnVtICogc3JjX3cpLAorCQkJCWRlbiAqIGRzdF93KTsKK30K
Kworc3RhdGljIHZvaWQgaHN3X3BsYW5lX3JhdGlvKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlLAorCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAq
cGxhbmVfc3RhdGUsCisJCQkgICAgdW5zaWduZWQgaW50ICpudW0sIHVuc2lnbmVkIGludCAqZGVu
KQoreworCXU4IGFjdGl2ZV9wbGFuZXMgPSBjcnRjX3N0YXRlLT5hY3RpdmVfcGxhbmVzICYgfkJJ
VChQTEFORV9DVVJTT1IpOworCWNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gcGxh
bmVfc3RhdGUtPmJhc2UuZmI7CisJdW5zaWduZWQgaW50IGNwcCA9IGZiLT5mb3JtYXQtPmNwcFsw
XTsKKworCWlmIChod2VpZ2h0OChhY3RpdmVfcGxhbmVzKSA9PSAyKSB7CisJCXN3aXRjaCAoY3Bw
KSB7CisJCWNhc2UgODoKKwkJCSpudW0gPSAxMDsKKwkJCSpkZW4gPSA4OworCQkJYnJlYWs7CisJ
CWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9
IGVsc2UgeworCQlzd2l0Y2ggKGNwcCkgeworCQljYXNlIDg6CisJCQkqbnVtID0gOTsKKwkJCSpk
ZW4gPSA4OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJCSpkZW4gPSAx
OworCQkJYnJlYWs7CisJCX0KKwl9Cit9CisKK2ludCBoc3dfcGxhbmVfbWluX2NkY2xrKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJY29uc3Qgc3RydWN0IGlu
dGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKK3sKKwl1bnNpZ25lZCBpbnQgcGl4ZWxfcmF0
ZSA9IGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisJdW5zaWduZWQgaW50IG51bSwgZGVuOworCisJ
aHN3X3BsYW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlLCAmbnVtLCAmZGVuKTsKKwor
CXJldHVybiBESVZfUk9VTkRfVVAocGl4ZWxfcmF0ZSAqIG51bSwgZGVuKTsKK30KKwogc3RhdGlj
IHUzMiBpdmJfc3ByaXRlX2N0bF9jcnRjKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogewogCXUzMiBzcHJjdGwgPSAwOwpAQCAtMTIxMSw2ICsxNDk4LDUzIEBAIGl2
Yl9wbGFuZV9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAlyZXR1cm4g
cmV0OwogfQogCitzdGF0aWMgaW50IGc0eF9zcHJpdGVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFu
ZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCit7CisJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAq
ZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsKKwl1bnNpZ25lZCBpbnQgaHNjYWxlLCBwaXhlbF9y
YXRlOworCXVuc2lnbmVkIGludCBsaW1pdCwgZGVjaW1hdGU7CisKKwkvKgorCSAqIE5vdGUgdGhh
dCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRzIGZvciBib3RoCisJICogaG9yaXpvbnRh
bCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25zY2FsaW5nIGZhY3RvcnMuCisJICogUHJl
LUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNpZGVyIHRoZSBob3Jpem9udGFsCisJICog
ZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9yZSB0aGF0IGFuZCBqdXN0IGNvbnNpZGVy
CisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8KKwlwaXhlbF9yYXRlID0gY3J0Y19zdGF0
ZS0+cGl4ZWxfcmF0ZTsKKworCS8qIEhvcml6b250YWwgZG93bnNjYWxpbmcgbGltaXRzIHRoZSBt
YXhpbXVtIHBpeGVsIHJhdGUgKi8KKwloc2NhbGUgPSBkcm1fcmVjdF9jYWxjX2hzY2FsZSgmcGxh
bmVfc3RhdGUtPmJhc2Uuc3JjLAorCQkJCSAgICAgICZwbGFuZV9zdGF0ZS0+YmFzZS5kc3QsCisJ
CQkJICAgICAgMCwgSU5UX01BWCk7CisJaWYgKGhzY2FsZSA8IDB4MTAwMDApCisJCXJldHVybiBw
aXhlbF9yYXRlOworCisJLyogRGVjaW1hdGlvbiBzdGVwcyBhdCAyeCw0eCw4eCwxNnggKi8KKwlk
ZWNpbWF0ZSA9IGlsb2cyKGhzY2FsZSA+PiAxNik7CisJaHNjYWxlID4+PSBkZWNpbWF0ZTsKKwor
CS8qIFN0YXJ0aW5nIGxpbWl0IGlzIDkwJSBvZiBjZGNsayAqLworCWxpbWl0ID0gOTsKKworCS8q
IC0xMCUgcGVyIGRlY2ltYXRpb24gc3RlcCAqLworCWxpbWl0IC09IGRlY2ltYXRlOworCisJLyog
LTEwJSBmb3IgUkdCICovCisJaWYgKGZiLT5mb3JtYXQtPmNwcFswXSA+PSA0KQorCQlsaW1pdC0t
OyAvKiAtMTAlIGZvciBSR0IgKi8KKworCS8qCisJICogV2Ugc2hvdWxkIGFsc28gZG8gLTEwJSBp
ZiBzcHJpdGUgc2NhbGluZyBpcyBlbmFibGVkCisJICogb24gdGhlIG90aGVyIHBpcGUsIGJ1dCB3
ZSBjYW4ndCByZWFsbHkgY2hlY2sgZm9yIHRoYXQsCisJICogc28gd2UgaWdub3JlIGl0LgorCSAq
LworCisJcmV0dXJuIERJVl9ST1VORF9VUF9VTEwobXVsX3UzMl91MzIocGl4ZWxfcmF0ZSwgMTAg
KiBoc2NhbGUpLAorCQkJCWxpbWl0IDw8IDE2KTsKK30KKwogc3RhdGljIHVuc2lnbmVkIGludAog
ZzR4X3Nwcml0ZV9tYXhfc3RyaWRlKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJCSAgICAg
IHUzMiBwaXhlbF9mb3JtYXQsIHU2NCBtb2RpZmllciwKQEAgLTI0MTMsNiArMjc0Nyw3IEBAIHNr
bF91bml2ZXJzYWxfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAlwbGFuZS0+ZGlzYWJsZV9wbGFuZSA9IHNrbF9kaXNhYmxlX3BsYW5lOwogCXBsYW5lLT5n
ZXRfaHdfc3RhdGUgPSBza2xfcGxhbmVfZ2V0X2h3X3N0YXRlOwogCXBsYW5lLT5jaGVja19wbGFu
ZSA9IHNrbF9wbGFuZV9jaGVjazsKKwlwbGFuZS0+bWluX2NkY2xrID0gc2tsX3BsYW5lX21pbl9j
ZGNsazsKIAlpZiAoaWNsX2lzX252MTJfeV9wbGFuZShwbGFuZV9pZCkpCiAJCXBsYW5lLT51cGRh
dGVfc2xhdmUgPSBpY2xfdXBkYXRlX3NsYXZlOwogCkBAIC0yNTEwLDYgKzI4NDUsNyBAQCBpbnRl
bF9zcHJpdGVfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IAkJcGxhbmUtPmRpc2FibGVfcGxhbmUgPSB2bHZfZGlzYWJsZV9wbGFuZTsKIAkJcGxhbmUtPmdl
dF9od19zdGF0ZSA9IHZsdl9wbGFuZV9nZXRfaHdfc3RhdGU7CiAJCXBsYW5lLT5jaGVja19wbGFu
ZSA9IHZsdl9zcHJpdGVfY2hlY2s7CisJCXBsYW5lLT5taW5fY2RjbGsgPSB2bHZfcGxhbmVfbWlu
X2NkY2xrOwogCiAJCWZvcm1hdHMgPSB2bHZfcGxhbmVfZm9ybWF0czsKIAkJbnVtX2Zvcm1hdHMg
PSBBUlJBWV9TSVpFKHZsdl9wbGFuZV9mb3JtYXRzKTsKQEAgLTI1MjMsNiArMjg1OSwxMSBAQCBp
bnRlbF9zcHJpdGVfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAkJcGxhbmUtPmdldF9od19zdGF0ZSA9IGl2Yl9wbGFuZV9nZXRfaHdfc3RhdGU7CiAJCXBs
YW5lLT5jaGVja19wbGFuZSA9IGc0eF9zcHJpdGVfY2hlY2s7CiAKKwkJaWYgKElTX0JST0FEV0VM
TChkZXZfcHJpdikgfHwgSVNfSEFTV0VMTChkZXZfcHJpdikpCisJCQlwbGFuZS0+bWluX2NkY2xr
ID0gaHN3X3BsYW5lX21pbl9jZGNsazsKKwkJZWxzZQorCQkJcGxhbmUtPm1pbl9jZGNsayA9IGl2
Yl9zcHJpdGVfbWluX2NkY2xrOworCiAJCWZvcm1hdHMgPSBzbmJfcGxhbmVfZm9ybWF0czsKIAkJ
bnVtX2Zvcm1hdHMgPSBBUlJBWV9TSVpFKHNuYl9wbGFuZV9mb3JtYXRzKTsKIAkJbW9kaWZpZXJz
ID0gaTl4eF9wbGFuZV9mb3JtYXRfbW9kaWZpZXJzOwpAQCAtMjUzNCw2ICsyODc1LDcgQEAgaW50
ZWxfc3ByaXRlX3BsYW5lX2NyZWF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CiAJCXBsYW5lLT5kaXNhYmxlX3BsYW5lID0gZzR4X2Rpc2FibGVfcGxhbmU7CiAJCXBsYW5lLT5n
ZXRfaHdfc3RhdGUgPSBnNHhfcGxhbmVfZ2V0X2h3X3N0YXRlOwogCQlwbGFuZS0+Y2hlY2tfcGxh
bmUgPSBnNHhfc3ByaXRlX2NoZWNrOworCQlwbGFuZS0+bWluX2NkY2xrID0gZzR4X3Nwcml0ZV9t
aW5fY2RjbGs7CiAKIAkJbW9kaWZpZXJzID0gaTl4eF9wbGFuZV9mb3JtYXRfbW9kaWZpZXJzOwog
CQlpZiAoSVNfR0VOKGRldl9wcml2LCA2KSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfc3ByaXRlLmgKaW5kZXggN2RhYmMzMTcxMGFlLi5hYTAyNjMwMjdkYzggMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaApAQCAtNTUsNCArNTUs
MTEgQEAgc3RhdGljIGlubGluZSBib29sIGljbF9pc19oZHJfcGxhbmUoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAogCQlpY2xfaGRyX3BsYW5lX21hc2soKSAmIEJJVChwbGFuZV9p
ZCk7CiB9CiAKK2ludCBpdmJfcGxhbmVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAorCQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpw
bGFuZV9zdGF0ZSk7CitpbnQgaHN3X3BsYW5lX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0
ZSAqcGxhbmVfc3RhdGUpOworaW50IHZsdl9wbGFuZV9taW5fY2RjbGsoY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVf
c3RhdGUgKnBsYW5lX3N0YXRlKTsKKwogI2VuZGlmIC8qIF9fSU5URUxfU1BSSVRFX0hfXyAqLwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9kcnYuaAppbmRleCBjMGJiZjdhNjA5NDQuLjk5OWFkMzE2NmNkMSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgKQEAgLTkxMCw2ICs5MTAsOCBAQCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSB7CiAKIAlzdHJ1Y3QgaW50ZWxfY3J0Y193bV9zdGF0ZSB3bTsKIAorCWlu
dCBtaW5fY2RjbGtbSTkxNV9NQVhfUExBTkVTXTsKKwogCXUzMiBkYXRhX3JhdGVbSTkxNV9NQVhf
UExBTkVTXTsKIAogCS8qIEdhbW1hIG1vZGUgcHJvZ3JhbW1lZCBvbiB0aGUgcGlwZSAqLwpAQCAt
MTA0Niw2ICsxMDQ4LDggQEAgc3RydWN0IGludGVsX3BsYW5lIHsKIAlib29sICgqZ2V0X2h3X3N0
YXRlKShzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lLCBlbnVtIHBpcGUgKnBpcGUpOwogCWludCAo
KmNoZWNrX3BsYW5lKShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAg
IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpOworCWludCAoKm1pbl9jZGNs
aykoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgY29uc3Qg
c3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSk7CiB9OwogCiBzdHJ1Y3QgaW50
ZWxfd2F0ZXJtYXJrX3BhcmFtcyB7Ci0tIAoyLjIxLjAKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVs
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
