Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5887322DFD3
	for <lists+dri-devel@lfdr.de>; Sun, 26 Jul 2020 17:03:08 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9226189EB4;
	Sun, 26 Jul 2020 15:02:46 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
X-Greylist: delayed 426 seconds by postgrey-1.36 at gabe;
 Fri, 24 Jul 2020 12:50:13 UTC
Received: from esa2.hc3370-68.iphmx.com (esa2.hc3370-68.iphmx.com
 [216.71.145.153])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D6E1A6E970
 for <dri-devel@lists.freedesktop.org>; Fri, 24 Jul 2020 12:50:13 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=citrix.com; s=securemail; t=1595595014;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=LnrKUU0E0L2NEx45muJDP2eR0l7cIb2vvmXBeLMbICs=;
 b=cIBtSJa2Nvk8MtW65gyeD3dI6znqIDOVr5LDbrZ9h97qDmeFLJCAYOAs
 10wRaQWdGOVI9eDg2BHf4kNSMB4AZdpyVqWs9e+0aOYk9UQc7IX1CuLRD
 b8zmVP9mMKTMTe3cYWpi8WfDuKghvVyEswXlUDazE14ZkEUXlWWN3I4o1 I=;
Authentication-Results: esa2.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none
IronPort-SDR: WfBQbZ/B8RjixznMe135h8G4op5I57LLr6cNhd+2OlPg5iZoQzntVR2fvI66FzZ1wlsu2aGkR4
 ZTXryKKaEGGOgpNI6NUmNv9sIISAdllRW8pF5Wsw0jnCf0Un1Q0JwhxiUG2N/GLyNmw6VI40PG
 ziD5YP1SssIvYKgACa/1Ty0AuogXr9+achvpsOZqLB9Nwq7ifesdt/ZozyCHzUASG4GdOluU++
 8bvRw7dRXdla4XWmbl7wasqEPit5RMymzZx9vV0MT4FkQlksJDfa6kf7HV3p6eTnXhFRXgyk7p
 3jQ=
X-SBRS: 2.7
X-MesageID: 23139916
X-Ironport-Server: esa2.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.75,390,1589256000"; d="scan'208";a="23139916"
From: Roger Pau Monne <roger.pau@citrix.com>
To: <linux-kernel@vger.kernel.org>
Subject: [PATCH v2 4/4] xen: add helpers to allocate unpopulated memory
Date: Fri, 24 Jul 2020 14:42:41 +0200
Message-ID: <20200724124241.48208-5-roger.pau@citrix.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20200724124241.48208-1-roger.pau@citrix.com>
References: <20200724124241.48208-1-roger.pau@citrix.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Sun, 26 Jul 2020 15:02:45 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wl@xen.org>,
 Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>,
 David Airlie <airlied@linux.ie>, Yan
 Yankovskyi <yyankovskyi@gmail.com>, David Hildenbrand <david@redhat.com>,
 dri-devel@lists.freedesktop.org, Michal Hocko <mhocko@kernel.org>,
 linux-mm@kvack.org, xen-devel@lists.xenproject.org,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Dan Carpenter <dan.carpenter@oracle.com>,
 Roger Pau Monne <roger.pau@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VG8gYmUgdXNlZCBpbiBvcmRlciB0byBjcmVhdGUgZm9yZWlnbiBtYXBwaW5ncy4gVGhpcyBpcyBi
YXNlZCBvbiB0aGUKWk9ORV9ERVZJQ0UgZmFjaWxpdHkgd2hpY2ggaXMgdXNlZCBieSBwZXJzaXN0
ZW50IG1lbW9yeSBkZXZpY2VzIGluCm9yZGVyIHRvIGNyZWF0ZSBzdHJ1Y3QgcGFnZXMgYW5kIGtl
cm5lbCB2aXJ0dWFsIG1hcHBpbmdzIGZvciB0aGUgSU9NRU0KYXJlYXMgb2Ygc3VjaCBkZXZpY2Vz
LiBOb3RlIHRoYXQgb24ga2VybmVscyB3aXRob3V0IHN1cHBvcnQgZm9yClpPTkVfREVWSUNFIFhl
biB3aWxsIGZhbGxiYWNrIHRvIHVzZSBiYWxsb29uZWQgcGFnZXMgaW4gb3JkZXIgdG8KY3JlYXRl
IGZvcmVpZ24gbWFwcGluZ3MuCgpUaGUgbmV3bHkgYWRkZWQgaGVscGVycyB1c2UgdGhlIHNhbWUg
cGFyYW1ldGVycyBhcyB0aGUgZXhpc3RpbmcKe2FsbG9jL2ZyZWV9X3hlbmJhbGxvb25lZF9wYWdl
cyBmdW5jdGlvbnMsIHdoaWNoIGFsbG93cyBmb3IgaW4tcGxhY2UKcmVwbGFjZW1lbnQgb2YgdGhl
IGNhbGxlcnMuIE9uY2UgYSBtZW1vcnkgcmVnaW9uIGhhcyBiZWVuIGFkZGVkIHRvIGJlCnVzZWQg
YXMgc2NyYXRjaCBtYXBwaW5nIHNwYWNlIGl0IHdpbGwgbm8gbG9uZ2VyIGJlIHJlbGVhc2VkLCBh
bmQgcGFnZXMKcmV0dXJuZWQgYXJlIGtlcHQgaW4gYSBsaW5rZWQgbGlzdC4gVGhpcyBhbGxvd3Mg
dG8gaGF2ZSBhIGJ1ZmZlciBvZgpwYWdlcyBhbmQgcHJldmVudHMgcmVzb3J0aW5nIHRvIGZyZXF1
ZW50IGFkZGl0aW9ucyBhbmQgcmVtb3ZhbHMgb2YKcmVnaW9ucy4KCklmIGVuYWJsZWQgKGJlY2F1
c2UgWk9ORV9ERVZJQ0UgaXMgc3VwcG9ydGVkKSB0aGUgdXNhZ2Ugb2YgdGhlIG5ldwpmdW5jdGlv
bmFsaXR5IHVudGFuZ2xlcyBYZW4gYmFsbG9vbiBhbmQgUkFNIGhvdHBsdWcgZnJvbSB0aGUgdXNh
Z2Ugb2YKdW5wb3B1bGF0ZWQgcGh5c2ljYWwgbWVtb3J5IHJhbmdlcyB0byBtYXAgZm9yZWlnbiBw
YWdlcywgd2hpY2ggaXMgdGhlCmNvcnJlY3QgdGhpbmcgdG8gZG8gaW4gb3JkZXIgdG8gYXZvaWQg
bWFwcGluZ3Mgb2YgZm9yZWlnbiBwYWdlcyBkZXBlbmQKb24gbWVtb3J5IGhvdHBsdWcuCgpTaWdu
ZWQtb2ZmLWJ5OiBSb2dlciBQYXUgTW9ubsOpIDxyb2dlci5wYXVAY2l0cml4LmNvbT4KLS0tCkkn
dmUgbm90IGFkZGVkIGEgbmV3IG1lbW9yeV90eXBlIHR5cGUgYW5kIGp1c3QgdXNlZApNRU1PUllf
REVWSUNFX0RFVkRBWCB3aGljaCBzZWVtcyB0byBiZSB3aGF0IHdlIHdhbnQgZm9yIHN1Y2ggbWVt
b3J5CnJlZ2lvbnMuIEknbSB1bnN1cmUgd2hldGhlciBhYnVzaW5nIHRoaXMgdHlwZSBpcyBmaW5l
LCBvciBpZiBJIHNob3VsZAppbnN0ZWFkIGFkZCBhIHNwZWNpZmljIHR5cGUsIG1heWJlIE1FTU9S
WV9ERVZJQ0VfR0VORVJJQz8gSSBkb24ndAp0aGluayB3ZSBzaG91bGQgYmUgdXNpbmcgYSBzcGVj
aWZpYyBYZW4gdHlwZSBhdCBhbGwuCi0tLQpDYzogT2xla3NhbmRyIEFuZHJ1c2hjaGVua28gPG9s
ZWtzYW5kcl9hbmRydXNoY2hlbmtvQGVwYW0uY29tPgpDYzogRGF2aWQgQWlybGllIDxhaXJsaWVk
QGxpbnV4LmllPgpDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNoPgpDYzogQm9yaXMg
T3N0cm92c2t5IDxib3Jpcy5vc3Ryb3Zza3lAb3JhY2xlLmNvbT4KQ2M6IEp1ZXJnZW4gR3Jvc3Mg
PGpncm9zc0BzdXNlLmNvbT4KQ2M6IFN0ZWZhbm8gU3RhYmVsbGluaSA8c3N0YWJlbGxpbmlAa2Vy
bmVsLm9yZz4KQ2M6IERhbiBDYXJwZW50ZXIgPGRhbi5jYXJwZW50ZXJAb3JhY2xlLmNvbT4KQ2M6
IFJvZ2VyIFBhdSBNb25uZSA8cm9nZXIucGF1QGNpdHJpeC5jb20+CkNjOiBXZWkgTGl1IDx3bEB4
ZW4ub3JnPgpDYzogWWFuIFlhbmtvdnNreWkgPHl5YW5rb3Zza3lpQGdtYWlsLmNvbT4KQ2M6IGRy
aS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKQ2M6IHhlbi1kZXZlbEBsaXN0cy54ZW5wcm9q
ZWN0Lm9yZwpDYzogbGludXgtbW1Aa3ZhY2sub3JnCkNjOiBEYXZpZCBIaWxkZW5icmFuZCA8ZGF2
aWRAcmVkaGF0LmNvbT4KQ2M6IE1pY2hhbCBIb2NrbyA8bWhvY2tvQGtlcm5lbC5vcmc+Ci0tLQog
ZHJpdmVycy9ncHUvZHJtL3hlbi94ZW5fZHJtX2Zyb250X2dlbS5jIHwgICA4ICstCiBkcml2ZXJz
L3hlbi9NYWtlZmlsZSAgICAgICAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy94ZW4vYmFs
bG9vbi5jICAgICAgICAgICAgICAgICAgIHwgICA0ICstCiBkcml2ZXJzL3hlbi9ncmFudC10YWJs
ZS5jICAgICAgICAgICAgICAgfCAgIDQgKy0KIGRyaXZlcnMveGVuL3ByaXZjbWQuYyAgICAgICAg
ICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy94ZW4vdW5wb3B1bGF0ZWQtYWxsb2MuYyAgICAg
ICAgIHwgMjIyICsrKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy94ZW4veGVuYnVzL3hl
bmJ1c19jbGllbnQuYyAgICAgIHwgICA2ICstCiBkcml2ZXJzL3hlbi94bGF0ZV9tbXUuYyAgICAg
ICAgICAgICAgICAgfCAgIDQgKy0KIGluY2x1ZGUveGVuL3hlbi5oICAgICAgICAgICAgICAgICAg
ICAgICB8ICAgOCArCiA5IGZpbGVzIGNoYW5nZWQsIDI0NiBpbnNlcnRpb25zKCspLCAxNSBkZWxl
dGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL3hlbi91bnBvcHVsYXRlZC1hbGxv
Yy5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3hlbi94ZW5fZHJtX2Zyb250X2dlbS5j
IGIvZHJpdmVycy9ncHUvZHJtL3hlbi94ZW5fZHJtX2Zyb250X2dlbS5jCmluZGV4IGYwYjg1ZTA5
NDExMS4uOWRkMDZlYWU3NjdhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0veGVuL3hlbl9k
cm1fZnJvbnRfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3hlbi94ZW5fZHJtX2Zyb250X2dl
bS5jCkBAIC05OSw4ICs5OSw4IEBAIHN0YXRpYyBzdHJ1Y3QgeGVuX2dlbV9vYmplY3QgKmdlbV9j
cmVhdGUoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgc2l6ZV90IHNpemUpCiAJCSAqIGFsbG9jYXRl
IGJhbGxvb25lZCBwYWdlcyB3aGljaCB3aWxsIGJlIHVzZWQgdG8gbWFwCiAJCSAqIGdyYW50IHJl
ZmVyZW5jZXMgcHJvdmlkZWQgYnkgdGhlIGJhY2tlbmQKIAkJICovCi0JCXJldCA9IGFsbG9jX3hl
bmJhbGxvb25lZF9wYWdlcyh4ZW5fb2JqLT5udW1fcGFnZXMsCi0JCQkJCSAgICAgICB4ZW5fb2Jq
LT5wYWdlcyk7CisJCXJldCA9IHhlbl9hbGxvY191bnBvcHVsYXRlZF9wYWdlcyh4ZW5fb2JqLT5u
dW1fcGFnZXMsCisJCQkJCSAgICAgICAgICB4ZW5fb2JqLT5wYWdlcyk7CiAJCWlmIChyZXQgPCAw
KSB7CiAJCQlEUk1fRVJST1IoIkNhbm5vdCBhbGxvY2F0ZSAlenUgYmFsbG9vbmVkIHBhZ2VzOiAl
ZFxuIiwKIAkJCQkgIHhlbl9vYmotPm51bV9wYWdlcywgcmV0KTsKQEAgLTE1Miw4ICsxNTIsOCBA
QCB2b2lkIHhlbl9kcm1fZnJvbnRfZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2VkKHN0cnVjdCBkcm1f
Z2VtX29iamVjdCAqZ2VtX29iaikKIAl9IGVsc2UgewogCQlpZiAoeGVuX29iai0+cGFnZXMpIHsK
IAkJCWlmICh4ZW5fb2JqLT5iZV9hbGxvYykgewotCQkJCWZyZWVfeGVuYmFsbG9vbmVkX3BhZ2Vz
KHhlbl9vYmotPm51bV9wYWdlcywKLQkJCQkJCQl4ZW5fb2JqLT5wYWdlcyk7CisJCQkJeGVuX2Zy
ZWVfdW5wb3B1bGF0ZWRfcGFnZXMoeGVuX29iai0+bnVtX3BhZ2VzLAorCQkJCQkJCSAgIHhlbl9v
YmotPnBhZ2VzKTsKIAkJCQlnZW1fZnJlZV9wYWdlc19hcnJheSh4ZW5fb2JqKTsKIAkJCX0gZWxz
ZSB7CiAJCQkJZHJtX2dlbV9wdXRfcGFnZXMoJnhlbl9vYmotPmJhc2UsCmRpZmYgLS1naXQgYS9k
cml2ZXJzL3hlbi9NYWtlZmlsZSBiL2RyaXZlcnMveGVuL01ha2VmaWxlCmluZGV4IDBkMzIyZjNk
OTBjZC4uNzg4YTVkOWM4ZWYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9NYWtlZmlsZQorKysg
Yi9kcml2ZXJzL3hlbi9NYWtlZmlsZQpAQCAtNDIsMyArNDIsNCBAQCB4ZW4tZ250ZGV2LSQoQ09O
RklHX1hFTl9HTlRERVZfRE1BQlVGKQkrPSBnbnRkZXYtZG1hYnVmLm8KIHhlbi1nbnRhbGxvYy15
CQkJCTo9IGdudGFsbG9jLm8KIHhlbi1wcml2Y21kLXkJCQkJOj0gcHJpdmNtZC5vIHByaXZjbWQt
YnVmLm8KIG9iai0kKENPTkZJR19YRU5fRlJPTlRfUEdESVJfU0hCVUYpCSs9IHhlbi1mcm9udC1w
Z2Rpci1zaGJ1Zi5vCitvYmotJChDT05GSUdfWk9ORV9ERVZJQ0UpCQkrPSB1bnBvcHVsYXRlZC1h
bGxvYy5vCmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9iYWxsb29uLmMgYi9kcml2ZXJzL3hlbi9i
YWxsb29uLmMKaW5kZXggYjFkOGIwMjhiZjgwLi44MTVlZjEwZWIyZmYgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMveGVuL2JhbGxvb24uYworKysgYi9kcml2ZXJzL3hlbi9iYWxsb29uLmMKQEAgLTY1NCw3
ICs2NTQsNyBAQCB2b2lkIGZyZWVfeGVuYmFsbG9vbmVkX3BhZ2VzKGludCBucl9wYWdlcywgc3Ry
dWN0IHBhZ2UgKipwYWdlcykKIH0KIEVYUE9SVF9TWU1CT0woZnJlZV94ZW5iYWxsb29uZWRfcGFn
ZXMpOwogCi0jaWZkZWYgQ09ORklHX1hFTl9QVgorI2lmIGRlZmluZWQoQ09ORklHX1hFTl9QVikg
JiYgIWRlZmluZWQoQ09ORklHX1pPTkVfREVWSUNFKQogc3RhdGljIHZvaWQgX19pbml0IGJhbGxv
b25fYWRkX3JlZ2lvbih1bnNpZ25lZCBsb25nIHN0YXJ0X3BmbiwKIAkJCQkgICAgICB1bnNpZ25l
ZCBsb25nIHBhZ2VzKQogewpAQCAtNzA4LDcgKzcwOCw3IEBAIHN0YXRpYyBpbnQgX19pbml0IGJh
bGxvb25faW5pdCh2b2lkKQogCXJlZ2lzdGVyX3N5c2N0bF90YWJsZSh4ZW5fcm9vdCk7CiAjZW5k
aWYKIAotI2lmZGVmIENPTkZJR19YRU5fUFYKKyNpZiBkZWZpbmVkKENPTkZJR19YRU5fUFYpICYm
ICFkZWZpbmVkKENPTkZJR19aT05FX0RFVklDRSkKIAl7CiAJCWludCBpOwogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3hlbi9ncmFudC10YWJsZS5jIGIvZHJpdmVycy94ZW4vZ3JhbnQtdGFibGUuYwpp
bmRleCA4ZDA2YmYxY2MzNDcuLjUyM2RjZGYzOWNjOSAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4v
Z3JhbnQtdGFibGUuYworKysgYi9kcml2ZXJzL3hlbi9ncmFudC10YWJsZS5jCkBAIC04MDEsNyAr
ODAxLDcgQEAgaW50IGdudHRhYl9hbGxvY19wYWdlcyhpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdl
ICoqcGFnZXMpCiB7CiAJaW50IHJldDsKIAotCXJldCA9IGFsbG9jX3hlbmJhbGxvb25lZF9wYWdl
cyhucl9wYWdlcywgcGFnZXMpOworCXJldCA9IHhlbl9hbGxvY191bnBvcHVsYXRlZF9wYWdlcyhu
cl9wYWdlcywgcGFnZXMpOwogCWlmIChyZXQgPCAwKQogCQlyZXR1cm4gcmV0OwogCkBAIC04MzYs
NyArODM2LDcgQEAgRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX3BhZ2VzX2NsZWFyX3ByaXZhdGUp
Owogdm9pZCBnbnR0YWJfZnJlZV9wYWdlcyhpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFn
ZXMpCiB7CiAJZ250dGFiX3BhZ2VzX2NsZWFyX3ByaXZhdGUobnJfcGFnZXMsIHBhZ2VzKTsKLQlm
cmVlX3hlbmJhbGxvb25lZF9wYWdlcyhucl9wYWdlcywgcGFnZXMpOworCXhlbl9mcmVlX3VucG9w
dWxhdGVkX3BhZ2VzKG5yX3BhZ2VzLCBwYWdlcyk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChnbnR0
YWJfZnJlZV9wYWdlcyk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL3ByaXZjbWQuYyBiL2Ry
aXZlcnMveGVuL3ByaXZjbWQuYwppbmRleCBhMjUwZDExODE0NGEuLjU2MDAwYWI3MDk3NCAxMDA2
NDQKLS0tIGEvZHJpdmVycy94ZW4vcHJpdmNtZC5jCisrKyBiL2RyaXZlcnMveGVuL3ByaXZjbWQu
YwpAQCAtNDI1LDcgKzQyNSw3IEBAIHN0YXRpYyBpbnQgYWxsb2NfZW1wdHlfcGFnZXMoc3RydWN0
IHZtX2FyZWFfc3RydWN0ICp2bWEsIGludCBudW1wZ3MpCiAJaWYgKHBhZ2VzID09IE5VTEwpCiAJ
CXJldHVybiAtRU5PTUVNOwogCi0JcmMgPSBhbGxvY194ZW5iYWxsb29uZWRfcGFnZXMobnVtcGdz
LCBwYWdlcyk7CisJcmMgPSB4ZW5fYWxsb2NfdW5wb3B1bGF0ZWRfcGFnZXMobnVtcGdzLCBwYWdl
cyk7CiAJaWYgKHJjICE9IDApIHsKIAkJcHJfd2FybigiJXMgQ291bGQgbm90IGFsbG9jICVkIHBm
bnMgcmM6JWRcbiIsIF9fZnVuY19fLAogCQkJbnVtcGdzLCByYyk7CkBAIC05MDAsNyArOTAwLDcg
QEAgc3RhdGljIHZvaWQgcHJpdmNtZF9jbG9zZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkK
IAogCXJjID0geGVuX3VubWFwX2RvbWFpbl9nZm5fcmFuZ2Uodm1hLCBudW1nZm5zLCBwYWdlcyk7
CiAJaWYgKHJjID09IDApCi0JCWZyZWVfeGVuYmFsbG9vbmVkX3BhZ2VzKG51bXBncywgcGFnZXMp
OworCQl4ZW5fZnJlZV91bnBvcHVsYXRlZF9wYWdlcyhudW1wZ3MsIHBhZ2VzKTsKIAllbHNlCiAJ
CXByX2NyaXQoInVuYWJsZSB0byB1bm1hcCBNRk4gcmFuZ2U6IGxlYWtpbmcgJWQgcGFnZXMuIHJj
PSVkXG4iLAogCQkJbnVtcGdzLCByYyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi91bnBvcHVs
YXRlZC1hbGxvYy5jIGIvZHJpdmVycy94ZW4vdW5wb3B1bGF0ZWQtYWxsb2MuYwpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmFhYTkxY2VmYmJmOQotLS0gL2Rldi9udWxs
CisrKyBiL2RyaXZlcnMveGVuL3VucG9wdWxhdGVkLWFsbG9jLmMKQEAgLTAsMCArMSwyMjIgQEAK
Ky8qCisgKiBIZWxwZXJzIHRvIGFsbG9jYXRlIHVucG9wdWxhdGVkIG1lbW9yeSBmb3IgZm9yZWln
biBtYXBwaW5ncworICoKKyAqIENvcHlyaWdodCAoYykgMjAyMCwgQ2l0cml4IFN5c3RlbXMgUiZE
CisgKgorICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmli
dXRlIGl0IGFuZC9vcgorICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdl
bmVyYWwgUHVibGljIExpY2Vuc2UgdmVyc2lvbiAyCisgKiBhcyBwdWJsaXNoZWQgYnkgdGhlIEZy
ZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgb3IsIHdoZW4gZGlzdHJpYnV0ZWQKKyAqIHNlcGFyYXRl
bHkgZnJvbSB0aGUgTGludXgga2VybmVsIG9yIGluY29ycG9yYXRlZCBpbnRvIG90aGVyCisgKiBz
b2Z0d2FyZSBwYWNrYWdlcywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGxpY2Vuc2U6CisgKgor
ICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBw
ZXJzb24gb2J0YWluaW5nIGEgY29weQorICogb2YgdGhpcyBzb3VyY2UgZmlsZSAodGhlICJTb2Z0
d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0CisgKiByZXN0cmljdGlvbiwg
aW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9k
aWZ5LAorICogbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBz
ZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsCisgKiBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8g
d2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvCisgKiB0
aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3Rp
Y2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KKyAqIGFs
bCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgorICoKKyAq
IFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFO
WSBLSU5ELCBFWFBSRVNTIE9SCisgKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVE
IFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKKyAqIEZJVE5FU1MgRk9SIEEg
UEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxM
IFRIRQorICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBD
TEFJTSwgREFNQUdFUyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElP
TiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcKKyAqIEZST00sIE9VVCBP
RiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIg
REVBTElOR1MKKyAqIElOIFRIRSBTT0ZUV0FSRS4KKyAqLworCisjaW5jbHVkZSA8bGludXgvZXJy
bm8uaD4KKyNpbmNsdWRlIDxsaW51eC9nZnAuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4K
KyNpbmNsdWRlIDxsaW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L21lbXJlbWFwLmg+CisjaW5j
bHVkZSA8bGludXgvc2xhYi5oPgorCisjaW5jbHVkZSA8YXNtL3BhZ2UuaD4KKworI2luY2x1ZGUg
PHhlbi9wYWdlLmg+CisjaW5jbHVkZSA8eGVuL3hlbi5oPgorCitzdGF0aWMgREVGSU5FX01VVEVY
KGxvY2spOworc3RhdGljIExJU1RfSEVBRChsaXN0KTsKK3N0YXRpYyB1bnNpZ25lZCBpbnQgY291
bnQ7CisKK3N0YXRpYyBpbnQgZmlsbCh1bnNpZ25lZCBpbnQgbnJfcGFnZXMpCit7CisJc3RydWN0
IGRldl9wYWdlbWFwICpwZ21hcDsKKwl2b2lkICp2YWRkcjsKKwl1bnNpZ25lZCBpbnQgaSwgYWxs
b2NfcGFnZXMgPSByb3VuZF91cChucl9wYWdlcywgUEFHRVNfUEVSX1NFQ1RJT04pOworCWludCBu
aWQsIHJldDsKKworCXBnbWFwID0ga3phbGxvYyhzaXplb2YoKnBnbWFwKSwgR0ZQX0tFUk5FTCk7
CisJaWYgKCFwZ21hcCkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlwZ21hcC0+dHlwZSA9IE1FTU9S
WV9ERVZJQ0VfREVWREFYOworCXBnbWFwLT5yZXMubmFtZSA9ICJYRU4gU0NSQVRDSCI7CisJcGdt
YXAtPnJlcy5mbGFncyA9IElPUkVTT1VSQ0VfTUVNIHwgSU9SRVNPVVJDRV9CVVNZOworCisJcmV0
ID0gYWxsb2NhdGVfcmVzb3VyY2UoJmlvbWVtX3Jlc291cmNlLCAmcGdtYXAtPnJlcywKKwkJCQlh
bGxvY19wYWdlcyAqIFBBR0VfU0laRSwgMCwgLTEsCisJCQkJUEFHRVNfUEVSX1NFQ1RJT04gKiBQ
QUdFX1NJWkUsIE5VTEwsIE5VTEwpOworCWlmIChyZXQgPCAwKSB7CisJCXByX2VycigiQ2Fubm90
IGFsbG9jYXRlIG5ldyBJT01FTSByZXNvdXJjZVxuIik7CisJCWtmcmVlKHBnbWFwKTsKKwkJcmV0
dXJuIHJldDsKKwl9CisKKwluaWQgPSBtZW1vcnlfYWRkX3BoeXNhZGRyX3RvX25pZChwZ21hcC0+
cmVzLnN0YXJ0KTsKKworI2lmZGVmIENPTkZJR19YRU5fSEFWRV9QVk1NVQorCS8qCisJICogV2Ug
ZG9uJ3Qgc3VwcG9ydCBQViBNTVUgd2hlbiBMaW51eCBhbmQgWGVuIGlzIHVzaW5nCisJICogZGlm
ZmVyZW50IHBhZ2UgZ3JhbnVsYXJpdHkuCisJICovCisJQlVJTERfQlVHX09OKFhFTl9QQUdFX1NJ
WkUgIT0gUEFHRV9TSVpFKTsKKworICAgICAgICAvKgorICAgICAgICAgKiBtZW1yZW1hcCB3aWxs
IGJ1aWxkIHBhZ2UgdGFibGVzIGZvciB0aGUgbmV3IG1lbW9yeSBzbworICAgICAgICAgKiB0aGUg
cDJtIG11c3QgY29udGFpbiBpbnZhbGlkIGVudHJpZXMgc28gdGhlIGNvcnJlY3QKKyAgICAgICAg
ICogbm9uLXByZXNlbnQgUFRFcyB3aWxsIGJlIHdyaXR0ZW4uCisgICAgICAgICAqCisgICAgICAg
ICAqIElmIGEgZmFpbHVyZSBvY2N1cnMsIHRoZSBvcmlnaW5hbCAoaWRlbnRpdHkpIHAybSBlbnRy
aWVzCisgICAgICAgICAqIGFyZSBub3QgcmVzdG9yZWQgc2luY2UgdGhpcyByZWdpb24gaXMgbm93
IGtub3duIG5vdCB0bworICAgICAgICAgKiBjb25mbGljdCB3aXRoIGFueSBkZXZpY2VzLgorICAg
ICAgICAgKi8KKwlpZiAoIXhlbl9mZWF0dXJlKFhFTkZFQVRfYXV0b190cmFuc2xhdGVkX3BoeXNt
YXApKSB7CisJCXhlbl9wZm5fdCBwZm4gPSBQRk5fRE9XTihwZ21hcC0+cmVzLnN0YXJ0KTsKKwor
CQlmb3IgKGkgPSAwOyBpIDwgYWxsb2NfcGFnZXM7IGkrKykgeworCQkJaWYgKCFzZXRfcGh5c190
b19tYWNoaW5lKHBmbiArIGksIElOVkFMSURfUDJNX0VOVFJZKSkgeworCQkJCXByX3dhcm4oInNl
dF9waHlzX3RvX21hY2hpbmUoKSBmYWlsZWQsIG5vIG1lbW9yeSBhZGRlZFxuIik7CisJCQkJcmVs
ZWFzZV9yZXNvdXJjZSgmcGdtYXAtPnJlcyk7CisJCQkJa2ZyZWUocGdtYXApOworCQkJCXJldHVy
biAtRU5PTUVNOworCQkJfQorICAgICAgICAgICAgICAgIH0KKwl9CisjZW5kaWYKKworCXZhZGRy
ID0gbWVtcmVtYXBfcGFnZXMocGdtYXAsIG5pZCk7CisJaWYgKElTX0VSUih2YWRkcikpIHsKKwkJ
cHJfZXJyKCJDYW5ub3QgcmVtYXAgbWVtb3J5IHJhbmdlXG4iKTsKKwkJcmVsZWFzZV9yZXNvdXJj
ZSgmcGdtYXAtPnJlcyk7CisJCWtmcmVlKHBnbWFwKTsKKwkJcmV0dXJuIFBUUl9FUlIodmFkZHIp
OworCX0KKworCWZvciAoaSA9IDA7IGkgPCBhbGxvY19wYWdlczsgaSsrKSB7CisJCXN0cnVjdCBw
YWdlICpwZyA9IHZpcnRfdG9fcGFnZSh2YWRkciArIFBBR0VfU0laRSAqIGkpOworCisJCUJVR19P
TighdmlydF9hZGRyX3ZhbGlkKHZhZGRyICsgUEFHRV9TSVpFICogaSkpOworCQlsaXN0X2FkZCgm
cGctPmxydSwgJmxpc3QpOworCQljb3VudCsrOworCX0KKworCXJldHVybiAwOworfQorCisvKioK
KyAqIHhlbl9hbGxvY191bnBvcHVsYXRlZF9wYWdlcyAtIGFsbG9jIHVucG9wdWxhdGVkIHBhZ2Vz
CisgKiBAbnJfcGFnZXM6IE51bWJlciBvZiBwYWdlcworICogQHBhZ2VzOiBwYWdlcyByZXR1cm5l
ZAorICogQHJldHVybiAwIG9uIHN1Y2Nlc3MsIGVycm9yIG90aGVyd2lzZQorICovCitpbnQgeGVu
X2FsbG9jX3VucG9wdWxhdGVkX3BhZ2VzKHVuc2lnbmVkIGludCBucl9wYWdlcywgc3RydWN0IHBh
Z2UgKipwYWdlcykKK3sKKwl1bnNpZ25lZCBpbnQgaTsKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4
X2xvY2soJmxvY2spOworCWlmIChjb3VudCA8IG5yX3BhZ2VzKSB7CisJCXJldCA9IGZpbGwobnJf
cGFnZXMpOworCQlpZiAocmV0KQorCQkJZ290byBvdXQ7CisJfQorCisJZm9yIChpID0gMDsgaSA8
IG5yX3BhZ2VzOyBpKyspIHsKKwkJc3RydWN0IHBhZ2UgKnBnID0gbGlzdF9maXJzdF9lbnRyeV9v
cl9udWxsKCZsaXN0LCBzdHJ1Y3QgcGFnZSwKKwkJCQkJCQkgICBscnUpOworCisJCUJVR19PTigh
cGcpOworCQlsaXN0X2RlbCgmcGctPmxydSk7CisJCWNvdW50LS07CisJCXBhZ2VzW2ldID0gcGc7
CisKKyNpZmRlZiBDT05GSUdfWEVOX0hBVkVfUFZNTVUKKwkJLyoKKwkJICogV2UgZG9uJ3Qgc3Vw
cG9ydCBQViBNTVUgd2hlbiBMaW51eCBhbmQgWGVuIGlzIHVzaW5nCisJCSAqIGRpZmZlcmVudCBw
YWdlIGdyYW51bGFyaXR5LgorCQkgKi8KKwkJQlVJTERfQlVHX09OKFhFTl9QQUdFX1NJWkUgIT0g
UEFHRV9TSVpFKTsKKworCQlpZiAoIXhlbl9mZWF0dXJlKFhFTkZFQVRfYXV0b190cmFuc2xhdGVk
X3BoeXNtYXApKSB7CisJCQlyZXQgPSB4ZW5fYWxsb2NfcDJtX2VudHJ5KHBhZ2VfdG9fcGZuKHBn
KSk7CisJCQlpZiAocmV0IDwgMCkgeworCQkJCXVuc2lnbmVkIGludCBqOworCisJCQkJZm9yIChq
ID0gMDsgaiA8PSBpOyBqKyspIHsKKwkJCQkJbGlzdF9hZGQoJnBhZ2VzW2pdLT5scnUsICZsaXN0
KTsKKwkJCQkJY291bnQrKzsKKwkJCQl9CisJCQkJZ290byBvdXQ7CisJCQl9CisJCX0KKyNlbmRp
ZgorCX0KKworb3V0OgorCW11dGV4X3VubG9jaygmbG9jayk7CisJcmV0dXJuIHJldDsKK30KK0VY
UE9SVF9TWU1CT0woeGVuX2FsbG9jX3VucG9wdWxhdGVkX3BhZ2VzKTsKKworLyoqCisgKiB4ZW5f
ZnJlZV91bnBvcHVsYXRlZF9wYWdlcyAtIHJldHVybiB1bnBvcHVsYXRlZCBwYWdlcworICogQG5y
X3BhZ2VzOiBOdW1iZXIgb2YgcGFnZXMKKyAqIEBwYWdlczogcGFnZXMgdG8gcmV0dXJuCisgKi8K
K3ZvaWQgeGVuX2ZyZWVfdW5wb3B1bGF0ZWRfcGFnZXModW5zaWduZWQgaW50IG5yX3BhZ2VzLCBz
dHJ1Y3QgcGFnZSAqKnBhZ2VzKQoreworCXVuc2lnbmVkIGludCBpOworCisJbXV0ZXhfbG9jaygm
bG9jayk7CisJZm9yIChpID0gMDsgaSA8IG5yX3BhZ2VzOyBpKyspIHsKKwkJbGlzdF9hZGQoJnBh
Z2VzW2ldLT5scnUsICZsaXN0KTsKKwkJY291bnQrKzsKKwl9CisJbXV0ZXhfdW5sb2NrKCZsb2Nr
KTsKK30KK0VYUE9SVF9TWU1CT0woeGVuX2ZyZWVfdW5wb3B1bGF0ZWRfcGFnZXMpOworCisjaWZk
ZWYgQ09ORklHX1hFTl9QVgorc3RhdGljIGludCBfX2luaXQgaW5pdCh2b2lkKQoreworCXVuc2ln
bmVkIGludCBpOworCisJaWYgKCF4ZW5fZG9tYWluKCkpCisJCXJldHVybiAtRU5PREVWOworCisJ
LyoKKwkgKiBJbml0aWFsaXplIHdpdGggcGFnZXMgZnJvbSB0aGUgZXh0cmEgbWVtb3J5IHJlZ2lv
bnMgKHNlZQorCSAqIGFyY2gveDg2L3hlbi9zZXR1cC5jKS4KKwkgKi8KKwlmb3IgKGkgPSAwOyBp
IDwgWEVOX0VYVFJBX01FTV9NQVhfUkVHSU9OUzsgaSsrKSB7CisJCXVuc2lnbmVkIGludCBqOwor
CisJCWZvciAoaiA9IDA7IGogPCB4ZW5fZXh0cmFfbWVtW2ldLm5fcGZuczsgaisrKSB7CisJCQlz
dHJ1Y3QgcGFnZSAqcGcgPQorCQkJCXBmbl90b19wYWdlKHhlbl9leHRyYV9tZW1baV0uc3RhcnRf
cGZuICsgaik7CisKKwkJCWxpc3RfYWRkKCZwZy0+bHJ1LCAmbGlzdCk7CisJCQljb3VudCsrOwor
CQl9CisJfQorCisJcmV0dXJuIDA7Cit9CitzdWJzeXNfaW5pdGNhbGwoaW5pdCk7CisjZW5kaWYK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL3hlbmJ1cy94ZW5idXNfY2xpZW50LmMgYi9kcml2ZXJz
L3hlbi94ZW5idXMveGVuYnVzX2NsaWVudC5jCmluZGV4IDc4NmZiYjdkOGJlMC4uNzBiNmM0Nzgw
ZmJkIDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi94ZW5idXMveGVuYnVzX2NsaWVudC5jCisrKyBi
L2RyaXZlcnMveGVuL3hlbmJ1cy94ZW5idXNfY2xpZW50LmMKQEAgLTYxNSw3ICs2MTUsNyBAQCBz
dGF0aWMgaW50IHhlbmJ1c19tYXBfcmluZ19odm0oc3RydWN0IHhlbmJ1c19kZXZpY2UgKmRldiwK
IAlib29sIGxlYWtlZCA9IGZhbHNlOwogCXVuc2lnbmVkIGludCBucl9wYWdlcyA9IFhFTkJVU19Q
QUdFUyhucl9ncmVmcyk7CiAKLQllcnIgPSBhbGxvY194ZW5iYWxsb29uZWRfcGFnZXMobnJfcGFn
ZXMsIG5vZGUtPmh2bS5wYWdlcyk7CisJZXJyID0geGVuX2FsbG9jX3VucG9wdWxhdGVkX3BhZ2Vz
KG5yX3BhZ2VzLCBub2RlLT5odm0ucGFnZXMpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0X2VycjsK
IApAQCAtNjU2LDcgKzY1Niw3IEBAIHN0YXRpYyBpbnQgeGVuYnVzX21hcF9yaW5nX2h2bShzdHJ1
Y3QgeGVuYnVzX2RldmljZSAqZGV2LAogCQkJIGFkZHIsIG5yX3BhZ2VzKTsKICBvdXRfZnJlZV9i
YWxsb29uZWRfcGFnZXM6CiAJaWYgKCFsZWFrZWQpCi0JCWZyZWVfeGVuYmFsbG9vbmVkX3BhZ2Vz
KG5yX3BhZ2VzLCBub2RlLT5odm0ucGFnZXMpOworCQl4ZW5fZnJlZV91bnBvcHVsYXRlZF9wYWdl
cyhucl9wYWdlcywgbm9kZS0+aHZtLnBhZ2VzKTsKICBvdXRfZXJyOgogCXJldHVybiBlcnI7CiB9
CkBAIC04NTIsNyArODUyLDcgQEAgc3RhdGljIGludCB4ZW5idXNfdW5tYXBfcmluZ19odm0oc3Ry
dWN0IHhlbmJ1c19kZXZpY2UgKmRldiwgdm9pZCAqdmFkZHIpCiAJCQkgICAgICAgaW5mby5hZGRy
cyk7CiAJaWYgKCFydikgewogCQl2dW5tYXAodmFkZHIpOwotCQlmcmVlX3hlbmJhbGxvb25lZF9w
YWdlcyhucl9wYWdlcywgbm9kZS0+aHZtLnBhZ2VzKTsKKwkJeGVuX2ZyZWVfdW5wb3B1bGF0ZWRf
cGFnZXMobnJfcGFnZXMsIG5vZGUtPmh2bS5wYWdlcyk7CiAJfQogCWVsc2UKIAkJV0FSTigxLCAi
TGVha2luZyAlcCwgc2l6ZSAldSBwYWdlKHMpXG4iLCB2YWRkciwgbnJfcGFnZXMpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy94ZW4veGxhdGVfbW11LmMgYi9kcml2ZXJzL3hlbi94bGF0ZV9tbXUuYwpp
bmRleCA3YjEwNzdmMGFiY2IuLjM0NzQyYzZlMTg5ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4v
eGxhdGVfbW11LmMKKysrIGIvZHJpdmVycy94ZW4veGxhdGVfbW11LmMKQEAgLTIzMiw3ICsyMzIs
NyBAQCBpbnQgX19pbml0IHhlbl94bGF0ZV9tYXBfYmFsbG9vbmVkX3BhZ2VzKHhlbl9wZm5fdCAq
KmdmbnMsIHZvaWQgKip2aXJ0LAogCQlrZnJlZShwYWdlcyk7CiAJCXJldHVybiAtRU5PTUVNOwog
CX0KLQlyYyA9IGFsbG9jX3hlbmJhbGxvb25lZF9wYWdlcyhucl9wYWdlcywgcGFnZXMpOworCXJj
ID0geGVuX2FsbG9jX3VucG9wdWxhdGVkX3BhZ2VzKG5yX3BhZ2VzLCBwYWdlcyk7CiAJaWYgKHJj
KSB7CiAJCXByX3dhcm4oIiVzIENvdWxkbid0IGJhbGxvb24gYWxsb2MgJWxkIHBhZ2VzIHJjOiVk
XG4iLCBfX2Z1bmNfXywKIAkJCW5yX3BhZ2VzLCByYyk7CkBAIC0yNDksNyArMjQ5LDcgQEAgaW50
IF9faW5pdCB4ZW5feGxhdGVfbWFwX2JhbGxvb25lZF9wYWdlcyh4ZW5fcGZuX3QgKipnZm5zLCB2
b2lkICoqdmlydCwKIAlpZiAoIXZhZGRyKSB7CiAJCXByX3dhcm4oIiVzIENvdWxkbid0IG1hcCAl
bGQgcGFnZXMgcmM6JWRcbiIsIF9fZnVuY19fLAogCQkJbnJfcGFnZXMsIHJjKTsKLQkJZnJlZV94
ZW5iYWxsb29uZWRfcGFnZXMobnJfcGFnZXMsIHBhZ2VzKTsKKwkJeGVuX2ZyZWVfdW5wb3B1bGF0
ZWRfcGFnZXMobnJfcGFnZXMsIHBhZ2VzKTsKIAkJa2ZyZWUocGFnZXMpOwogCQlrZnJlZShwZm5z
KTsKIAkJcmV0dXJuIC1FTk9NRU07CmRpZmYgLS1naXQgYS9pbmNsdWRlL3hlbi94ZW4uaCBiL2lu
Y2x1ZGUveGVuL3hlbi5oCmluZGV4IDE5YTcyZjU5MWUyYi4uYWEzM2JjMGQ5MzNjIDEwMDY0NAot
LS0gYS9pbmNsdWRlL3hlbi94ZW4uaAorKysgYi9pbmNsdWRlL3hlbi94ZW4uaApAQCAtNTIsNCAr
NTIsMTIgQEAgYm9vbCB4ZW5fYmlvdmVjX3BoeXNfbWVyZ2VhYmxlKGNvbnN0IHN0cnVjdCBiaW9f
dmVjICp2ZWMxLAogZXh0ZXJuIHU2NCB4ZW5fc2F2ZWRfbWF4X21lbV9zaXplOwogI2VuZGlmCiAK
KyNpZmRlZiBDT05GSUdfWk9ORV9ERVZJQ0UKK2ludCB4ZW5fYWxsb2NfdW5wb3B1bGF0ZWRfcGFn
ZXModW5zaWduZWQgaW50IG5yX3BhZ2VzLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzKTsKK3ZvaWQgeGVu
X2ZyZWVfdW5wb3B1bGF0ZWRfcGFnZXModW5zaWduZWQgaW50IG5yX3BhZ2VzLCBzdHJ1Y3QgcGFn
ZSAqKnBhZ2VzKTsKKyNlbHNlCisjZGVmaW5lIHhlbl9hbGxvY191bnBvcHVsYXRlZF9wYWdlcyBh
bGxvY194ZW5iYWxsb29uZWRfcGFnZXMKKyNkZWZpbmUgeGVuX2ZyZWVfdW5wb3B1bGF0ZWRfcGFn
ZXMgZnJlZV94ZW5iYWxsb29uZWRfcGFnZXMKKyNlbmRpZgorCiAjZW5kaWYJLyogX1hFTl9YRU5f
SCAqLwotLSAKMi4yNy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmkt
ZGV2ZWwK
