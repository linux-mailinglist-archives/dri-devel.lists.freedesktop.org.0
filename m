Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 99B849D21F
	for <lists+dri-devel@lfdr.de>; Mon, 26 Aug 2019 16:57:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 50D3089FDD;
	Mon, 26 Aug 2019 14:57:44 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-wr1-x441.google.com (mail-wr1-x441.google.com
 [IPv6:2a00:1450:4864:20::441])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2D82A89F9F
 for <dri-devel@lists.freedesktop.org>; Mon, 26 Aug 2019 14:57:42 +0000 (UTC)
Received: by mail-wr1-x441.google.com with SMTP id k2so15653532wrq.2
 for <dri-devel@lists.freedesktop.org>; Mon, 26 Aug 2019 07:57:42 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=5cVaQRT3UrzN/JVV2XBVPxxZtPaTn2yeMscXhWBD97M=;
 b=ZRc18NCh/etg/KsHqPQ9orCHDij85hCEqFire0Cds09TcRVQsSJG0HSkXEzcn2EKK+
 xlvc0ymPBbpgr6Vf6RWZPwfTSgKUziYtJRNUwCLHoOhJ2O8r74cG9mktpflkd5tGhnye
 /0Ia6jQXG6J0/5Hob8lEHPZ0EJT1DulXQDisrgoD8kpT8DlZPd9YUIgCVzzEqFmShPl7
 Nf1ht+fS8vcxxLyRP/+D5YeNP9ksa/zNCT8vIAPHeLayVRqeC29Vt18Jlut0imC59XoB
 izFxkoVT9xN06kdMOwDgeC20jYJdM5/+1Dlw1g9KcHx4N4ir0NJmiL93QJ7atlZu/vaO
 FU9w==
X-Gm-Message-State: APjAAAVSgQ4PaOM+p34PR9tjGMmzhC/KDbU2Ga68NqnIcGT35Ow7Na00
 FiEy3sxUHNgR6+IFq+yv28RglOGV
X-Google-Smtp-Source: APXvYqyWIzLaGf99wJW8u9kuaJeq6mkstYlMH3nAOjnbq//vnTaRll1BDIpfI19qxA1p7Hrg3g2Aaw==
X-Received: by 2002:adf:9e09:: with SMTP id u9mr22979725wre.169.1566831459938; 
 Mon, 26 Aug 2019 07:57:39 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:b0e3:7a12:98e5:ca6])
 by smtp.gmail.com with ESMTPSA id z8sm9865624wmi.7.2019.08.26.07.57.39
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 26 Aug 2019 07:57:39 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: dri-devel@lists.freedesktop.org, chris@chris-wilson.co.uk,
 daniel.vetter@ffwll.ch, sumit.semwal@linaro.org,
 linux-media@vger.kernel.org, linaro-mm-sig@lists.linaro.org
Subject: [PATCH 8/9] dma-buf/resv: use new dma_fence_array based implementation
Date: Mon, 26 Aug 2019 16:57:30 +0200
Message-Id: <20190826145731.1725-9-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190826145731.1725-1-christian.koenig@amd.com>
References: <20190826145731.1725-1-christian.koenig@amd.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references:mime-version
 :content-transfer-encoding;
 bh=5cVaQRT3UrzN/JVV2XBVPxxZtPaTn2yeMscXhWBD97M=;
 b=aIKDE70lebG/WBYIKMHpK2XwXCWkcCpEna8tYNovj0n/Ts0UM7Sqvwp498ltgXgVJ6
 /ptiFiEkGZHy/BkFxZ1tViY8/h9tqR4VWMNBpXbPdS61CGS9X3xYi/cvT1CbfUaJHah1
 Dy2i7Kuxv4wPHqKgjLegwVqwGX8KDam95ryQpYbhZ2Jhe9x8TBjUvaLKscd5x4T7w26A
 ObAlF010atmxUQt3Er3bMZbMKNCXkyHWyYEvbuNByBehOfpPJQgnNWqHn1WMi07oycxg
 PxBrc7dn9c6RCMpVd8gQISkekJUY+6BXya0VpoFNagn6ulDURmKiswvn0AqNZUz5Et0k
 o3bw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VXNlIHRoZSBuZXcgZG1hX2ZlbmNlX2FycmF5IGJhc2VkIGltcGxlbWVudGF0aW9uIGZvciBzaGFy
ZWQgZmVuY2VzLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtv
ZW5pZ0BhbWQuY29tPgotLS0KIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMgICAgICAgICAgICAg
ICAgICAgICB8IDEwMiArLS0tCiBkcml2ZXJzL2RtYS1idWYvZG1hLXJlc3YuYyAgICAgICAgICAg
ICAgICAgICAgfCA0OTIgKysrLS0tLS0tLS0tLS0tLS0tCiAuLi4vZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYyAgfCAgNTIgKy0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9kbWFfYnVmLmMgICB8ICAzNiArLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X3N5bmMuYyAgICAgIHwgIDE3ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfdHRtLmMgICAgICAgfCAgMTkgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0
bmF2aXZfZ2VtLmMgICAgICAgICB8ICAxOCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX2J1c3kuYyAgICAgIHwgIDIwICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bV9iYXRjaF9wb29sLmMgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dlbS5j
ICAgICAgICAgICAgICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL25vdXZlYXUvbm91dmVh
dV9mZW5jZS5jICAgICAgIHwgIDE4ICstCiBkcml2ZXJzL2dwdS9kcm0vcXhsL3F4bF9kZWJ1Z2Zz
LmMgICAgICAgICAgICAgfCAgMTIgKy0KIGRyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX3N5
bmMuYyAgICAgICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fYm8uYyAgICAg
ICAgICAgICAgICAgIHwgIDEzICstCiBpbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmggICAgICAgICAg
ICAgICAgICAgICAgfCAgNDAgKy0KIDE1IGZpbGVzIGNoYW5nZWQsIDE4NiBpbnNlcnRpb25zKCsp
LCA2ODMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1idWYu
YyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKaW5kZXggNDMzZDkxZDcxMGU0Li41MWMxN2Rm
YzhjZWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKKysrIGIvZHJpdmVy
cy9kbWEtYnVmL2RtYS1idWYuYwpAQCAtMTUsNiArMTUsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3Ns
YWIuaD4KICNpbmNsdWRlIDxsaW51eC9kbWEtYnVmLmg+CiAjaW5jbHVkZSA8bGludXgvZG1hLWZl
bmNlLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLWFycmF5Lmg+CiAjaW5jbHVkZSA8bGlu
dXgvYW5vbl9pbm9kZXMuaD4KICNpbmNsdWRlIDxsaW51eC9leHBvcnQuaD4KICNpbmNsdWRlIDxs
aW51eC9kZWJ1Z2ZzLmg+CkBAIC0xOTQsMTIgKzE5NSwxMCBAQCBzdGF0aWMgdm9pZCBkbWFfYnVm
X3BvbGxfY2Ioc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UsIHN0cnVjdCBkbWFfZmVuY2VfY2IgKmNi
KQogCiBzdGF0aWMgX19wb2xsX3QgZG1hX2J1Zl9wb2xsKHN0cnVjdCBmaWxlICpmaWxlLCBwb2xs
X3RhYmxlICpwb2xsKQogeworCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlX2V4Y2wsICpzaGFyZWQ7
CiAJc3RydWN0IGRtYV9idWYgKmRtYWJ1ZjsKIAlzdHJ1Y3QgZG1hX3Jlc3YgKnJlc3Y7Ci0Jc3Ry
dWN0IGRtYV9yZXN2X2xpc3QgKmZvYmo7Ci0Jc3RydWN0IGRtYV9mZW5jZSAqZmVuY2VfZXhjbDsK
IAlfX3BvbGxfdCBldmVudHM7Ci0JdW5zaWduZWQgc2hhcmVkX2NvdW50LCBzZXE7CiAKIAlkbWFi
dWYgPSBmaWxlLT5wcml2YXRlX2RhdGE7CiAJaWYgKCFkbWFidWYgfHwgIWRtYWJ1Zi0+cmVzdikK
QEAgLTIxMywyNiArMjEyLDE1IEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFfYnVmX3BvbGwoc3RydWN0
IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKnBvbGwpCiAJaWYgKCFldmVudHMpCiAJCXJldHVybiAw
OwogCi1yZXRyeToKLQlzZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZyZXN2LT5zZXEpOwogCXJj
dV9yZWFkX2xvY2soKTsKKwlmZW5jZV9leGNsID0gZG1hX2ZlbmNlX2dldF9yY3Vfc2FmZSgmcmVz
di0+ZmVuY2VfZXhjbCk7CisJc2hhcmVkID0gZG1hX3Jlc3ZfZmVuY2VzX2dldF9yY3UoJnJlc3Yt
PnNoYXJlZCk7CiAKLQlmb2JqID0gcmN1X2RlcmVmZXJlbmNlKHJlc3YtPmZlbmNlKTsKLQlpZiAo
Zm9iaikKLQkJc2hhcmVkX2NvdW50ID0gZm9iai0+c2hhcmVkX2NvdW50OwotCWVsc2UKLQkJc2hh
cmVkX2NvdW50ID0gMDsKLQlmZW5jZV9leGNsID0gcmN1X2RlcmVmZXJlbmNlKHJlc3YtPmZlbmNl
X2V4Y2wpOwotCWlmIChyZWFkX3NlcWNvdW50X3JldHJ5KCZyZXN2LT5zZXEsIHNlcSkpIHsKLQkJ
cmN1X3JlYWRfdW5sb2NrKCk7Ci0JCWdvdG8gcmV0cnk7Ci0JfQotCi0JaWYgKGZlbmNlX2V4Y2wg
JiYgKCEoZXZlbnRzICYgRVBPTExPVVQpIHx8IHNoYXJlZF9jb3VudCA9PSAwKSkgeworCWlmIChm
ZW5jZV9leGNsICYmICghKGV2ZW50cyAmIEVQT0xMT1VUKSB8fCAhc2hhcmVkKSkgewogCQlzdHJ1
Y3QgZG1hX2J1Zl9wb2xsX2NiX3QgKmRjYiA9ICZkbWFidWYtPmNiX2V4Y2w7CiAJCV9fcG9sbF90
IHBldmVudHMgPSBFUE9MTElOOwogCi0JCWlmIChzaGFyZWRfY291bnQgPT0gMCkKKwkJaWYgKCFz
aGFyZWQpCiAJCQlwZXZlbnRzIHw9IEVQT0xMT1VUOwogCiAJCXNwaW5fbG9ja19pcnEoJmRtYWJ1
Zi0+cG9sbC5sb2NrKTsKQEAgLTI0NCwyOCArMjMyLDIxIEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFf
YnVmX3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKnBvbGwpCiAJCXNwaW5fdW5s
b2NrX2lycSgmZG1hYnVmLT5wb2xsLmxvY2spOwogCiAJCWlmIChldmVudHMgJiBwZXZlbnRzKSB7
Ci0JCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1KGZlbmNlX2V4Y2wpKSB7Ci0JCQkJLyogZm9yY2Ug
YSByZWNoZWNrICovCi0JCQkJZXZlbnRzICY9IH5wZXZlbnRzOwotCQkJCWRtYV9idWZfcG9sbF9j
YihOVUxMLCAmZGNiLT5jYik7Ci0JCQl9IGVsc2UgaWYgKCFkbWFfZmVuY2VfYWRkX2NhbGxiYWNr
KGZlbmNlX2V4Y2wsICZkY2ItPmNiLAotCQkJCQkJCSAgIGRtYV9idWZfcG9sbF9jYikpIHsKKwkJ
CWlmICghZG1hX2ZlbmNlX2FkZF9jYWxsYmFjayhmZW5jZV9leGNsLCAmZGNiLT5jYiwKKwkJCQkJ
CSAgICBkbWFfYnVmX3BvbGxfY2IpKSB7CiAJCQkJZXZlbnRzICY9IH5wZXZlbnRzOwotCQkJCWRt
YV9mZW5jZV9wdXQoZmVuY2VfZXhjbCk7CiAJCQl9IGVsc2UgewogCQkJCS8qCiAJCQkJICogTm8g
Y2FsbGJhY2sgcXVldWVkLCB3YWtlIHVwIGFueSBhZGRpdGlvbmFsCiAJCQkJICogd2FpdGVycy4K
IAkJCQkgKi8KLQkJCQlkbWFfZmVuY2VfcHV0KGZlbmNlX2V4Y2wpOwogCQkJCWRtYV9idWZfcG9s
bF9jYihOVUxMLCAmZGNiLT5jYik7CiAJCQl9CiAJCX0KIAl9CiAKLQlpZiAoKGV2ZW50cyAmIEVQ
T0xMT1VUKSAmJiBzaGFyZWRfY291bnQgPiAwKSB7CisJaWYgKChldmVudHMgJiBFUE9MTE9VVCkg
JiYgc2hhcmVkKSB7CiAJCXN0cnVjdCBkbWFfYnVmX3BvbGxfY2JfdCAqZGNiID0gJmRtYWJ1Zi0+
Y2Jfc2hhcmVkOwotCQlpbnQgaTsKIAogCQkvKiBPbmx5IHF1ZXVlIGEgbmV3IGNhbGxiYWNrIGlm
IG5vIGV2ZW50IGhhcyBmaXJlZCB5ZXQgKi8KIAkJc3Bpbl9sb2NrX2lycSgmZG1hYnVmLT5wb2xs
LmxvY2spOwpAQCAtMjc4LDM1ICsyNTksMTkgQEAgc3RhdGljIF9fcG9sbF90IGRtYV9idWZfcG9s
bChzdHJ1Y3QgZmlsZSAqZmlsZSwgcG9sbF90YWJsZSAqcG9sbCkKIAkJaWYgKCEoZXZlbnRzICYg
RVBPTExPVVQpKQogCQkJZ290byBvdXQ7CiAKLQkJZm9yIChpID0gMDsgaSA8IHNoYXJlZF9jb3Vu
dDsgKytpKSB7Ci0JCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZShm
b2JqLT5zaGFyZWRbaV0pOwotCi0JCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1KGZlbmNlKSkgewot
CQkJCS8qCi0JCQkJICogZmVuY2UgcmVmY291bnQgZHJvcHBlZCB0byB6ZXJvLCB0aGlzIG1lYW5z
Ci0JCQkJICogdGhhdCBmb2JqIGhhcyBiZWVuIGZyZWVkCi0JCQkJICoKLQkJCQkgKiBjYWxsIGRt
YV9idWZfcG9sbF9jYiBhbmQgZm9yY2UgYSByZWNoZWNrIQotCQkJCSAqLwotCQkJCWV2ZW50cyAm
PSB+RVBPTExPVVQ7Ci0JCQkJZG1hX2J1Zl9wb2xsX2NiKE5VTEwsICZkY2ItPmNiKTsKLQkJCQli
cmVhazsKLQkJCX0KLQkJCWlmICghZG1hX2ZlbmNlX2FkZF9jYWxsYmFjayhmZW5jZSwgJmRjYi0+
Y2IsCi0JCQkJCQkgICAgZG1hX2J1Zl9wb2xsX2NiKSkgewotCQkJCWRtYV9mZW5jZV9wdXQoZmVu
Y2UpOwotCQkJCWV2ZW50cyAmPSB+RVBPTExPVVQ7Ci0JCQkJYnJlYWs7Ci0JCQl9Ci0JCQlkbWFf
ZmVuY2VfcHV0KGZlbmNlKTsKLQkJfQotCi0JCS8qIE5vIGNhbGxiYWNrIHF1ZXVlZCwgd2FrZSB1
cCBhbnkgYWRkaXRpb25hbCB3YWl0ZXJzLiAqLwotCQlpZiAoaSA9PSBzaGFyZWRfY291bnQpCisJ
CWlmICghZG1hX2ZlbmNlX2FkZF9jYWxsYmFjayhzaGFyZWQsICZkY2ItPmNiLAorCQkJCQkgICAg
ZG1hX2J1Zl9wb2xsX2NiKSkgeworCQkJZXZlbnRzICY9IH5FUE9MTE9VVDsKKwkJfSBlbHNlIHsK
KwkJCS8qIE5vIGNhbGxiYWNrIHF1ZXVlZCwgd2FrZSB1cCBhbnkgYWRkaXRpb25hbCB3YWl0ZXJz
LiAqLwogCQkJZG1hX2J1Zl9wb2xsX2NiKE5VTEwsICZkY2ItPmNiKTsKKwkJfQogCX0KIAogb3V0
OgorCWRtYV9mZW5jZV9wdXQoZmVuY2VfZXhjbCk7CisJZG1hX2ZlbmNlX3B1dChzaGFyZWQpOwor
CiAJcmN1X3JlYWRfdW5sb2NrKCk7CiAJcmV0dXJuIGV2ZW50czsKIH0KQEAgLTExNTQsMTEgKzEx
MTksMTAgQEAgc3RhdGljIGludCBkbWFfYnVmX2RlYnVnX3Nob3coc3RydWN0IHNlcV9maWxlICpz
LCB2b2lkICp1bnVzZWQpCiAJaW50IHJldDsKIAlzdHJ1Y3QgZG1hX2J1ZiAqYnVmX29iajsKIAlz
dHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2hfb2JqOworCXN0cnVjdCBkbWFfZmVuY2Vf
YXJyYXlfY3Vyc29yIGN1cnNvcjsKIAlzdHJ1Y3QgZG1hX3Jlc3YgKnJvYmo7Ci0Jc3RydWN0IGRt
YV9yZXN2X2xpc3QgKmZvYmo7Ci0Jc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0JdW5zaWduZWQg
c2VxOwotCWludCBjb3VudCA9IDAsIGF0dGFjaF9jb3VudCwgc2hhcmVkX2NvdW50LCBpOworCXN0
cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCAqc2hhcmVkOworCWludCBjb3VudCA9IDAsIGF0dGFjaF9j
b3VudDsKIAlzaXplX3Qgc2l6ZSA9IDA7CiAKIAlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGli
bGUoJmRiX2xpc3QubG9jayk7CkBAIC0xMTg4LDMyICsxMTUyLDIwIEBAIHN0YXRpYyBpbnQgZG1h
X2J1Zl9kZWJ1Z19zaG93KHN0cnVjdCBzZXFfZmlsZSAqcywgdm9pZCAqdW51c2VkKQogCQkJCWJ1
Zl9vYmotPm5hbWUgPzogIiIpOwogCiAJCXJvYmogPSBidWZfb2JqLT5yZXN2OwotCQl3aGlsZSAo
dHJ1ZSkgewotCQkJc2VxID0gcmVhZF9zZXFjb3VudF9iZWdpbigmcm9iai0+c2VxKTsKLQkJCXJj
dV9yZWFkX2xvY2soKTsKLQkJCWZvYmogPSByY3VfZGVyZWZlcmVuY2Uocm9iai0+ZmVuY2UpOwot
CQkJc2hhcmVkX2NvdW50ID0gZm9iaiA/IGZvYmotPnNoYXJlZF9jb3VudCA6IDA7Ci0JCQlmZW5j
ZSA9IHJjdV9kZXJlZmVyZW5jZShyb2JqLT5mZW5jZV9leGNsKTsKLQkJCWlmICghcmVhZF9zZXFj
b3VudF9yZXRyeSgmcm9iai0+c2VxLCBzZXEpKQotCQkJCWJyZWFrOwotCQkJcmN1X3JlYWRfdW5s
b2NrKCk7Ci0JCX0KLQorCQlyY3VfcmVhZF9sb2NrKCk7CisJCWZlbmNlID0gZG1hX3Jlc3ZfZ2V0
X2V4Y2wocm9iaik7CisJCXNoYXJlZCA9IGRtYV9yZXN2X2ZlbmNlc19nZXRfcmN1KCZyb2JqLT5z
aGFyZWQpOwogCQlpZiAoZmVuY2UpCiAJCQlzZXFfcHJpbnRmKHMsICJcdEV4Y2x1c2l2ZSBmZW5j
ZTogJXMgJXMgJXNzaWduYWxsZWRcbiIsCiAJCQkJICAgZmVuY2UtPm9wcy0+Z2V0X2RyaXZlcl9u
YW1lKGZlbmNlKSwKIAkJCQkgICBmZW5jZS0+b3BzLT5nZXRfdGltZWxpbmVfbmFtZShmZW5jZSks
CiAJCQkJICAgZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKGZlbmNlKSA/ICIiIDogInVuIik7Ci0JCWZv
ciAoaSA9IDA7IGkgPCBzaGFyZWRfY291bnQ7IGkrKykgewotCQkJZmVuY2UgPSByY3VfZGVyZWZl
cmVuY2UoZm9iai0+c2hhcmVkW2ldKTsKLQkJCWlmICghZG1hX2ZlbmNlX2dldF9yY3UoZmVuY2Up
KQotCQkJCWNvbnRpbnVlOwotCQkJc2VxX3ByaW50ZihzLCAiXHRTaGFyZWQgZmVuY2U6ICVzICVz
ICVzc2lnbmFsbGVkXG4iLAorCQlkbWFfZmVuY2VfYXJyYXlfZm9yX2VhY2goZmVuY2UsIGN1cnNv
ciwgc2hhcmVkKQorCQkJc2VxX3ByaW50ZihzLCAiXHRSZWFkZXJzIGZlbmNlOiAlcyAlcyAlc3Np
Z25hbGxlZFxuIiwKIAkJCQkgICBmZW5jZS0+b3BzLT5nZXRfZHJpdmVyX25hbWUoZmVuY2UpLAog
CQkJCSAgIGZlbmNlLT5vcHMtPmdldF90aW1lbGluZV9uYW1lKGZlbmNlKSwKIAkJCQkgICBkbWFf
ZmVuY2VfaXNfc2lnbmFsZWQoZmVuY2UpID8gIiIgOiAidW4iKTsKLQkJCWRtYV9mZW5jZV9wdXQo
ZmVuY2UpOwotCQl9CisJCWRtYV9mZW5jZV9wdXQoc2hhcmVkKTsKIAkJcmN1X3JlYWRfdW5sb2Nr
KCk7CiAKIAkJc2VxX3B1dHMocywgIlx0QXR0YWNoZWQgRGV2aWNlczpcbiIpOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1yZXN2LmMgYi9kcml2ZXJzL2RtYS1idWYvZG1hLXJlc3Yu
YwppbmRleCBkNjdlYWEzZmE2NTAuLjdmYTBlODZiNGU3NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9k
bWEtYnVmL2RtYS1yZXN2LmMKKysrIGIvZHJpdmVycy9kbWEtYnVmL2RtYS1yZXN2LmMKQEAgLTIz
Niw0NiArMjM2LDYgQEAgdm9pZCBkbWFfcmVzdl9mZW5jZXNfY29tbWl0KHN0cnVjdCBkbWFfcmVz
diAqb2JqLAogfQogRVhQT1JUX1NZTUJPTChkbWFfcmVzdl9mZW5jZXNfY29tbWl0KTsKIAotLyoq
Ci0gKiBkbWFfcmVzdl9saXN0X2FsbG9jIC0gYWxsb2NhdGUgZmVuY2UgbGlzdAotICogQHNoYXJl
ZF9tYXg6IG51bWJlciBvZiBmZW5jZXMgd2UgbmVlZCBzcGFjZSBmb3IKLSAqCi0gKiBBbGxvY2F0
ZSBhIG5ldyBkbWFfcmVzdl9saXN0IGFuZCBtYWtlIHN1cmUgdG8gY29ycmVjdGx5IGluaXRpYWxp
emUKLSAqIHNoYXJlZF9tYXguCi0gKi8KLXN0YXRpYyBzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZG1h
X3Jlc3ZfbGlzdF9hbGxvYyh1bnNpZ25lZCBpbnQgc2hhcmVkX21heCkKLXsKLQlzdHJ1Y3QgZG1h
X3Jlc3ZfbGlzdCAqbGlzdDsKLQotCWxpc3QgPSBrbWFsbG9jKG9mZnNldG9mKHR5cGVvZigqbGlz
dCksIHNoYXJlZFtzaGFyZWRfbWF4XSksIEdGUF9LRVJORUwpOwotCWlmICghbGlzdCkKLQkJcmV0
dXJuIE5VTEw7Ci0KLQlsaXN0LT5zaGFyZWRfbWF4ID0gKGtzaXplKGxpc3QpIC0gb2Zmc2V0b2Yo
dHlwZW9mKCpsaXN0KSwgc2hhcmVkKSkgLwotCQlzaXplb2YoKmxpc3QtPnNoYXJlZCk7Ci0KLQly
ZXR1cm4gbGlzdDsKLX0KLQotLyoqCi0gKiBkbWFfcmVzdl9saXN0X2ZyZWUgLSBmcmVlIGZlbmNl
IGxpc3QKLSAqIEBsaXN0OiBsaXN0IHRvIGZyZWUKLSAqCi0gKiBGcmVlIGEgZG1hX3Jlc3ZfbGlz
dCBhbmQgbWFrZSBzdXJlIHRvIGRyb3AgYWxsIHJlZmVyZW5jZXMuCi0gKi8KLXN0YXRpYyB2b2lk
IGRtYV9yZXN2X2xpc3RfZnJlZShzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqbGlzdCkKLXsKLQl1bnNp
Z25lZCBpbnQgaTsKLQotCWlmICghbGlzdCkKLQkJcmV0dXJuOwotCi0JZm9yIChpID0gMDsgaSA8
IGxpc3QtPnNoYXJlZF9jb3VudDsgKytpKQotCQlkbWFfZmVuY2VfcHV0KHJjdV9kZXJlZmVyZW5j
ZV9wcm90ZWN0ZWQobGlzdC0+c2hhcmVkW2ldLCB0cnVlKSk7Ci0KLQlrZnJlZV9yY3UobGlzdCwg
cmN1KTsKLX0KLQogLyoqCiAgKiBkbWFfcmVzdl9pbml0IC0gaW5pdGlhbGl6ZSBhIHJlc2VydmF0
aW9uIG9iamVjdAogICogQG9iajogdGhlIHJlc2VydmF0aW9uIG9iamVjdApAQCAtMjg2LDggKzI0
Niw4IEBAIHZvaWQgZG1hX3Jlc3ZfaW5pdChzdHJ1Y3QgZG1hX3Jlc3YgKm9iaikKIAogCV9fc2Vx
Y291bnRfaW5pdCgmb2JqLT5zZXEsIHJlc2VydmF0aW9uX3NlcWNvdW50X3N0cmluZywKIAkJCSZy
ZXNlcnZhdGlvbl9zZXFjb3VudF9jbGFzcyk7Ci0JUkNVX0lOSVRfUE9JTlRFUihvYmotPmZlbmNl
LCBOVUxMKTsKIAlSQ1VfSU5JVF9QT0lOVEVSKG9iai0+ZmVuY2VfZXhjbCwgTlVMTCk7CisJZG1h
X3Jlc3ZfZmVuY2VzX2luaXQoJm9iai0+c2hhcmVkKTsKIH0KIEVYUE9SVF9TWU1CT0woZG1hX3Jl
c3ZfaW5pdCk7CiAKQEAgLTI5Nyw3ICsyNTcsNiBAQCBFWFBPUlRfU1lNQk9MKGRtYV9yZXN2X2lu
aXQpOwogICovCiB2b2lkIGRtYV9yZXN2X2Zpbmkoc3RydWN0IGRtYV9yZXN2ICpvYmopCiB7Ci0J
c3RydWN0IGRtYV9yZXN2X2xpc3QgKmZvYmo7CiAJc3RydWN0IGRtYV9mZW5jZSAqZXhjbDsKIAog
CS8qCkBAIC0zMDgsOCArMjY3LDcgQEAgdm9pZCBkbWFfcmVzdl9maW5pKHN0cnVjdCBkbWFfcmVz
diAqb2JqKQogCWlmIChleGNsKQogCQlkbWFfZmVuY2VfcHV0KGV4Y2wpOwogCi0JZm9iaiA9IHJj
dV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQob2JqLT5mZW5jZSwgMSk7Ci0JZG1hX3Jlc3ZfbGlzdF9m
cmVlKGZvYmopOworCWRtYV9yZXN2X2ZlbmNlc19maW5pKCZvYmotPnNoYXJlZCk7CiAJd3dfbXV0
ZXhfZGVzdHJveSgmb2JqLT5sb2NrKTsKIH0KIEVYUE9SVF9TWU1CT0woZG1hX3Jlc3ZfZmluaSk7
CkBAIC0zMjgsNjkgKzI4Niw4IEBAIEVYUE9SVF9TWU1CT0woZG1hX3Jlc3ZfZmluaSk7CiAgKi8K
IGludCBkbWFfcmVzdl9yZXNlcnZlX3NoYXJlZChzdHJ1Y3QgZG1hX3Jlc3YgKm9iaiwgdW5zaWdu
ZWQgaW50IG51bV9mZW5jZXMpCiB7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKm9sZCwgKm5ldzsK
LQl1bnNpZ25lZCBpbnQgaSwgaiwgaywgbWF4OwotCiAJZG1hX3Jlc3ZfYXNzZXJ0X2hlbGQob2Jq
KTsKLQotCW9sZCA9IGRtYV9yZXN2X2dldF9saXN0KG9iaik7Ci0KLQlpZiAob2xkICYmIG9sZC0+
c2hhcmVkX21heCkgewotCQlpZiAoKG9sZC0+c2hhcmVkX2NvdW50ICsgbnVtX2ZlbmNlcykgPD0g
b2xkLT5zaGFyZWRfbWF4KQotCQkJcmV0dXJuIDA7Ci0JCWVsc2UKLQkJCW1heCA9IG1heChvbGQt
PnNoYXJlZF9jb3VudCArIG51bV9mZW5jZXMsCi0JCQkJICBvbGQtPnNoYXJlZF9tYXggKiAyKTsK
LQl9IGVsc2UgewotCQltYXggPSA0OwotCX0KLQotCW5ldyA9IGRtYV9yZXN2X2xpc3RfYWxsb2Mo
bWF4KTsKLQlpZiAoIW5ldykKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQkvKgotCSAqIG5vIG5lZWQg
dG8gYnVtcCBmZW5jZSByZWZjb3VudHMsIHJjdV9yZWFkIGFjY2VzcwotCSAqIHJlcXVpcmVzIHRo
ZSB1c2Ugb2Yga3JlZl9nZXRfdW5sZXNzX3plcm8sIGFuZCB0aGUKLQkgKiByZWZlcmVuY2VzIGZy
b20gdGhlIG9sZCBzdHJ1Y3QgYXJlIGNhcnJpZWQgb3ZlciB0bwotCSAqIHRoZSBuZXcuCi0JICov
Ci0JZm9yIChpID0gMCwgaiA9IDAsIGsgPSBtYXg7IGkgPCAob2xkID8gb2xkLT5zaGFyZWRfY291
bnQgOiAwKTsgKytpKSB7Ci0JCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwotCi0JCWZlbmNlID0g
cmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChvbGQtPnNoYXJlZFtpXSwKLQkJCQkJCSAgZG1hX3Jl
c3ZfaGVsZChvYmopKTsKLQkJaWYgKGRtYV9mZW5jZV9pc19zaWduYWxlZChmZW5jZSkpCi0JCQlS
Q1VfSU5JVF9QT0lOVEVSKG5ldy0+c2hhcmVkWy0ta10sIGZlbmNlKTsKLQkJZWxzZQotCQkJUkNV
X0lOSVRfUE9JTlRFUihuZXctPnNoYXJlZFtqKytdLCBmZW5jZSk7Ci0JfQotCW5ldy0+c2hhcmVk
X2NvdW50ID0gajsKLQotCS8qCi0JICogV2UgYXJlIG5vdCBjaGFuZ2luZyB0aGUgZWZmZWN0aXZl
IHNldCBvZiBmZW5jZXMgaGVyZSBzbyBjYW4KLQkgKiBtZXJlbHkgdXBkYXRlIHRoZSBwb2ludGVy
IHRvIHRoZSBuZXcgYXJyYXk7IGJvdGggZXhpc3RpbmcKLQkgKiByZWFkZXJzIGFuZCBuZXcgcmVh
ZGVycyB3aWxsIHNlZSBleGFjdGx5IHRoZSBzYW1lIHNldCBvZgotCSAqIGFjdGl2ZSAodW5zaWdu
YWxlZCkgc2hhcmVkIGZlbmNlcy4gSW5kaXZpZHVhbCBmZW5jZXMgYW5kIHRoZQotCSAqIG9sZCBh
cnJheSBhcmUgcHJvdGVjdGVkIGJ5IFJDVSBhbmQgc28gd2lsbCBub3QgdmFuaXNoIHVuZGVyCi0J
ICogdGhlIGdhemUgb2YgdGhlIHJjdV9yZWFkX2xvY2soKSByZWFkZXJzLgotCSAqLwotCXJjdV9h
c3NpZ25fcG9pbnRlcihvYmotPmZlbmNlLCBuZXcpOwotCi0JaWYgKCFvbGQpCi0JCXJldHVybiAw
OwotCi0JLyogRHJvcCB0aGUgcmVmZXJlbmNlcyB0byB0aGUgc2lnbmFsZWQgZmVuY2VzICovCi0J
Zm9yIChpID0gazsgaSA8IG1heDsgKytpKSB7Ci0JCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwot
Ci0JCWZlbmNlID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChuZXctPnNoYXJlZFtpXSwKLQkJ
CQkJCSAgZG1hX3Jlc3ZfaGVsZChvYmopKTsKLQkJZG1hX2ZlbmNlX3B1dChmZW5jZSk7Ci0JfQot
CWtmcmVlX3JjdShvbGQsIHJjdSk7Ci0KLQlyZXR1cm4gMDsKKwlyZXR1cm4gZG1hX3Jlc3ZfZmVu
Y2VzX3Jlc2VydmUob2JqLCAmb2JqLT5zaGFyZWQsIG51bV9mZW5jZXMpOwogfQogRVhQT1JUX1NZ
TUJPTChkbWFfcmVzdl9yZXNlcnZlX3NoYXJlZCk7CiAKQEAgLTQwNCw0MSArMzAxLDggQEAgRVhQ
T1JUX1NZTUJPTChkbWFfcmVzdl9yZXNlcnZlX3NoYXJlZCk7CiAgKi8KIHZvaWQgZG1hX3Jlc3Zf
YWRkX3NoYXJlZF9mZW5jZShzdHJ1Y3QgZG1hX3Jlc3YgKm9iaiwgc3RydWN0IGRtYV9mZW5jZSAq
ZmVuY2UpCiB7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKmZvYmo7Ci0Jc3RydWN0IGRtYV9mZW5j
ZSAqb2xkOwotCXVuc2lnbmVkIGludCBpLCBjb3VudDsKLQotCWRtYV9mZW5jZV9nZXQoZmVuY2Up
OwotCiAJZG1hX3Jlc3ZfYXNzZXJ0X2hlbGQob2JqKTsKLQotCWZvYmogPSBkbWFfcmVzdl9nZXRf
bGlzdChvYmopOwotCWNvdW50ID0gZm9iai0+c2hhcmVkX2NvdW50OwotCi0JcHJlZW1wdF9kaXNh
YmxlKCk7Ci0Jd3JpdGVfc2VxY291bnRfYmVnaW4oJm9iai0+c2VxKTsKLQotCWZvciAoaSA9IDA7
IGkgPCBjb3VudDsgKytpKSB7Ci0KLQkJb2xkID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChm
b2JqLT5zaGFyZWRbaV0sCi0JCQkJCQlkbWFfcmVzdl9oZWxkKG9iaikpOwotCQlpZiAob2xkLT5j
b250ZXh0ID09IGZlbmNlLT5jb250ZXh0IHx8Ci0JCSAgICBkbWFfZmVuY2VfaXNfc2lnbmFsZWQo
b2xkKSkKLQkJCWdvdG8gcmVwbGFjZTsKLQl9Ci0KLQlCVUdfT04oZm9iai0+c2hhcmVkX2NvdW50
ID49IGZvYmotPnNoYXJlZF9tYXgpOwotCW9sZCA9IE5VTEw7Ci0JY291bnQrKzsKLQotcmVwbGFj
ZToKLQlSQ1VfSU5JVF9QT0lOVEVSKGZvYmotPnNoYXJlZFtpXSwgZmVuY2UpOwotCS8qIHBvaW50
ZXIgdXBkYXRlIG11c3QgYmUgdmlzaWJsZSBiZWZvcmUgd2UgZXh0ZW5kIHRoZSBzaGFyZWRfY291
bnQgKi8KLQlzbXBfc3RvcmVfbWIoZm9iai0+c2hhcmVkX2NvdW50LCBjb3VudCk7Ci0KLQl3cml0
ZV9zZXFjb3VudF9lbmQoJm9iai0+c2VxKTsKLQlwcmVlbXB0X2VuYWJsZSgpOwotCWRtYV9mZW5j
ZV9wdXQob2xkKTsKKwlkbWFfcmVzdl9mZW5jZXNfYWRkKCZvYmotPnNoYXJlZCwgZmVuY2UpOwog
fQogRVhQT1JUX1NZTUJPTChkbWFfcmVzdl9hZGRfc2hhcmVkX2ZlbmNlKTsKIApAQCAtNDUyLDMy
ICszMTYsMTkgQEAgRVhQT1JUX1NZTUJPTChkbWFfcmVzdl9hZGRfc2hhcmVkX2ZlbmNlKTsKIHZv
aWQgZG1hX3Jlc3ZfYWRkX2V4Y2xfZmVuY2Uoc3RydWN0IGRtYV9yZXN2ICpvYmosIHN0cnVjdCBk
bWFfZmVuY2UgKmZlbmNlKQogewogCXN0cnVjdCBkbWFfZmVuY2UgKm9sZF9mZW5jZSA9IGRtYV9y
ZXN2X2dldF9leGNsKG9iaik7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKm9sZDsKLQl1MzIgaSA9
IDA7CiAKIAlkbWFfcmVzdl9hc3NlcnRfaGVsZChvYmopOwogCi0Jb2xkID0gZG1hX3Jlc3ZfZ2V0
X2xpc3Qob2JqKTsKLQlpZiAob2xkKQotCQlpID0gb2xkLT5zaGFyZWRfY291bnQ7Ci0KLQlpZiAo
ZmVuY2UpCi0JCWRtYV9mZW5jZV9nZXQoZmVuY2UpOworCWRtYV9mZW5jZV9nZXQoZmVuY2UpOwog
CiAJcHJlZW1wdF9kaXNhYmxlKCk7CiAJd3JpdGVfc2VxY291bnRfYmVnaW4oJm9iai0+c2VxKTsK
IAkvKiB3cml0ZV9zZXFjb3VudF9iZWdpbiBwcm92aWRlcyB0aGUgbmVjZXNzYXJ5IG1lbW9yeSBi
YXJyaWVyICovCiAJUkNVX0lOSVRfUE9JTlRFUihvYmotPmZlbmNlX2V4Y2wsIGZlbmNlKTsKLQlp
ZiAob2xkKQotCQlvbGQtPnNoYXJlZF9jb3VudCA9IDA7CisJZG1hX3Jlc3ZfZmVuY2VzX3NldChv
YmosICZvYmotPnNoYXJlZCwgTlVMTCk7CiAJd3JpdGVfc2VxY291bnRfZW5kKCZvYmotPnNlcSk7
CiAJcHJlZW1wdF9lbmFibGUoKTsKIAotCS8qIGlucGxhY2UgdXBkYXRlLCBubyBzaGFyZWQgZmVu
Y2VzICovCi0Jd2hpbGUgKGktLSkKLQkJZG1hX2ZlbmNlX3B1dChyY3VfZGVyZWZlcmVuY2VfcHJv
dGVjdGVkKG9sZC0+c2hhcmVkW2ldLAotCQkJCQkJZG1hX3Jlc3ZfaGVsZChvYmopKSk7Ci0KIAlk
bWFfZmVuY2VfcHV0KG9sZF9mZW5jZSk7CiB9CiBFWFBPUlRfU1lNQk9MKGRtYV9yZXN2X2FkZF9l
eGNsX2ZlbmNlKTsKQEAgLTQ5MCw5ICszNDEsNyBAQCBFWFBPUlRfU1lNQk9MKGRtYV9yZXN2X2Fk
ZF9leGNsX2ZlbmNlKTsKICAqLwogdm9pZCBkbWFfcmVzdl9wcnVuZV9mZW5jZXMoc3RydWN0IGRt
YV9yZXN2ICpvYmopCiB7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKmxpc3Q7CiAJc3RydWN0IGRt
YV9mZW5jZSAqZmVuY2U7Ci0JdW5zaWduZWQgaW50IGk7CiAKIAlkbWFfcmVzdl9hc3NlcnRfaGVs
ZChvYmopOwogCkBAIC01MDIsMjAgKzM1MSw5IEBAIHZvaWQgZG1hX3Jlc3ZfcHJ1bmVfZmVuY2Vz
KHN0cnVjdCBkbWFfcmVzdiAqb2JqKQogCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKIAl9CiAKLQls
aXN0ID0gZG1hX3Jlc3ZfZ2V0X2xpc3Qob2JqKTsKLQlpZiAoIWxpc3QpCi0JCXJldHVybjsKLQot
CWZvciAoaSA9IDA7IGkgPCBsaXN0LT5zaGFyZWRfY291bnQ7ICsraSkgewotCQlmZW5jZSA9IHJj
dV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQobGlzdC0+c2hhcmVkW2ldLAotCQkJCQkJICBkbWFfcmVz
dl9oZWxkKG9iaikpOwotCi0JCWlmICghZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKGZlbmNlKSkKLQkJ
CWNvbnRpbnVlOwotCi0JCVJDVV9JTklUX1BPSU5URVIobGlzdC0+c2hhcmVkW2ldLCBkbWFfZmVu
Y2VfZ2V0X3N0dWIoKSk7Ci0JCWRtYV9mZW5jZV9wdXQoZmVuY2UpOwotCX0KKwlmZW5jZSA9IGRt
YV9yZXN2X2ZlbmNlc19kZXJlZihvYmosICZvYmotPnNoYXJlZCk7CisJaWYgKGZlbmNlICYmIGRt
YV9mZW5jZV9pc19zaWduYWxlZChmZW5jZSkpCisJCWRtYV9yZXN2X2ZlbmNlc19zZXQob2JqLCAm
b2JqLT5zaGFyZWQsIE5VTEwpOwogfQogRVhQT1JUX1NZTUJPTChkbWFfcmVzdl9wcnVuZV9mZW5j
ZXMpOwogCkBAIC01MjgsNzMgKzM2NiwyNSBAQCBFWFBPUlRfU1lNQk9MKGRtYV9yZXN2X3BydW5l
X2ZlbmNlcyk7CiAqLwogaW50IGRtYV9yZXN2X2NvcHlfZmVuY2VzKHN0cnVjdCBkbWFfcmVzdiAq
ZHN0LCBzdHJ1Y3QgZG1hX3Jlc3YgKnNyYykKIHsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqc3Jj
X2xpc3QsICpkc3RfbGlzdDsKLQlzdHJ1Y3QgZG1hX2ZlbmNlICpvbGQsICpuZXc7Ci0JdW5zaWdu
ZWQgaTsKKwlzdHJ1Y3QgZG1hX2ZlbmNlICpvbGQsICpleGNsLCAqc2hhcmVkOwogCiAJZG1hX3Jl
c3ZfYXNzZXJ0X2hlbGQoZHN0KTsKIAogCXJjdV9yZWFkX2xvY2soKTsKLQlzcmNfbGlzdCA9IHJj
dV9kZXJlZmVyZW5jZShzcmMtPmZlbmNlKTsKLQotcmV0cnk6Ci0JaWYgKHNyY19saXN0KSB7Ci0J
CXVuc2lnbmVkIHNoYXJlZF9jb3VudCA9IHNyY19saXN0LT5zaGFyZWRfY291bnQ7Ci0KLQkJcmN1
X3JlYWRfdW5sb2NrKCk7Ci0KLQkJZHN0X2xpc3QgPSBkbWFfcmVzdl9saXN0X2FsbG9jKHNoYXJl
ZF9jb3VudCk7Ci0JCWlmICghZHN0X2xpc3QpCi0JCQlyZXR1cm4gLUVOT01FTTsKLQotCQlyY3Vf
cmVhZF9sb2NrKCk7Ci0JCXNyY19saXN0ID0gcmN1X2RlcmVmZXJlbmNlKHNyYy0+ZmVuY2UpOwot
CQlpZiAoIXNyY19saXN0IHx8IHNyY19saXN0LT5zaGFyZWRfY291bnQgPiBzaGFyZWRfY291bnQp
IHsKLQkJCWtmcmVlKGRzdF9saXN0KTsKLQkJCWdvdG8gcmV0cnk7Ci0JCX0KLQotCQlkc3RfbGlz
dC0+c2hhcmVkX2NvdW50ID0gMDsKLQkJZm9yIChpID0gMDsgaSA8IHNyY19saXN0LT5zaGFyZWRf
Y291bnQ7ICsraSkgewotCQkJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0KLQkJCWZlbmNlID0g
cmN1X2RlcmVmZXJlbmNlKHNyY19saXN0LT5zaGFyZWRbaV0pOwotCQkJaWYgKHRlc3RfYml0KERN
QV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwKLQkJCQkgICAgICZmZW5jZS0+ZmxhZ3MpKQotCQkJ
CWNvbnRpbnVlOwotCi0JCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1KGZlbmNlKSkgewotCQkJCWRt
YV9yZXN2X2xpc3RfZnJlZShkc3RfbGlzdCk7Ci0JCQkJc3JjX2xpc3QgPSByY3VfZGVyZWZlcmVu
Y2Uoc3JjLT5mZW5jZSk7Ci0JCQkJZ290byByZXRyeTsKLQkJCX0KLQotCQkJaWYgKGRtYV9mZW5j
ZV9pc19zaWduYWxlZChmZW5jZSkpIHsKLQkJCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKLQkJCQlj
b250aW51ZTsKLQkJCX0KLQotCQkJcmN1X2Fzc2lnbl9wb2ludGVyKGRzdF9saXN0LT5zaGFyZWRb
ZHN0X2xpc3QtPnNoYXJlZF9jb3VudCsrXSwgZmVuY2UpOwotCQl9Ci0JfSBlbHNlIHsKLQkJZHN0
X2xpc3QgPSBOVUxMOwotCX0KLQotCW5ldyA9IGRtYV9mZW5jZV9nZXRfcmN1X3NhZmUoJnNyYy0+
ZmVuY2VfZXhjbCk7CisJZXhjbCA9IGRtYV9mZW5jZV9nZXRfcmN1X3NhZmUoJnNyYy0+ZmVuY2Vf
ZXhjbCk7CisJc2hhcmVkID0gZG1hX3Jlc3ZfZmVuY2VzX2dldF9yY3UoJnNyYy0+c2hhcmVkKTsK
IAlyY3VfcmVhZF91bmxvY2soKTsKIAotCXNyY19saXN0ID0gZG1hX3Jlc3ZfZ2V0X2xpc3QoZHN0
KTsKIAlvbGQgPSBkbWFfcmVzdl9nZXRfZXhjbChkc3QpOwogCiAJcHJlZW1wdF9kaXNhYmxlKCk7
CiAJd3JpdGVfc2VxY291bnRfYmVnaW4oJmRzdC0+c2VxKTsKIAkvKiB3cml0ZV9zZXFjb3VudF9i
ZWdpbiBwcm92aWRlcyB0aGUgbmVjZXNzYXJ5IG1lbW9yeSBiYXJyaWVyICovCi0JUkNVX0lOSVRf
UE9JTlRFUihkc3QtPmZlbmNlX2V4Y2wsIG5ldyk7Ci0JUkNVX0lOSVRfUE9JTlRFUihkc3QtPmZl
bmNlLCBkc3RfbGlzdCk7CisJUkNVX0lOSVRfUE9JTlRFUihkc3QtPmZlbmNlX2V4Y2wsIGV4Y2wp
OworCWRtYV9yZXN2X2ZlbmNlc19zZXQoZHN0LCAmZHN0LT5zaGFyZWQsIHNoYXJlZCk7CiAJd3Jp
dGVfc2VxY291bnRfZW5kKCZkc3QtPnNlcSk7CiAJcHJlZW1wdF9lbmFibGUoKTsKIAotCWRtYV9y
ZXN2X2xpc3RfZnJlZShzcmNfbGlzdCk7CiAJZG1hX2ZlbmNlX3B1dChvbGQpOwogCiAJcmV0dXJu
IDA7CkBAIC02MTksODYgKzQwOSw1NCBAQCBpbnQgZG1hX3Jlc3ZfZ2V0X2ZlbmNlc19yY3Uoc3Ry
dWN0IGRtYV9yZXN2ICpvYmosCiAJCQkgICAgdW5zaWduZWQgKnBzaGFyZWRfY291bnQsCiAJCQkg
ICAgc3RydWN0IGRtYV9mZW5jZSAqKipwc2hhcmVkKQogewotCXN0cnVjdCBkbWFfZmVuY2UgKipz
aGFyZWQgPSBOVUxMOwotCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlX2V4Y2w7Ci0JdW5zaWduZWQg
aW50IHNoYXJlZF9jb3VudDsKLQlpbnQgcmV0ID0gMTsKLQotCWRvIHsKLQkJc3RydWN0IGRtYV9y
ZXN2X2xpc3QgKmZvYmo7Ci0JCXVuc2lnbmVkIGludCBpLCBzZXE7Ci0JCXNpemVfdCBzeiA9IDA7
Ci0KLQkJc2hhcmVkX2NvdW50ID0gaSA9IDA7Ci0KLQkJcmN1X3JlYWRfbG9jaygpOwotCQlzZXEg
PSByZWFkX3NlcWNvdW50X2JlZ2luKCZvYmotPnNlcSk7Ci0KLQkJZmVuY2VfZXhjbCA9IHJjdV9k
ZXJlZmVyZW5jZShvYmotPmZlbmNlX2V4Y2wpOwotCQlpZiAoZmVuY2VfZXhjbCAmJiAhZG1hX2Zl
bmNlX2dldF9yY3UoZmVuY2VfZXhjbCkpCi0JCQlnb3RvIHVubG9jazsKLQotCQlmb2JqID0gcmN1
X2RlcmVmZXJlbmNlKG9iai0+ZmVuY2UpOwotCQlpZiAoZm9iaikKLQkJCXN6ICs9IHNpemVvZigq
c2hhcmVkKSAqIGZvYmotPnNoYXJlZF9tYXg7Ci0KLQkJaWYgKCFwZmVuY2VfZXhjbCAmJiBmZW5j
ZV9leGNsKQotCQkJc3ogKz0gc2l6ZW9mKCpzaGFyZWQpOwotCi0JCWlmIChzeikgewotCQkJc3Ry
dWN0IGRtYV9mZW5jZSAqKm5zaGFyZWQ7Ci0KLQkJCW5zaGFyZWQgPSBrcmVhbGxvYyhzaGFyZWQs
IHN6LAotCQkJCQkgICBHRlBfTk9XQUlUIHwgX19HRlBfTk9XQVJOKTsKLQkJCWlmICghbnNoYXJl
ZCkgewotCQkJCXJjdV9yZWFkX3VubG9jaygpOwotCi0JCQkJZG1hX2ZlbmNlX3B1dChmZW5jZV9l
eGNsKTsKLQkJCQlmZW5jZV9leGNsID0gTlVMTDsKLQotCQkJCW5zaGFyZWQgPSBrcmVhbGxvYyhz
aGFyZWQsIHN6LCBHRlBfS0VSTkVMKTsKLQkJCQlpZiAobnNoYXJlZCkgewotCQkJCQlzaGFyZWQg
PSBuc2hhcmVkOwotCQkJCQljb250aW51ZTsKLQkJCQl9Ci0KLQkJCQlyZXQgPSAtRU5PTUVNOwot
CQkJCWJyZWFrOwotCQkJfQotCQkJc2hhcmVkID0gbnNoYXJlZDsKLQkJCXNoYXJlZF9jb3VudCA9
IGZvYmogPyBmb2JqLT5zaGFyZWRfY291bnQgOiAwOwotCQkJZm9yIChpID0gMDsgaSA8IHNoYXJl
ZF9jb3VudDsgKytpKSB7Ci0JCQkJc2hhcmVkW2ldID0gcmN1X2RlcmVmZXJlbmNlKGZvYmotPnNo
YXJlZFtpXSk7Ci0JCQkJaWYgKCFkbWFfZmVuY2VfZ2V0X3JjdShzaGFyZWRbaV0pKQotCQkJCQli
cmVhazsKLQkJCX0KLQkJfQorCXN0cnVjdCBkbWFfZmVuY2VfYXJyYXlfY3Vyc29yIGN1cnNvcjsK
KwlzdHJ1Y3QgZG1hX2ZlbmNlICpleGNsLCAqc2hhcmVkLCAqZjsKKwlzdHJ1Y3QgZG1hX2ZlbmNl
ICoqYXJyYXk7CisJdW5zaWduZWQgaW50IGNvdW50OworCisJcmN1X3JlYWRfbG9jaygpOworCWV4
Y2wgPSBkbWFfZmVuY2VfZ2V0X3JjdV9zYWZlKCZvYmotPmZlbmNlX2V4Y2wpOworCXNoYXJlZCA9
IGRtYV9yZXN2X2ZlbmNlc19nZXRfcmN1KCZvYmotPnNoYXJlZCk7CisJcmN1X3JlYWRfdW5sb2Nr
KCk7CiAKLQkJaWYgKGkgIT0gc2hhcmVkX2NvdW50IHx8IHJlYWRfc2VxY291bnRfcmV0cnkoJm9i
ai0+c2VxLCBzZXEpKSB7Ci0JCQl3aGlsZSAoaS0tKQotCQkJCWRtYV9mZW5jZV9wdXQoc2hhcmVk
W2ldKTsKLQkJCWRtYV9mZW5jZV9wdXQoZmVuY2VfZXhjbCk7Ci0JCQlnb3RvIHVubG9jazsKKwlp
ZiAodG9fZG1hX2ZlbmNlX2FycmF5KHNoYXJlZCkpCisJCWNvdW50ID0gdG9fZG1hX2ZlbmNlX2Fy
cmF5KHNoYXJlZCktPm51bV9mZW5jZXM7CisJZWxzZSBpZiAoc2hhcmVkKQorCQljb3VudCA9IDE7
CisJZWxzZQorCQljb3VudCA9IDA7CisKKwlpZiAoZXhjbCAmJiAhcGZlbmNlX2V4Y2wpCisJCSsr
Y291bnQ7CisKKwlpZiAoY291bnQpIHsKKwkJYXJyYXkgPSBrbWFsbG9jX2FycmF5KGNvdW50LCBz
aXplb2YoKnNoYXJlZCksCisJCQkJICAgICAgR0ZQX0tFUk5FTCk7CisJCWlmICghYXJyYXkpIHsK
KwkJCWRtYV9mZW5jZV9wdXQoZXhjbCk7CisJCQlkbWFfZmVuY2VfcHV0KHNoYXJlZCk7CisJCQly
ZXR1cm4gLUVOT01FTTsKIAkJfQogCi0JCXJldCA9IDA7Ci11bmxvY2s6Ci0JCXJjdV9yZWFkX3Vu
bG9jaygpOwotCX0gd2hpbGUgKHJldCk7CisJCWNvdW50ID0gMDsKKwkJZG1hX2ZlbmNlX2FycmF5
X2Zvcl9lYWNoKGYsIGN1cnNvciwgc2hhcmVkKQorCQkJYXJyYXlbY291bnQrK10gPSBkbWFfZmVu
Y2VfZ2V0KGYpOworCQlkbWFfZmVuY2VfcHV0KHNoYXJlZCk7CiAKLQlpZiAocGZlbmNlX2V4Y2wp
Ci0JCSpwZmVuY2VfZXhjbCA9IGZlbmNlX2V4Y2w7Ci0JZWxzZSBpZiAoZmVuY2VfZXhjbCkKLQkJ
c2hhcmVkWysrc2hhcmVkX2NvdW50XSA9IGZlbmNlX2V4Y2w7CisJCWlmIChleGNsICYmICFwZmVu
Y2VfZXhjbCkKKwkJCWFycmF5W2NvdW50KytdID0gZXhjbDsKIAotCWlmICghc2hhcmVkX2NvdW50
KSB7Ci0JCWtmcmVlKHNoYXJlZCk7Ci0JCXNoYXJlZCA9IE5VTEw7CisJCSpwc2hhcmVkID0gYXJy
YXk7CisJCSpwc2hhcmVkX2NvdW50ID0gY291bnQ7CisJfSBlbHNlIHsKKwkJKnBzaGFyZWQgPSBO
VUxMOworCQkqcHNoYXJlZF9jb3VudCA9IDA7CiAJfQogCi0JKnBzaGFyZWRfY291bnQgPSBzaGFy
ZWRfY291bnQ7Ci0JKnBzaGFyZWQgPSBzaGFyZWQ7Ci0JcmV0dXJuIHJldDsKKwlpZiAocGZlbmNl
X2V4Y2wpCisJCSpwZmVuY2VfZXhjbCA9IGV4Y2w7CisKKwlyZXR1cm4gMDsKIH0KIEVYUE9SVF9T
WU1CT0xfR1BMKGRtYV9yZXN2X2dldF9mZW5jZXNfcmN1KTsKIApAQCAtNzE4LDkzICs0NzYsMjkg
QEAgbG9uZyBkbWFfcmVzdl93YWl0X3RpbWVvdXRfcmN1KHN0cnVjdCBkbWFfcmVzdiAqb2JqLAog
CQkJICAgICAgIGJvb2wgd2FpdF9hbGwsIGJvb2wgaW50ciwKIAkJCSAgICAgICB1bnNpZ25lZCBs
b25nIHRpbWVvdXQpCiB7Ci0Jc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0JdW5zaWduZWQgc2Vx
LCBzaGFyZWRfY291bnQ7CisJc3RydWN0IGRtYV9mZW5jZSAqZXhjbCwgKnNoYXJlZDsKIAlsb25n
IHJldCA9IHRpbWVvdXQgPyB0aW1lb3V0IDogMTsKLQlpbnQgaTsKIAotcmV0cnk6Ci0Jc2hhcmVk
X2NvdW50ID0gMDsKLQlzZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZvYmotPnNlcSk7CiAJcmN1
X3JlYWRfbG9jaygpOwotCWkgPSAtMTsKLQotCWZlbmNlID0gcmN1X2RlcmVmZXJlbmNlKG9iai0+
ZmVuY2VfZXhjbCk7Ci0JaWYgKGZlbmNlICYmICF0ZXN0X2JpdChETUFfRkVOQ0VfRkxBR19TSUdO
QUxFRF9CSVQsICZmZW5jZS0+ZmxhZ3MpKSB7Ci0JCWlmICghZG1hX2ZlbmNlX2dldF9yY3UoZmVu
Y2UpKQotCQkJZ290byB1bmxvY2tfcmV0cnk7Ci0KLQkJaWYgKGRtYV9mZW5jZV9pc19zaWduYWxl
ZChmZW5jZSkpIHsKLQkJCWRtYV9mZW5jZV9wdXQoZmVuY2UpOwotCQkJZmVuY2UgPSBOVUxMOwot
CQl9Ci0KLQl9IGVsc2UgewotCQlmZW5jZSA9IE5VTEw7Ci0JfQotCi0JaWYgKHdhaXRfYWxsKSB7
Ci0JCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpmb2JqID0gcmN1X2RlcmVmZXJlbmNlKG9iai0+ZmVu
Y2UpOwotCi0JCWlmIChmb2JqKQotCQkJc2hhcmVkX2NvdW50ID0gZm9iai0+c2hhcmVkX2NvdW50
OwotCi0JCWZvciAoaSA9IDA7ICFmZW5jZSAmJiBpIDwgc2hhcmVkX2NvdW50OyArK2kpIHsKLQkJ
CXN0cnVjdCBkbWFfZmVuY2UgKmxmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZShmb2JqLT5zaGFyZWRb
aV0pOwotCi0JCQlpZiAodGVzdF9iaXQoRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklULAotCQkJ
CSAgICAgJmxmZW5jZS0+ZmxhZ3MpKQotCQkJCWNvbnRpbnVlOwotCi0JCQlpZiAoIWRtYV9mZW5j
ZV9nZXRfcmN1KGxmZW5jZSkpCi0JCQkJZ290byB1bmxvY2tfcmV0cnk7Ci0KLQkJCWlmIChkbWFf
ZmVuY2VfaXNfc2lnbmFsZWQobGZlbmNlKSkgewotCQkJCWRtYV9mZW5jZV9wdXQobGZlbmNlKTsK
LQkJCQljb250aW51ZTsKLQkJCX0KLQotCQkJZmVuY2UgPSBsZmVuY2U7Ci0JCQlicmVhazsKLQkJ
fQotCX0KLQorCWV4Y2wgPSBkbWFfZmVuY2VfZ2V0X3JjdV9zYWZlKCZvYmotPmZlbmNlX2V4Y2wp
OworCXNoYXJlZCA9IGRtYV9yZXN2X2ZlbmNlc19nZXRfcmN1KCZvYmotPnNoYXJlZCk7CiAJcmN1
X3JlYWRfdW5sb2NrKCk7Ci0JaWYgKGZlbmNlKSB7Ci0JCWlmIChyZWFkX3NlcWNvdW50X3JldHJ5
KCZvYmotPnNlcSwgc2VxKSkgewotCQkJZG1hX2ZlbmNlX3B1dChmZW5jZSk7Ci0JCQlnb3RvIHJl
dHJ5OwotCQl9CiAKLQkJcmV0ID0gZG1hX2ZlbmNlX3dhaXRfdGltZW91dChmZW5jZSwgaW50ciwg
cmV0KTsKLQkJZG1hX2ZlbmNlX3B1dChmZW5jZSk7Ci0JCWlmIChyZXQgPiAwICYmIHdhaXRfYWxs
ICYmIChpICsgMSA8IHNoYXJlZF9jb3VudCkpCi0JCQlnb3RvIHJldHJ5OworCWlmICh3YWl0X2Fs
bCAmJiBzaGFyZWQpIHsKKwkJcmV0ID0gZG1hX2ZlbmNlX3dhaXRfdGltZW91dChzaGFyZWQsIGlu
dHIsIHJldCk7CisJCWlmIChyZXQgPD0gMCkKKwkJCWdvdG8gb3V0OwogCX0KLQlyZXR1cm4gcmV0
OwotCi11bmxvY2tfcmV0cnk6Ci0JcmN1X3JlYWRfdW5sb2NrKCk7Ci0JZ290byByZXRyeTsKLX0K
LUVYUE9SVF9TWU1CT0xfR1BMKGRtYV9yZXN2X3dhaXRfdGltZW91dF9yY3UpOwotCi0KLXN0YXRp
YyBpbmxpbmUgaW50IGRtYV9yZXN2X3Rlc3Rfc2lnbmFsZWRfc2luZ2xlKHN0cnVjdCBkbWFfZmVu
Y2UgKnBhc3NlZF9mZW5jZSkKLXsKLQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwgKmxmZW5jZSA9
IHBhc3NlZF9mZW5jZTsKLQlpbnQgcmV0ID0gMTsKIAotCWlmICghdGVzdF9iaXQoRE1BX0ZFTkNF
X0ZMQUdfU0lHTkFMRURfQklULCAmbGZlbmNlLT5mbGFncykpIHsKLQkJZmVuY2UgPSBkbWFfZmVu
Y2VfZ2V0X3JjdShsZmVuY2UpOwotCQlpZiAoIWZlbmNlKQotCQkJcmV0dXJuIC0xOworCWlmIChl
eGNsKQorCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdF90aW1lb3V0KGV4Y2wsIGludHIsIHJldCk7CiAK
LQkJcmV0ID0gISFkbWFfZmVuY2VfaXNfc2lnbmFsZWQoZmVuY2UpOwotCQlkbWFfZmVuY2VfcHV0
KGZlbmNlKTsKLQl9CitvdXQ6CisJZG1hX2ZlbmNlX3B1dChleGNsKTsKKwlkbWFfZmVuY2VfcHV0
KHNoYXJlZCk7CiAJcmV0dXJuIHJldDsKIH0KK0VYUE9SVF9TWU1CT0xfR1BMKGRtYV9yZXN2X3dh
aXRfdGltZW91dF9yY3UpOwogCiAvKioKICAqIGRtYV9yZXN2X3Rlc3Rfc2lnbmFsZWRfcmN1IC0g
VGVzdCBpZiBhIHJlc2VydmF0aW9uIG9iamVjdCdzCkBAIC04MTgsNTEgKzUxMiwyMyBAQCBzdGF0
aWMgaW5saW5lIGludCBkbWFfcmVzdl90ZXN0X3NpZ25hbGVkX3NpbmdsZShzdHJ1Y3QgZG1hX2Zl
bmNlICpwYXNzZWRfZmVuY2UpCiAgKi8KIGJvb2wgZG1hX3Jlc3ZfdGVzdF9zaWduYWxlZF9yY3Uo
c3RydWN0IGRtYV9yZXN2ICpvYmosIGJvb2wgdGVzdF9hbGwpCiB7Ci0JdW5zaWduZWQgc2VxLCBz
aGFyZWRfY291bnQ7Ci0JaW50IHJldDsKKwlzdHJ1Y3QgZG1hX2ZlbmNlICpleGNsLCAqc2hhcmVk
OworCWJvb2wgcmV0ID0gdHJ1ZTsKIAogCXJjdV9yZWFkX2xvY2soKTsKLXJldHJ5OgotCXJldCA9
IHRydWU7Ci0Jc2hhcmVkX2NvdW50ID0gMDsKLQlzZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZv
YmotPnNlcSk7Ci0KLQlpZiAodGVzdF9hbGwpIHsKLQkJdW5zaWduZWQgaTsKLQotCQlzdHJ1Y3Qg
ZG1hX3Jlc3ZfbGlzdCAqZm9iaiA9IHJjdV9kZXJlZmVyZW5jZShvYmotPmZlbmNlKTsKLQotCQlp
ZiAoZm9iaikKLQkJCXNoYXJlZF9jb3VudCA9IGZvYmotPnNoYXJlZF9jb3VudDsKLQotCQlmb3Ig
KGkgPSAwOyBpIDwgc2hhcmVkX2NvdW50OyArK2kpIHsKLQkJCXN0cnVjdCBkbWFfZmVuY2UgKmZl
bmNlID0gcmN1X2RlcmVmZXJlbmNlKGZvYmotPnNoYXJlZFtpXSk7Ci0KLQkJCXJldCA9IGRtYV9y
ZXN2X3Rlc3Rfc2lnbmFsZWRfc2luZ2xlKGZlbmNlKTsKLQkJCWlmIChyZXQgPCAwKQotCQkJCWdv
dG8gcmV0cnk7Ci0JCQllbHNlIGlmICghcmV0KQotCQkJCWJyZWFrOwotCQl9Ci0KLQkJaWYgKHJl
YWRfc2VxY291bnRfcmV0cnkoJm9iai0+c2VxLCBzZXEpKQotCQkJZ290byByZXRyeTsKLQl9CisJ
ZXhjbCA9IGRtYV9mZW5jZV9nZXRfcmN1X3NhZmUoJm9iai0+ZmVuY2VfZXhjbCk7CisJc2hhcmVk
ID0gZG1hX3Jlc3ZfZmVuY2VzX2dldF9yY3UoJm9iai0+c2hhcmVkKTsKKwlyY3VfcmVhZF91bmxv
Y2soKTsKIAotCWlmICghc2hhcmVkX2NvdW50KSB7Ci0JCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNl
X2V4Y2wgPSByY3VfZGVyZWZlcmVuY2Uob2JqLT5mZW5jZV9leGNsKTsKKwlpZiAoZXhjbCkKKwkJ
cmV0ID0gZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKGV4Y2wpOwogCi0JCWlmIChmZW5jZV9leGNsKSB7
Ci0JCQlyZXQgPSBkbWFfcmVzdl90ZXN0X3NpZ25hbGVkX3NpbmdsZShmZW5jZV9leGNsKTsKLQkJ
CWlmIChyZXQgPCAwKQotCQkJCWdvdG8gcmV0cnk7CisJaWYgKHRlc3RfYWxsICYmIHNoYXJlZCkK
KwkJcmV0ICY9IGRtYV9mZW5jZV9pc19zaWduYWxlZChzaGFyZWQpOwogCi0JCQlpZiAocmVhZF9z
ZXFjb3VudF9yZXRyeSgmb2JqLT5zZXEsIHNlcSkpCi0JCQkJZ290byByZXRyeTsKLQkJfQotCX0K
KwlkbWFfZmVuY2VfcHV0KGV4Y2wpOworCWRtYV9mZW5jZV9wdXQoc2hhcmVkKTsKIAotCXJjdV9y
ZWFkX3VubG9jaygpOwogCXJldHVybiByZXQ7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChkbWFfcmVz
dl90ZXN0X3NpZ25hbGVkX3JjdSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfYW1ka2ZkX2dwdXZtLmMKaW5kZXggNzZlMzUxNjQ4NGU3Li44MmExZWFhODE4NGQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMK
QEAgLTIzLDYgKzIzLDcgQEAKICNkZWZpbmUgcHJfZm10KGZtdCkgImtmZDJrZ2Q6ICIgZm10CiAK
ICNpbmNsdWRlIDxsaW51eC9kbWEtYnVmLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLWFy
cmF5Lmg+CiAjaW5jbHVkZSA8bGludXgvbGlzdC5oPgogI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAu
aD4KICNpbmNsdWRlIDxsaW51eC9zY2hlZC9tbS5oPgpAQCAtMjE5LDU0ICsyMjAsMjcgQEAgc3Rh
dGljIGludCBhbWRncHVfYW1ka2ZkX3JlbW92ZV9ldmljdGlvbl9mZW5jZShzdHJ1Y3QgYW1kZ3B1
X2JvICpibywKIAkJCQkJc3RydWN0IGFtZGdwdV9hbWRrZmRfZmVuY2UgKmVmKQogewogCXN0cnVj
dCBkbWFfcmVzdiAqcmVzdiA9IGJvLT50Ym8uYmFzZS5yZXN2OwotCXN0cnVjdCBkbWFfcmVzdl9s
aXN0ICpvbGQsICpuZXc7Ci0JdW5zaWduZWQgaW50IGksIGosIGs7CisJdW5zaWduZWQgaW50IGk7
CisJaW50IHI7CiAKIAlpZiAoIWVmKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCW9sZCA9IGRtYV9y
ZXN2X2dldF9saXN0KHJlc3YpOwotCWlmICghb2xkKQotCQlyZXR1cm4gMDsKLQotCW5ldyA9IGtt
YWxsb2Mob2Zmc2V0b2YodHlwZW9mKCpuZXcpLCBzaGFyZWRbb2xkLT5zaGFyZWRfbWF4XSksCi0J
CSAgICAgIEdGUF9LRVJORUwpOwotCWlmICghbmV3KQotCQlyZXR1cm4gLUVOT01FTTsKKwlyID0g
ZG1hX3Jlc3ZfZmVuY2VzX3Jlc2VydmUocmVzdiwgJnJlc3YtPnNoYXJlZCwgMCk7CisJaWYgKHIp
CisJCXJldHVybiByOwogCi0JLyogR28gdGhyb3VnaCBhbGwgdGhlIHNoYXJlZCBmZW5jZXMgaW4g
dGhlIHJlc2V2YXRpb24gb2JqZWN0IGFuZCBzb3J0Ci0JICogdGhlIGludGVyZXN0aW5nIG9uZXMg
dG8gdGhlIGVuZCBvZiB0aGUgbGlzdC4KLQkgKi8KLQlmb3IgKGkgPSAwLCBqID0gb2xkLT5zaGFy
ZWRfY291bnQsIGsgPSAwOyBpIDwgb2xkLT5zaGFyZWRfY291bnQ7ICsraSkgeworCWZvciAoaSA9
IDA7IGkgPCByZXN2LT5zaGFyZWQuc3RhZ2VkLT5udW1fZmVuY2VzOyArK2kpIHsKIAkJc3RydWN0
IGRtYV9mZW5jZSAqZjsKIAotCQlmID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChvbGQtPnNo
YXJlZFtpXSwKLQkJCQkJICAgICAgZG1hX3Jlc3ZfaGVsZChyZXN2KSk7Ci0KLQkJaWYgKGYtPmNv
bnRleHQgPT0gZWYtPmJhc2UuY29udGV4dCkKLQkJCVJDVV9JTklUX1BPSU5URVIobmV3LT5zaGFy
ZWRbLS1qXSwgZik7Ci0JCWVsc2UKLQkJCVJDVV9JTklUX1BPSU5URVIobmV3LT5zaGFyZWRbaysr
XSwgZik7CisJCWYgPSByZXN2LT5zaGFyZWQuc3RhZ2VkLT5mZW5jZXNbaV07CisJCWlmIChmLT5j
b250ZXh0ID09IGVmLT5iYXNlLmNvbnRleHQpIHsKKwkJCXJlc3YtPnNoYXJlZC5zdGFnZWQtPmZl
bmNlc1tpXSA9IGRtYV9mZW5jZV9nZXRfc3R1YigpOworCQkJZG1hX2ZlbmNlX3B1dChmKTsKKwkJ
fQogCX0KLQluZXctPnNoYXJlZF9tYXggPSBvbGQtPnNoYXJlZF9tYXg7Ci0JbmV3LT5zaGFyZWRf
Y291bnQgPSBrOwotCi0JLyogSW5zdGFsbCB0aGUgbmV3IGZlbmNlIGxpc3QsIHNlcWNvdW50IHBy
b3ZpZGVzIHRoZSBiYXJyaWVycyAqLwotCXByZWVtcHRfZGlzYWJsZSgpOwotCXdyaXRlX3NlcWNv
dW50X2JlZ2luKCZyZXN2LT5zZXEpOwotCVJDVV9JTklUX1BPSU5URVIocmVzdi0+ZmVuY2UsIG5l
dyk7Ci0Jd3JpdGVfc2VxY291bnRfZW5kKCZyZXN2LT5zZXEpOwotCXByZWVtcHRfZW5hYmxlKCk7
CiAKLQkvKiBEcm9wIHRoZSByZWZlcmVuY2VzIHRvIHRoZSByZW1vdmVkIGZlbmNlcyBvciBtb3Zl
IHRoZW0gdG8gZWZfbGlzdCAqLwotCWZvciAoaSA9IGosIGsgPSAwOyBpIDwgb2xkLT5zaGFyZWRf
Y291bnQ7ICsraSkgewotCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmOwotCi0JCWYgPSByY3VfZGVyZWZl
cmVuY2VfcHJvdGVjdGVkKG5ldy0+c2hhcmVkW2ldLAotCQkJCQkgICAgICBkbWFfcmVzdl9oZWxk
KHJlc3YpKTsKLQkJZG1hX2ZlbmNlX3B1dChmKTsKLQl9Ci0Ja2ZyZWVfcmN1KG9sZCwgcmN1KTsK
KwlkbWFfcmVzdl9mZW5jZXNfY29tbWl0KHJlc3YsICZyZXN2LT5zaGFyZWQpOwogCiAJcmV0dXJu
IDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZG1h
X2J1Zi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYuYwppbmRl
eCBiZjBmMDA1MDg5ODcuLjA3ZWRmMTk3OTViOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfZG1hX2J1Zi5jCkBAIC0xMzksNDMgKzEzOSwxMSBAQCBpbnQgYW1kZ3B1X2dl
bV9wcmltZV9tbWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLAogc3RhdGljIGludAogX19k
bWFfcmVzdl9tYWtlX2V4Y2x1c2l2ZShzdHJ1Y3QgZG1hX3Jlc3YgKm9iaikKIHsKLQlzdHJ1Y3Qg
ZG1hX2ZlbmNlICoqZmVuY2VzOwotCXVuc2lnbmVkIGludCBjb3VudDsKLQlpbnQgcjsKKwlzdHJ1
Y3QgZG1hX2ZlbmNlICpzaGFyZWQgPSBkbWFfcmVzdl9mZW5jZXNfZGVyZWYob2JqLCAmb2JqLT5z
aGFyZWQpOwogCi0JaWYgKCFkbWFfcmVzdl9nZXRfbGlzdChvYmopKSAvKiBubyBzaGFyZWQgZmVu
Y2VzIHRvIGNvbnZlcnQgKi8KLQkJcmV0dXJuIDA7Ci0KLQlyID0gZG1hX3Jlc3ZfZ2V0X2ZlbmNl
c19yY3Uob2JqLCBOVUxMLCAmY291bnQsICZmZW5jZXMpOwotCWlmIChyKQotCQlyZXR1cm4gcjsK
LQotCWlmIChjb3VudCA9PSAwKSB7Ci0JCS8qIE5vdyB0aGF0IHdhcyB1bmV4cGVjdGVkLiAqLwot
CX0gZWxzZSBpZiAoY291bnQgPT0gMSkgewotCQlkbWFfcmVzdl9hZGRfZXhjbF9mZW5jZShvYmos
IGZlbmNlc1swXSk7Ci0JCWRtYV9mZW5jZV9wdXQoZmVuY2VzWzBdKTsKLQkJa2ZyZWUoZmVuY2Vz
KTsKLQl9IGVsc2UgewotCQlzdHJ1Y3QgZG1hX2ZlbmNlX2FycmF5ICphcnJheTsKLQotCQlhcnJh
eSA9IGRtYV9mZW5jZV9hcnJheV9jcmVhdGUoY291bnQsIGZlbmNlcywKLQkJCQkJICAgICAgIGRt
YV9mZW5jZV9jb250ZXh0X2FsbG9jKDEpLCAwLAotCQkJCQkgICAgICAgZmFsc2UpOwotCQlpZiAo
IWFycmF5KQotCQkJZ290byBlcnJfZmVuY2VzX3B1dDsKLQotCQlkbWFfcmVzdl9hZGRfZXhjbF9m
ZW5jZShvYmosICZhcnJheS0+YmFzZSk7Ci0JCWRtYV9mZW5jZV9wdXQoJmFycmF5LT5iYXNlKTsK
LQl9CisJZG1hX3Jlc3ZfYWRkX2V4Y2xfZmVuY2Uob2JqLCBzaGFyZWQpOwogCiAJcmV0dXJuIDA7
Ci0KLWVycl9mZW5jZXNfcHV0OgotCXdoaWxlIChjb3VudC0tKQotCQlkbWFfZmVuY2VfcHV0KGZl
bmNlc1tjb3VudF0pOwotCWtmcmVlKGZlbmNlcyk7Ci0JcmV0dXJuIC1FTk9NRU07CiB9CiAKIC8q
KgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9zeW5jLmMKaW5kZXggOTVlNWU5M2Vk
ZDE4Li43YWU2MmRkNDgxMTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9zeW5jLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5
bmMuYwpAQCAtMjgsNiArMjgsOCBAQAogICogICAgQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFu
LmtvZW5pZ0BhbWQuY29tPgogICovCiAKKyNpbmNsdWRlIDxsaW51eC9kbWEtZmVuY2UtYXJyYXku
aD4KKwogI2luY2x1ZGUgImFtZGdwdS5oIgogI2luY2x1ZGUgImFtZGdwdV90cmFjZS5oIgogI2lu
Y2x1ZGUgImFtZGdwdV9hbWRrZmQuaCIKQEAgLTE5MywxMCArMTk1LDkgQEAgaW50IGFtZGdwdV9z
eW5jX3Jlc3Yoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJCSAgICAgc3RydWN0IGRtYV9y
ZXN2ICpyZXN2LAogCQkgICAgIHZvaWQgKm93bmVyLCBib29sIGV4cGxpY2l0X3N5bmMpCiB7Ci0J
c3RydWN0IGRtYV9yZXN2X2xpc3QgKmZsaXN0OwotCXN0cnVjdCBkbWFfZmVuY2UgKmY7CisJc3Ry
dWN0IGRtYV9mZW5jZV9hcnJheV9jdXJzb3IgY3Vyc29yOworCXN0cnVjdCBkbWFfZmVuY2UgKmYs
ICphcnJheTsKIAl2b2lkICpmZW5jZV9vd25lcjsKLQl1bnNpZ25lZCBpOwogCWludCByID0gMDsK
IAogCWlmIChyZXN2ID09IE5VTEwpCkBAIC0yMDUsMTQgKzIwNiwxMiBAQCBpbnQgYW1kZ3B1X3N5
bmNfcmVzdihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkvKiBhbHdheXMgc3luYyB0byB0
aGUgZXhjbHVzaXZlIGZlbmNlICovCiAJZiA9IGRtYV9yZXN2X2dldF9leGNsKHJlc3YpOwogCXIg
PSBhbWRncHVfc3luY19mZW5jZShhZGV2LCBzeW5jLCBmLCBmYWxzZSk7Ci0KLQlmbGlzdCA9IGRt
YV9yZXN2X2dldF9saXN0KHJlc3YpOwotCWlmICghZmxpc3QgfHwgcikKKwlpZiAocikKIAkJcmV0
dXJuIHI7CiAKLQlmb3IgKGkgPSAwOyBpIDwgZmxpc3QtPnNoYXJlZF9jb3VudDsgKytpKSB7Ci0J
CWYgPSByY3VfZGVyZWZlcmVuY2VfcHJvdGVjdGVkKGZsaXN0LT5zaGFyZWRbaV0sCi0JCQkJCSAg
ICAgIGRtYV9yZXN2X2hlbGQocmVzdikpOworCWFycmF5ID0gZG1hX3Jlc3ZfZmVuY2VzX2RlcmVm
KHJlc3YsICZyZXN2LT5zaGFyZWQpOworCWRtYV9mZW5jZV9hcnJheV9mb3JfZWFjaChmLCBjdXJz
b3IsIGFycmF5KSB7CisKIAkJLyogV2Ugb25seSB3YW50IHRvIHRyaWdnZXIgS0ZEIGV2aWN0aW9u
IGZlbmNlcyBvbgogCQkgKiBldmljdCBvciBtb3ZlIGpvYnMuIFNraXAgS0ZEIGZlbmNlcyBvdGhl
cndpc2UuCiAJCSAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3R0bS5jCmluZGV4
IGZiMDkzMTRiY2ZkNC4uNzMzZWUwOGNjMGNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfdHRtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3R0bS5jCkBAIC0zOSw2ICszOSw3IEBACiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgog
I2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4KICNpbmNsdWRlIDxsaW51eC9zd2lvdGxiLmg+CisjaW5j
bHVkZSA8bGludXgvZG1hLWZlbmNlLWFycmF5Lmg+CiAKICNpbmNsdWRlIDxkcm0vdHRtL3R0bV9i
b19hcGkuaD4KICNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19kcml2ZXIuaD4KQEAgLTE0NzAsOSAr
MTQ3MSw4IEBAIHN0YXRpYyBib29sIGFtZGdwdV90dG1fYm9fZXZpY3Rpb25fdmFsdWFibGUoc3Ry
dWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKIHsKIAl1bnNpZ25lZCBsb25nIG51bV9wYWdlcyA9
IGJvLT5tZW0ubnVtX3BhZ2VzOwogCXN0cnVjdCBkcm1fbW1fbm9kZSAqbm9kZSA9IGJvLT5tZW0u
bW1fbm9kZTsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZmxpc3Q7Ci0Jc3RydWN0IGRtYV9mZW5j
ZSAqZjsKLQlpbnQgaTsKKwlzdHJ1Y3QgZG1hX2ZlbmNlX2FycmF5X2N1cnNvciBjdXJzb3I7CisJ
c3RydWN0IGRtYV9mZW5jZSAqZiwgKmFycmF5OwogCiAJLyogRG9uJ3QgZXZpY3QgVk0gcGFnZSB0
YWJsZXMgd2hpbGUgdGhleSBhcmUgYnVzeSwgb3RoZXJ3aXNlIHdlIGNhbid0CiAJICogY2xlYW5s
eSBoYW5kbGUgcGFnZSBmYXVsdHMuCkBAIC0xNDg1LDE1ICsxNDg1LDEwIEBAIHN0YXRpYyBib29s
IGFtZGdwdV90dG1fYm9fZXZpY3Rpb25fdmFsdWFibGUoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0
ICpibywKIAkgKiBJZiB0cnVlLCB0aGVuIHJldHVybiBmYWxzZSBhcyBhbnkgS0ZEIHByb2Nlc3Mg
bmVlZHMgYWxsIGl0cyBCT3MgdG8KIAkgKiBiZSByZXNpZGVudCB0byBydW4gc3VjY2Vzc2Z1bGx5
CiAJICovCi0JZmxpc3QgPSBkbWFfcmVzdl9nZXRfbGlzdChiby0+YmFzZS5yZXN2KTsKLQlpZiAo
Zmxpc3QpIHsKLQkJZm9yIChpID0gMDsgaSA8IGZsaXN0LT5zaGFyZWRfY291bnQ7ICsraSkgewot
CQkJZiA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQoZmxpc3QtPnNoYXJlZFtpXSwKLQkJCQlk
bWFfcmVzdl9oZWxkKGJvLT5iYXNlLnJlc3YpKTsKLQkJCWlmIChhbWRrZmRfZmVuY2VfY2hlY2tf
bW0oZiwgY3VycmVudC0+bW0pKQotCQkJCXJldHVybiBmYWxzZTsKLQkJfQotCX0KKwlhcnJheSA9
IGRtYV9yZXN2X2ZlbmNlc19kZXJlZihiby0+YmFzZS5yZXN2LCAmYm8tPmJhc2UucmVzdi0+c2hh
cmVkKTsKKwlkbWFfZmVuY2VfYXJyYXlfZm9yX2VhY2goZiwgY3Vyc29yLCBhcnJheSkKKwkJaWYg
KGFtZGtmZF9mZW5jZV9jaGVja19tbShmLCBjdXJyZW50LT5tbSkpCisJCQlyZXR1cm4gZmFsc2U7
CiAKIAlzd2l0Y2ggKGJvLT5tZW0ubWVtX3R5cGUpIHsKIAljYXNlIFRUTV9QTF9UVDoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMgYi9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jCmluZGV4IDdkODNlMDRlYzM2ZS4uOGZkOGM5Mzli
Y2Y3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMKQEAgLTcsNiArNyw3IEBA
CiAjaW5jbHVkZSA8bGludXgvc2htZW1fZnMuaD4KICNpbmNsdWRlIDxsaW51eC9zY2hlZC9tbS5o
PgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL3Rhc2suaD4KKyNpbmNsdWRlIDxsaW51eC9kbWEtZmVu
Y2UtYXJyYXkuaD4KIAogI2luY2x1ZGUgImV0bmF2aXZfZHJ2LmgiCiAjaW5jbHVkZSAiZXRuYXZp
dl9nZW0uaCIKQEAgLTQ1OSw5ICs0NjAsOSBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dlbV9kZXNj
cmliZV9mZW5jZShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKIHN0YXRpYyB2b2lkIGV0bmF2aXZf
Z2VtX2Rlc2NyaWJlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCBzdHJ1Y3Qgc2VxX2ZpbGUg
Km0pCiB7CiAJc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdCAqZXRuYXZpdl9vYmogPSB0b19ldG5h
dml2X2JvKG9iaik7CisJc3RydWN0IGRtYV9mZW5jZV9hcnJheV9jdXJzb3IgY3Vyc29yOwogCXN0
cnVjdCBkbWFfcmVzdiAqcm9iaiA9IG9iai0+cmVzdjsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAq
Zm9iajsKLQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsKKwlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSwgKnNoYXJlZDsKIAl1bnNpZ25lZCBsb25nIG9mZiA9IGRybV92bWFfbm9kZV9zdGFydCgmb2Jq
LT52bWFfbm9kZSk7CiAKIAlzZXFfcHJpbnRmKG0sICIlMDh4OiAlYyAlMmQgKCUyZCkgJTA4bHgg
JXAgJXpkXG4iLApAQCAtNDcwLDE2ICs0NzEsOSBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dlbV9k
ZXNjcmliZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgc3RydWN0IHNlcV9maWxlICptKQog
CQkJb2ZmLCBldG5hdml2X29iai0+dmFkZHIsIG9iai0+c2l6ZSk7CiAKIAlyY3VfcmVhZF9sb2Nr
KCk7Ci0JZm9iaiA9IHJjdV9kZXJlZmVyZW5jZShyb2JqLT5mZW5jZSk7Ci0JaWYgKGZvYmopIHsK
LQkJdW5zaWduZWQgaW50IGksIHNoYXJlZF9jb3VudCA9IGZvYmotPnNoYXJlZF9jb3VudDsKLQot
CQlmb3IgKGkgPSAwOyBpIDwgc2hhcmVkX2NvdW50OyBpKyspIHsKLQkJCWZlbmNlID0gcmN1X2Rl
cmVmZXJlbmNlKGZvYmotPnNoYXJlZFtpXSk7Ci0JCQlldG5hdml2X2dlbV9kZXNjcmliZV9mZW5j
ZShmZW5jZSwgIlNoYXJlZCIsIG0pOwotCQl9Ci0JfQotCisJc2hhcmVkID0gZG1hX3Jlc3ZfZmVu
Y2VzX2RlcmVmKHJvYmosICZyb2JqLT5zaGFyZWQpOworCWRtYV9mZW5jZV9hcnJheV9mb3JfZWFj
aChmZW5jZSwgY3Vyc29yLCBzaGFyZWQpCisJCWV0bmF2aXZfZ2VtX2Rlc2NyaWJlX2ZlbmNlKGZl
bmNlLCAiU2hhcmVkIiwgbSk7CiAJZmVuY2UgPSByY3VfZGVyZWZlcmVuY2Uocm9iai0+ZmVuY2Vf
ZXhjbCk7CiAJaWYgKGZlbmNlKQogCQlldG5hdml2X2dlbV9kZXNjcmliZV9mZW5jZShmZW5jZSwg
IkV4Y2x1c2l2ZSIsIG0pOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX2J1c3kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5LmMK
aW5kZXggM2Q0ZjU3NzVhNGJhLi4wZWYzMzhhOGNkOWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2J1c3kuYwpAQCAtNCw2ICs0LDggQEAKICAqIENvcHlyaWdodCDCqSAyMDE0
LTIwMTYgSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNl
LWFycmF5Lmg+CisKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmUuaCIKIAogI2luY2x1ZGUgImk5
MTVfZ2VtX2lvY3Rscy5oIgpAQCAtODEsOCArODMsOSBAQCBpOTE1X2dlbV9idXN5X2lvY3RsKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCSAgICBzdHJ1Y3QgZHJtX2ZpbGUg
KmZpbGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9idXN5ICphcmdzID0gZGF0YTsKKwlzdHJ1
Y3QgZG1hX2ZlbmNlX2FycmF5X2N1cnNvciBjdXJzb3I7CisJc3RydWN0IGRtYV9mZW5jZSAqZmVu
Y2UsICpzaGFyZWQ7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKLQlzdHJ1Y3Qg
ZG1hX3Jlc3ZfbGlzdCAqbGlzdDsKIAl1bnNpZ25lZCBpbnQgc2VxOwogCWludCBlcnI7CiAKQEAg
LTExNywxNyArMTIwLDEwIEBAIGk5MTVfZ2VtX2J1c3lfaW9jdGwoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgdm9pZCAqZGF0YSwKIAkJYnVzeV9jaGVja193cml0ZXIocmN1X2RlcmVmZXJlbmNlKG9i
ai0+YmFzZS5yZXN2LT5mZW5jZV9leGNsKSk7CiAKIAkvKiBUcmFuc2xhdGUgc2hhcmVkIGZlbmNl
cyB0byBSRUFEIHNldCBvZiBlbmdpbmVzICovCi0JbGlzdCA9IHJjdV9kZXJlZmVyZW5jZShvYmot
PmJhc2UucmVzdi0+ZmVuY2UpOwotCWlmIChsaXN0KSB7Ci0JCXVuc2lnbmVkIGludCBzaGFyZWRf
Y291bnQgPSBsaXN0LT5zaGFyZWRfY291bnQsIGk7Ci0KLQkJZm9yIChpID0gMDsgaSA8IHNoYXJl
ZF9jb3VudDsgKytpKSB7Ci0JCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSA9Ci0JCQkJcmN1X2Rl
cmVmZXJlbmNlKGxpc3QtPnNoYXJlZFtpXSk7Ci0KLQkJCWFyZ3MtPmJ1c3kgfD0gYnVzeV9jaGVj
a19yZWFkZXIoZmVuY2UpOwotCQl9Ci0JfQorCXNoYXJlZCA9IGRtYV9yZXN2X2ZlbmNlc19nZXRf
cmN1KCZvYmotPmJhc2UucmVzdi0+c2hhcmVkKTsKKwlkbWFfZmVuY2VfYXJyYXlfZm9yX2VhY2go
ZmVuY2UsIGN1cnNvciwgc2hhcmVkKQorCQlhcmdzLT5idXN5IHw9IGJ1c3lfY2hlY2tfcmVhZGVy
KGZlbmNlKTsKKwlkbWFfZmVuY2VfcHV0KHNoYXJlZCk7CiAKIAlpZiAoYXJncy0+YnVzeSAmJiBy
ZWFkX3NlcWNvdW50X3JldHJ5KCZvYmotPmJhc2UucmVzdi0+c2VxLCBzZXEpKQogCQlnb3RvIHJl
dHJ5OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fYmF0Y2hfcG9v
bC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fYmF0Y2hfcG9vbC5jCmluZGV4IDI3
NGNmNWIxOWZjOS4uOGIzNzg4OTY4NTkwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbV9iYXRjaF9wb29sLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9n
ZW1fYmF0Y2hfcG9vbC5jCkBAIC0xMTIsNyArMTEyLDcgQEAgaTkxNV9nZW1fYmF0Y2hfcG9vbF9n
ZXQoc3RydWN0IGk5MTVfZ2VtX2JhdGNoX3Bvb2wgKnBvb2wsCiAJCQkgKiB0cmFwcGluZyBhIHJl
ZmVyZW5jZSB0byBhbGwgdGhlIG9sZCBmZW5jZXMsIHJhdGhlcgogCQkJICogdGhhbiByZXBsYWNl
IHRoZSBleGlzdGluZyBmZW5jZS4KIAkJCSAqLwotCQkJaWYgKHJjdV9hY2Nlc3NfcG9pbnRlcihy
ZXN2LT5mZW5jZSkpIHsKKwkJCWlmIChyY3VfYWNjZXNzX3BvaW50ZXIocmVzdi0+c2hhcmVkLmZl
bmNlKSkgewogCQkJCWRtYV9yZXN2X2xvY2socmVzdiwgTlVMTCk7CiAJCQkJZG1hX3Jlc3ZfcHJ1
bmVfZmVuY2VzKHJlc3YpOwogCQkJCWRtYV9yZXN2X3VubG9jayhyZXN2KTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21f
Z2VtLmMKaW5kZXggMzQ4YTdhZDJjMDQ0Li40NDM3MGE5NWUxMTAgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9tc20vbXNtX2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dl
bS5jCkBAIC02NjMsMTIgKzY2MywxMiBAQCB2b2lkIG1zbV9nZW1fdnVubWFwKHN0cnVjdCBkcm1f
Z2VtX29iamVjdCAqb2JqLCBlbnVtIG1zbV9nZW1fbG9jayBzdWJjbGFzcykKIGludCBtc21fZ2Vt
X3N5bmNfb2JqZWN0KHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLAogCQlzdHJ1Y3QgbXNtX2Zl
bmNlX2NvbnRleHQgKmZjdHgsIGJvb2wgZXhjbHVzaXZlKQogewotCXN0cnVjdCBkbWFfcmVzdl9s
aXN0ICpmb2JqOwotCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOworCXN0cnVjdCBkbWFfZmVuY2Vf
YXJyYXlfY3Vyc29yIGN1cnNvcjsKKwlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwgKnNoYXJlZDsK
IAlpbnQgaSwgcmV0OwogCi0JZm9iaiA9IGRtYV9yZXN2X2dldF9saXN0KG9iai0+cmVzdik7Ci0J
aWYgKCFmb2JqIHx8IChmb2JqLT5zaGFyZWRfY291bnQgPT0gMCkpIHsKKwlzaGFyZWQgPSBkbWFf
cmVzdl9mZW5jZXNfZGVyZWYob2JqLT5yZXN2LCAmb2JqLT5yZXMtPnNoYXJlZCk7CisJaWYgKCFz
aGFyZWQpIHsKIAkJZmVuY2UgPSBkbWFfcmVzdl9nZXRfZXhjbChvYmotPnJlc3YpOwogCQkvKiBk
b24ndCBuZWVkIHRvIHdhaXQgb24gb3VyIG93biBmZW5jZXMsIHNpbmNlIHJpbmcgaXMgZmlmbyAq
LwogCQlpZiAoZmVuY2UgJiYgKGZlbmNlLT5jb250ZXh0ICE9IGZjdHgtPmNvbnRleHQpKSB7CkBA
IC02NzgsMTIgKzY3OCwxMCBAQCBpbnQgbXNtX2dlbV9zeW5jX29iamVjdChzdHJ1Y3QgZHJtX2dl
bV9vYmplY3QgKm9iaiwKIAkJfQogCX0KIAotCWlmICghZXhjbHVzaXZlIHx8ICFmb2JqKQorCWlm
ICghZXhjbHVzaXZlKQogCQlyZXR1cm4gMDsKIAotCWZvciAoaSA9IDA7IGkgPCBmb2JqLT5zaGFy
ZWRfY291bnQ7IGkrKykgewotCQlmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQoZm9i
ai0+c2hhcmVkW2ldLAotCQkJCQkJZG1hX3Jlc3ZfaGVsZChvYmotPnJlc3YpKTsKKwlkbWFfZmVu
Y2VfYXJyYXlfZm9yX2VhY2goZmVuY2UsIGN1cnNvciwgc2hhcmVkKSB7CiAJCWlmIChmZW5jZS0+
Y29udGV4dCAhPSBmY3R4LT5jb250ZXh0KSB7CiAJCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdChmZW5j
ZSwgdHJ1ZSk7CiAJCQlpZiAocmV0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL25vdXZl
YXUvbm91dmVhdV9mZW5jZS5jIGIvZHJpdmVycy9ncHUvZHJtL25vdXZlYXUvbm91dmVhdV9mZW5j
ZS5jCmluZGV4IDhkZjM5MDA3OGM4NS4uZTU1ZTY0ZmI2NzZmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vbm91dmVhdS9ub3V2ZWF1X2ZlbmNlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL25v
dXZlYXUvbm91dmVhdV9mZW5jZS5jCkBAIC0yOCw2ICsyOCw3IEBACiAKICNpbmNsdWRlIDxsaW51
eC9rdGltZS5oPgogI2luY2x1ZGUgPGxpbnV4L2hydGltZXIuaD4KKyNpbmNsdWRlIDxsaW51eC9k
bWEtZmVuY2UtYXJyYXkuaD4KICNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2ZlbmNlLmg+CiAK
ICNpbmNsdWRlIDxudmlmL2NsODI2ZS5oPgpAQCAtMzM0LDExICszMzUsMTEgQEAgaW50CiBub3V2
ZWF1X2ZlbmNlX3N5bmMoc3RydWN0IG5vdXZlYXVfYm8gKm52Ym8sIHN0cnVjdCBub3V2ZWF1X2No
YW5uZWwgKmNoYW4sIGJvb2wgZXhjbHVzaXZlLCBib29sIGludHIpCiB7CiAJc3RydWN0IG5vdXZl
YXVfZmVuY2VfY2hhbiAqZmN0eCA9IGNoYW4tPmZlbmNlOwotCXN0cnVjdCBkbWFfZmVuY2UgKmZl
bmNlOwogCXN0cnVjdCBkbWFfcmVzdiAqcmVzdiA9IG52Ym8tPmJvLmJhc2UucmVzdjsKLQlzdHJ1
Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKKwlzdHJ1Y3QgZG1hX2ZlbmNlX2FycmF5X2N1cnNvciBj
dXJzb3I7CisJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UsICpzaGFyZWQ7CiAJc3RydWN0IG5vdXZl
YXVfZmVuY2UgKmY7Ci0JaW50IHJldCA9IDAsIGk7CisJaW50IHJldCA9IDA7CiAKIAlpZiAoIWV4
Y2x1c2l2ZSkgewogCQlyZXQgPSBkbWFfcmVzdl9yZXNlcnZlX3NoYXJlZChyZXN2LCAxKTsKQEAg
LTM0NywxMCArMzQ4LDEwIEBAIG5vdXZlYXVfZmVuY2Vfc3luYyhzdHJ1Y3Qgbm91dmVhdV9ibyAq
bnZibywgc3RydWN0IG5vdXZlYXVfY2hhbm5lbCAqY2hhbiwgYm9vbCBlCiAJCQlyZXR1cm4gcmV0
OwogCX0KIAotCWZvYmogPSBkbWFfcmVzdl9nZXRfbGlzdChyZXN2KTsKIAlmZW5jZSA9IGRtYV9y
ZXN2X2dldF9leGNsKHJlc3YpOworCXNoYXJlZCA9IGRtYV9yZXN2X2ZlbmNlc19kZXJlZihyZXN2
LCAmcmVzdi0+c2hhcmVkKTsKIAotCWlmIChmZW5jZSAmJiAoIWV4Y2x1c2l2ZSB8fCAhZm9iaiB8
fCAhZm9iai0+c2hhcmVkX2NvdW50KSkgeworCWlmIChmZW5jZSAmJiAoIWV4Y2x1c2l2ZSB8fCAh
c2hhcmVkKSkgewogCQlzdHJ1Y3Qgbm91dmVhdV9jaGFubmVsICpwcmV2ID0gTlVMTDsKIAkJYm9v
bCBtdXN0X3dhaXQgPSB0cnVlOwogCkBAIC0zNjksMTYgKzM3MCwxMyBAQCBub3V2ZWF1X2ZlbmNl
X3N5bmMoc3RydWN0IG5vdXZlYXVfYm8gKm52Ym8sIHN0cnVjdCBub3V2ZWF1X2NoYW5uZWwgKmNo
YW4sIGJvb2wgZQogCQlyZXR1cm4gcmV0OwogCX0KIAotCWlmICghZXhjbHVzaXZlIHx8ICFmb2Jq
KQorCWlmICghZXhjbHVzaXZlKQogCQlyZXR1cm4gcmV0OwogCi0JZm9yIChpID0gMDsgaSA8IGZv
YmotPnNoYXJlZF9jb3VudCAmJiAhcmV0OyArK2kpIHsKKwlkbWFfZmVuY2VfYXJyYXlfZm9yX2Vh
Y2goZmVuY2UsIGN1cnNvciwgc2hhcmVkKSB7CiAJCXN0cnVjdCBub3V2ZWF1X2NoYW5uZWwgKnBy
ZXYgPSBOVUxMOwogCQlib29sIG11c3Rfd2FpdCA9IHRydWU7CiAKLQkJZmVuY2UgPSByY3VfZGVy
ZWZlcmVuY2VfcHJvdGVjdGVkKGZvYmotPnNoYXJlZFtpXSwKLQkJCQkJCWRtYV9yZXN2X2hlbGQo
cmVzdikpOwotCiAJCWYgPSBub3V2ZWF1X2xvY2FsX2ZlbmNlKGZlbmNlLCBjaGFuLT5kcm0pOwog
CQlpZiAoZikgewogCQkJcmN1X3JlYWRfbG9jaygpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL3F4bC9xeGxfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL3F4bC9xeGxfZGVidWdmcy5j
CmluZGV4IGE0ZjQxNzViYmRiZS4uNWUyOWU1ZDQ1ZTUwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vcXhsL3F4bF9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3F4bC9xeGxfZGVi
dWdmcy5jCkBAIC0yOCw2ICsyOCw4IEBACiAgKiAgQWxvbiBMZXZ5IDxhbGV2eUByZWRoYXQuY29t
PgogICovCiAKKyNpbmNsdWRlIDxsaW51eC9kbWEtZmVuY2UtYXJyYXkuaD4KKwogI2luY2x1ZGUg
PGRybS9kcm1fZGVidWdmcy5oPgogI2luY2x1ZGUgPGRybS9kcm1fZmlsZS5oPgogCkBAIC01Nywx
MiArNTksMTYgQEAgcXhsX2RlYnVnZnNfYnVmZmVyc19pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwg
dm9pZCAqZGF0YSkKIAlzdHJ1Y3QgcXhsX2JvICpibzsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnko
Ym8sICZxZGV2LT5nZW0ub2JqZWN0cywgbGlzdCkgewotCQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAq
Zm9iajsKKwkJc3RydWN0IGRtYV9yZXN2ICpyZXN2ID0gYm8tPnRiby5iYXNlLnJlc3Y7CisJCXN0
cnVjdCBkbWFfZmVuY2VfYXJyYXkgKmFycmF5OworCQlzdHJ1Y3QgZG1hX2ZlbmNlICpzaGFyZWQ7
CiAJCWludCByZWw7CiAKIAkJcmN1X3JlYWRfbG9jaygpOwotCQlmb2JqID0gcmN1X2RlcmVmZXJl
bmNlKGJvLT50Ym8uYmFzZS5yZXN2LT5mZW5jZSk7Ci0JCXJlbCA9IGZvYmogPyBmb2JqLT5zaGFy
ZWRfY291bnQgOiAwOworCQlzaGFyZWQgPSBkbWFfcmVzdl9mZW5jZXNfZ2V0X3JjdSgmcmVzdi0+
c2hhcmVkKTsKKwkJYXJyYXkgPSB0b19kbWFfZmVuY2VfYXJyYXkoc2hhcmVkKTsKKwkJcmVsID0g
YXJyYXkgPyBhcnJheS0+bnVtX2ZlbmNlcyA6IHNoYXJlZCA/IDEgOiAwOworCQlkbWFfZmVuY2Vf
cHV0KHNoYXJlZCk7CiAJCXJjdV9yZWFkX3VubG9jaygpOwogCiAJCXNlcV9wcmludGYobSwgInNp
emUgJWxkLCBwYyAlZCwgbnVtIHJlbGVhc2VzICVkXG4iLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL3JhZGVvbi9yYWRlb25fc3luYy5jIGIvZHJpdmVycy9ncHUvZHJtL3JhZGVvbi9yYWRl
b25fc3luYy5jCmluZGV4IDU1Y2M3N2E3M2M3Yi4uZmY3YWJkMzJlYzU1IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl9zeW5jLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L3JhZGVvbi9yYWRlb25fc3luYy5jCkBAIC0yNyw2ICsyNyw3IEBACiAgKiBBdXRob3JzOgogICog
ICAgQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgogICovCisjaW5j
bHVkZSA8bGludXgvZG1hLWZlbmNlLWFycmF5Lmg+CiAKICNpbmNsdWRlICJyYWRlb24uaCIKICNp
bmNsdWRlICJyYWRlb25fdHJhY2UuaCIKQEAgLTkwLDEwICs5MSw5IEBAIGludCByYWRlb25fc3lu
Y19yZXN2KHN0cnVjdCByYWRlb25fZGV2aWNlICpyZGV2LAogCQkgICAgIHN0cnVjdCBkbWFfcmVz
diAqcmVzdiwKIAkJICAgICBib29sIHNoYXJlZCkKIHsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAq
Zmxpc3Q7Ci0Jc3RydWN0IGRtYV9mZW5jZSAqZjsKKwlzdHJ1Y3QgZG1hX2ZlbmNlX2FycmF5X2N1
cnNvciBjdXJzb3I7CisJc3RydWN0IGRtYV9mZW5jZSAqZiwgKmZzaGFyZWQ7CiAJc3RydWN0IHJh
ZGVvbl9mZW5jZSAqZmVuY2U7Ci0JdW5zaWduZWQgaTsKIAlpbnQgciA9IDA7CiAKIAkvKiBhbHdh
eXMgc3luYyB0byB0aGUgZXhjbHVzaXZlIGZlbmNlICovCkBAIC0xMDQsMTMgKzEwNCwxMSBAQCBp
bnQgcmFkZW9uX3N5bmNfcmVzdihzdHJ1Y3QgcmFkZW9uX2RldmljZSAqcmRldiwKIAllbHNlIGlm
IChmKQogCQlyID0gZG1hX2ZlbmNlX3dhaXQoZiwgdHJ1ZSk7CiAKLQlmbGlzdCA9IGRtYV9yZXN2
X2dldF9saXN0KHJlc3YpOwotCWlmIChzaGFyZWQgfHwgIWZsaXN0IHx8IHIpCisJaWYgKHNoYXJl
ZCB8fCByKQogCQlyZXR1cm4gcjsKIAotCWZvciAoaSA9IDA7IGkgPCBmbGlzdC0+c2hhcmVkX2Nv
dW50OyArK2kpIHsKLQkJZiA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQoZmxpc3QtPnNoYXJl
ZFtpXSwKLQkJCQkJICAgICAgZG1hX3Jlc3ZfaGVsZChyZXN2KSk7CisJZnNoYXJlZCA9IGRtYV9y
ZXN2X2ZlbmNlc19kZXJlZihyZXN2LCAmcmVzdi0+c2hhcmVkKTsKKwlkbWFfZmVuY2VfYXJyYXlf
Zm9yX2VhY2goZiwgY3Vyc29yLCBmc2hhcmVkKSB7CiAJCWZlbmNlID0gdG9fcmFkZW9uX2ZlbmNl
KGYpOwogCQlpZiAoZmVuY2UgJiYgZmVuY2UtPnJkZXYgPT0gcmRldikKIAkJCXJhZGVvbl9zeW5j
X2ZlbmNlKHN5bmMsIGZlbmNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRt
X2JvLmMgYi9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9iby5jCmluZGV4IGY3OGY1MmNjMmU2ZC4u
NmUwOWNlYjQzZjJkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9iby5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRtX2JvLmMKQEAgLTQ1MywyMiArNDUzLDE1IEBAIHN0
YXRpYyBpbnQgdHRtX2JvX2luZGl2aWR1YWxpemVfcmVzdihzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmpl
Y3QgKmJvKQogCiBzdGF0aWMgdm9pZCB0dG1fYm9fZmx1c2hfYWxsX2ZlbmNlcyhzdHJ1Y3QgdHRt
X2J1ZmZlcl9vYmplY3QgKmJvKQogewotCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpmb2JqOwogCXN0
cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwotCWludCBpOwogCi0JZm9iaiA9IGRtYV9yZXN2X2dldF9s
aXN0KCZiby0+YmFzZS5fcmVzdik7CiAJZmVuY2UgPSBkbWFfcmVzdl9nZXRfZXhjbCgmYm8tPmJh
c2UuX3Jlc3YpOwogCWlmIChmZW5jZSAmJiAhZmVuY2UtPm9wcy0+c2lnbmFsZWQpCiAJCWRtYV9m
ZW5jZV9lbmFibGVfc3dfc2lnbmFsaW5nKGZlbmNlKTsKIAotCWZvciAoaSA9IDA7IGZvYmogJiYg
aSA8IGZvYmotPnNoYXJlZF9jb3VudDsgKytpKSB7Ci0JCWZlbmNlID0gcmN1X2RlcmVmZXJlbmNl
X3Byb3RlY3RlZChmb2JqLT5zaGFyZWRbaV0sCi0JCQkJCWRtYV9yZXN2X2hlbGQoYm8tPmJhc2Uu
cmVzdikpOwotCi0JCWlmICghZmVuY2UtPm9wcy0+c2lnbmFsZWQpCi0JCQlkbWFfZmVuY2VfZW5h
YmxlX3N3X3NpZ25hbGluZyhmZW5jZSk7Ci0JfQorCWZlbmNlID0gZG1hX3Jlc3ZfZmVuY2VzX2Rl
cmVmKCZiby0+YmFzZS5fcmVzdiwgJmJvLT5iYXNlLl9yZXN2LnNoYXJlZCk7CisJaWYgKGZlbmNl
ICYmICFmZW5jZS0+b3BzLT5zaWduYWxlZCkKKwkJZG1hX2ZlbmNlX2VuYWJsZV9zd19zaWduYWxp
bmcoZmVuY2UpOwogfQogCiBzdGF0aWMgdm9pZCB0dG1fYm9fY2xlYW51cF9yZWZzX29yX3F1ZXVl
KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8pCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4
L2RtYS1yZXN2LmggYi9pbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmgKaW5kZXggYzcwZjEzZmE2Nzg5
Li4wNDBlM2YwNGE4YWQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvZG1hLXJlc3YuaAorKysg
Yi9pbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmgKQEAgLTcyLDMyICs3MiwxOSBAQCB2b2lkIGRtYV9y
ZXN2X2ZlbmNlc19hZGQoc3RydWN0IGRtYV9yZXN2X2ZlbmNlcyAqZmVuY2VzLAogdm9pZCBkbWFf
cmVzdl9mZW5jZXNfY29tbWl0KHN0cnVjdCBkbWFfcmVzdiAqb2JqLAogCQkJICAgIHN0cnVjdCBk
bWFfcmVzdl9mZW5jZXMgKmZlbmNlcyk7CiAKLS8qKgotICogc3RydWN0IGRtYV9yZXN2X2xpc3Qg
LSBhIGxpc3Qgb2Ygc2hhcmVkIGZlbmNlcwotICogQHJjdTogZm9yIGludGVybmFsIHVzZQotICog
QHNoYXJlZF9jb3VudDogdGFibGUgb2Ygc2hhcmVkIGZlbmNlcwotICogQHNoYXJlZF9tYXg6IGZv
ciBncm93aW5nIHNoYXJlZCBmZW5jZSB0YWJsZQotICogQHNoYXJlZDogc2hhcmVkIGZlbmNlIHRh
YmxlCi0gKi8KLXN0cnVjdCBkbWFfcmVzdl9saXN0IHsKLQlzdHJ1Y3QgcmN1X2hlYWQgcmN1Owot
CXUzMiBzaGFyZWRfY291bnQsIHNoYXJlZF9tYXg7Ci0Jc3RydWN0IGRtYV9mZW5jZSBfX3JjdSAq
c2hhcmVkW107Ci19OwotCiAvKioKICAqIHN0cnVjdCBkbWFfcmVzdiAtIGEgcmVzZXJ2YXRpb24g
b2JqZWN0IG1hbmFnZXMgZmVuY2VzIGZvciBhIGJ1ZmZlcgogICogQGxvY2s6IHVwZGF0ZSBzaWRl
IGxvY2sKICAqIEBzZXE6IHNlcXVlbmNlIGNvdW50IGZvciBtYW5hZ2luZyBSQ1UgcmVhZC1zaWRl
IHN5bmNocm9uaXphdGlvbgogICogQGZlbmNlX2V4Y2w6IHRoZSBleGNsdXNpdmUgZmVuY2UsIGlm
IHRoZXJlIGlzIG9uZSBjdXJyZW50bHkKLSAqIEBmZW5jZTogbGlzdCBvZiBjdXJyZW50IHNoYXJl
ZCBmZW5jZXMKKyAqIEBzaGFyZWQ6IGFycmF5IG9mIHJlYWQgb3BlcmF0aW9ucyBmb3IgaW1wbGlj
aXQgc3luYwogICovCiBzdHJ1Y3QgZG1hX3Jlc3YgewogCXN0cnVjdCB3d19tdXRleCBsb2NrOwog
CXNlcWNvdW50X3Qgc2VxOwogCiAJc3RydWN0IGRtYV9mZW5jZSBfX3JjdSAqZmVuY2VfZXhjbDsK
LQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCBfX3JjdSAqZmVuY2U7CisJc3RydWN0IGRtYV9yZXN2X2Zl
bmNlcwlzaGFyZWQ7CiB9OwogCiAjZGVmaW5lIGRtYV9yZXN2X2hlbGQob2JqKSBsb2NrZGVwX2lz
X2hlbGQoJihvYmopLT5sb2NrLmJhc2UpCkBAIC0xMjksMjAgKzExNiw2IEBAIGRtYV9yZXN2X2Zl
bmNlc19nZXRfcmN1KHN0cnVjdCBkbWFfcmVzdl9mZW5jZXMgKmZlbmNlcykKIAlyZXR1cm4gZG1h
X2ZlbmNlX2dldF9yY3Vfc2FmZSgmZmVuY2VzLT5mZW5jZSk7CiB9CiAKLS8qKgotICogZG1hX3Jl
c3ZfZ2V0X2xpc3QgLSBnZXQgdGhlIHJlc2VydmF0aW9uIG9iamVjdCdzCi0gKiBzaGFyZWQgZmVu
Y2UgbGlzdCwgd2l0aCB1cGRhdGUtc2lkZSBsb2NrIGhlbGQKLSAqIEBvYmo6IHRoZSByZXNlcnZh
dGlvbiBvYmplY3QKLSAqCi0gKiBSZXR1cm5zIHRoZSBzaGFyZWQgZmVuY2UgbGlzdC4gIERvZXMg
Tk9UIHRha2UgcmVmZXJlbmNlcyB0bwotICogdGhlIGZlbmNlLiAgVGhlIG9iai0+bG9jayBtdXN0
IGJlIGhlbGQuCi0gKi8KLXN0YXRpYyBpbmxpbmUgc3RydWN0IGRtYV9yZXN2X2xpc3QgKmRtYV9y
ZXN2X2dldF9saXN0KHN0cnVjdCBkbWFfcmVzdiAqb2JqKQotewotCXJldHVybiByY3VfZGVyZWZl
cmVuY2VfcHJvdGVjdGVkKG9iai0+ZmVuY2UsCi0JCQkJCSBkbWFfcmVzdl9oZWxkKG9iaikpOwot
fQotCiAvKioKICAqIGRtYV9yZXN2X2xvY2sgLSBsb2NrIHRoZSByZXNlcnZhdGlvbiBvYmplY3QK
ICAqIEBvYmo6IHRoZSByZXNlcnZhdGlvbiBvYmplY3QKQEAgLTI2NiwxNCArMjM5LDcgQEAgc3Rh
dGljIGlubGluZSBzdHJ1Y3Qgd3dfYWNxdWlyZV9jdHggKmRtYV9yZXN2X2xvY2tpbmdfY3R4KHN0
cnVjdCBkbWFfcmVzdiAqb2JqKQogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgZG1hX3Jlc3ZfdW5s
b2NrKHN0cnVjdCBkbWFfcmVzdiAqb2JqKQogewotI2lmZGVmIENPTkZJR19ERUJVR19NVVRFWEVT
Ci0JLyogVGVzdCBzaGFyZWQgZmVuY2Ugc2xvdCByZXNlcnZhdGlvbiAqLwotCWlmIChyY3VfYWNj
ZXNzX3BvaW50ZXIob2JqLT5mZW5jZSkpIHsKLQkJc3RydWN0IGRtYV9yZXN2X2xpc3QgKmZlbmNl
ID0gZG1hX3Jlc3ZfZ2V0X2xpc3Qob2JqKTsKLQotCQlmZW5jZS0+c2hhcmVkX21heCA9IGZlbmNl
LT5zaGFyZWRfY291bnQ7Ci0JfQotI2VuZGlmCisJZG1hX3Jlc3ZfZmVuY2VzX2NvbW1pdChvYmos
ICZvYmotPnNoYXJlZCk7CiAJd3dfbXV0ZXhfdW5sb2NrKCZvYmotPmxvY2spOwogfQogCi0tIAoy
LjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRy
aS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
