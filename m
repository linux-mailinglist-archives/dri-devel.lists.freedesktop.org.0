Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 79227EA4C6
	for <lists+dri-devel@lfdr.de>; Wed, 30 Oct 2019 21:30:47 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C97006EB6C;
	Wed, 30 Oct 2019 20:30:44 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-yb1-xb44.google.com (mail-yb1-xb44.google.com
 [IPv6:2607:f8b0:4864:20::b44])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0AE216EB6C
 for <dri-devel@lists.freedesktop.org>; Wed, 30 Oct 2019 20:30:44 +0000 (UTC)
Received: by mail-yb1-xb44.google.com with SMTP id i6so1472228ybe.2
 for <dri-devel@lists.freedesktop.org>; Wed, 30 Oct 2019 13:30:43 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=+uwJGC9QQEeJXBgFaFTGM7r2UURRovHT/Gyepm7ZHvI=;
 b=VcqzsBENDW8nxuCdWbcfIL+pih6OtUcsiZ4pnYx9yLNUliXrrQI2flP8pWsPugoAck
 s9nTpv6EGyvYzP8kRsGZpux0jonNDfAcQJd+8F27WHc7zi4g/+ozU9A523PWRYUHB2Jy
 cA4lkq9VQ3MPL1AgZ03vsVE3J3SzklOXdswIPoWDfT+uKm3+i5kmJGu1gx/mPseqXiXD
 5kyq2OluiWo7f/Ygd5q/FZg/cT7E5+7XJX6iKoFAwIp7uoy2hb+p1nBt6uS05MWSpZ+K
 dhqqaK46NeIZbvE5r7ygO1t5vKjxYHT9MclSqZ2dHJcEh9Av+b07pG122qC5plKDL/VS
 vvig==
X-Gm-Message-State: APjAAAUwCotXB44VW0RclLjN0snqbLv9nZTIGHmIiObG3QXQxkITmQPO
 uMSdSEiEK638WSyC5iv22oyw6lVOYfo=
X-Google-Smtp-Source: APXvYqwmE0DZ1aONPSeryTzS1u6CE2PPggyA3mpL12wbCqn2IrErn4ut1ch9D1EPBVaL6XvXFbGkaQ==
X-Received: by 2002:a25:5f4f:: with SMTP id h15mr1089692ybm.0.1572467442852;
 Wed, 30 Oct 2019 13:30:42 -0700 (PDT)
Received: from rosewood.cam.corp.google.com
 ([2620:0:1013:11:89c6:2139:5435:371d])
 by smtp.gmail.com with ESMTPSA id h35sm416432ywk.63.2019.10.30.13.30.41
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 30 Oct 2019 13:30:42 -0700 (PDT)
From: Sean Paul <sean@poorly.run>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH 5/5] Revert "dma-buf: Add dma-buf heaps framework"
Date: Wed, 30 Oct 2019 16:29:54 -0400
Message-Id: <20191030203003.101156-6-sean@poorly.run>
X-Mailer: git-send-email 2.24.0.rc0.303.g954a862665-goog
In-Reply-To: <20191030203003.101156-1-sean@poorly.run>
References: <20191030203003.101156-1-sean@poorly.run>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=poorly.run; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=+uwJGC9QQEeJXBgFaFTGM7r2UURRovHT/Gyepm7ZHvI=;
 b=dwJqaG4xdX2kdAnbDeH5xFaOrS0EaJmi7axZE4CKGAMS513nhJP9xtzHsjsHyFBYAZ
 JA5ljn5y7Dpd8kYEMDK50JNFWHnMyEMfFSlDhMAIe5K7dqqpVKs/kNolhi42Z2d7s6nw
 NQG+9mWAxBgJFolR3UjrXPf+ZbXp8EkIOloBh5FxAk5hYk5z/TUcuTYQvQgQ6Fjvu2YN
 uj91vWGvFpaMj5ZLO+Wqu9ac1nIBVqvzp4xplp4XZmNzYEb0GHOXOsCvJjkKPMfTgPcs
 9DWGq8H5TnSvMduTcgNT46LHqQ+FIAxuH8LKqtkFTeoBmiqt30zxP7ADcxQFbrLUDyRk
 tNzA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Hillf Danton <hdanton@sina.com>,
 Vincent Donnefort <Vincent.Donnefort@arm.com>,
 Mauro Carvalho Chehab <mchehab+samsung@kernel.org>,
 "Andrew F . Davis" <afd@ti.com>, "Paul E. McKenney" <paulmck@linux.ibm.com>,
 Christoph Hellwig <hch@infradead.org>, Sudipto Paul <Sudipto.Paul@arm.com>,
 Pratik Patel <pratikp@codeaurora.org>, linux-media@vger.kernel.org,
 Chenbo Feng <fengc@google.com>, linaro-mm-sig@lists.linaro.org,
 Sean Paul <seanpaul@chromium.org>,
 Jonathan Cameron <Jonathan.Cameron@huawei.com>, Sean Paul <sean@poorly.run>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Alistair Strachan <astrachan@google.com>, Liam Mark <lmark@codeaurora.org>,
 Hridya Valsaraju <hridya@google.com>, "David S. Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogU2VhbiBQYXVsIDxzZWFucGF1bEBjaHJvbWl1bS5vcmc+CgpUaGlzIHJldmVydHMgY29t
bWl0IGE2OWIwZTg1NWQzZmQyNzhmZjZmMDlhMjNlMWVkZjkyOTUzOGUzMDQuCgpUaGlzIHBhdGNo
c2V0IGRvZXNuJ3QgbWVldCB0aGUgVUFQSSByZXF1aXJlbWVudHMgc2V0IG91dCBpbiBbMV0gZm9y
IHRoZSBEUk0Kc3Vic3lzdGVtLiBPbmNlIHRoZSB1c2Vyc3BhY2UgY29tcG9uZW50IGlzIHJldmll
d2VkIGFuZCByZWFkeSBmb3IgbWVyZ2UKd2UgY2FuIHRyeSBhZ2Fpbi4KClsxXS0gaHR0cHM6Ly8w
MS5vcmcvbGludXhncmFwaGljcy9nZngtZG9jcy9kcm0vZ3B1L2RybS11YXBpLmh0bWwjb3Blbi1z
b3VyY2UtdXNlcnNwYWNlLXJlcXVpcmVtZW50cwoKRml4ZXM6IGE2OWIwZTg1NWQzZiAoImRtYS1i
dWY6IEFkZCBkbWEtYnVmIGhlYXBzIGZyYW1ld29yayIpCkNjOiBMYXVyYSBBYmJvdHQgPGxhYmJv
dHRAcmVkaGF0LmNvbT4KQ2M6IEJlbmphbWluIEdhaWduYXJkIDxiZW5qYW1pbi5nYWlnbmFyZEBs
aW5hcm8ub3JnPgpDYzogU3VtaXQgU2Vtd2FsIDxzdW1pdC5zZW13YWxAbGluYXJvLm9yZz4KQ2M6
IExpYW0gTWFyayA8bG1hcmtAY29kZWF1cm9yYS5vcmc+CkNjOiBQcmF0aWsgUGF0ZWwgPHByYXRp
a3BAY29kZWF1cm9yYS5vcmc+CkNjOiBCcmlhbiBTdGFya2V5IDxCcmlhbi5TdGFya2V5QGFybS5j
b20+CkNjOiBWaW5jZW50IERvbm5lZm9ydCA8VmluY2VudC5Eb25uZWZvcnRAYXJtLmNvbT4KQ2M6
IFN1ZGlwdG8gUGF1bCA8U3VkaXB0by5QYXVsQGFybS5jb20+CkNjOiBBbmRyZXcgRi4gRGF2aXMg
PGFmZEB0aS5jb20+CkNjOiBDaHJpc3RvcGggSGVsbHdpZyA8aGNoQGluZnJhZGVhZC5vcmc+CkNj
OiBDaGVuYm8gRmVuZyA8ZmVuZ2NAZ29vZ2xlLmNvbT4KQ2M6IEFsaXN0YWlyIFN0cmFjaGFuIDxh
c3RyYWNoYW5AZ29vZ2xlLmNvbT4KQ2M6IEhyaWR5YSBWYWxzYXJhanUgPGhyaWR5YUBnb29nbGUu
Y29tPgpDYzogSGlsbGYgRGFudG9uIDxoZGFudG9uQHNpbmEuY29tPgpDYzogZHJpLWRldmVsQGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpDYzogQnJpYW4gU3RhcmtleSA8YnJpYW4uc3RhcmtleUBhcm0u
Y29tPgpDYzogSm9obiBTdHVsdHogPGpvaG4uc3R1bHR6QGxpbmFyby5vcmc+CkNjOiBNYXVybyBD
YXJ2YWxobyBDaGVoYWIgPG1jaGVoYWIrc2Ftc3VuZ0BrZXJuZWwub3JnPgpDYzogIkRhdmlkIFMu
IE1pbGxlciIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+CkNjOiBHcmVnIEtyb2FoLUhhcnRtYW4gPGdy
ZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpDYzogUm9iIEhlcnJpbmcgPHJvYmhAa2VybmVsLm9y
Zz4KQ2M6IEpvbmF0aGFuIENhbWVyb24gPEpvbmF0aGFuLkNhbWVyb25AaHVhd2VpLmNvbT4KQ2M6
ICJQYXVsIEUuIE1jS2VubmV5IiA8cGF1bG1ja0BsaW51eC5pYm0uY29tPgpDYzogU2VhbiBQYXVs
IDxzZWFucGF1bEBjaHJvbWl1bS5vcmc+CkNjOiAiQW5kcmV3IEYuIERhdmlzIiA8YWZkQHRpLmNv
bT4KQ2M6IGxpbnV4LW1lZGlhQHZnZXIua2VybmVsLm9yZwpDYzogbGluYXJvLW1tLXNpZ0BsaXN0
cy5saW5hcm8ub3JnClNpZ25lZC1vZmYtYnk6IFNlYW4gUGF1bCA8c2VhbkBwb29ybHkucnVuPgot
LS0KIE1BSU5UQUlORVJTICAgICAgICAgICAgICAgICAgIHwgIDE4IC0tLQogZHJpdmVycy9kbWEt
YnVmL0tjb25maWcgICAgICAgfCAgIDkgLS0KIGRyaXZlcnMvZG1hLWJ1Zi9NYWtlZmlsZSAgICAg
IHwgICAxIC0KIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtaGVhcC5jICAgIHwgMjY5IC0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGluY2x1ZGUvbGludXgvZG1hLWhlYXAuaCAgICAgIHwg
IDU5IC0tLS0tLS0tCiBpbmNsdWRlL3VhcGkvbGludXgvZG1hLWhlYXAuaCB8ICA1NSAtLS0tLS0t
CiA2IGZpbGVzIGNoYW5nZWQsIDQxMSBkZWxldGlvbnMoLSkKIGRlbGV0ZSBtb2RlIDEwMDY0NCBk
cml2ZXJzL2RtYS1idWYvZG1hLWhlYXAuYwogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGlu
dXgvZG1hLWhlYXAuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvdWFwaS9saW51eC9kbWEt
aGVhcC5oCgpkaWZmIC0tZ2l0IGEvTUFJTlRBSU5FUlMgYi9NQUlOVEFJTkVSUwppbmRleCA1ZjM5
MDY3Y2FhN2MuLmI2M2MyOTFhZDAyOSAxMDA2NDQKLS0tIGEvTUFJTlRBSU5FUlMKKysrIGIvTUFJ
TlRBSU5FUlMKQEAgLTQ5NDIsMjQgKzQ5NDIsNiBAQCBGOglpbmNsdWRlL2xpbnV4LypmZW5jZS5o
CiBGOglEb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZG1hLWJ1Zi5yc3QKIFQ6CWdpdCBnaXQ6Ly9h
bm9uZ2l0LmZyZWVkZXNrdG9wLm9yZy9kcm0vZHJtLW1pc2MKIAotRE1BLUJVRiBIRUFQUyBGUkFN
RVdPUksKLU06CVN1bWl0IFNlbXdhbCA8c3VtaXQuc2Vtd2FsQGxpbmFyby5vcmc+Ci1SOglBbmRy
ZXcgRi4gRGF2aXMgPGFmZEB0aS5jb20+Ci1SOglCZW5qYW1pbiBHYWlnbmFyZCA8YmVuamFtaW4u
Z2FpZ25hcmRAbGluYXJvLm9yZz4KLVI6CUxpYW0gTWFyayA8bG1hcmtAY29kZWF1cm9yYS5vcmc+
Ci1SOglMYXVyYSBBYmJvdHQgPGxhYmJvdHRAcmVkaGF0LmNvbT4KLVI6CUJyaWFuIFN0YXJrZXkg
PEJyaWFuLlN0YXJrZXlAYXJtLmNvbT4KLVI6CUpvaG4gU3R1bHR6IDxqb2huLnN0dWx0ekBsaW5h
cm8ub3JnPgotUzoJTWFpbnRhaW5lZAotTDoJbGludXgtbWVkaWFAdmdlci5rZXJuZWwub3JnCi1M
OglkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCi1MOglsaW5hcm8tbW0tc2lnQGxpc3Rz
LmxpbmFyby5vcmcgKG1vZGVyYXRlZCBmb3Igbm9uLXN1YnNjcmliZXJzKQotRjoJaW5jbHVkZS91
YXBpL2xpbnV4L2RtYS1oZWFwLmgKLUY6CWluY2x1ZGUvbGludXgvZG1hLWhlYXAuaAotRjoJZHJp
dmVycy9kbWEtYnVmL2RtYS1oZWFwLmMKLUY6CWRyaXZlcnMvZG1hLWJ1Zi9oZWFwcy8qCi1UOgln
aXQgZ2l0Oi8vYW5vbmdpdC5mcmVlZGVza3RvcC5vcmcvZHJtL2RybS1taXNjCi0KIERNQSBHRU5F
UklDIE9GRkxPQUQgRU5HSU5FIFNVQlNZU1RFTQogTToJVmlub2QgS291bCA8dmtvdWxAa2VybmVs
Lm9yZz4KIEw6CWRtYWVuZ2luZUB2Z2VyLmtlcm5lbC5vcmcKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
ZG1hLWJ1Zi9LY29uZmlnIGIvZHJpdmVycy9kbWEtYnVmL0tjb25maWcKaW5kZXggYmZmYTU4ZmMz
ZTZlLi5hMjNiNjc1MmQxMWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCisr
KyBiL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCkBAIC00NCwxMyArNDQsNCBAQCBjb25maWcgRE1B
QlVGX1NFTEZURVNUUwogCWRlZmF1bHQgbgogCWRlcGVuZHMgb24gRE1BX1NIQVJFRF9CVUZGRVIK
IAotbWVudWNvbmZpZyBETUFCVUZfSEVBUFMKLQlib29sICJETUEtQlVGIFVzZXJsYW5kIE1lbW9y
eSBIZWFwcyIKLQlzZWxlY3QgRE1BX1NIQVJFRF9CVUZGRVIKLQloZWxwCi0JICBDaG9vc2UgdGhp
cyBvcHRpb24gdG8gZW5hYmxlIHRoZSBETUEtQlVGIHVzZXJsYW5kIG1lbW9yeSBoZWFwcy4KLQkg
IFRoaXMgb3B0aW9ucyBjcmVhdGVzIHBlciBoZWFwIGNoYXJkZXZzIGluIC9kZXYvZG1hX2hlYXAv
IHdoaWNoCi0JICBhbGxvd3MgdXNlcnNwYWNlIHRvIGFsbG9jYXRlIGRtYS1idWZzIHRoYXQgY2Fu
IGJlIHNoYXJlZAotCSAgYmV0d2VlbiBkcml2ZXJzLgotCiBlbmRtZW51CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2RtYS1idWYvTWFrZWZpbGUgYi9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKaW5kZXgg
Y2FlZTVlYjNkMzUxLi4wMzQ3OWRhMDY0MjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9N
YWtlZmlsZQorKysgYi9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKQEAgLTEsNyArMSw2IEBACiAj
IFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKIG9iai15IDo9IGRtYS1idWYu
byBkbWEtZmVuY2UubyBkbWEtZmVuY2UtYXJyYXkubyBkbWEtZmVuY2UtY2hhaW4ubyBcCiAJIGRt
YS1yZXN2Lm8gc2Vxbm8tZmVuY2Uubwotb2JqLSQoQ09ORklHX0RNQUJVRl9IRUFQUykJKz0gZG1h
LWhlYXAubwogb2JqLSQoQ09ORklHX1NZTkNfRklMRSkJCSs9IHN5bmNfZmlsZS5vCiBvYmotJChD
T05GSUdfU1dfU1lOQykJCSs9IHN3X3N5bmMubyBzeW5jX2RlYnVnLm8KIG9iai0kKENPTkZJR19V
RE1BQlVGKQkJKz0gdWRtYWJ1Zi5vCmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLWhl
YXAuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtaGVhcC5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCA5YTQxYjczZTU0YjQuLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2RtYS1idWYv
ZG1hLWhlYXAuYworKysgL2Rldi9udWxsCkBAIC0xLDI2OSArMCwwIEBACi0vLyBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMAotLyoKLSAqIEZyYW1ld29yayBmb3IgdXNlcnNwYWNlIERN
QS1CVUYgYWxsb2NhdGlvbnMKLSAqCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTEgR29vZ2xlLCBJbmMu
Ci0gKiBDb3B5cmlnaHQgKEMpIDIwMTkgTGluYXJvIEx0ZC4KLSAqLwotCi0jaW5jbHVkZSA8bGlu
dXgvY2Rldi5oPgotI2luY2x1ZGUgPGxpbnV4L2RlYnVnZnMuaD4KLSNpbmNsdWRlIDxsaW51eC9k
ZXZpY2UuaD4KLSNpbmNsdWRlIDxsaW51eC9kbWEtYnVmLmg+Ci0jaW5jbHVkZSA8bGludXgvZXJy
Lmg+Ci0jaW5jbHVkZSA8bGludXgveGFycmF5Lmg+Ci0jaW5jbHVkZSA8bGludXgvbGlzdC5oPgot
I2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KLSNpbmNsdWRlIDxsaW51eC91YWNjZXNzLmg+Ci0jaW5j
bHVkZSA8bGludXgvc3lzY2FsbHMuaD4KLSNpbmNsdWRlIDxsaW51eC9kbWEtaGVhcC5oPgotI2lu
Y2x1ZGUgPHVhcGkvbGludXgvZG1hLWhlYXAuaD4KLQotI2RlZmluZSBERVZOQU1FICJkbWFfaGVh
cCIKLQotI2RlZmluZSBOVU1fSEVBUF9NSU5PUlMgMTI4Ci0KLS8qKgotICogc3RydWN0IGRtYV9o
ZWFwIC0gcmVwcmVzZW50cyBhIGRtYWJ1ZiBoZWFwIGluIHRoZSBzeXN0ZW0KLSAqIEBuYW1lOgkJ
dXNlZCBmb3IgZGVidWdnaW5nL2RldmljZS1ub2RlIG5hbWUKLSAqIEBvcHM6CQlvcHMgc3RydWN0
IGZvciB0aGlzIGhlYXAKLSAqIEBtaW5vcgkJbWlub3IgbnVtYmVyIG9mIHRoaXMgaGVhcCBkZXZp
Y2UKLSAqIEBoZWFwX2RldnQJCWhlYXAgZGV2aWNlIG5vZGUKLSAqIEBoZWFwX2NkZXYJCWhlYXAg
Y2hhciBkZXZpY2UKLSAqCi0gKiBSZXByZXNlbnRzIGEgaGVhcCBvZiBtZW1vcnkgZnJvbSB3aGlj
aCBidWZmZXJzIGNhbiBiZSBtYWRlLgotICovCi1zdHJ1Y3QgZG1hX2hlYXAgewotCWNvbnN0IGNo
YXIgKm5hbWU7Ci0JY29uc3Qgc3RydWN0IGRtYV9oZWFwX29wcyAqb3BzOwotCXZvaWQgKnByaXY7
Ci0JdW5zaWduZWQgaW50IG1pbm9yOwotCWRldl90IGhlYXBfZGV2dDsKLQlzdHJ1Y3QgbGlzdF9o
ZWFkIGxpc3Q7Ci0Jc3RydWN0IGNkZXYgaGVhcF9jZGV2OwotfTsKLQotc3RhdGljIExJU1RfSEVB
RChoZWFwX2xpc3QpOwotc3RhdGljIERFRklORV9NVVRFWChoZWFwX2xpc3RfbG9jayk7Ci1zdGF0
aWMgZGV2X3QgZG1hX2hlYXBfZGV2dDsKLXN0YXRpYyBzdHJ1Y3QgY2xhc3MgKmRtYV9oZWFwX2Ns
YXNzOwotc3RhdGljIERFRklORV9YQVJSQVlfQUxMT0MoZG1hX2hlYXBfbWlub3JzKTsKLQotc3Rh
dGljIGludCBkbWFfaGVhcF9idWZmZXJfYWxsb2Moc3RydWN0IGRtYV9oZWFwICpoZWFwLCBzaXpl
X3QgbGVuLAotCQkJCSB1bnNpZ25lZCBpbnQgZmRfZmxhZ3MsCi0JCQkJIHVuc2lnbmVkIGludCBo
ZWFwX2ZsYWdzKQotewotCS8qCi0JICogQWxsb2NhdGlvbnMgZnJvbSBhbGwgaGVhcHMgaGF2ZSB0
byBiZWdpbgotCSAqIGFuZCBlbmQgb24gcGFnZSBib3VuZGFyaWVzLgotCSAqLwotCWxlbiA9IFBB
R0VfQUxJR04obGVuKTsKLQlpZiAoIWxlbikKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlyZXR1cm4g
aGVhcC0+b3BzLT5hbGxvY2F0ZShoZWFwLCBsZW4sIGZkX2ZsYWdzLCBoZWFwX2ZsYWdzKTsKLX0K
LQotc3RhdGljIGludCBkbWFfaGVhcF9vcGVuKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBm
aWxlICpmaWxlKQotewotCXN0cnVjdCBkbWFfaGVhcCAqaGVhcDsKLQotCWhlYXAgPSB4YV9sb2Fk
KCZkbWFfaGVhcF9taW5vcnMsIGltaW5vcihpbm9kZSkpOwotCWlmICghaGVhcCkgewotCQlwcl9l
cnIoImRtYV9oZWFwOiBtaW5vciAlZCB1bmtub3duLlxuIiwgaW1pbm9yKGlub2RlKSk7Ci0JCXJl
dHVybiAtRU5PREVWOwotCX0KLQotCS8qIGluc3RhbmNlIGRhdGEgYXMgY29udGV4dCAqLwotCWZp
bGUtPnByaXZhdGVfZGF0YSA9IGhlYXA7Ci0Jbm9uc2Vla2FibGVfb3Blbihpbm9kZSwgZmlsZSk7
Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGxvbmcgZG1hX2hlYXBfaW9jdGxfYWxsb2NhdGUo
c3RydWN0IGZpbGUgKmZpbGUsIHVuc2lnbmVkIGxvbmcgYXJnKQotewotCXN0cnVjdCBkbWFfaGVh
cF9hbGxvY2F0aW9uX2RhdGEgaGVhcF9hbGxvY2F0aW9uOwotCXN0cnVjdCBkbWFfaGVhcCAqaGVh
cCA9IGZpbGUtPnByaXZhdGVfZGF0YTsKLQlpbnQgZmQ7Ci0KLQlpZiAoY29weV9mcm9tX3VzZXIo
JmhlYXBfYWxsb2NhdGlvbiwgKHZvaWQgX191c2VyICopYXJnLAotCQkJICAgc2l6ZW9mKGhlYXBf
YWxsb2NhdGlvbikpKQotCQlyZXR1cm4gLUVGQVVMVDsKLQotCWlmIChoZWFwX2FsbG9jYXRpb24u
ZmQgfHwKLQkgICAgaGVhcF9hbGxvY2F0aW9uLnJlc2VydmVkMCB8fAotCSAgICBoZWFwX2FsbG9j
YXRpb24ucmVzZXJ2ZWQxKSB7Ci0JCXByX3dhcm5fb25jZSgiZG1hX2hlYXA6IGlvY3RsIGRhdGEg
bm90IHZhbGlkXG4iKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JaWYgKGhlYXBfYWxsb2Nh
dGlvbi5mZF9mbGFncyAmIH5ETUFfSEVBUF9WQUxJRF9GRF9GTEFHUykgewotCQlwcl93YXJuX29u
Y2UoImRtYV9oZWFwOiBmZF9mbGFncyBoYXMgaW52YWxpZCBvciB1bnN1cHBvcnRlZCBmbGFncyBz
ZXRcbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQlpZiAoaGVhcF9hbGxvY2F0aW9uLmhl
YXBfZmxhZ3MgJiB+RE1BX0hFQVBfVkFMSURfSEVBUF9GTEFHUykgewotCQlwcl93YXJuX29uY2Uo
ImRtYV9oZWFwOiBoZWFwIGZsYWdzIGhhcyBpbnZhbGlkIG9yIHVuc3VwcG9ydGVkIGZsYWdzIHNl
dFxuIik7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCWZkID0gZG1hX2hlYXBfYnVmZmVyX2Fs
bG9jKGhlYXAsIGhlYXBfYWxsb2NhdGlvbi5sZW4sCi0JCQkJICAgaGVhcF9hbGxvY2F0aW9uLmZk
X2ZsYWdzLAotCQkJCSAgIGhlYXBfYWxsb2NhdGlvbi5oZWFwX2ZsYWdzKTsKLQlpZiAoZmQgPCAw
KQotCQlyZXR1cm4gZmQ7Ci0KLQloZWFwX2FsbG9jYXRpb24uZmQgPSBmZDsKLQotCWlmIChjb3B5
X3RvX3VzZXIoKHZvaWQgX191c2VyICopYXJnLCAmaGVhcF9hbGxvY2F0aW9uLAotCQkJIHNpemVv
ZihoZWFwX2FsbG9jYXRpb24pKSkgewotCQlrc3lzX2Nsb3NlKGZkKTsKLQkJcmV0dXJuIC1FRkFV
TFQ7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBsb25nIGRtYV9oZWFwX2lvY3RsKHN0
cnVjdCBmaWxlICpmaWxlLCB1bnNpZ25lZCBpbnQgY21kLAotCQkJICAgdW5zaWduZWQgbG9uZyBh
cmcpCi17Ci0JaW50IHJldCA9IDA7Ci0KLQlzd2l0Y2ggKGNtZCkgewotCWNhc2UgRE1BX0hFQVBf
SU9DX0FMTE9DOgotCQlyZXQgPSBkbWFfaGVhcF9pb2N0bF9hbGxvY2F0ZShmaWxlLCBhcmcpOwot
CQlicmVhazsKLQlkZWZhdWx0OgotCQlyZXR1cm4gLUVOT1RUWTsKLQl9Ci0KLQlyZXR1cm4gcmV0
OwotfQotCi1zdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBkbWFfaGVhcF9mb3Bz
ID0gewotCS5vd25lciAgICAgICAgICA9IFRISVNfTU9EVUxFLAotCS5vcGVuCQk9IGRtYV9oZWFw
X29wZW4sCi0JLnVubG9ja2VkX2lvY3RsID0gZG1hX2hlYXBfaW9jdGwsCi0jaWZkZWYgQ09ORklH
X0NPTVBBVAotCS5jb21wYXRfaW9jdGwJPSBkbWFfaGVhcF9pb2N0bCwKLSNlbmRpZgotfTsKLQot
LyoqCi0gKiBkbWFfaGVhcF9nZXRfZHJ2ZGF0YSgpIC0gZ2V0IHBlci1zdWJkcml2ZXIgZGF0YSBm
b3IgdGhlIGhlYXAKLSAqIEBoZWFwOiBETUEtSGVhcCB0byByZXRyaWV2ZSBwcml2YXRlIGRhdGEg
Zm9yCi0gKgotICogUmV0dXJuczoKLSAqIFRoZSBwZXItc3ViZHJpdmVyIGRhdGEgZm9yIHRoZSBo
ZWFwLgotICovCi12b2lkICpkbWFfaGVhcF9nZXRfZHJ2ZGF0YShzdHJ1Y3QgZG1hX2hlYXAgKmhl
YXApCi17Ci0JcmV0dXJuIGhlYXAtPnByaXY7Ci19Ci0KLXN0cnVjdCBkbWFfaGVhcCAqZG1hX2hl
YXBfYWRkKGNvbnN0IHN0cnVjdCBkbWFfaGVhcF9leHBvcnRfaW5mbyAqZXhwX2luZm8pCi17Ci0J
c3RydWN0IGRtYV9oZWFwICpoZWFwLCAqaCwgKmVycl9yZXQ7Ci0Jc3RydWN0IGRldmljZSAqZGV2
X3JldDsKLQlpbnQgcmV0OwotCi0JaWYgKCFleHBfaW5mby0+bmFtZSB8fCAhc3RyY21wKGV4cF9p
bmZvLT5uYW1lLCAiIikpIHsKLQkJcHJfZXJyKCJkbWFfaGVhcDogQ2Fubm90IGFkZCBoZWFwIHdp
dGhvdXQgYSBuYW1lXG4iKTsKLQkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7Ci0JfQotCi0JaWYg
KCFleHBfaW5mby0+b3BzIHx8ICFleHBfaW5mby0+b3BzLT5hbGxvY2F0ZSkgewotCQlwcl9lcnIo
ImRtYV9oZWFwOiBDYW5ub3QgYWRkIGhlYXAgd2l0aCBpbnZhbGlkIG9wcyBzdHJ1Y3RcbiIpOwot
CQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQl9Ci0KLQkvKiBjaGVjayB0aGUgbmFtZSBpcyB1
bmlxdWUgKi8KLQltdXRleF9sb2NrKCZoZWFwX2xpc3RfbG9jayk7Ci0JbGlzdF9mb3JfZWFjaF9l
bnRyeShoLCAmaGVhcF9saXN0LCBsaXN0KSB7Ci0JCWlmICghc3RyY21wKGgtPm5hbWUsIGV4cF9p
bmZvLT5uYW1lKSkgewotCQkJbXV0ZXhfdW5sb2NrKCZoZWFwX2xpc3RfbG9jayk7Ci0JCQlwcl9l
cnIoImRtYV9oZWFwOiBBbHJlYWR5IHJlZ2lzdGVyZWQgaGVhcCBuYW1lZCAlc1xuIiwKLQkJCSAg
ICAgICBleHBfaW5mby0+bmFtZSk7Ci0JCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQkJfQot
CX0KLQltdXRleF91bmxvY2soJmhlYXBfbGlzdF9sb2NrKTsKLQotCWhlYXAgPSBremFsbG9jKHNp
emVvZigqaGVhcCksIEdGUF9LRVJORUwpOwotCWlmICghaGVhcCkKLQkJcmV0dXJuIEVSUl9QVFIo
LUVOT01FTSk7Ci0KLQloZWFwLT5uYW1lID0gZXhwX2luZm8tPm5hbWU7Ci0JaGVhcC0+b3BzID0g
ZXhwX2luZm8tPm9wczsKLQloZWFwLT5wcml2ID0gZXhwX2luZm8tPnByaXY7Ci0KLQkvKiBGaW5k
IHVudXNlZCBtaW5vciBudW1iZXIgKi8KLQlyZXQgPSB4YV9hbGxvYygmZG1hX2hlYXBfbWlub3Jz
LCAmaGVhcC0+bWlub3IsIGhlYXAsCi0JCSAgICAgICBYQV9MSU1JVCgwLCBOVU1fSEVBUF9NSU5P
UlMgLSAxKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKHJldCA8IDApIHsKLQkJcHJfZXJyKCJkbWFfaGVh
cDogVW5hYmxlIHRvIGdldCBtaW5vciBudW1iZXIgZm9yIGhlYXBcbiIpOwotCQllcnJfcmV0ID0g
RVJSX1BUUihyZXQpOwotCQlnb3RvIGVycjA7Ci0JfQotCi0JLyogQ3JlYXRlIGRldmljZSAqLwot
CWhlYXAtPmhlYXBfZGV2dCA9IE1LREVWKE1BSk9SKGRtYV9oZWFwX2RldnQpLCBoZWFwLT5taW5v
cik7Ci0KLQljZGV2X2luaXQoJmhlYXAtPmhlYXBfY2RldiwgJmRtYV9oZWFwX2ZvcHMpOwotCXJl
dCA9IGNkZXZfYWRkKCZoZWFwLT5oZWFwX2NkZXYsIGhlYXAtPmhlYXBfZGV2dCwgMSk7Ci0JaWYg
KHJldCA8IDApIHsKLQkJcHJfZXJyKCJkbWFfaGVhcDogVW5hYmxlIHRvIGFkZCBjaGFyIGRldmlj
ZVxuIik7Ci0JCWVycl9yZXQgPSBFUlJfUFRSKHJldCk7Ci0JCWdvdG8gZXJyMTsKLQl9Ci0KLQlk
ZXZfcmV0ID0gZGV2aWNlX2NyZWF0ZShkbWFfaGVhcF9jbGFzcywKLQkJCQlOVUxMLAotCQkJCWhl
YXAtPmhlYXBfZGV2dCwKLQkJCQlOVUxMLAotCQkJCWhlYXAtPm5hbWUpOwotCWlmIChJU19FUlIo
ZGV2X3JldCkpIHsKLQkJcHJfZXJyKCJkbWFfaGVhcDogVW5hYmxlIHRvIGNyZWF0ZSBkZXZpY2Vc
biIpOwotCQllcnJfcmV0ID0gRVJSX0NBU1QoZGV2X3JldCk7Ci0JCWdvdG8gZXJyMjsKLQl9Ci0J
LyogQWRkIGhlYXAgdG8gdGhlIGxpc3QgKi8KLQltdXRleF9sb2NrKCZoZWFwX2xpc3RfbG9jayk7
Ci0JbGlzdF9hZGQoJmhlYXAtPmxpc3QsICZoZWFwX2xpc3QpOwotCW11dGV4X3VubG9jaygmaGVh
cF9saXN0X2xvY2spOwotCi0JcmV0dXJuIGhlYXA7Ci0KLWVycjI6Ci0JY2Rldl9kZWwoJmhlYXAt
PmhlYXBfY2Rldik7Ci1lcnIxOgotCXhhX2VyYXNlKCZkbWFfaGVhcF9taW5vcnMsIGhlYXAtPm1p
bm9yKTsKLWVycjA6Ci0Ja2ZyZWUoaGVhcCk7Ci0JcmV0dXJuIGVycl9yZXQ7Ci19Ci0KLXN0YXRp
YyBjaGFyICpkbWFfaGVhcF9kZXZub2RlKHN0cnVjdCBkZXZpY2UgKmRldiwgdW1vZGVfdCAqbW9k
ZSkKLXsKLQlyZXR1cm4ga2FzcHJpbnRmKEdGUF9LRVJORUwsICJkbWFfaGVhcC8lcyIsIGRldl9u
YW1lKGRldikpOwotfQotCi1zdGF0aWMgaW50IGRtYV9oZWFwX2luaXQodm9pZCkKLXsKLQlpbnQg
cmV0OwotCi0JcmV0ID0gYWxsb2NfY2hyZGV2X3JlZ2lvbigmZG1hX2hlYXBfZGV2dCwgMCwgTlVN
X0hFQVBfTUlOT1JTLCBERVZOQU1FKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCi0JZG1h
X2hlYXBfY2xhc3MgPSBjbGFzc19jcmVhdGUoVEhJU19NT0RVTEUsIERFVk5BTUUpOwotCWlmIChJ
U19FUlIoZG1hX2hlYXBfY2xhc3MpKSB7Ci0JCXVucmVnaXN0ZXJfY2hyZGV2X3JlZ2lvbihkbWFf
aGVhcF9kZXZ0LCBOVU1fSEVBUF9NSU5PUlMpOwotCQlyZXR1cm4gUFRSX0VSUihkbWFfaGVhcF9j
bGFzcyk7Ci0JfQotCWRtYV9oZWFwX2NsYXNzLT5kZXZub2RlID0gZG1hX2hlYXBfZGV2bm9kZTsK
LQotCXJldHVybiAwOwotfQotc3Vic3lzX2luaXRjYWxsKGRtYV9oZWFwX2luaXQpOwpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9saW51eC9kbWEtaGVhcC5oIGIvaW5jbHVkZS9saW51eC9kbWEtaGVhcC5o
CmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA0NTRlMzU0ZDFmZmIuLjAwMDAwMDAwMDAw
MAotLS0gYS9pbmNsdWRlL2xpbnV4L2RtYS1oZWFwLmgKKysrIC9kZXYvbnVsbApAQCAtMSw1OSAr
MCwwIEBACi0vKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLwotLyoKLSAqIERN
QUJVRiBIZWFwcyBBbGxvY2F0aW9uIEluZnJhc3RydWN0dXJlCi0gKgotICogQ29weXJpZ2h0IChD
KSAyMDExIEdvb2dsZSwgSW5jLgotICogQ29weXJpZ2h0IChDKSAyMDE5IExpbmFybyBMdGQuCi0g
Ki8KLQotI2lmbmRlZiBfRE1BX0hFQVBTX0gKLSNkZWZpbmUgX0RNQV9IRUFQU19ICi0KLSNpbmNs
dWRlIDxsaW51eC9jZGV2Lmg+Ci0jaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KLQotc3RydWN0IGRt
YV9oZWFwOwotCi0vKioKLSAqIHN0cnVjdCBkbWFfaGVhcF9vcHMgLSBvcHMgdG8gb3BlcmF0ZSBv
biBhIGdpdmVuIGhlYXAKLSAqIEBhbGxvY2F0ZToJCWFsbG9jYXRlIGRtYWJ1ZiBhbmQgcmV0dXJu
IGZkCi0gKgotICogYWxsb2NhdGUgcmV0dXJucyBkbWFidWYgZmQgIG9uIHN1Y2Nlc3MsIC1lcnJu
byBvbiBlcnJvci4KLSAqLwotc3RydWN0IGRtYV9oZWFwX29wcyB7Ci0JaW50ICgqYWxsb2NhdGUp
KHN0cnVjdCBkbWFfaGVhcCAqaGVhcCwKLQkJCXVuc2lnbmVkIGxvbmcgbGVuLAotCQkJdW5zaWdu
ZWQgbG9uZyBmZF9mbGFncywKLQkJCXVuc2lnbmVkIGxvbmcgaGVhcF9mbGFncyk7Ci19OwotCi0v
KioKLSAqIHN0cnVjdCBkbWFfaGVhcF9leHBvcnRfaW5mbyAtIGluZm9ybWF0aW9uIG5lZWRlZCB0
byBleHBvcnQgYSBuZXcgZG1hYnVmIGhlYXAKLSAqIEBuYW1lOgl1c2VkIGZvciBkZWJ1Z2dpbmcv
ZGV2aWNlLW5vZGUgbmFtZQotICogQG9wczoJb3BzIHN0cnVjdCBmb3IgdGhpcyBoZWFwCi0gKiBA
cHJpdjoJaGVhcCBleHBvcnRlciBwcml2YXRlIGRhdGEKLSAqCi0gKiBJbmZvcm1hdGlvbiBuZWVk
ZWQgdG8gZXhwb3J0IGEgbmV3IGRtYWJ1ZiBoZWFwLgotICovCi1zdHJ1Y3QgZG1hX2hlYXBfZXhw
b3J0X2luZm8gewotCWNvbnN0IGNoYXIgKm5hbWU7Ci0JY29uc3Qgc3RydWN0IGRtYV9oZWFwX29w
cyAqb3BzOwotCXZvaWQgKnByaXY7Ci19OwotCi0vKioKLSAqIGRtYV9oZWFwX2dldF9kcnZkYXRh
KCkgLSBnZXQgcGVyLWhlYXAgZHJpdmVyIGRhdGEKLSAqIEBoZWFwOiBETUEtSGVhcCB0byByZXRy
aWV2ZSBwcml2YXRlIGRhdGEgZm9yCi0gKgotICogUmV0dXJuczoKLSAqIFRoZSBwZXItaGVhcCBk
YXRhIGZvciB0aGUgaGVhcC4KLSAqLwotdm9pZCAqZG1hX2hlYXBfZ2V0X2RydmRhdGEoc3RydWN0
IGRtYV9oZWFwICpoZWFwKTsKLQotLyoqCi0gKiBkbWFfaGVhcF9hZGQgLSBhZGRzIGEgaGVhcCB0
byBkbWFidWYgaGVhcHMKLSAqIEBleHBfaW5mbzoJCWluZm9ybWF0aW9uIG5lZWRlZCB0byByZWdp
c3RlciB0aGlzIGhlYXAKLSAqLwotc3RydWN0IGRtYV9oZWFwICpkbWFfaGVhcF9hZGQoY29uc3Qg
c3RydWN0IGRtYV9oZWFwX2V4cG9ydF9pbmZvICpleHBfaW5mbyk7Ci0KLSNlbmRpZiAvKiBfRE1B
X0hFQVBTX0ggKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9kbWEtaGVhcC5oIGIv
aW5jbHVkZS91YXBpL2xpbnV4L2RtYS1oZWFwLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDZjZTVjYzY4ZDIzOC4uMDAwMDAwMDAwMDAwCi0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9k
bWEtaGVhcC5oCisrKyAvZGV2L251bGwKQEAgLTEsNTUgKzAsMCBAQAotLyogU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAgV0lUSCBMaW51eC1zeXNjYWxsLW5vdGUgKi8KLS8qCi0gKiBE
TUFCVUYgSGVhcHMgVXNlcnNwYWNlIEFQSQotICoKLSAqIENvcHlyaWdodCAoQykgMjAxMSBHb29n
bGUsIEluYy4KLSAqIENvcHlyaWdodCAoQykgMjAxOSBMaW5hcm8gTHRkLgotICovCi0jaWZuZGVm
IF9VQVBJX0xJTlVYX0RNQUJVRl9QT09MX0gKLSNkZWZpbmUgX1VBUElfTElOVVhfRE1BQlVGX1BP
T0xfSAotCi0jaW5jbHVkZSA8bGludXgvaW9jdGwuaD4KLSNpbmNsdWRlIDxsaW51eC90eXBlcy5o
PgotCi0vKioKLSAqIERPQzogRE1BQlVGIEhlYXBzIFVzZXJzcGFjZSBBUEkKLSAqLwotCi0vKiBW
YWxpZCBGRF9GTEFHUyBhcmUgT19DTE9FWEVDLCBPX1JET05MWSwgT19XUk9OTFksIE9fUkRXUiAq
LwotI2RlZmluZSBETUFfSEVBUF9WQUxJRF9GRF9GTEFHUyAoT19DTE9FWEVDIHwgT19BQ0NNT0RF
KQotCi0vKiBDdXJyZW50bHkgbm8gaGVhcCBmbGFncyAqLwotI2RlZmluZSBETUFfSEVBUF9WQUxJ
RF9IRUFQX0ZMQUdTICgwKQotCi0vKioKLSAqIHN0cnVjdCBkbWFfaGVhcF9hbGxvY2F0aW9uX2Rh
dGEgLSBtZXRhZGF0YSBwYXNzZWQgZnJvbSB1c2Vyc3BhY2UgZm9yCi0gKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgYWxsb2NhdGlvbnMKLSAqIEBsZW46CQlzaXplIG9mIHRo
ZSBhbGxvY2F0aW9uCi0gKiBAZmQ6CQkJd2lsbCBiZSBwb3B1bGF0ZWQgd2l0aCBhIGZkIHdoaWNo
IHByb3ZkZXMgdGhlCi0gKgkJCWhhbmRsZSB0byB0aGUgYWxsb2NhdGVkIGRtYS1idWYKLSAqIEBm
ZF9mbGFnczoJCWZpbGUgZGVzY3JpcHRvciBmbGFncyB1c2VkIHdoZW4gYWxsb2NhdGluZwotICog
QGhlYXBfZmxhZ3M6CQlmbGFncyBwYXNzZWQgdG8gaGVhcAotICoKLSAqIFByb3ZpZGVkIGJ5IHVz
ZXJzcGFjZSBhcyBhbiBhcmd1bWVudCB0byB0aGUgaW9jdGwKLSAqLwotc3RydWN0IGRtYV9oZWFw
X2FsbG9jYXRpb25fZGF0YSB7Ci0JX191NjQgbGVuOwotCV9fdTMyIGZkOwotCV9fdTMyIGZkX2Zs
YWdzOwotCV9fdTY0IGhlYXBfZmxhZ3M7Ci0JX191MzIgcmVzZXJ2ZWQwOwotCV9fdTMyIHJlc2Vy
dmVkMTsKLX07Ci0KLSNkZWZpbmUgRE1BX0hFQVBfSU9DX01BR0lDCQknSCcKLQotLyoqCi0gKiBE
T0M6IERNQV9IRUFQX0lPQ19BTExPQyAtIGFsbG9jYXRlIG1lbW9yeSBmcm9tIHBvb2wKLSAqCi0g
KiBUYWtlcyBhbiBkbWFfaGVhcF9hbGxvY2F0aW9uX2RhdGEgc3RydWN0IGFuZCByZXR1cm5zIGl0
IHdpdGggdGhlIGZkIGZpZWxkCi0gKiBwb3B1bGF0ZWQgd2l0aCB0aGUgZG1hYnVmIGhhbmRsZSBv
ZiB0aGUgYWxsb2NhdGlvbi4KLSAqLwotI2RlZmluZSBETUFfSEVBUF9JT0NfQUxMT0MJX0lPV1Io
RE1BX0hFQVBfSU9DX01BR0lDLCAwLCBcCi0JCQkJICAgICAgc3RydWN0IGRtYV9oZWFwX2FsbG9j
YXRpb25fZGF0YSkKLQotI2VuZGlmIC8qIF9VQVBJX0xJTlVYX0RNQUJVRl9QT09MX0ggKi8KLS0g
ClNlYW4gUGF1bCwgU29mdHdhcmUgRW5naW5lZXIsIEdvb2dsZSAvIENocm9taXVtIE9TCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFp
bGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
