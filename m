Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B200F121B37
	for <lists+dri-devel@lfdr.de>; Mon, 16 Dec 2019 21:51:42 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 49F556E890;
	Mon, 16 Dec 2019 20:51:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from us-smtp-delivery-1.mimecast.com (us-smtp-1.mimecast.com
 [207.211.31.81])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 87CC26E891
 for <dri-devel@lists.freedesktop.org>; Mon, 16 Dec 2019 20:51:36 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1576529495;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=PeaHwy6WlGE88ZYmmfDM+iROmBri+Cz7ZaSoLHEK8O8=;
 b=YL75t7oIHwZo0E4hb4yd/uTUwV5bB5t0mQYwOr6KZ4XlrOO1g5URSXXBiEAWqnKYteKb7n
 BOREtE3VPr4m4rXt/nhIH2g+oHsVqHYN+gWBYPHb5Zz3rrJsAuWvil7v3SiV5makRdzfrN
 2/gNpyYDdgwyMQS4kTfaUycthvTK5yY=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-33-8ZbnFOOSOFmkS70I7bsuiw-1; Mon, 16 Dec 2019 15:51:32 -0500
X-MC-Unique: 8ZbnFOOSOFmkS70I7bsuiw-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 8FD30107ACC5;
 Mon, 16 Dec 2019 20:51:30 +0000 (UTC)
Received: from shalem.localdomain.com (ovpn-116-96.ams2.redhat.com
 [10.36.116.96])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 65EC91001B00;
 Mon, 16 Dec 2019 20:51:28 +0000 (UTC)
From: Hans de Goede <hdegoede@redhat.com>
To: Jani Nikula <jani.nikula@linux.intel.com>,
 Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
 Rodrigo Vivi <rodrigo.vivi@intel.com>,
 =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <ville.syrjala@linux.intel.com>,
 intel-gfx <intel-gfx@lists.freedesktop.org>,
 Lee Jones <lee.jones@linaro.org>,
 Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
 Linus Walleij <linus.walleij@linaro.org>
Subject: [PATCH v2 2/5] drm/i915/dsi: Move poking of panel-enable GPIO to
 intel_dsi_vbt.c
Date: Mon, 16 Dec 2019 21:51:19 +0100
Message-Id: <20191216205122.1850923-3-hdegoede@redhat.com>
In-Reply-To: <20191216205122.1850923-1-hdegoede@redhat.com>
References: <20191216205122.1850923-1-hdegoede@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Hans de Goede <hdegoede@redhat.com>, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-gpio@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gc29tZSBvbGRlciBkZXZpY2VzIChCWVQsIENIVCkgd2hpY2ggbWF5IHVzZSB2MiBWQlQgTUlQ
SS1zZXF1ZW5jZXMsCndlIG5lZWQgdG8gbWFudWFsbHkgY29udHJvbCB0aGUgcGFuZWwgZW5hYmxl
IEdQSU8gYXMgdjIgc2VxdWVuY2VzIGRvCm5vdCBkbyB0aGlzLgoKU28gZmFyIHdlIGhhdmUgYmVl
biBjYXJyeWluZyB0aGUgY29kZSB0byBkbyB0aGlzIG9uIEJZVC9DSFQgZGV2aWNlcwp3aXRoIGEg
Q3J5c3RhbCBDb3ZlIFBNSUMgaW4gdmx2X2RzaS5jLCBidXQgYXMgdGhpcyByZWFsbHkgaXMgYSBz
aG9ydGNvbWluZwpvZiB0aGUgVkJUIE1JUEktc2VxdWVuY2VzLCBpbnRlbF9kc2lfdmJ0LmMgaXMg
YSBiZXR0ZXIgcGxhY2UgZm9yIHRoaXMsCnNvIG1vdmUgaXQgdGhlcmUuCgpUaGlzIGlzIGEgcHJl
cGFyYXRpb24gcGF0Y2ggZm9yIGFkZGluZyBwYW5lbC1lbmFibGUgYW5kIGJhY2tsaWdodC1lbmFi
bGUKR1BJTyBzdXBwb3J0IGZvciBCWVQgZGV2aWNlcyB3aGVyZSBpbnN0ZWFkIG9mIHRoZSBQTUlD
IHRoZSBTb0MgaXMgdXNlZApmb3IgYmFja2xpZ2h0IGNvbnRyb2wuCgpSZXZpZXdlZC1ieTogTGlu
dXMgV2FsbGVpaiA8bGludXMud2FsbGVpakBsaW5hcm8ub3JnPgpSZXZpZXdlZC1ieTogVmlsbGUg
U3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTog
SGFucyBkZSBHb2VkZSA8aGRlZ29lZGVAcmVkaGF0LmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RzaS5oICAgICB8ICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHNpX3ZidC5jIHwgNDYgKysrKysrKysrKysrKysrKysrKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jICAgICAgIHwgMjcgKy0tLS0tLS0tLS0t
CiAzIGZpbGVzIGNoYW5nZWQsIDQ4IGluc2VydGlvbnMoKyksIDI3IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaS5oCmluZGV4IGIxNWJlNTgxNDU5OS4u
ZGU3ZTUxY2QzNDYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RzaS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpLmgK
QEAgLTIwMyw2ICsyMDMsOCBAQCB2b2lkIGJ4dF9kc2lfcmVzZXRfY2xvY2tzKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLCBlbnVtIHBvcnQgcG9ydCk7CiAKIC8qIGludGVsX2RzaV92YnQu
YyAqLwogYm9vbCBpbnRlbF9kc2lfdmJ0X2luaXQoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNp
LCB1MTYgcGFuZWxfaWQpOwordm9pZCBpbnRlbF9kc2lfdmJ0X2dwaW9faW5pdChzdHJ1Y3QgaW50
ZWxfZHNpICppbnRlbF9kc2kpOwordm9pZCBpbnRlbF9kc2lfdmJ0X2dwaW9fY2xlYW51cChzdHJ1
Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kpOwogdm9pZCBpbnRlbF9kc2lfdmJ0X2V4ZWNfc2VxdWVu
Y2Uoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpLAogCQkJCSBlbnVtIG1pcGlfc2VxIHNlcV9p
ZCk7CiB2b2lkIGludGVsX2RzaV9tc2xlZXAoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpLCBp
bnQgbXNlYyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RzaV92YnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpX3ZidC5j
CmluZGV4IGY5MDk0NmM5MTJlZS4uOGJlN2Q2YzUwN2FhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaV92YnQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RzaV92YnQuYwpAQCAtNDUzLDggKzQ1Myw4IEBAIHN0YXRpYyBj
b25zdCBjaGFyICpzZXF1ZW5jZV9uYW1lKGVudW0gbWlwaV9zZXEgc2VxX2lkKQogCQlyZXR1cm4g
Iih1bmtub3duKSI7CiB9CiAKLXZvaWQgaW50ZWxfZHNpX3ZidF9leGVjX3NlcXVlbmNlKHN0cnVj
dCBpbnRlbF9kc2kgKmludGVsX2RzaSwKLQkJCQkgZW51bSBtaXBpX3NlcSBzZXFfaWQpCitzdGF0
aWMgdm9pZCBpbnRlbF9kc2lfdmJ0X2V4ZWMoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpLAor
CQkJICAgICAgIGVudW0gbWlwaV9zZXEgc2VxX2lkKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoaW50ZWxfZHNpLT5iYXNlLmJhc2UuZGV2KTsKIAljb25z
dCB1OCAqZGF0YTsKQEAgLTUxOSw2ICs1MTksMTggQEAgdm9pZCBpbnRlbF9kc2lfdmJ0X2V4ZWNf
c2VxdWVuY2Uoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpLAogCX0KIH0KIAordm9pZCBpbnRl
bF9kc2lfdmJ0X2V4ZWNfc2VxdWVuY2Uoc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpLAorCQkJ
CSBlbnVtIG1pcGlfc2VxIHNlcV9pZCkKK3sKKwlpZiAoc2VxX2lkID09IE1JUElfU0VRX1BPV0VS
X09OICYmIGludGVsX2RzaS0+Z3Bpb19wYW5lbCkKKwkJZ3Bpb2Rfc2V0X3ZhbHVlX2NhbnNsZWVw
KGludGVsX2RzaS0+Z3Bpb19wYW5lbCwgMSk7CisKKwlpbnRlbF9kc2lfdmJ0X2V4ZWMoaW50ZWxf
ZHNpLCBzZXFfaWQpOworCisJaWYgKHNlcV9pZCA9PSBNSVBJX1NFUV9QT1dFUl9PRkYgJiYgaW50
ZWxfZHNpLT5ncGlvX3BhbmVsKQorCQlncGlvZF9zZXRfdmFsdWVfY2Fuc2xlZXAoaW50ZWxfZHNp
LT5ncGlvX3BhbmVsLCAwKTsKK30KKwogdm9pZCBpbnRlbF9kc2lfbXNsZWVwKHN0cnVjdCBpbnRl
bF9kc2kgKmludGVsX2RzaSwgaW50IG1zZWMpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShpbnRlbF9kc2ktPmJhc2UuYmFzZS5kZXYpOwpAQCAtNjcxLDMg
KzY4MywzMyBAQCBib29sIGludGVsX2RzaV92YnRfaW5pdChzdHJ1Y3QgaW50ZWxfZHNpICppbnRl
bF9kc2ksIHUxNiBwYW5lbF9pZCkKIAogCXJldHVybiB0cnVlOwogfQorCisvKgorICogT24gc29t
ZSBCWVQvQ0hUIGRldnMgc29tZSBzZXF1ZW5jZXMgYXJlIGluY29tcGxldGUgYW5kIHdlIG5lZWQg
dG8gbWFudWFsbHkKKyAqIGNvbnRyb2wgc29tZSBHUElPcy4KKyAqLwordm9pZCBpbnRlbF9kc2lf
dmJ0X2dwaW9faW5pdChzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kpCit7CisJc3RydWN0IGRy
bV9kZXZpY2UgKmRldiA9IGludGVsX2RzaS0+YmFzZS5iYXNlLmRldjsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJc3RydWN0IG1pcGlfY29uZmln
ICptaXBpX2NvbmZpZyA9IGRldl9wcml2LT52YnQuZHNpLmNvbmZpZzsKKworCWlmICgoSVNfVkFM
TEVZVklFVyhkZXZfcHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpICYmCisJICAgIG1p
cGlfY29uZmlnLT5wd21fYmxjID09IFBQU19CTENfUE1JQykgeworCQlpbnRlbF9kc2ktPmdwaW9f
cGFuZWwgPQorCQkJZ3Bpb2RfZ2V0KGRldi0+ZGV2LCAicGFuZWwiLCBHUElPRF9PVVRfSElHSCk7
CisKKwkJaWYgKElTX0VSUihpbnRlbF9kc2ktPmdwaW9fcGFuZWwpKSB7CisJCQlEUk1fRVJST1Io
IkZhaWxlZCB0byBvd24gZ3BpbyBmb3IgcGFuZWwgY29udHJvbFxuIik7CisJCQlpbnRlbF9kc2kt
PmdwaW9fcGFuZWwgPSBOVUxMOworCQl9CisJfQorfQorCit2b2lkIGludGVsX2RzaV92YnRfZ3Bp
b19jbGVhbnVwKHN0cnVjdCBpbnRlbF9kc2kgKmludGVsX2RzaSkKK3sKKwlpZiAoaW50ZWxfZHNp
LT5ncGlvX3BhbmVsKSB7CisJCWdwaW9kX3B1dChpbnRlbF9kc2ktPmdwaW9fcGFuZWwpOworCQlp
bnRlbF9kc2ktPmdwaW9fcGFuZWwgPSBOVUxMOworCX0KK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS92bHZfZHNpLmMKaW5kZXggNDAzZmIwOWZjYjYzLi5jMWVkZDg4NTdhZjAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jCkBAIC0yMyw3ICsyMyw2IEBACiAgKiBBdXRo
b3I6IEphbmkgTmlrdWxhIDxqYW5pLm5pa3VsYUBpbnRlbC5jb20+CiAgKi8KIAotI2luY2x1ZGUg
PGxpbnV4L2dwaW8vY29uc3VtZXIuaD4KICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiAKICNpbmNs
dWRlIDxkcm0vZHJtX2F0b21pY19oZWxwZXIuaD4KQEAgLTc5Nyw5ICs3OTYsNiBAQCBzdGF0aWMg
dm9pZCBpbnRlbF9kc2lfcHJlX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
IAlpZiAoIUlTX0dFTUlOSUxBS0UoZGV2X3ByaXYpKQogCQlpbnRlbF9kc2lfcHJlcGFyZShlbmNv
ZGVyLCBwaXBlX2NvbmZpZyk7CiAKLQkvKiBQb3dlciBvbiwgdHJ5IGJvdGggQ1JDIHBtaWMgZ3Bp
byBhbmQgVkJUICovCi0JaWYgKGludGVsX2RzaS0+Z3Bpb19wYW5lbCkKLQkJZ3Bpb2Rfc2V0X3Zh
bHVlX2NhbnNsZWVwKGludGVsX2RzaS0+Z3Bpb19wYW5lbCwgMSk7CiAJaW50ZWxfZHNpX3ZidF9l
eGVjX3NlcXVlbmNlKGludGVsX2RzaSwgTUlQSV9TRVFfUE9XRVJfT04pOwogCWludGVsX2RzaV9t
c2xlZXAoaW50ZWxfZHNpLCBpbnRlbF9kc2ktPnBhbmVsX29uX2RlbGF5KTsKIApAQCAtOTQzLDEx
ICs5MzksOCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kc2lfcG9zdF9kaXNhYmxlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogCS8qIEFzc2VydCByZXNldCAqLwogCWludGVsX2RzaV92YnRf
ZXhlY19zZXF1ZW5jZShpbnRlbF9kc2ksIE1JUElfU0VRX0FTU0VSVF9SRVNFVCk7CiAKLQkvKiBQ
b3dlciBvZmYsIHRyeSBib3RoIENSQyBwbWljIGdwaW8gYW5kIFZCVCAqLwogCWludGVsX2RzaV9t
c2xlZXAoaW50ZWxfZHNpLCBpbnRlbF9kc2ktPnBhbmVsX29mZl9kZWxheSk7CiAJaW50ZWxfZHNp
X3ZidF9leGVjX3NlcXVlbmNlKGludGVsX2RzaSwgTUlQSV9TRVFfUE9XRVJfT0ZGKTsKLQlpZiAo
aW50ZWxfZHNpLT5ncGlvX3BhbmVsKQotCQlncGlvZF9zZXRfdmFsdWVfY2Fuc2xlZXAoaW50ZWxf
ZHNpLT5ncGlvX3BhbmVsLCAwKTsKIAogCS8qCiAJICogRklYTUUgQXMgd2UgZG8gd2l0aCBlRFAs
IGp1c3QgbWFrZSBhIG5vdGUgb2YgdGhlIHRpbWUgaGVyZQpAQCAtMTUzOSwxMCArMTUzMiw3IEBA
IHN0YXRpYyB2b2lkIGludGVsX2RzaV9lbmNvZGVyX2Rlc3Ryb3koc3RydWN0IGRybV9lbmNvZGVy
ICplbmNvZGVyKQogewogCXN0cnVjdCBpbnRlbF9kc2kgKmludGVsX2RzaSA9IGVuY190b19pbnRl
bF9kc2koZW5jb2Rlcik7CiAKLQkvKiBkaXNwb3NlIG9mIHRoZSBncGlvcyAqLwotCWlmIChpbnRl
bF9kc2ktPmdwaW9fcGFuZWwpCi0JCWdwaW9kX3B1dChpbnRlbF9kc2ktPmdwaW9fcGFuZWwpOwot
CisJaW50ZWxfZHNpX3ZidF9ncGlvX2NsZWFudXAoaW50ZWxfZHNpKTsKIAlpbnRlbF9lbmNvZGVy
X2Rlc3Ryb3koZW5jb2Rlcik7CiB9CiAKQEAgLTE4NjcsMjAgKzE4NTcsNyBAQCB2b2lkIHZsdl9k
c2lfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAl2bHZfZHBoeV9w
YXJhbV9pbml0KGludGVsX2RzaSk7CiAKLQkvKgotCSAqIEluIGNhc2Ugb2YgQllUIHdpdGggQ1JD
IFBNSUMsIHdlIG5lZWQgdG8gdXNlIEdQSU8gZm9yCi0JICogUGFuZWwgY29udHJvbC4KLQkgKi8K
LQlpZiAoKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpIHx8IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYp
KSAmJgotCSAgICAoZGV2X3ByaXYtPnZidC5kc2kuY29uZmlnLT5wd21fYmxjID09IFBQU19CTENf
UE1JQykpIHsKLQkJaW50ZWxfZHNpLT5ncGlvX3BhbmVsID0KLQkJCWdwaW9kX2dldChkZXYtPmRl
diwgInBhbmVsIiwgR1BJT0RfT1VUX0hJR0gpOwotCi0JCWlmIChJU19FUlIoaW50ZWxfZHNpLT5n
cGlvX3BhbmVsKSkgewotCQkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gb3duIGdwaW8gZm9yIHBhbmVs
IGNvbnRyb2xcbiIpOwotCQkJaW50ZWxfZHNpLT5ncGlvX3BhbmVsID0gTlVMTDsKLQkJfQotCX0K
KwlpbnRlbF9kc2lfdmJ0X2dwaW9faW5pdChpbnRlbF9kc2kpOwogCiAJZHJtX2Nvbm5lY3Rvcl9p
bml0KGRldiwgY29ubmVjdG9yLCAmaW50ZWxfZHNpX2Nvbm5lY3Rvcl9mdW5jcywKIAkJCSAgIERS
TV9NT0RFX0NPTk5FQ1RPUl9EU0kpOwotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
