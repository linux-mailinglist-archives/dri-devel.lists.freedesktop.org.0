Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 2BA717F812
	for <lists+dri-devel@lfdr.de>; Fri,  2 Aug 2019 15:12:50 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 620446EE17;
	Fri,  2 Aug 2019 13:12:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 238A56EE16
 for <dri-devel@lists.freedesktop.org>; Fri,  2 Aug 2019 13:12:35 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
 [10.5.11.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 7C258882F2;
 Fri,  2 Aug 2019 13:12:34 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-81.ams2.redhat.com
 [10.36.116.81])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 585416012D;
 Fri,  2 Aug 2019 13:12:31 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id 422C39D1E; Fri,  2 Aug 2019 15:12:28 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v7 14/18] drm/virtio: switch from ttm to gem shmem helpers
Date: Fri,  2 Aug 2019 15:12:21 +0200
Message-Id: <20190802131225.17760-15-kraxel@redhat.com>
In-Reply-To: <20190802131225.17760-1-kraxel@redhat.com>
References: <20190802131225.17760-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.28]); Fri, 02 Aug 2019 13:12:34 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>, open list <linux-kernel@vger.kernel.org>,
 gurchetansingh@chromium.org, Gerd Hoffmann <kraxel@redhat.com>,
 "open list:VIRTIO GPU DRIVER" <virtualization@lists.linux-foundation.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

dmlydGlvLWdwdSBiYXNpY2FsbHkgbmVlZHMgYSBzZ190YWJsZSBmb3IgdGhlIGJvLCB0byB0ZWxs
IHRoZSBob3N0IHdoZXJlCnRoZSBiYWNraW5nIHBhZ2VzIGZvciB0aGUgb2JqZWN0IGFyZS4gIFNv
IHRoZSBnZW0gc2htZW0gaGVscGVycyBhcmUgYQpwZXJmZWN0IGZpdC4gIFNvbWUgZHJtX2dlbV9v
YmplY3RfZnVuY3MgbmVlZCB0aGluIHdyYXBwZXJzIHRvIHVwZGF0ZSB0aGUKaG9zdCBzdGF0ZSwg
YnV0IG90aGVyd2lzZSB0aGUgaGVscGVycyBoYW5kbGUgZXZlcnl0aGluZyBqdXN0IGZpbmUuCgpP
bmNlIHRoZSBmZW5jaW5nIHdhcyBzb3J0ZWQgdGhlIHN3aXRjaCB3YXMgc3VycHJpc2luZ2x5IGVh
c3kgYW5kIGZvciB0aGUKbW9zdCBwYXJ0IGp1c3QgcmVtb3ZpbmcgdGhlIHR0bSBjb2RlLgoKdjQ6
IGZpeCBkcm1fZ2VtX29iamVjdF9mdW5jcyBuYW1lLgoKU2lnbmVkLW9mZi1ieTogR2VyZCBIb2Zm
bWFubiA8a3JheGVsQHJlZGhhdC5jb20+CkFja2VkLWJ5OiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwu
dmV0dGVyQGZmd2xsLmNoPgotLS0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYu
aCAgICB8ICA1MiArLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMgICAg
fCAgMjAgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9nZW0uYyAgICB8ICAxNiAr
LQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2lvY3RsLmMgIHwgICA1ICstCiBkcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMgICAgfCAgIDkgLQogZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby92aXJ0Z3B1X29iamVjdC5jIHwgMTQ2ICsrKystLS0tLS0tLQogZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ByaW1lLmMgIHwgIDM3IC0tLQogZHJpdmVycy9ncHUvZHJt
L3ZpcnRpby92aXJ0Z3B1X3R0bS5jICAgIHwgMzA1IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMgICAgIHwgIDI0ICstCiBkcml2ZXJz
L2dwdS9kcm0vdmlydGlvL0tjb25maWcgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vTWFrZWZpbGUgICAgICAgICB8ICAgMiArLQogMTEgZmlsZXMgY2hhbmdlZCwgODAg
aW5zZXJ0aW9ucygrKSwgNTM4IGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAwNjQ0IGRyaXZl
cnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV90dG0uYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdw
dV9kcnYuaAppbmRleCBlNWYxYjIwYjZmMTQuLjFkNmU0ZmZlZTdkMSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9kcnYuaApAQCAtMzUsMTIgKzM1LDkgQEAKICNpbmNsdWRlIDxkcm0vZHJt
X2VuY29kZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fZ2VtLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmg+CiAjaW5j
bHVkZSA8ZHJtL2RybV9pb2N0bC5oPgogI2luY2x1ZGUgPGRybS9kcm1fcHJvYmVfaGVscGVyLmg+
Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fYXBpLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1f
Ym9fZHJpdmVyLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fbW9kdWxlLmg+Ci0jaW5jbHVkZSA8
ZHJtL3R0bS90dG1fcGxhY2VtZW50Lmg+CiAKICNkZWZpbmUgRFJJVkVSX05BTUUgInZpcnRpb19n
cHUiCiAjZGVmaW5lIERSSVZFUl9ERVNDICJ2aXJ0aW8gR1BVIgpAQCAtNjgsMjEgKzY1LDE2IEBA
IHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgewogfTsKIAogc3RydWN0IHZpcnRpb19n
cHVfb2JqZWN0IHsKLQlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgZ2VtX2Jhc2U7CisJc3RydWN0IGRy
bV9nZW1fc2htZW1fb2JqZWN0IGJhc2U7CiAJdWludDMyX3QgaHdfcmVzX2hhbmRsZTsKIAogCXN0
cnVjdCBzZ190YWJsZSAqcGFnZXM7CiAJdWludDMyX3QgbWFwcGVkOwotCXZvaWQgKnZtYXA7CiAJ
Ym9vbCBkdW1iOwotCXN0cnVjdCB0dG1fcGxhY2UgICAgICAgICAgICAgICAgcGxhY2VtZW50X2Nv
ZGU7Ci0Jc3RydWN0IHR0bV9wbGFjZW1lbnQJCXBsYWNlbWVudDsKLQlzdHJ1Y3QgdHRtX2J1ZmZl
cl9vYmplY3QJdGJvOwotCXN0cnVjdCB0dG1fYm9fa21hcF9vYmoJCWttYXA7CiAJYm9vbCBjcmVh
dGVkOwogfTsKICNkZWZpbmUgZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKGdvYmopIFwKLQljb250YWlu
ZXJfb2YoKGdvYmopLCBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QsIGdlbV9iYXNlKQorCWNvbnRh
aW5lcl9vZigoZ29iaiksIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgYmFzZS5iYXNlKQogCiBz
dHJ1Y3QgdmlydGlvX2dwdV9vYmplY3RfYXJyYXkgewogCXN0cnVjdCB3d19hY3F1aXJlX2N0eCB0
aWNrZXQ7CkBAIC0xNTMsMTAgKzE0NSw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVy
IHsKICNkZWZpbmUgdG9fdmlydGlvX2dwdV9mcmFtZWJ1ZmZlcih4KSBcCiAJY29udGFpbmVyX29m
KHgsIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVyLCBiYXNlKQogCi1zdHJ1Y3QgdmlydGlv
X2dwdV9tbWFuIHsKLQlzdHJ1Y3QgdHRtX2JvX2RldmljZQkJYmRldjsKLX07Ci0KIHN0cnVjdCB2
aXJ0aW9fZ3B1X3F1ZXVlIHsKIAlzdHJ1Y3QgdmlydHF1ZXVlICp2cTsKIAlzcGlubG9ja190IHFs
b2NrOwpAQCAtMTg1LDggKzE3Myw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSB7CiAKIAlz
dHJ1Y3QgdmlydGlvX2RldmljZSAqdmRldjsKIAotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gbW1h
bjsKLQogCXN0cnVjdCB2aXJ0aW9fZ3B1X291dHB1dCBvdXRwdXRzW1ZJUlRJT19HUFVfTUFYX1ND
QU5PVVRTXTsKIAl1aW50MzJfdCBudW1fc2Nhbm91dHM7CiAKQEAgLTM1OCwxMSArMzQ0LDYgQEAg
c3RydWN0IGRybV9wbGFuZSAqdmlydGlvX2dwdV9wbGFuZV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXYsCiAJCQkJCWVudW0gZHJtX3BsYW5lX3R5cGUgdHlwZSwKIAkJCQkJaW50
IGluZGV4KTsKIAotLyogdmlydGlvX2dwdV90dG0uYyAqLwotaW50IHZpcnRpb19ncHVfdHRtX2lu
aXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci12b2lkIHZpcnRpb19ncHVfdHRt
X2Zpbmkoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci1pbnQgdmlydGlvX2dwdV9t
bWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7Ci0KIC8q
IHZpcnRpb19ncHVfZmVuY2UuYyAqLwogYm9vbCB2aXJ0aW9fZmVuY2Vfc2lnbmFsZWQoc3RydWN0
IGRtYV9mZW5jZSAqZik7CiBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqdmlydGlvX2dwdV9mZW5j
ZV9hbGxvYygKQEAgLTM3NCw1OCArMzU1LDQ3IEBAIHZvaWQgdmlydGlvX2dwdV9mZW5jZV9ldmVu
dF9wcm9jZXNzKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmRldiwKIAkJCQkgICAgdTY0IGxh
c3Rfc2VxKTsKIAogLyogdmlydGlvX2dwdV9vYmplY3QgKi8KK3N0cnVjdCBkcm1fZ2VtX29iamVj
dCAqdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJ
CQlzaXplX3Qgc2l6ZSk7CiBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0
aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9w
YXJhbXMgKnBhcmFtcywKIAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICoqYm9fcHRy
LAogCQkJICAgICBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqZmVuY2UpOwotdm9pZCB2aXJ0aW9f
Z3B1X29iamVjdF9rdW5tYXAoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyk7Ci1pbnQgdmly
dGlvX2dwdV9vYmplY3Rfa21hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKTsKLWludCB2
aXJ0aW9fZ3B1X29iamVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpx
ZGV2LAotCQkJCSAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwotdm9pZCB2aXJ0aW9f
Z3B1X29iamVjdF9mcmVlX3NnX3RhYmxlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwog
CiAvKiB2aXJ0Z3B1X3ByaW1lLmMgKi8KLXN0cnVjdCBzZ190YWJsZSAqdmlydGdwdV9nZW1fcHJp
bWVfZ2V0X3NnX3RhYmxlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKTsKIHN0cnVjdCBkcm1f
Z2VtX29iamVjdCAqdmlydGdwdV9nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlKAogCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCwKIAlzdHJ1
Y3Qgc2dfdGFibGUgKnNndCk7Ci12b2lkICp2aXJ0Z3B1X2dlbV9wcmltZV92bWFwKHN0cnVjdCBk
cm1fZ2VtX29iamVjdCAqb2JqKTsKLXZvaWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVj
dCBkcm1fZ2VtX29iamVjdCAqb2JqLCB2b2lkICp2YWRkcik7Ci1pbnQgdmlydGdwdV9nZW1fcHJp
bWVfbW1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hKTsKIAogc3RhdGljIGlubGluZSBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Qq
CiB2aXJ0aW9fZ3B1X29iamVjdF9yZWYoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIHsK
LQl0dG1fYm9fZ2V0KCZiby0+dGJvKTsKKwlkcm1fZ2VtX29iamVjdF9nZXQoJmJvLT5iYXNlLmJh
c2UpOwogCXJldHVybiBibzsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIHZpcnRpb19ncHVfb2Jq
ZWN0X3VucmVmKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqKmJvKQogewotCXN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqdGJvOwotCiAJaWYgKCgqYm8pID09IE5VTEwpCiAJCXJldHVybjsKLQl0
Ym8gPSAmKCgqYm8pLT50Ym8pOwotCXR0bV9ib19wdXQodGJvKTsKKwlkcm1fZ2VtX29iamVjdF9w
dXQoJigqYm8pLT5iYXNlLmJhc2UpOwogCSpibyA9IE5VTEw7CiB9CiAKIHN0YXRpYyBpbmxpbmUg
dTY0IHZpcnRpb19ncHVfb2JqZWN0X21tYXBfb2Zmc2V0KHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dCAqYm8pCiB7Ci0JcmV0dXJuIGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmYm8tPnRiby52bWFf
bm9kZSk7CisJcmV0dXJuIGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmYm8tPmJhc2UuYmFzZS52
bWFfbm9kZSk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgaW50IHZpcnRpb19ncHVfb2JqZWN0X3Jlc2Vy
dmUoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIHsKIAlpbnQgcjsKIAotCXIgPSByZXNl
cnZhdGlvbl9vYmplY3RfbG9ja19pbnRlcnJ1cHRpYmxlKGJvLT5nZW1fYmFzZS5yZXN2LCBOVUxM
KTsKKwlyID0gcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2tfaW50ZXJydXB0aWJsZShiby0+YmFzZS5i
YXNlLnJlc3YsIE5VTEwpOwogCWlmICh1bmxpa2VseShyICE9IDApKSB7CiAJCWlmIChyICE9IC1F
SU5UUikgewogCQkJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2ID0KLQkJCQliby0+Z2Vt
X2Jhc2UuZGV2LT5kZXZfcHJpdmF0ZTsKKwkJCQliby0+YmFzZS5iYXNlLmRldi0+ZGV2X3ByaXZh
dGU7CiAJCQlkZXZfZXJyKHFkZXYtPmRldiwgIiVwIHJlc2VydmUgZmFpbGVkXG4iLCBibyk7CiAJ
CX0KIAkJcmV0dXJuIHI7CkBAIC00MzUsNyArNDA1LDcgQEAgc3RhdGljIGlubGluZSBpbnQgdmly
dGlvX2dwdV9vYmplY3RfcmVzZXJ2ZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQogCiBz
dGF0aWMgaW5saW5lIHZvaWQgdmlydGlvX2dwdV9vYmplY3RfdW5yZXNlcnZlKHN0cnVjdCB2aXJ0
aW9fZ3B1X29iamVjdCAqYm8pCiB7Ci0JcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhiby0+Z2Vt
X2Jhc2UucmVzdik7CisJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhiby0+YmFzZS5iYXNlLnJl
c3YpOwogfQogCiAvKiB2aXJnbCBkZWJ1ZnMgKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vdmlydGdwdV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9k
cnYuYwppbmRleCAwZmMzMmZhMGIzYzAuLjJkYzQxZmM2NDAwMiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vdmlydGdwdV9kcnYuYwpAQCAtMTg1LDE3ICsxODUsNyBAQCBNT0RVTEVfQVVUSE9SKCJEYXZl
IEFpcmxpZSA8YWlybGllZEByZWRoYXQuY29tPiIpOwogTU9EVUxFX0FVVEhPUigiR2VyZCBIb2Zm
bWFubiA8a3JheGVsQHJlZGhhdC5jb20+Iik7CiBNT0RVTEVfQVVUSE9SKCJBbG9uIExldnkiKTsK
IAotc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgdmlydGlvX2dwdV9kcml2ZXJf
Zm9wcyA9IHsKLQkub3duZXIgPSBUSElTX01PRFVMRSwKLQkub3BlbiA9IGRybV9vcGVuLAotCS5t
bWFwID0gdmlydGlvX2dwdV9tbWFwLAotCS5wb2xsID0gZHJtX3BvbGwsCi0JLnJlYWQgPSBkcm1f
cmVhZCwKLQkudW5sb2NrZWRfaW9jdGwJPSBkcm1faW9jdGwsCi0JLnJlbGVhc2UgPSBkcm1fcmVs
ZWFzZSwKLQkuY29tcGF0X2lvY3RsID0gZHJtX2NvbXBhdF9pb2N0bCwKLQkubGxzZWVrID0gbm9v
cF9sbHNlZWssCi19OworREVGSU5FX0RSTV9HRU1fU0hNRU1fRk9QUyh2aXJ0aW9fZ3B1X2RyaXZl
cl9mb3BzKTsKIAogc3RhdGljIHN0cnVjdCBkcm1fZHJpdmVyIGRyaXZlciA9IHsKIAkuZHJpdmVy
X2ZlYXR1cmVzID0gRFJJVkVSX01PREVTRVQgfCBEUklWRVJfR0VNIHwgRFJJVkVSX1JFTkRFUiB8
IERSSVZFUl9BVE9NSUMsCkBAIC0yMTAsMTUgKzIwMCw5IEBAIHN0YXRpYyBzdHJ1Y3QgZHJtX2Ry
aXZlciBkcml2ZXIgPSB7CiAjZW5kaWYKIAkucHJpbWVfaGFuZGxlX3RvX2ZkID0gZHJtX2dlbV9w
cmltZV9oYW5kbGVfdG9fZmQsCiAJLnByaW1lX2ZkX3RvX2hhbmRsZSA9IGRybV9nZW1fcHJpbWVf
ZmRfdG9faGFuZGxlLAotCS5nZW1fcHJpbWVfZ2V0X3NnX3RhYmxlID0gdmlydGdwdV9nZW1fcHJp
bWVfZ2V0X3NnX3RhYmxlLAogCS5nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlID0gdmlydGdwdV9n
ZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlLAotCS5nZW1fcHJpbWVfdm1hcCA9IHZpcnRncHVfZ2Vt
X3ByaW1lX3ZtYXAsCi0JLmdlbV9wcmltZV92dW5tYXAgPSB2aXJ0Z3B1X2dlbV9wcmltZV92dW5t
YXAsCi0JLmdlbV9wcmltZV9tbWFwID0gdmlydGdwdV9nZW1fcHJpbWVfbW1hcCwKIAotCS5nZW1f
ZnJlZV9vYmplY3RfdW5sb2NrZWQgPSB2aXJ0aW9fZ3B1X2dlbV9mcmVlX29iamVjdCwKLQkuZ2Vt
X29wZW5fb2JqZWN0ID0gdmlydGlvX2dwdV9nZW1fb2JqZWN0X29wZW4sCi0JLmdlbV9jbG9zZV9v
YmplY3QgPSB2aXJ0aW9fZ3B1X2dlbV9vYmplY3RfY2xvc2UsCisJLmdlbV9jcmVhdGVfb2JqZWN0
ID0gdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0LAogCS5mb3BzID0gJnZpcnRpb19ncHVfZHJpdmVy
X2ZvcHMsCiAKIAkuaW9jdGxzID0gdmlydGlvX2dwdV9pb2N0bHMsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfZ2VtLmMKaW5kZXggODA3MzZhZGQ4ZmZhLi4wY2JhNzhiY2YzOWMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9nZW0uYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfZ2VtLmMKQEAgLTI4LDE0ICsyOCw2IEBACiAKICNpbmNsdWRl
ICJ2aXJ0Z3B1X2Rydi5oIgogCi12b2lkIHZpcnRpb19ncHVfZ2VtX2ZyZWVfb2JqZWN0KHN0cnVj
dCBkcm1fZ2VtX29iamVjdCAqZ2VtX29iaikKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Qg
Km9iaiA9IGdlbV90b192aXJ0aW9fZ3B1X29iaihnZW1fb2JqKTsKLQotCWlmIChvYmopCi0JCXZp
cnRpb19ncHVfb2JqZWN0X3VucmVmKCZvYmopOwotfQotCiBzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3QqCiB2aXJ0aW9fZ3B1X2FsbG9jX29iamVjdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQkJ
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0X3BhcmFtcyAqcGFyYW1zLApAQCAtNjYsMTYgKzU4LDE2
IEBAIGludCB2aXJ0aW9fZ3B1X2dlbV9jcmVhdGUoc3RydWN0IGRybV9maWxlICpmaWxlLAogCWlm
IChJU19FUlIob2JqKSkKIAkJcmV0dXJuIFBUUl9FUlIob2JqKTsKIAotCXJldCA9IGRybV9nZW1f
aGFuZGxlX2NyZWF0ZShmaWxlLCAmb2JqLT5nZW1fYmFzZSwgJmhhbmRsZSk7CisJcmV0ID0gZHJt
X2dlbV9oYW5kbGVfY3JlYXRlKGZpbGUsICZvYmotPmJhc2UuYmFzZSwgJmhhbmRsZSk7CiAJaWYg
KHJldCkgewotCQlkcm1fZ2VtX29iamVjdF9yZWxlYXNlKCZvYmotPmdlbV9iYXNlKTsKKwkJZHJt
X2dlbV9vYmplY3RfcmVsZWFzZSgmb2JqLT5iYXNlLmJhc2UpOwogCQlyZXR1cm4gcmV0OwogCX0K
IAotCSpvYmpfcCA9ICZvYmotPmdlbV9iYXNlOworCSpvYmpfcCA9ICZvYmotPmJhc2UuYmFzZTsK
IAogCS8qIGRyb3AgcmVmZXJlbmNlIGZyb20gYWxsb2NhdGUgLSBoYW5kbGUgaG9sZHMgaXQgbm93
ICovCi0JZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZvYmotPmdlbV9iYXNlKTsKKwlkcm1f
Z2VtX29iamVjdF9wdXRfdW5sb2NrZWQoJm9iai0+YmFzZS5iYXNlKTsKIAogCSpoYW5kbGVfcCA9
IGhhbmRsZTsKIAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV9pb2N0bC5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2lvY3RsLmMK
aW5kZXggMTIzYWMyOGY0OThhLi44NjViM2I4NDAwZWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9pb2N0bC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV9pb2N0bC5jCkBAIC0yOSw3ICsyOSw2IEBACiAjaW5jbHVkZSA8bGludXgvc3luY19m
aWxlLmg+CiAKICNpbmNsdWRlIDxkcm0vZHJtX2ZpbGUuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0
bV9leGVjYnVmX3V0aWwuaD4KICNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4KIAogI2luY2x1
ZGUgInZpcnRncHVfZHJ2LmgiCkBAIC0yNjEsNyArMjYwLDcgQEAgc3RhdGljIGludCB2aXJ0aW9f
Z3B1X3Jlc291cmNlX2NyZWF0ZV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpk
YXRhLAogCWRtYV9mZW5jZV9wdXQoJmZlbmNlLT5mKTsKIAlpZiAoSVNfRVJSKHFvYmopKQogCQly
ZXR1cm4gUFRSX0VSUihxb2JqKTsKLQlvYmogPSAmcW9iai0+Z2VtX2Jhc2U7CisJb2JqID0gJnFv
YmotPmJhc2UuYmFzZTsKIAogCXJldCA9IGRybV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlX3ByaXYs
IG9iaiwgJmhhbmRsZSk7CiAJaWYgKHJldCkgewpAQCAtMjg4LDcgKzI4Nyw3IEBAIHN0YXRpYyBp
bnQgdmlydGlvX2dwdV9yZXNvdXJjZV9pbmZvX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
IHZvaWQgKmRhdGEsCiAKIAlxb2JqID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKGdvYmopOwogCi0J
cmktPnNpemUgPSBxb2JqLT5nZW1fYmFzZS5zaXplOworCXJpLT5zaXplID0gcW9iai0+YmFzZS5i
YXNlLnNpemU7CiAJcmktPnJlc19oYW5kbGUgPSBxb2JqLT5od19yZXNfaGFuZGxlOwogCWRybV9n
ZW1fb2JqZWN0X3B1dF91bmxvY2tlZChnb2JqKTsKIAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vdmlydGdwdV9rbXMuYwppbmRleCBjMTkwNzAyZmFiNzIuLjIzMWM0ZTI3YjNiMyAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2ttcy5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYwpAQCAtMTczLDEyICsxNzMsNiBAQCBpbnQgdmly
dGlvX2dwdV9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCWdvdG8gZXJyX3ZidWZzOwog
CX0KIAotCXJldCA9IHZpcnRpb19ncHVfdHRtX2luaXQodmdkZXYpOwotCWlmIChyZXQpIHsKLQkJ
RFJNX0VSUk9SKCJmYWlsZWQgdG8gaW5pdCB0dG0gJWRcbiIsIHJldCk7Ci0JCWdvdG8gZXJyX3R0
bTsKLQl9Ci0KIAkvKiBnZXQgZGlzcGxheSBpbmZvICovCiAJdmlydGlvX2NyZWFkKHZnZGV2LT52
ZGV2LCBzdHJ1Y3QgdmlydGlvX2dwdV9jb25maWcsCiAJCSAgICAgbnVtX3NjYW5vdXRzLCAmbnVt
X3NjYW5vdXRzKTsKQEAgLTIxMCw4ICsyMDQsNiBAQCBpbnQgdmlydGlvX2dwdV9pbml0KHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYpCiAJcmV0dXJuIDA7CiAKIGVycl9zY2Fub3V0czoKLQl2aXJ0aW9f
Z3B1X3R0bV9maW5pKHZnZGV2KTsKLWVycl90dG06CiAJdmlydGlvX2dwdV9mcmVlX3ZidWZzKHZn
ZGV2KTsKIGVycl92YnVmczoKIAl2Z2Rldi0+dmRldi0+Y29uZmlnLT5kZWxfdnFzKHZnZGV2LT52
ZGV2KTsKQEAgLTI0Miw3ICsyMzQsNiBAQCB2b2lkIHZpcnRpb19ncHVfZGVpbml0KHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYpCiAJdmdkZXYtPnZkZXYtPmNvbmZpZy0+ZGVsX3Zxcyh2Z2Rldi0+dmRl
dik7CiAKIAl2aXJ0aW9fZ3B1X21vZGVzZXRfZmluaSh2Z2Rldik7Ci0JdmlydGlvX2dwdV90dG1f
ZmluaSh2Z2Rldik7CiAJdmlydGlvX2dwdV9mcmVlX3ZidWZzKHZnZGV2KTsKIAl2aXJ0aW9fZ3B1
X2NsZWFudXBfY2FwX2NhY2hlKHZnZGV2KTsKIAlrZnJlZSh2Z2Rldi0+Y2Fwc2V0cyk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMKaW5kZXggMjkwMjQ4N2YwNTFhLi5mYjlk
MDVhNjhmNGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9vYmpl
Y3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMKQEAgLTIz
LDggKzIzLDYgQEAKICAqIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVB
TElOR1MgSU4gVEhFIFNPRlRXQVJFLgogICovCiAKLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9leGVj
YnVmX3V0aWwuaD4KLQogI2luY2x1ZGUgInZpcnRncHVfZHJ2LmgiCiAKIHN0YXRpYyBpbnQgdmly
dGlvX2dwdV9yZXNvdXJjZV9pZF9nZXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwK
QEAgLTU3LDM5ICs1NSw0NSBAQCBzdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3Jlc291cmNlX2lkX3B1
dChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LCB1aW50MzJfdAogI2VuZGlmCiB9CiAK
LXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfdHRtX2JvX2Rlc3Ryb3koc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICp0Ym8pCitzdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X2ZyZWVfb2JqZWN0KHN0cnVjdCBk
cm1fZ2VtX29iamVjdCAqb2JqKQogewotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm87Ci0J
c3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldjsKLQotCWJvID0gY29udGFpbmVyX29mKHRi
bywgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCB0Ym8pOwotCXZnZGV2ID0gKHN0cnVjdCB2aXJ0
aW9fZ3B1X2RldmljZSAqKWJvLT5nZW1fYmFzZS5kZXYtPmRldl9wcml2YXRlOworCXN0cnVjdCB2
aXJ0aW9fZ3B1X29iamVjdCAqYm8gPSBnZW1fdG9fdmlydGlvX2dwdV9vYmoob2JqKTsKKwlzdHJ1
Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0gYm8tPmJhc2UuYmFzZS5kZXYtPmRldl9wcml2
YXRlOwogCisJaWYgKGJvLT5wYWdlcykKKwkJdmlydGlvX2dwdV9vYmplY3RfZGV0YWNoKHZnZGV2
LCBibyk7CiAJaWYgKGJvLT5jcmVhdGVkKQogCQl2aXJ0aW9fZ3B1X2NtZF91bnJlZl9yZXNvdXJj
ZSh2Z2RldiwgYm8tPmh3X3Jlc19oYW5kbGUpOwotCWlmIChiby0+cGFnZXMpCi0JCXZpcnRpb19n
cHVfb2JqZWN0X2ZyZWVfc2dfdGFibGUoYm8pOwotCWlmIChiby0+dm1hcCkKLQkJdmlydGlvX2dw
dV9vYmplY3Rfa3VubWFwKGJvKTsKLQlkcm1fZ2VtX29iamVjdF9yZWxlYXNlKCZiby0+Z2VtX2Jh
c2UpOwogCXZpcnRpb19ncHVfcmVzb3VyY2VfaWRfcHV0KHZnZGV2LCBiby0+aHdfcmVzX2hhbmRs
ZSk7Ci0Ja2ZyZWUoYm8pOworCisJZHJtX2dlbV9zaG1lbV9mcmVlX29iamVjdChvYmopOwogfQog
Ci1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X2luaXRfdHRtX3BsYWNlbWVudChzdHJ1Y3QgdmlydGlv
X2dwdV9vYmplY3QgKnZnYm8pCitzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9nZW1fb2JqZWN0X2Z1
bmNzIHZpcnRpb19ncHVfZ2VtX2Z1bmNzID0geworCS5mcmVlID0gdmlydGlvX2dwdV9mcmVlX29i
amVjdCwKKwkub3BlbiA9IHZpcnRpb19ncHVfZ2VtX29iamVjdF9vcGVuLAorCS5jbG9zZSA9IHZp
cnRpb19ncHVfZ2VtX29iamVjdF9jbG9zZSwKKworCS5wcmludF9pbmZvID0gZHJtX2dlbV9zaG1l
bV9wcmludF9pbmZvLAorCS5waW4gPSBkcm1fZ2VtX3NobWVtX3BpbiwKKwkudW5waW4gPSBkcm1f
Z2VtX3NobWVtX3VucGluLAorCS5nZXRfc2dfdGFibGUgPSBkcm1fZ2VtX3NobWVtX2dldF9zZ190
YWJsZSwKKwkudm1hcCA9IGRybV9nZW1fc2htZW1fdm1hcCwKKwkudnVubWFwID0gZHJtX2dlbV9z
aG1lbV92dW5tYXAsCisJLnZtX29wcyA9ICZkcm1fZ2VtX3NobWVtX3ZtX29wcywKK307CisKK3N0
cnVjdCBkcm1fZ2VtX29iamVjdCAqdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0KHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsCisJCQkJCQlzaXplX3Qgc2l6ZSkKIHsKLQl1MzIgYyA9IDE7CisJc3RydWN0
IHZpcnRpb19ncHVfb2JqZWN0ICpibzsKIAotCXZnYm8tPnBsYWNlbWVudC5wbGFjZW1lbnQgPSAm
dmdiby0+cGxhY2VtZW50X2NvZGU7Ci0Jdmdiby0+cGxhY2VtZW50LmJ1c3lfcGxhY2VtZW50ID0g
JnZnYm8tPnBsYWNlbWVudF9jb2RlOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmZwZm4gPSAwOwot
CXZnYm8tPnBsYWNlbWVudF9jb2RlLmxwZm4gPSAwOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmZs
YWdzID0KLQkJVFRNX1BMX01BU0tfQ0FDSElORyB8IFRUTV9QTF9GTEFHX1RUIHwKLQkJVFRNX1BM
X0ZMQUdfTk9fRVZJQ1Q7Ci0Jdmdiby0+cGxhY2VtZW50Lm51bV9wbGFjZW1lbnQgPSBjOwotCXZn
Ym8tPnBsYWNlbWVudC5udW1fYnVzeV9wbGFjZW1lbnQgPSBjOworCWJvID0ga3phbGxvYyhzaXpl
b2YoKmJvKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFibykKKwkJcmV0dXJuIE5VTEw7CiAKKwliby0+
YmFzZS5iYXNlLmZ1bmNzID0gJnZpcnRpb19ncHVfZ2VtX2Z1bmNzOworCXJldHVybiAmYm8tPmJh
c2UuYmFzZTsKIH0KIAogaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlv
X2dwdV9kZXZpY2UgKnZnZGV2LApAQCAtOTgsMjcgKzEwMiwyMiBAQCBpbnQgdmlydGlvX2dwdV9v
YmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJCQkgICAgIHN0
cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZSkKIHsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3RfYXJyYXkgKm9ianMgPSBOVUxMOworCXN0cnVjdCBkcm1fZ2VtX3NobWVtX29iamVjdCAqc2ht
ZW1fb2JqOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm87Ci0Jc2l6ZV90IGFjY19zaXpl
OwogCWludCByZXQ7CiAKIAkqYm9fcHRyID0gTlVMTDsKIAotCWFjY19zaXplID0gdHRtX2JvX2Rt
YV9hY2Nfc2l6ZSgmdmdkZXYtPm1tYW4uYmRldiwgcGFyYW1zLT5zaXplLAotCQkJCSAgICAgICBz
aXplb2Yoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KSk7CisJcGFyYW1zLT5zaXplID0gcm91bmR1
cChwYXJhbXMtPnNpemUsIFBBR0VfU0laRSk7CisJc2htZW1fb2JqID0gZHJtX2dlbV9zaG1lbV9j
cmVhdGUodmdkZXYtPmRkZXYsIHBhcmFtcy0+c2l6ZSk7CisJaWYgKElTX0VSUihzaG1lbV9vYmop
KQorCQlyZXR1cm4gUFRSX0VSUihzaG1lbV9vYmopOworCWJvID0gZ2VtX3RvX3ZpcnRpb19ncHVf
b2JqKCZzaG1lbV9vYmotPmJhc2UpOwogCi0JYm8gPSBremFsbG9jKHNpemVvZihzdHJ1Y3Qgdmly
dGlvX2dwdV9vYmplY3QpLCBHRlBfS0VSTkVMKTsKLQlpZiAoYm8gPT0gTlVMTCkKLQkJcmV0dXJu
IC1FTk9NRU07CiAJcmV0ID0gdmlydGlvX2dwdV9yZXNvdXJjZV9pZF9nZXQodmdkZXYsICZiby0+
aHdfcmVzX2hhbmRsZSk7CiAJaWYgKHJldCA8IDApCiAJCWdvdG8gZXJyX2ZyZWVfZ2VtOwogCi0J
cGFyYW1zLT5zaXplID0gcm91bmR1cChwYXJhbXMtPnNpemUsIFBBR0VfU0laRSk7Ci0JcmV0ID0g
ZHJtX2dlbV9vYmplY3RfaW5pdCh2Z2Rldi0+ZGRldiwgJmJvLT5nZW1fYmFzZSwgcGFyYW1zLT5z
aXplKTsKLQlpZiAocmV0ICE9IDApCi0JCWdvdG8gZXJyX3B1dF9pZDsKLQogCWJvLT5kdW1iID0g
cGFyYW1zLT5kdW1iOwogCiAJaWYgKGZlbmNlKSB7CkBAIC0xMjYsNyArMTI1LDcgQEAgaW50IHZp
cnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAog
CQlvYmpzID0gdmlydGlvX2dwdV9hcnJheV9hbGxvYygxKTsKIAkJaWYgKCFvYmpzKQogCQkJZ290
byBlcnJfcHV0X2lkOwotCQl2aXJ0aW9fZ3B1X2FycmF5X2FkZF9vYmoob2JqcywgJmJvLT5nZW1f
YmFzZSk7CisJCXZpcnRpb19ncHVfYXJyYXlfYWRkX29iaihvYmpzLCAmYm8tPmJhc2UuYmFzZSk7
CiAKIAkJcmV0ID0gdmlydGlvX2dwdV9hcnJheV9sb2NrX3Jlc3Yob2Jqcyk7CiAJCWlmIChyZXQg
IT0gMCkKQEAgLTE0MSwxNSArMTQwLDExIEBAIGludCB2aXJ0aW9fZ3B1X29iamVjdF9jcmVhdGUo
c3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKIAkJCQkJICAgICAgIG9ianMsIGZlbmNl
KTsKIAl9CiAKLQl2aXJ0aW9fZ3B1X2luaXRfdHRtX3BsYWNlbWVudChibyk7Ci0JcmV0ID0gdHRt
X2JvX2luaXQoJnZnZGV2LT5tbWFuLmJkZXYsICZiby0+dGJvLCBwYXJhbXMtPnNpemUsCi0JCQkg
IHR0bV9ib190eXBlX2RldmljZSwgJmJvLT5wbGFjZW1lbnQsIDAsCi0JCQkgIHRydWUsIGFjY19z
aXplLCBOVUxMLAotCQkJICBiby0+Z2VtX2Jhc2UucmVzdiwKLQkJCSAgJnZpcnRpb19ncHVfdHRt
X2JvX2Rlc3Ryb3kpOwotCS8qIHR0bV9ib19pbml0IGZhaWx1cmUgd2lsbCBjYWxsIHRoZSBkZXN0
cm95ICovCi0JaWYgKHJldCAhPSAwKQorCXJldCA9IHZpcnRpb19ncHVfb2JqZWN0X2F0dGFjaCh2
Z2RldiwgYm8sIE5VTEwpOworCWlmIChyZXQgIT0gMCkgeworCQl2aXJ0aW9fZ3B1X2ZyZWVfb2Jq
ZWN0KCZzaG1lbV9vYmotPmJhc2UpOwogCQlyZXR1cm4gcmV0OworCX0KIAogCSpib19wdHIgPSBi
bzsKIAlyZXR1cm4gMDsKQEAgLTE1OSw2NSArMTU0LDYgQEAgaW50IHZpcnRpb19ncHVfb2JqZWN0
X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogZXJyX3B1dF9pZDoKIAl2
aXJ0aW9fZ3B1X3Jlc291cmNlX2lkX3B1dCh2Z2RldiwgYm8tPmh3X3Jlc19oYW5kbGUpOwogZXJy
X2ZyZWVfZ2VtOgotCWtmcmVlKGJvKTsKKwlkcm1fZ2VtX3NobWVtX2ZyZWVfb2JqZWN0KCZzaG1l
bV9vYmotPmJhc2UpOwogCXJldHVybiByZXQ7CiB9Ci0KLXZvaWQgdmlydGlvX2dwdV9vYmplY3Rf
a3VubWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JYm8tPnZtYXAgPSBOVUxM
OwotCXR0bV9ib19rdW5tYXAoJmJvLT5rbWFwKTsKLX0KLQotaW50IHZpcnRpb19ncHVfb2JqZWN0
X2ttYXAoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKLXsKLQlib29sIGlzX2lvbWVtOwot
CWludCByOwotCi0JV0FSTl9PTihiby0+dm1hcCk7Ci0KLQlyID0gdHRtX2JvX2ttYXAoJmJvLT50
Ym8sIDAsIGJvLT50Ym8ubnVtX3BhZ2VzLCAmYm8tPmttYXApOwotCWlmIChyKQotCQlyZXR1cm4g
cjsKLQliby0+dm1hcCA9IHR0bV9rbWFwX29ial92aXJ0dWFsKCZiby0+a21hcCwgJmlzX2lvbWVt
KTsKLQlyZXR1cm4gMDsKLX0KLQotaW50IHZpcnRpb19ncHVfb2JqZWN0X2dldF9zZ190YWJsZShz
dHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnFkZXYsCi0JCQkJICAgc3RydWN0IHZpcnRpb19ncHVf
b2JqZWN0ICpibykKLXsKLQlpbnQgcmV0OwotCXN0cnVjdCBwYWdlICoqcGFnZXMgPSBiby0+dGJv
LnR0bS0+cGFnZXM7Ci0JaW50IG5yX3BhZ2VzID0gYm8tPnRiby5udW1fcGFnZXM7Ci0Jc3RydWN0
IHR0bV9vcGVyYXRpb25fY3R4IGN0eCA9IHsKLQkJLmludGVycnVwdGlibGUgPSBmYWxzZSwKLQkJ
Lm5vX3dhaXRfZ3B1ID0gZmFsc2UKLQl9OwotCi0JLyogd3RmIHN3YXBwaW5nICovCi0JaWYgKGJv
LT5wYWdlcykKLQkJcmV0dXJuIDA7Ci0KLQlpZiAoYm8tPnRiby50dG0tPnN0YXRlID09IHR0X3Vu
cG9wdWxhdGVkKQotCQliby0+dGJvLnR0bS0+YmRldi0+ZHJpdmVyLT50dG1fdHRfcG9wdWxhdGUo
Ym8tPnRiby50dG0sICZjdHgpOwotCWJvLT5wYWdlcyA9IGttYWxsb2Moc2l6ZW9mKHN0cnVjdCBz
Z190YWJsZSksIEdGUF9LRVJORUwpOwotCWlmICghYm8tPnBhZ2VzKQotCQlnb3RvIG91dDsKLQot
CXJldCA9IHNnX2FsbG9jX3RhYmxlX2Zyb21fcGFnZXMoYm8tPnBhZ2VzLCBwYWdlcywgbnJfcGFn
ZXMsIDAsCi0JCQkJCW5yX3BhZ2VzIDw8IFBBR0VfU0hJRlQsIEdGUF9LRVJORUwpOwotCWlmIChy
ZXQpCi0JCWdvdG8gb3V0OwotCXJldHVybiAwOwotb3V0OgotCWtmcmVlKGJvLT5wYWdlcyk7Ci0J
Ym8tPnBhZ2VzID0gTlVMTDsKLQlyZXR1cm4gLUVOT01FTTsKLX0KLQotdm9pZCB2aXJ0aW9fZ3B1
X29iamVjdF9mcmVlX3NnX3RhYmxlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0J
c2dfZnJlZV90YWJsZShiby0+cGFnZXMpOwotCWtmcmVlKGJvLT5wYWdlcyk7Ci0JYm8tPnBhZ2Vz
ID0gTlVMTDsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9w
cmltZS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ByaW1lLmMKaW5kZXggOGIz
YjJjYWYzMzY0Li4wNTBkMjRjMzlhOGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vdmlydGdwdV9wcmltZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9w
cmltZS5jCkBAIC0zMCw0NiArMzAsOSBAQAogICogZGV2aWNlIHRoYXQgbWlnaHQgc2hhcmUgYnVm
ZmVycyB3aXRoIHZpcnRncHUKICAqLwogCi1zdHJ1Y3Qgc2dfdGFibGUgKnZpcnRncHVfZ2VtX3By
aW1lX2dldF9zZ190YWJsZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKLXsKLQlzdHJ1Y3Qg
dmlydGlvX2dwdV9vYmplY3QgKmJvID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKG9iaik7Ci0KLQlp
ZiAoIWJvLT50Ym8udHRtLT5wYWdlcyB8fCAhYm8tPnRiby50dG0tPm51bV9wYWdlcykKLQkJLyog
c2hvdWxkIG5vdCBoYXBwZW4gKi8KLQkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7Ci0KLQlyZXR1
cm4gZHJtX3ByaW1lX3BhZ2VzX3RvX3NnKGJvLT50Ym8udHRtLT5wYWdlcywKLQkJCQkgICAgIGJv
LT50Ym8udHRtLT5udW1fcGFnZXMpOwotfQotCiBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKnZpcnRn
cHVfZ2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSgKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBz
dHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsCiAJc3RydWN0IHNnX3RhYmxlICp0YWJs
ZSkKIHsKIAlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKIH0KLQotdm9pZCAqdmlydGdwdV9nZW1f
cHJpbWVfdm1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKLXsKLQlzdHJ1Y3QgdmlydGlv
X2dwdV9vYmplY3QgKmJvID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKG9iaik7Ci0JaW50IHJldDsK
LQotCXJldCA9IHZpcnRpb19ncHVfb2JqZWN0X2ttYXAoYm8pOwotCWlmIChyZXQpCi0JCXJldHVy
biBOVUxMOwotCXJldHVybiBiby0+dm1hcDsKLX0KLQotdm9pZCB2aXJ0Z3B1X2dlbV9wcmltZV92
dW5tYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosIHZvaWQgKnZhZGRyKQotewotCXZpcnRp
b19ncHVfb2JqZWN0X2t1bm1hcChnZW1fdG9fdmlydGlvX2dwdV9vYmoob2JqKSk7Ci19Ci0KLWlu
dCB2aXJ0Z3B1X2dlbV9wcmltZV9tbWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLAotCQkJ
ICAgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0ICpibyA9IGdlbV90b192aXJ0aW9fZ3B1X29iaihvYmopOwotCi0JYm8tPmdlbV9iYXNlLnZt
YV9ub2RlLnZtX25vZGUuc3RhcnQgPSBiby0+dGJvLnZtYV9ub2RlLnZtX25vZGUuc3RhcnQ7Ci0J
cmV0dXJuIGRybV9nZW1fcHJpbWVfbW1hcChvYmosIHZtYSk7Ci19CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdHRtLmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfdHRtLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGY4NzkwMzY0MTg0
Ny4uMDAwMDAwMDAwMDAwCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV90dG0u
YworKysgL2Rldi9udWxsCkBAIC0xLDMwNSArMCwwIEBACi0vKgotICogQ29weXJpZ2h0IChDKSAy
MDE1IFJlZCBIYXQsIEluYy4KLSAqIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCi0gKgotICogQXV0aG9y
czoKLSAqICAgIERhdmUgQWlybGllCi0gKiAgICBBbG9uIExldnkKLSAqCi0gKiBQZXJtaXNzaW9u
IGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5p
bmcgYQotICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRp
b24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKLSAqIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdp
dGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24KLSAqIHRoZSBy
aWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBz
dWJsaWNlbnNlLAotICogYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRv
IHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCi0gKiBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8g
ZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgotICoKLSAqIFRoZSBh
Ym92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJl
IGluY2x1ZGVkIGluCi0gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRo
ZSBTb2Z0d2FyZS4KLSAqCi0gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lU
SE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgotICogSU1QTElFRCwgSU5DTFVE
SU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFks
Ci0gKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5U
LiAgSU4gTk8gRVZFTlQgU0hBTEwKLSAqIFRIRSBDT1BZUklHSFQgSE9MREVSKFMpIE9SIEFVVEhP
UihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUgotICogT1RIRVIgTElBQklM
SVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0Us
Ci0gKiBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRX
QVJFIE9SIFRIRSBVU0UgT1IKLSAqIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KLSAq
LwotCi0jaW5jbHVkZSA8bGludXgvZGVsYXkuaD4KLQotI2luY2x1ZGUgPGRybS9kcm0uaD4KLSNp
bmNsdWRlIDxkcm0vZHJtX2ZpbGUuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19hcGkuaD4K
LSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19kcml2ZXIuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0
bV9tb2R1bGUuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9wYWdlX2FsbG9jLmg+Ci0jaW5jbHVk
ZSA8ZHJtL3R0bS90dG1fcGxhY2VtZW50Lmg+Ci0jaW5jbHVkZSA8ZHJtL3ZpcnRncHVfZHJtLmg+
Ci0KLSNpbmNsdWRlICJ2aXJ0Z3B1X2Rydi5oIgotCi1zdGF0aWMgc3RydWN0Ci12aXJ0aW9fZ3B1
X2RldmljZSAqdmlydGlvX2dwdV9nZXRfdmdkZXYoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYp
Ci17Ci0Jc3RydWN0IHZpcnRpb19ncHVfbW1hbiAqbW1hbjsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9k
ZXZpY2UgKnZnZGV2OwotCi0JbW1hbiA9IGNvbnRhaW5lcl9vZihiZGV2LCBzdHJ1Y3QgdmlydGlv
X2dwdV9tbWFuLCBiZGV2KTsKLQl2Z2RldiA9IGNvbnRhaW5lcl9vZihtbWFuLCBzdHJ1Y3Qgdmly
dGlvX2dwdV9kZXZpY2UsIG1tYW4pOwotCXJldHVybiB2Z2RldjsKLX0KLQotaW50IHZpcnRpb19n
cHVfbW1hcChzdHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCi17
Ci0Jc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXY7Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNl
ICp2Z2RldjsKLQlpbnQgcjsKLQotCWZpbGVfcHJpdiA9IGZpbHAtPnByaXZhdGVfZGF0YTsKLQl2
Z2RldiA9IGZpbGVfcHJpdi0+bWlub3ItPmRldi0+ZGV2X3ByaXZhdGU7Ci0JaWYgKHZnZGV2ID09
IE5VTEwpIHsKLQkJRFJNX0VSUk9SKAotCQkgImZpbHAtPnByaXZhdGVfZGF0YS0+bWlub3ItPmRl
di0+ZGV2X3ByaXZhdGUgPT0gTlVMTFxuIik7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQlyID0g
dHRtX2JvX21tYXAoZmlscCwgdm1hLCAmdmdkZXYtPm1tYW4uYmRldik7Ci0KLQlyZXR1cm4gcjsK
LX0KLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X2ludmFsaWRhdGVfY2FjaGVzKHN0cnVjdCB0dG1f
Ym9fZGV2aWNlICpiZGV2LAotCQkJCQl1aW50MzJfdCBmbGFncykKLXsKLQlyZXR1cm4gMDsKLX0K
LQotc3RhdGljIGludCB0dG1fYm9fbWFuX2dldF9ub2RlKHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFu
YWdlciAqbWFuLAotCQkJICAgICAgIHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sCi0JCQkg
ICAgICAgY29uc3Qgc3RydWN0IHR0bV9wbGFjZSAqcGxhY2UsCi0JCQkgICAgICAgc3RydWN0IHR0
bV9tZW1fcmVnICptZW0pCi17Ci0JbWVtLT5tbV9ub2RlID0gKHZvaWQgKikxOwotCXJldHVybiAw
OwotfQotCi1zdGF0aWMgdm9pZCB0dG1fYm9fbWFuX3B1dF9ub2RlKHN0cnVjdCB0dG1fbWVtX3R5
cGVfbWFuYWdlciAqbWFuLAotCQkJCXN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCW1lbS0+
bW1fbm9kZSA9ICh2b2lkICopTlVMTDsKLX0KLQotc3RhdGljIGludCB0dG1fYm9fbWFuX2luaXQo
c3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyICptYW4sCi0JCQkgICB1bnNpZ25lZCBsb25nIHBf
c2l6ZSkKLXsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCB0dG1fYm9fbWFuX3Rha2Vkb3du
KHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuKQotewotCXJldHVybiAwOwotfQotCi1z
dGF0aWMgdm9pZCB0dG1fYm9fbWFuX2RlYnVnKHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAq
bWFuLAotCQkJICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnByaW50ZXIpCi17Ci19Ci0KLXN0YXRp
YyBjb25zdCBzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXJfZnVuYyB2aXJ0aW9fZ3B1X2JvX21h
bmFnZXJfZnVuYyA9IHsKLQkuaW5pdCA9IHR0bV9ib19tYW5faW5pdCwKLQkudGFrZWRvd24gPSB0
dG1fYm9fbWFuX3Rha2Vkb3duLAotCS5nZXRfbm9kZSA9IHR0bV9ib19tYW5fZ2V0X25vZGUsCi0J
LnB1dF9ub2RlID0gdHRtX2JvX21hbl9wdXRfbm9kZSwKLQkuZGVidWcgPSB0dG1fYm9fbWFuX2Rl
YnVnCi19OwotCi1zdGF0aWMgaW50IHZpcnRpb19ncHVfaW5pdF9tZW1fdHlwZShzdHJ1Y3QgdHRt
X2JvX2RldmljZSAqYmRldiwgdWludDMyX3QgdHlwZSwKLQkJCQkgICAgc3RydWN0IHR0bV9tZW1f
dHlwZV9tYW5hZ2VyICptYW4pCi17Ci0Jc3dpdGNoICh0eXBlKSB7Ci0JY2FzZSBUVE1fUExfU1lT
VEVNOgotCQkvKiBTeXN0ZW0gbWVtb3J5ICovCi0JCW1hbi0+ZmxhZ3MgPSBUVE1fTUVNVFlQRV9G
TEFHX01BUFBBQkxFOwotCQltYW4tPmF2YWlsYWJsZV9jYWNoaW5nID0gVFRNX1BMX01BU0tfQ0FD
SElORzsKLQkJbWFuLT5kZWZhdWx0X2NhY2hpbmcgPSBUVE1fUExfRkxBR19DQUNIRUQ7Ci0JCWJy
ZWFrOwotCWNhc2UgVFRNX1BMX1RUOgotCQltYW4tPmZ1bmMgPSAmdmlydGlvX2dwdV9ib19tYW5h
Z2VyX2Z1bmM7Ci0JCW1hbi0+ZmxhZ3MgPSBUVE1fTUVNVFlQRV9GTEFHX01BUFBBQkxFOwotCQlt
YW4tPmF2YWlsYWJsZV9jYWNoaW5nID0gVFRNX1BMX01BU0tfQ0FDSElORzsKLQkJbWFuLT5kZWZh
dWx0X2NhY2hpbmcgPSBUVE1fUExfRkxBR19DQUNIRUQ7Ci0JCWJyZWFrOwotCWRlZmF1bHQ6Ci0J
CURSTV9FUlJPUigiVW5zdXBwb3J0ZWQgbWVtb3J5IHR5cGUgJXVcbiIsICh1bnNpZ25lZCBpbnQp
dHlwZSk7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZv
aWQgdmlydGlvX2dwdV9ldmljdF9mbGFncyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAot
CQkJCXN0cnVjdCB0dG1fcGxhY2VtZW50ICpwbGFjZW1lbnQpCi17Ci0Jc3RhdGljIGNvbnN0IHN0
cnVjdCB0dG1fcGxhY2UgcGxhY2VtZW50cyA9IHsKLQkJLmZwZm4gID0gMCwKLQkJLmxwZm4gID0g
MCwKLQkJLmZsYWdzID0gVFRNX1BMX01BU0tfQ0FDSElORyB8IFRUTV9QTF9GTEFHX1NZU1RFTSwK
LQl9OwotCi0JcGxhY2VtZW50LT5wbGFjZW1lbnQgPSAmcGxhY2VtZW50czsKLQlwbGFjZW1lbnQt
PmJ1c3lfcGxhY2VtZW50ID0gJnBsYWNlbWVudHM7Ci0JcGxhY2VtZW50LT5udW1fcGxhY2VtZW50
ID0gMTsKLQlwbGFjZW1lbnQtPm51bV9idXN5X3BsYWNlbWVudCA9IDE7Ci19Ci0KLXN0YXRpYyBp
bnQgdmlydGlvX2dwdV92ZXJpZnlfYWNjZXNzKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8s
Ci0JCQkJICAgIHN0cnVjdCBmaWxlICpmaWxwKQotewotCXJldHVybiAwOwotfQotCi1zdGF0aWMg
aW50IHZpcnRpb19ncHVfdHRtX2lvX21lbV9yZXNlcnZlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpi
ZGV2LAotCQkJCQkgc3RydWN0IHR0bV9tZW1fcmVnICptZW0pCi17Ci0Jc3RydWN0IHR0bV9tZW1f
dHlwZV9tYW5hZ2VyICptYW4gPSAmYmRldi0+bWFuW21lbS0+bWVtX3R5cGVdOwotCi0JbWVtLT5i
dXMuYWRkciA9IE5VTEw7Ci0JbWVtLT5idXMub2Zmc2V0ID0gMDsKLQltZW0tPmJ1cy5zaXplID0g
bWVtLT5udW1fcGFnZXMgPDwgUEFHRV9TSElGVDsKLQltZW0tPmJ1cy5iYXNlID0gMDsKLQltZW0t
PmJ1cy5pc19pb21lbSA9IGZhbHNlOwotCWlmICghKG1hbi0+ZmxhZ3MgJiBUVE1fTUVNVFlQRV9G
TEFHX01BUFBBQkxFKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0Jc3dpdGNoIChtZW0tPm1lbV90eXBl
KSB7Ci0JY2FzZSBUVE1fUExfU1lTVEVNOgotCWNhc2UgVFRNX1BMX1RUOgotCQkvKiBzeXN0ZW0g
bWVtb3J5ICovCi0JCXJldHVybiAwOwotCWRlZmF1bHQ6Ci0JCXJldHVybiAtRUlOVkFMOwotCX0K
LQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdmlydGlvX2dwdV90dG1faW9fbWVtX2ZyZWUo
c3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCi0JCQkJICAgICAgIHN0cnVjdCB0dG1fbWVtX3Jl
ZyAqbWVtKQotewotfQotCi0vKgotICogVFRNIGJhY2tlbmQgZnVuY3Rpb25zLgotICovCi1zdHJ1
Y3QgdmlydGlvX2dwdV90dG1fdHQgewotCXN0cnVjdCB0dG1fZG1hX3R0CQl0dG07Ci0Jc3RydWN0
IHZpcnRpb19ncHVfb2JqZWN0ICAgICAgICAqb2JqOwotfTsKLQotc3RhdGljIGludCB2aXJ0aW9f
Z3B1X3R0bV90dF9iaW5kKHN0cnVjdCB0dG1fdHQgKnR0bSwKLQkJCQkgIHN0cnVjdCB0dG1fbWVt
X3JlZyAqYm9fbWVtKQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCAqZ3R0ID0KLQkJY29u
dGFpbmVyX29mKHR0bSwgc3RydWN0IHZpcnRpb19ncHVfdHRtX3R0LCB0dG0udHRtKTsKLQlzdHJ1
Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0KLQkJdmlydGlvX2dwdV9nZXRfdmdkZXYoZ3R0
LT5vYmotPnRiby5iZGV2KTsKLQotCXZpcnRpb19ncHVfb2JqZWN0X2F0dGFjaCh2Z2RldiwgZ3R0
LT5vYmosIE5VTEwpOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IHZpcnRpb19ncHVfdHRt
X3R0X3VuYmluZChzdHJ1Y3QgdHRtX3R0ICp0dG0pCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfdHRt
X3R0ICpndHQgPQotCQljb250YWluZXJfb2YodHRtLCBzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQs
IHR0bS50dG0pOwotCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYgPQotCQl2aXJ0aW9f
Z3B1X2dldF92Z2RldihndHQtPm9iai0+dGJvLmJkZXYpOwotCi0JdmlydGlvX2dwdV9vYmplY3Rf
ZGV0YWNoKHZnZGV2LCBndHQtPm9iaik7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZp
cnRpb19ncHVfdHRtX3R0X2Rlc3Ryb3koc3RydWN0IHR0bV90dCAqdHRtKQotewotCXN0cnVjdCB2
aXJ0aW9fZ3B1X3R0bV90dCAqZ3R0ID0KLQkJY29udGFpbmVyX29mKHR0bSwgc3RydWN0IHZpcnRp
b19ncHVfdHRtX3R0LCB0dG0udHRtKTsKLQotCXR0bV9kbWFfdHRfZmluaSgmZ3R0LT50dG0pOwot
CWtmcmVlKGd0dCk7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX2JhY2tlbmRfZnVuYyB2aXJ0aW9f
Z3B1X3R0X2Z1bmMgPSB7Ci0JLmJpbmQgPSAmdmlydGlvX2dwdV90dG1fdHRfYmluZCwKLQkudW5i
aW5kID0gJnZpcnRpb19ncHVfdHRtX3R0X3VuYmluZCwKLQkuZGVzdHJveSA9ICZ2aXJ0aW9fZ3B1
X3R0bV90dF9kZXN0cm95LAotfTsKLQotc3RhdGljIHN0cnVjdCB0dG1fdHQgKnZpcnRpb19ncHVf
dHRtX3R0X2NyZWF0ZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJCQkgICAgICAg
dWludDMyX3QgcGFnZV9mbGFncykKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2
OwotCXN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCAqZ3R0OwotCi0JdmdkZXYgPSB2aXJ0aW9fZ3B1
X2dldF92Z2Rldihiby0+YmRldik7Ci0JZ3R0ID0ga3phbGxvYyhzaXplb2Yoc3RydWN0IHZpcnRp
b19ncHVfdHRtX3R0KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKGd0dCA9PSBOVUxMKQotCQlyZXR1cm4g
TlVMTDsKLQlndHQtPnR0bS50dG0uZnVuYyA9ICZ2aXJ0aW9fZ3B1X3R0X2Z1bmM7Ci0JZ3R0LT5v
YmogPSBjb250YWluZXJfb2YoYm8sIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgdGJvKTsKLQlp
ZiAodHRtX2RtYV90dF9pbml0KCZndHQtPnR0bSwgYm8sIHBhZ2VfZmxhZ3MpKSB7Ci0JCWtmcmVl
KGd0dCk7Ci0JCXJldHVybiBOVUxMOwotCX0KLQlyZXR1cm4gJmd0dC0+dHRtLnR0bTsKLX0KLQot
c3RhdGljIHZvaWQgdmlydGlvX2dwdV9ib19zd2FwX25vdGlmeShzdHJ1Y3QgdHRtX2J1ZmZlcl9v
YmplY3QgKnRibykKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvOwotCi0JYm8gPSBj
b250YWluZXJfb2YodGJvLCBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QsIHRibyk7Ci0KLQlpZiAo
Ym8tPnBhZ2VzKQotCQl2aXJ0aW9fZ3B1X29iamVjdF9mcmVlX3NnX3RhYmxlKGJvKTsKLX0KLQot
c3RhdGljIHN0cnVjdCB0dG1fYm9fZHJpdmVyIHZpcnRpb19ncHVfYm9fZHJpdmVyID0gewotCS50
dG1fdHRfY3JlYXRlID0gJnZpcnRpb19ncHVfdHRtX3R0X2NyZWF0ZSwKLQkuaW52YWxpZGF0ZV9j
YWNoZXMgPSAmdmlydGlvX2dwdV9pbnZhbGlkYXRlX2NhY2hlcywKLQkuaW5pdF9tZW1fdHlwZSA9
ICZ2aXJ0aW9fZ3B1X2luaXRfbWVtX3R5cGUsCi0JLmV2aWN0aW9uX3ZhbHVhYmxlID0gdHRtX2Jv
X2V2aWN0aW9uX3ZhbHVhYmxlLAotCS5ldmljdF9mbGFncyA9ICZ2aXJ0aW9fZ3B1X2V2aWN0X2Zs
YWdzLAotCS52ZXJpZnlfYWNjZXNzID0gJnZpcnRpb19ncHVfdmVyaWZ5X2FjY2VzcywKLQkuaW9f
bWVtX3Jlc2VydmUgPSAmdmlydGlvX2dwdV90dG1faW9fbWVtX3Jlc2VydmUsCi0JLmlvX21lbV9m
cmVlID0gJnZpcnRpb19ncHVfdHRtX2lvX21lbV9mcmVlLAotCS5zd2FwX25vdGlmeSA9ICZ2aXJ0
aW9fZ3B1X2JvX3N3YXBfbm90aWZ5LAotfTsKLQotaW50IHZpcnRpb19ncHVfdHRtX2luaXQoc3Ry
dWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldikKLXsKLQlpbnQgcjsKLQotCS8qIE5vIG90aGVy
cyB1c2VyIG9mIGFkZHJlc3Mgc3BhY2Ugc28gc2V0IGl0IHRvIDAgKi8KLQlyID0gdHRtX2JvX2Rl
dmljZV9pbml0KCZ2Z2Rldi0+bW1hbi5iZGV2LAotCQkJICAgICAgICZ2aXJ0aW9fZ3B1X2JvX2Ry
aXZlciwKLQkJCSAgICAgICB2Z2Rldi0+ZGRldi0+YW5vbl9pbm9kZS0+aV9tYXBwaW5nLAotCQkJ
ICAgICAgIGZhbHNlKTsKLQlpZiAocikgewotCQlEUk1fRVJST1IoImZhaWxlZCBpbml0aWFsaXpp
bmcgYnVmZmVyIG9iamVjdCBkcml2ZXIoJWQpLlxuIiwgcik7Ci0JCWdvdG8gZXJyX2Rldl9pbml0
OwotCX0KLQotCXIgPSB0dG1fYm9faW5pdF9tbSgmdmdkZXYtPm1tYW4uYmRldiwgVFRNX1BMX1RU
LCAwKTsKLQlpZiAocikgewotCQlEUk1fRVJST1IoIkZhaWxlZCBpbml0aWFsaXppbmcgR1RUIGhl
YXAuXG4iKTsKLQkJZ290byBlcnJfbW1faW5pdDsKLQl9Ci0JcmV0dXJuIDA7Ci0KLWVycl9tbV9p
bml0OgotCXR0bV9ib19kZXZpY2VfcmVsZWFzZSgmdmdkZXYtPm1tYW4uYmRldik7Ci1lcnJfZGV2
X2luaXQ6Ci0JcmV0dXJuIHI7Ci19Ci0KLXZvaWQgdmlydGlvX2dwdV90dG1fZmluaShzdHJ1Y3Qg
dmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2KQotewotCXR0bV9ib19kZXZpY2VfcmVsZWFzZSgmdmdk
ZXYtPm1tYW4uYmRldik7Ci0JRFJNX0lORk8oInZpcnRpb19ncHU6IHR0bSBmaW5hbGl6ZWRcbiIp
OwotfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMgYi9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdnEuYwppbmRleCA3YTMxNmU5MmM3ODMuLjRl
Y2IzNzZiZDc1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3Zx
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMKQEAgLTk5MywxNyAr
OTkzLDIxIEBAIGludCB2aXJ0aW9fZ3B1X29iamVjdF9hdHRhY2goc3RydWN0IHZpcnRpb19ncHVf
ZGV2aWNlICp2Z2RldiwKIAlib29sIHVzZV9kbWFfYXBpID0gIXZpcnRpb19oYXNfaW9tbXVfcXVp
cmsodmdkZXYtPnZkZXYpOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X21lbV9lbnRyeSAqZW50czsKIAlz
dHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnOwotCWludCBzaSwgbmVudHM7CisJaW50IHNpLCBuZW50cywg
cmV0OwogCiAJaWYgKFdBUk5fT05fT05DRSghb2JqLT5jcmVhdGVkKSkKIAkJcmV0dXJuIC1FSU5W
QUw7CisJaWYgKFdBUk5fT05fT05DRShvYmotPnBhZ2VzKSkKKwkJcmV0dXJuIC1FSU5WQUw7CiAK
LQlpZiAoIW9iai0+cGFnZXMpIHsKLQkJaW50IHJldDsKKwlyZXQgPSBkcm1fZ2VtX3NobWVtX3Bp
bigmb2JqLT5iYXNlLmJhc2UpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gLUVJTlZBTDsKIAot
CQlyZXQgPSB2aXJ0aW9fZ3B1X29iamVjdF9nZXRfc2dfdGFibGUodmdkZXYsIG9iaik7Ci0JCWlm
IChyZXQpCi0JCQlyZXR1cm4gcmV0OworCW9iai0+cGFnZXMgPSBkcm1fZ2VtX3NobWVtX2dldF9z
Z190YWJsZSgmb2JqLT5iYXNlLmJhc2UpOworCWlmIChvYmotPnBhZ2VzID09IE5VTEwpIHsKKwkJ
ZHJtX2dlbV9zaG1lbV91bnBpbigmb2JqLT5iYXNlLmJhc2UpOworCQlyZXR1cm4gLUVJTlZBTDsK
IAl9CiAKIAlpZiAodXNlX2RtYV9hcGkpIHsKQEAgLTEwNDIsNiArMTA0Niw5IEBAIHZvaWQgdmly
dGlvX2dwdV9vYmplY3RfZGV0YWNoKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiB7
CiAJYm9vbCB1c2VfZG1hX2FwaSA9ICF2aXJ0aW9faGFzX2lvbW11X3F1aXJrKHZnZGV2LT52ZGV2
KTsKIAorCWlmIChXQVJOX09OX09OQ0UoIW9iai0+cGFnZXMpKQorCQlyZXR1cm47CisKIAlpZiAo
dXNlX2RtYV9hcGkgJiYgb2JqLT5tYXBwZWQpIHsKIAkJc3RydWN0IHZpcnRpb19ncHVfZmVuY2Ug
KmZlbmNlID0gdmlydGlvX2dwdV9mZW5jZV9hbGxvYyh2Z2Rldik7CiAJCS8qIGRldGFjaCBiYWNr
aW5nIGFuZCB3YWl0IGZvciB0aGUgaG9zdCBwcm9jZXNzIGl0IC4uLiAqLwpAQCAtMTA1Nyw2ICsx
MDY0LDExIEBAIHZvaWQgdmlydGlvX2dwdV9vYmplY3RfZGV0YWNoKHN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXYsCiAJfSBlbHNlIHsKIAkJdmlydGlvX2dwdV9jbWRfcmVzb3VyY2VfaW52
YWxfYmFja2luZyh2Z2Rldiwgb2JqLT5od19yZXNfaGFuZGxlLCBOVUxMKTsKIAl9CisKKwlzZ19m
cmVlX3RhYmxlKG9iai0+cGFnZXMpOworCW9iai0+cGFnZXMgPSBOVUxMOworCisJZHJtX2dlbV9z
aG1lbV91bnBpbigmb2JqLT5iYXNlLmJhc2UpOwogfQogCiB2b2lkIHZpcnRpb19ncHVfY3Vyc29y
X3Bpbmcoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZp
ZwppbmRleCBiYTM2ZTkzM2JiNDkuLmVmZjMwNDcwNTJkNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby9LY29uZmlnCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZp
ZwpAQCAtMyw3ICszLDcgQEAgY29uZmlnIERSTV9WSVJUSU9fR1BVCiAJdHJpc3RhdGUgIlZpcnRp
byBHUFUgZHJpdmVyIgogCWRlcGVuZHMgb24gRFJNICYmIFZJUlRJTyAmJiBNTVUKIAlzZWxlY3Qg
RFJNX0tNU19IRUxQRVIKLQlzZWxlY3QgRFJNX1RUTQorCXNlbGVjdCBEUk1fR0VNX1NITUVNX0hF
TFBFUgogCWhlbHAKIAkgICBUaGlzIGlzIHRoZSB2aXJ0dWFsIEdQVSBkcml2ZXIgZm9yIHZpcnRp
by4gIEl0IGNhbiBiZSB1c2VkIHdpdGgKIAkgICBRRU1VIGJhc2VkIFZNTXMgKGxpa2UgS1ZNIG9y
IFhlbikuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL01ha2VmaWxlIGIvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQppbmRleCA0NThlNjA2YTkzNmYuLjkyYWEyYjNk
MzQ5ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL01ha2VmaWxlCkBAIC00LDcgKzQsNyBAQAogIyBEaXJlY3Qg
UmVuZGVyaW5nIEluZnJhc3RydWN0dXJlIChEUkkpIGluIFhGcmVlODYgNC4xLjAgYW5kIGhpZ2hl
ci4KIAogdmlydGlvLWdwdS15IDo9IHZpcnRncHVfZHJ2Lm8gdmlydGdwdV9rbXMubyB2aXJ0Z3B1
X2dlbS5vIFwKLQl2aXJ0Z3B1X2Rpc3BsYXkubyB2aXJ0Z3B1X3ZxLm8gdmlydGdwdV90dG0ubyBc
CisJdmlydGdwdV9kaXNwbGF5Lm8gdmlydGdwdV92cS5vIFwKIAl2aXJ0Z3B1X2ZlbmNlLm8gdmly
dGdwdV9vYmplY3QubyB2aXJ0Z3B1X2RlYnVnZnMubyB2aXJ0Z3B1X3BsYW5lLm8gXAogCXZpcnRn
cHVfaW9jdGwubyB2aXJ0Z3B1X3ByaW1lLm8gdmlydGdwdV90cmFjZV9wb2ludHMubwogCi0tIAoy
LjE4LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRy
aS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
