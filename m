Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7D43F60AEC
	for <lists+dri-devel@lfdr.de>; Fri,  5 Jul 2019 19:17:47 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 08C8F6E52D;
	Fri,  5 Jul 2019 17:17:34 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from metis.ext.pengutronix.de (metis.ext.pengutronix.de
 [IPv6:2001:67c:670:201:290:27ff:fe1d:cc33])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5BE316E529
 for <dri-devel@lists.freedesktop.org>; Fri,  5 Jul 2019 17:17:32 +0000 (UTC)
Received: from dude02.hi.pengutronix.de ([2001:67c:670:100:1d::28]
 helo=dude02.pengutronix.de.)
 by metis.ext.pengutronix.de with esmtp (Exim 4.92)
 (envelope-from <l.stach@pengutronix.de>)
 id 1hjRpw-0007A3-Au; Fri, 05 Jul 2019 19:17:28 +0200
From: Lucas Stach <l.stach@pengutronix.de>
To: etnaviv@lists.freedesktop.org
Subject: [PATCH v2 8/8] drm/etnaviv: implement per-process address spaces on
 MMUv2
Date: Fri,  5 Jul 2019 19:17:27 +0200
Message-Id: <20190705171727.27501-8-l.stach@pengutronix.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190705171727.27501-1-l.stach@pengutronix.de>
References: <20190705171727.27501-1-l.stach@pengutronix.de>
MIME-Version: 1.0
X-SA-Exim-Connect-IP: 2001:67c:670:100:1d::28
X-SA-Exim-Mail-From: l.stach@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de);
 SAEximRunCond expanded to false
X-PTX-Original-Recipient: dri-devel@lists.freedesktop.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: patchwork-lst@pengutronix.de, kernel@pengutronix.de,
 dri-devel@lists.freedesktop.org, Russell King <linux+etnaviv@armlinux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBidWlsZHMgb24gdG9wIG9mIHRoZSBNTVUgY29udGV4dHMgaW50cm9kdWNlZCBlYXJsaWVy
LiBJbnN0ZWFkIG9mIGhhdmluZwpvbmUgY29udGV4dCBwZXIgR1BVIGNvcmUsIGVhY2ggR1BVIGNs
aWVudCByZWNlaXZlcyBpdHMgb3duIGNvbnRleHQuCgpPbiBNTVV2MSB0aGlzIHN0aWxsIG1lYW5z
IGEgc2luZ2xlIHNoYXJlZCBwYWdldGFibGUgc2V0IGlzIHVzZWQgYnkgYWxsCmNsaWVudHMsIGJ1
dCBvbiBNTVV2MiB0aGVyZSBpcyBub3cgYSBkaXN0aW5jdCBzZXQgb2YgcGFnZXRhYmxlcyBmb3Ig
ZWFjaApjbGllbnQuIEFzIHRoZSBjb21tYW5kIGZldGNoIGlzIGFsc28gdHJhbnNsYXRlZCB2aWEg
dGhlIE1NVSBvbiBNTVV2MiB0aGUKa2VybmVsIGNvbW1hbmQgcmluZ2J1ZmZlciBpcyBtYXBwZWQg
aW50byBlYWNoIG9mIHRoZSBjbGllbnQgcGFnZXRhYmxlcy4KCkFzIHRoZSBNTVUgY29udGV4dCBz
d2l0Y2ggaXMgYSBiaXQgb2YgYSBoZWF2eSBvcGVyYXRpb24sIGR1ZSB0byB0aGUgbmVlZGVkCmNh
Y2hlIGFuZCBUTEIgZmx1c2hpbmcsIHRoaXMgcGF0Y2ggaW1wbGVtZW50cyBhIGxhenkgd2F5IG9m
IHN3aXRjaGluZyB0aGUKTU1VIGNvbnRleHQuIFRoZSBrZXJuZWwgZG9lcyBub3QgaGF2ZSBpdHMg
b3duIE1NVSBjb250ZXh0LCBidXQgcmV1c2VzIHRoZQpsYXN0IGNsaWVudCBjb250ZXh0IGZvciBh
bGwgb2YgaXRzIG9wZXJhdGlvbnMuIFRoaXMgaGFzIHNvbWUgdmlzaWJsZSBpbXBhY3QsCmFzIHRo
ZSBHUFUgY2FuIG5vdyBvbmx5IGJlIHN0YXJ0ZWQgb25jZSBhIGNsaWVudCBoYXMgc3VibWl0dGVk
IHNvbWUgd29yayBhbmQKd2UgZ290IHRoZSBjbGllbnQgTU1VIGNvbnRleHQgYXNzaWduZWQuIEFs
c28gdGhlIE1NVSBjb250ZXh0IGhhcyBhIGRpZmZlcmVudApsaWZldGltZSB0aGFuIHRoZSBnZW5l
cmFsIGNsaWVudCBjb250ZXh0LCBhcyB0aGUgR1BVIG1pZ2h0IHN0aWxsIGV4ZWN1dGUgdGhlCmtl
cm5lbCBjb21tYW5kIGJ1ZmZlciBpbiB0aGUgY29udGV4dCBvZiBhIGNsaWVudCBldmVuIGFmdGVy
IHRoZSBjbGllbnQgaGFzCmNvbXBsZXRlZCBhbGwgR1BVIHdvcmsgYW5kIGhhcyBiZWVuIHRlcm1p
bmF0ZWQuIE9ubHkgd2hlbiB0aGUgR1BVIGlzIHJ1bnRpbWUKc3VzcGVuZGVkIG9yIHN3aXRjaGVz
IHRvIGFub3RoZXIgY2xpZW50cyBNTVUgY29udGV4dCBpcyB0aGUgb2xkIGNvbnRleHQKZnJlZWQg
dXAuCgpTaWduZWQtb2ZmLWJ5OiBMdWNhcyBTdGFjaCA8bC5zdGFjaEBwZW5ndXRyb25peC5kZT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZlci5jICAgICB8ICA1OSAr
KysrKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuYyAgICAgICAg
fCAgMzggKysrKysrLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuaCAgICAg
ICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZHVtcC5jICAgICAg
IHwgICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jICAgICAgICB8
ICAgNSArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uaCAgICAgICAgfCAg
IDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtX3N1Ym1pdC5jIHwgIDEw
ICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dwdS5jICAgICAgICB8IDEwMCAr
KysrKysrKy0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dwdS5o
ICAgICAgICB8ICAgNCAtCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11LmMg
ICAgICB8ICAxMCArLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdV92Mi5j
ICAgfCAgMTcgKysrLQogZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuYyAgICAg
ICAgfCAgNDIgKysrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11Lmgg
ICAgICAgIHwgIDExICstCiAxMyBmaWxlcyBjaGFuZ2VkLCAxOTkgaW5zZXJ0aW9ucygrKSwgMTEx
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2
aXZfYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZlci5jCmlu
ZGV4IDAyMjEzNDIzODE4NC4uOWJkZWJlMDQ1YTMxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vZXRuYXZpdi9ldG5hdml2X2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfYnVmZmVyLmMKQEAgLTExOCw3ICsxMTgsNyBAQCBzdGF0aWMgdm9pZCBldG5hdml2
X2J1ZmZlcl9kdW1wKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LAogCXUzMiAqcHRyID0gYnVmLT52
YWRkciArIG9mZjsKIAogCWRldl9pbmZvKGdwdS0+ZGV2LCAidmlydCAlcCBwaHlzIDB4JTA4eCBm
cmVlIDB4JTA4eFxuIiwKLQkJCXB0ciwgZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKGJ1ZiwgJmdwdS0+
Y21kYnVmX21hcHBpbmcpICsKKwkJCXB0ciwgZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKGJ1ZiwgJmdw
dS0+bW11LT5jbWRidWZfbWFwcGluZykgKwogCQkJb2ZmLCBzaXplIC0gbGVuICogNCAtIG9mZik7
CiAKIAlwcmludF9oZXhfZHVtcChLRVJOX0lORk8sICJjbWQgIiwgRFVNUF9QUkVGSVhfT0ZGU0VU
LCAxNiwgNCwKQEAgLTE1Miw3ICsxNTIsNyBAQCBzdGF0aWMgdTMyIGV0bmF2aXZfYnVmZmVyX3Jl
c2VydmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsCiAJaWYgKGJ1ZmZlci0+dXNlcl9zaXplICsg
Y21kX2R3b3JkcyAqIHNpemVvZih1NjQpID4gYnVmZmVyLT5zaXplKQogCQlidWZmZXItPnVzZXJf
c2l6ZSA9IDA7CiAKLQlyZXR1cm4gZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKGJ1ZmZlciwgJmdwdS0+
Y21kYnVmX21hcHBpbmcpICsKKwlyZXR1cm4gZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKGJ1ZmZlciwg
JmdwdS0+bW11LT5jbWRidWZfbWFwcGluZykgKwogCSAgICAgICBidWZmZXItPnVzZXJfc2l6ZTsK
IH0KIApAQCAtMTY2LDcgKzE2Niw3IEBAIHUxNiBldG5hdml2X2J1ZmZlcl9pbml0KHN0cnVjdCBl
dG5hdml2X2dwdSAqZ3B1KQogCWJ1ZmZlci0+dXNlcl9zaXplID0gMDsKIAogCUNNRF9XQUlUKGJ1
ZmZlcik7Ci0JQ01EX0xJTksoYnVmZmVyLCAyLCBldG5hdml2X2NtZGJ1Zl9nZXRfdmEoYnVmZmVy
LCAmZ3B1LT5jbWRidWZfbWFwcGluZykKKwlDTURfTElOSyhidWZmZXIsIDIsIGV0bmF2aXZfY21k
YnVmX2dldF92YShidWZmZXIsICZncHUtPm1tdS0+Y21kYnVmX21hcHBpbmcpCiAJCSArIGJ1ZmZl
ci0+dXNlcl9zaXplIC0gNCk7CiAKIAlyZXR1cm4gYnVmZmVyLT51c2VyX3NpemUgLyA4OwpAQCAt
MjkzLDcgKzI5Myw3IEBAIHZvaWQgZXRuYXZpdl9zeW5jX3BvaW50X3F1ZXVlKHN0cnVjdCBldG5h
dml2X2dwdSAqZ3B1LCB1bnNpZ25lZCBpbnQgZXZlbnQpCiAKIAkvKiBBcHBlbmQgd2FpdGxpbmsg
Ki8KIAlDTURfV0FJVChidWZmZXIpOwotCUNNRF9MSU5LKGJ1ZmZlciwgMiwgZXRuYXZpdl9jbWRi
dWZfZ2V0X3ZhKGJ1ZmZlciwgJmdwdS0+Y21kYnVmX21hcHBpbmcpCisJQ01EX0xJTksoYnVmZmVy
LCAyLCBldG5hdml2X2NtZGJ1Zl9nZXRfdmEoYnVmZmVyLCAmZ3B1LT5tbXUtPmNtZGJ1Zl9tYXBw
aW5nKQogCQkgKyBidWZmZXItPnVzZXJfc2l6ZSAtIDQpOwogCiAJLyoKQEAgLTMwOCwyNSArMzA4
LDI3IEBAIHZvaWQgZXRuYXZpdl9zeW5jX3BvaW50X3F1ZXVlKHN0cnVjdCBldG5hdml2X2dwdSAq
Z3B1LCB1bnNpZ25lZCBpbnQgZXZlbnQpCiAKIC8qIEFwcGVuZCBhIGNvbW1hbmQgYnVmZmVyIHRv
IHRoZSByaW5nIGJ1ZmZlci4gKi8KIHZvaWQgZXRuYXZpdl9idWZmZXJfcXVldWUoc3RydWN0IGV0
bmF2aXZfZ3B1ICpncHUsIHUzMiBleGVjX3N0YXRlLAotCXVuc2lnbmVkIGludCBldmVudCwgc3Ry
dWN0IGV0bmF2aXZfY21kYnVmICpjbWRidWYpCisJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4
dCAqbW11LCB1bnNpZ25lZCBpbnQgZXZlbnQsIHN0cnVjdCBldG5hdml2X2NtZGJ1ZiAqY21kYnVm
KQogewogCXN0cnVjdCBldG5hdml2X2NtZGJ1ZiAqYnVmZmVyID0gJmdwdS0+YnVmZmVyOwogCXVu
c2lnbmVkIGludCB3YWl0bGlua19vZmZzZXQgPSBidWZmZXItPnVzZXJfc2l6ZSAtIDE2OwogCXUz
MiByZXR1cm5fdGFyZ2V0LCByZXR1cm5fZHdvcmRzOwogCXUzMiBsaW5rX3RhcmdldCwgbGlua19k
d29yZHM7CiAJYm9vbCBzd2l0Y2hfY29udGV4dCA9IGdwdS0+ZXhlY19zdGF0ZSAhPSBleGVjX3N0
YXRlOwotCWJvb2wgbmVlZF9mbHVzaCA9IGdwdS0+Zmx1c2hfc2VxICE9IGdwdS0+bW11LT5mbHVz
aF9zZXE7CisJYm9vbCBzd2l0Y2hfbW11X2NvbnRleHQgPSBncHUtPm1tdSAhPSBtbXU7CisJYm9v
bCBuZWVkX2ZsdXNoID0gc3dpdGNoX21tdV9jb250ZXh0IHx8CisJCQkgIGdwdS0+Zmx1c2hfc2Vx
ICE9IGdwdS0+bW11LT5mbHVzaF9zZXE7CiAKIAlsb2NrZGVwX2Fzc2VydF9oZWxkKCZncHUtPmxv
Y2spOwogCiAJaWYgKGRybV9kZWJ1ZyAmIERSTV9VVF9EUklWRVIpCiAJCWV0bmF2aXZfYnVmZmVy
X2R1bXAoZ3B1LCBidWZmZXIsIDAsIDB4NTApOwogCi0JbGlua190YXJnZXQgPSBldG5hdml2X2Nt
ZGJ1Zl9nZXRfdmEoY21kYnVmLCAmZ3B1LT5jbWRidWZfbWFwcGluZyk7CisJbGlua190YXJnZXQg
PSBldG5hdml2X2NtZGJ1Zl9nZXRfdmEoY21kYnVmLCAmZ3B1LT5tbXUtPmNtZGJ1Zl9tYXBwaW5n
KTsKIAlsaW5rX2R3b3JkcyA9IGNtZGJ1Zi0+c2l6ZSAvIDg7CiAKIAkvKgotCSAqIElmIHdlIG5l
ZWQgbWFpbnRhbmVuY2UgcHJpb3IgdG8gc3VibWl0dGluZyB0aGlzIGJ1ZmZlciwgd2Ugd2lsbAor
CSAqIElmIHdlIG5lZWQgbWFpbnRlbmFuY2UgcHJpb3IgdG8gc3VibWl0dGluZyB0aGlzIGJ1ZmZl
ciwgd2Ugd2lsbAogCSAqIG5lZWQgdG8gYXBwZW5kIGEgbW11IGZsdXNoIGxvYWQgc3RhdGUsIGZv
bGxvd2VkIGJ5IGEgbmV3CiAJICogbGluayB0byB0aGlzIGJ1ZmZlciAtIGEgdG90YWwgb2YgZm91
ciBhZGRpdGlvbmFsIHdvcmRzLgogCSAqLwpAQCAtMzQ4LDcgKzM1MCwyNCBAQCB2b2lkIGV0bmF2
aXZfYnVmZmVyX3F1ZXVlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LCB1MzIgZXhlY19zdGF0ZSwK
IAkJaWYgKHN3aXRjaF9jb250ZXh0KQogCQkJZXh0cmFfZHdvcmRzICs9IDQ7CiAKKwkJLyogUFRB
IGxvYWQgY29tbWFuZCAqLworCQlpZiAoc3dpdGNoX21tdV9jb250ZXh0ICYmIGdwdS0+c2VjX21v
ZGUgPT0gRVROQV9TRUNfS0VSTkVMKQorCQkJZXh0cmFfZHdvcmRzICs9IDE7CisKIAkJdGFyZ2V0
ID0gZXRuYXZpdl9idWZmZXJfcmVzZXJ2ZShncHUsIGJ1ZmZlciwgZXh0cmFfZHdvcmRzKTsKKwkJ
LyoKKwkJICogU3dpdGNoIE1NVSBjb250ZXh0IGlmIG5lY2Vzc2FyeS4gTXVzdCBiZSBkb25lIGFm
dGVyIHRoZQorCQkgKiBsaW5rIHRhcmdldCBoYXMgYmVlbiBjYWxjdWxhdGVkLCBhcyB0aGUganVt
cCBmb3J3YXJkIGluIHRoZQorCQkgKiBrZXJuZWwgcmluZyBzdGlsbCB1c2VzIHRoZSBsYXN0IGFj
dGl2ZSBNTVUgY29udGV4dCBiZWZvcmUKKwkJICogdGhlIHN3aXRjaC4KKwkJICovCisJCWlmIChz
d2l0Y2hfbW11X2NvbnRleHQpIHsKKwkJCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1t
dV9vbGQgPSBncHUtPm1tdTsKKworCQkJZXRuYXZpdl9pb21tdV9jb250ZXh0X2dldChtbXUpOwor
CQkJZ3B1LT5tbXUgPSBtbXU7CisJCQlldG5hdml2X2lvbW11X2NvbnRleHRfcHV0KG1tdV9vbGQp
OworCQl9CiAKIAkJaWYgKG5lZWRfZmx1c2gpIHsKIAkJCS8qIEFkZCB0aGUgTU1VIGZsdXNoICov
CkBAIC0zNjAsMTAgKzM3OSwyMyBAQCB2b2lkIGV0bmF2aXZfYnVmZmVyX3F1ZXVlKHN0cnVjdCBl
dG5hdml2X2dwdSAqZ3B1LCB1MzIgZXhlY19zdGF0ZSwKIAkJCQkJICAgICAgIFZJVlNfR0xfRkxV
U0hfTU1VX0ZMVVNIX1BFTU1VIHwKIAkJCQkJICAgICAgIFZJVlNfR0xfRkxVU0hfTU1VX0ZMVVNI
X1VOSzQpOwogCQkJfSBlbHNlIHsKKwkJCQl1MzIgZmx1c2ggPSBWSVZTX01NVXYyX0NPTkZJR1VS
QVRJT05fTU9ERV9NQVNLIHwKKwkJCQkJICAgIFZJVlNfTU1VdjJfQ09ORklHVVJBVElPTl9GTFVT
SF9GTFVTSDsKKworCQkJCWlmIChzd2l0Y2hfbW11X2NvbnRleHQgJiYKKwkJCQkgICAgZ3B1LT5z
ZWNfbW9kZSA9PSBFVE5BX1NFQ19LRVJORUwpIHsKKwkJCQkJdW5zaWduZWQgc2hvcnQgaWQgPQor
CQkJCQkJZXRuYXZpdl9pb21tdXYyX2dldF9wdGFfaWQoZ3B1LT5tbXUpOworCQkJCQlDTURfTE9B
RF9TVEFURShidWZmZXIsCisJCQkJCQlWSVZTX01NVXYyX1BUQV9DT05GSUcsCisJCQkJCQlWSVZT
X01NVXYyX1BUQV9DT05GSUdfSU5ERVgoaWQpKTsKKwkJCQl9CisKKwkJCQlpZiAoZ3B1LT5zZWNf
bW9kZSA9PSBFVE5BX1NFQ19OT05FKQorCQkJCQlmbHVzaCB8PSBldG5hdml2X2lvbW11djJfZ2V0
X210bGJfYWRkcihncHUtPm1tdSk7CisKIAkJCQlDTURfTE9BRF9TVEFURShidWZmZXIsIFZJVlNf
TU1VdjJfQ09ORklHVVJBVElPTiwKLQkJCQkJVklWU19NTVV2Ml9DT05GSUdVUkFUSU9OX01PREVf
TUFTSyB8Ci0JCQkJCVZJVlNfTU1VdjJfQ09ORklHVVJBVElPTl9BRERSRVNTX01BU0sgfAotCQkJ
CQlWSVZTX01NVXYyX0NPTkZJR1VSQVRJT05fRkxVU0hfRkxVU0gpOworCQkJCQkgICAgICAgZmx1
c2gpOwogCQkJCUNNRF9TRU0oYnVmZmVyLCBTWU5DX1JFQ0lQSUVOVF9GRSwKIAkJCQkJU1lOQ19S
RUNJUElFTlRfUEUpOwogCQkJCUNNRF9TVEFMTChidWZmZXIsIFNZTkNfUkVDSVBJRU5UX0ZFLApA
QCAtMzc5LDYgKzQxMSw3IEBAIHZvaWQgZXRuYXZpdl9idWZmZXJfcXVldWUoc3RydWN0IGV0bmF2
aXZfZ3B1ICpncHUsIHUzMiBleGVjX3N0YXRlLAogCQl9CiAKIAkJLyogQW5kIHRoZSBsaW5rIHRv
IHRoZSBzdWJtaXR0ZWQgYnVmZmVyICovCisJCWxpbmtfdGFyZ2V0ID0gZXRuYXZpdl9jbWRidWZf
Z2V0X3ZhKGNtZGJ1ZiwgJmdwdS0+bW11LT5jbWRidWZfbWFwcGluZyk7CiAJCUNNRF9MSU5LKGJ1
ZmZlciwgbGlua19kd29yZHMsIGxpbmtfdGFyZ2V0KTsKIAogCQkvKiBVcGRhdGUgdGhlIGxpbmsg
dGFyZ2V0IHRvIHBvaW50IHRvIGFib3ZlIGluc3RydWN0aW9ucyAqLwpAQCAtNDE1LDEzICs0NDgs
MTMgQEAgdm9pZCBldG5hdml2X2J1ZmZlcl9xdWV1ZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwg
dTMyIGV4ZWNfc3RhdGUsCiAJQ01EX0xPQURfU1RBVEUoYnVmZmVyLCBWSVZTX0dMX0VWRU5ULCBW
SVZTX0dMX0VWRU5UX0VWRU5UX0lEKGV2ZW50KSB8CiAJCSAgICAgICBWSVZTX0dMX0VWRU5UX0ZS
T01fUEUpOwogCUNNRF9XQUlUKGJ1ZmZlcik7Ci0JQ01EX0xJTksoYnVmZmVyLCAyLCBldG5hdml2
X2NtZGJ1Zl9nZXRfdmEoYnVmZmVyLCAmZ3B1LT5jbWRidWZfbWFwcGluZykKKwlDTURfTElOSyhi
dWZmZXIsIDIsIGV0bmF2aXZfY21kYnVmX2dldF92YShidWZmZXIsICZncHUtPm1tdS0+Y21kYnVm
X21hcHBpbmcpCiAJCSArIGJ1ZmZlci0+dXNlcl9zaXplIC0gNCk7CiAKIAlpZiAoZHJtX2RlYnVn
ICYgRFJNX1VUX0RSSVZFUikKIAkJcHJfaW5mbygic3RyZWFtIGxpbmsgdG8gMHglMDh4IEAgMHgl
MDh4ICVwXG4iLAogCQkJcmV0dXJuX3RhcmdldCwKLQkJCWV0bmF2aXZfY21kYnVmX2dldF92YShj
bWRidWYsICZncHUtPmNtZGJ1Zl9tYXBwaW5nKSwKKwkJCWV0bmF2aXZfY21kYnVmX2dldF92YShj
bWRidWYsICZncHUtPm1tdS0+Y21kYnVmX21hcHBpbmcpLAogCQkJY21kYnVmLT52YWRkcik7CiAK
IAlpZiAoZHJtX2RlYnVnICYgRFJNX1VUX0RSSVZFUikgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0
bmF2aXZfZHJ2LmMKaW5kZXggNWZhM2FhN2JkYmM1Li44YmNiZDNmYjAyYzYgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuYwpAQCAtNTAsMTIgKzUwLDE5IEBAIHN0YXRpYyBpbnQg
ZXRuYXZpdl9vcGVuKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fZmlsZSAqZmls
ZSkKIHsKIAlzdHJ1Y3QgZXRuYXZpdl9kcm1fcHJpdmF0ZSAqcHJpdiA9IGRldi0+ZGV2X3ByaXZh
dGU7CiAJc3RydWN0IGV0bmF2aXZfZmlsZV9wcml2YXRlICpjdHg7Ci0JaW50IGk7CisJaW50IHJl
dCwgaTsKIAogCWN0eCA9IGt6YWxsb2Moc2l6ZW9mKCpjdHgpLCBHRlBfS0VSTkVMKTsKIAlpZiAo
IWN0eCkKIAkJcmV0dXJuIC1FTk9NRU07CiAKKwljdHgtPm1tdSA9IGV0bmF2aXZfaW9tbXVfY29u
dGV4dF9pbml0KHByaXYtPm1tdV9nbG9iYWwsCisJCQkJCSAgICAgIHByaXYtPmNtZGJ1Zl9zdWJh
bGxvYyk7CisJaWYgKCFjdHgtPm1tdSkgeworCQlyZXQgPSAtRU5PTUVNOworCQlnb3RvIG91dF9m
cmVlOworCX0KKwogCWZvciAoaSA9IDA7IGkgPCBFVE5BX01BWF9QSVBFUzsgaSsrKSB7CiAJCXN0
cnVjdCBldG5hdml2X2dwdSAqZ3B1ID0gcHJpdi0+Z3B1W2ldOwogCQlzdHJ1Y3QgZHJtX3NjaGVk
X3JxICpycTsKQEAgLTcwLDYgKzc3LDEwIEBAIHN0YXRpYyBpbnQgZXRuYXZpdl9vcGVuKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKIAlmaWxlLT5kcml2ZXJf
cHJpdiA9IGN0eDsKIAogCXJldHVybiAwOworCitvdXRfZnJlZToKKwlrZnJlZShjdHgpOworCXJl
dHVybiByZXQ7CiB9CiAKIHN0YXRpYyB2b2lkIGV0bmF2aXZfcG9zdGNsb3NlKHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKQEAgLTg1LDYgKzk2LDggQEAgc3Rh
dGljIHZvaWQgZXRuYXZpdl9wb3N0Y2xvc2Uoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0
IGRybV9maWxlICpmaWxlKQogCQkJZHJtX3NjaGVkX2VudGl0eV9kZXN0cm95KCZjdHgtPnNjaGVk
X2VudGl0eVtpXSk7CiAJfQogCisJZXRuYXZpdl9pb21tdV9jb250ZXh0X3B1dChjdHgtPm1tdSk7
CisKIAlrZnJlZShjdHgpOwogfQogCkBAIC0xMTYsMTIgKzEyOSwyOSBAQCBzdGF0aWMgaW50IGV0
bmF2aXZfbW1fc2hvdyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0p
CiBzdGF0aWMgaW50IGV0bmF2aXZfbW11X3Nob3coc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHN0
cnVjdCBzZXFfZmlsZSAqbSkKIHsKIAlzdHJ1Y3QgZHJtX3ByaW50ZXIgcCA9IGRybV9zZXFfZmls
ZV9wcmludGVyKG0pOworCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1tdTsKIAogCXNl
cV9wcmludGYobSwgIkFjdGl2ZSBPYmplY3RzICglcyk6XG4iLCBkZXZfbmFtZShncHUtPmRldikp
OwogCi0JbXV0ZXhfbG9jaygmZ3B1LT5tbXUtPmxvY2spOwotCWRybV9tbV9wcmludCgmZ3B1LT5t
bXUtPm1tLCAmcCk7Ci0JbXV0ZXhfdW5sb2NrKCZncHUtPm1tdS0+bG9jayk7CisJLyoKKwkgKiBM
b2NrIHRoZSBHUFUgdG8gYXZvaWQgYSBNTVUgY29udGV4dCBzd2l0Y2gganVzdCBub3cgYW5kIGVs
ZXZhdGUKKwkgKiB0aGUgcmVmY291bnQgb2YgdGhlIGN1cnJlbnQgY29udGV4dCB0byBhdm9pZCBp
dCBkaXNhcHBlYXJpbmcgZnJvbQorCSAqIHVuZGVyIG91ciBmZWV0LgorCSAqLworCW11dGV4X2xv
Y2soJmdwdS0+bG9jayk7CisJbW11ID0gZ3B1LT5tbXU7CisJaWYgKG1tdSkKKwkJZXRuYXZpdl9p
b21tdV9jb250ZXh0X2dldChtbXUpOworCW11dGV4X3VubG9jaygmZ3B1LT5sb2NrKTsKKworCWlm
ICghbW11KQorCQlyZXR1cm4gMDsKKworCW11dGV4X2xvY2soJm1tdS0+bG9jayk7CisJZHJtX21t
X3ByaW50KCZtbXUtPm1tLCAmcCk7CisJbXV0ZXhfdW5sb2NrKCZtbXUtPmxvY2spOworCisJZXRu
YXZpdl9pb21tdV9jb250ZXh0X3B1dChtbXUpOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJt
L2V0bmF2aXYvZXRuYXZpdl9kcnYuaAppbmRleCA1ZjhkYjA4ZjFjMTcuLmE0ODhjZmRiNmJiZiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5oCkBAIC0yNSwxMCArMjUsNyBAQCBz
dHJ1Y3QgZXRuYXZpdl9nZW1fc3VibWl0Owogc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsOwog
CiBzdHJ1Y3QgZXRuYXZpdl9maWxlX3ByaXZhdGUgewotCS8qCi0JICogV2hlbiBwZXItY29udGV4
dCBhZGRyZXNzIHNwYWNlcyBhcmUgc3VwcG9ydGVkIHdlJ2Qga2VlcCB0cmFjayBvZgotCSAqIHRo
ZSBjb250ZXh0J3MgcGFnZS10YWJsZXMgaGVyZS4KLQkgKi8KKwlzdHJ1Y3QgZXRuYXZpdl9pb21t
dV9jb250ZXh0CSptbXU7CiAJc3RydWN0IGRybV9zY2hlZF9lbnRpdHkJCXNjaGVkX2VudGl0eVtF
VE5BX01BWF9QSVBFU107CiB9OwogCkBAIC03NSw2ICs3Miw3IEBAIHUxNiBldG5hdml2X2J1ZmZl
cl9jb25maWdfcHRhKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LCB1bnNpZ25lZCBzaG9ydCBpZCk7
CiB2b2lkIGV0bmF2aXZfYnVmZmVyX2VuZChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSk7CiB2b2lk
IGV0bmF2aXZfc3luY19wb2ludF9xdWV1ZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwgdW5zaWdu
ZWQgaW50IGV2ZW50KTsKIHZvaWQgZXRuYXZpdl9idWZmZXJfcXVldWUoc3RydWN0IGV0bmF2aXZf
Z3B1ICpncHUsIHUzMiBleGVjX3N0YXRlLAorCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQg
Km1tdSwKIAl1bnNpZ25lZCBpbnQgZXZlbnQsIHN0cnVjdCBldG5hdml2X2NtZGJ1ZiAqY21kYnVm
KTsKIHZvaWQgZXRuYXZpdl92YWxpZGF0ZV9pbml0KHZvaWQpOwogYm9vbCBldG5hdml2X2NtZF92
YWxpZGF0ZV9vbmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfZHVtcC5jCmluZGV4IDJjMTY0NDgwYmNmYy4uODU1NGU5MzBhNzFhIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2R1bXAuYwpAQCAtMTc0LDEyICsxNzQsMTIgQEAgdm9p
ZCBldG5hdml2X2NvcmVfZHVtcChzdHJ1Y3QgZXRuYXZpdl9nZW1fc3VibWl0ICpzdWJtaXQpCiAJ
ZXRuYXZpdl9jb3JlX2R1bXBfbWVtKCZpdGVyLCBFVERVTVBfQlVGX1JJTkcsIGdwdS0+YnVmZmVy
LnZhZGRyLAogCQkJICAgICAgZ3B1LT5idWZmZXIuc2l6ZSwKIAkJCSAgICAgIGV0bmF2aXZfY21k
YnVmX2dldF92YSgmZ3B1LT5idWZmZXIsCi0JCQkJCQkgICAgJmdwdS0+Y21kYnVmX21hcHBpbmcp
KTsKKwkJCQkJCSAgICAmZ3B1LT5tbXUtPmNtZGJ1Zl9tYXBwaW5nKSk7CiAKIAlldG5hdml2X2Nv
cmVfZHVtcF9tZW0oJml0ZXIsIEVURFVNUF9CVUZfQ01ELAogCQkJICAgICAgc3VibWl0LT5jbWRi
dWYudmFkZHIsIHN1Ym1pdC0+Y21kYnVmLnNpemUsCiAJCQkgICAgICBldG5hdml2X2NtZGJ1Zl9n
ZXRfdmEoJnN1Ym1pdC0+Y21kYnVmLAotCQkJCQkJICAgICZncHUtPmNtZGJ1Zl9tYXBwaW5nKSk7
CisJCQkJCQkgICAgJmdwdS0+bW11LT5jbWRidWZfbWFwcGluZykpOwogCiAJLyogUmVzZXJ2ZSBz
cGFjZSBmb3IgdGhlIGJvbWFwICovCiAJaWYgKG5fYm9tYXBfcGFnZXMpIHsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0v
ZXRuYXZpdi9ldG5hdml2X2dlbS5jCmluZGV4IDVmZWUwYmIxNDVjOC4uNzQ2ODBjMDI1NGI2IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbS5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtLmMKQEAgLTI0OCw4ICsyNDgsNyBAQCB2
b2lkIGV0bmF2aXZfZ2VtX21hcHBpbmdfdW5yZWZlcmVuY2Uoc3RydWN0IGV0bmF2aXZfdnJhbV9t
YXBwaW5nICptYXBwaW5nKQogfQogCiBzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKmV0bmF2
aXZfZ2VtX21hcHBpbmdfZ2V0KAotCXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCBzdHJ1Y3Qg
ZXRuYXZpdl9ncHUgKmdwdSwKLQlzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICptbXUpCisJ
c3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQg
Km1tdSkKIHsKIAlzdHJ1Y3QgZXRuYXZpdl9nZW1fb2JqZWN0ICpldG5hdml2X29iaiA9IHRvX2V0
bmF2aXZfYm8ob2JqKTsKIAlzdHJ1Y3QgZXRuYXZpdl92cmFtX21hcHBpbmcgKm1hcHBpbmc7CkBA
IC0zMDgsNyArMzA3LDcgQEAgc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5nICpldG5hdml2X2dl
bV9tYXBwaW5nX2dldCgKIAltYXBwaW5nLT5jb250ZXh0ID0gbW11OwogCW1hcHBpbmctPnVzZSA9
IDE7CiAKLQlyZXQgPSBldG5hdml2X2lvbW11X21hcF9nZW0obW11LCBldG5hdml2X29iaiwgZ3B1
LT5tZW1vcnlfYmFzZSwKKwlyZXQgPSBldG5hdml2X2lvbW11X21hcF9nZW0obW11LCBldG5hdml2
X29iaiwgbW11LT5nbG9iYWwtPm1lbW9yeV9iYXNlLAogCQkJCSAgICBtYXBwaW5nKTsKIAlpZiAo
cmV0IDwgMCkKIAkJa2ZyZWUobWFwcGluZyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
ZXRuYXZpdi9ldG5hdml2X2dlbS5oIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9n
ZW0uaAppbmRleCAzNjQ4NjI1NGEzZDMuLjE3NWU2MTI4YzRiYyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRu
YXZpdi9ldG5hdml2X2dlbS5oCkBAIC05Myw2ICs5Myw3IEBAIHN0cnVjdCBldG5hdml2X2dlbV9z
dWJtaXQgewogCXN0cnVjdCBrcmVmIHJlZmNvdW50OwogCXN0cnVjdCBldG5hdml2X2ZpbGVfcHJp
dmF0ZSAqY3R4OwogCXN0cnVjdCBldG5hdml2X2dwdSAqZ3B1OworCXN0cnVjdCBldG5hdml2X2lv
bW11X2NvbnRleHQgKm1tdSwgKnByZXZfbW11OwogCXN0cnVjdCBkbWFfZmVuY2UgKm91dF9mZW5j
ZSwgKmluX2ZlbmNlOwogCWludCBvdXRfZmVuY2VfaWQ7CiAJc3RydWN0IGxpc3RfaGVhZCBub2Rl
OyAvKiBHUFUgYWN0aXZlIHN1Ym1pdCBsaXN0ICovCkBAIC0xMTksOCArMTIwLDcgQEAgc3RydWN0
IHBhZ2UgKipldG5hdml2X2dlbV9nZXRfcGFnZXMoc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdCAq
b2JqKTsKIHZvaWQgZXRuYXZpdl9nZW1fcHV0X3BhZ2VzKHN0cnVjdCBldG5hdml2X2dlbV9vYmpl
Y3QgKm9iaik7CiAKIHN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyAqZXRuYXZpdl9nZW1fbWFw
cGluZ19nZXQoCi0Jc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosIHN0cnVjdCBldG5hdml2X2dw
dSAqZ3B1LAotCXN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1tdSk7CisJc3RydWN0IGRy
bV9nZW1fb2JqZWN0ICpvYmosIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKm1tdSk7CiB2
b2lkIGV0bmF2aXZfZ2VtX21hcHBpbmdfdW5yZWZlcmVuY2Uoc3RydWN0IGV0bmF2aXZfdnJhbV9t
YXBwaW5nICptYXBwaW5nKTsKIAogI2VuZGlmIC8qIF9fRVROQVZJVl9HRU1fSF9fICovCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbV9zdWJtaXQuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ2VtX3N1Ym1pdC5jCmluZGV4IDI2N2ZmNTg2
M2U1ZC4uMjdhMTRhMjcwYTU1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X2dlbV9zdWJtaXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X2dlbV9zdWJtaXQuYwpAQCAtMjI0LDcgKzIyNCw3IEBAIHN0YXRpYyBpbnQgc3VibWl0X3Bpbl9v
YmplY3RzKHN0cnVjdCBldG5hdml2X2dlbV9zdWJtaXQgKnN1Ym1pdCkKIAkJc3RydWN0IGV0bmF2
aXZfdnJhbV9tYXBwaW5nICptYXBwaW5nOwogCiAJCW1hcHBpbmcgPSBldG5hdml2X2dlbV9tYXBw
aW5nX2dldCgmZXRuYXZpdl9vYmotPmJhc2UsCi0JCQkJCQkgIHN1Ym1pdC0+Z3B1LCBzdWJtaXQt
PmdwdS0+bW11KTsKKwkJCQkJCSAgc3VibWl0LT5tbXUpOwogCQlpZiAoSVNfRVJSKG1hcHBpbmcp
KSB7CiAJCQlyZXQgPSBQVFJfRVJSKG1hcHBpbmcpOwogCQkJYnJlYWs7CkBAIC0zNjEsNiArMzYx
LDEyIEBAIHN0YXRpYyB2b2lkIHN1Ym1pdF9jbGVhbnVwKHN0cnVjdCBrcmVmICprcmVmKQogCWlm
IChzdWJtaXQtPmNtZGJ1Zi5zdWJhbGxvYykKIAkJZXRuYXZpdl9jbWRidWZfZnJlZSgmc3VibWl0
LT5jbWRidWYpOwogCisJaWYgKHN1Ym1pdC0+bW11KQorCQlldG5hdml2X2lvbW11X2NvbnRleHRf
cHV0KHN1Ym1pdC0+bW11KTsKKworCWlmIChzdWJtaXQtPnByZXZfbW11KQorCQlldG5hdml2X2lv
bW11X2NvbnRleHRfcHV0KHN1Ym1pdC0+cHJldl9tbXUpOworCiAJZm9yIChpID0gMDsgaSA8IHN1
Ym1pdC0+bnJfYm9zOyBpKyspIHsKIAkJc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdCAqZXRuYXZp
dl9vYmogPSBzdWJtaXQtPmJvc1tpXS5vYmo7CiAKQEAgLTUwMiw2ICs1MDgsOCBAQCBpbnQgZXRu
YXZpdl9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEs
CiAJCWdvdG8gZXJyX3N1Ym1pdF9vYmplY3RzOwogCiAJc3VibWl0LT5jdHggPSBmaWxlLT5kcml2
ZXJfcHJpdjsKKwlldG5hdml2X2lvbW11X2NvbnRleHRfZ2V0KHN1Ym1pdC0+Y3R4LT5tbXUpOwor
CXN1Ym1pdC0+bW11ID0gc3VibWl0LT5jdHgtPm1tdTsKIAlzdWJtaXQtPmV4ZWNfc3RhdGUgPSBh
cmdzLT5leGVjX3N0YXRlOwogCXN1Ym1pdC0+ZmxhZ3MgPSBhcmdzLT5mbGFnczsKIApkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuYyBiL2RyaXZlcnMvZ3B1
L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmMKaW5kZXggYjQ2ZDgyMDdmNmU2Li5hM2QwZTdhZGM4
YmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZ3B1LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuYwpAQCAtNjAyLDcgKzYwMiw3
IEBAIHZvaWQgZXRuYXZpdl9ncHVfc3RhcnRfZmUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHUz
MiBhZGRyZXNzLCB1MTYgcHJlZmV0Y2gpCiAKIHN0YXRpYyB2b2lkIGV0bmF2aXZfZ3B1X3N0YXJ0
X2ZlX2lkbGVsb29wKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogewotCXUzMiBhZGRyZXNzID0g
ZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKCZncHUtPmJ1ZmZlciwgJmdwdS0+Y21kYnVmX21hcHBpbmcp
OworCXUzMiBhZGRyZXNzID0gZXRuYXZpdl9jbWRidWZfZ2V0X3ZhKCZncHUtPmJ1ZmZlciwgJmdw
dS0+bW11LT5jbWRidWZfbWFwcGluZyk7CiAJdTE2IHByZWZldGNoOwogCiAJLyogc2V0dXAgdGhl
IE1NVSAqLwpAQCAtNjkzLDggKzY5Myw2IEBAIHN0YXRpYyB2b2lkIGV0bmF2aXZfZ3B1X2h3X2lu
aXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCiAJZXRuYXZpdl9ncHVfc2V0dXBfcHVsc2VfZWF0
ZXIoZ3B1KTsKIAogCWdwdV93cml0ZShncHUsIFZJVlNfSElfSU5UUl9FTkJMLCB+MFUpOwotCi0J
ZXRuYXZpdl9ncHVfc3RhcnRfZmVfaWRsZWxvb3AoZ3B1KTsKIH0KIAogaW50IGV0bmF2aXZfZ3B1
X2luaXQoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUpCkBAIC03MjQsMjggKzcyMiw2IEBAIGludCBl
dG5hdml2X2dwdV9pbml0KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogCQlnb3RvIGZhaWw7CiAJ
fQogCi0JLyoKLQkgKiBTZXQgdGhlIEdQVSBsaW5lYXIgd2luZG93IHRvIGJlIGF0IHRoZSBlbmQg
b2YgdGhlIERNQSB3aW5kb3csIHdoZXJlCi0JICogdGhlIENNQSBhcmVhIGlzIGxpa2VseSB0byBy
ZXNpZGUuIFRoaXMgZW5zdXJlcyB0aGF0IHdlIGFyZSBhYmxlIHRvCi0JICogbWFwIHRoZSBjb21t
YW5kIGJ1ZmZlcnMgd2hpbGUgaGF2aW5nIHRoZSBsaW5lYXIgd2luZG93IG92ZXJsYXAgYXMKLQkg
KiBtdWNoIFJBTSBhcyBwb3NzaWJsZSwgc28gd2UgY2FuIG9wdGltaXplIG1hcHBpbmdzIGZvciBv
dGhlciBidWZmZXJzLgotCSAqCi0JICogRm9yIDNEIGNvcmVzIG9ubHkgZG8gdGhpcyBpZiBNQzIu
MCBpcyBwcmVzZW50LCBhcyB3aXRoIE1DMS4wIGl0IGxlYWRzCi0JICogdG8gZGlmZmVyZW50IHZp
ZXdzIG9mIHRoZSBtZW1vcnkgb24gdGhlIGluZGl2aWR1YWwgZW5naW5lcy4KLQkgKi8KLQlpZiAo
IShncHUtPmlkZW50aXR5LmZlYXR1cmVzICYgY2hpcEZlYXR1cmVzX1BJUEVfM0QpIHx8Ci0JICAg
IChncHUtPmlkZW50aXR5Lm1pbm9yX2ZlYXR1cmVzMCAmIGNoaXBNaW5vckZlYXR1cmVzMF9NQzIw
KSkgewotCQl1MzIgZG1hX21hc2sgPSAodTMyKWRtYV9nZXRfcmVxdWlyZWRfbWFzayhncHUtPmRl
dik7Ci0JCWlmIChkbWFfbWFzayA8IFBIWVNfT0ZGU0VUICsgU1pfMkcpCi0JCQlncHUtPm1lbW9y
eV9iYXNlID0gUEhZU19PRkZTRVQ7Ci0JCWVsc2UKLQkJCWdwdS0+bWVtb3J5X2Jhc2UgPSBkbWFf
bWFzayAtIFNaXzJHICsgMTsKLQl9IGVsc2UgaWYgKFBIWVNfT0ZGU0VUID49IFNaXzJHKSB7Ci0J
CWRldl9pbmZvKGdwdS0+ZGV2LCAiTmVlZCB0byBtb3ZlIGxpbmVhciB3aW5kb3cgb24gTUMxLjAs
IGRpc2FibGluZyBUU1xuIik7Ci0JCWdwdS0+bWVtb3J5X2Jhc2UgPSBQSFlTX09GRlNFVDsKLQkJ
Z3B1LT5pZGVudGl0eS5mZWF0dXJlcyAmPSB+Y2hpcEZlYXR1cmVzX0ZBU1RfQ0xFQVI7Ci0JfQot
CiAJLyoKIAkgKiBPbiBjb3JlcyB3aXRoIHNlY3VyaXR5IGZlYXR1cmVzIHN1cHBvcnRlZCwgd2Ug
Y2xhaW0gY29udHJvbCBvdmVyIHRoZQogCSAqIHNlY3VyaXR5IHN0YXRlcy4KQEAgLTc2NCwxOSAr
NzQwLDI2IEBAIGludCBldG5hdml2X2dwdV9pbml0KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQog
CWlmIChyZXQpCiAJCWdvdG8gZmFpbDsKIAotCWdwdS0+bW11ID0gZXRuYXZpdl9pb21tdV9jb250
ZXh0X2luaXQocHJpdi0+bW11X2dsb2JhbCk7Ci0JaWYgKElTX0VSUihncHUtPm1tdSkpIHsKLQkJ
ZGV2X2VycihncHUtPmRldiwgIkZhaWxlZCB0byBpbnN0YW50aWF0ZSBHUFUgSU9NTVVcbiIpOwot
CQlyZXQgPSBQVFJfRVJSKGdwdS0+bW11KTsKLQkJZ290byBpb21tdV9nbG9iYWxfZmluaTsKLQl9
Ci0KLQlyZXQgPSBldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY19tYXAocHJpdi0+Y21kYnVmX3N1YmFs
bG9jLCBncHUtPm1tdSwKLQkJCQkJICAmZ3B1LT5jbWRidWZfbWFwcGluZywKLQkJCQkJICBncHUt
Pm1lbW9yeV9iYXNlKTsKLQlpZiAocmV0KSB7Ci0JCWRldl9lcnIoZ3B1LT5kZXYsICJmYWlsZWQg
dG8gbWFwIGNtZGJ1ZiBzdWJhbGxvY1xuIik7Ci0JCWdvdG8gZGVzdHJveV9pb21tdTsKKwkvKgor
CSAqIFNldCB0aGUgR1BVIGxpbmVhciB3aW5kb3cgdG8gYmUgYXQgdGhlIGVuZCBvZiB0aGUgRE1B
IHdpbmRvdywgd2hlcmUKKwkgKiB0aGUgQ01BIGFyZWEgaXMgbGlrZWx5IHRvIHJlc2lkZS4gVGhp
cyBlbnN1cmVzIHRoYXQgd2UgYXJlIGFibGUgdG8KKwkgKiBtYXAgdGhlIGNvbW1hbmQgYnVmZmVy
cyB3aGlsZSBoYXZpbmcgdGhlIGxpbmVhciB3aW5kb3cgb3ZlcmxhcCBhcworCSAqIG11Y2ggUkFN
IGFzIHBvc3NpYmxlLCBzbyB3ZSBjYW4gb3B0aW1pemUgbWFwcGluZ3MgZm9yIG90aGVyIGJ1ZmZl
cnMuCisJICoKKwkgKiBGb3IgM0QgY29yZXMgb25seSBkbyB0aGlzIGlmIE1DMi4wIGlzIHByZXNl
bnQsIGFzIHdpdGggTUMxLjAgaXQgbGVhZHMKKwkgKiB0byBkaWZmZXJlbnQgdmlld3Mgb2YgdGhl
IG1lbW9yeSBvbiB0aGUgaW5kaXZpZHVhbCBlbmdpbmVzLgorCSAqLworCWlmICghKGdwdS0+aWRl
bnRpdHkuZmVhdHVyZXMgJiBjaGlwRmVhdHVyZXNfUElQRV8zRCkgfHwKKwkgICAgKGdwdS0+aWRl
bnRpdHkubWlub3JfZmVhdHVyZXMwICYgY2hpcE1pbm9yRmVhdHVyZXMwX01DMjApKSB7CisJCXUz
MiBkbWFfbWFzayA9ICh1MzIpZG1hX2dldF9yZXF1aXJlZF9tYXNrKGdwdS0+ZGV2KTsKKwkJaWYg
KGRtYV9tYXNrIDwgUEhZU19PRkZTRVQgKyBTWl8yRykKKwkJCXByaXYtPm1tdV9nbG9iYWwtPm1l
bW9yeV9iYXNlID0gUEhZU19PRkZTRVQ7CisJCWVsc2UKKwkJCXByaXYtPm1tdV9nbG9iYWwtPm1l
bW9yeV9iYXNlID0gZG1hX21hc2sgLSBTWl8yRyArIDE7CisJfSBlbHNlIGlmIChQSFlTX09GRlNF
VCA+PSBTWl8yRykgeworCQlkZXZfaW5mbyhncHUtPmRldiwgIk5lZWQgdG8gbW92ZSBsaW5lYXIg
d2luZG93IG9uIE1DMS4wLCBkaXNhYmxpbmcgVFNcbiIpOworCQlwcml2LT5tbXVfZ2xvYmFsLT5t
ZW1vcnlfYmFzZSA9IFBIWVNfT0ZGU0VUOworCQlncHUtPmlkZW50aXR5LmZlYXR1cmVzICY9IH5j
aGlwRmVhdHVyZXNfRkFTVF9DTEVBUjsKIAl9CiAKIAkvKiBDcmVhdGUgYnVmZmVyOiAqLwpAQCAt
Nzg0LDE1ICs3NjcsNyBAQCBpbnQgZXRuYXZpdl9ncHVfaW5pdChzdHJ1Y3QgZXRuYXZpdl9ncHUg
KmdwdSkKIAkJCQkgIFBBR0VfU0laRSk7CiAJaWYgKHJldCkgewogCQlkZXZfZXJyKGdwdS0+ZGV2
LCAiY291bGQgbm90IGNyZWF0ZSBjb21tYW5kIGJ1ZmZlclxuIik7Ci0JCWdvdG8gdW5tYXBfc3Vi
YWxsb2M7Ci0JfQotCi0JaWYgKCEoZ3B1LT5pZGVudGl0eS5taW5vcl9mZWF0dXJlczEgJiBjaGlw
TWlub3JGZWF0dXJlczFfTU1VX1ZFUlNJT04pICYmCi0JICAgIGV0bmF2aXZfY21kYnVmX2dldF92
YSgmZ3B1LT5idWZmZXIsICZncHUtPmNtZGJ1Zl9tYXBwaW5nKSA+IDB4ODAwMDAwMDApIHsKLQkJ
cmV0ID0gLUVJTlZBTDsKLQkJZGV2X2VycihncHUtPmRldiwKLQkJCSJjb21tYW5kIGJ1ZmZlciBv
dXRzaWRlIHZhbGlkIG1lbW9yeSB3aW5kb3dcbiIpOwotCQlnb3RvIGZyZWVfYnVmZmVyOworCQln
b3RvIGZhaWw7CiAJfQogCiAJLyogU2V0dXAgZXZlbnQgbWFuYWdlbWVudCAqLwpAQCAtODE1LDE0
ICs3OTAsNiBAQCBpbnQgZXRuYXZpdl9ncHVfaW5pdChzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSkK
IAogCXJldHVybiAwOwogCi1mcmVlX2J1ZmZlcjoKLQlldG5hdml2X2NtZGJ1Zl9mcmVlKCZncHUt
PmJ1ZmZlcik7Ci11bm1hcF9zdWJhbGxvYzoKLQlldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY191bm1h
cChncHUtPm1tdSwgJmdwdS0+Y21kYnVmX21hcHBpbmcpOwotZGVzdHJveV9pb21tdToKLQlldG5h
dml2X2lvbW11X2NvbnRleHRfcHV0KGdwdS0+bW11KTsKLWlvbW11X2dsb2JhbF9maW5pOgotCWV0
bmF2aXZfaW9tbXVfZ2xvYmFsX2ZpbmkoZ3B1KTsKIGZhaWw6CiAJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShncHUtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZ3B1LT5kZXYp
OwpAQCAtMTAxNiw2ICs5ODMsNyBAQCB2b2lkIGV0bmF2aXZfZ3B1X3JlY292ZXJfaGFuZyhzdHJ1
Y3QgZXRuYXZpdl9ncHUgKmdwdSkKIAogCWV0bmF2aXZfZ3B1X2h3X2luaXQoZ3B1KTsKIAlncHUt
PmV4ZWNfc3RhdGUgPSAtMTsKKwlncHUtPm1tdSA9IE5VTEw7CiAKIAltdXRleF91bmxvY2soJmdw
dS0+bG9jayk7CiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShncHUtPmRldik7CkBAIC0xMzIy
LDYgKzEyOTAsMTUgQEAgc3RydWN0IGRtYV9mZW5jZSAqZXRuYXZpdl9ncHVfc3VibWl0KHN0cnVj
dCBldG5hdml2X2dlbV9zdWJtaXQgKnN1Ym1pdCkKIAkJZ290byBvdXRfdW5sb2NrOwogCX0KIAor
CWlmICghZ3B1LT5tbXUpIHsKKwkJZXRuYXZpdl9pb21tdV9jb250ZXh0X2dldChzdWJtaXQtPm1t
dSk7CisJCWdwdS0+bW11ID0gc3VibWl0LT5tbXU7CisJCWV0bmF2aXZfZ3B1X3N0YXJ0X2ZlX2lk
bGVsb29wKGdwdSk7CisJfSBlbHNlIHsKKwkJZXRuYXZpdl9pb21tdV9jb250ZXh0X2dldChncHUt
Pm1tdSk7CisJCXN1Ym1pdC0+cHJldl9tbXUgPSBncHUtPm1tdTsKKwl9CisKIAlpZiAoc3VibWl0
LT5ucl9wbXJzKSB7CiAJCWdwdS0+ZXZlbnRbZXZlbnRbMV1dLnN5bmNfcG9pbnQgPSAmc3luY19w
b2ludF9wZXJmbW9uX3NhbXBsZV9wcmU7CiAJCWtyZWZfZ2V0KCZzdWJtaXQtPnJlZmNvdW50KTsK
QEAgLTEzMzEsNyArMTMwOCw3IEBAIHN0cnVjdCBkbWFfZmVuY2UgKmV0bmF2aXZfZ3B1X3N1Ym1p
dChzdHJ1Y3QgZXRuYXZpdl9nZW1fc3VibWl0ICpzdWJtaXQpCiAKIAlncHUtPmV2ZW50W2V2ZW50
WzBdXS5mZW5jZSA9IGdwdV9mZW5jZTsKIAlzdWJtaXQtPmNtZGJ1Zi51c2VyX3NpemUgPSBzdWJt
aXQtPmNtZGJ1Zi5zaXplIC0gODsKLQlldG5hdml2X2J1ZmZlcl9xdWV1ZShncHUsIHN1Ym1pdC0+
ZXhlY19zdGF0ZSwgZXZlbnRbMF0sCisJZXRuYXZpdl9idWZmZXJfcXVldWUoZ3B1LCBzdWJtaXQt
PmV4ZWNfc3RhdGUsIHN1Ym1pdC0+bW11LCBldmVudFswXSwKIAkJCSAgICAgJnN1Ym1pdC0+Y21k
YnVmKTsKIAogCWlmIChzdWJtaXQtPm5yX3BtcnMpIHsKQEAgLTE1MzQsNyArMTUxMSw3IEBAIGlu
dCBldG5hdml2X2dwdV93YWl0X2lkbGUoc3RydWN0IGV0bmF2aXZfZ3B1ICpncHUsIHVuc2lnbmVk
IGludCB0aW1lb3V0X21zKQogCiBzdGF0aWMgaW50IGV0bmF2aXZfZ3B1X2h3X3N1c3BlbmQoc3Ry
dWN0IGV0bmF2aXZfZ3B1ICpncHUpCiB7Ci0JaWYgKGdwdS0+aW5pdGlhbGl6ZWQpIHsKKwlpZiAo
Z3B1LT5pbml0aWFsaXplZCAmJiBncHUtPm1tdSkgewogCQkvKiBSZXBsYWNlIHRoZSBsYXN0IFdB
SVQgd2l0aCBFTkQgKi8KIAkJbXV0ZXhfbG9jaygmZ3B1LT5sb2NrKTsKIAkJZXRuYXZpdl9idWZm
ZXJfZW5kKGdwdSk7CkBAIC0xNTQ2LDggKzE1MjMsMTMgQEAgc3RhdGljIGludCBldG5hdml2X2dw
dV9od19zdXNwZW5kKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogCQkgKiB3ZSBmYWlsLCBqdXN0
IHdhcm4gYW5kIGNvbnRpbnVlLgogCQkgKi8KIAkJZXRuYXZpdl9ncHVfd2FpdF9pZGxlKGdwdSwg
MTAwKTsKKworCQlldG5hdml2X2lvbW11X2NvbnRleHRfcHV0KGdwdS0+bW11KTsKKwkJZ3B1LT5t
bXUgPSBOVUxMOwogCX0KIAorCWdwdS0+ZXhlY19zdGF0ZSA9IC0xOworCiAJcmV0dXJuIGV0bmF2
aXZfZ3B1X2Nsa19kaXNhYmxlKGdwdSk7CiB9CiAKQEAgLTE1NjMsOCArMTU0NSw2IEBAIHN0YXRp
YyBpbnQgZXRuYXZpdl9ncHVfaHdfcmVzdW1lKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KQogCWV0
bmF2aXZfZ3B1X3VwZGF0ZV9jbG9jayhncHUpOwogCWV0bmF2aXZfZ3B1X2h3X2luaXQoZ3B1KTsK
IAotCWdwdS0+ZXhlY19zdGF0ZSA9IC0xOwotCiAJbXV0ZXhfdW5sb2NrKCZncHUtPmxvY2spOwog
CiAJcmV0dXJuIDA7CkBAIC0xNjk1LDggKzE2NzUsNiBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dw
dV91bmJpbmQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlICptYXN0ZXIsCiAKIAlp
ZiAoZ3B1LT5pbml0aWFsaXplZCkgewogCQlldG5hdml2X2NtZGJ1Zl9mcmVlKCZncHUtPmJ1ZmZl
cik7Ci0JCWV0bmF2aXZfY21kYnVmX3N1YmFsbG9jX3VubWFwKGdwdS0+bW11LCAmZ3B1LT5jbWRi
dWZfbWFwcGluZyk7Ci0JCWV0bmF2aXZfaW9tbXVfY29udGV4dF9wdXQoZ3B1LT5tbXUpOwogCQll
dG5hdml2X2lvbW11X2dsb2JhbF9maW5pKGdwdSk7CiAJCWdwdS0+aW5pdGlhbGl6ZWQgPSBmYWxz
ZTsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dwdS5o
IGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9ncHUuaAppbmRleCA4M2U5MjU2ODY1
YTQuLjQwZTExYjEyZGY3MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRu
YXZpdl9ncHUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dwdS5oCkBA
IC0xMDMsMTMgKzEwMyw5IEBAIHN0cnVjdCBldG5hdml2X2dwdSB7CiAJYm9vbCBpbml0aWFsaXpl
ZDsKIAogCS8qICdyaW5nJy1idWZmZXI6ICovCi0Jc3RydWN0IGV0bmF2aXZfdnJhbV9tYXBwaW5n
IGNtZGJ1Zl9tYXBwaW5nOwogCXN0cnVjdCBldG5hdml2X2NtZGJ1ZiBidWZmZXI7CiAJaW50IGV4
ZWNfc3RhdGU7CiAKLQkvKiBidXMgYmFzZSBhZGRyZXNzIG9mIG1lbW9yeSAgKi8KLQl1MzIgbWVt
b3J5X2Jhc2U7Ci0KIAkvKiBldmVudCBtYW5hZ2VtZW50OiAqLwogCURFQ0xBUkVfQklUTUFQKGV2
ZW50X2JpdG1hcCwgRVROQV9OUl9FVkVOVFMpOwogCXN0cnVjdCBldG5hdml2X2V2ZW50IGV2ZW50
W0VUTkFfTlJfRVZFTlRTXTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0
bmF2aXZfaW9tbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfaW9tbXUuYwpp
bmRleCBhMmYxZmYxNTE4MjIuLmFhYzhkYmYzZWE1NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2
L2V0bmF2aXZfaW9tbXUuYwpAQCAtOTMsMTEgKzkzLDExIEBAIHN0YXRpYyB2b2lkIGV0bmF2aXZf
aW9tbXV2MV9yZXN0b3JlKHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1LAogCXUzMiBwZ3RhYmxlOwog
CiAJLyogc2V0IGJhc2UgYWRkcmVzc2VzICovCi0JZ3B1X3dyaXRlKGdwdSwgVklWU19NQ19NRU1P
UllfQkFTRV9BRERSX1JBLCBncHUtPm1lbW9yeV9iYXNlKTsKLQlncHVfd3JpdGUoZ3B1LCBWSVZT
X01DX01FTU9SWV9CQVNFX0FERFJfRkUsIGdwdS0+bWVtb3J5X2Jhc2UpOwotCWdwdV93cml0ZShn
cHUsIFZJVlNfTUNfTUVNT1JZX0JBU0VfQUREUl9UWCwgZ3B1LT5tZW1vcnlfYmFzZSk7Ci0JZ3B1
X3dyaXRlKGdwdSwgVklWU19NQ19NRU1PUllfQkFTRV9BRERSX1BFWiwgZ3B1LT5tZW1vcnlfYmFz
ZSk7Ci0JZ3B1X3dyaXRlKGdwdSwgVklWU19NQ19NRU1PUllfQkFTRV9BRERSX1BFLCBncHUtPm1l
bW9yeV9iYXNlKTsKKwlncHVfd3JpdGUoZ3B1LCBWSVZTX01DX01FTU9SWV9CQVNFX0FERFJfUkEs
IGNvbnRleHQtPmdsb2JhbC0+bWVtb3J5X2Jhc2UpOworCWdwdV93cml0ZShncHUsIFZJVlNfTUNf
TUVNT1JZX0JBU0VfQUREUl9GRSwgY29udGV4dC0+Z2xvYmFsLT5tZW1vcnlfYmFzZSk7CisJZ3B1
X3dyaXRlKGdwdSwgVklWU19NQ19NRU1PUllfQkFTRV9BRERSX1RYLCBjb250ZXh0LT5nbG9iYWwt
Pm1lbW9yeV9iYXNlKTsKKwlncHVfd3JpdGUoZ3B1LCBWSVZTX01DX01FTU9SWV9CQVNFX0FERFJf
UEVaLCBjb250ZXh0LT5nbG9iYWwtPm1lbW9yeV9iYXNlKTsKKwlncHVfd3JpdGUoZ3B1LCBWSVZT
X01DX01FTU9SWV9CQVNFX0FERFJfUEUsIGNvbnRleHQtPmdsb2JhbC0+bWVtb3J5X2Jhc2UpOwog
CiAJLyogc2V0IHBhZ2UgdGFibGUgYWRkcmVzcyBpbiBNQyAqLwogCXBndGFibGUgPSAodTMyKXYx
X2NvbnRleHQtPnBndGFibGVfZG1hOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2
aXYvZXRuYXZpdl9pb21tdV92Mi5jIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9p
b21tdV92Mi5jCmluZGV4IDVjYTIwNzdjMTQ4ZC4uMDQzMTExYTFkNjBjIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2lvbW11X3YyLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9pb21tdV92Mi5jCkBAIC0yMDYsNyArMjA2LDcgQEAgc3Rh
dGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfc2VjKHN0cnVjdCBldG5hdml2X2dwdSAq
Z3B1LAogCQkgIFZJVlNfTU1VdjJfU0FGRV9BRERSRVNTX0NPTkZJR19TRUNfU0FGRV9BRERSX0hJ
R0goCiAJCSAgdXBwZXJfMzJfYml0cyhjb250ZXh0LT5nbG9iYWwtPmJhZF9wYWdlX2RtYSkpKTsK
IAotCWNvbnRleHQtPmdsb2JhbC0+djIucHRhX2NwdVswXSA9IHYyX2NvbnRleHQtPm10bGJfZG1h
IHwKKwljb250ZXh0LT5nbG9iYWwtPnYyLnB0YV9jcHVbdjJfY29udGV4dC0+aWRdID0gdjJfY29u
dGV4dC0+bXRsYl9kbWEgfAogCQkJCSAJIFZJVlNfTU1VdjJfQ09ORklHVVJBVElPTl9NT0RFX01P
REU0X0s7CiAKIAkvKiB0cmlnZ2VyIGEgUFRBIGxvYWQgdGhyb3VnaCB0aGUgRkUgKi8KQEAgLTIx
OCw2ICsyMTgsMTkgQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmVfc2VjKHN0
cnVjdCBldG5hdml2X2dwdSAqZ3B1LAogCWdwdV93cml0ZShncHUsIFZJVlNfTU1VdjJfU0VDX0NP
TlRST0wsIFZJVlNfTU1VdjJfU0VDX0NPTlRST0xfRU5BQkxFKTsKIH0KIAordTMyIGV0bmF2aXZf
aW9tbXV2Ml9nZXRfbXRsYl9hZGRyKHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKmNvbnRl
eHQpCit7CisJc3RydWN0IGV0bmF2aXZfaW9tbXV2Ml9jb250ZXh0ICp2Ml9jb250ZXh0ID0gdG9f
djJfY29udGV4dChjb250ZXh0KTsKKworCXJldHVybiB2Ml9jb250ZXh0LT5tdGxiX2RtYTsKK30K
KwordW5zaWduZWQgc2hvcnQgZXRuYXZpdl9pb21tdXYyX2dldF9wdGFfaWQoc3RydWN0IGV0bmF2
aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCkKK3sKKwlzdHJ1Y3QgZXRuYXZpdl9pb21tdXYyX2Nv
bnRleHQgKnYyX2NvbnRleHQgPSB0b192Ml9jb250ZXh0KGNvbnRleHQpOworCisJcmV0dXJuIHYy
X2NvbnRleHQtPmlkOworfQogc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdXYyX3Jlc3RvcmUoc3Ry
dWN0IGV0bmF2aXZfZ3B1ICpncHUsCiAJCQkJICAgIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRl
eHQgKmNvbnRleHQpCiB7CkBAIC0yNzIsNiArMjg1LDggQEAgZXRuYXZpdl9pb21tdXYyX2NvbnRl
eHRfYWxsb2Moc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwpCiAJbWVtc2V0MzIo
djJfY29udGV4dC0+bXRsYl9jcHUsIE1NVXYyX1BURV9FWENFUFRJT04sCiAJCSBNTVV2Ml9NQVhf
U1RMQl9FTlRSSUVTKTsKIAorCWdsb2JhbC0+djIucHRhX2NwdVt2Ml9jb250ZXh0LT5pZF0gPSB2
Ml9jb250ZXh0LT5tdGxiX2RtYTsKKwogCWNvbnRleHQgPSAmdjJfY29udGV4dC0+YmFzZTsKIAlj
b250ZXh0LT5nbG9iYWwgPSBnbG9iYWw7CiAJa3JlZl9pbml0KCZjb250ZXh0LT5yZWZjb3VudCk7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5jIGIvZHJp
dmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuYwppbmRleCBjZjQ5ZjBlMmUxY2IuLjk5
YzIwMDk0Mjk1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9t
bXUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X21tdS5jCkBAIC0yOTAs
NiArMjkwLDggQEAgc3RhdGljIHZvaWQgZXRuYXZpdl9pb21tdV9jb250ZXh0X2ZyZWUoc3RydWN0
IGtyZWYgKmtyZWYpCiAJc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCA9CiAJ
CWNvbnRhaW5lcl9vZihrcmVmLCBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0LCByZWZjb3Vu
dCk7CiAKKwlldG5hdml2X2NtZGJ1Zl9zdWJhbGxvY191bm1hcChjb250ZXh0LCAmY29udGV4dC0+
Y21kYnVmX21hcHBpbmcpOworCiAJY29udGV4dC0+Z2xvYmFsLT5vcHMtPmZyZWUoY29udGV4dCk7
CiB9CiB2b2lkIGV0bmF2aXZfaW9tbXVfY29udGV4dF9wdXQoc3RydWN0IGV0bmF2aXZfaW9tbXVf
Y29udGV4dCAqY29udGV4dCkKQEAgLTI5OCwxMiArMzAwLDI4IEBAIHZvaWQgZXRuYXZpdl9pb21t
dV9jb250ZXh0X3B1dChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KQogfQog
CiBzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICoKLWV0bmF2aXZfaW9tbXVfY29udGV4dF9p
bml0KHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsKQorZXRuYXZpdl9pb21tdV9j
b250ZXh0X2luaXQoc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwsCisJCQkgICBz
dHJ1Y3QgZXRuYXZpdl9jbWRidWZfc3ViYWxsb2MgKnN1YmFsbG9jKQogeworCXN0cnVjdCBldG5h
dml2X2lvbW11X2NvbnRleHQgKmN0eDsKKwlpbnQgcmV0OworCiAJaWYgKGdsb2JhbC0+dmVyc2lv
biA9PSBFVE5BVklWX0lPTU1VX1YxKQotCQlyZXR1cm4gZXRuYXZpdl9pb21tdXYxX2NvbnRleHRf
YWxsb2MoZ2xvYmFsKTsKKwkJY3R4ID0gZXRuYXZpdl9pb21tdXYxX2NvbnRleHRfYWxsb2MoZ2xv
YmFsKTsKIAllbHNlCi0JCXJldHVybiBldG5hdml2X2lvbW11djJfY29udGV4dF9hbGxvYyhnbG9i
YWwpOworCQljdHggPSBldG5hdml2X2lvbW11djJfY29udGV4dF9hbGxvYyhnbG9iYWwpOworCisJ
aWYgKCFjdHgpCisJCXJldHVybiBOVUxMOworCisJcmV0ID0gZXRuYXZpdl9jbWRidWZfc3ViYWxs
b2NfbWFwKHN1YmFsbG9jLCBjdHgsICZjdHgtPmNtZGJ1Zl9tYXBwaW5nLAorCQkJCQkgIGdsb2Jh
bC0+bWVtb3J5X2Jhc2UpOworCWlmIChyZXQpIHsKKwkJZXRuYXZpdl9pb21tdV9jb250ZXh0X3B1
dChjdHgpOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlyZXR1cm4gY3R4OwogfQogCiB2b2lkIGV0
bmF2aXZfaW9tbXVfcmVzdG9yZShzdHJ1Y3QgZXRuYXZpdl9ncHUgKmdwdSwKQEAgLTMxOSw2ICsz
MzcsMTIgQEAgaW50IGV0bmF2aXZfaW9tbXVfZ2V0X3N1YmFsbG9jX3ZhKHN0cnVjdCBldG5hdml2
X2lvbW11X2NvbnRleHQgKmNvbnRleHQsCiB7CiAJbXV0ZXhfbG9jaygmY29udGV4dC0+bG9jayk7
CiAKKwlpZiAobWFwcGluZy0+dXNlID4gMCkgeworCQltYXBwaW5nLT51c2UrKzsKKwkJbXV0ZXhf
dW5sb2NrKCZjb250ZXh0LT5sb2NrKTsKKwkJcmV0dXJuIDA7CisJfQorCiAJLyoKIAkgKiBGb3Ig
TU1VdjEgd2UgZG9uJ3QgYWRkIHRoZSBzdWJhbGxvYyByZWdpb24gdG8gdGhlIHBhZ2V0YWJsZXMs
IGFzCiAJICogdGhvc2UgR1BVcyBjYW4gb25seSB3b3JrIHdpdGggY21kYnVmcyBhY2Nlc3NlZCB0
aHJvdWdoIHRoZSBsaW5lYXIKQEAgLTM0MSw3ICszNjUsNiBAQCBpbnQgZXRuYXZpdl9pb21tdV9n
ZXRfc3ViYWxsb2NfdmEoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY29udGV4dCwKIAkJ
bWFwcGluZy0+aW92YSA9IG5vZGUtPnN0YXJ0OwogCQlyZXQgPSBldG5hdml2X2NvbnRleHRfbWFw
KGNvbnRleHQsIG5vZGUtPnN0YXJ0LCBwYWRkciwgc2l6ZSwKIAkJCQkJICBFVE5BVklWX1BST1Rf
UkVBRCk7Ci0KIAkJaWYgKHJldCA8IDApIHsKIAkJCWRybV9tbV9yZW1vdmVfbm9kZShub2RlKTsK
IAkJCW11dGV4X3VubG9jaygmY29udGV4dC0+bG9jayk7CkBAIC0zNjQsMTUgKzM4NywxNCBAQCB2
b2lkIGV0bmF2aXZfaW9tbXVfcHV0X3N1YmFsbG9jX3ZhKHN0cnVjdCBldG5hdml2X2lvbW11X2Nv
bnRleHQgKmNvbnRleHQsCiB7CiAJc3RydWN0IGRybV9tbV9ub2RlICpub2RlID0gJm1hcHBpbmct
PnZyYW1fbm9kZTsKIAotCWlmICghbWFwcGluZy0+dXNlKQotCQlyZXR1cm47Ci0KLQltYXBwaW5n
LT51c2UgPSAwOworCW11dGV4X2xvY2soJmNvbnRleHQtPmxvY2spOworCW1hcHBpbmctPnVzZS0t
OwogCi0JaWYgKGNvbnRleHQtPmdsb2JhbC0+dmVyc2lvbiA9PSBFVE5BVklWX0lPTU1VX1YxKQor
CWlmIChtYXBwaW5nLT51c2UgPiAwIHx8IGNvbnRleHQtPmdsb2JhbC0+dmVyc2lvbiA9PSBFVE5B
VklWX0lPTU1VX1YxKSB7CisJCW11dGV4X3VubG9jaygmY29udGV4dC0+bG9jayk7CiAJCXJldHVy
bjsKKwl9CiAKLQltdXRleF9sb2NrKCZjb250ZXh0LT5sb2NrKTsKIAlldG5hdml2X2NvbnRleHRf
dW5tYXAoY29udGV4dCwgbm9kZS0+c3RhcnQsIG5vZGUtPnNpemUpOwogCWRybV9tbV9yZW1vdmVf
bm9kZShub2RlKTsKIAltdXRleF91bmxvY2soJmNvbnRleHQtPmxvY2spOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuaCBiL2RyaXZlcnMvZ3B1L2RybS9l
dG5hdml2L2V0bmF2aXZfbW11LmgKaW5kZXggNGYxYmViY2QzNDJjLi4zYzIxOWQzMDZlYWIgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfbW11LmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9tbXUuaApAQCAtNDQsNiArNDQsOCBAQCBzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9nbG9iYWwgewogCXZvaWQgKmJhZF9wYWdlX2NwdTsKIAlkbWFfYWRk
cl90IGJhZF9wYWdlX2RtYTsKIAorCXUzMiBtZW1vcnlfYmFzZTsKKwogCS8qCiAJICogVGhpcyB1
bmlvbiBob2xkcyBtZW1iZXJzIG5lZWRlZCBieSBlaXRoZXIgTU1VdjEgb3IgTU1VdjIsIHdoaWNo
CiAJICogY2FuIG5vdCBleGlzdCBhdCB0aGUgc2FtZSB0aW1lLgpAQCAtNzEsNiArNzMsOSBAQCBz
dHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0IHsKIAlzdHJ1Y3QgbGlzdF9oZWFkIG1hcHBpbmdz
OwogCXN0cnVjdCBkcm1fbW0gbW07CiAJdW5zaWduZWQgaW50IGZsdXNoX3NlcTsKKworCS8qIE5v
dCBwYXJ0IG9mIHRoZSBjb250ZXh0LCBidXQgbmVlZHMgdG8gaGF2ZSB0aGUgc2FtZSBsaWZldGlt
ZSAqLworCXN0cnVjdCBldG5hdml2X3ZyYW1fbWFwcGluZyBjbWRidWZfbWFwcGluZzsKIH07CiAK
IGludCBldG5hdml2X2lvbW11X2dsb2JhbF9pbml0KHN0cnVjdCBldG5hdml2X2dwdSAqZ3B1KTsK
QEAgLTk1LDcgKzEwMCw4IEBAIHNpemVfdCBldG5hdml2X2lvbW11X2R1bXBfc2l6ZShzdHJ1Y3Qg
ZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjdHgpOwogdm9pZCBldG5hdml2X2lvbW11X2R1bXAoc3Ry
dWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAqY3R4LCB2b2lkICpidWYpOwogCiBzdHJ1Y3QgZXRu
YXZpdl9pb21tdV9jb250ZXh0ICoKLWV0bmF2aXZfaW9tbXVfY29udGV4dF9pbml0KHN0cnVjdCBl
dG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsKTsKK2V0bmF2aXZfaW9tbXVfY29udGV4dF9pbml0
KHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFsLAorCQkJICAgc3RydWN0IGV0bmF2
aXZfY21kYnVmX3N1YmFsbG9jICpzdWJhbGxvYyk7CiBzdGF0aWMgaW5saW5lIHZvaWQgZXRuYXZp
dl9pb21tdV9jb250ZXh0X2dldChzdHJ1Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjdHgpCiB7
CiAJa3JlZl9nZXQoJmN0eC0+cmVmY291bnQpOwpAQCAtMTA5LDQgKzExNSw3IEBAIGV0bmF2aXZf
aW9tbXV2MV9jb250ZXh0X2FsbG9jKHN0cnVjdCBldG5hdml2X2lvbW11X2dsb2JhbCAqZ2xvYmFs
KTsKIHN0cnVjdCBldG5hdml2X2lvbW11X2NvbnRleHQgKgogZXRuYXZpdl9pb21tdXYyX2NvbnRl
eHRfYWxsb2Moc3RydWN0IGV0bmF2aXZfaW9tbXVfZ2xvYmFsICpnbG9iYWwpOwogCit1MzIgZXRu
YXZpdl9pb21tdXYyX2dldF9tdGxiX2FkZHIoc3RydWN0IGV0bmF2aXZfaW9tbXVfY29udGV4dCAq
Y29udGV4dCk7Cit1bnNpZ25lZCBzaG9ydCBldG5hdml2X2lvbW11djJfZ2V0X3B0YV9pZChzdHJ1
Y3QgZXRuYXZpdl9pb21tdV9jb250ZXh0ICpjb250ZXh0KTsKKwogI2VuZGlmIC8qIF9fRVROQVZJ
Vl9NTVVfSF9fICovCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3Rp
bmZvL2RyaS1kZXZlbA==
