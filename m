Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 84032F2936
	for <lists+dri-devel@lfdr.de>; Thu,  7 Nov 2019 09:34:28 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5EA1D6EEEF;
	Thu,  7 Nov 2019 08:34:17 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 67AE86EEF3
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 08:34:10 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id AC01EB1FA;
 Thu,  7 Nov 2019 08:34:07 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@redhat.com, daniel@ffwll.ch, kraxel@redhat.com, sam@ravnborg.org,
 yc_chen@aspeedtech.com
Subject: [PATCH v2 5/9] drm/ast: Split ast_set_vbios_mode_info()
Date: Thu,  7 Nov 2019 09:34:00 +0100
Message-Id: <20191107083404.6852-6-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191107083404.6852-1-tzimmermann@suse.de>
References: <20191107083404.6852-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>, dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGltcGxlbWVudGF0aW9uIG9mIGFzdF9zZXRfdmJpb3NfbW9kZSgpIGNvbnZlcnRzIGEgRFJN
IGRpc3BsYXkgbW9kZQphbmQgZnJhbWVidWZmZXIgaW50byBhbiBhZGp1c3RlZCBtb2RlIGFuZCBz
dG9yZXMgaW5mb3JtYXRpb24gZm9yIHRoZQp2aWRlbyBCSU9TIHRvIHNldmVyYWwgc2NyYXRjaCBy
ZWdzaXRlcnMuCgpIZXJlIHdlIHNwbGl0IHRoZSBmdW5jdGlvbiBpbnRvIGluZGl2aWR1YWwgZnVu
Y3Rpb25zIHRoYXQgZG8gdGhlCmNvbnZlcnNpb24sIHNldCB0aGUgVkJJT1MgbW9kZSBpbmZvcm1h
dGlvbiBhbmQgZm9ybWF0IGluZm9ybWF0aW9uLgpUaGlzIG1ha2VzIGl0IGNvbXBhdGlibGUgd2l0
aCBzdXBwb3J0IGZvciBwcmltYXJ5IHBsYW5lcyBhbmQgYXRvbWljCm1vZGVzZXR0aW5nLgoKU2ln
bmVkLW9mZi1ieTogVGhvbWFzIFppbW1lcm1hbm4gPHR6aW1tZXJtYW5uQHN1c2UuZGU+CkFja2Vk
LWJ5OiBHZXJkIEhvZmZtYW5uIDxrcmF4ZWxAcmVkaGF0LmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9k
cm0vYXN0L2FzdF9tb2RlLmMgfCAxMTEgKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0t
CiAxIGZpbGUgY2hhbmdlZCwgNzIgaW5zZXJ0aW9ucygrKSwgMzkgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfbW9kZS5jIGIvZHJpdmVycy9ncHUvZHJt
L2FzdC9hc3RfbW9kZS5jCmluZGV4IDVmZWI2ODcxOTFlMC4uYzRjOWZjYTBmMDBjIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF9tb2RlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FzdC9hc3RfbW9kZS5jCkBAIC04MiwxMyArODIsMTIgQEAgc3RhdGljIHZvaWQgYXN0X2NydGNf
bG9hZF9sdXQoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCQlhc3RfbG9hZF9wYWxldHRlX2luZGV4
KGFzdCwgaSwgKnIrKyA+PiA4LCAqZysrID4+IDgsICpiKysgPj4gOCk7CiB9CiAKLXN0YXRpYyBi
b29sIGFzdF9nZXRfdmJpb3NfbW9kZV9pbmZvKHN0cnVjdCBkcm1fY3J0YyAqY3J0Yywgc3RydWN0
IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCitzdGF0aWMgYm9vbCBhc3RfZ2V0X3ZiaW9zX21vZGVf
aW5mbyhjb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKKwkJCQkgICAgY29uc3Qgc3Ry
dWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCiAJCQkJICAgIHN0cnVjdCBkcm1fZGlzcGxheV9t
b2RlICphZGp1c3RlZF9tb2RlLAogCQkJCSAgICBzdHJ1Y3QgYXN0X3ZiaW9zX21vZGVfaW5mbyAq
dmJpb3NfbW9kZSkKIHsKLQlzdHJ1Y3QgYXN0X3ByaXZhdGUgKmFzdCA9IGNydGMtPmRldi0+ZGV2
X3ByaXZhdGU7Ci0JY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBjcnRjLT5wcmlt
YXJ5LT5mYjsKLQl1MzIgcmVmcmVzaF9yYXRlX2luZGV4ID0gMCwgbW9kZV9pZCwgY29sb3JfaW5k
ZXgsIHJlZnJlc2hfcmF0ZTsKKwl1MzIgcmVmcmVzaF9yYXRlX2luZGV4ID0gMCwgcmVmcmVzaF9y
YXRlOwogCWNvbnN0IHN0cnVjdCBhc3RfdmJpb3NfZW5odGFibGUgKmJlc3QgPSBOVUxMOwogCXUz
MiBoYm9yZGVyLCB2Ym9yZGVyOwogCWJvb2wgY2hlY2tfc3luYzsKQEAgLTk2LDIyICs5NSwxOSBA
QCBzdGF0aWMgYm9vbCBhc3RfZ2V0X3ZiaW9zX21vZGVfaW5mbyhzdHJ1Y3QgZHJtX2NydGMgKmNy
dGMsIHN0cnVjdCBkcm1fZGlzcGxheV9tbwogCXN3aXRjaCAoZmItPmZvcm1hdC0+Y3BwWzBdICog
OCkgewogCWNhc2UgODoKIAkJdmJpb3NfbW9kZS0+c3RkX3RhYmxlID0gJnZiaW9zX3N0ZHRhYmxl
W1ZHQU1vZGVJbmRleF07Ci0JCWNvbG9yX2luZGV4ID0gVkdBTW9kZUluZGV4IC0gMTsKIAkJYnJl
YWs7CiAJY2FzZSAxNjoKIAkJdmJpb3NfbW9kZS0+c3RkX3RhYmxlID0gJnZiaW9zX3N0ZHRhYmxl
W0hpQ01vZGVJbmRleF07Ci0JCWNvbG9yX2luZGV4ID0gSGlDTW9kZUluZGV4OwogCQlicmVhazsK
IAljYXNlIDI0OgogCWNhc2UgMzI6CiAJCXZiaW9zX21vZGUtPnN0ZF90YWJsZSA9ICZ2Ymlvc19z
dGR0YWJsZVtUcnVlQ01vZGVJbmRleF07Ci0JCWNvbG9yX2luZGV4ID0gVHJ1ZUNNb2RlSW5kZXg7
CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCXJldHVybiBmYWxzZTsKIAl9CiAKLQlzd2l0Y2ggKGNy
dGMtPm1vZGUuY3J0Y19oZGlzcGxheSkgeworCXN3aXRjaCAobW9kZS0+Y3J0Y19oZGlzcGxheSkg
ewogCWNhc2UgNjQwOgogCQl2Ymlvc19tb2RlLT5lbmhfdGFibGUgPSAmcmVzXzY0MHg0ODBbcmVm
cmVzaF9yYXRlX2luZGV4XTsKIAkJYnJlYWs7CkBAIC0xMjIsNyArMTE4LDcgQEAgc3RhdGljIGJv
b2wgYXN0X2dldF92Ymlvc19tb2RlX2luZm8oc3RydWN0IGRybV9jcnRjICpjcnRjLCBzdHJ1Y3Qg
ZHJtX2Rpc3BsYXlfbW8KIAkJdmJpb3NfbW9kZS0+ZW5oX3RhYmxlID0gJnJlc18xMDI0eDc2OFty
ZWZyZXNoX3JhdGVfaW5kZXhdOwogCQlicmVhazsKIAljYXNlIDEyODA6Ci0JCWlmIChjcnRjLT5t
b2RlLmNydGNfdmRpc3BsYXkgPT0gODAwKQorCQlpZiAobW9kZS0+Y3J0Y192ZGlzcGxheSA9PSA4
MDApCiAJCQl2Ymlvc19tb2RlLT5lbmhfdGFibGUgPSAmcmVzXzEyODB4ODAwW3JlZnJlc2hfcmF0
ZV9pbmRleF07CiAJCWVsc2UKIAkJCXZiaW9zX21vZGUtPmVuaF90YWJsZSA9ICZyZXNfMTI4MHgx
MDI0W3JlZnJlc2hfcmF0ZV9pbmRleF07CkBAIC0xMzQsNyArMTMwLDcgQEAgc3RhdGljIGJvb2wg
YXN0X2dldF92Ymlvc19tb2RlX2luZm8oc3RydWN0IGRybV9jcnRjICpjcnRjLCBzdHJ1Y3QgZHJt
X2Rpc3BsYXlfbW8KIAkJdmJpb3NfbW9kZS0+ZW5oX3RhYmxlID0gJnJlc18xNDQweDkwMFtyZWZy
ZXNoX3JhdGVfaW5kZXhdOwogCQlicmVhazsKIAljYXNlIDE2MDA6Ci0JCWlmIChjcnRjLT5tb2Rl
LmNydGNfdmRpc3BsYXkgPT0gOTAwKQorCQlpZiAobW9kZS0+Y3J0Y192ZGlzcGxheSA9PSA5MDAp
CiAJCQl2Ymlvc19tb2RlLT5lbmhfdGFibGUgPSAmcmVzXzE2MDB4OTAwW3JlZnJlc2hfcmF0ZV9p
bmRleF07CiAJCWVsc2UKIAkJCXZiaW9zX21vZGUtPmVuaF90YWJsZSA9ICZyZXNfMTYwMHgxMjAw
W3JlZnJlc2hfcmF0ZV9pbmRleF07CkBAIC0xNDMsNyArMTM5LDcgQEAgc3RhdGljIGJvb2wgYXN0
X2dldF92Ymlvc19tb2RlX2luZm8oc3RydWN0IGRybV9jcnRjICpjcnRjLCBzdHJ1Y3QgZHJtX2Rp
c3BsYXlfbW8KIAkJdmJpb3NfbW9kZS0+ZW5oX3RhYmxlID0gJnJlc18xNjgweDEwNTBbcmVmcmVz
aF9yYXRlX2luZGV4XTsKIAkJYnJlYWs7CiAJY2FzZSAxOTIwOgotCQlpZiAoY3J0Yy0+bW9kZS5j
cnRjX3ZkaXNwbGF5ID09IDEwODApCisJCWlmIChtb2RlLT5jcnRjX3ZkaXNwbGF5ID09IDEwODAp
CiAJCQl2Ymlvc19tb2RlLT5lbmhfdGFibGUgPSAmcmVzXzE5MjB4MTA4MFtyZWZyZXNoX3JhdGVf
aW5kZXhdOwogCQllbHNlCiAJCQl2Ymlvc19tb2RlLT5lbmhfdGFibGUgPSAmcmVzXzE5MjB4MTIw
MFtyZWZyZXNoX3JhdGVfaW5kZXhdOwpAQCAtMTU0LDcgKzE1MCw4IEBAIHN0YXRpYyBib29sIGFz
dF9nZXRfdmJpb3NfbW9kZV9pbmZvKHN0cnVjdCBkcm1fY3J0YyAqY3J0Yywgc3RydWN0IGRybV9k
aXNwbGF5X21vCiAKIAlyZWZyZXNoX3JhdGUgPSBkcm1fbW9kZV92cmVmcmVzaChtb2RlKTsKIAlj
aGVja19zeW5jID0gdmJpb3NfbW9kZS0+ZW5oX3RhYmxlLT5mbGFncyAmIFdpZGVTY3JlZW5Nb2Rl
OwotCWRvIHsKKworCXdoaWxlICgxKSB7CiAJCWNvbnN0IHN0cnVjdCBhc3RfdmJpb3NfZW5odGFi
bGUgKmxvb3AgPSB2Ymlvc19tb2RlLT5lbmhfdGFibGU7CiAKIAkJd2hpbGUgKGxvb3AtPnJlZnJl
c2hfcmF0ZSAhPSAweGZmKSB7CkBAIC0xNzgsNyArMTc1LDggQEAgc3RhdGljIGJvb2wgYXN0X2dl
dF92Ymlvc19tb2RlX2luZm8oc3RydWN0IGRybV9jcnRjICpjcnRjLCBzdHJ1Y3QgZHJtX2Rpc3Bs
YXlfbW8KIAkJaWYgKGJlc3QgfHwgIWNoZWNrX3N5bmMpCiAJCQlicmVhazsKIAkJY2hlY2tfc3lu
YyA9IDA7Ci0JfSB3aGlsZSAoMSk7CisJfQorCiAJaWYgKGJlc3QpCiAJCXZiaW9zX21vZGUtPmVu
aF90YWJsZSA9IGJlc3Q7CiAKQEAgLTIwMywzNCArMjAxLDY1IEBAIHN0YXRpYyBib29sIGFzdF9n
ZXRfdmJpb3NfbW9kZV9pbmZvKHN0cnVjdCBkcm1fY3J0YyAqY3J0Yywgc3RydWN0IGRybV9kaXNw
bGF5X21vCiAJCQkJCSB2Ymlvc19tb2RlLT5lbmhfdGFibGUtPnZmcCArCiAJCQkJCSB2Ymlvc19t
b2RlLT5lbmhfdGFibGUtPnZzeW5jKTsKIAotCXJlZnJlc2hfcmF0ZV9pbmRleCA9IHZiaW9zX21v
ZGUtPmVuaF90YWJsZS0+cmVmcmVzaF9yYXRlX2luZGV4OwotCW1vZGVfaWQgPSB2Ymlvc19tb2Rl
LT5lbmhfdGFibGUtPm1vZGVfaWQ7CisJcmV0dXJuIHRydWU7Cit9CiAKLQlpZiAoYXN0LT5jaGlw
ID09IEFTVDExODApIHsKLQkJLyogVE9ETyAxMTgwICovCi0JfSBlbHNlIHsKLQkJYXN0X3NldF9p
bmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDhjLCAodTgpKChjb2xvcl9pbmRleCAm
IDB4ZikgPDwgNCkpOwotCQlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRDX1BPUlQs
IDB4OGQsIHJlZnJlc2hfcmF0ZV9pbmRleCAmIDB4ZmYpOwotCQlhc3Rfc2V0X2luZGV4X3JlZyhh
c3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4OGUsIG1vZGVfaWQgJiAweGZmKTsKLQotCQlhc3Rfc2V0
X2luZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4OTEsIDB4MDApOwotCQlpZiAodmJp
b3NfbW9kZS0+ZW5oX3RhYmxlLT5mbGFncyAmIE5ld01vZGVJbmZvKSB7Ci0JCQlhc3Rfc2V0X2lu
ZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4OTEsIDB4YTgpOwotCQkJYXN0X3NldF9p
bmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDkyLAotCQkJCQkgIGZiLT5mb3JtYXQt
PmNwcFswXSAqIDgpOwotCQkJYXN0X3NldF9pbmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JU
LCAweDkzLCBhZGp1c3RlZF9tb2RlLT5jbG9jayAvIDEwMDApOwotCQkJYXN0X3NldF9pbmRleF9y
ZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDk0LCBhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNw
bGF5KTsKLQkJCWFzdF9zZXRfaW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg5NSwg
YWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSA+PiA4KTsKLQotCQkJYXN0X3NldF9pbmRleF9y
ZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDk2LCBhZGp1c3RlZF9tb2RlLT5jcnRjX3ZkaXNw
bGF5KTsKLQkJCWFzdF9zZXRfaW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg5Nywg
YWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheSA+PiA4KTsKLQkJfQorc3RhdGljIHZvaWQgYXN0
X3NldF92Ymlvc19jb2xvcl9yZWcoc3RydWN0IGRybV9jcnRjICpjcnRjLAorCQkJCSAgICBjb25z
dCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKKwkJCQkgICAgY29uc3Qgc3RydWN0IGFzdF92
Ymlvc19tb2RlX2luZm8gKnZiaW9zX21vZGUpCit7CisJc3RydWN0IGFzdF9wcml2YXRlICphc3Qg
PSBjcnRjLT5kZXYtPmRldl9wcml2YXRlOworCXUzMiBjb2xvcl9pbmRleDsKKworCXN3aXRjaCAo
ZmItPmZvcm1hdC0+Y3BwWzBdKSB7CisJY2FzZSAxOgorCQljb2xvcl9pbmRleCA9IFZHQU1vZGVJ
bmRleCAtIDE7CisJCWJyZWFrOworCWNhc2UgMjoKKwkJY29sb3JfaW5kZXggPSBIaUNNb2RlSW5k
ZXg7CisJCWJyZWFrOworCWNhc2UgMzoKKwljYXNlIDQ6CisJCWNvbG9yX2luZGV4ID0gVHJ1ZUNN
b2RlSW5kZXg7CisJZGVmYXVsdDoKKwkJcmV0dXJuOwogCX0KIAotCXJldHVybiB0cnVlOworCWFz
dF9zZXRfaW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg4YywgKHU4KSgoY29sb3Jf
aW5kZXggJiAweDBmKSA8PCA0KSk7CisKKwlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19D
UlRDX1BPUlQsIDB4OTEsIDB4MDApOworCisJaWYgKHZiaW9zX21vZGUtPmVuaF90YWJsZS0+Zmxh
Z3MgJiBOZXdNb2RlSW5mbykgeworCQlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRD
X1BPUlQsIDB4OTEsIDB4YTgpOworCQlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRD
X1BPUlQsIDB4OTIsIGZiLT5mb3JtYXQtPmNwcFswXSAqIDgpOworCX0KK30KKworc3RhdGljIHZv
aWQgYXN0X3NldF92Ymlvc19tb2RlX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCisJCQkJICAg
Y29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUsCisJCQkJICAgY29u
c3Qgc3RydWN0IGFzdF92Ymlvc19tb2RlX2luZm8gKnZiaW9zX21vZGUpCit7CisJc3RydWN0IGFz
dF9wcml2YXRlICphc3QgPSBjcnRjLT5kZXYtPmRldl9wcml2YXRlOworCXUzMiByZWZyZXNoX3Jh
dGVfaW5kZXgsIG1vZGVfaWQ7CisKKwlyZWZyZXNoX3JhdGVfaW5kZXggPSB2Ymlvc19tb2RlLT5l
bmhfdGFibGUtPnJlZnJlc2hfcmF0ZV9pbmRleDsKKwltb2RlX2lkID0gdmJpb3NfbW9kZS0+ZW5o
X3RhYmxlLT5tb2RlX2lkOworCisJYXN0X3NldF9pbmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19Q
T1JULCAweDhkLCByZWZyZXNoX3JhdGVfaW5kZXggJiAweGZmKTsKKwlhc3Rfc2V0X2luZGV4X3Jl
Zyhhc3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4OGUsIG1vZGVfaWQgJiAweGZmKTsKIAorCWFzdF9z
ZXRfaW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg5MSwgMHgwMCk7CiAKKwlpZiAo
dmJpb3NfbW9kZS0+ZW5oX3RhYmxlLT5mbGFncyAmIE5ld01vZGVJbmZvKSB7CisJCWFzdF9zZXRf
aW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg5MSwgMHhhOCk7CisJCWFzdF9zZXRf
aW5kZXhfcmVnKGFzdCwgQVNUX0lPX0NSVENfUE9SVCwgMHg5MywgYWRqdXN0ZWRfbW9kZS0+Y2xv
Y2sgLyAxMDAwKTsKKwkJYXN0X3NldF9pbmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAw
eDk0LCBhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5KTsKKwkJYXN0X3NldF9pbmRleF9yZWco
YXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDk1LCBhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5
ID4+IDgpOworCQlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4OTYs
IGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkpOworCQlhc3Rfc2V0X2luZGV4X3JlZyhhc3Qs
IEFTVF9JT19DUlRDX1BPUlQsIDB4OTcsIGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkgPj4g
OCk7CisJfQogfQorCiBzdGF0aWMgdm9pZCBhc3Rfc2V0X3N0ZF9yZWcoc3RydWN0IGRybV9jcnRj
ICpjcnRjLCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKIAkJCSAgICBzdHJ1Y3QgYXN0
X3ZiaW9zX21vZGVfaW5mbyAqdmJpb3NfbW9kZSkKIHsKQEAgLTU4MSwyMCArNjEwLDI0IEBAIHN0
YXRpYyBpbnQgYXN0X2NydGNfbW9kZV9zZXQoc3RydWN0IGRybV9jcnRjICpjcnRjLAogewogCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRjLT5kZXY7CiAJc3RydWN0IGFzdF9wcml2YXRlICph
c3QgPSBjcnRjLT5kZXYtPmRldl9wcml2YXRlOworCWNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZm
ZXIgKmZiID0gY3J0Yy0+cHJpbWFyeS0+ZmI7CiAJc3RydWN0IGFzdF92Ymlvc19tb2RlX2luZm8g
dmJpb3NfbW9kZTsKLQlib29sIHJldDsKKwlib29sIHN1Y2M7CisKIAlpZiAoYXN0LT5jaGlwID09
IEFTVDExODApIHsKIAkJRFJNX0VSUk9SKCJBU1QgMTE4MCBtb2Rlc2V0dGluZyBub3Qgc3VwcG9y
dGVkXG4iKTsKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCi0JcmV0ID0gYXN0X2dldF92Ymlvc19t
b2RlX2luZm8oY3J0YywgbW9kZSwgYWRqdXN0ZWRfbW9kZSwgJnZiaW9zX21vZGUpOwotCWlmIChy
ZXQgPT0gZmFsc2UpCisJc3VjYyA9IGFzdF9nZXRfdmJpb3NfbW9kZV9pbmZvKGZiLCBtb2RlLCBh
ZGp1c3RlZF9tb2RlLCAmdmJpb3NfbW9kZSk7CisJaWYgKCFzdWNjKQogCQlyZXR1cm4gLUVJTlZB
TDsKKwogCWFzdF9vcGVuX2tleShhc3QpOwogCisJYXN0X3NldF92Ymlvc19jb2xvcl9yZWcoY3J0
YywgZmIsICZ2Ymlvc19tb2RlKTsKKwlhc3Rfc2V0X3ZiaW9zX21vZGVfcmVnKGNydGMsIGFkanVz
dGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKIAlhc3Rfc2V0X2luZGV4X3JlZyhhc3QsIEFTVF9JT19D
UlRDX1BPUlQsIDB4YTEsIDB4MDYpOwotCiAJYXN0X3NldF9zdGRfcmVnKGNydGMsIGFkanVzdGVk
X21vZGUsICZ2Ymlvc19tb2RlKTsKIAlhc3Rfc2V0X2NydGNfcmVnKGNydGMsIGFkanVzdGVkX21v
ZGUsICZ2Ymlvc19tb2RlKTsKIAlhc3Rfc2V0X29mZnNldF9yZWcoY3J0Yyk7Ci0tIAoyLjIzLjAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZl
bCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
