Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BD3DFAFB1F
	for <lists+dri-devel@lfdr.de>; Wed, 11 Sep 2019 13:09:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E6F906EA8A;
	Wed, 11 Sep 2019 11:09:21 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8F1D76EA8A
 for <dri-devel@lists.freedesktop.org>; Wed, 11 Sep 2019 11:09:20 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id BB573AE72;
 Wed, 11 Sep 2019 11:09:18 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: daniel@ffwll.ch, kraxel@redhat.com, airlied@linux.ie, corbet@lwn.net,
 z.liuxinliang@hisilicon.com, zourongrong@gmail.com,
 kong.kongxinwei@hisilicon.com, puck.chen@hisilicon.com,
 hdegoede@redhat.com, sam@ravnborg.org, yc_chen@aspeedtech.com
Subject: [PATCH v2 1/4] drm/vram: Move VRAM memory manager to GEM VRAM
 implementation
Date: Wed, 11 Sep 2019 13:09:07 +0200
Message-Id: <20190911110910.30698-2-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190911110910.30698-1-tzimmermann@suse.de>
References: <20190911110910.30698-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: virtualization@lists.linux-foundation.org,
 Thomas Zimmermann <tzimmermann@suse.de>, dri-devel@lists.freedesktop.org,
 linux-doc@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIHNlcGFyYXRpb24gYmV0d2VlbiBHRU0gVlJBTSBvYmplY3RzIGFuZCB0aGUgbWVtb3J5IG1h
bmFnZXIgaXMKYXJ0aWZpY2lhbCwgYXMgdGhleSBhcmUgb25seSB1c2VkIHdpdGggZWFjaCBvdGhl
ci4gQ29weWluZyBib3RoCmltcGxlbWVudGF0aW9ucyBpbnRvIHRoZSBzYW1lIGZpbGUgaXMgYSBm
aXJzdCBzdGVwIHRvIHNpbXBsaWZ5aW5nCnRoZSBjb2RlLgoKVGhpcyBwYXRjaCBvbmx5IG1vdmVz
IGNvZGUgd2l0aG91dCBmdW5jdGlvbmFsIGNoYW5nZXMuCgp2MjoKCSogdXBkYXRlIGZvciBkZWJ1
Z2ZzIHN1cHBvcnQKCSogdHlwb3MgaW4gY29tbWl0IG1lc3NhZ2UKClNpZ25lZC1vZmYtYnk6IFRo
b21hcyBaaW1tZXJtYW5uIDx0emltbWVybWFubkBzdXNlLmRlPgpBY2tlZC1ieTogR2VyZCBIb2Zm
bWFubiA8a3JheGVsQHJlZGhhdC5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi9ncHUvZHJtLW1tLnJz
dCAgICAgICAgICAgICAgICAgIHwgIDEyIC0KIGRyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZSAgICAg
ICAgICAgICAgICAgICAgICB8ICAgMyArLQogZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfZHJ2LmMg
ICAgICAgICAgICAgICAgIHwgICAxIC0KIGRyaXZlcnMvZ3B1L2RybS9hc3QvYXN0X21haW4uYyAg
ICAgICAgICAgICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF90dG0uYyAgICAg
ICAgICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2JvY2hzL2JvY2hzLmggICAgICAg
ICAgICAgICAgIHwgICAxIC0KIGRyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX3ZyYW1faGVscGVyLmMg
ICAgICAgICB8IDM0OCArKysrKysrKysrKysrKysrLQogZHJpdmVycy9ncHUvZHJtL2RybV92cmFt
X21tX2hlbHBlci5jICAgICAgICAgIHwgMzUzIC0tLS0tLS0tLS0tLS0tLS0tLQogLi4uL2dwdS9k
cm0vaGlzaWxpY29uL2hpYm1jL2hpYm1jX2RybV9kcnYuYyAgIHwgICAxIC0KIGRyaXZlcnMvZ3B1
L2RybS9oaXNpbGljb24vaGlibWMvaGlibWNfdHRtLmMgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9k
cm0vbWdhZzIwMC9tZ2FnMjAwX2Rydi5oICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJt
L3Zib3h2aWRlby92Ym94X2Rydi5oICAgICAgICAgIHwgICAyIC0KIGluY2x1ZGUvZHJtL2RybV9n
ZW1fdnJhbV9oZWxwZXIuaCAgICAgICAgICAgICB8ICA4NiArKysrKwogaW5jbHVkZS9kcm0vZHJt
X3ZyYW1fbW1faGVscGVyLmggICAgICAgICAgICAgIHwgIDc3IC0tLS0KIDE0IGZpbGVzIGNoYW5n
ZWQsIDQzNCBpbnNlcnRpb25zKCspLCA0NTQgZGVsZXRpb25zKC0pCiBkZWxldGUgbW9kZSAxMDA2
NDQgZHJpdmVycy9ncHUvZHJtL2RybV92cmFtX21tX2hlbHBlci5jCgpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi9ncHUvZHJtLW1tLnJzdCBiL0RvY3VtZW50YXRpb24vZ3B1L2RybS1tbS5yc3QK
aW5kZXggYTcwYTFkOWYzMGVjLi45OWQ1NjAxNWUwNzcgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRp
b24vZ3B1L2RybS1tbS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9ncHUvZHJtLW1tLnJzdApAQCAt
NDAwLDE4ICs0MDAsNiBAQCBHRU0gVlJBTSBIZWxwZXIgRnVuY3Rpb25zIFJlZmVyZW5jZQogLi4g
a2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX3ZyYW1faGVscGVyLmMKICAgIDpl
eHBvcnQ6CiAKLVZSQU0gTU0gSGVscGVyIEZ1bmN0aW9ucyBSZWZlcmVuY2UKLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLQotLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1L2Ry
bS9kcm1fdnJhbV9tbV9oZWxwZXIuYwotICAgOmRvYzogb3ZlcnZpZXcKLQotLi4ga2VybmVsLWRv
Yzo6IGluY2x1ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oCi0gICA6aW50ZXJuYWw6Ci0KLS4u
IGtlcm5lbC1kb2M6OiBkcml2ZXJzL2dwdS9kcm0vZHJtX3ZyYW1fbW1faGVscGVyLmMKLSAgIDpl
eHBvcnQ6Ci0KIEdFTSBUVE0gSGVscGVyIEZ1bmN0aW9ucyBSZWZlcmVuY2UKIC0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9N
YWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZQppbmRleCBiOTA2YmFiMjk3NDAuLjlm
MWM3YzQ4NmY4OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL01ha2VmaWxlCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9NYWtlZmlsZQpAQCAtMzMsOCArMzMsNyBAQCBkcm0tJChDT05GSUdfREVC
VUdfRlMpICs9IGRybV9kZWJ1Z2ZzLm8gZHJtX2RlYnVnZnNfY3JjLm8KIGRybS0kKENPTkZJR19E
Uk1fTE9BRF9FRElEX0ZJUk1XQVJFKSArPSBkcm1fZWRpZF9sb2FkLm8KIAogZHJtX3ZyYW1faGVs
cGVyLXkgOj0gZHJtX2dlbV92cmFtX2hlbHBlci5vIFwKLQkJICAgICBkcm1fdnJhbV9oZWxwZXJf
Y29tbW9uLm8gXAotCQkgICAgIGRybV92cmFtX21tX2hlbHBlci5vCisJCSAgICAgZHJtX3ZyYW1f
aGVscGVyX2NvbW1vbi5vCiBvYmotJChDT05GSUdfRFJNX1ZSQU1fSEVMUEVSKSArPSBkcm1fdnJh
bV9oZWxwZXIubwogCiBkcm1fdHRtX2hlbHBlci15IDo9IGRybV9nZW1fdHRtX2hlbHBlci5vCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF9kcnYuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hc3QvYXN0X2Rydi5jCmluZGV4IDZlZDZmZjQ5ZWZjMC4uZTBlODc3MDQ2MmJjIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YXN0L2FzdF9kcnYuYwpAQCAtMzUsNyArMzUsNiBAQAogI2luY2x1ZGUgPGRybS9kcm1fZ2VtX3Zy
YW1faGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9wY2kuaD4KICNpbmNsdWRlIDxkcm0vZHJt
X3Byb2JlX2hlbHBlci5oPgotI2luY2x1ZGUgPGRybS9kcm1fdnJhbV9tbV9oZWxwZXIuaD4KIAog
I2luY2x1ZGUgImFzdF9kcnYuaCIKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FzdC9h
c3RfbWFpbi5jIGIvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfbWFpbi5jCmluZGV4IDUwZGU4ZTQ3
NjU5Yy4uMjE3MTVkNmE5YjU2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF9t
YWluLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfbWFpbi5jCkBAIC0zMyw3ICszMyw2
IEBACiAjaW5jbHVkZSA8ZHJtL2RybV9nZW0uaD4KICNpbmNsdWRlIDxkcm0vZHJtX2dlbV9mcmFt
ZWJ1ZmZlcl9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2dlbV92cmFtX2hlbHBlci5oPgot
I2luY2x1ZGUgPGRybS9kcm1fdnJhbV9tbV9oZWxwZXIuaD4KIAogI2luY2x1ZGUgImFzdF9kcnYu
aCIKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfdHRtLmMgYi9kcml2ZXJz
L2dwdS9kcm0vYXN0L2FzdF90dG0uYwppbmRleCBjNTJkOTIyOTQxNzEuLjA4YmEwYTkxNzU5MyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfdHRtLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2FzdC9hc3RfdHRtLmMKQEAgLTMwLDcgKzMwLDYgQEAKIAogI2luY2x1ZGUgPGRybS9k
cm1fcHJpbnQuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2dlbV92cmFtX2hlbHBlci5oPgotI2luY2x1
ZGUgPGRybS9kcm1fdnJhbV9tbV9oZWxwZXIuaD4KIAogI2luY2x1ZGUgImFzdF9kcnYuaCIKIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2JvY2hzL2JvY2hzLmggYi9kcml2ZXJzL2dwdS9k
cm0vYm9jaHMvYm9jaHMuaAppbmRleCA2ODQ4M2EyZmMxMmMuLjkxNzc2NzE3M2VlNiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2JvY2hzL2JvY2hzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2JvY2hzL2JvY2hzLmgKQEAgLTEwLDcgKzEwLDYgQEAKICNpbmNsdWRlIDxkcm0vZHJtX2dlbS5o
PgogI2luY2x1ZGUgPGRybS9kcm1fZ2VtX3ZyYW1faGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2Ry
bV9zaW1wbGVfa21zX2hlbHBlci5oPgotI2luY2x1ZGUgPGRybS9kcm1fdnJhbV9tbV9oZWxwZXIu
aD4KIAogLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
ZHJtX2dlbV92cmFtX2hlbHBlci5jIGIvZHJpdmVycy9ncHUvZHJtL2RybV9nZW1fdnJhbV9oZWxw
ZXIuYwppbmRleCBiZWNmMTAxM2UwMmIuLjM1M2Y5ODA3NTU3OSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJt
X2dlbV92cmFtX2hlbHBlci5jCkBAIC0xLDggKzEsMTAgQEAKIC8vIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wLW9yLWxhdGVyCiAKKyNpbmNsdWRlIDxkcm0vZHJtX2RlYnVnZnMuaD4K
KyNpbmNsdWRlIDxkcm0vZHJtX2RldmljZS5oPgorI2luY2x1ZGUgPGRybS9kcm1fZmlsZS5oPgog
I2luY2x1ZGUgPGRybS9kcm1fZ2VtX3R0bV9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2dl
bV92cmFtX2hlbHBlci5oPgotI2luY2x1ZGUgPGRybS9kcm1fZGV2aWNlLmg+CiAjaW5jbHVkZSA8
ZHJtL2RybV9tb2RlLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9wcmltZS5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fdnJhbV9tbV9oZWxwZXIuaD4KQEAgLTE1LDYgKzE3LDExIEBAIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgZHJtX2dlbV9vYmplY3RfZnVuY3MgZHJtX2dlbV92cmFtX29iamVjdF9mdW5jczsKICAq
CiAgKiBUaGlzIGxpYnJhcnkgcHJvdmlkZXMgYSBHRU0gYnVmZmVyIG9iamVjdCB0aGF0IGlzIGJh
Y2tlZCBieSB2aWRlbyBSQU0KICAqIChWUkFNKS4gSXQgY2FuIGJlIHVzZWQgZm9yIGZyYW1lYnVm
ZmVyIGRldmljZXMgd2l0aCBkZWRpY2F0ZWQgbWVtb3J5LgorICoKKyAqIFRoZSBkYXRhIHN0cnVj
dHVyZSAmc3RydWN0IGRybV92cmFtX21tIGFuZCBpdHMgaGVscGVycyBpbXBsZW1lbnQgYSBtZW1v
cnkKKyAqIG1hbmFnZXIgZm9yIHNpbXBsZSBmcmFtZWJ1ZmZlciBkZXZpY2VzIHdpdGggZGVkaWNh
dGVkIHZpZGVvIG1lbW9yeS4gQnVmZmVyCisgKiBvYmplY3RzIGFyZSBlaXRoZXIgcGxhY2VkIGlu
IHZpZGVvIFJBTSBvciBldmljdGVkIHRvIHN5c3RlbSBtZW1vcnkuIFRoZSByc3AuCisgKiBidWZm
ZXIgb2JqZWN0IGlzIHByb3ZpZGVkIGJ5ICZzdHJ1Y3QgZHJtX2dlbV92cmFtX29iamVjdC4KICAq
LwogCiAvKgpAQCAtNzM2LDMgKzc0MywzNDIgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fZ2Vt
X29iamVjdF9mdW5jcyBkcm1fZ2VtX3ZyYW1fb2JqZWN0X2Z1bmNzID0gewogCS52dW5tYXAJPSBk
cm1fZ2VtX3ZyYW1fb2JqZWN0X3Z1bm1hcCwKIAkucHJpbnRfaW5mbyA9IGRybV9nZW1fdHRtX3By
aW50X2luZm8sCiB9OworCisvKgorICogVlJBTSBtZW1vcnkgbWFuYWdlcgorICovCisKKy8qCisg
KiBUVE0gVFQKKyAqLworCitzdGF0aWMgdm9pZCBiYWNrZW5kX2Z1bmNfZGVzdHJveShzdHJ1Y3Qg
dHRtX3R0ICp0dCkKK3sKKwl0dG1fdHRfZmluaSh0dCk7CisJa2ZyZWUodHQpOworfQorCitzdGF0
aWMgc3RydWN0IHR0bV9iYWNrZW5kX2Z1bmMgYmFja2VuZF9mdW5jID0geworCS5kZXN0cm95ID0g
YmFja2VuZF9mdW5jX2Rlc3Ryb3kKK307CisKKy8qCisgKiBUVE0gQk8gZGV2aWNlCisgKi8KKwor
c3RhdGljIHN0cnVjdCB0dG1fdHQgKmJvX2RyaXZlcl90dG1fdHRfY3JlYXRlKHN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqYm8sCisJCQkJCSAgICAgIHVpbnQzMl90IHBhZ2VfZmxhZ3MpCit7CisJ
c3RydWN0IHR0bV90dCAqdHQ7CisJaW50IHJldDsKKworCXR0ID0ga3phbGxvYyhzaXplb2YoKnR0
KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCF0dCkKKwkJcmV0dXJuIE5VTEw7CisKKwl0dC0+ZnVuYyA9
ICZiYWNrZW5kX2Z1bmM7CisKKwlyZXQgPSB0dG1fdHRfaW5pdCh0dCwgYm8sIHBhZ2VfZmxhZ3Mp
OworCWlmIChyZXQgPCAwKQorCQlnb3RvIGVycl90dG1fdHRfaW5pdDsKKworCXJldHVybiB0dDsK
KworZXJyX3R0bV90dF9pbml0OgorCWtmcmVlKHR0KTsKKwlyZXR1cm4gTlVMTDsKK30KKworc3Rh
dGljIGludCBib19kcml2ZXJfaW5pdF9tZW1fdHlwZShzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRl
diwgdWludDMyX3QgdHlwZSwKKwkJCQkgICBzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1h
bikKK3sKKwlzd2l0Y2ggKHR5cGUpIHsKKwljYXNlIFRUTV9QTF9TWVNURU06CisJCW1hbi0+Zmxh
Z3MgPSBUVE1fTUVNVFlQRV9GTEFHX01BUFBBQkxFOworCQltYW4tPmF2YWlsYWJsZV9jYWNoaW5n
ID0gVFRNX1BMX01BU0tfQ0FDSElORzsKKwkJbWFuLT5kZWZhdWx0X2NhY2hpbmcgPSBUVE1fUExf
RkxBR19DQUNIRUQ7CisJCWJyZWFrOworCWNhc2UgVFRNX1BMX1ZSQU06CisJCW1hbi0+ZnVuYyA9
ICZ0dG1fYm9fbWFuYWdlcl9mdW5jOworCQltYW4tPmZsYWdzID0gVFRNX01FTVRZUEVfRkxBR19G
SVhFRCB8CisJCQkgICAgIFRUTV9NRU1UWVBFX0ZMQUdfTUFQUEFCTEU7CisJCW1hbi0+YXZhaWxh
YmxlX2NhY2hpbmcgPSBUVE1fUExfRkxBR19VTkNBQ0hFRCB8CisJCQkJCSBUVE1fUExfRkxBR19X
QzsKKwkJbWFuLT5kZWZhdWx0X2NhY2hpbmcgPSBUVE1fUExfRkxBR19XQzsKKwkJYnJlYWs7CisJ
ZGVmYXVsdDoKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCXJldHVybiAwOworfQorCitzdGF0aWMg
dm9pZCBib19kcml2ZXJfZXZpY3RfZmxhZ3Moc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywK
KwkJCQkgIHN0cnVjdCB0dG1fcGxhY2VtZW50ICpwbGFjZW1lbnQpCit7CisJc3RydWN0IGRybV92
cmFtX21tICp2bW0gPSBkcm1fdnJhbV9tbV9vZl9iZGV2KGJvLT5iZGV2KTsKKworCWlmICh2bW0t
PmZ1bmNzICYmIHZtbS0+ZnVuY3MtPmV2aWN0X2ZsYWdzKQorCQl2bW0tPmZ1bmNzLT5ldmljdF9m
bGFncyhibywgcGxhY2VtZW50KTsKK30KKworc3RhdGljIGludCBib19kcml2ZXJfdmVyaWZ5X2Fj
Y2VzcyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAorCQkJCSAgIHN0cnVjdCBmaWxlICpm
aWxwKQoreworCXN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tID0gZHJtX3ZyYW1fbW1fb2ZfYmRldihi
by0+YmRldik7CisKKwlpZiAoIXZtbS0+ZnVuY3MgfHwgIXZtbS0+ZnVuY3MtPnZlcmlmeV9hY2Nl
c3MpCisJCXJldHVybiAwOworCXJldHVybiB2bW0tPmZ1bmNzLT52ZXJpZnlfYWNjZXNzKGJvLCBm
aWxwKTsKK30KKworc3RhdGljIHZvaWQgYm9fZHJpdmVyX21vdmVfbm90aWZ5KHN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqYm8sCisJCQkJICBib29sIGV2aWN0LAorCQkJCSAgc3RydWN0IHR0bV9t
ZW1fcmVnICpuZXdfbWVtKQoreworCXN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tID0gZHJtX3ZyYW1f
bW1fb2ZfYmRldihiby0+YmRldik7CisKKwlpZiAoIXZtbS0+ZnVuY3MgfHwgIXZtbS0+ZnVuY3Mt
Pm1vdmVfbm90aWZ5KQorCQlyZXR1cm47CisJdm1tLT5mdW5jcy0+bW92ZV9ub3RpZnkoYm8sIGV2
aWN0LCBuZXdfbWVtKTsKK30KKworc3RhdGljIGludCBib19kcml2ZXJfaW9fbWVtX3Jlc2VydmUo
c3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCisJCQkJICAgIHN0cnVjdCB0dG1fbWVtX3JlZyAq
bWVtKQoreworCXN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuID0gYmRldi0+bWFuICsg
bWVtLT5tZW1fdHlwZTsKKwlzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSA9IGRybV92cmFtX21tX29m
X2JkZXYoYmRldik7CisKKwlpZiAoIShtYW4tPmZsYWdzICYgVFRNX01FTVRZUEVfRkxBR19NQVBQ
QUJMRSkpCisJCXJldHVybiAtRUlOVkFMOworCisJbWVtLT5idXMuYWRkciA9IE5VTEw7CisJbWVt
LT5idXMuc2l6ZSA9IG1lbS0+bnVtX3BhZ2VzIDw8IFBBR0VfU0hJRlQ7CisKKwlzd2l0Y2ggKG1l
bS0+bWVtX3R5cGUpIHsKKwljYXNlIFRUTV9QTF9TWVNURU06CS8qIG5vdGhpbmcgdG8gZG8gKi8K
KwkJbWVtLT5idXMub2Zmc2V0ID0gMDsKKwkJbWVtLT5idXMuYmFzZSA9IDA7CisJCW1lbS0+YnVz
LmlzX2lvbWVtID0gZmFsc2U7CisJCWJyZWFrOworCWNhc2UgVFRNX1BMX1ZSQU06CisJCW1lbS0+
YnVzLm9mZnNldCA9IG1lbS0+c3RhcnQgPDwgUEFHRV9TSElGVDsKKwkJbWVtLT5idXMuYmFzZSA9
IHZtbS0+dnJhbV9iYXNlOworCQltZW0tPmJ1cy5pc19pb21lbSA9IHRydWU7CisJCWJyZWFrOwor
CWRlZmF1bHQ6CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCXJldHVybiAwOworfQorCitzdGF0
aWMgdm9pZCBib19kcml2ZXJfaW9fbWVtX2ZyZWUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYs
CisJCQkJICBzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKK3sgfQorCitzdGF0aWMgc3RydWN0IHR0
bV9ib19kcml2ZXIgYm9fZHJpdmVyID0geworCS50dG1fdHRfY3JlYXRlID0gYm9fZHJpdmVyX3R0
bV90dF9jcmVhdGUsCisJLnR0bV90dF9wb3B1bGF0ZSA9IHR0bV9wb29sX3BvcHVsYXRlLAorCS50
dG1fdHRfdW5wb3B1bGF0ZSA9IHR0bV9wb29sX3VucG9wdWxhdGUsCisJLmluaXRfbWVtX3R5cGUg
PSBib19kcml2ZXJfaW5pdF9tZW1fdHlwZSwKKwkuZXZpY3Rpb25fdmFsdWFibGUgPSB0dG1fYm9f
ZXZpY3Rpb25fdmFsdWFibGUsCisJLmV2aWN0X2ZsYWdzID0gYm9fZHJpdmVyX2V2aWN0X2ZsYWdz
LAorCS52ZXJpZnlfYWNjZXNzID0gYm9fZHJpdmVyX3ZlcmlmeV9hY2Nlc3MsCisJLm1vdmVfbm90
aWZ5ID0gYm9fZHJpdmVyX21vdmVfbm90aWZ5LAorCS5pb19tZW1fcmVzZXJ2ZSA9IGJvX2RyaXZl
cl9pb19tZW1fcmVzZXJ2ZSwKKwkuaW9fbWVtX2ZyZWUgPSBib19kcml2ZXJfaW9fbWVtX2ZyZWUs
Cit9OworCisvKgorICogc3RydWN0IGRybV92cmFtX21tCisgKi8KKworI2lmIGRlZmluZWQoQ09O
RklHX0RFQlVHX0ZTKQorc3RhdGljIGludCBkcm1fdnJhbV9tbV9kZWJ1Z2ZzKHN0cnVjdCBzZXFf
ZmlsZSAqbSwgdm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3QgZHJtX2luZm9fbm9kZSAqbm9kZSA9IChz
dHJ1Y3QgZHJtX2luZm9fbm9kZSAqKSBtLT5wcml2YXRlOworCXN0cnVjdCBkcm1fdnJhbV9tbSAq
dm1tID0gbm9kZS0+bWlub3ItPmRldi0+dnJhbV9tbTsKKwlzdHJ1Y3QgZHJtX21tICptbSA9IHZt
bS0+YmRldi5tYW5bVFRNX1BMX1ZSQU1dLnByaXY7CisJc3RydWN0IHR0bV9ib19nbG9iYWwgKmds
b2IgPSB2bW0tPmJkZXYuZ2xvYjsKKwlzdHJ1Y3QgZHJtX3ByaW50ZXIgcCA9IGRybV9zZXFfZmls
ZV9wcmludGVyKG0pOworCisJc3Bpbl9sb2NrKCZnbG9iLT5scnVfbG9jayk7CisJZHJtX21tX3By
aW50KG1tLCAmcCk7CisJc3Bpbl91bmxvY2soJmdsb2ItPmxydV9sb2NrKTsKKwlyZXR1cm4gMDsK
K30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1faW5mb19saXN0IGRybV92cmFtX21tX2RlYnVn
ZnNfbGlzdFtdID0geworCXsgInZyYW0tbW0iLCBkcm1fdnJhbV9tbV9kZWJ1Z2ZzLCAwLCBOVUxM
IH0sCit9OworI2VuZGlmCisKKy8qKgorICogZHJtX3ZyYW1fbW1fZGVidWdmc19pbml0KCkgLSBS
ZWdpc3RlciBWUkFNIE1NIGRlYnVnZnMgZmlsZS4KKyAqCisgKiBAbWlub3I6IGRybSBtaW5vciBk
ZXZpY2UuCisgKgorICogUmV0dXJuczoKKyAqIDAgb24gc3VjY2Vzcywgb3IKKyAqIGEgbmVnYXRp
dmUgZXJyb3IgY29kZSBvdGhlcndpc2UuCisgKi8KK2ludCBkcm1fdnJhbV9tbV9kZWJ1Z2ZzX2lu
aXQoc3RydWN0IGRybV9taW5vciAqbWlub3IpCit7CisJaW50IHJldCA9IDA7CisKKyNpZiBkZWZp
bmVkKENPTkZJR19ERUJVR19GUykKKwlyZXQgPSBkcm1fZGVidWdmc19jcmVhdGVfZmlsZXMoZHJt
X3ZyYW1fbW1fZGVidWdmc19saXN0LAorCQkJCSAgICAgICBBUlJBWV9TSVpFKGRybV92cmFtX21t
X2RlYnVnZnNfbGlzdCksCisJCQkJICAgICAgIG1pbm9yLT5kZWJ1Z2ZzX3Jvb3QsIG1pbm9yKTsK
KyNlbmRpZgorCXJldHVybiByZXQ7Cit9CitFWFBPUlRfU1lNQk9MKGRybV92cmFtX21tX2RlYnVn
ZnNfaW5pdCk7CisKKy8qKgorICogZHJtX3ZyYW1fbW1faW5pdCgpIC0gSW5pdGlhbGl6ZSBhbiBp
bnN0YW5jZSBvZiBWUkFNIE1NLgorICogQHZtbToJdGhlIFZSQU0gTU0gaW5zdGFuY2UgdG8gaW5p
dGlhbGl6ZQorICogQGRldjoJdGhlIERSTSBkZXZpY2UKKyAqIEB2cmFtX2Jhc2U6CXRoZSBiYXNl
IGFkZHJlc3Mgb2YgdGhlIHZpZGVvIG1lbW9yeQorICogQHZyYW1fc2l6ZToJdGhlIHNpemUgb2Yg
dGhlIHZpZGVvIG1lbW9yeSBpbiBieXRlcworICogQGZ1bmNzOgljYWxsYmFjayBmdW5jdGlvbnMg
Zm9yIGJ1ZmZlciBvYmplY3RzCisgKgorICogUmV0dXJuczoKKyAqIDAgb24gc3VjY2Vzcywgb3IK
KyAqIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvdGhlcndpc2UuCisgKi8KK2ludCBkcm1fdnJhbV9t
bV9pbml0KHN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tLCBzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAor
CQkgICAgIHVpbnQ2NF90IHZyYW1fYmFzZSwgc2l6ZV90IHZyYW1fc2l6ZSwKKwkJICAgICBjb25z
dCBzdHJ1Y3QgZHJtX3ZyYW1fbW1fZnVuY3MgKmZ1bmNzKQoreworCWludCByZXQ7CisKKwl2bW0t
PnZyYW1fYmFzZSA9IHZyYW1fYmFzZTsKKwl2bW0tPnZyYW1fc2l6ZSA9IHZyYW1fc2l6ZTsKKwl2
bW0tPmZ1bmNzID0gZnVuY3M7CisKKwlyZXQgPSB0dG1fYm9fZGV2aWNlX2luaXQoJnZtbS0+YmRl
diwgJmJvX2RyaXZlciwKKwkJCQkgZGV2LT5hbm9uX2lub2RlLT5pX21hcHBpbmcsCisJCQkJIHRy
dWUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXQgPSB0dG1fYm9faW5pdF9tbSgm
dm1tLT5iZGV2LCBUVE1fUExfVlJBTSwgdnJhbV9zaXplID4+IFBBR0VfU0hJRlQpOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0woZHJtX3Zy
YW1fbW1faW5pdCk7CisKKy8qKgorICogZHJtX3ZyYW1fbW1fY2xlYW51cCgpIC0gQ2xlYW5zIHVw
IGFuIGluaXRpYWxpemVkIGluc3RhbmNlIG9mIFZSQU0gTU0uCisgKiBAdm1tOgl0aGUgVlJBTSBN
TSBpbnN0YW5jZSB0byBjbGVhbiB1cAorICovCit2b2lkIGRybV92cmFtX21tX2NsZWFudXAoc3Ry
dWN0IGRybV92cmFtX21tICp2bW0pCit7CisJdHRtX2JvX2RldmljZV9yZWxlYXNlKCZ2bW0tPmJk
ZXYpOworfQorRVhQT1JUX1NZTUJPTChkcm1fdnJhbV9tbV9jbGVhbnVwKTsKKworLyoqCisgKiBk
cm1fdnJhbV9tbV9tbWFwKCkgLSBIZWxwZXIgZm9yIGltcGxlbWVudGluZyAmc3RydWN0IGZpbGVf
b3BlcmF0aW9ucy5tbWFwKCkKKyAqIEBmaWxwOgl0aGUgbWFwcGluZydzIGZpbGUgc3RydWN0dXJl
CisgKiBAdm1hOgl0aGUgbWFwcGluZydzIG1lbW9yeSBhcmVhCisgKiBAdm1tOgl0aGUgVlJBTSBN
TSBpbnN0YW5jZQorICoKKyAqIFJldHVybnM6CisgKiAwIG9uIHN1Y2Nlc3MsIG9yCisgKiBhIG5l
Z2F0aXZlIGVycm9yIGNvZGUgb3RoZXJ3aXNlLgorICovCitpbnQgZHJtX3ZyYW1fbW1fbW1hcChz
dHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEsCisJCSAgICAgc3Ry
dWN0IGRybV92cmFtX21tICp2bW0pCit7CisJcmV0dXJuIHR0bV9ib19tbWFwKGZpbHAsIHZtYSwg
JnZtbS0+YmRldik7Cit9CitFWFBPUlRfU1lNQk9MKGRybV92cmFtX21tX21tYXApOworCisvKgor
ICogSGVscGVycyBmb3IgaW50ZWdyYXRpb24gd2l0aCBzdHJ1Y3QgZHJtX2RldmljZQorICovCisK
Ky8qKgorICogZHJtX3ZyYW1faGVscGVyX2FsbG9jX21tIC0gQWxsb2NhdGVzIGEgZGV2aWNlJ3Mg
aW5zdGFuY2Ugb2YgXAorCSZzdHJ1Y3QgZHJtX3ZyYW1fbW0KKyAqIEBkZXY6CXRoZSBEUk0gZGV2
aWNlCisgKiBAdnJhbV9iYXNlOgl0aGUgYmFzZSBhZGRyZXNzIG9mIHRoZSB2aWRlbyBtZW1vcnkK
KyAqIEB2cmFtX3NpemU6CXRoZSBzaXplIG9mIHRoZSB2aWRlbyBtZW1vcnkgaW4gYnl0ZXMKKyAq
IEBmdW5jczoJY2FsbGJhY2sgZnVuY3Rpb25zIGZvciBidWZmZXIgb2JqZWN0cworICoKKyAqIFJl
dHVybnM6CisgKiBUaGUgbmV3IGluc3RhbmNlIG9mICZzdHJ1Y3QgZHJtX3ZyYW1fbW0gb24gc3Vj
Y2Vzcywgb3IKKyAqIGFuIEVSUl9QVFIoKS1lbmNvZGVkIGVycm5vIGNvZGUgb3RoZXJ3aXNlLgor
ICovCitzdHJ1Y3QgZHJtX3ZyYW1fbW0gKmRybV92cmFtX2hlbHBlcl9hbGxvY19tbSgKKwlzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LCB1aW50NjRfdCB2cmFtX2Jhc2UsIHNpemVfdCB2cmFtX3NpemUs
CisJY29uc3Qgc3RydWN0IGRybV92cmFtX21tX2Z1bmNzICpmdW5jcykKK3sKKwlpbnQgcmV0Owor
CisJaWYgKFdBUk5fT04oZGV2LT52cmFtX21tKSkKKwkJcmV0dXJuIGRldi0+dnJhbV9tbTsKKwor
CWRldi0+dnJhbV9tbSA9IGt6YWxsb2Moc2l6ZW9mKCpkZXYtPnZyYW1fbW0pLCBHRlBfS0VSTkVM
KTsKKwlpZiAoIWRldi0+dnJhbV9tbSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisKKwly
ZXQgPSBkcm1fdnJhbV9tbV9pbml0KGRldi0+dnJhbV9tbSwgZGV2LCB2cmFtX2Jhc2UsIHZyYW1f
c2l6ZSwgZnVuY3MpOworCWlmIChyZXQpCisJCWdvdG8gZXJyX2tmcmVlOworCisJcmV0dXJuIGRl
di0+dnJhbV9tbTsKKworZXJyX2tmcmVlOgorCWtmcmVlKGRldi0+dnJhbV9tbSk7CisJZGV2LT52
cmFtX21tID0gTlVMTDsKKwlyZXR1cm4gRVJSX1BUUihyZXQpOworfQorRVhQT1JUX1NZTUJPTChk
cm1fdnJhbV9oZWxwZXJfYWxsb2NfbW0pOworCisvKioKKyAqIGRybV92cmFtX2hlbHBlcl9yZWxl
YXNlX21tIC0gUmVsZWFzZXMgYSBkZXZpY2UncyBpbnN0YW5jZSBvZiBcCisJJnN0cnVjdCBkcm1f
dnJhbV9tbQorICogQGRldjoJdGhlIERSTSBkZXZpY2UKKyAqLwordm9pZCBkcm1fdnJhbV9oZWxw
ZXJfcmVsZWFzZV9tbShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQoreworCWlmICghZGV2LT52cmFt
X21tKQorCQlyZXR1cm47CisKKwlkcm1fdnJhbV9tbV9jbGVhbnVwKGRldi0+dnJhbV9tbSk7CisJ
a2ZyZWUoZGV2LT52cmFtX21tKTsKKwlkZXYtPnZyYW1fbW0gPSBOVUxMOworfQorRVhQT1JUX1NZ
TUJPTChkcm1fdnJhbV9oZWxwZXJfcmVsZWFzZV9tbSk7CisKKy8qCisgKiBIZWxwZXJzIGZvciAm
c3RydWN0IGZpbGVfb3BlcmF0aW9ucworICovCisKKy8qKgorICogZHJtX3ZyYW1fbW1fZmlsZV9v
cGVyYXRpb25zX21tYXAoKSAtIFwKKwlJbXBsZW1lbnRzICZzdHJ1Y3QgZmlsZV9vcGVyYXRpb25z
Lm1tYXAoKQorICogQGZpbHA6CXRoZSBtYXBwaW5nJ3MgZmlsZSBzdHJ1Y3R1cmUKKyAqIEB2bWE6
CXRoZSBtYXBwaW5nJ3MgbWVtb3J5IGFyZWEKKyAqCisgKiBSZXR1cm5zOgorICogMCBvbiBzdWNj
ZXNzLCBvcgorICogYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG90aGVyd2lzZS4KKyAqLworaW50IGRy
bV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwKAorCXN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1
Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKK3sKKwlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGVfcHJpdiA9
IGZpbHAtPnByaXZhdGVfZGF0YTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZmlsZV9wcml2
LT5taW5vci0+ZGV2OworCisJaWYgKFdBUk5fT05DRSghZGV2LT52cmFtX21tLCAiVlJBTSBNTSBu
b3QgaW5pdGlhbGl6ZWQiKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlyZXR1cm4gZHJtX3ZyYW1f
bW1fbW1hcChmaWxwLCB2bWEsIGRldi0+dnJhbV9tbSk7Cit9CitFWFBPUlRfU1lNQk9MKGRybV92
cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9kcm1fdnJhbV9tbV9oZWxwZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fdnJhbV9tbV9oZWxw
ZXIuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDBmZDhhNjkxZmE5Li4wMDAwMDAw
MDAwMDAKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV92cmFtX21tX2hlbHBlci5jCisrKyAvZGV2
L251bGwKQEAgLTEsMzUzICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwt
Mi4wLW9yLWxhdGVyCi0KLSNpbmNsdWRlIDxkcm0vZHJtX2RlYnVnZnMuaD4KLSNpbmNsdWRlIDxk
cm0vZHJtX2RldmljZS5oPgotI2luY2x1ZGUgPGRybS9kcm1fZmlsZS5oPgotI2luY2x1ZGUgPGRy
bS9kcm1fZ2VtX3R0bV9oZWxwZXIuaD4KLSNpbmNsdWRlIDxkcm0vZHJtX3ZyYW1fbW1faGVscGVy
Lmg+Ci0KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9wYWdlX2FsbG9jLmg+Ci0KLS8qKgotICogRE9D
OiBvdmVydmlldwotICoKLSAqIFRoZSBkYXRhIHN0cnVjdHVyZSAmc3RydWN0IGRybV92cmFtX21t
IGFuZCBpdHMgaGVscGVycyBpbXBsZW1lbnQgYSBtZW1vcnkKLSAqIG1hbmFnZXIgZm9yIHNpbXBs
ZSBmcmFtZWJ1ZmZlciBkZXZpY2VzIHdpdGggZGVkaWNhdGVkIHZpZGVvIG1lbW9yeS4gQnVmZmVy
Ci0gKiBvYmplY3RzIGFyZSBlaXRoZXIgcGxhY2VkIGluIHZpZGVvIFJBTSBvciBldmljdGVkIHRv
IHN5c3RlbSBtZW1vcnkuIFRoZXNlCi0gKiBoZWxwZXIgZnVuY3Rpb25zIHdvcmsgd2VsbCB3aXRo
ICZzdHJ1Y3QgZHJtX2dlbV92cmFtX29iamVjdC4KLSAqLwotCi0vKgotICogVFRNIFRUCi0gKi8K
LQotc3RhdGljIHZvaWQgYmFja2VuZF9mdW5jX2Rlc3Ryb3koc3RydWN0IHR0bV90dCAqdHQpCi17
Ci0JdHRtX3R0X2ZpbmkodHQpOwotCWtmcmVlKHR0KTsKLX0KLQotc3RhdGljIHN0cnVjdCB0dG1f
YmFja2VuZF9mdW5jIGJhY2tlbmRfZnVuYyA9IHsKLQkuZGVzdHJveSA9IGJhY2tlbmRfZnVuY19k
ZXN0cm95Ci19OwotCi0vKgotICogVFRNIEJPIGRldmljZQotICovCi0KLXN0YXRpYyBzdHJ1Y3Qg
dHRtX3R0ICpib19kcml2ZXJfdHRtX3R0X2NyZWF0ZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3Qg
KmJvLAotCQkJCQkgICAgICB1aW50MzJfdCBwYWdlX2ZsYWdzKQotewotCXN0cnVjdCB0dG1fdHQg
KnR0OwotCWludCByZXQ7Ci0KLQl0dCA9IGt6YWxsb2Moc2l6ZW9mKCp0dCksIEdGUF9LRVJORUwp
OwotCWlmICghdHQpCi0JCXJldHVybiBOVUxMOwotCi0JdHQtPmZ1bmMgPSAmYmFja2VuZF9mdW5j
OwotCi0JcmV0ID0gdHRtX3R0X2luaXQodHQsIGJvLCBwYWdlX2ZsYWdzKTsKLQlpZiAocmV0IDwg
MCkKLQkJZ290byBlcnJfdHRtX3R0X2luaXQ7Ci0KLQlyZXR1cm4gdHQ7Ci0KLWVycl90dG1fdHRf
aW5pdDoKLQlrZnJlZSh0dCk7Ci0JcmV0dXJuIE5VTEw7Ci19Ci0KLXN0YXRpYyBpbnQgYm9fZHJp
dmVyX2luaXRfbWVtX3R5cGUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsIHVpbnQzMl90IHR5
cGUsCi0JCQkJICAgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyICptYW4pCi17Ci0Jc3dpdGNo
ICh0eXBlKSB7Ci0JY2FzZSBUVE1fUExfU1lTVEVNOgotCQltYW4tPmZsYWdzID0gVFRNX01FTVRZ
UEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9NQVNL
X0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVEOwot
CQlicmVhazsKLQljYXNlIFRUTV9QTF9WUkFNOgotCQltYW4tPmZ1bmMgPSAmdHRtX2JvX21hbmFn
ZXJfZnVuYzsKLQkJbWFuLT5mbGFncyA9IFRUTV9NRU1UWVBFX0ZMQUdfRklYRUQgfAotCQkJICAg
ICBUVE1fTUVNVFlQRV9GTEFHX01BUFBBQkxFOwotCQltYW4tPmF2YWlsYWJsZV9jYWNoaW5nID0g
VFRNX1BMX0ZMQUdfVU5DQUNIRUQgfAotCQkJCQkgVFRNX1BMX0ZMQUdfV0M7Ci0JCW1hbi0+ZGVm
YXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfV0M7Ci0JCWJyZWFrOwotCWRlZmF1bHQ6Ci0JCXJl
dHVybiAtRUlOVkFMOwotCX0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgYm9fZHJpdmVy
X2V2aWN0X2ZsYWdzKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sCi0JCQkJICBzdHJ1Y3Qg
dHRtX3BsYWNlbWVudCAqcGxhY2VtZW50KQotewotCXN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tID0g
ZHJtX3ZyYW1fbW1fb2ZfYmRldihiby0+YmRldik7Ci0KLQlpZiAodm1tLT5mdW5jcyAmJiB2bW0t
PmZ1bmNzLT5ldmljdF9mbGFncykKLQkJdm1tLT5mdW5jcy0+ZXZpY3RfZmxhZ3MoYm8sIHBsYWNl
bWVudCk7Ci19Ci0KLXN0YXRpYyBpbnQgYm9fZHJpdmVyX3ZlcmlmeV9hY2Nlc3Moc3RydWN0IHR0
bV9idWZmZXJfb2JqZWN0ICpibywKLQkJCQkgICBzdHJ1Y3QgZmlsZSAqZmlscCkKLXsKLQlzdHJ1
Y3QgZHJtX3ZyYW1fbW0gKnZtbSA9IGRybV92cmFtX21tX29mX2JkZXYoYm8tPmJkZXYpOwotCi0J
aWYgKCF2bW0tPmZ1bmNzIHx8ICF2bW0tPmZ1bmNzLT52ZXJpZnlfYWNjZXNzKQotCQlyZXR1cm4g
MDsKLQlyZXR1cm4gdm1tLT5mdW5jcy0+dmVyaWZ5X2FjY2VzcyhibywgZmlscCk7Ci19Ci0KLXN0
YXRpYyB2b2lkIGJvX2RyaXZlcl9tb3ZlX25vdGlmeShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3Qg
KmJvLAotCQkJCSAgYm9vbCBldmljdCwKLQkJCQkgIHN0cnVjdCB0dG1fbWVtX3JlZyAqbmV3X21l
bSkKLXsKLQlzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSA9IGRybV92cmFtX21tX29mX2JkZXYoYm8t
PmJkZXYpOwotCi0JaWYgKCF2bW0tPmZ1bmNzIHx8ICF2bW0tPmZ1bmNzLT5tb3ZlX25vdGlmeSkK
LQkJcmV0dXJuOwotCXZtbS0+ZnVuY3MtPm1vdmVfbm90aWZ5KGJvLCBldmljdCwgbmV3X21lbSk7
Ci19Ci0KLXN0YXRpYyBpbnQgYm9fZHJpdmVyX2lvX21lbV9yZXNlcnZlKHN0cnVjdCB0dG1fYm9f
ZGV2aWNlICpiZGV2LAotCQkJCSAgICBzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsKLQlzdHJ1
Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiA9IGJkZXYtPm1hbiArIG1lbS0+bWVtX3R5cGU7
Ci0Jc3RydWN0IGRybV92cmFtX21tICp2bW0gPSBkcm1fdnJhbV9tbV9vZl9iZGV2KGJkZXYpOwot
Ci0JaWYgKCEobWFuLT5mbGFncyAmIFRUTV9NRU1UWVBFX0ZMQUdfTUFQUEFCTEUpKQotCQlyZXR1
cm4gLUVJTlZBTDsKLQotCW1lbS0+YnVzLmFkZHIgPSBOVUxMOwotCW1lbS0+YnVzLnNpemUgPSBt
ZW0tPm51bV9wYWdlcyA8PCBQQUdFX1NISUZUOwotCi0Jc3dpdGNoIChtZW0tPm1lbV90eXBlKSB7
Ci0JY2FzZSBUVE1fUExfU1lTVEVNOgkvKiBub3RoaW5nIHRvIGRvICovCi0JCW1lbS0+YnVzLm9m
ZnNldCA9IDA7Ci0JCW1lbS0+YnVzLmJhc2UgPSAwOwotCQltZW0tPmJ1cy5pc19pb21lbSA9IGZh
bHNlOwotCQlicmVhazsKLQljYXNlIFRUTV9QTF9WUkFNOgotCQltZW0tPmJ1cy5vZmZzZXQgPSBt
ZW0tPnN0YXJ0IDw8IFBBR0VfU0hJRlQ7Ci0JCW1lbS0+YnVzLmJhc2UgPSB2bW0tPnZyYW1fYmFz
ZTsKLQkJbWVtLT5idXMuaXNfaW9tZW0gPSB0cnVlOwotCQlicmVhazsKLQlkZWZhdWx0OgotCQly
ZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgYm9fZHJp
dmVyX2lvX21lbV9mcmVlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJCSAgc3RydWN0
IHR0bV9tZW1fcmVnICptZW0pCi17IH0KLQotc3RhdGljIHN0cnVjdCB0dG1fYm9fZHJpdmVyIGJv
X2RyaXZlciA9IHsKLQkudHRtX3R0X2NyZWF0ZSA9IGJvX2RyaXZlcl90dG1fdHRfY3JlYXRlLAot
CS50dG1fdHRfcG9wdWxhdGUgPSB0dG1fcG9vbF9wb3B1bGF0ZSwKLQkudHRtX3R0X3VucG9wdWxh
dGUgPSB0dG1fcG9vbF91bnBvcHVsYXRlLAotCS5pbml0X21lbV90eXBlID0gYm9fZHJpdmVyX2lu
aXRfbWVtX3R5cGUsCi0JLmV2aWN0aW9uX3ZhbHVhYmxlID0gdHRtX2JvX2V2aWN0aW9uX3ZhbHVh
YmxlLAotCS5ldmljdF9mbGFncyA9IGJvX2RyaXZlcl9ldmljdF9mbGFncywKLQkudmVyaWZ5X2Fj
Y2VzcyA9IGJvX2RyaXZlcl92ZXJpZnlfYWNjZXNzLAotCS5tb3ZlX25vdGlmeSA9IGJvX2RyaXZl
cl9tb3ZlX25vdGlmeSwKLQkuaW9fbWVtX3Jlc2VydmUgPSBib19kcml2ZXJfaW9fbWVtX3Jlc2Vy
dmUsCi0JLmlvX21lbV9mcmVlID0gYm9fZHJpdmVyX2lvX21lbV9mcmVlLAotfTsKLQotLyoKLSAq
IHN0cnVjdCBkcm1fdnJhbV9tbQotICovCi0KLSNpZiBkZWZpbmVkKENPTkZJR19ERUJVR19GUykK
LXN0YXRpYyBpbnQgZHJtX3ZyYW1fbW1fZGVidWdmcyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQg
KmRhdGEpCi17Ci0Jc3RydWN0IGRybV9pbmZvX25vZGUgKm5vZGUgPSAoc3RydWN0IGRybV9pbmZv
X25vZGUgKikgbS0+cHJpdmF0ZTsKLQlzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSA9IG5vZGUtPm1p
bm9yLT5kZXYtPnZyYW1fbW07Ci0Jc3RydWN0IGRybV9tbSAqbW0gPSB2bW0tPmJkZXYubWFuW1RU
TV9QTF9WUkFNXS5wcml2OwotCXN0cnVjdCB0dG1fYm9fZ2xvYmFsICpnbG9iID0gdm1tLT5iZGV2
Lmdsb2I7Ci0Jc3RydWN0IGRybV9wcmludGVyIHAgPSBkcm1fc2VxX2ZpbGVfcHJpbnRlcihtKTsK
LQotCXNwaW5fbG9jaygmZ2xvYi0+bHJ1X2xvY2spOwotCWRybV9tbV9wcmludChtbSwgJnApOwot
CXNwaW5fdW5sb2NrKCZnbG9iLT5scnVfbG9jayk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBj
b25zdCBzdHJ1Y3QgZHJtX2luZm9fbGlzdCBkcm1fdnJhbV9tbV9kZWJ1Z2ZzX2xpc3RbXSA9IHsK
LQl7ICJ2cmFtLW1tIiwgZHJtX3ZyYW1fbW1fZGVidWdmcywgMCwgTlVMTCB9LAotfTsKLSNlbmRp
ZgotCi0vKioKLSAqIGRybV92cmFtX21tX2RlYnVnZnNfaW5pdCgpIC0gUmVnaXN0ZXIgVlJBTSBN
TSBkZWJ1Z2ZzIGZpbGUuCi0gKgotICogQG1pbm9yOiBkcm0gbWlub3IgZGV2aWNlLgotICoKLSAq
IFJldHVybnM6Ci0gKiAwIG9uIHN1Y2Nlc3MsIG9yCi0gKiBhIG5lZ2F0aXZlIGVycm9yIGNvZGUg
b3RoZXJ3aXNlLgotICovCi1pbnQgZHJtX3ZyYW1fbW1fZGVidWdmc19pbml0KHN0cnVjdCBkcm1f
bWlub3IgKm1pbm9yKQotewotCWludCByZXQgPSAwOwotCi0jaWYgZGVmaW5lZChDT05GSUdfREVC
VUdfRlMpCi0JcmV0ID0gZHJtX2RlYnVnZnNfY3JlYXRlX2ZpbGVzKGRybV92cmFtX21tX2RlYnVn
ZnNfbGlzdCwKLQkJCQkgICAgICAgQVJSQVlfU0laRShkcm1fdnJhbV9tbV9kZWJ1Z2ZzX2xpc3Qp
LAotCQkJCSAgICAgICBtaW5vci0+ZGVidWdmc19yb290LCBtaW5vcik7Ci0jZW5kaWYKLQlyZXR1
cm4gcmV0OwotfQotRVhQT1JUX1NZTUJPTChkcm1fdnJhbV9tbV9kZWJ1Z2ZzX2luaXQpOwotCi0v
KioKLSAqIGRybV92cmFtX21tX2luaXQoKSAtIEluaXRpYWxpemUgYW4gaW5zdGFuY2Ugb2YgVlJB
TSBNTS4KLSAqIEB2bW06CXRoZSBWUkFNIE1NIGluc3RhbmNlIHRvIGluaXRpYWxpemUKLSAqIEBk
ZXY6CXRoZSBEUk0gZGV2aWNlCi0gKiBAdnJhbV9iYXNlOgl0aGUgYmFzZSBhZGRyZXNzIG9mIHRo
ZSB2aWRlbyBtZW1vcnkKLSAqIEB2cmFtX3NpemU6CXRoZSBzaXplIG9mIHRoZSB2aWRlbyBtZW1v
cnkgaW4gYnl0ZXMKLSAqIEBmdW5jczoJY2FsbGJhY2sgZnVuY3Rpb25zIGZvciBidWZmZXIgb2Jq
ZWN0cwotICoKLSAqIFJldHVybnM6Ci0gKiAwIG9uIHN1Y2Nlc3MsIG9yCi0gKiBhIG5lZ2F0aXZl
IGVycm9yIGNvZGUgb3RoZXJ3aXNlLgotICovCi1pbnQgZHJtX3ZyYW1fbW1faW5pdChzdHJ1Y3Qg
ZHJtX3ZyYW1fbW0gKnZtbSwgc3RydWN0IGRybV9kZXZpY2UgKmRldiwKLQkJICAgICB1aW50NjRf
dCB2cmFtX2Jhc2UsIHNpemVfdCB2cmFtX3NpemUsCi0JCSAgICAgY29uc3Qgc3RydWN0IGRybV92
cmFtX21tX2Z1bmNzICpmdW5jcykKLXsKLQlpbnQgcmV0OwotCi0Jdm1tLT52cmFtX2Jhc2UgPSB2
cmFtX2Jhc2U7Ci0Jdm1tLT52cmFtX3NpemUgPSB2cmFtX3NpemU7Ci0Jdm1tLT5mdW5jcyA9IGZ1
bmNzOwotCi0JcmV0ID0gdHRtX2JvX2RldmljZV9pbml0KCZ2bW0tPmJkZXYsICZib19kcml2ZXIs
Ci0JCQkJIGRldi0+YW5vbl9pbm9kZS0+aV9tYXBwaW5nLAotCQkJCSB0cnVlKTsKLQlpZiAocmV0
KQotCQlyZXR1cm4gcmV0OwotCi0JcmV0ID0gdHRtX2JvX2luaXRfbW0oJnZtbS0+YmRldiwgVFRN
X1BMX1ZSQU0sIHZyYW1fc2l6ZSA+PiBQQUdFX1NISUZUKTsKLQlpZiAocmV0KQotCQlyZXR1cm4g
cmV0OwotCi0JcmV0dXJuIDA7Ci19Ci1FWFBPUlRfU1lNQk9MKGRybV92cmFtX21tX2luaXQpOwot
Ci0vKioKLSAqIGRybV92cmFtX21tX2NsZWFudXAoKSAtIENsZWFucyB1cCBhbiBpbml0aWFsaXpl
ZCBpbnN0YW5jZSBvZiBWUkFNIE1NLgotICogQHZtbToJdGhlIFZSQU0gTU0gaW5zdGFuY2UgdG8g
Y2xlYW4gdXAKLSAqLwotdm9pZCBkcm1fdnJhbV9tbV9jbGVhbnVwKHN0cnVjdCBkcm1fdnJhbV9t
bSAqdm1tKQotewotCXR0bV9ib19kZXZpY2VfcmVsZWFzZSgmdm1tLT5iZGV2KTsKLX0KLUVYUE9S
VF9TWU1CT0woZHJtX3ZyYW1fbW1fY2xlYW51cCk7Ci0KLS8qKgotICogZHJtX3ZyYW1fbW1fbW1h
cCgpIC0gSGVscGVyIGZvciBpbXBsZW1lbnRpbmcgJnN0cnVjdCBmaWxlX29wZXJhdGlvbnMubW1h
cCgpCi0gKiBAZmlscDoJdGhlIG1hcHBpbmcncyBmaWxlIHN0cnVjdHVyZQotICogQHZtYToJdGhl
IG1hcHBpbmcncyBtZW1vcnkgYXJlYQotICogQHZtbToJdGhlIFZSQU0gTU0gaW5zdGFuY2UKLSAq
Ci0gKiBSZXR1cm5zOgotICogMCBvbiBzdWNjZXNzLCBvcgotICogYSBuZWdhdGl2ZSBlcnJvciBj
b2RlIG90aGVyd2lzZS4KLSAqLwotaW50IGRybV92cmFtX21tX21tYXAoc3RydWN0IGZpbGUgKmZp
bHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAotCQkgICAgIHN0cnVjdCBkcm1fdnJhbV9t
bSAqdm1tKQotewotCXJldHVybiB0dG1fYm9fbW1hcChmaWxwLCB2bWEsICZ2bW0tPmJkZXYpOwot
fQotRVhQT1JUX1NZTUJPTChkcm1fdnJhbV9tbV9tbWFwKTsKLQotLyoKLSAqIEhlbHBlcnMgZm9y
IGludGVncmF0aW9uIHdpdGggc3RydWN0IGRybV9kZXZpY2UKLSAqLwotCi0vKioKLSAqIGRybV92
cmFtX2hlbHBlcl9hbGxvY19tbSAtIEFsbG9jYXRlcyBhIGRldmljZSdzIGluc3RhbmNlIG9mIFwK
LQkmc3RydWN0IGRybV92cmFtX21tCi0gKiBAZGV2Ogl0aGUgRFJNIGRldmljZQotICogQHZyYW1f
YmFzZToJdGhlIGJhc2UgYWRkcmVzcyBvZiB0aGUgdmlkZW8gbWVtb3J5Ci0gKiBAdnJhbV9zaXpl
Ogl0aGUgc2l6ZSBvZiB0aGUgdmlkZW8gbWVtb3J5IGluIGJ5dGVzCi0gKiBAZnVuY3M6CWNhbGxi
YWNrIGZ1bmN0aW9ucyBmb3IgYnVmZmVyIG9iamVjdHMKLSAqCi0gKiBSZXR1cm5zOgotICogVGhl
IG5ldyBpbnN0YW5jZSBvZiAmc3RydWN0IGRybV92cmFtX21tIG9uIHN1Y2Nlc3MsIG9yCi0gKiBh
biBFUlJfUFRSKCktZW5jb2RlZCBlcnJubyBjb2RlIG90aGVyd2lzZS4KLSAqLwotc3RydWN0IGRy
bV92cmFtX21tICpkcm1fdnJhbV9oZWxwZXJfYWxsb2NfbW0oCi0Jc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgdWludDY0X3QgdnJhbV9iYXNlLCBzaXplX3QgdnJhbV9zaXplLAotCWNvbnN0IHN0cnVj
dCBkcm1fdnJhbV9tbV9mdW5jcyAqZnVuY3MpCi17Ci0JaW50IHJldDsKLQotCWlmIChXQVJOX09O
KGRldi0+dnJhbV9tbSkpCi0JCXJldHVybiBkZXYtPnZyYW1fbW07Ci0KLQlkZXYtPnZyYW1fbW0g
PSBremFsbG9jKHNpemVvZigqZGV2LT52cmFtX21tKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFkZXYt
PnZyYW1fbW0pCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCi0JcmV0ID0gZHJtX3ZyYW1f
bW1faW5pdChkZXYtPnZyYW1fbW0sIGRldiwgdnJhbV9iYXNlLCB2cmFtX3NpemUsIGZ1bmNzKTsK
LQlpZiAocmV0KQotCQlnb3RvIGVycl9rZnJlZTsKLQotCXJldHVybiBkZXYtPnZyYW1fbW07Ci0K
LWVycl9rZnJlZToKLQlrZnJlZShkZXYtPnZyYW1fbW0pOwotCWRldi0+dnJhbV9tbSA9IE5VTEw7
Ci0JcmV0dXJuIEVSUl9QVFIocmV0KTsKLX0KLUVYUE9SVF9TWU1CT0woZHJtX3ZyYW1faGVscGVy
X2FsbG9jX21tKTsKLQotLyoqCi0gKiBkcm1fdnJhbV9oZWxwZXJfcmVsZWFzZV9tbSAtIFJlbGVh
c2VzIGEgZGV2aWNlJ3MgaW5zdGFuY2Ugb2YgXAotCSZzdHJ1Y3QgZHJtX3ZyYW1fbW0KLSAqIEBk
ZXY6CXRoZSBEUk0gZGV2aWNlCi0gKi8KLXZvaWQgZHJtX3ZyYW1faGVscGVyX3JlbGVhc2VfbW0o
c3RydWN0IGRybV9kZXZpY2UgKmRldikKLXsKLQlpZiAoIWRldi0+dnJhbV9tbSkKLQkJcmV0dXJu
OwotCi0JZHJtX3ZyYW1fbW1fY2xlYW51cChkZXYtPnZyYW1fbW0pOwotCWtmcmVlKGRldi0+dnJh
bV9tbSk7Ci0JZGV2LT52cmFtX21tID0gTlVMTDsKLX0KLUVYUE9SVF9TWU1CT0woZHJtX3ZyYW1f
aGVscGVyX3JlbGVhc2VfbW0pOwotCi0vKgotICogSGVscGVycyBmb3IgJnN0cnVjdCBmaWxlX29w
ZXJhdGlvbnMKLSAqLwotCi0vKioKLSAqIGRybV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFw
KCkgLSBcCi0JSW1wbGVtZW50cyAmc3RydWN0IGZpbGVfb3BlcmF0aW9ucy5tbWFwKCkKLSAqIEBm
aWxwOgl0aGUgbWFwcGluZydzIGZpbGUgc3RydWN0dXJlCi0gKiBAdm1hOgl0aGUgbWFwcGluZydz
IG1lbW9yeSBhcmVhCi0gKgotICogUmV0dXJuczoKLSAqIDAgb24gc3VjY2Vzcywgb3IKLSAqIGEg
bmVnYXRpdmUgZXJyb3IgY29kZSBvdGhlcndpc2UuCi0gKi8KLWludCBkcm1fdnJhbV9tbV9maWxl
X29wZXJhdGlvbnNfbW1hcCgKLQlzdHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEpCi17Ci0Jc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYgPSBmaWxwLT5wcml2YXRl
X2RhdGE7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGZpbGVfcHJpdi0+bWlub3ItPmRldjsK
LQotCWlmIChXQVJOX09OQ0UoIWRldi0+dnJhbV9tbSwgIlZSQU0gTU0gbm90IGluaXRpYWxpemVk
IikpCi0JCXJldHVybiAtRUlOVkFMOwotCi0JcmV0dXJuIGRybV92cmFtX21tX21tYXAoZmlscCwg
dm1hLCBkZXYtPnZyYW1fbW0pOwotfQotRVhQT1JUX1NZTUJPTChkcm1fdnJhbV9tbV9maWxlX29w
ZXJhdGlvbnNfbW1hcCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaGlzaWxpY29uL2hp
Ym1jL2hpYm1jX2RybV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9oaXNpbGljb24vaGlibWMvaGli
bWNfZHJtX2Rydi5jCmluZGV4IGMxMDMwMDViMGEzMy4uNGY1MmM4M2I5YjRjIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaGlzaWxpY29uL2hpYm1jL2hpYm1jX2RybV9kcnYuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaGlzaWxpY29uL2hpYm1jL2hpYm1jX2RybV9kcnYuYwpAQCAtMjIsNyAr
MjIsNiBAQAogI2luY2x1ZGUgPGRybS9kcm1fcHJpbnQuaD4KICNpbmNsdWRlIDxkcm0vZHJtX3By
b2JlX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fdmJsYW5rLmg+Ci0jaW5jbHVkZSA8ZHJt
L2RybV92cmFtX21tX2hlbHBlci5oPgogCiAjaW5jbHVkZSAiaGlibWNfZHJtX2Rydi5oIgogI2lu
Y2x1ZGUgImhpYm1jX2RybV9yZWdzLmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaGlz
aWxpY29uL2hpYm1jL2hpYm1jX3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL2hpc2lsaWNvbi9oaWJt
Yy9oaWJtY190dG0uYwppbmRleCA5ZjZlNDczZTYyOTUuLjVkNTJjZDc0ODYwMyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2hpc2lsaWNvbi9oaWJtYy9oaWJtY190dG0uYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaGlzaWxpY29uL2hpYm1jL2hpYm1jX3R0bS5jCkBAIC0xNyw3ICsxNyw2IEBA
CiAjaW5jbHVkZSA8ZHJtL2RybV9nZW0uaD4KICNpbmNsdWRlIDxkcm0vZHJtX2dlbV92cmFtX2hl
bHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fcHJpbnQuaD4KLSNpbmNsdWRlIDxkcm0vZHJtX3Zy
YW1fbW1faGVscGVyLmg+CiAKICNpbmNsdWRlICJoaWJtY19kcm1fZHJ2LmgiCiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9tZ2FnMjAwL21nYWcyMDBfZHJ2LmggYi9kcml2ZXJzL2dwdS9k
cm0vbWdhZzIwMC9tZ2FnMjAwX2Rydi5oCmluZGV4IDFjOTNmOGRjMDhjNy4uMzdjMDAzZWQ1N2Mw
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbWdhZzIwMC9tZ2FnMjAwX2Rydi5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9tZ2FnMjAwL21nYWcyMDBfZHJ2LmgKQEAgLTE5LDcgKzE5LDYgQEAK
ICNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fZ2VtLmg+
CiAjaW5jbHVkZSA8ZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuaD4KLSNpbmNsdWRlIDxkcm0vZHJt
X3ZyYW1fbW1faGVscGVyLmg+CiAKICNpbmNsdWRlICJtZ2FnMjAwX3JlZy5oIgogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vdmJveHZpZGVvL3Zib3hfZHJ2LmggYi9kcml2ZXJzL2dwdS9k
cm0vdmJveHZpZGVvL3Zib3hfZHJ2LmgKaW5kZXggZThjYjllZmM2MDg4Li5mYjQzNmVjNzYwZWEg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92Ym94dmlkZW8vdmJveF9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vdmJveHZpZGVvL3Zib3hfZHJ2LmgKQEAgLTIwLDggKzIwLDYgQEAKICNp
bmNsdWRlIDxkcm0vZHJtX2dlbS5oPgogI2luY2x1ZGUgPGRybS9kcm1fZ2VtX3ZyYW1faGVscGVy
Lmg+CiAKLSNpbmNsdWRlIDxkcm0vZHJtX3ZyYW1fbW1faGVscGVyLmg+Ci0KICNpbmNsdWRlICJ2
Ym94dmlkZW9fZ3Vlc3QuaCIKICNpbmNsdWRlICJ2Ym94dmlkZW9fdmJlLmgiCiAjaW5jbHVkZSAi
aGdzbWlfY2hfc2V0dXAuaCIKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9nZW1fdnJhbV9o
ZWxwZXIuaCBiL2luY2x1ZGUvZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuaAppbmRleCA5ZDhiMTM4
YjM4ODEuLjE1MTMzNDlhMjdiMSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9kcm0vZHJtX2dlbV92cmFt
X2hlbHBlci5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuaApAQCAtMyw5
ICszLDEzIEBACiAjaWZuZGVmIERSTV9HRU1fVlJBTV9IRUxQRVJfSAogI2RlZmluZSBEUk1fR0VN
X1ZSQU1fSEVMUEVSX0gKIAorI2luY2x1ZGUgPGRybS9kcm1fZmlsZS5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fZ2VtLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9pb2N0bC5oPgogI2luY2x1ZGUgPGRybS90
dG0vdHRtX2JvX2FwaS5oPgorI2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2RyaXZlci5oPgogI2lu
Y2x1ZGUgPGRybS90dG0vdHRtX3BsYWNlbWVudC5oPgorCiAjaW5jbHVkZSA8bGludXgva2VybmVs
Lmg+IC8qIGZvciBjb250YWluZXJfb2YoKSAqLwogCiBzdHJ1Y3QgZHJtX21vZGVfY3JlYXRlX2R1
bWI7CkBAIC0xNDUsNCArMTQ5LDg2IEBAIGludCBkcm1fZ2VtX3ZyYW1fZHJpdmVyX2R1bWJfbW1h
cF9vZmZzZXQoc3RydWN0IGRybV9maWxlICpmaWxlLAogCS5kdW1iX21hcF9vZmZzZXQJICA9IGRy
bV9nZW1fdnJhbV9kcml2ZXJfZHVtYl9tbWFwX29mZnNldCwgXAogCS5nZW1fcHJpbWVfbW1hcAkJ
ICA9IGRybV9nZW1fcHJpbWVfbW1hcAogCisvKgorICogIFZSQU0gbWVtb3J5IG1hbmFnZXIKKyAq
LworCisvKioKKyAqIHN0cnVjdCBkcm1fdnJhbV9tbSAtIEFuIGluc3RhbmNlIG9mIFZSQU0gTU0K
KyAqIEB2cmFtX2Jhc2U6CUJhc2UgYWRkcmVzcyBvZiB0aGUgbWFuYWdlZCB2aWRlbyBtZW1vcnkK
KyAqIEB2cmFtX3NpemU6CVNpemUgb2YgdGhlIG1hbmFnZWQgdmlkZW8gbWVtb3J5IGluIGJ5dGVz
CisgKiBAYmRldjoJVGhlIFRUTSBCTyBkZXZpY2UuCisgKiBAZnVuY3M6CVRUTSBCTyBmdW5jdGlv
bnMKKyAqCisgKiBUaGUgZmllbGRzICZzdHJ1Y3QgZHJtX3ZyYW1fbW0udnJhbV9iYXNlIGFuZAor
ICogJnN0cnVjdCBkcm1fdnJhbV9tbS52cm1fc2l6ZSBhcmUgbWFuYWdlZCBieSBWUkFNIE1NLCBi
dXQgYXJlCisgKiBhdmFpbGFibGUgZm9yIHB1YmxpYyByZWFkIGFjY2Vzcy4gVXNlIHRoZSBmaWVs
ZAorICogJnN0cnVjdCBkcm1fdnJhbV9tbS5iZGV2IHRvIGFjY2VzcyB0aGUgVFRNIEJPIGRldmlj
ZS4KKyAqLworc3RydWN0IGRybV92cmFtX21tIHsKKwl1aW50NjRfdCB2cmFtX2Jhc2U7CisJc2l6
ZV90IHZyYW1fc2l6ZTsKKworCXN0cnVjdCB0dG1fYm9fZGV2aWNlIGJkZXY7CisKKwljb25zdCBz
dHJ1Y3QgZHJtX3ZyYW1fbW1fZnVuY3MgKmZ1bmNzOworfTsKKworLyoqCisgKiBkcm1fdnJhbV9t
bV9vZl9iZGV2KCkgLSBcCisJUmV0dXJucyB0aGUgY29udGFpbmVyIG9mIHR5cGUgJnN0cnVjdCB0
dG1fYm9fZGV2aWNlIGZvciBmaWVsZCBiZGV2LgorICogQGJkZXY6CXRoZSBUVE0gQk8gZGV2aWNl
CisgKgorICogUmV0dXJuczoKKyAqIFRoZSBjb250YWluaW5nIGluc3RhbmNlIG9mICZzdHJ1Y3Qg
ZHJtX3ZyYW1fbW0KKyAqLworc3RhdGljIGlubGluZSBzdHJ1Y3QgZHJtX3ZyYW1fbW0gKmRybV92
cmFtX21tX29mX2JkZXYoCisJc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYpCit7CisJcmV0dXJu
IGNvbnRhaW5lcl9vZihiZGV2LCBzdHJ1Y3QgZHJtX3ZyYW1fbW0sIGJkZXYpOworfQorCitpbnQg
ZHJtX3ZyYW1fbW1fZGVidWdmc19pbml0KHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKTsKK2ludCBk
cm1fdnJhbV9tbV9pbml0KHN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tLCBzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LAorCQkgICAgIHVpbnQ2NF90IHZyYW1fYmFzZSwgc2l6ZV90IHZyYW1fc2l6ZSwKKwkJ
ICAgICBjb25zdCBzdHJ1Y3QgZHJtX3ZyYW1fbW1fZnVuY3MgKmZ1bmNzKTsKK3ZvaWQgZHJtX3Zy
YW1fbW1fY2xlYW51cChzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSk7CisKK2ludCBkcm1fdnJhbV9t
bV9tbWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKKwkJ
ICAgICBzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSk7CisKKy8qCisgKiBIZWxwZXJzIGZvciBpbnRl
Z3JhdGlvbiB3aXRoIHN0cnVjdCBkcm1fZGV2aWNlCisgKi8KKworc3RydWN0IGRybV92cmFtX21t
ICpkcm1fdnJhbV9oZWxwZXJfYWxsb2NfbW0oCisJc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdWlu
dDY0X3QgdnJhbV9iYXNlLCBzaXplX3QgdnJhbV9zaXplLAorCWNvbnN0IHN0cnVjdCBkcm1fdnJh
bV9tbV9mdW5jcyAqZnVuY3MpOwordm9pZCBkcm1fdnJhbV9oZWxwZXJfcmVsZWFzZV9tbShzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2KTsKKworLyoKKyAqIEhlbHBlcnMgZm9yICZzdHJ1Y3QgZmlsZV9v
cGVyYXRpb25zCisgKi8KKworaW50IGRybV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwKAor
CXN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7CisKKy8qKgor
ICogZGVmaW5lIERSTV9WUkFNX01NX0ZJTEVfT1BFUkFUSU9OUyAtIGRlZmF1bHQgY2FsbGJhY2sg
ZnVuY3Rpb25zIGZvciBcCisJJnN0cnVjdCBmaWxlX29wZXJhdGlvbnMKKyAqCisgKiBEcml2ZXJz
IHRoYXQgdXNlIFZSQU0gTU0gY2FuIHVzZSB0aGlzIG1hY3JvIHRvIGluaXRpYWxpemUKKyAqICZz
dHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHdpdGggZGVmYXVsdCBmdW5jdGlvbnMuCisgKi8KKyNkZWZp
bmUgRFJNX1ZSQU1fTU1fRklMRV9PUEVSQVRJT05TIFwKKwkubGxzZWVrCQk9IG5vX2xsc2Vlaywg
XAorCS5yZWFkCQk9IGRybV9yZWFkLCBcCisJLnBvbGwJCT0gZHJtX3BvbGwsIFwKKwkudW5sb2Nr
ZWRfaW9jdGwgPSBkcm1faW9jdGwsIFwKKwkuY29tcGF0X2lvY3RsCT0gZHJtX2NvbXBhdF9pb2N0
bCwgXAorCS5tbWFwCQk9IGRybV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwLCBcCisJLm9w
ZW4JCT0gZHJtX29wZW4sIFwKKwkucmVsZWFzZQk9IGRybV9yZWxlYXNlIFwKKworCiAjZW5kaWYK
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oIGIvaW5jbHVkZS9k
cm0vZHJtX3ZyYW1fbW1faGVscGVyLmgKaW5kZXggYjNlOTZkMzA0ZjkzLi5lM2I3OWUxM2UxMDYg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oCisrKyBiL2luY2x1
ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oCkBAIC0yOSw4MSArMjksNCBAQCBzdHJ1Y3QgZHJt
X3ZyYW1fbW1fZnVuY3MgewogCQkJICAgIHN0cnVjdCB0dG1fbWVtX3JlZyAqbmV3X21lbSk7CiB9
OwogCi0vKioKLSAqIHN0cnVjdCBkcm1fdnJhbV9tbSAtIEFuIGluc3RhbmNlIG9mIFZSQU0gTU0K
LSAqIEB2cmFtX2Jhc2U6CUJhc2UgYWRkcmVzcyBvZiB0aGUgbWFuYWdlZCB2aWRlbyBtZW1vcnkK
LSAqIEB2cmFtX3NpemU6CVNpemUgb2YgdGhlIG1hbmFnZWQgdmlkZW8gbWVtb3J5IGluIGJ5dGVz
Ci0gKiBAYmRldjoJVGhlIFRUTSBCTyBkZXZpY2UuCi0gKiBAZnVuY3M6CVRUTSBCTyBmdW5jdGlv
bnMKLSAqCi0gKiBUaGUgZmllbGRzICZzdHJ1Y3QgZHJtX3ZyYW1fbW0udnJhbV9iYXNlIGFuZAot
ICogJnN0cnVjdCBkcm1fdnJhbV9tbS52cm1fc2l6ZSBhcmUgbWFuYWdlZCBieSBWUkFNIE1NLCBi
dXQgYXJlCi0gKiBhdmFpbGFibGUgZm9yIHB1YmxpYyByZWFkIGFjY2Vzcy4gVXNlIHRoZSBmaWVs
ZAotICogJnN0cnVjdCBkcm1fdnJhbV9tbS5iZGV2IHRvIGFjY2VzcyB0aGUgVFRNIEJPIGRldmlj
ZS4KLSAqLwotc3RydWN0IGRybV92cmFtX21tIHsKLQl1aW50NjRfdCB2cmFtX2Jhc2U7Ci0Jc2l6
ZV90IHZyYW1fc2l6ZTsKLQotCXN0cnVjdCB0dG1fYm9fZGV2aWNlIGJkZXY7Ci0KLQljb25zdCBz
dHJ1Y3QgZHJtX3ZyYW1fbW1fZnVuY3MgKmZ1bmNzOwotfTsKLQotLyoqCi0gKiBkcm1fdnJhbV9t
bV9vZl9iZGV2KCkgLSBcCi0JUmV0dXJucyB0aGUgY29udGFpbmVyIG9mIHR5cGUgJnN0cnVjdCB0
dG1fYm9fZGV2aWNlIGZvciBmaWVsZCBiZGV2LgotICogQGJkZXY6CXRoZSBUVE0gQk8gZGV2aWNl
Ci0gKgotICogUmV0dXJuczoKLSAqIFRoZSBjb250YWluaW5nIGluc3RhbmNlIG9mICZzdHJ1Y3Qg
ZHJtX3ZyYW1fbW0KLSAqLwotc3RhdGljIGlubGluZSBzdHJ1Y3QgZHJtX3ZyYW1fbW0gKmRybV92
cmFtX21tX29mX2JkZXYoCi0Jc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYpCi17Ci0JcmV0dXJu
IGNvbnRhaW5lcl9vZihiZGV2LCBzdHJ1Y3QgZHJtX3ZyYW1fbW0sIGJkZXYpOwotfQotCi1pbnQg
ZHJtX3ZyYW1fbW1fZGVidWdmc19pbml0KHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKTsKLWludCBk
cm1fdnJhbV9tbV9pbml0KHN0cnVjdCBkcm1fdnJhbV9tbSAqdm1tLCBzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LAotCQkgICAgIHVpbnQ2NF90IHZyYW1fYmFzZSwgc2l6ZV90IHZyYW1fc2l6ZSwKLQkJ
ICAgICBjb25zdCBzdHJ1Y3QgZHJtX3ZyYW1fbW1fZnVuY3MgKmZ1bmNzKTsKLXZvaWQgZHJtX3Zy
YW1fbW1fY2xlYW51cChzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSk7Ci0KLWludCBkcm1fdnJhbV9t
bV9tbWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKLQkJ
ICAgICBzdHJ1Y3QgZHJtX3ZyYW1fbW0gKnZtbSk7Ci0KLS8qCi0gKiBIZWxwZXJzIGZvciBpbnRl
Z3JhdGlvbiB3aXRoIHN0cnVjdCBkcm1fZGV2aWNlCi0gKi8KLQotc3RydWN0IGRybV92cmFtX21t
ICpkcm1fdnJhbV9oZWxwZXJfYWxsb2NfbW0oCi0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdWlu
dDY0X3QgdnJhbV9iYXNlLCBzaXplX3QgdnJhbV9zaXplLAotCWNvbnN0IHN0cnVjdCBkcm1fdnJh
bV9tbV9mdW5jcyAqZnVuY3MpOwotdm9pZCBkcm1fdnJhbV9oZWxwZXJfcmVsZWFzZV9tbShzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2KTsKLQotLyoKLSAqIEhlbHBlcnMgZm9yICZzdHJ1Y3QgZmlsZV9v
cGVyYXRpb25zCi0gKi8KLQotaW50IGRybV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwKAot
CXN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7Ci0KLS8qKgot
ICogZGVmaW5lIERSTV9WUkFNX01NX0ZJTEVfT1BFUkFUSU9OUyAtIGRlZmF1bHQgY2FsbGJhY2sg
ZnVuY3Rpb25zIGZvciBcCi0JJnN0cnVjdCBmaWxlX29wZXJhdGlvbnMKLSAqCi0gKiBEcml2ZXJz
IHRoYXQgdXNlIFZSQU0gTU0gY2FuIHVzZSB0aGlzIG1hY3JvIHRvIGluaXRpYWxpemUKLSAqICZz
dHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHdpdGggZGVmYXVsdCBmdW5jdGlvbnMuCi0gKi8KLSNkZWZp
bmUgRFJNX1ZSQU1fTU1fRklMRV9PUEVSQVRJT05TIFwKLQkubGxzZWVrCQk9IG5vX2xsc2Vlaywg
XAotCS5yZWFkCQk9IGRybV9yZWFkLCBcCi0JLnBvbGwJCT0gZHJtX3BvbGwsIFwKLQkudW5sb2Nr
ZWRfaW9jdGwgPSBkcm1faW9jdGwsIFwKLQkuY29tcGF0X2lvY3RsCT0gZHJtX2NvbXBhdF9pb2N0
bCwgXAotCS5tbWFwCQk9IGRybV92cmFtX21tX2ZpbGVfb3BlcmF0aW9uc19tbWFwLCBcCi0JLm9w
ZW4JCT0gZHJtX29wZW4sIFwKLQkucmVsZWFzZQk9IGRybV9yZWxlYXNlIFwKLQogI2VuZGlmCi0t
IAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
