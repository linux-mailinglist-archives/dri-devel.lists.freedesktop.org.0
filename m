Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3DB7F5246F
	for <lists+dri-devel@lfdr.de>; Tue, 25 Jun 2019 09:28:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0D09C6E046;
	Tue, 25 Jun 2019 07:27:39 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com
 [148.163.156.1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 552B389819
 for <dri-devel@lists.freedesktop.org>; Tue, 25 Jun 2019 03:19:36 +0000 (UTC)
Received: from pps.filterd (m0098404.ppops.net [127.0.0.1])
 by mx0a-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x5P36hht098663
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:36 -0400
Received: from e06smtp07.uk.ibm.com (e06smtp07.uk.ibm.com [195.75.94.103])
 by mx0a-001b2d01.pphosted.com with ESMTP id 2tbagtj7se-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:35 -0400
Received: from localhost
 by e06smtp07.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Tue, 25 Jun 2019 04:19:33 +0100
Received: from b06cxnps4075.portsmouth.uk.ibm.com (9.149.109.197)
 by e06smtp07.uk.ibm.com (192.168.101.137) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Tue, 25 Jun 2019 04:19:24 +0100
Received: from b06wcsmtp001.portsmouth.uk.ibm.com
 (b06wcsmtp001.portsmouth.uk.ibm.com [9.149.105.160])
 by b06cxnps4075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x5P3JNlS54657122
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Tue, 25 Jun 2019 03:19:23 GMT
Received: from b06wcsmtp001.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 496AFA405F;
 Tue, 25 Jun 2019 03:19:23 +0000 (GMT)
Received: from b06wcsmtp001.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 4EE9DA4067;
 Tue, 25 Jun 2019 03:19:22 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by b06wcsmtp001.portsmouth.uk.ibm.com (Postfix) with ESMTP;
 Tue, 25 Jun 2019 03:19:22 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 93295A03B6;
 Tue, 25 Jun 2019 13:19:19 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v4 7/7] lib/hexdump.c: Optionally retain byte ordering
Date: Tue, 25 Jun 2019 13:17:26 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190625031726.12173-1-alastair@au1.ibm.com>
References: <20190625031726.12173-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19062503-0028-0000-0000-0000037D42B6
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19062503-0029-0000-0000-0000243D6256
Message-Id: <20190625031726.12173-8-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-06-25_02:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1906250024
X-Mailman-Approved-At: Tue, 25 Jun 2019 07:27:07 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpUaGUgYmVoYXZp
b3VyIG9mIGhleGR1bXAgZ3JvdXBzIGlzIHRvIHByaW50IHRoZSBkYXRhIG91dCBhcyBpZgppdCB3
YXMgYSBuYXRpdmUtZW5kaWFuIG51bWJlci4KClRoaXMgcGF0Y2ggdHdlYWtzIHRoZSBkb2N1bWVu
dGF0aW9uIHRvIG1ha2UgdGhpcyBjbGVhciwgYW5kIGFsc28KYWRkcyB0aGUgSEVYRFVNUF9SRVRB
SU5fQllURV9PUkRFUiBmbGFnIHRvIGFsbG93IGdyb3VwcyBvZgptdWx0aXBsZSBieXRlcyB0byBi
ZSBwcmludGVkIHdpdGhvdXQgYWZmZWN0aW5nIHRoZSBvcmRlcmluZwpvZiB0aGUgcHJpbnRlZCBi
eXRlcy4KClNpZ25lZC1vZmYtYnk6IEFsYXN0YWlyIEQnU2lsdmEgPGFsYXN0YWlyQGQtc2lsdmEu
b3JnPgotLS0KIGluY2x1ZGUvbGludXgvcHJpbnRrLmggfCAgMSArCiBsaWIvaGV4ZHVtcC5jICAg
ICAgICAgIHwgMzAgKysrKysrKysrKysrKysrKy0tLS0KIGxpYi90ZXN0X2hleGR1bXAuYyAgICAg
fCA2MiArKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0KIDMgZmlsZXMg
Y2hhbmdlZCwgNjggaW5zZXJ0aW9ucygrKSwgMjUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9wcmludGsuaCBiL2luY2x1ZGUvbGludXgvcHJpbnRrLmgKaW5kZXggMWQw
ODIyOTFmYWNmLi5lZDFhNzlhYTk2OTUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcHJpbnRr
LmgKKysrIGIvaW5jbHVkZS9saW51eC9wcmludGsuaApAQCAtNDkxLDYgKzQ5MSw3IEBAIGVudW0g
ewogI2RlZmluZSBIRVhEVU1QXzJfR1JQX1NQQUNFUwkJQklUKDUpCiAjZGVmaW5lIEhFWERVTVBf
NF9HUlBfU1BBQ0VTCQlCSVQoNikKICNkZWZpbmUgSEVYRFVNUF84X0dSUF9TUEFDRVMJCUJJVCg3
KQorI2RlZmluZSBIRVhEVU1QX1JFVEFJTl9CWVRFX09SREVSCUJJVCg4KQogCiBleHRlcm4gaW50
IGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoY29uc3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBpbnQg
cm93c2l6ZSwKIAkJCSAgICAgIGludCBncm91cHNpemUsIGNoYXIgKmxpbmVidWYsIHNpemVfdCBs
aW5lYnVmbGVuLApkaWZmIC0tZ2l0IGEvbGliL2hleGR1bXAuYyBiL2xpYi9oZXhkdW1wLmMKaW5k
ZXggZTA5ZTNjZjhlNTk1Li4yOTAyNGVjY2Y1ZGEgMTAwNjQ0Ci0tLSBhL2xpYi9oZXhkdW1wLmMK
KysrIGIvbGliL2hleGR1bXAuYwpAQCAtMTI3LDcgKzEyNyw4IEBAIHN0YXRpYyB2b2lkIHNlcGFy
YXRvcl9wYXJhbWV0ZXJzKHU2NCBmbGFncywgaW50IGdyb3Vwc2l6ZSwgaW50ICpzZXBfY2hhcnMs
CiAgKiBAYnVmOiBkYXRhIGJsb2IgdG8gZHVtcAogICogQGxlbjogbnVtYmVyIG9mIGJ5dGVzIGlu
IHRoZSBAYnVmCiAgKiBAcm93c2l6ZTogbnVtYmVyIG9mIGJ5dGVzIHRvIHByaW50IHBlciBsaW5l
OyBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgZ3JvdXBzaXplCi0gKiBAZ3JvdXBzaXplOiBudW1iZXIg
b2YgYnl0ZXMgdG8gcHJpbnQgYXQgYSB0aW1lICgxLCAyLCA0LCA4OyBkZWZhdWx0ID0gMSkKKyAq
IEBncm91cHNpemU6IG51bWJlciBvZiBieXRlcyB0byBjb252ZXJ0IHRvIGEgbmF0aXZlIGVuZGlh
biBudW1iZXIgYW5kIHByaW50OgorICogCSAgICAgICAxLCAyLCA0LCA4OyBkZWZhdWx0ID0gMQog
ICogQGxpbmVidWY6IHdoZXJlIHRvIHB1dCB0aGUgY29udmVydGVkIGRhdGEKICAqIEBsaW5lYnVm
bGVuOiB0b3RhbCBzaXplIG9mIEBsaW5lYnVmLCBpbmNsdWRpbmcgc3BhY2UgZm9yIHRlcm1pbmF0
aW5nIE5VTAogICogQGZsYWdzOiBBIGJpdHdpc2UgT1Igb2YgdGhlIGZvbGxvd2luZyBmbGFnczoK
QEAgLTEzOCw2ICsxMzksOSBAQCBzdGF0aWMgdm9pZCBzZXBhcmF0b3JfcGFyYW1ldGVycyh1NjQg
ZmxhZ3MsIGludCBncm91cHNpemUsIGludCAqc2VwX2NoYXJzLAogICoJSEVYRFVNUF8yX0dSUF9T
UEFDRVM6CQlpbnNlcnQgYSAnICcgYWZ0ZXIgZXZlcnkgMiBncm91cHMKICAqCUhFWERVTVBfNF9H
UlBfU1BBQ0VTOgkJaW5zZXJ0IGEgJyAnIGFmdGVyIGV2ZXJ5IDQgZ3JvdXBzCiAgKglIRVhEVU1Q
XzhfR1JQX1NQQUNFUzoJCWluc2VydCBhICcgJyBhZnRlciBldmVyeSA4IGdyb3VwcworICoJSEVY
RFVNUF9SRVRBSU5fQllURV9PUkRFUjoJUmV0YWluIHRoZSBieXRlIG9yZGVyaW5nIG9mIGdyb3Vw
cworICoJCQkJCWluc3RlYWQgb2YgdHJlYXRpbmcgZWFjaCBncm91cCBhcyBhCisgKgkJCQkJbmF0
aXZlLWVuZGlhbiBudW1iZXIKICAqCiAgKiBoZXhfZHVtcF90b19idWZmZXIoKSB3b3JrcyBvbiBv
bmUgImxpbmUiIG9mIG91dHB1dCBhdCBhIHRpbWUsIGNvbnZlcnRpbmcKICAqIDxncm91cHNpemU+
IGJ5dGVzIG9mIGlucHV0IHRvIGhleGFkZWNpbWFsIChhbmQgb3B0aW9uYWxseSBwcmludGFibGUg
QVNDSUkpCkBAIC0xNzIsNiArMTc2LDcgQEAgaW50IGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoY29u
c3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBpbnQgcm93c2l6ZSwKIAlpbnQgcmV0OwogCWludCBz
ZXBfY2hhcnMgPSAwOwogCWNoYXIgc2VwID0gMDsKKwlib29sIGJpZ19lbmRpYW4gPSAoZmxhZ3Mg
JiBIRVhEVU1QX1JFVEFJTl9CWVRFX09SREVSKSA/IDEgOiAwOwogCiAJaWYgKCFpc19wb3dlcl9v
Zl8yKGdyb3Vwc2l6ZSkgfHwgZ3JvdXBzaXplID4gOCkKIAkJZ3JvdXBzaXplID0gMTsKQEAgLTIw
MywxMCArMjA4LDEzIEBAIGludCBoZXhfZHVtcF90b19idWZmZXJfZXh0KGNvbnN0IHZvaWQgKmJ1
Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsCiAJCWNvbnN0IHU2NCAqcHRyOCA9IGJ1ZjsKIAog
CQlmb3IgKGogPSAwOyBqIDwgbmdyb3VwczsgaisrKSB7CisJCQl1NjQgdmFsID0gYmlnX2VuZGlh
biA/CisJCQkJCWJlNjRfdG9fY3B1KGdldF91bmFsaWduZWQocHRyOCArIGopKSA6CisJCQkJCWdl
dF91bmFsaWduZWQocHRyOCArIGopOwogCQkJcmV0ID0gc25wcmludGYobGluZWJ1ZiArIGx4LCBs
aW5lYnVmbGVuIC0gbHgsCiAJCQkJICAgICAgICIlcyUxNi4xNmxseCIsCiAJCQkJICAgICAgIGog
PyBncm91cF9zZXBhcmF0b3IoaiwgZmxhZ3MpIDogIiIsCi0JCQkJICAgICAgIGdldF91bmFsaWdu
ZWQocHRyOCArIGopKTsKKwkJCQkgICAgICAgdmFsKTsKIAkJCWlmIChyZXQgPj0gbGluZWJ1Zmxl
biAtIGx4KQogCQkJCWdvdG8gb3ZlcmZsb3cxOwogCQkJbHggKz0gcmV0OwpAQCAtMjE1LDEwICsy
MjMsMTQgQEAgaW50IGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoY29uc3Qgdm9pZCAqYnVmLCBzaXpl
X3QgbGVuLCBpbnQgcm93c2l6ZSwKIAkJY29uc3QgdTMyICpwdHI0ID0gYnVmOwogCiAJCWZvciAo
aiA9IDA7IGogPCBuZ3JvdXBzOyBqKyspIHsKKwkJCXUzMiB2YWwgPSBiaWdfZW5kaWFuID8KKwkJ
CQkJYmUzMl90b19jcHUoZ2V0X3VuYWxpZ25lZChwdHI0ICsgaikpIDoKKwkJCQkJZ2V0X3VuYWxp
Z25lZChwdHI0ICsgaik7CisKIAkJCXJldCA9IHNucHJpbnRmKGxpbmVidWYgKyBseCwgbGluZWJ1
ZmxlbiAtIGx4LAogCQkJCSAgICAgICAiJXMlOC44eCIsCiAJCQkJICAgICAgIGogPyBncm91cF9z
ZXBhcmF0b3IoaiwgZmxhZ3MpIDogIiIsCi0JCQkJICAgICAgIGdldF91bmFsaWduZWQocHRyNCAr
IGopKTsKKwkJCQkgICAgICAgdmFsKTsKIAkJCWlmIChyZXQgPj0gbGluZWJ1ZmxlbiAtIGx4KQog
CQkJCWdvdG8gb3ZlcmZsb3cxOwogCQkJbHggKz0gcmV0OwpAQCAtMjI3LDEwICsyMzksMTQgQEAg
aW50IGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoY29uc3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBp
bnQgcm93c2l6ZSwKIAkJY29uc3QgdTE2ICpwdHIyID0gYnVmOwogCiAJCWZvciAoaiA9IDA7IGog
PCBuZ3JvdXBzOyBqKyspIHsKKwkJCXUxNiB2YWwgPSBiaWdfZW5kaWFuID8KKwkJCQkJYmUxNl90
b19jcHUoZ2V0X3VuYWxpZ25lZChwdHIyICsgaikpIDoKKwkJCQkJZ2V0X3VuYWxpZ25lZChwdHIy
ICsgaik7CisKIAkJCXJldCA9IHNucHJpbnRmKGxpbmVidWYgKyBseCwgbGluZWJ1ZmxlbiAtIGx4
LAogCQkJCSAgICAgICAiJXMlNC40eCIsCiAJCQkJICAgICAgIGogPyBncm91cF9zZXBhcmF0b3Io
aiwgZmxhZ3MpIDogIiIsCi0JCQkJICAgICAgIGdldF91bmFsaWduZWQocHRyMiArIGopKTsKKwkJ
CQkgICAgICAgdmFsKTsKIAkJCWlmIChyZXQgPj0gbGluZWJ1ZmxlbiAtIGx4KQogCQkJCWdvdG8g
b3ZlcmZsb3cxOwogCQkJbHggKz0gcmV0OwpAQCAtMzMyLDcgKzM0OCw4IEBAIHN0YXRpYyB2b2lk
IGFubm91bmNlX3NraXBwZWQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9z
dHIsCiAgKiBAcHJlZml4X3R5cGU6IGNvbnRyb2xzIHdoZXRoZXIgcHJlZml4IG9mIGFuIG9mZnNl
dCwgYWRkcmVzcywgb3Igbm9uZQogICogIGlzIHByaW50ZWQgKCVEVU1QX1BSRUZJWF9PRkZTRVQs
ICVEVU1QX1BSRUZJWF9BRERSRVNTLCAlRFVNUF9QUkVGSVhfTk9ORSkKICAqIEByb3dzaXplOiBu
dW1iZXIgb2YgYnl0ZXMgdG8gcHJpbnQgcGVyIGxpbmU7IG11c3QgYmUgYSBtdWx0aXBsZSBvZiBn
cm91cHNpemUKLSAqIEBncm91cHNpemU6IG51bWJlciBvZiBieXRlcyB0byBwcmludCBhdCBhIHRp
bWUgKDEsIDIsIDQsIDg7IGRlZmF1bHQgPSAxKQorICogQGdyb3Vwc2l6ZTogbnVtYmVyIG9mIGJ5
dGVzIHRvIGNvbnZlcnQgdG8gYSBuYXRpdmUgZW5kaWFuIG51bWJlciBhbmQgcHJpbnQ6CisgKiAJ
ICAgICAgIDEsIDIsIDQsIDg7IGRlZmF1bHQgPSAxCiAgKiBAYnVmOiBkYXRhIGJsb2IgdG8gZHVt
cAogICogQGxlbjogbnVtYmVyIG9mIGJ5dGVzIGluIHRoZSBAYnVmCiAgKiBAYXNjaWk6IGluY2x1
ZGUgQVNDSUkgYWZ0ZXIgdGhlIGhleCBvdXRwdXQKQEAgLTM0Myw2ICszNjAsOSBAQCBzdGF0aWMg
dm9pZCBhbm5vdW5jZV9za2lwcGVkKGNvbnN0IGNoYXIgKmxldmVsLCBjb25zdCBjaGFyICpwcmVm
aXhfc3RyLAogICoJSEVYRFVNUF8yX0dSUF9MSU5FUzoJCWluc2VydCBhICd8JyBhZnRlciBldmVy
eSAyIGdyb3VwcwogICoJSEVYRFVNUF80X0dSUF9MSU5FUzoJCWluc2VydCBhICd8JyBhZnRlciBl
dmVyeSA0IGdyb3VwcwogICoJSEVYRFVNUF84X0dSUF9MSU5FUzoJCWluc2VydCBhICd8JyBhZnRl
ciBldmVyeSA4IGdyb3VwcworICoJSEVYRFVNUF9SRVRBSU5fQllURV9PUkRFUjoJUmV0YWluIHRo
ZSBieXRlIG9yZGVyaW5nIG9mIGdyb3VwcworICoJCQkJCWluc3RlYWQgb2YgdHJlYXRpbmcgZWFj
aCBncm91cCBhcyBhCisgKgkJCQkJbmF0aXZlLWVuZGlhbiBudW1iZXIKICAqCiAgKiBHaXZlbiBh
IGJ1ZmZlciBvZiB1OCBkYXRhLCBwcmludF9oZXhfZHVtcCgpIHByaW50cyBhIGhleCArIEFTQ0lJ
IGR1bXAKICAqIHRvIHRoZSBrZXJuZWwgbG9nIGF0IHRoZSBzcGVjaWZpZWQga2VybmVsIGxvZyBs
ZXZlbCwgd2l0aCBhbiBvcHRpb25hbApkaWZmIC0tZ2l0IGEvbGliL3Rlc3RfaGV4ZHVtcC5jIGIv
bGliL3Rlc3RfaGV4ZHVtcC5jCmluZGV4IGFkNDMyMTg0MzdmMS4uZDJjZmNiM2UyZDJiIDEwMDY0
NAotLS0gYS9saWIvdGVzdF9oZXhkdW1wLmMKKysrIGIvbGliL3Rlc3RfaGV4ZHVtcC5jCkBAIC05
OCwxNCArOTgsMTUgQEAgc3RhdGljIHVuc2lnbmVkIGZhaWxlZF90ZXN0cyBfX2luaXRkYXRhOwog
CiBzdGF0aWMgdm9pZCBfX2luaXQgdGVzdF9oZXhkdW1wX3ByZXBhcmVfdGVzdChzaXplX3QgbGVu
LCBpbnQgcm93c2l6ZSwKIAkJCQkJICAgICBpbnQgZ3JvdXBzaXplLCBjaGFyICp0ZXN0LAotCQkJ
CQkgICAgIHNpemVfdCB0ZXN0bGVuLCBib29sIGFzY2lpKQorCQkJCQkgICAgIHNpemVfdCB0ZXN0
bGVuLCB1NjQgZmxhZ3MpCiB7CiAJY2hhciAqcDsKIAljb25zdCBjaGFyICogY29uc3QgKnJlc3Vs
dDsKIAlzaXplX3QgbCA9IGxlbjsKIAlpbnQgZ3MgPSBncm91cHNpemUsIHJzID0gcm93c2l6ZTsK
IAl1bnNpZ25lZCBpbnQgaTsKLQljb25zdCBib29sIGlzX2JlID0gSVNfRU5BQkxFRChDT05GSUdf
Q1BVX0JJR19FTkRJQU4pOworCWNvbnN0IGJvb2wgaXNfYmUgPSBJU19FTkFCTEVEKENPTkZJR19D
UFVfQklHX0VORElBTikgfHwKKwkJCShmbGFncyAmIEhFWERVTVBfUkVUQUlOX0JZVEVfT1JERVIp
OwogCiAJaWYgKGwgPiBycykKIAkJbCA9IHJzOwpAQCAtMTQyLDcgKzE0Myw3IEBAIHN0YXRpYyB2
b2lkIF9faW5pdCB0ZXN0X2hleGR1bXBfcHJlcGFyZV90ZXN0KHNpemVfdCBsZW4sIGludCByb3dz
aXplLAogCQlwLS07CiAKIAkvKiBBU0NJSSBwYXJ0ICovCi0JaWYgKGFzY2lpKSB7CisJaWYgKGZs
YWdzICYgSEVYRFVNUF9BU0NJSSkgewogCQlkbyB7CiAJCQkqcCsrID0gJyAnOwogCQl9IHdoaWxl
IChwIDwgdGVzdCArIHJzICogMiArIHJzIC8gZ3MgKyAxKTsKQEAgLTE1Nyw3ICsxNTgsNyBAQCBz
dGF0aWMgdm9pZCBfX2luaXQgdGVzdF9oZXhkdW1wX3ByZXBhcmVfdGVzdChzaXplX3QgbGVuLCBp
bnQgcm93c2l6ZSwKICNkZWZpbmUgVEVTVF9IRVhEVU1QX0JVRl9TSVpFCQkoNjQgKiAzICsgMiAr
IDY0ICsgMSkKIAogc3RhdGljIHZvaWQgX19pbml0IHRlc3RfaGV4ZHVtcChzaXplX3QgbGVuLCBp
bnQgcm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKLQkJCQlib29sIGFzY2lpKQorCQkJCXU2NCBmbGFn
cykKIHsKIAljaGFyIHRlc3RbVEVTVF9IRVhEVU1QX0JVRl9TSVpFXTsKIAljaGFyIHJlYWxbVEVT
VF9IRVhEVU1QX0JVRl9TSVpFXTsKQEAgLTE2NiwxMiArMTY3LDExIEBAIHN0YXRpYyB2b2lkIF9f
aW5pdCB0ZXN0X2hleGR1bXAoc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsIGludCBncm91cHNpemUs
CiAKIAltZW1zZXQocmVhbCwgRklMTF9DSEFSLCBzaXplb2YocmVhbCkpOwogCWhleF9kdW1wX3Rv
X2J1ZmZlcl9leHQoZGF0YV9iLCBsZW4sIHJvd3NpemUsIGdyb3Vwc2l6ZSwKLQkJCSAgICAgICBy
ZWFsLCBzaXplb2YocmVhbCksCi0JCQkgICAgICAgYXNjaWkgPyBIRVhEVU1QX0FTQ0lJIDogMCk7
CisJCQlyZWFsLCBzaXplb2YocmVhbCksIGZsYWdzKTsKIAogCW1lbXNldCh0ZXN0LCBGSUxMX0NI
QVIsIHNpemVvZih0ZXN0KSk7CiAJdGVzdF9oZXhkdW1wX3ByZXBhcmVfdGVzdChsZW4sIHJvd3Np
emUsIGdyb3Vwc2l6ZSwgdGVzdCwgc2l6ZW9mKHRlc3QpLAotCQkJCSAgYXNjaWkpOworCQkJCSAg
ZmxhZ3MpOwogCiAJaWYgKG1lbWNtcCh0ZXN0LCByZWFsLCBURVNUX0hFWERVTVBfQlVGX1NJWkUp
KSB7CiAJCXByX2VycigiTGVuOiAlenUgcm93OiAlZCBncm91cDogJWRcbiIsIGxlbiwgcm93c2l6
ZSwgZ3JvdXBzaXplKTsKQEAgLTE5NCw3ICsxOTQsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgdGVz
dF9oZXhkdW1wX3NldChpbnQgcm93c2l6ZSwgYm9vbCBhc2NpaSkKIAogc3RhdGljIHZvaWQgX19p
bml0IHRlc3RfaGV4ZHVtcF9vdmVyZmxvdyhzaXplX3QgYnVmbGVuLCBzaXplX3QgbGVuLAogCQkJ
CQkgaW50IHJvd3NpemUsIGludCBncm91cHNpemUsCi0JCQkJCSBib29sIGFzY2lpKQorCQkJCQkg
dTY0IGZsYWdzKQogewogCWNoYXIgdGVzdFtURVNUX0hFWERVTVBfQlVGX1NJWkVdOwogCWNoYXIg
YnVmW1RFU1RfSEVYRFVNUF9CVUZfU0laRV07CkBAIC0yMDYsOCArMjA2LDcgQEAgc3RhdGljIHZv
aWQgX19pbml0IHRlc3RfaGV4ZHVtcF9vdmVyZmxvdyhzaXplX3QgYnVmbGVuLCBzaXplX3QgbGVu
LAogCW1lbXNldChidWYsIEZJTExfQ0hBUiwgc2l6ZW9mKGJ1ZikpOwogCiAJcmMgPSBoZXhfZHVt
cF90b19idWZmZXJfZXh0KGRhdGFfYiwgbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0JCQkJICAg
IGJ1ZiwgYnVmbGVuLAotCQkJCSAgICBhc2NpaSA/IEhFWERVTVBfQVNDSUkgOiAwKTsKKwkJCQkg
ICAgYnVmLCBidWZsZW4sIGZsYWdzKTsKIAogCS8qCiAJICogQ2FsbGVyIG11c3QgcHJvdmlkZSB0
aGUgZGF0YSBsZW5ndGggbXVsdGlwbGUgb2YgZ3JvdXBzaXplLiBUaGUKQEAgLTIyNCwxMiArMjIz
LDEyIEBAIHN0YXRpYyB2b2lkIF9faW5pdCB0ZXN0X2hleGR1bXBfb3ZlcmZsb3coc2l6ZV90IGJ1
Zmxlbiwgc2l6ZV90IGxlbiwKIAkJICAtIDEgLyogbm8gdHJhaWxpbmcgc3BhY2UgKi87CiAJfQog
Ci0JZXhwZWN0ZWRfbGVuID0gKGFzY2lpKSA/IGFzY2lpX2xlbiA6IGhleF9sZW47CisJZXhwZWN0
ZWRfbGVuID0gKGZsYWdzICYgSEVYRFVNUF9BU0NJSSkgPyBhc2NpaV9sZW4gOiBoZXhfbGVuOwog
CiAJZmlsbF9wb2ludCA9IG1pbl90KGludCwgZXhwZWN0ZWRfbGVuICsgMSwgYnVmbGVuKTsKIAlp
ZiAoYnVmbGVuKSB7CiAJCXRlc3RfaGV4ZHVtcF9wcmVwYXJlX3Rlc3QobGVuLCByb3dzaXplLCBn
cm91cHNpemUsIHRlc3QsCi0JCQkJCSAgc2l6ZW9mKHRlc3QpLCBhc2NpaSk7CisJCQkJCSAgc2l6
ZW9mKHRlc3QpLCBmbGFncyk7CiAJCXRlc3RbZmlsbF9wb2ludCAtIDFdID0gJ1wwJzsKIAl9CiAJ
bWVtc2V0KHRlc3QgKyBmaWxsX3BvaW50LCBGSUxMX0NIQVIsIHNpemVvZih0ZXN0KSAtIGZpbGxf
cG9pbnQpOwpAQCAtMjM5LDggKzIzOCw4IEBAIHN0YXRpYyB2b2lkIF9faW5pdCB0ZXN0X2hleGR1
bXBfb3ZlcmZsb3coc2l6ZV90IGJ1Zmxlbiwgc2l6ZV90IGxlbiwKIAlidWZbc2l6ZW9mKGJ1Zikg
LSAxXSA9ICdcMCc7CiAKIAlpZiAoIW1hdGNoKSB7Ci0JCXByX2Vycigicm93c2l6ZTogJXUgZ3Jv
dXBzaXplOiAldSBhc2NpaTogJWQgTGVuOiAlenUgYnVmbGVuOiAlenUgc3RybGVuOiAlenVcbiIs
Ci0JCQlyb3dzaXplLCBncm91cHNpemUsIGFzY2lpLCBsZW4sIGJ1ZmxlbiwKKwkJcHJfZXJyKCJy
b3dzaXplOiAldSBncm91cHNpemU6ICV1IGZsYWdzOiAlbGx4IExlbjogJXp1IGJ1ZmxlbjogJXp1
IHN0cmxlbjogJXp1XG4iLAorCQkJcm93c2l6ZSwgZ3JvdXBzaXplLCBmbGFncywgbGVuLCBidWZs
ZW4sCiAJCQlzdHJubGVuKGJ1Ziwgc2l6ZW9mKGJ1ZikpKTsKIAkJcHJfZXJyKCJSZXN1bHQ6ICVk
ICclLS4qcydcbiIsIHJjLCAoaW50KWJ1ZmxlbiwgYnVmKTsKIAkJcHJfZXJyKCJFeHBlY3Q6ICVk
ICclLS4qcydcbiIsIGV4cGVjdGVkX2xlbiwgKGludClidWZsZW4sIHRlc3QpOwpAQCAtMjQ5LDcg
KzI0OCw3IEBAIHN0YXRpYyB2b2lkIF9faW5pdCB0ZXN0X2hleGR1bXBfb3ZlcmZsb3coc2l6ZV90
IGJ1Zmxlbiwgc2l6ZV90IGxlbiwKIAl9CiB9CiAKLXN0YXRpYyB2b2lkIF9faW5pdCB0ZXN0X2hl
eGR1bXBfb3ZlcmZsb3dfc2V0KHNpemVfdCBidWZsZW4sIGJvb2wgYXNjaWkpCitzdGF0aWMgdm9p
ZCBfX2luaXQgdGVzdF9oZXhkdW1wX292ZXJmbG93X3NldChzaXplX3QgYnVmbGVuLCB1NjQgZmxh
Z3MpCiB7CiAJdW5zaWduZWQgaW50IGkgPSAwOwogCWludCBycyA9IChnZXRfcmFuZG9tX2ludCgp
ICUgNCArIDEpICogMTY7CkBAIC0yNTgsNyArMjU3LDcgQEAgc3RhdGljIHZvaWQgX19pbml0IHRl
c3RfaGV4ZHVtcF9vdmVyZmxvd19zZXQoc2l6ZV90IGJ1ZmxlbiwgYm9vbCBhc2NpaSkKIAkJaW50
IGdzID0gMSA8PCBpOwogCQlzaXplX3QgbGVuID0gZ2V0X3JhbmRvbV9pbnQoKSAlIHJzICsgZ3M7
CiAKLQkJdGVzdF9oZXhkdW1wX292ZXJmbG93KGJ1Zmxlbiwgcm91bmRkb3duKGxlbiwgZ3MpLCBy
cywgZ3MsIGFzY2lpKTsKKwkJdGVzdF9oZXhkdW1wX292ZXJmbG93KGJ1Zmxlbiwgcm91bmRkb3du
KGxlbiwgZ3MpLCBycywgZ3MsIGZsYWdzKTsKIAl9IHdoaWxlIChpKysgPCAzKTsKIH0KIApAQCAt
MjY2LDIwICsyNjUsNDMgQEAgc3RhdGljIGludCBfX2luaXQgdGVzdF9oZXhkdW1wX2luaXQodm9p
ZCkKIHsKIAl1bnNpZ25lZCBpbnQgaTsKIAlpbnQgcm93c2l6ZTsKKwl1NjQgZmxhZ3M7CiAKKwlm
bGFncyA9IDA7CiAJcm93c2l6ZSA9IChnZXRfcmFuZG9tX2ludCgpICUgNCArIDEpICogMTY7CiAJ
Zm9yIChpID0gMDsgaSA8IDE2OyBpKyspCi0JCXRlc3RfaGV4ZHVtcF9zZXQocm93c2l6ZSwgZmFs
c2UpOworCQl0ZXN0X2hleGR1bXBfc2V0KHJvd3NpemUsIGZsYWdzKTsKIAorCWZsYWdzID0gSEVY
RFVNUF9BU0NJSTsKIAlyb3dzaXplID0gKGdldF9yYW5kb21faW50KCkgJSA0ICsgMSkgKiAxNjsK
IAlmb3IgKGkgPSAwOyBpIDwgMTY7IGkrKykKLQkJdGVzdF9oZXhkdW1wX3NldChyb3dzaXplLCB0
cnVlKTsKKwkJdGVzdF9oZXhkdW1wX3NldChyb3dzaXplLCBmbGFncyk7CiAKKwlmbGFncyA9IEhF
WERVTVBfUkVUQUlOX0JZVEVfT1JERVI7CisJcm93c2l6ZSA9IChnZXRfcmFuZG9tX2ludCgpICUg
MiArIDEpICogMTY7CisJZm9yIChpID0gMDsgaSA8IDE2OyBpKyspCisJCXRlc3RfaGV4ZHVtcF9z
ZXQocm93c2l6ZSwgZmxhZ3MpOworCisJZmxhZ3MgPSBIRVhEVU1QX0FTQ0lJIHwgSEVYRFVNUF9S
RVRBSU5fQllURV9PUkRFUjsKKwlyb3dzaXplID0gKGdldF9yYW5kb21faW50KCkgJSAyICsgMSkg
KiAxNjsKKwlmb3IgKGkgPSAwOyBpIDwgMTY7IGkrKykKKwkJdGVzdF9oZXhkdW1wX3NldChyb3dz
aXplLCBmbGFncyk7CisKKwlmbGFncyA9IDA7CisJZm9yIChpID0gMDsgaSA8PSBURVNUX0hFWERV
TVBfQlVGX1NJWkU7IGkrKykKKwkJdGVzdF9oZXhkdW1wX292ZXJmbG93X3NldChpLCBmbGFncyk7
CisKKwlmbGFncyA9IEhFWERVTVBfQVNDSUk7CisJZm9yIChpID0gMDsgaSA8PSBURVNUX0hFWERV
TVBfQlVGX1NJWkU7IGkrKykKKwkJdGVzdF9oZXhkdW1wX292ZXJmbG93X3NldChpLCBmbGFncyk7
CisKKwlmbGFncyA9IEhFWERVTVBfUkVUQUlOX0JZVEVfT1JERVI7CiAJZm9yIChpID0gMDsgaSA8
PSBURVNUX0hFWERVTVBfQlVGX1NJWkU7IGkrKykKLQkJdGVzdF9oZXhkdW1wX292ZXJmbG93X3Nl
dChpLCBmYWxzZSk7CisJCXRlc3RfaGV4ZHVtcF9vdmVyZmxvd19zZXQoaSwgZmxhZ3MpOwogCisJ
ZmxhZ3MgPSBIRVhEVU1QX0FTQ0lJIHwgSEVYRFVNUF9SRVRBSU5fQllURV9PUkRFUjsKIAlmb3Ig
KGkgPSAwOyBpIDw9IFRFU1RfSEVYRFVNUF9CVUZfU0laRTsgaSsrKQotCQl0ZXN0X2hleGR1bXBf
b3ZlcmZsb3dfc2V0KGksIHRydWUpOworCQl0ZXN0X2hleGR1bXBfb3ZlcmZsb3dfc2V0KGksIGZs
YWdzKTsKIAogCWlmIChmYWlsZWRfdGVzdHMgPT0gMCkKIAkJcHJfaW5mbygiYWxsICV1IHRlc3Rz
IHBhc3NlZFxuIiwgdG90YWxfdGVzdHMpOwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1k
ZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
