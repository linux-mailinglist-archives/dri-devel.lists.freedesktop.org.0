Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 13A6150CFD
	for <lists+dri-devel@lfdr.de>; Mon, 24 Jun 2019 15:58:50 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AC85189B68;
	Mon, 24 Jun 2019 13:58:44 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-wm1-x343.google.com (mail-wm1-x343.google.com
 [IPv6:2a00:1450:4864:20::343])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DF33489B57;
 Mon, 24 Jun 2019 13:58:42 +0000 (UTC)
Received: by mail-wm1-x343.google.com with SMTP id x15so12900520wmj.3;
 Mon, 24 Jun 2019 06:58:42 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=tN8sctofcQ2RhRW9w2glZKYn7JgPKEJVybz8ovgIx/w=;
 b=MfqJugSzUU7dCNvqWOiDzo2dgettOg3EscPY7+QwWCJn/J7xc9ScKE7Chkba5q0iHu
 2BIF+A7cvDTwU2ebw5tcnkN0YSO00v8Jq0EXAVJAMMmrZLObx8LRtaLkanv2B8iP4Kq2
 GG6gqDN+eeSh5BAW4pMSj/aIrNSHoA47l5AmX7lcc5+hsMqOrjc3vSYjIJu84B69jX7m
 krwZIHwkaujYd3ZrwmH3PCdQkfAYNfaGb4D57WjC6+u2mC49iwd1u4mF1N83gbYr3PVh
 zOHOvWVNcX5C1xqEbRghKR8s1YfzpW+5ByVko9nZt83c+03b6TsypvQnbJMwY6CPZI3Q
 IjjA==
X-Gm-Message-State: APjAAAXtVEY4hlBpml/jUgNuSzqc1d4Yx2gcM/4OV5wiuGe3zNvQOJUk
 8NXToTc5T2PKEaak3ZHJCqKYpCh9
X-Google-Smtp-Source: APXvYqw2wi6o5AKPP73a5OfCElh9Ltt0VAKXx02uoxgmN81JpGqHyjvlvptX1bFaTJxKHaiPHQ5LRA==
X-Received: by 2002:a1c:4184:: with SMTP id o126mr15994985wma.68.1561384721121; 
 Mon, 24 Jun 2019 06:58:41 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:c026:1db1:e413:81a2])
 by smtp.gmail.com with ESMTPSA id y19sm14848623wmc.21.2019.06.24.06.58.40
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Mon, 24 Jun 2019 06:58:40 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: intel-gfx@lists.freedesktop.org, dri-devel@lists.freedesktop.org,
 amd-gfx@lists.freedesktop.org
Subject: [PATCH 1/6] dma-buf: add dynamic DMA-buf handling v11
Date: Mon, 24 Jun 2019 15:58:34 +0200
Message-Id: <20190624135839.1661-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=tN8sctofcQ2RhRW9w2glZKYn7JgPKEJVybz8ovgIx/w=;
 b=YInNIqmpNGrGQvbShqYMYLNxJvnKZVgyF9GRtTjgLPiuJRIud61VK2qAoQavZufcxE
 OBMwqe/NJwRbusXVMGljsS/B7h4aaYZ7BxVQgt3zsLbN6bEKGTIPNK62OMmHDcs9i8CF
 xCzTD0zd88QyyRzacae93fE/8jQSLQzaTgJhJim33gwgQjHPIybbSYm4e0Z7dFTpnarc
 hZwLE2WVS86qSpyFpJdaU+9MdOfUH07lPcyyGROJVtZixgkuiksjkpZZySMttbntht+i
 PDbJmaSxAUzc5UcZgiXx7qPH9/4n2wVqH6uP1gMvnv5ianVl+Yi5A2xDZR/LuscvZgkb
 NgVw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gdGhlIGV4cG9ydGVyIHNpZGUgd2UgYWRkIG9wdGlvbmFsIGV4cGxpY2l0IHBpbm5pbmcgY2Fs
bGJhY2tzLiBJZiB0aG9zZQpjYWxsYmFja3MgYXJlIGltcGxlbWVudGVkIHRoZSBmcmFtZXdvcmsg
bm8gbG9uZ2VyIGNhY2hlcyBzZyB0YWJsZXMgYW5kIHRoZQptYXAvdW5tYXAgY2FsbGJhY2tzIGFy
ZSBhbHdheXMgY2FsbGVkIHdpdGggdGhlIGxvY2sgb2YgdGhlIHJlc2VydmF0aW9uIG9iamVjdApo
ZWxkLgoKT24gdGhlIGltcG9ydGVyIHNpZGUgd2UgYWRkIGFuIG9wdGlvbmFsIGludmFsaWRhdGUg
Y2FsbGJhY2suIFRoaXMgY2FsbGJhY2sgaXMKdXNlZCBieSB0aGUgZXhwb3J0ZXIgdG8gaW5mb3Jt
IHRoZSBpbXBvcnRlcnMgdGhhdCB0aGVpciBtYXBwaW5ncyBzaG91bGQgYmUKZGVzdHJveWVkIGFz
IHNvb24gYXMgcG9zc2libGUuCgpUaGlzIGFsbG93cyB0aGUgZXhwb3J0ZXIgdG8gcHJvdmlkZSB0
aGUgbWFwcGluZ3Mgd2l0aG91dCB0aGUgbmVlZCB0byBwaW4KdGhlIGJhY2tpbmcgc3RvcmUuCgp2
MjogZG9uJ3QgdHJ5IHRvIGludmFsaWRhdGUgbWFwcGluZ3Mgd2hlbiB0aGUgY2FsbGJhY2sgaXMg
TlVMTCwKICAgIGxvY2sgdGhlIHJlc2VydmF0aW9uIG9iaiB3aGlsZSB1c2luZyB0aGUgYXR0YWNo
bWVudHMsCiAgICBhZGQgaGVscGVyIHRvIHNldCB0aGUgY2FsbGJhY2sKdjM6IG1vdmUgZmxhZyBm
b3IgaW52YWxpZGF0aW9uIHN1cHBvcnQgaW50byB0aGUgRE1BLWJ1ZiwKICAgIHVzZSBuZXcgYXR0
YWNoX2luZm8gc3RydWN0dXJlIHRvIHNldCB0aGUgY2FsbGJhY2sKdjQ6IHVzZSBpbXBvcnRlcl9w
cml2IGZpZWxkIGluc3RlYWQgb2YgbWFuZ2xpbmcgZXhwb3J0ZXIgcHJpdi4KdjU6IGRyb3AgaW52
YWxpZGF0aW9uX3N1cHBvcnRlZCBmbGFnCnY2OiBzcXVhc2ggdG9nZXRoZXIgd2l0aCBwaW4vdW5w
aW4gY2hhbmdlcwp2NzogcGluL3VucGluIHRha2VzIGFuIGF0dGFjaG1lbnQgbm93CnY4OiBudWtl
IGRtYV9idWZfYXR0YWNobWVudF8obWFwfHVubWFwKV9sb2NrZWQsCiAgICBldmVyeXRoaW5nIGlz
IG5vdyBoYW5kbGVkIGJhY2t3YXJkIGNvbXBhdGlibGUKdjk6IGFsd2F5cyBjYWNoZSB3aGVuIGV4
cG9ydC9pbXBvcnRlciBkb24ndCBhZ3JlZSBvbiBkeW5hbWljIGhhbmRsaW5nCnYxMDogbWluaW1h
bCBzdHlsZSBjbGVhbnVwCnYxMTogZHJvcCBhdXRvbWF0aWNhbGx5IHJlLWVudHJ5IGF2b2lkYW5j
ZQoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQu
Y29tPgotLS0KIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMgfCAxNzkgKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrLS0KIGluY2x1ZGUvbGludXgvZG1hLWJ1Zi5oICAgfCAxMDkg
KysrKysrKysrKysrKysrKysrKysrLS0KIDIgZmlsZXMgY2hhbmdlZCwgMjc0IGluc2VydGlvbnMo
KyksIDE0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVm
LmMgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jCmluZGV4IDZjMTVkZWI1ZDRhZC4uZWUwOWYx
OGQzYTJmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jCisrKyBiL2RyaXZl
cnMvZG1hLWJ1Zi9kbWEtYnVmLmMKQEAgLTUzMSw2ICs1MzEsOSBAQCBzdHJ1Y3QgZG1hX2J1ZiAq
ZG1hX2J1Zl9leHBvcnQoY29uc3Qgc3RydWN0IGRtYV9idWZfZXhwb3J0X2luZm8gKmV4cF9pbmZv
KQogCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKIAl9CiAKKwlpZiAoV0FSTl9PTihleHBfaW5m
by0+b3BzLT5jYWNoZV9zZ3RfbWFwcGluZyAmJiBleHBfaW5mby0+b3BzLT5waW4pKQorCQlyZXR1
cm4gRVJSX1BUUigtRUlOVkFMKTsKKwogCWlmICghdHJ5X21vZHVsZV9nZXQoZXhwX2luZm8tPm93
bmVyKSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT0VOVCk7CiAKQEAgLTY1MSwxMCArNjU0LDEyIEBA
IHZvaWQgZG1hX2J1Zl9wdXQoc3RydWN0IGRtYV9idWYgKmRtYWJ1ZikKIEVYUE9SVF9TWU1CT0xf
R1BMKGRtYV9idWZfcHV0KTsKIAogLyoqCi0gKiBkbWFfYnVmX2F0dGFjaCAtIEFkZCB0aGUgZGV2
aWNlIHRvIGRtYV9idWYncyBhdHRhY2htZW50cyBsaXN0OyBvcHRpb25hbGx5LAorICogZG1hX2J1
Zl9keW5hbWljX2F0dGFjaCAtIEFkZCB0aGUgZGV2aWNlIHRvIGRtYV9idWYncyBhdHRhY2htZW50
cyBsaXN0OyBvcHRpb25hbGx5LAogICogY2FsbHMgYXR0YWNoKCkgb2YgZG1hX2J1Zl9vcHMgdG8g
YWxsb3cgZGV2aWNlLXNwZWNpZmljIGF0dGFjaCBmdW5jdGlvbmFsaXR5Ci0gKiBAZG1hYnVmOglb
aW5dCWJ1ZmZlciB0byBhdHRhY2ggZGV2aWNlIHRvLgotICogQGRldjoJW2luXQlkZXZpY2UgdG8g
YmUgYXR0YWNoZWQuCisgKiBAZG1hYnVmOgkJW2luXQlidWZmZXIgdG8gYXR0YWNoIGRldmljZSB0
by4KKyAqIEBkZXY6CQlbaW5dCWRldmljZSB0byBiZSBhdHRhY2hlZC4KKyAqIEBpbXBvcnRlcl9v
cHMJW2luXQlpbXBvcnRlciBvcGVyYXRpb25zIGZvciB0aGUgYXR0YWNobWVudAorICogQGltcG9y
dGVyX3ByaXYJW2luXQlpbXBvcnRlciBwcml2YXRlIHBvaW50ZXIgZm9yIHRoZSBhdHRhY2htZW50
CiAgKgogICogUmV0dXJucyBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50IHBvaW50ZXIgZm9yIHRo
aXMgYXR0YWNobWVudC4gQXR0YWNobWVudHMKICAqIG11c3QgYmUgY2xlYW5lZCB1cCBieSBjYWxs
aW5nIGRtYV9idWZfZGV0YWNoKCkuCkBAIC02NjgsOCArNjczLDEwIEBAIEVYUE9SVF9TWU1CT0xf
R1BMKGRtYV9idWZfcHV0KTsKICAqIGFjY2Vzc2libGUgdG8gQGRldiwgYW5kIGNhbm5vdCBiZSBt
b3ZlZCB0byBhIG1vcmUgc3VpdGFibGUgcGxhY2UuIFRoaXMgaXMKICAqIGluZGljYXRlZCB3aXRo
IHRoZSBlcnJvciBjb2RlIC1FQlVTWS4KICAqLwotc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAq
ZG1hX2J1Zl9hdHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKLQkJCQkJICBzdHJ1Y3QgZGV2
aWNlICpkZXYpCitzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICoKK2RtYV9idWZfZHluYW1pY19h
dHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1Ziwgc3RydWN0IGRldmljZSAqZGV2LAorCQkgICAg
ICAgY29uc3Qgc3RydWN0IGRtYV9idWZfYXR0YWNoX29wcyAqaW1wb3J0ZXJfb3BzLAorCQkgICAg
ICAgdm9pZCAqaW1wb3J0ZXJfcHJpdikKIHsKIAlzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICph
dHRhY2g7CiAJaW50IHJldDsKQEAgLTY4Myw2ICs2OTAsOCBAQCBzdHJ1Y3QgZG1hX2J1Zl9hdHRh
Y2htZW50ICpkbWFfYnVmX2F0dGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAogCiAJYXR0YWNo
LT5kZXYgPSBkZXY7CiAJYXR0YWNoLT5kbWFidWYgPSBkbWFidWY7CisJYXR0YWNoLT5pbXBvcnRl
cl9vcHMgPSBpbXBvcnRlcl9vcHM7CisJYXR0YWNoLT5pbXBvcnRlcl9wcml2ID0gaW1wb3J0ZXJf
cHJpdjsKIAogCW11dGV4X2xvY2soJmRtYWJ1Zi0+bG9jayk7CiAKQEAgLTY5MSwxNiArNzAwLDcy
IEBAIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmRtYV9idWZfYXR0YWNoKHN0cnVjdCBkbWFf
YnVmICpkbWFidWYsCiAJCWlmIChyZXQpCiAJCQlnb3RvIGVycl9hdHRhY2g7CiAJfQorCXJlc2Vy
dmF0aW9uX29iamVjdF9sb2NrKGRtYWJ1Zi0+cmVzdiwgTlVMTCk7CiAJbGlzdF9hZGQoJmF0dGFj
aC0+bm9kZSwgJmRtYWJ1Zi0+YXR0YWNobWVudHMpOworCXJlc2VydmF0aW9uX29iamVjdF91bmxv
Y2soZG1hYnVmLT5yZXN2KTsKIAogCW11dGV4X3VubG9jaygmZG1hYnVmLT5sb2NrKTsKIAorCS8q
IFdoZW4gZWl0aGVyIHRoZSBpbXBvcnRlciBvciB0aGUgZXhwb3J0ZXIgY2FuJ3QgaGFuZGxlIGR5
bmFtaWMKKwkgKiBtYXBwaW5ncyB3ZSBjYWNoZSB0aGUgbWFwcGluZyBoZXJlIHRvIGF2b2lkIGlz
c3VlcyB3aXRoIHRoZQorCSAqIHJlc2VydmF0aW9uIG9iamVjdCBsb2NrLgorCSAqLworCWlmIChk
bWFfYnVmX2F0dGFjaG1lbnRfaXNfZHluYW1pYyhhdHRhY2gpICE9CisJICAgIGRtYV9idWZfaXNf
ZHluYW1pYyhkbWFidWYpKSB7CisJCXN0cnVjdCBzZ190YWJsZSAqc2d0OworCisJCWlmIChkbWFf
YnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYpKSB7CisJCQlyZXNlcnZhdGlvbl9vYmplY3Rf
bG9jayhhdHRhY2gtPmRtYWJ1Zi0+cmVzdiwgTlVMTCk7CisJCQlyZXQgPSBkbWFfYnVmX3Bpbihh
dHRhY2gpOworCQkJaWYgKHJldCkKKwkJCQlnb3RvIGVycl91bmxvY2s7CisJCX0KKworCQlzZ3Qg
PSBkbWFidWYtPm9wcy0+bWFwX2RtYV9idWYoYXR0YWNoLCBETUFfQklESVJFQ1RJT05BTCk7CisJ
CWlmICghc2d0KQorCQkJc2d0ID0gRVJSX1BUUigtRU5PTUVNKTsKKwkJaWYgKElTX0VSUihzZ3Qp
KSB7CisJCQlyZXQgPSBQVFJfRVJSKHNndCk7CisJCQlnb3RvIGVycl91bnBpbjsKKwkJfQorCQlp
ZiAoZG1hX2J1Zl9pc19keW5hbWljKGF0dGFjaC0+ZG1hYnVmKSkKKwkJCXJlc2VydmF0aW9uX29i
amVjdF91bmxvY2soYXR0YWNoLT5kbWFidWYtPnJlc3YpOworCQlhdHRhY2gtPnNndCA9IHNndDsK
KwkJYXR0YWNoLT5kaXIgPSBETUFfQklESVJFQ1RJT05BTDsKKwl9CisKIAlyZXR1cm4gYXR0YWNo
OwogCiBlcnJfYXR0YWNoOgogCWtmcmVlKGF0dGFjaCk7CiAJbXV0ZXhfdW5sb2NrKCZkbWFidWYt
PmxvY2spOwogCXJldHVybiBFUlJfUFRSKHJldCk7CisKK2Vycl91bnBpbjoKKwlpZiAoZG1hX2J1
Zl9pc19keW5hbWljKGF0dGFjaC0+ZG1hYnVmKSkKKwkJZG1hX2J1Zl91bnBpbihhdHRhY2gpOwor
CitlcnJfdW5sb2NrOgorCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYpKQor
CQlyZXNlcnZhdGlvbl9vYmplY3RfdW5sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2KTsKKworCWRt
YV9idWZfZGV0YWNoKGRtYWJ1ZiwgYXR0YWNoKTsKKwlyZXR1cm4gRVJSX1BUUihyZXQpOworfQor
RVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl9keW5hbWljX2F0dGFjaCk7CisKKy8qKgorICogZG1h
X2J1Zl9hdHRhY2ggLSBXcmFwcGVyIGZvciBkbWFfYnVmX2R5bmFtaWNfYXR0YWNoCisgKiBAZG1h
YnVmOglbaW5dCWJ1ZmZlciB0byBhdHRhY2ggZGV2aWNlIHRvLgorICogQGRldjoJW2luXQlkZXZp
Y2UgdG8gYmUgYXR0YWNoZWQuCisgKgorICogV3JhcHBlciB0byBjYWxsIGRtYV9idWZfZHluYW1p
Y19hdHRhY2goKSBmb3IgZHJpdmVycyB3aGljaCBzdGlsbCB1c2UgYSBzdGF0aWMKKyAqIG1hcHBp
bmcuCisgKi8KK3N0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmRtYV9idWZfYXR0YWNoKHN0cnVj
dCBkbWFfYnVmICpkbWFidWYsCisJCQkJCSAgc3RydWN0IGRldmljZSAqZGV2KQoreworCXJldHVy
biBkbWFfYnVmX2R5bmFtaWNfYXR0YWNoKGRtYWJ1ZiwgZGV2LCBOVUxMLCBOVUxMKTsKIH0KIEVY
UE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfYXR0YWNoKTsKIApAQCAtNzE3LDExICs3ODIsMjIgQEAg
dm9pZCBkbWFfYnVmX2RldGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3QgZG1hX2J1
Zl9hdHRhY2htZW50ICphdHRhY2gpCiAJaWYgKFdBUk5fT04oIWRtYWJ1ZiB8fCAhYXR0YWNoKSkK
IAkJcmV0dXJuOwogCi0JaWYgKGF0dGFjaC0+c2d0KQorCWlmIChhdHRhY2gtPnNndCkgeworCQlp
ZiAoZG1hX2J1Zl9pc19keW5hbWljKGF0dGFjaC0+ZG1hYnVmKSkKKwkJCXJlc2VydmF0aW9uX29i
amVjdF9sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2LCBOVUxMKTsKKwogCQlkbWFidWYtPm9wcy0+
dW5tYXBfZG1hX2J1ZihhdHRhY2gsIGF0dGFjaC0+c2d0LCBhdHRhY2gtPmRpcik7CiAKKwkJaWYg
KGRtYV9idWZfaXNfZHluYW1pYyhhdHRhY2gtPmRtYWJ1ZikpIHsKKwkJCWRtYV9idWZfdW5waW4o
YXR0YWNoKTsKKwkJCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYXR0YWNoLT5kbWFidWYtPnJl
c3YpOworCQl9CisJfQorCiAJbXV0ZXhfbG9jaygmZG1hYnVmLT5sb2NrKTsKKwlyZXNlcnZhdGlv
bl9vYmplY3RfbG9jayhkbWFidWYtPnJlc3YsIE5VTEwpOwogCWxpc3RfZGVsKCZhdHRhY2gtPm5v
ZGUpOworCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soZG1hYnVmLT5yZXN2KTsKIAlpZiAoZG1h
YnVmLT5vcHMtPmRldGFjaCkKIAkJZG1hYnVmLT5vcHMtPmRldGFjaChkbWFidWYsIGF0dGFjaCk7
CiAKQEAgLTczMCw2ICs4MDYsNDQgQEAgdm9pZCBkbWFfYnVmX2RldGFjaChzdHJ1Y3QgZG1hX2J1
ZiAqZG1hYnVmLCBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gpCiB9CiBFWFBPUlRf
U1lNQk9MX0dQTChkbWFfYnVmX2RldGFjaCk7CiAKKy8qKgorICogZG1hX2J1Zl9waW4gLSBMb2Nr
IGRvd24gdGhlIERNQS1idWYKKyAqCisgKiBAYXR0YWNoOglbaW5dCWF0dGFjaG1lbnQgd2hpY2gg
c2hvdWxkIGJlIHBpbm5lZAorICoKKyAqIFJldHVybnM6CisgKiAwIG9uIHN1Y2Nlc3MsIG5lZ2F0
aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IGRtYV9idWZfcGluKHN0cnVjdCBk
bWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCkKK3sKKwlzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmID0g
YXR0YWNoLT5kbWFidWY7CisJaW50IHJldCA9IDA7CisKKwlyZXNlcnZhdGlvbl9vYmplY3RfYXNz
ZXJ0X2hlbGQoZG1hYnVmLT5yZXN2KTsKKworCWlmIChkbWFidWYtPm9wcy0+cGluKQorCQlyZXQg
PSBkbWFidWYtPm9wcy0+cGluKGF0dGFjaCk7CisKKwlyZXR1cm4gcmV0OworfQorRVhQT1JUX1NZ
TUJPTF9HUEwoZG1hX2J1Zl9waW4pOworCisvKioKKyAqIGRtYV9idWZfdW5waW4gLSBSZW1vdmUg
bG9jayBmcm9tIERNQS1idWYKKyAqCisgKiBAYXR0YWNoOglbaW5dCWF0dGFjaG1lbnQgd2hpY2gg
c2hvdWxkIGJlIHVucGlubmVkCisgKi8KK3ZvaWQgZG1hX2J1Zl91bnBpbihzdHJ1Y3QgZG1hX2J1
Zl9hdHRhY2htZW50ICphdHRhY2gpCit7CisJc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiA9IGF0dGFj
aC0+ZG1hYnVmOworCisJcmVzZXJ2YXRpb25fb2JqZWN0X2Fzc2VydF9oZWxkKGRtYWJ1Zi0+cmVz
dik7CisKKwlpZiAoZG1hYnVmLT5vcHMtPnVucGluKQorCQlkbWFidWYtPm9wcy0+dW5waW4oYXR0
YWNoKTsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfdW5waW4pOworCiAvKioKICAqIGRt
YV9idWZfbWFwX2F0dGFjaG1lbnQgLSBSZXR1cm5zIHRoZSBzY2F0dGVybGlzdCB0YWJsZSBvZiB0
aGUgYXR0YWNobWVudDsKICAqIG1hcHBlZCBpbnRvIF9kZXZpY2VfIGFkZHJlc3Mgc3BhY2UuIElz
IGEgd3JhcHBlciBmb3IgbWFwX2RtYV9idWYoKSBvZiB0aGUKQEAgLTc0OSw2ICs4NjMsNyBAQCBz
dHJ1Y3Qgc2dfdGFibGUgKmRtYV9idWZfbWFwX2F0dGFjaG1lbnQoc3RydWN0IGRtYV9idWZfYXR0
YWNobWVudCAqYXR0YWNoLAogCQkJCQllbnVtIGRtYV9kYXRhX2RpcmVjdGlvbiBkaXJlY3Rpb24p
CiB7CiAJc3RydWN0IHNnX3RhYmxlICpzZ190YWJsZTsKKwlpbnQgcjsKIAogCW1pZ2h0X3NsZWVw
KCk7CiAKQEAgLTc2NywxMCArODgyLDI5IEBAIHN0cnVjdCBzZ190YWJsZSAqZG1hX2J1Zl9tYXBf
YXR0YWNobWVudChzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsCiAJCXJldHVybiBh
dHRhY2gtPnNndDsKIAl9CiAKKwlpZiAoZG1hX2J1Zl9hdHRhY2htZW50X2lzX2R5bmFtaWMoYXR0
YWNoKSkgeworCQlyZXNlcnZhdGlvbl9vYmplY3RfYXNzZXJ0X2hlbGQoYXR0YWNoLT5kbWFidWYt
PnJlc3YpOworCisJfSBlbHNlIGlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYp
KSB7CisJCXJlc2VydmF0aW9uX29iamVjdF9sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2LCBOVUxM
KTsKKwkJciA9IGRtYV9idWZfcGluKGF0dGFjaCk7CisJCWlmIChyKSB7CisJCQlyZXNlcnZhdGlv
bl9vYmplY3RfdW5sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2KTsKKwkJCXJldHVybiBFUlJfUFRS
KHIpOworCQl9CisJfQorCiAJc2dfdGFibGUgPSBhdHRhY2gtPmRtYWJ1Zi0+b3BzLT5tYXBfZG1h
X2J1ZihhdHRhY2gsIGRpcmVjdGlvbik7CiAJaWYgKCFzZ190YWJsZSkKIAkJc2dfdGFibGUgPSBF
UlJfUFRSKC1FTk9NRU0pOwogCisJaWYgKCFkbWFfYnVmX2F0dGFjaG1lbnRfaXNfZHluYW1pYyhh
dHRhY2gpICYmCisJICAgIGRtYV9idWZfaXNfZHluYW1pYyhhdHRhY2gtPmRtYWJ1ZikpIHsKKwkJ
aWYgKElTX0VSUihzZ190YWJsZSkpCisJCQlkbWFfYnVmX3VucGluKGF0dGFjaCk7CisJCXJlc2Vy
dmF0aW9uX29iamVjdF91bmxvY2soYXR0YWNoLT5kbWFidWYtPnJlc3YpOworCX0KKwogCWlmICgh
SVNfRVJSKHNnX3RhYmxlKSAmJiBhdHRhY2gtPmRtYWJ1Zi0+b3BzLT5jYWNoZV9zZ3RfbWFwcGlu
ZykgewogCQlhdHRhY2gtPnNndCA9IHNnX3RhYmxlOwogCQlhdHRhY2gtPmRpciA9IGRpcmVjdGlv
bjsKQEAgLTgwMiwxMCArOTM2LDQxIEBAIHZvaWQgZG1hX2J1Zl91bm1hcF9hdHRhY2htZW50KHN0
cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCwKIAlpZiAoYXR0YWNoLT5zZ3QgPT0gc2df
dGFibGUpCiAJCXJldHVybjsKIAorCWlmIChkbWFfYnVmX2F0dGFjaG1lbnRfaXNfZHluYW1pYyhh
dHRhY2gpKQorCQlyZXNlcnZhdGlvbl9vYmplY3RfYXNzZXJ0X2hlbGQoYXR0YWNoLT5kbWFidWYt
PnJlc3YpOworCWVsc2UgaWYgKGRtYV9idWZfaXNfZHluYW1pYyhhdHRhY2gtPmRtYWJ1ZikpCisJ
CXJlc2VydmF0aW9uX29iamVjdF9sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2LCBOVUxMKTsKKwog
CWF0dGFjaC0+ZG1hYnVmLT5vcHMtPnVubWFwX2RtYV9idWYoYXR0YWNoLCBzZ190YWJsZSwgZGly
ZWN0aW9uKTsKKworCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYpICYmCisJ
ICAgICFkbWFfYnVmX2F0dGFjaG1lbnRfaXNfZHluYW1pYyhhdHRhY2gpKSB7CisJCWRtYV9idWZf
dW5waW4oYXR0YWNoKTsKKwkJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhhdHRhY2gtPmRtYWJ1
Zi0+cmVzdik7CisJfQogfQogRVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl91bm1hcF9hdHRhY2ht
ZW50KTsKIAorLyoqCisgKiBkbWFfYnVmX2ludmFsaWRhdGVfbWFwcGluZ3MgLSBpbnZhbGlkYXRl
IGFsbCBtYXBwaW5ncyBvZiB0aGlzIGRtYV9idWYKKyAqCisgKiBAZG1hYnVmOglbaW5dCWJ1ZmZl
ciB3aGljaCBtYXBwaW5ncyBzaG91bGQgYmUgaW52YWxpZGF0ZWQKKyAqCisgKiBJbmZvcm1zIGFs
bCBhdHRhY2htZW5zdCB0aGF0IHRoZXkgbmVlZCB0byBkZXN0cm95IGFuZCByZWNyZWF0ZWQgYWxs
IHRoZWlyCisgKiBtYXBwaW5ncy4KKyAqLwordm9pZCBkbWFfYnVmX2ludmFsaWRhdGVfbWFwcGlu
Z3Moc3RydWN0IGRtYV9idWYgKmRtYWJ1ZikKK3sKKwlzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50
ICphdHRhY2g7CisKKwlyZXNlcnZhdGlvbl9vYmplY3RfYXNzZXJ0X2hlbGQoZG1hYnVmLT5yZXN2
KTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnkoYXR0YWNoLCAmZG1hYnVmLT5hdHRhY2htZW50cywg
bm9kZSkKKwkJaWYgKGF0dGFjaC0+aW1wb3J0ZXJfb3BzICYmIGF0dGFjaC0+aW1wb3J0ZXJfb3Bz
LT5pbnZhbGlkYXRlKQorCQkJYXR0YWNoLT5pbXBvcnRlcl9vcHMtPmludmFsaWRhdGUoYXR0YWNo
KTsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfaW52YWxpZGF0ZV9tYXBwaW5ncyk7CisK
IC8qKgogICogRE9DOiBjcHUgYWNjZXNzCiAgKgpAQCAtMTIyNSwxMCArMTM5MCwxMiBAQCBzdGF0
aWMgaW50IGRtYV9idWZfZGVidWdfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKnMsIHZvaWQgKnVudXNl
ZCkKIAkJc2VxX3B1dHMocywgIlx0QXR0YWNoZWQgRGV2aWNlczpcbiIpOwogCQlhdHRhY2hfY291
bnQgPSAwOwogCisJCXJlc2VydmF0aW9uX29iamVjdF9sb2NrKGJ1Zl9vYmotPnJlc3YsIE5VTEwp
OwogCQlsaXN0X2Zvcl9lYWNoX2VudHJ5KGF0dGFjaF9vYmosICZidWZfb2JqLT5hdHRhY2htZW50
cywgbm9kZSkgewogCQkJc2VxX3ByaW50ZihzLCAiXHQlc1xuIiwgZGV2X25hbWUoYXR0YWNoX29i
ai0+ZGV2KSk7CiAJCQlhdHRhY2hfY291bnQrKzsKIAkJfQorCQlyZXNlcnZhdGlvbl9vYmplY3Rf
dW5sb2NrKGJ1Zl9vYmotPnJlc3YpOwogCiAJCXNlcV9wcmludGYocywgIlRvdGFsICVkIGRldmlj
ZXMgYXR0YWNoZWRcblxuIiwKIAkJCQlhdHRhY2hfY291bnQpOwpkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9saW51eC9kbWEtYnVmLmggYi9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaAppbmRleCAwMWFkNWI5
NDJhNmYuLmY5Yzk2YmY1NmJjOCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9kbWEtYnVmLmgK
KysrIGIvaW5jbHVkZS9saW51eC9kbWEtYnVmLmgKQEAgLTkyLDE0ICs5Miw0MCBAQCBzdHJ1Y3Qg
ZG1hX2J1Zl9vcHMgewogCSAqLwogCXZvaWQgKCpkZXRhY2gpKHN0cnVjdCBkbWFfYnVmICosIHN0
cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKik7CiAKKwkvKioKKwkgKiBAcGluOgorCSAqCisJICog
VGhpcyBpcyBjYWxsZWQgYnkgZG1hX2J1Zl9waW4gYW5kIGxldHMgdGhlIGV4cG9ydGVyIGtub3cg
dGhhdCB0aGUKKwkgKiBETUEtYnVmIGNhbid0IGJlIG1vdmVkIGFueSBtb3JlLgorCSAqCisJICog
VGhpcyBpcyBjYWxsZWQgd2l0aCB0aGUgZG1hYnVmLT5yZXN2IG9iamVjdCBsb2NrZWQuCisJICoK
KwkgKiBUaGlzIGNhbGxiYWNrIGlzIG9wdGlvbmFsLgorCSAqCisJICogUmV0dXJuczoKKwkgKgor
CSAqIDAgb24gc3VjY2VzcywgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorCSAqLwor
CWludCAoKnBpbikoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoKTsKKworCS8qKgor
CSAqIEB1bnBpbjoKKwkgKgorCSAqIFRoaXMgaXMgY2FsbGVkIGJ5IGRtYV9idWZfdW5waW4gYW5k
IGxldHMgdGhlIGV4cG9ydGVyIGtub3cgdGhhdCB0aGUKKwkgKiBETUEtYnVmIGNhbiBiZSBtb3Zl
ZCBhZ2Fpbi4KKwkgKgorCSAqIFRoaXMgaXMgY2FsbGVkIHdpdGggdGhlIGRtYWJ1Zi0+cmVzdiBv
YmplY3QgbG9ja2VkLgorCSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4KKwkgKi8K
Kwl2b2lkICgqdW5waW4pKHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCk7CisKIAkv
KioKIAkgKiBAbWFwX2RtYV9idWY6CiAJICoKIAkgKiBUaGlzIGlzIGNhbGxlZCBieSBkbWFfYnVm
X21hcF9hdHRhY2htZW50KCkgYW5kIGlzIHVzZWQgdG8gbWFwIGEKIAkgKiBzaGFyZWQgJmRtYV9i
dWYgaW50byBkZXZpY2UgYWRkcmVzcyBzcGFjZSwgYW5kIGl0IGlzIG1hbmRhdG9yeS4gSXQKLQkg
KiBjYW4gb25seSBiZSBjYWxsZWQgaWYgQGF0dGFjaCBoYXMgYmVlbiBjYWxsZWQgc3VjY2Vzc2Z1
bGx5LiBUaGlzCi0JICogZXNzZW50aWFsbHkgcGlucyB0aGUgRE1BIGJ1ZmZlciBpbnRvIHBsYWNl
LCBhbmQgaXQgY2Fubm90IGJlIG1vdmVkCi0JICogYW55IG1vcmUKKwkgKiBjYW4gb25seSBiZSBj
YWxsZWQgaWYgQGF0dGFjaCBoYXMgYmVlbiBjYWxsZWQgc3VjY2Vzc2Z1bGx5LgogCSAqCiAJICog
VGhpcyBjYWxsIG1heSBzbGVlcCwgZS5nLiB3aGVuIHRoZSBiYWNraW5nIHN0b3JhZ2UgZmlyc3Qg
bmVlZHMgdG8gYmUKIAkgKiBhbGxvY2F0ZWQsIG9yIG1vdmVkIHRvIGEgbG9jYXRpb24gc3VpdGFi
bGUgZm9yIGFsbCBjdXJyZW50bHkgYXR0YWNoZWQKQEAgLTEyMCw2ICsxNDYsOSBAQCBzdHJ1Y3Qg
ZG1hX2J1Zl9vcHMgewogCSAqIGFueSBvdGhlciBraW5kIG9mIHNoYXJpbmcgdGhhdCB0aGUgZXhw
b3J0ZXIgbWlnaHQgd2lzaCB0byBtYWtlCiAJICogYXZhaWxhYmxlIHRvIGJ1ZmZlci11c2Vycy4K
IAkgKgorCSAqIFRoaXMgaXMgYWx3YXlzIGNhbGxlZCB3aXRoIHRoZSBkbWFidWYtPnJlc3Ygb2Jq
ZWN0IGxvY2tlZCB3aGVuCisJICogdGhlIHBpbi91bnBpbiBjYWxsYmFja3MgYXJlIGltcGxlbWVu
dGVkLgorCSAqCiAJICogUmV0dXJuczoKIAkgKgogCSAqIEEgJnNnX3RhYmxlIHNjYXR0ZXIgbGlz
dCBvZiBvciB0aGUgYmFja2luZyBzdG9yYWdlIG9mIHRoZSBETUEgYnVmZmVyLApAQCAtMTM3LDkg
KzE2Niw2IEBAIHN0cnVjdCBkbWFfYnVmX29wcyB7CiAJICoKIAkgKiBUaGlzIGlzIGNhbGxlZCBi
eSBkbWFfYnVmX3VubWFwX2F0dGFjaG1lbnQoKSBhbmQgc2hvdWxkIHVubWFwIGFuZAogCSAqIHJl
bGVhc2UgdGhlICZzZ190YWJsZSBhbGxvY2F0ZWQgaW4gQG1hcF9kbWFfYnVmLCBhbmQgaXQgaXMg
bWFuZGF0b3J5LgotCSAqIEl0IHNob3VsZCBhbHNvIHVucGluIHRoZSBiYWNraW5nIHN0b3JhZ2Ug
aWYgdGhpcyBpcyB0aGUgbGFzdCBtYXBwaW5nCi0JICogb2YgdGhlIERNQSBidWZmZXIsIGl0IHRo
ZSBleHBvcnRlciBzdXBwb3J0cyBiYWNraW5nIHN0b3JhZ2UKLQkgKiBtaWdyYXRpb24uCiAJICov
CiAJdm9pZCAoKnVubWFwX2RtYV9idWYpKHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKiwKIAkJ
CSAgICAgIHN0cnVjdCBzZ190YWJsZSAqLApAQCAtMzMwLDYgKzM1NiwzNSBAQCBzdHJ1Y3QgZG1h
X2J1ZiB7CiAJfSBjYl9leGNsLCBjYl9zaGFyZWQ7CiB9OwogCisvKioKKyAqIHN0cnVjdCBkbWFf
YnVmX2F0dGFjaF9vcHMgLSBpbXBvcnRlciBvcGVyYXRpb25zIGZvciBhbiBhdHRhY2htZW50Cisg
KiBAaW52YWxpZGF0ZTogW29wdGlvbmFsXSBpbnZhbGlkYXRlIGFsbCBtYXBwaW5ncyBtYWRlIHVz
aW5nIHRoaXMgYXR0YWNobWVudC4KKyAqCisgKiBBdHRhY2htZW50IG9wZXJhdGlvbnMgaW1wbGVt
ZW50ZWQgYnkgdGhlIGltcG9ydGVyLgorICovCitzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2hfb3BzIHsK
KwkvKioKKwkgKiBAaW52YWxpZGF0ZToKKwkgKgorCSAqIElmIHRoZSBpbnZhbGlkYXRlIGNhbGxi
YWNrIGlzIHByb3ZpZGVkIHRoZSBmcmFtZXdvcmsgY2FuIGF2b2lkCisJICogcGlubmluZyB0aGUg
YmFja2luZyBzdG9yZSB3aGlsZSBtYXBwaW5ncyBleGlzdHMuCisJICoKKwkgKiBUaGlzIGNhbGxi
YWNrIGlzIGNhbGxlZCB3aXRoIHRoZSBsb2NrIG9mIHRoZSByZXNlcnZhdGlvbiBvYmplY3QKKwkg
KiBhc3NvY2lhdGVkIHdpdGggdGhlIGRtYV9idWYgaGVsZCBhbmQgdGhlIG1hcHBpbmcgZnVuY3Rp
b24gbXVzdCBiZQorCSAqIGNhbGxlZCB3aXRoIHRoaXMgbG9jayBoZWxkIGFzIHdlbGwuIFRoaXMg
bWFrZXMgc3VyZSB0aGF0IG5vIG1hcHBpbmcKKwkgKiBpcyBjcmVhdGVkIGNvbmN1cnJlbnRseSB3
aXRoIGFuIG9uZ29pbmcgaW52YWxpZGF0aW9uLgorCSAqCisJICogQWZ0ZXIgdGhlIGNhbGxiYWNr
IGFsbCBleGlzdGluZyBtYXBwaW5ncyBhcmUgc3RpbGwgdmFsaWQgdW50aWwgYWxsCisJICogZmVu
Y2VzIGluIHRoZSBkbWFfYnVmcyByZXNlcnZhdGlvbiBvYmplY3QgYXJlIHNpZ25hbGVkLiBBZnRl
ciBnZXR0aW5nIGFuCisJICogaW52YWxpZGF0aW9uIGNhbGxiYWNrIGFsbCBtYXBwaW5ncyBzaG91
bGQgYmUgZGVzdHJveWVkIGJ5IHRoZSBpbXBvcnRlciB1c2luZworCSAqIHRoZSBub3JtYWwgZG1h
X2J1Zl91bm1hcF9hdHRhY2htZW50KCkgZnVuY3Rpb24gYXMgc29vbiBhcyBwb3NzaWJsZS4KKwkg
KgorCSAqIE5ldyBtYXBwaW5ncyBjYW4gYmUgY3JlYXRlZCBpbW1lZGlhdGVseSwgYnV0IGNhbid0
IGJlIHVzZWQgYmVmb3JlIHRoZQorCSAqIGV4Y2x1c2l2ZSBmZW5jZSBpbiB0aGUgZG1hX2J1ZnMg
cmVzZXJ2YXRpb24gb2JqZWN0IGlzIHNpZ25hbGVkLgorCSAqLworCXZvaWQgKCppbnZhbGlkYXRl
KShzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gpOworfTsKKwogLyoqCiAgKiBzdHJ1
Y3QgZG1hX2J1Zl9hdHRhY2htZW50IC0gaG9sZHMgZGV2aWNlLWJ1ZmZlciBhdHRhY2htZW50IGRh
dGEKICAqIEBkbWFidWY6IGJ1ZmZlciBmb3IgdGhpcyBhdHRhY2htZW50LgpAQCAtMzM4LDYgKzM5
Myw4IEBAIHN0cnVjdCBkbWFfYnVmIHsKICAqIEBzZ3Q6IGNhY2hlZCBtYXBwaW5nLgogICogQGRp
cjogZGlyZWN0aW9uIG9mIGNhY2hlZCBtYXBwaW5nLgogICogQHByaXY6IGV4cG9ydGVyIHNwZWNp
ZmljIGF0dGFjaG1lbnQgZGF0YS4KKyAqIEBpbXBvcnRlcl9vcHM6IGltcG9ydGVyIG9wZXJhdGlv
bnMgZm9yIHRoaXMgYXR0YWNobWVudC4KKyAqIEBpbXBvcnRlcl9wcml2OiBpbXBvcnRlciBzcGVj
aWZpYyBhdHRhY2htZW50IGRhdGEuCiAgKgogICogVGhpcyBzdHJ1Y3R1cmUgaG9sZHMgdGhlIGF0
dGFjaG1lbnQgaW5mb3JtYXRpb24gYmV0d2VlbiB0aGUgZG1hX2J1ZiBidWZmZXIKICAqIGFuZCBp
dHMgdXNlciBkZXZpY2UocykuIFRoZSBsaXN0IGNvbnRhaW5zIG9uZSBhdHRhY2htZW50IHN0cnVj
dCBwZXIgZGV2aWNlCkBAIC0zNTUsNiArNDEyLDkgQEAgc3RydWN0IGRtYV9idWZfYXR0YWNobWVu
dCB7CiAJc3RydWN0IHNnX3RhYmxlICpzZ3Q7CiAJZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGly
OwogCXZvaWQgKnByaXY7CisKKwljb25zdCBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2hfb3BzICppbXBv
cnRlcl9vcHM7CisJdm9pZCAqaW1wb3J0ZXJfcHJpdjsKIH07CiAKIC8qKgpAQCAtNDA1LDEwICs0
NjUsNDIgQEAgc3RhdGljIGlubGluZSB2b2lkIGdldF9kbWFfYnVmKHN0cnVjdCBkbWFfYnVmICpk
bWFidWYpCiAJZ2V0X2ZpbGUoZG1hYnVmLT5maWxlKTsKIH0KIAorLyoqCisgKiBkbWFfYnVmX2lz
X2R5bmFtaWMgLSBjaGVjayBpZiBhIERNQS1idWYgdXNlcyBkeW5hbWljIG1hcHBpbmdzLgorICog
QGRtYWJ1ZjogdGhlIERNQS1idWYgdG8gY2hlY2sKKyAqCisgKiBSZXR1cm5zIHRydWUgaWYgYSBE
TUEtYnVmIGV4cG9ydGVyIHdhbnRzIHRvIGNyZWF0ZSBkeW5hbWljIHNnIHRhYmxlIG1hcHBpbmdz
CisgKiBmb3IgZWFjaCBhdHRhY2htZW50LiBGYWxzZSBpZiBvbmx5IGEgc2luZ2xlIHN0YXRpYyBz
ZyB0YWJsZSBzaG91bGQgYmUgdXNlZC4KKyAqLworc3RhdGljIGlubGluZSBib29sIGRtYV9idWZf
aXNfZHluYW1pYyhzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmKQoreworCXJldHVybiAhIWRtYWJ1Zi0+
b3BzLT5waW47Cit9CisKKy8qKgorICogZG1hX2J1Zl9hdHRhY2htZW50X2lzX2R5bmFtaWMgLSBj
aGVjayBpZiBhIERNQS1idWYgYXR0YWNobWVudCB1c2VzIGR5bmFtaWMKKyAqIG1hcHBpbnNnCisg
KiBAYXR0YWNoOiB0aGUgRE1BLWJ1ZiBhdHRhY2htZW50IHRvIGNoZWNrCisgKgorICogUmV0dXJu
cyB0cnVlIGlmIGEgRE1BLWJ1ZiBpbXBvcnRlciB3YW50cyB0byB1c2UgZHluYW1pYyBzZyB0YWJs
ZSBtYXBwaW5ncyBhbmQKKyAqIGNhbGxzIHRoZSBtYXAvdW5tYXAgZnVuY3Rpb25zIHdpdGggdGhl
IHJlc2VydmF0aW9uIG9iamVjdCBsb2NrZWQuCisgKi8KK3N0YXRpYyBpbmxpbmUgYm9vbAorZG1h
X2J1Zl9hdHRhY2htZW50X2lzX2R5bmFtaWMoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0
YWNoKQoreworCXJldHVybiBhdHRhY2gtPmltcG9ydGVyX29wcyAmJiBhdHRhY2gtPmltcG9ydGVy
X29wcy0+aW52YWxpZGF0ZTsKK30KKwogc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqZG1hX2J1
Zl9hdHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKLQkJCQkJCQlzdHJ1Y3QgZGV2aWNlICpk
ZXYpOworCQkJCQkgIHN0cnVjdCBkZXZpY2UgKmRldik7CitzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2ht
ZW50ICoKK2RtYV9idWZfZHluYW1pY19hdHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1Ziwgc3Ry
dWN0IGRldmljZSAqZGV2LAorCQkgICAgICAgY29uc3Qgc3RydWN0IGRtYV9idWZfYXR0YWNoX29w
cyAqaW1wb3J0ZXJfb3BzLAorCQkgICAgICAgdm9pZCAqaW1wb3J0ZXJfcHJpdik7CiB2b2lkIGRt
YV9idWZfZGV0YWNoKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsCi0JCQkJc3RydWN0IGRtYV9idWZf
YXR0YWNobWVudCAqZG1hYnVmX2F0dGFjaCk7CisJCSAgICBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2ht
ZW50ICphdHRhY2gpOworaW50IGRtYV9idWZfcGluKHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQg
KmF0dGFjaCk7Cit2b2lkIGRtYV9idWZfdW5waW4oc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAq
YXR0YWNoKTsKIAogc3RydWN0IGRtYV9idWYgKmRtYV9idWZfZXhwb3J0KGNvbnN0IHN0cnVjdCBk
bWFfYnVmX2V4cG9ydF9pbmZvICpleHBfaW5mbyk7CiAKQEAgLTQyMCw2ICs1MTIsNyBAQCBzdHJ1
Y3Qgc2dfdGFibGUgKmRtYV9idWZfbWFwX2F0dGFjaG1lbnQoc3RydWN0IGRtYV9idWZfYXR0YWNo
bWVudCAqLAogCQkJCQllbnVtIGRtYV9kYXRhX2RpcmVjdGlvbik7CiB2b2lkIGRtYV9idWZfdW5t
YXBfYXR0YWNobWVudChzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICosIHN0cnVjdCBzZ190YWJs
ZSAqLAogCQkJCWVudW0gZG1hX2RhdGFfZGlyZWN0aW9uKTsKK3ZvaWQgZG1hX2J1Zl9pbnZhbGlk
YXRlX21hcHBpbmdzKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmKTsKIGludCBkbWFfYnVmX2JlZ2lu
X2NwdV9hY2Nlc3Moc3RydWN0IGRtYV9idWYgKmRtYV9idWYsCiAJCQkgICAgIGVudW0gZG1hX2Rh
dGFfZGlyZWN0aW9uIGRpcik7CiBpbnQgZG1hX2J1Zl9lbmRfY3B1X2FjY2VzcyhzdHJ1Y3QgZG1h
X2J1ZiAqZG1hX2J1ZiwKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vZHJpLWRldmVs
