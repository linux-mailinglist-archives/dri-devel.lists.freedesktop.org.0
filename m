Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A5CE0CB53B
	for <lists+dri-devel@lfdr.de>; Fri,  4 Oct 2019 09:39:31 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 98C2B6EAD7;
	Fri,  4 Oct 2019 07:38:55 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9ABF36EA80
 for <dri-devel@lists.freedesktop.org>; Thu,  3 Oct 2019 20:20:40 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 17007B011;
 Thu,  3 Oct 2019 20:20:39 +0000 (UTC)
From: Davidlohr Bueso <dave@stgolabs.net>
To: akpm@linux-foundation.org
Subject: [PATCH 11/11] x86/mm, pat: convert pat tree to generic interval tree
Date: Thu,  3 Oct 2019 13:18:58 -0700
Message-Id: <20191003201858.11666-12-dave@stgolabs.net>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20191003201858.11666-1-dave@stgolabs.net>
References: <20191003201858.11666-1-dave@stgolabs.net>
X-Mailman-Approved-At: Fri, 04 Oct 2019 07:38:50 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: dave@stgolabs.net, Davidlohr Bueso <dbueso@suse.de>, peterz@infradead.org,
 x86@kernel.org, linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org, Ingo Molnar <mingo@redhat.com>,
 Borislav Petkov <bp@alien8.de>, Thomas Gleixner <tglx@linutronix.de>,
 walken@google.com, linux-rdma@vger.kernel.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

V2l0aCBzb21lIGNvbnNpZGVyYXRpb25zLCB0aGUgY3VzdG9tIHBhdF9yYnRyZWUgaW1wbGVtZW50
YXRpb24gY2FuIGJlCnNpbXBsaWZpZWQgdG8gdXNlIG1vc3Qgb2YgdGhlIGdlbmVyaWMgaW50ZXJ2
YWxfdHJlZSBtYWNoaW5lcnkuCgpvIFRoZSB0cmVlIGlub3JkZXIgdHJhdmVyc2FsIGNhbiBzbGln
aHRseSBkaWZmZXIgd2hlbiB0aGVyZSBhcmUga2V5Cignc3RhcnQnKSBjb2xsaXNpb25zIGluIHRo
ZSB0cmVlIGR1ZSB0byBvbmUgZ29pbmcgbGVmdCBhbmQgYW5vdGhlciByaWdodC4KVGhpcywgaG93
ZXZlciwgb25seSBhZmZlY3RzIHRoZSBvdXRwdXQgb2YgZGVidWdmcycgcGF0X21lbXR5cGVfbGlz
dCBmaWxlLgoKbyBHZW5lcmljIGludGVydmFsIHRyZWVzIGFyZSBub3cgc2VtaSBvcGVuIFthLGIp
LCB3aGljaCBzdWl0cyB3ZWxsIHdpdGgKd2hhdCBwYXQgd2FudHMuCgpvIEVyYXNpbmcgbG9naWMg
bXVzdCByZW1haW4gdW50b3VjaGVkIGFzIHdlbGwuCgpJbiBvcmRlciBmb3IgdGhlIHR5cGVzIHRv
IHJlbWFpbiB1NjQsIHRoZSAnbWVtdHlwZV9pbnRlcnZhbCcgY2FsbHMgYXJlCmludHJvZHVjZWQs
IGFzIG9wcG9zZWQgdG8gc2ltcGx5IHVzaW5nIHN0cnVjdCBpbnRlcnZhbF90cmVlLgoKSW4gYWRk
aXRpb24sIHBhdCB0cmVlIG1pZ2h0IHBvdGVudGlhbGx5IGFsc28gYmVuZWZpdCBieSB0aGUgZmFz
dCBvdmVybGFwCmRldGVjdGlvbiBmb3IgdGhlIGluc2VydGlvbiBjYXNlIHdoZW4gbG9va2luZyB1
cCB0aGUgZmlyc3Qgb3ZlcmxhcHBpbmcgbm9kZQppbiB0aGUgdHJlZS4KCkZpbmFsbHksIEkndmUg
dGVzdGVkIHRoaXMgb24gdmFyaW91cyBzZXJ2ZXJzLCB2aWEgc2FuaXR5IHdhcm5pbmdzLCBydW5u
aW5nCnNpZGUgYnkgc2lkZSB3aXRoIHRoZSBjdXJyZW50IHZlcnNpb24gYW5kIHNvIGZhciBzZWUg
bm8gZGlmZmVyZW5jZXMgaW4gdGhlCnJldHVybmVkIHBvaW50ZXIgbm9kZSB3aGVuIGRvaW5nIG1l
bXR5cGVfcmJfbG93ZXN0X21hdGNoKCkgbG9va3Vwcy4KCkNjOiBQZXRlciBaaWpsc3RyYSA8cGV0
ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiBUaG9tYXMgR2xlaXhuZXIgPHRnbHhAbGludXRyb25peC5k
ZT4KQ2M6IEluZ28gTW9sbmFyIDxtaW5nb0ByZWRoYXQuY29tPgpDYzogQm9yaXNsYXYgUGV0a292
IDxicEBhbGllbjguZGU+CkNjOiB4ODZAa2VybmVsLm9yZwpTaWduZWQtb2ZmLWJ5OiBEYXZpZGxv
aHIgQnVlc28gPGRidWVzb0BzdXNlLmRlPgotLS0KIGFyY2gveDg2L21tL3BhdC5jICAgICAgICB8
ICAyMiArKystLS0tCiBhcmNoL3g4Ni9tbS9wYXRfcmJ0cmVlLmMgfCAxNTEgKysrKysrKysrKy0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgNDMg
aW5zZXJ0aW9ucygrKSwgMTMwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gveDg2L21t
L3BhdC5jIGIvYXJjaC94ODYvbW0vcGF0LmMKaW5kZXggZDlmYmQ0ZjY5OTIwLi5hM2Q0N2I1ZGI3
MDQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL3BhdC5jCisrKyBiL2FyY2gveDg2L21tL3BhdC5j
CkBAIC00ODIsOCArNDgyLDggQEAgc3RhdGljIGludCByZXNlcnZlX3JhbV9wYWdlc190eXBlKHU2
NCBzdGFydCwgdTY0IGVuZCwKIAkJcGFnZSA9IHBmbl90b19wYWdlKHBmbik7CiAJCXR5cGUgPSBn
ZXRfcGFnZV9tZW10eXBlKHBhZ2UpOwogCQlpZiAodHlwZSAhPSBfUEFHRV9DQUNIRV9NT0RFX1dC
KSB7Ci0JCQlwcl9pbmZvKCJ4ODYvUEFUOiByZXNlcnZlX3JhbV9wYWdlc190eXBlIGZhaWxlZCBb
bWVtICUjMDEwTHgtJSMwMTBMeF0sIHRyYWNrIDB4JXgsIHJlcSAweCV4XG4iLAotCQkJCXN0YXJ0
LCBlbmQgLSAxLCB0eXBlLCByZXFfdHlwZSk7CisJCQlwcl9pbmZvKCJ4ODYvUEFUOiByZXNlcnZl
X3JhbV9wYWdlc190eXBlIGZhaWxlZCBbbWVtICUjMDEwTHgtJSMwMTBMeCksIHRyYWNrIDB4JXgs
IHJlcSAweCV4XG4iLAorCQkJCXN0YXJ0LCBlbmQsIHR5cGUsIHJlcV90eXBlKTsKIAkJCWlmIChu
ZXdfdHlwZSkKIAkJCQkqbmV3X3R5cGUgPSB0eXBlOwogCkBAIC01NTMsOCArNTUzLDggQEAgaW50
IHJlc2VydmVfbWVtdHlwZSh1NjQgc3RhcnQsIHU2NCBlbmQsIGVudW0gcGFnZV9jYWNoZV9tb2Rl
IHJlcV90eXBlLAogCXN0YXJ0ID0gc2FuaXRpemVfcGh5cyhzdGFydCk7CiAJZW5kID0gc2FuaXRp
emVfcGh5cyhlbmQpOwogCWlmIChzdGFydCA+PSBlbmQpIHsKLQkJV0FSTigxLCAiJXMgZmFpbGVk
OiBbbWVtICUjMDEwTHgtJSMwMTBMeF0sIHJlcSAlc1xuIiwgX19mdW5jX18sCi0JCQkJc3RhcnQs
IGVuZCAtIDEsIGNhdHRyX25hbWUocmVxX3R5cGUpKTsKKwkJV0FSTigxLCAiJXMgZmFpbGVkOiBb
bWVtICUjMDEwTHgtJSMwMTBMeCksIHJlcSAlc1xuIiwgX19mdW5jX18sCisJCQkJc3RhcnQsIGVu
ZCwgY2F0dHJfbmFtZShyZXFfdHlwZSkpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKQEAgLTYw
NSw4ICs2MDUsOCBAQCBpbnQgcmVzZXJ2ZV9tZW10eXBlKHU2NCBzdGFydCwgdTY0IGVuZCwgZW51
bSBwYWdlX2NhY2hlX21vZGUgcmVxX3R5cGUsCiAKIAllcnIgPSByYnRfbWVtdHlwZV9jaGVja19p
bnNlcnQobmV3LCBuZXdfdHlwZSk7CiAJaWYgKGVycikgewotCQlwcl9pbmZvKCJ4ODYvUEFUOiBy
ZXNlcnZlX21lbXR5cGUgZmFpbGVkIFttZW0gJSMwMTBMeC0lIzAxMEx4XSwgdHJhY2sgJXMsIHJl
cSAlc1xuIiwKLQkJCXN0YXJ0LCBlbmQgLSAxLAorCQlwcl9pbmZvKCJ4ODYvUEFUOiByZXNlcnZl
X21lbXR5cGUgZmFpbGVkIFttZW0gJSMwMTBMeC0lIzAxMEx4KSwgdHJhY2sgJXMsIHJlcSAlc1xu
IiwKKwkJCXN0YXJ0LCBlbmQsCiAJCQljYXR0cl9uYW1lKG5ldy0+dHlwZSksIGNhdHRyX25hbWUo
cmVxX3R5cGUpKTsKIAkJa2ZyZWUobmV3KTsKIAkJc3Bpbl91bmxvY2soJm1lbXR5cGVfbG9jayk7
CkBAIC02MTYsOCArNjE2LDggQEAgaW50IHJlc2VydmVfbWVtdHlwZSh1NjQgc3RhcnQsIHU2NCBl
bmQsIGVudW0gcGFnZV9jYWNoZV9tb2RlIHJlcV90eXBlLAogCiAJc3Bpbl91bmxvY2soJm1lbXR5
cGVfbG9jayk7CiAKLQlkcHJpbnRrKCJyZXNlcnZlX21lbXR5cGUgYWRkZWQgW21lbSAlIzAxMEx4
LSUjMDEwTHhdLCB0cmFjayAlcywgcmVxICVzLCByZXQgJXNcbiIsCi0JCXN0YXJ0LCBlbmQgLSAx
LCBjYXR0cl9uYW1lKG5ldy0+dHlwZSksIGNhdHRyX25hbWUocmVxX3R5cGUpLAorCWRwcmludGso
InJlc2VydmVfbWVtdHlwZSBhZGRlZCBbbWVtICUjMDEwTHgtJSMwMTBMeCksIHRyYWNrICVzLCBy
ZXEgJXMsIHJldCAlc1xuIiwKKwkJc3RhcnQsIGVuZCwgY2F0dHJfbmFtZShuZXctPnR5cGUpLCBj
YXR0cl9uYW1lKHJlcV90eXBlKSwKIAkJbmV3X3R5cGUgPyBjYXR0cl9uYW1lKCpuZXdfdHlwZSkg
OiAiLSIpOwogCiAJcmV0dXJuIGVycjsKQEAgLTY1NCwxNCArNjU0LDE0IEBAIGludCBmcmVlX21l
bXR5cGUodTY0IHN0YXJ0LCB1NjQgZW5kKQogCXNwaW5fdW5sb2NrKCZtZW10eXBlX2xvY2spOwog
CiAJaWYgKElTX0VSUihlbnRyeSkpIHsKLQkJcHJfaW5mbygieDg2L1BBVDogJXM6JWQgZnJlZWlu
ZyBpbnZhbGlkIG1lbXR5cGUgW21lbSAlIzAxMEx4LSUjMDEwTHhdXG4iLAotCQkJY3VycmVudC0+
Y29tbSwgY3VycmVudC0+cGlkLCBzdGFydCwgZW5kIC0gMSk7CisJCXByX2luZm8oIng4Ni9QQVQ6
ICVzOiVkIGZyZWVpbmcgaW52YWxpZCBtZW10eXBlIFttZW0gJSMwMTBMeC0lIzAxMEx4KVxuIiwK
KwkJCWN1cnJlbnQtPmNvbW0sIGN1cnJlbnQtPnBpZCwgc3RhcnQsIGVuZCk7CiAJCXJldHVybiAt
RUlOVkFMOwogCX0KIAogCWtmcmVlKGVudHJ5KTsKIAotCWRwcmludGsoImZyZWVfbWVtdHlwZSBy
ZXF1ZXN0IFttZW0gJSMwMTBMeC0lIzAxMEx4XVxuIiwgc3RhcnQsIGVuZCAtIDEpOworCWRwcmlu
dGsoImZyZWVfbWVtdHlwZSByZXF1ZXN0IFttZW0gJSMwMTBMeC0lIzAxMEx4KVxuIiwgc3RhcnQs
IGVuZCk7CiAKIAlyZXR1cm4gMDsKIH0KZGlmZiAtLWdpdCBhL2FyY2gveDg2L21tL3BhdF9yYnRy
ZWUuYyBiL2FyY2gveDg2L21tL3BhdF9yYnRyZWUuYwppbmRleCA2NWViZTRiODhmN2MuLjg5ZDA5
N2M1MGFkYiAxMDA2NDQKLS0tIGEvYXJjaC94ODYvbW0vcGF0X3JidHJlZS5jCisrKyBiL2FyY2gv
eDg2L21tL3BhdF9yYnRyZWUuYwpAQCAtNSwxNCArNSwxMyBAQAogICogQXV0aG9yczogVmVua2F0
ZXNoIFBhbGxpcGFkaSA8dmVua2F0ZXNoLnBhbGxpcGFkaUBpbnRlbC5jb20+CiAgKiAgICAgICAg
ICBTdXJlc2ggQiBTaWRkaGEgPHN1cmVzaC5iLnNpZGRoYUBpbnRlbC5jb20+CiAgKgotICogSW50
ZXJ2YWwgdHJlZSAoYXVnbWVudGVkIHJidHJlZSkgdXNlZCB0byBzdG9yZSB0aGUgUEFUIG1lbW9y
eSB0eXBlCi0gKiByZXNlcnZhdGlvbnMuCisgKiBJbnRlcnZhbCB0cmVlIHVzZWQgdG8gc3RvcmUg
dGhlIFBBVCBtZW1vcnkgdHlwZSByZXNlcnZhdGlvbnMuCiAgKi8KIAogI2luY2x1ZGUgPGxpbnV4
L3NlcV9maWxlLmg+CiAjaW5jbHVkZSA8bGludXgvZGVidWdmcy5oPgogI2luY2x1ZGUgPGxpbnV4
L2tlcm5lbC5oPgotI2luY2x1ZGUgPGxpbnV4L3JidHJlZV9hdWdtZW50ZWQuaD4KKyNpbmNsdWRl
IDxsaW51eC9pbnRlcnZhbF90cmVlX2dlbi5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CiAj
aW5jbHVkZSA8bGludXgvZ2ZwLmg+CiAKQEAgLTMzLDcyICszMiwyNSBAQAogICoKICAqIG1lbXR5
cGVfbG9jayBwcm90ZWN0cyB0aGUgcmJ0cmVlLgogICovCisjZGVmaW5lIFNUQVJUKG5vZGUpICgo
bm9kZSktPnN0YXJ0KQorI2RlZmluZSBFTkQobm9kZSkgICgobm9kZSktPmVuZCkKK0lOVEVSVkFM
X1RSRUVfREVGSU5FKHN0cnVjdCBtZW10eXBlLCByYiwgdTY0LCBzdWJ0cmVlX21heF9lbmQsCisJ
CSAgICAgU1RBUlQsIEVORCwgc3RhdGljLCBtZW10eXBlX2ludGVydmFsKQogCi1zdGF0aWMgc3Ry
dWN0IHJiX3Jvb3QgbWVtdHlwZV9yYnJvb3QgPSBSQl9ST09UOwotCi1zdGF0aWMgaW50IGlzX25v
ZGVfb3ZlcmxhcChzdHJ1Y3QgbWVtdHlwZSAqbm9kZSwgdTY0IHN0YXJ0LCB1NjQgZW5kKQotewot
CWlmIChub2RlLT5zdGFydCA+PSBlbmQgfHwgbm9kZS0+ZW5kIDw9IHN0YXJ0KQotCQlyZXR1cm4g
MDsKLQotCXJldHVybiAxOwotfQotCi1zdGF0aWMgdTY0IGdldF9zdWJ0cmVlX21heF9lbmQoc3Ry
dWN0IHJiX25vZGUgKm5vZGUpCi17Ci0JdTY0IHJldCA9IDA7Ci0JaWYgKG5vZGUpIHsKLQkJc3Ry
dWN0IG1lbXR5cGUgKmRhdGEgPSByYl9lbnRyeShub2RlLCBzdHJ1Y3QgbWVtdHlwZSwgcmIpOwot
CQlyZXQgPSBkYXRhLT5zdWJ0cmVlX21heF9lbmQ7Ci0JfQotCXJldHVybiByZXQ7Ci19Ci0KLSNk
ZWZpbmUgTk9ERV9FTkQobm9kZSkgKChub2RlKS0+ZW5kKQotCi1SQl9ERUNMQVJFX0NBTExCQUNL
U19NQVgoc3RhdGljLCBtZW10eXBlX3JiX2F1Z21lbnRfY2IsCi0JCQkgc3RydWN0IG1lbXR5cGUs
IHJiLCB1NjQsIHN1YnRyZWVfbWF4X2VuZCwgTk9ERV9FTkQpCi0KLS8qIEZpbmQgdGhlIGZpcnN0
IChsb3dlc3Qgc3RhcnQgYWRkcikgb3ZlcmxhcHBpbmcgcmFuZ2UgZnJvbSByYiB0cmVlICovCi1z
dGF0aWMgc3RydWN0IG1lbXR5cGUgKm1lbXR5cGVfcmJfbG93ZXN0X21hdGNoKHN0cnVjdCByYl9y
b290ICpyb290LAotCQkJCXU2NCBzdGFydCwgdTY0IGVuZCkKLXsKLQlzdHJ1Y3QgcmJfbm9kZSAq
bm9kZSA9IHJvb3QtPnJiX25vZGU7Ci0Jc3RydWN0IG1lbXR5cGUgKmxhc3RfbG93ZXIgPSBOVUxM
OwotCi0Jd2hpbGUgKG5vZGUpIHsKLQkJc3RydWN0IG1lbXR5cGUgKmRhdGEgPSByYl9lbnRyeShu
b2RlLCBzdHJ1Y3QgbWVtdHlwZSwgcmIpOwotCi0JCWlmIChnZXRfc3VidHJlZV9tYXhfZW5kKG5v
ZGUtPnJiX2xlZnQpID4gc3RhcnQpIHsKLQkJCS8qIExvd2VzdCBvdmVybGFwIGlmIGFueSBtdXN0
IGJlIG9uIGxlZnQgc2lkZSAqLwotCQkJbm9kZSA9IG5vZGUtPnJiX2xlZnQ7Ci0JCX0gZWxzZSBp
ZiAoaXNfbm9kZV9vdmVybGFwKGRhdGEsIHN0YXJ0LCBlbmQpKSB7Ci0JCQlsYXN0X2xvd2VyID0g
ZGF0YTsKLQkJCWJyZWFrOwotCQl9IGVsc2UgaWYgKHN0YXJ0ID49IGRhdGEtPnN0YXJ0KSB7Ci0J
CQkvKiBMb3dlc3Qgb3ZlcmxhcCBpZiBhbnkgbXVzdCBiZSBvbiByaWdodCBzaWRlICovCi0JCQlu
b2RlID0gbm9kZS0+cmJfcmlnaHQ7Ci0JCX0gZWxzZSB7Ci0JCQlicmVhazsKLQkJfQotCX0KLQly
ZXR1cm4gbGFzdF9sb3dlcjsgLyogUmV0dXJucyBOVUxMIGlmIHRoZXJlIGlzIG5vIG92ZXJsYXAg
Ki8KLX0KK3N0YXRpYyBzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgbWVtdHlwZV9yYnJvb3QgPSBSQl9S
T09UX0NBQ0hFRDsKIAogZW51bSB7CiAJTUVNVFlQRV9FWEFDVF9NQVRDSAk9IDAsCiAJTUVNVFlQ
RV9FTkRfTUFUQ0gJPSAxCiB9OwogCi1zdGF0aWMgc3RydWN0IG1lbXR5cGUgKm1lbXR5cGVfcmJf
bWF0Y2goc3RydWN0IHJiX3Jvb3QgKnJvb3QsCitzdGF0aWMgc3RydWN0IG1lbXR5cGUgKm1lbXR5
cGVfcmJfbWF0Y2goc3RydWN0IHJiX3Jvb3RfY2FjaGVkICpyb290LAogCQkJCXU2NCBzdGFydCwg
dTY0IGVuZCwgaW50IG1hdGNoX3R5cGUpCiB7CiAJc3RydWN0IG1lbXR5cGUgKm1hdGNoOwogCi0J
bWF0Y2ggPSBtZW10eXBlX3JiX2xvd2VzdF9tYXRjaChyb290LCBzdGFydCwgZW5kKTsKKwltYXRj
aCA9IG1lbXR5cGVfaW50ZXJ2YWxfaXRlcl9maXJzdChyb290LCBzdGFydCwgZW5kKTsKIAl3aGls
ZSAobWF0Y2ggIT0gTlVMTCAmJiBtYXRjaC0+c3RhcnQgPCBlbmQpIHsKLQkJc3RydWN0IHJiX25v
ZGUgKm5vZGU7Ci0KIAkJaWYgKChtYXRjaF90eXBlID09IE1FTVRZUEVfRVhBQ1RfTUFUQ0gpICYm
CiAJCSAgICAobWF0Y2gtPnN0YXJ0ID09IHN0YXJ0KSAmJiAobWF0Y2gtPmVuZCA9PSBlbmQpKQog
CQkJcmV0dXJuIG1hdGNoOwpAQCAtMTA3LDI2ICs1OSwyMSBAQCBzdGF0aWMgc3RydWN0IG1lbXR5
cGUgKm1lbXR5cGVfcmJfbWF0Y2goc3RydWN0IHJiX3Jvb3QgKnJvb3QsCiAJCSAgICAobWF0Y2gt
PnN0YXJ0IDwgc3RhcnQpICYmIChtYXRjaC0+ZW5kID09IGVuZCkpCiAJCQlyZXR1cm4gbWF0Y2g7
CiAKLQkJbm9kZSA9IHJiX25leHQoJm1hdGNoLT5yYik7Ci0JCWlmIChub2RlKQotCQkJbWF0Y2gg
PSByYl9lbnRyeShub2RlLCBzdHJ1Y3QgbWVtdHlwZSwgcmIpOwotCQllbHNlCi0JCQltYXRjaCA9
IE5VTEw7CisJCW1hdGNoID0gbWVtdHlwZV9pbnRlcnZhbF9pdGVyX25leHQobWF0Y2gsIHN0YXJ0
LCBlbmQpOwogCX0KIAogCXJldHVybiBOVUxMOyAvKiBSZXR1cm5zIE5VTEwgaWYgdGhlcmUgaXMg
bm8gbWF0Y2ggKi8KIH0KIAotc3RhdGljIGludCBtZW10eXBlX3JiX2NoZWNrX2NvbmZsaWN0KHN0
cnVjdCByYl9yb290ICpyb290LAorc3RhdGljIGludCBtZW10eXBlX3JiX2NoZWNrX2NvbmZsaWN0
KHN0cnVjdCByYl9yb290X2NhY2hlZCAqcm9vdCwKIAkJCQl1NjQgc3RhcnQsIHU2NCBlbmQsCiAJ
CQkJZW51bSBwYWdlX2NhY2hlX21vZGUgcmVxdHlwZSwKIAkJCQllbnVtIHBhZ2VfY2FjaGVfbW9k
ZSAqbmV3dHlwZSkKIHsKLQlzdHJ1Y3QgcmJfbm9kZSAqbm9kZTsKIAlzdHJ1Y3QgbWVtdHlwZSAq
bWF0Y2g7CiAJZW51bSBwYWdlX2NhY2hlX21vZGUgZm91bmRfdHlwZSA9IHJlcXR5cGU7CiAKLQlt
YXRjaCA9IG1lbXR5cGVfcmJfbG93ZXN0X21hdGNoKCZtZW10eXBlX3Jicm9vdCwgc3RhcnQsIGVu
ZCk7CisJbWF0Y2ggPSBtZW10eXBlX2ludGVydmFsX2l0ZXJfZmlyc3QoJm1lbXR5cGVfcmJyb290
LCBzdGFydCwgZW5kKTsKIAlpZiAobWF0Y2ggPT0gTlVMTCkKIAkJZ290byBzdWNjZXNzOwogCkBA
IC0xMzYsMTkgKzgzLDEyIEBAIHN0YXRpYyBpbnQgbWVtdHlwZV9yYl9jaGVja19jb25mbGljdChz
dHJ1Y3QgcmJfcm9vdCAqcm9vdCwKIAlkcHJpbnRrKCJPdmVybGFwIGF0IDB4JUx4LTB4JUx4XG4i
LCBtYXRjaC0+c3RhcnQsIG1hdGNoLT5lbmQpOwogCWZvdW5kX3R5cGUgPSBtYXRjaC0+dHlwZTsK
IAotCW5vZGUgPSByYl9uZXh0KCZtYXRjaC0+cmIpOwotCXdoaWxlIChub2RlKSB7Ci0JCW1hdGNo
ID0gcmJfZW50cnkobm9kZSwgc3RydWN0IG1lbXR5cGUsIHJiKTsKLQotCQlpZiAobWF0Y2gtPnN0
YXJ0ID49IGVuZCkgLyogQ2hlY2tlZCBhbGwgcG9zc2libGUgbWF0Y2hlcyAqLwotCQkJZ290byBz
dWNjZXNzOwotCi0JCWlmIChpc19ub2RlX292ZXJsYXAobWF0Y2gsIHN0YXJ0LCBlbmQpICYmCi0J
CSAgICBtYXRjaC0+dHlwZSAhPSBmb3VuZF90eXBlKSB7CisJbWF0Y2ggPSBtZW10eXBlX2ludGVy
dmFsX2l0ZXJfbmV4dChtYXRjaCwgc3RhcnQsIGVuZCk7CisJd2hpbGUgKG1hdGNoKSB7CisJCWlm
IChtYXRjaC0+dHlwZSAhPSBmb3VuZF90eXBlKQogCQkJZ290byBmYWlsdXJlOwotCQl9CiAKLQkJ
bm9kZSA9IHJiX25leHQoJm1hdGNoLT5yYik7CisJCW1hdGNoID0gbWVtdHlwZV9pbnRlcnZhbF9p
dGVyX25leHQobWF0Y2gsIHN0YXJ0LCBlbmQpOwogCX0KIHN1Y2Nlc3M6CiAJaWYgKG5ld3R5cGUp
CkBAIC0xNjMsMjggKzEwMyw2IEBAIHN0YXRpYyBpbnQgbWVtdHlwZV9yYl9jaGVja19jb25mbGlj
dChzdHJ1Y3QgcmJfcm9vdCAqcm9vdCwKIAlyZXR1cm4gLUVCVVNZOwogfQogCi1zdGF0aWMgdm9p
ZCBtZW10eXBlX3JiX2luc2VydChzdHJ1Y3QgcmJfcm9vdCAqcm9vdCwgc3RydWN0IG1lbXR5cGUg
Km5ld2RhdGEpCi17Ci0Jc3RydWN0IHJiX25vZGUgKipub2RlID0gJihyb290LT5yYl9ub2RlKTsK
LQlzdHJ1Y3QgcmJfbm9kZSAqcGFyZW50ID0gTlVMTDsKLQotCXdoaWxlICgqbm9kZSkgewotCQlz
dHJ1Y3QgbWVtdHlwZSAqZGF0YSA9IHJiX2VudHJ5KCpub2RlLCBzdHJ1Y3QgbWVtdHlwZSwgcmIp
OwotCi0JCXBhcmVudCA9ICpub2RlOwotCQlpZiAoZGF0YS0+c3VidHJlZV9tYXhfZW5kIDwgbmV3
ZGF0YS0+ZW5kKQotCQkJZGF0YS0+c3VidHJlZV9tYXhfZW5kID0gbmV3ZGF0YS0+ZW5kOwotCQlp
ZiAobmV3ZGF0YS0+c3RhcnQgPD0gZGF0YS0+c3RhcnQpCi0JCQlub2RlID0gJigoKm5vZGUpLT5y
Yl9sZWZ0KTsKLQkJZWxzZSBpZiAobmV3ZGF0YS0+c3RhcnQgPiBkYXRhLT5zdGFydCkKLQkJCW5v
ZGUgPSAmKCgqbm9kZSktPnJiX3JpZ2h0KTsKLQl9Ci0KLQluZXdkYXRhLT5zdWJ0cmVlX21heF9l
bmQgPSBuZXdkYXRhLT5lbmQ7Ci0JcmJfbGlua19ub2RlKCZuZXdkYXRhLT5yYiwgcGFyZW50LCBu
b2RlKTsKLQlyYl9pbnNlcnRfYXVnbWVudGVkKCZuZXdkYXRhLT5yYiwgcm9vdCwgJm1lbXR5cGVf
cmJfYXVnbWVudF9jYik7Ci19Ci0KIGludCByYnRfbWVtdHlwZV9jaGVja19pbnNlcnQoc3RydWN0
IG1lbXR5cGUgKm5ldywKIAkJCSAgICAgZW51bSBwYWdlX2NhY2hlX21vZGUgKnJldF90eXBlKQog
ewpAQCAtMTkyLDE0ICsxMTAsMTMgQEAgaW50IHJidF9tZW10eXBlX2NoZWNrX2luc2VydChzdHJ1
Y3QgbWVtdHlwZSAqbmV3LAogCiAJZXJyID0gbWVtdHlwZV9yYl9jaGVja19jb25mbGljdCgmbWVt
dHlwZV9yYnJvb3QsIG5ldy0+c3RhcnQsIG5ldy0+ZW5kLAogCQkJCQkJbmV3LT50eXBlLCByZXRf
dHlwZSk7CisJaWYgKGVycikKKwkJZ290byBkb25lOwogCi0JaWYgKCFlcnIpIHsKLQkJaWYgKHJl
dF90eXBlKQotCQkJbmV3LT50eXBlID0gKnJldF90eXBlOwotCi0JCW5ldy0+c3VidHJlZV9tYXhf
ZW5kID0gbmV3LT5lbmQ7Ci0JCW1lbXR5cGVfcmJfaW5zZXJ0KCZtZW10eXBlX3Jicm9vdCwgbmV3
KTsKLQl9CisJaWYgKHJldF90eXBlKQorCQluZXctPnR5cGUgPSAqcmV0X3R5cGU7CisJbWVtdHlw
ZV9pbnRlcnZhbF9pbnNlcnQobmV3LCAmbWVtdHlwZV9yYnJvb3QpOworZG9uZToKIAlyZXR1cm4g
ZXJyOwogfQogCkBAIC0yMjUsMTUgKzE0MiwxMiBAQCBzdHJ1Y3QgbWVtdHlwZSAqcmJ0X21lbXR5
cGVfZXJhc2UodTY0IHN0YXJ0LCB1NjQgZW5kKQogCiAJaWYgKGRhdGEtPnN0YXJ0ID09IHN0YXJ0
KSB7CiAJCS8qIG11bm1hcDogZXJhc2UgdGhpcyBub2RlICovCi0JCXJiX2VyYXNlX2F1Z21lbnRl
ZCgmZGF0YS0+cmIsICZtZW10eXBlX3Jicm9vdCwKLQkJCQkJJm1lbXR5cGVfcmJfYXVnbWVudF9j
Yik7CisJCW1lbXR5cGVfaW50ZXJ2YWxfcmVtb3ZlKGRhdGEsICZtZW10eXBlX3Jicm9vdCk7CiAJ
fSBlbHNlIHsKIAkJLyogbXJlbWFwOiB1cGRhdGUgdGhlIGVuZCB2YWx1ZSBvZiB0aGlzIG5vZGUg
Ki8KLQkJcmJfZXJhc2VfYXVnbWVudGVkKCZkYXRhLT5yYiwgJm1lbXR5cGVfcmJyb290LAotCQkJ
CQkmbWVtdHlwZV9yYl9hdWdtZW50X2NiKTsKKwkJbWVtdHlwZV9pbnRlcnZhbF9yZW1vdmUoZGF0
YSwgJm1lbXR5cGVfcmJyb290KTsKIAkJZGF0YS0+ZW5kID0gc3RhcnQ7Ci0JCWRhdGEtPnN1YnRy
ZWVfbWF4X2VuZCA9IGRhdGEtPmVuZDsKLQkJbWVtdHlwZV9yYl9pbnNlcnQoJm1lbXR5cGVfcmJy
b290LCBkYXRhKTsKKwkJbWVtdHlwZV9pbnRlcnZhbF9pbnNlcnQoZGF0YSwgJm1lbXR5cGVfcmJy
b290KTsKIAkJcmV0dXJuIE5VTEw7CiAJfQogCkBAIC0yNDIsMjQgKzE1NiwyMyBAQCBzdHJ1Y3Qg
bWVtdHlwZSAqcmJ0X21lbXR5cGVfZXJhc2UodTY0IHN0YXJ0LCB1NjQgZW5kKQogCiBzdHJ1Y3Qg
bWVtdHlwZSAqcmJ0X21lbXR5cGVfbG9va3VwKHU2NCBhZGRyKQogewotCXJldHVybiBtZW10eXBl
X3JiX2xvd2VzdF9tYXRjaCgmbWVtdHlwZV9yYnJvb3QsIGFkZHIsIGFkZHIgKyBQQUdFX1NJWkUp
OworCXJldHVybiBtZW10eXBlX2ludGVydmFsX2l0ZXJfZmlyc3QoJm1lbXR5cGVfcmJyb290LCBh
ZGRyLCBhZGRyICsgUEFHRV9TSVpFKTsKIH0KIAogI2lmIGRlZmluZWQoQ09ORklHX0RFQlVHX0ZT
KQogaW50IHJidF9tZW10eXBlX2NvcHlfbnRoX2VsZW1lbnQoc3RydWN0IG1lbXR5cGUgKm91dCwg
bG9mZl90IHBvcykKIHsKLQlzdHJ1Y3QgcmJfbm9kZSAqbm9kZTsKKwlzdHJ1Y3QgbWVtdHlwZSAq
bWF0Y2g7CiAJaW50IGkgPSAxOwogCi0Jbm9kZSA9IHJiX2ZpcnN0KCZtZW10eXBlX3Jicm9vdCk7
Ci0Jd2hpbGUgKG5vZGUgJiYgcG9zICE9IGkpIHsKLQkJbm9kZSA9IHJiX25leHQobm9kZSk7CisJ
bWF0Y2ggPSBtZW10eXBlX2ludGVydmFsX2l0ZXJfZmlyc3QoJm1lbXR5cGVfcmJyb290LCAwLCBV
TE9OR19NQVgpOworCXdoaWxlIChtYXRjaCAmJiBwb3MgIT0gaSkgeworCQltYXRjaCA9IG1lbXR5
cGVfaW50ZXJ2YWxfaXRlcl9uZXh0KG1hdGNoLCAwLCBVTE9OR19NQVgpOwogCQlpKys7CiAJfQog
Ci0JaWYgKG5vZGUpIHsgLyogcG9zID09IGkgKi8KLQkJc3RydWN0IG1lbXR5cGUgKnRoaXMgPSBy
Yl9lbnRyeShub2RlLCBzdHJ1Y3QgbWVtdHlwZSwgcmIpOwotCQkqb3V0ID0gKnRoaXM7CisJaWYg
KG1hdGNoKSB7IC8qIHBvcyA9PSBpICovCisJCSpvdXQgPSAqbWF0Y2g7CiAJCXJldHVybiAwOwog
CX0gZWxzZSB7CiAJCXJldHVybiAxOwotLSAKMi4xNi40CgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
