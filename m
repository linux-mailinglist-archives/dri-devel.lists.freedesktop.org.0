Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id DC8E5D64AD
	for <lists+dri-devel@lfdr.de>; Mon, 14 Oct 2019 16:04:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A49BD6E508;
	Mon, 14 Oct 2019 14:04:27 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3E2B06E2E8
 for <dri-devel@lists.freedesktop.org>; Mon, 14 Oct 2019 14:04:26 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id BEA72B255;
 Mon, 14 Oct 2019 14:04:24 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@linux.ie, daniel@ffwll.ch, maarten.lankhorst@linux.intel.com,
 mripard@kernel.org, sean@poorly.run, b.zolnierkie@samsung.com,
 ajax@redhat.com, ville.syrjala@linux.intel.com, malat@debian.org,
 michel@daenzer.net
Subject: [PATCH v2 12/15] drm/fbconv: Add helper documentation
Date: Mon, 14 Oct 2019 16:04:13 +0200
Message-Id: <20191014140416.28517-13-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191014140416.28517-1-tzimmermann@suse.de>
References: <20191014140416.28517-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: gregkh@linuxfoundation.org, linux-fbdev@vger.kernel.org,
 Thomas Zimmermann <tzimmermann@suse.de>, dri-devel@lists.freedesktop.org,
 corbet@lwn.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlcmUncyBub3cgYSB0dXRvcmlhbCBvbiBob3cgdG8gY3JlYXRlIGEgRFJNIGRyaXZlciBvbiB0
b3Agb2YgZmJjb252CmhlbHBlcnMuIFRoZSBEUk0gVE9ETyBsaXN0IGNvbnRhaW5zIGFuIGVudHJ5
IGZvciBjb252ZXJ0aW5nIGZiZGV2CmRyaXZlcnMgb3ZlciB0byBEUk0uCgpTaWduZWQtb2ZmLWJ5
OiBUaG9tYXMgWmltbWVybWFubiA8dHppbW1lcm1hbm5Ac3VzZS5kZT4KLS0tCiBEb2N1bWVudGF0
aW9uL2dwdS9kcm0ta21zLWhlbHBlcnMucnN0IHwgIDEyICsrCiBEb2N1bWVudGF0aW9uL2dwdS90
b2RvLnJzdCAgICAgICAgICAgIHwgIDE1ICsrKwogZHJpdmVycy9ncHUvZHJtL2RybV9mYmNvbnZf
aGVscGVyLmMgICB8IDE4MSArKysrKysrKysrKysrKysrKysrKysrKysrKwogMyBmaWxlcyBjaGFu
Z2VkLCAyMDggaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZ3B1L2Ry
bS1rbXMtaGVscGVycy5yc3QgYi9Eb2N1bWVudGF0aW9uL2dwdS9kcm0ta21zLWhlbHBlcnMucnN0
CmluZGV4IDk2NjhhN2ZlMjQwOC4uMTIzMmEzZWYyNGZmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0
aW9uL2dwdS9kcm0ta21zLWhlbHBlcnMucnN0CisrKyBiL0RvY3VtZW50YXRpb24vZ3B1L2RybS1r
bXMtaGVscGVycy5yc3QKQEAgLTQxMSwzICs0MTEsMTUgQEAgU0hNRU0gR0VNIEhlbHBlciBSZWZl
cmVuY2UKIAogLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX3NobWVtX2hl
bHBlci5jCiAgICA6ZXhwb3J0OgorCitmYmRldiBDb252ZXJzaW9uIEhlbHBlciBSZWZlcmVuY2UK
Kz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQorCisuLiBrZXJuZWwtZG9jOjogZHJp
dmVycy9ncHUvZHJtL2RybV9mYmNvbnZfaGVscGVyLmMKKyAgIDpkb2M6IGZiY29udiBoZWxwZXJz
CisKKy4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL2RybS9kcm1fZmJjb252X2hlbHBlci5oCisgICA6
aW50ZXJuYWw6CisKKy4uIGtlcm5lbC1kb2M6OiBkcml2ZXJzL2dwdS9kcm0vZHJtX2ZiY29udl9o
ZWxwZXIuYworICAgOmV4cG9ydDoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8u
cnN0IGIvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QKaW5kZXggNzk3ODU1NTlkNzExLi4xYmU0
NGExN2YzZTggMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0CisrKyBiL0Rv
Y3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0CkBAIC00NjIsMyArNDYyLDE4IEBAIENvbnRhY3Q6IFNh
bSBSYXZuYm9yZwogCiBPdXRzaWRlIERSTQogPT09PT09PT09PT0KKworQ29udmVydCBmYmRldiBk
cml2ZXJzIHRvIERSTQorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCitUaGVyZSBhcmUg
cGxlbnR5IG9mIGZiZGV2IGRyaXZlcnMgZm9yIG9sZCBoYXJkd2FyZS4gV2l0aCBmYmNvbnYgaGVs
cGVycywgd2UKK2hhdmUgYSBzaW1wbGUgYW5kIGNsZWFuIHdheSBvZiB0cmFuc2l0aW9uaW5nIGZi
ZGV2IGRyaXZlcnMgdG8gRFJNLiBTZXQgdXAgYQorc2ltcGxlIERSTSBkcml2ZXIgdGhhdCBidWls
ZHMgb250byB0aGUgZmJjb252IGhlbHBlcnMsIGNvcHkgb3ZlciB0aGUgZmJkZXYKK2RyaXZlciBh
bmQgY29ubmVjdCBib3RoLiBUaGlzIHNob3VsZCByZXN1bHQgaW4gYSBiYXNpYyBEUk0gZHJpdmVy
IHRoYXQgY2FuCitydW4gWDExIGFuZCBXZXN0b24uICBUaGVyZSdzIGEgdHV0b3JpYWwgZm9yIHRo
aXMgcHJvY2VzcyB3aXRoIGV4YW1wbGUgc291cmNlCitjb2RlIGluIHRoZSBmYmNvbnYgZG9jdW1l
bnRhdGlvbi4KKworRnJvbSB0aGVyZSwgcmVmYWN0b3IgdGhlIGRyaXZlciBzb3VyY2UgY29kZSBp
bnRvIGEgY2xlYW4gRFJNIGRyaXZlciB0aGF0CityZXF1aXJlcyBuZWl0aGVyIGZiZGV2IG5vciBm
YmNvbnYgaGVscGVycy4KKworQ29udGFjdDogVGhvbWFzIFppbW1lcm1hbm4KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9kcm1fZmJjb252X2hlbHBlci5jIGIvZHJpdmVycy9ncHUvZHJtL2Ry
bV9mYmNvbnZfaGVscGVyLmMKaW5kZXggN2Q3ZTRkYTJhMjllLi4xZmEyNDBhNDc4OWYgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fZmJjb252X2hlbHBlci5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9kcm1fZmJjb252X2hlbHBlci5jCkBAIC0xOCw2ICsxOCwxODcgQEAKICNpbmNsdWRl
IDxkcm0vZHJtX3Byb2JlX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fdmJsYW5rLmg+CiAK
Ky8qKgorICogRE9DOiBmYmNvbnYgaGVscGVycworICoKKyAqIFRoZSBMaW51eCBrZXJuZWwncyBm
YmRldiBzdWJzeXN0ZW0gcHJvdmlkZXMgYSB3aWRlIHJhbmdlIG9mIGRyaXZlcnMgZm9yCisgKiBv
bGRlciBncmFwaGljcyBoYXJkd2FyZS4gRXhjZXB0IGZvciB0aGVzZSBleGlzdG5nIGRyaXZlcnMs
IGZiZGV2IGlzCisgKiBkZXByZWNhdGVkIGFuZCBleHBlY3RlZCB0byBiZSByZW1vdmVkIGF0IHNv
bWUgcG9pbnQgaW4gdGhlIGZ1dHVyZS4gQWxsIG5ldworICogZGV2ZWxvcG1lbnQgaGFwcGVucyBp
biBEUk0uIFNvbWUgb2YgdGhlIGZiZGV2IGRyaXZlcnMgYXJlIHdvcnRoIGNhcnJ5aW5nCisgKiBm
b3J3YXJkLiBUaGUgZmJjb252IGhlbHBlciBmdW5jdGlvbnMgcHJvdmlkZSBhIGZyYW1ld29yayBm
b3IgcG9ydGluZyBmYmRldgorICogZHJpdmVycyB0byBEUk0uCisgKgorICogV2hlbiBwb3J0aW5n
IG92ZXIgZmJkZXYgZHJpdmVycyB0byBEUk0sIHRoZSBtb3N0IHNpZ25pZmljYW50IHByb2JsZW0g
aXMgdGhlCisgKiBkaWZmZXJlbmNlIGluIGhvdyB0aGUgaW50ZXJuYWwgZHJpdmVyIGludGVyZmFj
ZXMgd29yay4gRmJkZXYgaGFzIGEgc2luZ2xlCisgKiBmdW5jdGlvbiwgc3RydWN0IGZiX29wcy5m
Yl9zZXRfcGFyKCksIHRvIHNldCB2aWRlbyBtb2RlIGFuZCBmcmFtZWJ1ZmZlcgorICogZm9ybWF0
LiBEUk0gdXNlIGEgbXVjaCBtb3JlIGZpbmUtZ3JhaW5lZCBpbnRlcmZhY2UuIEluIGZiZGV2LCBm
cmFtZWJ1ZmZlcgorICogbWVtb3J5IGlzIG1hbmFnZWQgYnkgYSBzaW5nbGUgY2xpZW50LCB3aGls
ZSBpbiBEUk0gbXVsdGlwbGUgY2xpZW50cyBjYW4KKyAqIGhvbGQgYnVmZmVycyB3aXRoIGZyYW1l
YnVmZmVyIGRhdGEuCisgKgorICogVGhlIGZiY29udiBoZWxwZXIgbGlicmFyeSBwcm92aWRlcyBh
IHNldCBvZiBkYXRhIHN0cnVjdHVyZXMgYW5kIGZ1bmN0aW9ucworICogdGhhdCBjb25uZWN0IERS
TSBhbmQgZmJkZXYuIFRoZSByZXN1bHRpbmcgRFJNIGRyaXZlciBtYXBzIERSTSBvcGVyYXRpb25z
CisgKiB0byBmYmRldiBpbnRlcmZhY2VzIGFuZCB1c2VzIGFuIGZiZGV2IGRyaXZlciBmb3IgaXRz
IGhhcmR3YXJlIG9wZXJhdGlvbnMuCisgKiBTdWNoIGEgZHJpdmVyIGlzIG5vdCBpbnRlbmRlZCB0
byBiZSBtZXJnZWQgaW50byBEUk0gYXMtaXMuIEl0IGRvZXMsCisgKiBob3dldmVyLCBwcm92aWRl
IGEgc3RhcnRpbmcgcG9pbnQgZm9yIHJlZmFjdG9yaW5nIHRoZSBmYmRldiBkcml2ZXIncworICog
aW1wbGVtZW50YXRpb24gaW50byBmaXJzdC1jbGFzcyBEUk0gY29kZS4KKyAqCisgKiBBcyBhbiBl
eGFtcGxlLCB3ZSBjcmVhdGUgYSBEUk0gZHJpdmVyIGZyb20gdmVzYWZiLCBmYmRldidzIGdlbmVy
aWMKKyAqIHZlc2EgZHJpdmVyLiBXZSBiZWdpbiBieSBjcmVhdGluZyBhIERSTSBzdHViIGRyaXZl
ciB2ZXNhZHJtLiBQbGVhc2Uga2VlcAorICogaW4gbWluZCB0aGF0IHRoZSBwcm92aWRlZCBjb2Rl
IGlzIGZvciBpbGx1c3RyYXRpdmUgcHVycG9zZXMgYW5kIHJlcXVpcmVzCisgKiBlcnJvciBoYW5k
bGluZy4KKyAqCisgKiAuLiBjb2RlLWJsb2NrOjogYworICoKKyAqCURFRklORV9EUk1fR0VNX1NI
TUVNX0ZPUFModmVzYWRybV9maWxlX29wZXJhdGlvbnMpOworICoKKyAqCXN0YXRpYyBzdHJ1Y3Qg
ZHJtX2RyaXZlciB2ZXNhZHJtX2RyaXZlciA9IHsKKyAqCQkubWFqb3IgPSAxLAorICoJCS5taW5v
ciA9IDAsCisgKgkJLnBhdGNobGV2ZWwgPSAwLAorICoJCS5uYW1lID0gInZlc2Fkcm0iLAorICoJ
CS5kZXNjID0gIkRSTSBWRVNBIGRyaXZlciIsCisgKgkJLmRhdGUgPSAiMDEvMDEvMTk3MCIsCisg
KgkJLmRyaXZlcl9mZWF0dXJlcyA9IERSSVZFUl9BVE9NSUMgfAorICoJCQkJICAgRFJJVkVSX0dF
TSB8CisgKgkJCQkgICBEUklWRVJfTU9ERVNFVCwKKyAqCQkuZm9wcyA9ICZ2ZXNhZHJtX2ZpbGVf
b3BlcmF0aW9ucywKKyAqCQlEUk1fR0VNX1NITUVNX0RSSVZFUl9PUFMsCisgKgl9OworICoKKyAq
IEZiY29udiB1c2VzIFNITUVNLCBzbyB3ZSBzZXQgdXAgdGhlIHN0cnVjdHVyZXMgYWNjb3JkaW5n
bHkuCisgKgorICogVGhlIGZiZGV2IGNvZGUgdXN1YWxseSBjYWxscyByZWdpc3Rlcl9mcmFtZWJ1
ZmZlcigpIGFuZAorICogdW5yZWdpc3Rlcl9mcmFtZWJ1ZmZlcigpIHRvIGNvbm5lY3QgYW5kIGRp
c2Nvbm5lY3QgaXRzZWxmIHRvIHRoZSBmYmRldgorICogY29yZSBjb2RlLiBJbiBvdXIgY2FzZSwg
d2UgcmVwbGFjZSB0aGVzZSBjYWxscyB3aXRoCisgKiB2ZXNhZHJtX3JlZ2lzdGVyX2ZyYW1lYnVm
ZmVyKCkgYW5kIHZlc2Fkcm1fdW5yZWdpc3Rlcl9mcmFtZWJ1ZmZlcigpLCB3aGljaAorICogc2Vy
dmUgYXMgZW50cnkgcG9pbnRzIGZvciB2ZXNhZmIuCisgKgorICogLi4gY29kZS1ibG9jazo6IGMK
KyAqCisgKgkjaW5jbHVkZSA8ZHJtL2RybS9mYmNvbnZfaGVscGVyLmg+CisgKgorICoJc3RydWN0
IHZlc2Fkcm1fZGV2aWNlIHsKKyAqCQlzdHJ1Y3QgZHJtX2RldmljZSBkZXY7CisgKgkJc3RydWN0
IGZiX2luZm8gKmZiX2luZm87CisgKgorICoJCXN0cnVjdCBkcm1fZmJjb252X21vZGVzZXQgbW9k
ZXNldDsKKyAqCX07CisgKgorICoJc3RydWN0IHZlc2Fkcm1fZGV2aWNlKiB2ZXNhZHJtX3JlZ2lz
dGVyX2ZyYW1lYnVmZmVyKHN0cnVjdCBmYl9pbmZvICpmYl9pbmZvKQorICoJeworICoJCXN0cnVj
dCB2ZXNhZHJtICp2ZGV2OworICoKKyAqCQlkcm1fZmJjb252X2ZpbGxfZmJfaW5mbyhmYl9pbmZv
KTsKKyAqCisgKgkJdmRldiA9IGt6YWxsb2Moc2l6ZW9mKCp2ZGV2KSwgR0ZQX0tFUk5FTCk7Cisg
KgkJdmVzYWRybV9kZXZpY2VfaW5pdCh2ZGV2LCAmdmVzYWRybV9kcml2ZXIsIGZiX2luZm8pCisg
KgorICoJCWRybV9kZXZfcmVnaXN0ZXIoJnZkZXYtPmRldiwgMCk7CisgKgorICoJCXJldHVybiB2
ZGV2OworICoJfQorICoKKyAqIEhlcmUsIHdlIGhhdmUgdGhlIGZpcnN0IHJlZmVyZW5jZXMgdG8g
ZmJjb25mIGhlbHBlcnMuIFRoZSBpbnN0YW5jZQorICogb2Ygc3RydWN0IGRybV9mYmNvbnZfbW9k
ZXNldCBpcyB0aGUgY2VudHJhbCBkYXRhIHN0cnVjdHVyZSBmb3IgZmJjb252LgorICogQnVpbHQg
dXBvbiBzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUsIGl0IHN0b3JlcyBtb3N0IHN0YXRl
IGZvciB0aGUKKyAqIERSTSBkcml2ZXIuCisgKgorICogVGhlIGZ1bmN0aW9uIHZlc2Fkcm1fcmVn
aXN0ZXJfZnJhbWVidWZmZXIoKSB3aWxsIGxhdGVyIGJlIGNhbGxlZCBieQorICogdmVzYWZiIGNv
ZGUgd2l0aCB0aGUgZmJkZXYgZHJpdmVyJ3MgZmJfaW5mbyBzdHJ1Y3R1cmUuIEluIGNvcmUgZmJk
ZXYsCisgKiByZWdpc3Rlcl9mcmFtZWJ1ZmZlcigpIHdvdWxkIGZpbGwgZmJfaW5mbyB3aXRoIGdl
bmVyYWwgc3RhdGUgYW5kIGNvbXBsZXRlCisgKiByZWdpc3RyYXRpb24uIFdpdGggZmJjb252IGhl
bHBlcnMsIGRybV9mYmNvbnZfZmlsbF9mYl9pbmZvKCkgZG9lcyB0aGlzLgorICogSXQncyBhIHNp
bXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgZmJkZXYgc2V0dXAgcHJvY2Vzcywgd2l0aG91dCBkZXZp
Y2UgZmlsZQorICogY3JlYXRpb24sIHJlZ2lzdHJhdGlvbiwgb3IgZXZlbnRzLiBObyBjb25zb2xl
IGlzIGNyZWF0ZWQgZWl0aGVyLgorICogRmluYWxseSB2ZXNhZHJtX3JlZ2lzdGVyX2ZyYW1lYnVm
ZmVyKCkgaW5pdGlhbGl6ZXMgdGhlIHZlc2Fkcm0gZGV2aWNlIGFuZAorICogcmVnaXN0ZXJzIHRo
ZSBEUk0gZGV2aWNlLiBBdCB0aGlzIHBvaW50LCB2ZXNhZHJtIGlzIGNvbXBsZXRlbHkgaW5pdGlh
bGl6ZWQuCisgKgorICogRm9yIGNvbXBsZXRlbmVzcywgaGVyZSdzIHRoZSBpbXBsZW1lbnRhdGlv
biBvZgorICogdmVzYWRybV91bnJlZ2lzdGVyX2ZyYW1lYnVmZmVyKCksIHdoaWNoIHNodXRzIHRo
ZSBkZXZpY2UgZG93bi4KKyAqCisgKiAuLiBjb2RlLWJsb2NrOjogYworICoKKyAqCXZvaWQgdmVz
YWRybV91bnJlZ2lzdGVyX2ZyYW1lYnVmZmVyKHN0cnVjdCB2ZXNhZHJtX2RldmljZSAqdmRldikK
KyAqCXsKKyAqCQlzdHJ1Y3QgZmJfaW5mbyAqZmJfaW5mbyA9IHZkZXYtPmZiX2luZm87CisgKgor
ICoJCXZlc2Fkcm1fZGV2aWNlX2NsZWFudXAodmRldik7CisgKgkJa2ZyZWUodmRldik7CisgKgkJ
ZHJtX2ZiY29udl9jbGVhbnVwX2ZiX2luZm8oZmJfaW5mbyk7CisgKgl9CisgKgorICogTmV4dCB3
ZSBuZWVkIGFuIGltcGxlbWVudGF0aW9uIG9mIHZlc2Fkcm1fZGV2aWNlX2luaXQoKSBhbmQKKyAq
IHZlc2Fkcm1fZGV2aWNlX2NsZWFudXAoKS4gVGhlc2UgZnVuY3Rpb25zIGhhbmRsZSB0aGUgZGV0
YWlscyBvZgorICogZGV2aWNlIGNvbmZpZ3VyYXRpb24gYW5kIGNvbnNvbGUgc2V0dXAuIEFzIGFs
bCB0aGlzIGZ1bmN0aW9uYWxpdHkKKyAqIGlzIHByb3ZpZGVkIGJ5IGhlbHBlcnMsIHRoZSBhY3R1
YWwgaW1wbGVtZW50YXRpb24gaXMgZmFpcmx5IHNtYWxsLgorICoKKyAqIC4uIGNvZGUtYmxvY2s6
OiBjCisgKgorICoJc3RhdGljIGludCB2ZXNhZHJtX2RldmljZV9pbml0KHN0cnVjdCB2ZXNhZHJt
X2RldmljZSAqdmRldiwKKyAqCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2RyaXZlciAqZHJ2LAorICoJ
CQkJICAgICAgIHN0cnVjdCBmYl9pbmZvICpmYl9pbmZvKQorICoJeworICoJCXN0YXRpYyBjb25z
dCB1aW50MzJfdCBmb3JtYXRzW10gPSB7CisgKgkJCURSTV9GT1JNQVRfWFJHQjg4ODgsCisgKgkJ
CURSTV9GT1JNQVRfUkdCNTY1CisgKgkJfTsKKyAqCQlzdGF0aWMgdW5zaWduZWQgaW50IG1heF93
aWR0aCA9IDE2MDA7CisgKgkJc3RhdGljIHVuc2lnbmVkIGludCBtYXhfaGVpZ2h0ID0gMTIwMDsK
KyAqCQlzdGF0aWMgdW5zaWduZWQgaW50IHByZWZlcnJlZF9kZXB0aCA9IDMyOworICoKKyAqCQlk
cm1fZGV2X2luaXQoJnZkZXYtPmRldiwgZHJ2LCBmYl9pbmZvLT5kZXZpY2UpOworICoKKyAqCQl2
ZGV2LT5kZXYuZGV2X3ByaXZhdGUgPSB2ZGV2OworICoJCXZkZXYtPmRldi5wZGV2ID0gY29udGFp
bmVyX29mKGZiX2luZm8tPmRldmljZSwgc3RydWN0IHBjaV9kZXYsIGRldik7CisgKgkJdmRldi0+
ZmJfaW5mbyA9IGZiX2luZm87CisgKgorICoJCWRybV9mYmNvbnZfbW9kZXNldF9pbml0KCZ2ZGV2
LT5tb2Rlc2V0LCAmdmRldi0+ZGV2LCBmYl9pbmZvLAorICoJCQkJCW1heF93aWR0aCwgbWF4X2hl
aWdodCwgcHJlZmVycmVkX2RlcHRoKTsKKyAqCisgKgkJZHJtX2ZiY29udl9tb2Rlc2V0X3NldHVw
X3BpcGUoJnZkZXYtPm1vZGVzZXQsIE5VTEwsIGZvcm1hdHMsCisgKgkJCQkJICAgICAgQVJSQVlf
U0laRShmb3JtYXRzKSwgTlVMTCwgTlVMTCk7CisgKgorICoJCWRybV9mYmRldl9nZW5lcmljX3Nl
dHVwKCZ2ZGV2LT5kZXYsIDApOworICoKKyAqCQlyZXR1cm4gMDsKKyAqCX0KKyAqCisgKglzdGF0
aWMgdm9pZCB2ZXNhZHJtX2RldmljZV9jbGVhbnVwKHN0cnVjdCB2ZXNhZHJtX2RldmljZSAqdmRl
dikKKyAqCXsKKyAqCQlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gJnZkZXYtPmRldjsKKyAqCisg
KgkJZHJtX2ZiY29udl9tb2Rlc2V0X2NsZWFudXAoJnZkZXYtPm1vZGVzZXQpOworICoKKyAqCQlk
cm1fZGV2X2ZpbmkoZGV2KTsKKyAqCQlkZXYtPmRldl9wcml2YXRlID0gTlVMTDsKKyAqCX0KKyAq
CisgKiBJbiB2ZXNhZHJtX2RldmljZV9pbml0KCksIHNldmVyYWwgZGV2aWNlLXNwZWNpZmljIGNv
bnN0YW50cyBhcmUgZGVjbGFyZWQuCisgKiBEZXBlbmRpbmcgb24gdGhlIGhhcmR3YXJlLCBkcml2
ZXJzIHNob3VsZCBzZXQgdGhlbSBhY2NvcmRpbmdseS4KKyAqIFRoZSBjYWxsIHRvIGRybV9mYmNv
bnZfbW9kZXNldF9pbml0KCkgaW5pdGlhbGl6ZXMgZmJjb252IG1vZGVzZXR0aW5nCisgKiBoZWxw
ZXJzIHdpdGggdGhlc2UgZGV2aWNlIGNvbnN0YW50cy4KKyAqCisgKiBUaGUgZHJtX2ZiY29udl9t
b2Rlc2V0X3NldHVwX3BpcGUoKSBjcmVhdGVzIHRoZSBzaW1wbGUgZGlzcGxheSBwaXBlIHdpdGgK
KyAqIHRoZSBzcGVjaWZpZWQgY29sb3IgZm9ybWF0cy4gQnkgZGVmYXVsdCwgZXZlcnl0aGluZyBp
cyBzZXQgdXAKKyAqIGF1dG9tYXRpY2FsbHkuIEJ1dCB0aGUgZnVuY3Rpb24gYWxzbyBhY2NlcHRz
IGZvcm1hdCBtb2RpZmllcnMsIGEgRFJNCisgKiBjb25uZWN0b3IsIGFuZCBjYWxsLWJhY2sgZnVu
Y3Rpb25zIGZvciBzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUuCisgKiBTbyBlYWNoIG9m
IHRoZXNlIGNhbiBiZSByZWZhY3RvcmVkIGluZGl2aWR1YWxseSBsYXRlciBvbi4KKyAqCisgKiBB
ZnRlciBzZXR0aW5nIHVwIHRoZSBmYmNvbnYgaGVscGVycywgdGhlcmUncyBpcyBhIGNhbGwgdG8K
KyAqIGRybV9mYmRldl9nZW5lcmljX3NldHVwKCksIHdoaWNoIHNldCBhbiBpbml0aWFsIG1vZGUg
YW5kIGNyZWF0ZXMgYQorICogZnJhbWVidWZmZXIgY29uc29sZS4KKyAqCisgKiBUaGUgaW1wbGVt
ZW50YXRpb24gb2YgdmVzYWRybV9kZXZpY2VfY2xlYW51cCgpIGlzIHRoZSBpbnZlcnNlIG9mIHRo
ZQorICogaW5pdCBmdW5jdGlvbi4gSXQgY2xlYW5zIHVwIHRoZSBmYmNvbnYgbW9kZXNldHRpbmcg
aGVscGVyIGFuZCByZWxlYXNlcworICogdGhlIERSTSBkZXZpY2UuCisgKgorICogV2hhdCBpcyBs
ZWZ0IGlzIGNvbm5lY3RpbmcgdmVzYWZiIHRvIHZlc2Fkcm0uIEFzIGEgZmlyc3Qgc3RlcCwgd2Ug
bmVlZCBhCisgKiBjb3B5IHRoZSB2ZXNhZmIgc291cmNlIGZpbGVzIGludG8gdGhlIHZlc2Fkcm0g
ZHJpdmVyIGFuZCBtYWtlIHRoZW0gY29tcGlsZS4KKyAqIE9uY2UgdGhpcyBpcyBkb25lLCB3ZSBo
YXZlIHRvIHJlcGxhY2UgdGhlIGNhbGwgdG8gcmVnaXN0ZXJfZnJhbWVidWZmZXIoKQorICogd2l0
aCBhIGNhbGwgdG8gdmVzYWRybV9yZWdpc3Rlcl9mcmFtZWJ1ZmZlcigpLCBhbmQgdW5yZWdpc3Rl
cl9mcmFtZWJ1ZmZlcigpCisgKiB3aXRoIHZlc2Fkcm1fdW5yZWdpc3Rlcl9mcmFtZWJ1ZmZlcigp
LiBXZSBoYXZlIG5vdyBkaXNjb25uZWN0ZWQgdmVzYWZiIGZyb20KKyAqIHRoZSBmYmRldiBjb3Jl
IGFuZCBydW4gaXQgYXMgcGFydCBvZiBEUk0uCisgKi8KKwogLyoKICAqIEZvcm1hdCBjb252ZXJz
aW9uIGhlbHBlcnMKICAqLwotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
