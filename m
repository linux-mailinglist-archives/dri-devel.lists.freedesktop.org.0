Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8C78A41C6B
	for <lists+dri-devel@lfdr.de>; Wed, 12 Jun 2019 08:43:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 60B9589254;
	Wed, 12 Jun 2019 06:43:21 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from ste-pvt-msa1.bahnhof.se (ste-pvt-msa1.bahnhof.se
 [213.80.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C107589249
 for <dri-devel@lists.freedesktop.org>; Wed, 12 Jun 2019 06:43:16 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTP id 122603F530;
 Wed, 12 Jun 2019 08:43:10 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -3.1
X-Spam-Level: 
X-Spam-Status: No, score=-3.1 tagged_above=-999 required=6.31
 tests=[ALL_TRUSTED=-1, BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1]
 autolearn=ham autolearn_force=no
Received: from ste-pvt-msa1.bahnhof.se ([127.0.0.1])
 by localhost (ste-pvt-msa1.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id tBymmmmKA9eA; Wed, 12 Jun 2019 08:42:56 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTPA id 813E03F42A;
 Wed, 12 Jun 2019 08:42:55 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 3BA7D361DE0;
 Wed, 12 Jun 2019 08:42:55 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thellstrom@vmwopensource.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v5 3/9] mm: Add write-protect and clean utilities for address
 space ranges
Date: Wed, 12 Jun 2019 08:42:37 +0200
Message-Id: <20190612064243.55340-4-thellstrom@vmwopensource.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190612064243.55340-1-thellstrom@vmwopensource.org>
References: <20190612064243.55340-1-thellstrom@vmwopensource.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=vmwopensource.org; s=mail; t=1560321775;
 bh=B57XyoNBGgKDAp19MrS9jgl/wEmKR+Ys3QVE13AJSXc=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=TTGQbBkQBcymvaY+cFG0tvEgy5lCSl+lysczJsJ7kSFSWsTAqN/pCZ055fVDLOrZz
 F5x7Acatwt4f8eNMgNtzrd1N9pmyirziRvbp7XwgtZWskRTTCzosXkwzkIbJIx6zNq
 s0ibNEucQ7unqNwQ16/O/LrnUdz/HhmQ9NAzclec=
X-Mailman-Original-Authentication-Results: ste-pvt-msa1.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=vmwopensource.org header.i=@vmwopensource.org
 header.b=TTGQbBkQ; 
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Ralph Campbell <rcampbell@nvidia.com>,
 Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 linux-kernel@vger.kernel.org, Matthew Wilcox <willy@infradead.org>,
 linux-mm@kvack.org, Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>,
 nadav.amit@gmail.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKQWRkIHR3byB1
dGlsaXRpZXMgdG8gYSkgd3JpdGUtcHJvdGVjdCBhbmQgYikgY2xlYW4gYWxsIHB0ZXMgcG9pbnRp
bmcgaW50bwphIHJhbmdlIG9mIGFuIGFkZHJlc3Mgc3BhY2UuClRoZSB1dGlsaXRpZXMgYXJlIGlu
dGVuZGVkIHRvIGFpZCBpbiB0cmFja2luZyBkaXJ0eSBwYWdlcyAoZWl0aGVyCmRyaXZlci1hbGxv
Y2F0ZWQgc3lzdGVtIG1lbW9yeSBvciBwY2kgZGV2aWNlIG1lbW9yeSkuClRoZSB3cml0ZS1wcm90
ZWN0IHV0aWxpdHkgc2hvdWxkIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aApwYWdlX21rd3Jp
dGUoKSBhbmQgcGZuX21rd3JpdGUoKSB0byB0cmlnZ2VyIHdyaXRlIHBhZ2UtZmF1bHRzIG9uIHBh
Z2UKYWNjZXNzZXMuIFR5cGljYWxseSBvbmUgd291bGQgd2FudCB0byB1c2UgdGhpcyBvbiBzcGFy
c2UgYWNjZXNzZXMgaW50bwpsYXJnZSBtZW1vcnkgcmVnaW9ucy4gVGhlIGNsZWFuIHV0aWxpdHkg
c2hvdWxkIGJlIHVzZWQgdG8gdXRpbGl6ZQpoYXJkd2FyZSBkaXJ0eWluZyBmdW5jdGlvbmFsaXR5
IGFuZCBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgcGFnZS1mYXVsdHMsCnR5cGljYWxseSBvbiBsYXJn
ZSBhY2Nlc3NlcyBpbnRvIHNtYWxsIG1lbW9yeSByZWdpb25zLgoKVGhlIGFkZGVkIGZpbGUgImFz
X2RpcnR5X2hlbHBlcnMuYyIgaXMgaW5pdGlhbGx5IGxpc3RlZCBhcyBtYWludGFpbmVkIGJ5ClZN
d2FyZSB1bmRlciBvdXIgRFJNIGRyaXZlci4gSWYgc29tZWJvZHkgd291bGQgbGlrZSBpdCBlbHNl
d2hlcmUsCnRoYXQncyBvZiBjb3Vyc2Ugbm8gcHJvYmxlbS4KCk5vdGFibGUgY2hhbmdlcyBzaW5j
ZSBSRkM6Ci0gQWRkZWQgY29tbWVudHMgdG8gaGVscCBhdm9pZCB0aGUgdXNhZ2Ugb2YgdGhlc2Ug
ZnVuY3Rpb24gZm9yIFZNQXMKICBpdCdzIG5vdCBpbnRlbmRlZCBmb3IuIFdlIGFsc28gZG8gYWR2
aXNvcnkgY2hlY2tzIG9uIHRoZSB2bV9mbGFncyBhbmQKICB3YXJuIG9uIGlsbGVnYWwgdXNhZ2Uu
Ci0gUGVyZm9ybSB0aGUgcHRlIG1vZGlmaWNhdGlvbnMgdGhlIHNhbWUgd2F5IHNvZnRkaXJ0eSBk
b2VzLgotIEFkZCBtbXVfbm90aWZpZXIgcmFuZ2UgaW52YWxpZGF0aW9uIGNhbGxzLgotIEFkZCBh
IGNvbmZpZyBvcHRpb24gc28gdGhhdCB0aGlzIGNvZGUgaXMgbm90IHVuY29uZGl0aW9uYWxseSBp
bmNsdWRlZC4KLSBUZWxsIHRoZSBtbXVfZ2F0aGVyIGNvZGUgYWJvdXQgcGVuZGluZyB0bGIgZmx1
c2hlcy4KCkNjOiBBbmRyZXcgTW9ydG9uIDxha3BtQGxpbnV4LWZvdW5kYXRpb24ub3JnPgpDYzog
TWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+CkNjOiBXaWxsIERlYWNvbiA8d2ls
bC5kZWFjb25AYXJtLmNvbT4KQ2M6IFBldGVyIFppamxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9y
Zz4KQ2M6IFJpayB2YW4gUmllbCA8cmllbEBzdXJyaWVsLmNvbT4KQ2M6IE1pbmNoYW4gS2ltIDxt
aW5jaGFuQGtlcm5lbC5vcmc+CkNjOiBNaWNoYWwgSG9ja28gPG1ob2Nrb0BzdXNlLmNvbT4KQ2M6
IEh1YW5nIFlpbmcgPHlpbmcuaHVhbmdAaW50ZWwuY29tPgpDYzogU291cHRpY2sgSm9hcmRlciA8
anJkci5saW51eEBnbWFpbC5jb20+CkNjOiAiSsOpcsO0bWUgR2xpc3NlIiA8amdsaXNzZUByZWRo
YXQuY29tPgpDYzogbGludXgtbW1Aa3ZhY2sub3JnCkNjOiBsaW51eC1rZXJuZWxAdmdlci5rZXJu
ZWwub3JnCgpTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgSGVsbHN0cm9tIDx0aGVsbHN0cm9tQHZtd2Fy
ZS5jb20+ClJldmlld2VkLWJ5OiBSYWxwaCBDYW1wYmVsbCA8cmNhbXBiZWxsQG52aWRpYS5jb20+
ICN2MQotLS0KIE1BSU5UQUlORVJTICAgICAgICAgICB8ICAgMSArCiBpbmNsdWRlL2xpbnV4L21t
LmggICAgfCAgIDkgKy0KIG1tL0tjb25maWcgICAgICAgICAgICB8ICAgMyArCiBtbS9NYWtlZmls
ZSAgICAgICAgICAgfCAgIDEgKwogbW0vYXNfZGlydHlfaGVscGVycy5jIHwgMzAwICsrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCAzMTMg
aW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IG1tL2FzX2Rp
cnR5X2hlbHBlcnMuYwoKZGlmZiAtLWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5k
ZXggN2EyZjQ4N2VhNDlhLi5hNTVkNGVmOTFiMGIgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisr
KyBiL01BSU5UQUlORVJTCkBAIC01MTc5LDYgKzUxNzksNyBAQCBUOglnaXQgZ2l0Oi8vcGVvcGxl
LmZyZWVkZXNrdG9wLm9yZy9+dGhvbWFzaC9saW51eAogUzoJU3VwcG9ydGVkCiBGOglkcml2ZXJz
L2dwdS9kcm0vdm13Z2Z4LwogRjoJaW5jbHVkZS91YXBpL2RybS92bXdnZnhfZHJtLmgKK0Y6CW1t
L2FzX2RpcnR5X2hlbHBlcnMuYwogCiBEUk0gRFJJVkVSUwogTToJRGF2aWQgQWlybGllIDxhaXJs
aWVkQGxpbnV4LmllPgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9tbS5oIGIvaW5jbHVkZS9s
aW51eC9tbS5oCmluZGV4IDNkMDZjZTJhNjRhZi4uYTBiYzJhODI5MTdlIDEwMDY0NAotLS0gYS9p
bmNsdWRlL2xpbnV4L21tLmgKKysrIGIvaW5jbHVkZS9saW51eC9tbS5oCkBAIC0yNjg1LDcgKzI2
ODUsMTQgQEAgc3RydWN0IHBmbl9yYW5nZV9hcHBseSB7CiB9OwogZXh0ZXJuIGludCBhcHBseV90
b19wZm5fcmFuZ2Uoc3RydWN0IHBmbl9yYW5nZV9hcHBseSAqY2xvc3VyZSwKIAkJCSAgICAgIHVu
c2lnbmVkIGxvbmcgYWRkcmVzcywgdW5zaWduZWQgbG9uZyBzaXplKTsKLQordW5zaWduZWQgbG9u
ZyBhcHBseV9hc193cnByb3RlY3Qoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkJ
IHBnb2ZmX3QgZmlyc3RfaW5kZXgsIHBnb2ZmX3QgbnIpOwordW5zaWduZWQgbG9uZyBhcHBseV9h
c19jbGVhbihzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCSAgICAgcGdvZmZfdCBm
aXJzdF9pbmRleCwgcGdvZmZfdCBuciwKKwkJCSAgICAgcGdvZmZfdCBiaXRtYXBfcGdvZmYsCisJ
CQkgICAgIHVuc2lnbmVkIGxvbmcgKmJpdG1hcCwKKwkJCSAgICAgcGdvZmZfdCAqc3RhcnQsCisJ
CQkgICAgIHBnb2ZmX3QgKmVuZCk7CiAjaWZkZWYgQ09ORklHX1BBR0VfUE9JU09OSU5HCiBleHRl
cm4gYm9vbCBwYWdlX3BvaXNvbmluZ19lbmFibGVkKHZvaWQpOwogZXh0ZXJuIHZvaWQga2VybmVs
X3BvaXNvbl9wYWdlcyhzdHJ1Y3QgcGFnZSAqcGFnZSwgaW50IG51bXBhZ2VzLCBpbnQgZW5hYmxl
KTsKZGlmZiAtLWdpdCBhL21tL0tjb25maWcgYi9tbS9LY29uZmlnCmluZGV4IGYwYzc2YmE0NzY5
NS4uNTAwNmQwZTZhNWM3IDEwMDY0NAotLS0gYS9tbS9LY29uZmlnCisrKyBiL21tL0tjb25maWcK
QEAgLTc2NSw0ICs3NjUsNyBAQCBjb25maWcgR1VQX0JFTkNITUFSSwogY29uZmlnIEFSQ0hfSEFT
X1BURV9TUEVDSUFMCiAJYm9vbAogCitjb25maWcgQVNfRElSVFlfSEVMUEVSUworICAgICAgICBi
b29sCisKIGVuZG1lbnUKZGlmZiAtLWdpdCBhL21tL01ha2VmaWxlIGIvbW0vTWFrZWZpbGUKaW5k
ZXggYWM1ZTViYTc4ODc0Li5mNWQ0MTJiYmMyZjcgMTAwNjQ0Ci0tLSBhL21tL01ha2VmaWxlCisr
KyBiL21tL01ha2VmaWxlCkBAIC0xMDQsMyArMTA0LDQgQEAgb2JqLSQoQ09ORklHX0hBUkRFTkVE
X1VTRVJDT1BZKSArPSB1c2VyY29weS5vCiBvYmotJChDT05GSUdfUEVSQ1BVX1NUQVRTKSArPSBw
ZXJjcHUtc3RhdHMubwogb2JqLSQoQ09ORklHX0hNTSkgKz0gaG1tLm8KIG9iai0kKENPTkZJR19N
RU1GRF9DUkVBVEUpICs9IG1lbWZkLm8KK29iai0kKENPTkZJR19BU19ESVJUWV9IRUxQRVJTKSAr
PSBhc19kaXJ0eV9oZWxwZXJzLm8KZGlmZiAtLWdpdCBhL21tL2FzX2RpcnR5X2hlbHBlcnMuYyBi
L21tL2FzX2RpcnR5X2hlbHBlcnMuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAw
MDAwMDAuLjBkYTdhOGVlZDUxYQotLS0gL2Rldi9udWxsCisrKyBiL21tL2FzX2RpcnR5X2hlbHBl
cnMuYwpAQCAtMCwwICsxLDMwMCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0y
LjAKKyNpbmNsdWRlIDxsaW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L21tX3R5cGVzLmg+Cisj
aW5jbHVkZSA8bGludXgvaHVnZXRsYi5oPgorI2luY2x1ZGUgPGxpbnV4L2JpdG9wcy5oPgorI2lu
Y2x1ZGUgPGxpbnV4L21tdV9ub3RpZmllci5oPgorI2luY2x1ZGUgPGFzbS9jYWNoZWZsdXNoLmg+
CisjaW5jbHVkZSA8YXNtL3RsYmZsdXNoLmg+CisKKy8qKgorICogc3RydWN0IGFwcGx5X2FzIC0g
Q2xvc3VyZSBzdHJ1Y3R1cmUgZm9yIGFwcGx5X2FzX3JhbmdlCisgKiBAYmFzZTogc3RydWN0IHBm
bl9yYW5nZV9hcHBseSB3ZSBkZXJpdmUgZnJvbQorICogQHN0YXJ0OiBBZGRyZXNzIG9mIGZpcnN0
IG1vZGlmaWVkIHB0ZQorICogQGVuZDogQWRkcmVzcyBvZiBsYXN0IG1vZGlmaWVkIHB0ZSArIDEK
KyAqIEB0b3RhbDogVG90YWwgbnVtYmVyIG9mIG1vZGlmaWVkIHB0ZXMKKyAqIEB2bWE6IFBvaW50
ZXIgdG8gdGhlIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCB3ZSdyZSBjdXJyZW50bHkgb3BlcmF0aW5n
IG9uCisgKi8KK3N0cnVjdCBhcHBseV9hcyB7CisJc3RydWN0IHBmbl9yYW5nZV9hcHBseSBiYXNl
OworCXVuc2lnbmVkIGxvbmcgc3RhcnQ7CisJdW5zaWduZWQgbG9uZyBlbmQ7CisJdW5zaWduZWQg
bG9uZyB0b3RhbDsKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYTsKK307CisKKy8qKgorICog
YXBwbHlfcHRfd3Jwcm90ZWN0IC0gTGVhZiBwdGUgY2FsbGJhY2sgdG8gd3JpdGUtcHJvdGVjdCBh
IHB0ZQorICogQHB0ZTogUG9pbnRlciB0byB0aGUgcHRlCisgKiBAdG9rZW46IFBhZ2UgdGFibGUg
dG9rZW4sIHNlZSBhcHBseV90b19wZm5fcmFuZ2UoKQorICogQGFkZHI6IFRoZSB2aXJ0dWFsIHBh
Z2UgYWRkcmVzcworICogQGNsb3N1cmU6IFBvaW50ZXIgdG8gYSBzdHJ1Y3QgcGZuX3JhbmdlX2Fw
cGx5IGVtYmVkZGVkIGluIGEKKyAqIHN0cnVjdCBhcHBseV9hcworICoKKyAqIFRoZSBmdW5jdGlv
biB3cml0ZS1wcm90ZWN0cyBhIHB0ZSBhbmQgcmVjb3JkcyB0aGUgcmFuZ2UgaW4KKyAqIHZpcnR1
YWwgYWRkcmVzcyBzcGFjZSBvZiB0b3VjaGVkIHB0ZXMgZm9yIGVmZmljaWVudCByYW5nZSBUTEIg
Zmx1c2hlcy4KKyAqCisgKiBSZXR1cm46IEFsd2F5cyB6ZXJvLgorICovCitzdGF0aWMgaW50IGFw
cGx5X3B0X3dycHJvdGVjdChwdGVfdCAqcHRlLCBwZ3RhYmxlX3QgdG9rZW4sCisJCQkgICAgICB1
bnNpZ25lZCBsb25nIGFkZHIsCisJCQkgICAgICBzdHJ1Y3QgcGZuX3JhbmdlX2FwcGx5ICpjbG9z
dXJlKQoreworCXN0cnVjdCBhcHBseV9hcyAqYWFzID0gY29udGFpbmVyX29mKGNsb3N1cmUsIHR5
cGVvZigqYWFzKSwgYmFzZSk7CisJcHRlX3QgcHRlbnQgPSAqcHRlOworCisJaWYgKHB0ZV93cml0
ZShwdGVudCkpIHsKKwkJcHRlX3Qgb2xkX3B0ZSA9IHB0ZXBfbW9kaWZ5X3Byb3Rfc3RhcnQoYWFz
LT52bWEsIGFkZHIsIHB0ZSk7CisKKwkJcHRlbnQgPSBwdGVfd3Jwcm90ZWN0KG9sZF9wdGUpOwor
CQlwdGVwX21vZGlmeV9wcm90X2NvbW1pdChhYXMtPnZtYSwgYWRkciwgcHRlLCBvbGRfcHRlLCBw
dGVudCk7CisJCWFhcy0+dG90YWwrKzsKKwkJYWFzLT5zdGFydCA9IG1pbihhYXMtPnN0YXJ0LCBh
ZGRyKTsKKwkJYWFzLT5lbmQgPSBtYXgoYWFzLT5lbmQsIGFkZHIgKyBQQUdFX1NJWkUpOworCX0K
KworCXJldHVybiAwOworfQorCisvKioKKyAqIHN0cnVjdCBhcHBseV9hc19jbGVhbiAtIENsb3N1
cmUgc3RydWN0dXJlIGZvciBhcHBseV9hc19jbGVhbgorICogQGJhc2U6IHN0cnVjdCBhcHBseV9h
cyB3ZSBkZXJpdmUgZnJvbQorICogQGJpdG1hcF9wZ29mZjogQWRkcmVzc19zcGFjZSBQYWdlIG9m
ZnNldCBvZiB0aGUgZmlyc3QgYml0IGluIEBiaXRtYXAKKyAqIEBiaXRtYXA6IEJpdG1hcCB3aXRo
IG9uZSBiaXQgZm9yIGVhY2ggcGFnZSBvZmZzZXQgaW4gdGhlIGFkZHJlc3Nfc3BhY2UgcmFuZ2UK
KyAqIGNvdmVyZWQuCisgKiBAc3RhcnQ6IEFkZHJlc3Nfc3BhY2UgcGFnZSBvZmZzZXQgb2YgZmly
c3QgbW9kaWZpZWQgcHRlIHJlbGF0aXZlCisgKiB0byBAYml0bWFwX3Bnb2ZmCisgKiBAZW5kOiBB
ZGRyZXNzX3NwYWNlIHBhZ2Ugb2Zmc2V0IG9mIGxhc3QgbW9kaWZpZWQgcHRlIHJlbGF0aXZlCisg
KiB0byBAYml0bWFwX3Bnb2ZmCisgKi8KK3N0cnVjdCBhcHBseV9hc19jbGVhbiB7CisJc3RydWN0
IGFwcGx5X2FzIGJhc2U7CisJcGdvZmZfdCBiaXRtYXBfcGdvZmY7CisJdW5zaWduZWQgbG9uZyAq
Yml0bWFwOworCXBnb2ZmX3Qgc3RhcnQ7CisJcGdvZmZfdCBlbmQ7Cit9OworCisvKioKKyAqIGFw
cGx5X3B0X2NsZWFuIC0gTGVhZiBwdGUgY2FsbGJhY2sgdG8gY2xlYW4gYSBwdGUKKyAqIEBwdGU6
IFBvaW50ZXIgdG8gdGhlIHB0ZQorICogQHRva2VuOiBQYWdlIHRhYmxlIHRva2VuLCBzZWUgYXBw
bHlfdG9fcGZuX3JhbmdlKCkKKyAqIEBhZGRyOiBUaGUgdmlydHVhbCBwYWdlIGFkZHJlc3MKKyAq
IEBjbG9zdXJlOiBQb2ludGVyIHRvIGEgc3RydWN0IHBmbl9yYW5nZV9hcHBseSBlbWJlZGRlZCBp
biBhCisgKiBzdHJ1Y3QgYXBwbHlfYXNfY2xlYW4KKyAqCisgKiBUaGUgZnVuY3Rpb24gY2xlYW5z
IGEgcHRlIGFuZCByZWNvcmRzIHRoZSByYW5nZSBpbgorICogdmlydHVhbCBhZGRyZXNzIHNwYWNl
IG9mIHRvdWNoZWQgcHRlcyBmb3IgZWZmaWNpZW50IFRMQiBmbHVzaGVzLgorICogSXQgYWxzbyBy
ZWNvcmRzIGRpcnR5IHB0ZXMgaW4gYSBiaXRtYXAgcmVwcmVzZW50aW5nIHBhZ2Ugb2Zmc2V0cwor
ICogaW4gdGhlIGFkZHJlc3Nfc3BhY2UsIGFzIHdlbGwgYXMgdGhlIGZpcnN0IGFuZCBsYXN0IG9m
IHRoZSBiaXRzCisgKiB0b3VjaGVkLgorICoKKyAqIFJldHVybjogQWx3YXlzIHplcm8uCisgKi8K
K3N0YXRpYyBpbnQgYXBwbHlfcHRfY2xlYW4ocHRlX3QgKnB0ZSwgcGd0YWJsZV90IHRva2VuLAor
CQkJICB1bnNpZ25lZCBsb25nIGFkZHIsCisJCQkgIHN0cnVjdCBwZm5fcmFuZ2VfYXBwbHkgKmNs
b3N1cmUpCit7CisJc3RydWN0IGFwcGx5X2FzICphYXMgPSBjb250YWluZXJfb2YoY2xvc3VyZSwg
dHlwZW9mKCphYXMpLCBiYXNlKTsKKwlzdHJ1Y3QgYXBwbHlfYXNfY2xlYW4gKmNsZWFuID0gY29u
dGFpbmVyX29mKGFhcywgdHlwZW9mKCpjbGVhbiksIGJhc2UpOworCXB0ZV90IHB0ZW50ID0gKnB0
ZTsKKworCWlmIChwdGVfZGlydHkocHRlbnQpKSB7CisJCXBnb2ZmX3QgcGdvZmYgPSAoKGFkZHIg
LSBhYXMtPnZtYS0+dm1fc3RhcnQpID4+IFBBR0VfU0hJRlQpICsKKwkJCWFhcy0+dm1hLT52bV9w
Z29mZiAtIGNsZWFuLT5iaXRtYXBfcGdvZmY7CisJCXB0ZV90IG9sZF9wdGUgPSBwdGVwX21vZGlm
eV9wcm90X3N0YXJ0KGFhcy0+dm1hLCBhZGRyLCBwdGUpOworCisJCXB0ZW50ID0gcHRlX21rY2xl
YW4ob2xkX3B0ZSk7CisJCXB0ZXBfbW9kaWZ5X3Byb3RfY29tbWl0KGFhcy0+dm1hLCBhZGRyLCBw
dGUsIG9sZF9wdGUsIHB0ZW50KTsKKworCQlhYXMtPnRvdGFsKys7CisJCWFhcy0+c3RhcnQgPSBt
aW4oYWFzLT5zdGFydCwgYWRkcik7CisJCWFhcy0+ZW5kID0gbWF4KGFhcy0+ZW5kLCBhZGRyICsg
UEFHRV9TSVpFKTsKKworCQlfX3NldF9iaXQocGdvZmYsIGNsZWFuLT5iaXRtYXApOworCQljbGVh
bi0+c3RhcnQgPSBtaW4oY2xlYW4tPnN0YXJ0LCBwZ29mZik7CisJCWNsZWFuLT5lbmQgPSBtYXgo
Y2xlYW4tPmVuZCwgcGdvZmYgKyAxKTsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworLyoqCisgKiBh
cHBseV9hc19yYW5nZSAtIEFwcGx5IGEgcHRlIGNhbGxiYWNrIHRvIGFsbCBQVEVzIHBvaW50aW5n
IGludG8gYSByYW5nZQorICogb2YgYW4gYWRkcmVzc19zcGFjZS4KKyAqIEBtYXBwaW5nOiBQb2lu
dGVyIHRvIHRoZSBzdHJ1Y3QgYWRkcmVzc19zcGFjZQorICogQGFhczogQ2xvc3VyZSBzdHJ1Y3R1
cmUKKyAqIEBmaXJzdF9pbmRleDogRmlyc3QgcGFnZSBvZmZzZXQgaW4gdGhlIGFkZHJlc3Nfc3Bh
Y2UKKyAqIEBucjogTnVtYmVyIG9mIGluY3JlbWVudGFsIHBhZ2Ugb2Zmc2V0cyB0byBjb3Zlcgor
ICoKKyAqIFJldHVybjogTnVtYmVyIG9mIHB0ZXMgdG91Y2hlZC4gTm90ZSB0aGF0IHRoaXMgbnVt
YmVyIG1pZ2h0IGJlIGxhcmdlcgorICogdGhhbiBAbnIgaWYgdGhlcmUgYXJlIG92ZXJsYXBwaW5n
IHZtYXMKKyAqLworc3RhdGljIHVuc2lnbmVkIGxvbmcgYXBwbHlfYXNfcmFuZ2Uoc3RydWN0IGFk
ZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkJICAgIHN0cnVjdCBhcHBseV9hcyAqYWFzLAorCQkJ
CSAgICBwZ29mZl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5yKQoreworCXN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hOworCXBnb2ZmX3QgdmJhLCB2ZWEsIGNiYSwgY2VhOworCXVuc2lnbmVkIGxv
bmcgc3RhcnRfYWRkciwgZW5kX2FkZHI7CisJc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSByYW5n
ZTsKKworCWlfbW1hcF9sb2NrX3JlYWQobWFwcGluZyk7CisJdm1hX2ludGVydmFsX3RyZWVfZm9y
ZWFjaCh2bWEsICZtYXBwaW5nLT5pX21tYXAsIGZpcnN0X2luZGV4LAorCQkJCSAgZmlyc3RfaW5k
ZXggKyBuciAtIDEpIHsKKwkJdW5zaWduZWQgbG9uZyB2bV9mbGFncyA9IFJFQURfT05DRSh2bWEt
PnZtX2ZsYWdzKTsKKworCQkvKgorCQkgKiBXZSBjYW4gb25seSBkbyBhZHZpc29yeSBmbGFnIHRl
c3RzIGJlbG93LCBzaW5jZSB3ZSBjYW4ndAorCQkgKiByZXF1aXJlIHRoZSB2bSdzIG1tYXBfc2Vt
IHRvIGJlIGhlbGQgdG8gcHJvdGVjdCB0aGUgZmxhZ3MuCisJCSAqIFRoZXJlZm9yZSwgY2FsbGVy
cyB0aGF0IHN0cmljdGx5IGRlcGVuZCBvbiBzcGVjaWZpYyBtbWFwCisJCSAqIGZsYWdzIHRvIHJl
bWFpbiBjb25zdGFudCB0aHJvdWdob3V0IHRoZSBvcGVyYXRpb24gbXVzdAorCQkgKiBlaXRoZXIg
ZW5zdXJlIHRob3NlIGZsYWdzIGFyZSBpbW11dGFibGUgZm9yIGFsbCByZWxldmFudAorCQkgKiB2
bWFzIG9yIGNhbid0IHVzZSB0aGlzIGZ1bmN0aW9uLiBGaXhpbmcgdGhpcyBwcm9wZXJseSB3b3Vs
ZAorCQkgKiByZXF1aXJlIHRoZSB2bWE6OnZtX2ZsYWdzIHRvIGJlIHByb3RlY3RlZCBieSBhIHNl
cGFyYXRlCisJCSAqIGxvY2sgdGFrZW4gYWZ0ZXIgdGhlIGlfbW1hcF9sb2NrCisJCSAqLworCisJ
CS8qIFNraXAgbm9uLWFwcGxpY2FibGUgVk1BcyAqLworCQlpZiAoKHZtX2ZsYWdzICYgKFZNX1NI
QVJFRCB8IFZNX1dSSVRFKSkgIT0KKwkJICAgIChWTV9TSEFSRUQgfCBWTV9XUklURSkpCisJCQlj
b250aW51ZTsKKworCQkvKiBXYXJuIG9uIGFuZCBza2lwIFZNQXMgd2hvc2UgZmxhZ3MgaW5kaWNh
dGUgaWxsZWdhbCB1c2FnZSAqLworCQlpZiAoV0FSTl9PTigodm1fZmxhZ3MgJiAoVk1fSFVHRVRM
QiB8IFZNX0lPKSkgIT0gVk1fSU8pKQorCQkJY29udGludWU7CisKKwkJLyogQ2xpcCB0byB0aGUg
dm1hICovCisJCXZiYSA9IHZtYS0+dm1fcGdvZmY7CisJCXZlYSA9IHZiYSArIHZtYV9wYWdlcyh2
bWEpOworCQljYmEgPSBmaXJzdF9pbmRleDsKKwkJY2JhID0gbWF4KGNiYSwgdmJhKTsKKwkJY2Vh
ID0gZmlyc3RfaW5kZXggKyBucjsKKwkJY2VhID0gbWluKGNlYSwgdmVhKTsKKworCQkvKiBUcmFu
c2xhdGUgdG8gdmlydHVhbCBhZGRyZXNzICovCisJCXN0YXJ0X2FkZHIgPSAoKGNiYSAtIHZiYSkg
PDwgUEFHRV9TSElGVCkgKyB2bWEtPnZtX3N0YXJ0OworCQllbmRfYWRkciA9ICgoY2VhIC0gdmJh
KSA8PCBQQUdFX1NISUZUKSArIHZtYS0+dm1fc3RhcnQ7CisJCWlmIChzdGFydF9hZGRyID49IGVu
ZF9hZGRyKQorCQkJY29udGludWU7CisKKwkJYWFzLT5iYXNlLm1tID0gdm1hLT52bV9tbTsKKwkJ
YWFzLT52bWEgPSB2bWE7CisJCWFhcy0+c3RhcnQgPSBlbmRfYWRkcjsKKwkJYWFzLT5lbmQgPSBz
dGFydF9hZGRyOworCisJCW1tdV9ub3RpZmllcl9yYW5nZV9pbml0KCZyYW5nZSwgTU1VX05PVElG
WV9QUk9URUNUSU9OX1BBR0UsIDAsCisJCQkJCXZtYSwgdm1hLT52bV9tbSwgc3RhcnRfYWRkciwg
ZW5kX2FkZHIpOworCQltbXVfbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgmcmFuZ2Up
OworCisJCS8qIE5lZWRlZCB3aGVuIHdlIG9ubHkgY2hhbmdlIHByb3RlY3Rpb24/ICovCisJCWZs
dXNoX2NhY2hlX3JhbmdlKHZtYSwgc3RhcnRfYWRkciwgZW5kX2FkZHIpOworCisJCS8qCisJCSAq
IFdlJ3JlIG5vdCB1c2luZyB0bGJfZ2F0aGVyX21tdSgpIHNpbmNlIHR5cGljYWxseQorCQkgKiBv
bmx5IGEgc21hbGwgc3VicmFuZ2Ugb2YgUFRFcyBhcmUgYWZmZWN0ZWQuCisJCSAqLworCQlpbmNf
dGxiX2ZsdXNoX3BlbmRpbmcodm1hLT52bV9tbSk7CisKKwkJLyogU2hvdWxkIG5vdCBlcnJvciBz
aW5jZSBhYXMtPmJhc2UuYWxsb2MgPT0gMCAqLworCQlXQVJOX09OKGFwcGx5X3RvX3Bmbl9yYW5n
ZSgmYWFzLT5iYXNlLCBzdGFydF9hZGRyLAorCQkJCQkgICBlbmRfYWRkciAtIHN0YXJ0X2FkZHIp
KTsKKwkJaWYgKGFhcy0+ZW5kID4gYWFzLT5zdGFydCkKKwkJCWZsdXNoX3RsYl9yYW5nZSh2bWEs
IGFhcy0+c3RhcnQsIGFhcy0+ZW5kKTsKKworCQltbXVfbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5n
ZV9lbmQoJnJhbmdlKTsKKwkJZGVjX3RsYl9mbHVzaF9wZW5kaW5nKHZtYS0+dm1fbW0pOworCX0K
KwlpX21tYXBfdW5sb2NrX3JlYWQobWFwcGluZyk7CisKKwlyZXR1cm4gYWFzLT50b3RhbDsKK30K
KworLyoqCisgKiBhcHBseV9hc193cnByb3RlY3QgLSBXcml0ZS1wcm90ZWN0IGFsbCBwdGVzIGlu
IGFuIGFkZHJlc3Nfc3BhY2UgcmFuZ2UKKyAqIEBtYXBwaW5nOiBUaGUgYWRkcmVzc19zcGFjZSB3
ZSB3YW50IHRvIHdyaXRlIHByb3RlY3QKKyAqIEBmaXJzdF9pbmRleDogVGhlIGZpcnN0IHBhZ2Ug
b2Zmc2V0IGluIHRoZSByYW5nZQorICogQG5yOiBOdW1iZXIgb2YgaW5jcmVtZW50YWwgcGFnZSBv
ZmZzZXRzIHRvIGNvdmVyCisgKgorICogV0FSTklORzogVGhpcyBmdW5jdGlvbiBzaG91bGQgb25s
eSBiZSB1c2VkIGZvciBhZGRyZXNzIHNwYWNlcyB3aG9zZQorICogdm1hcyBhcmUgbWFya2VkIFZN
X0lPIGFuZCB0aGF0IGRvIG5vdCBjb250YWluIGh1Z2UgcGFnZXMuCisgKiBUbyBhdm9pZCBpbnRl
cmZlcmVuY2Ugd2l0aCBDT1cnZCBwYWdlcywgdm1hcyBub3QgbWFya2VkIFZNX1NIQVJFRCBhcmUK
KyAqIHNpbXBseSBza2lwcGVkLgorICoKKyAqIFJldHVybjogVGhlIG51bWJlciBvZiBwdGVzIGFj
dHVhbGx5IHdyaXRlLXByb3RlY3RlZC4gTm90ZSB0aGF0CisgKiBhbHJlYWR5IHdyaXRlLXByb3Rl
Y3RlZCBwdGVzIGFyZSBub3QgY291bnRlZC4KKyAqLwordW5zaWduZWQgbG9uZyBhcHBseV9hc193
cnByb3RlY3Qoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkJIHBnb2ZmX3QgZmly
c3RfaW5kZXgsIHBnb2ZmX3QgbnIpCit7CisJc3RydWN0IGFwcGx5X2FzIGFhcyA9IHsKKwkJLmJh
c2UgPSB7CisJCQkuYWxsb2MgPSAwLAorCQkJLnB0ZWZuID0gYXBwbHlfcHRfd3Jwcm90ZWN0LAor
CQl9LAorCQkudG90YWwgPSAwLAorCX07CisKKwlyZXR1cm4gYXBwbHlfYXNfcmFuZ2UobWFwcGlu
ZywgJmFhcywgZmlyc3RfaW5kZXgsIG5yKTsKK30KK0VYUE9SVF9TWU1CT0woYXBwbHlfYXNfd3Jw
cm90ZWN0KTsKKworLyoqCisgKiBhcHBseV9hc19jbGVhbiAtIENsZWFuIGFsbCBwdGVzIGluIGFu
IGFkZHJlc3Nfc3BhY2UgcmFuZ2UKKyAqIEBtYXBwaW5nOiBUaGUgYWRkcmVzc19zcGFjZSB3ZSB3
YW50IHRvIGNsZWFuCisgKiBAZmlyc3RfaW5kZXg6IFRoZSBmaXJzdCBwYWdlIG9mZnNldCBpbiB0
aGUgcmFuZ2UKKyAqIEBucjogTnVtYmVyIG9mIGluY3JlbWVudGFsIHBhZ2Ugb2Zmc2V0cyB0byBj
b3ZlcgorICogQGJpdG1hcF9wZ29mZjogVGhlIHBhZ2Ugb2Zmc2V0IG9mIHRoZSBmaXJzdCBiaXQg
aW4gQGJpdG1hcAorICogQGJpdG1hcDogUG9pbnRlciB0byBhIGJpdG1hcCBvZiBhdCBsZWFzdCBA
bnIgYml0cy4gVGhlIGJpdG1hcCBuZWVkcyB0bworICogY292ZXIgdGhlIHdob2xlIHJhbmdlIEBm
aXJzdF9pbmRleC4uQGZpcnN0X2luZGV4ICsgQG5yLgorICogQHN0YXJ0OiBQb2ludGVyIHRvIG51
bWJlciBvZiB0aGUgZmlyc3Qgc2V0IGJpdCBpbiBAYml0bWFwLgorICogaXMgbW9kaWZpZWQgYXMg
bmV3IGJpdHMgYXJlIHNldCBieSB0aGUgZnVuY3Rpb24uCisgKiBAZW5kOiBQb2ludGVyIHRvIHRo
ZSBudW1iZXIgb2YgdGhlIGxhc3Qgc2V0IGJpdCBpbiBAYml0bWFwLgorICogbm9uZSBzZXQuIFRo
ZSB2YWx1ZSBpcyBtb2RpZmllZCBhcyBuZXcgYml0cyBhcmUgc2V0IGJ5IHRoZSBmdW5jdGlvbi4K
KyAqCisgKiBOb3RlOiBXaGVuIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGVyZSBpcyBubyBndWFy
YW50ZWUgdGhhdCBhIENQVSBoYXMKKyAqIG5vdCBhbHJlYWR5IGRpcnRpZWQgbmV3IHB0ZXMuIEhv
d2V2ZXIgaXQgd2lsbCBub3QgY2xlYW4gYW55IHB0ZXMgbm90CisgKiByZXBvcnRlZCBpbiB0aGUg
Yml0bWFwLgorICoKKyAqIElmIGEgY2FsbGVyIG5lZWRzIHRvIG1ha2Ugc3VyZSBhbGwgZGlydHkg
cHRlcyBhcmUgcGlja2VkIHVwIGFuZCBub25lCisgKiBhZGRpdGlvbmFsIGFyZSBhZGRlZCwgaXQg
Zmlyc3QgbmVlZHMgdG8gd3JpdGUtcHJvdGVjdCB0aGUgYWRkcmVzcy1zcGFjZQorICogcmFuZ2Ug
YW5kIG1ha2Ugc3VyZSBuZXcgd3JpdGVycyBhcmUgYmxvY2tlZCBpbiBwYWdlX21rd3JpdGUoKSBv
cgorICogcGZuX21rd3JpdGUoKS4gQW5kIHRoZW4gYWZ0ZXIgYSBUTEIgZmx1c2ggZm9sbG93aW5n
IHRoZSB3cml0ZS1wcm90ZWN0aW9uCisgKiBwaWNrIHVwIGFsbCBkaXJ0eSBiaXRzLgorICoKKyAq
IFdBUk5JTkc6IFRoaXMgZnVuY3Rpb24gc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgYWRkcmVzcyBz
cGFjZXMgd2hvc2UKKyAqIHZtYXMgYXJlIG1hcmtlZCBWTV9JTyBhbmQgdGhhdCBkbyBub3QgY29u
dGFpbiBodWdlIHBhZ2VzLgorICogVG8gYXZvaWQgaW50ZXJmZXJlbmNlIHdpdGggQ09XJ2QgcGFn
ZXMsIHZtYXMgbm90IG1hcmtlZCBWTV9TSEFSRUQgYXJlCisgKiBzaW1wbHkgc2tpcHBlZC4KKyAq
CisgKiBSZXR1cm46IFRoZSBudW1iZXIgb2YgZGlydHkgcHRlcyBhY3R1YWxseSBjbGVhbmVkLgor
ICovCit1bnNpZ25lZCBsb25nIGFwcGx5X2FzX2NsZWFuKHN0cnVjdCBhZGRyZXNzX3NwYWNlICpt
YXBwaW5nLAorCQkJICAgICBwZ29mZl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5yLAorCQkJICAg
ICBwZ29mZl90IGJpdG1hcF9wZ29mZiwKKwkJCSAgICAgdW5zaWduZWQgbG9uZyAqYml0bWFwLAor
CQkJICAgICBwZ29mZl90ICpzdGFydCwKKwkJCSAgICAgcGdvZmZfdCAqZW5kKQoreworCWJvb2wg
bm9uZV9zZXQgPSAoKnN0YXJ0ID49ICplbmQpOworCXN0cnVjdCBhcHBseV9hc19jbGVhbiBjbGVh
biA9IHsKKwkJLmJhc2UgPSB7CisJCQkuYmFzZSA9IHsKKwkJCQkuYWxsb2MgPSAwLAorCQkJCS5w
dGVmbiA9IGFwcGx5X3B0X2NsZWFuLAorCQkJfSwKKwkJCS50b3RhbCA9IDAsCisJCX0sCisJCS5i
aXRtYXBfcGdvZmYgPSBiaXRtYXBfcGdvZmYsCisJCS5iaXRtYXAgPSBiaXRtYXAsCisJCS5zdGFy
dCA9IG5vbmVfc2V0ID8gbnIgOiAqc3RhcnQsCisJCS5lbmQgPSBub25lX3NldCA/IDAgOiAqZW5k
LAorCX07CisJdW5zaWduZWQgbG9uZyByZXQgPSBhcHBseV9hc19yYW5nZShtYXBwaW5nLCAmY2xl
YW4uYmFzZSwgZmlyc3RfaW5kZXgsCisJCQkJCSAgIG5yKTsKKworCSpzdGFydCA9IGNsZWFuLnN0
YXJ0OworCSplbmQgPSBjbGVhbi5lbmQ7CisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0wo
YXBwbHlfYXNfY2xlYW4pOwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
