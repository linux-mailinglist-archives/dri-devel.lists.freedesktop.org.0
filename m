Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5274F5F064
	for <lists+dri-devel@lfdr.de>; Thu,  4 Jul 2019 02:38:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0BE5C6E221;
	Thu,  4 Jul 2019 00:38:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-yw1-xc49.google.com (mail-yw1-xc49.google.com
 [IPv6:2607:f8b0:4864:20::c49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 285536E221
 for <dri-devel@lists.freedesktop.org>; Thu,  4 Jul 2019 00:38:08 +0000 (UTC)
Received: by mail-yw1-xc49.google.com with SMTP id p68so1088904ywp.2
 for <dri-devel@lists.freedesktop.org>; Wed, 03 Jul 2019 17:38:08 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=HNEIDz2jayzni42UuMsK2zjYCTMYIxSvud4bvtuWmo4=;
 b=gnucwI5TmQNtbAKLw0bUygJOJEoGXordMx/tSvnZ1KGJv66wFdiyHo7UUKmU/IdJhe
 qtsWzTP0sUgHNUOBF24NhP3P7s2NSBFmLHs5SNGBvpjp3TpLHDEZd34h2xG9Kd15e86s
 8LvTaC2VH1WTkd+AzcgYnsZwXzeaNb0a9+KI9FTy4v/L857K3fAeOhFceWiAnBTXmZaP
 FFfhdwqmyqA51qPG+lZNgxFa9Yxkz/weZ902hR6NjDNiL2dZjUx+4dtZP1DJlI1hoCsV
 HeZ/DHRAi/x3N12KaRd7JNlOI4XrNFVTz6adqOq3AL4RBshCwCuFDmt8k2c5KTzYWRHZ
 diYg==
X-Gm-Message-State: APjAAAVA8WMMNl/t48zBzm15WtkB/0bnaa7QQkq4WcR2vZUqdqMeUQck
 RJHuFVatJUqM7xvD9LJbzvzDFSx4Wsg5nX2u0eoabQ==
X-Google-Smtp-Source: APXvYqwIa3n6TRalz+Y/OAaCCgYdPj+zS707JIUmkLCEXUFpdg22GM+UTFy1FHqmXM5kW5dLHXpM5zdy7ai7YDjr2/jqQw==
X-Received: by 2002:a0d:eccd:: with SMTP id v196mr10530758ywe.30.1562200687110; 
 Wed, 03 Jul 2019 17:38:07 -0700 (PDT)
Date: Wed,  3 Jul 2019 17:36:06 -0700
In-Reply-To: <20190704003615.204860-1-brendanhiggins@google.com>
Message-Id: <20190704003615.204860-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190704003615.204860-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v6 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=HNEIDz2jayzni42UuMsK2zjYCTMYIxSvud4bvtuWmo4=;
 b=OyzGMFaje2576ZKPFvTJ42kzfBytWTVMe68VuEMvzJrgpNTbPbICh10ihEzTijs06f
 lX87j1d8dtXRg+eF9umkBEvjo+elQrspr8ngIbzu7CmM6Sr7bwZZ0DFa4NFQ6G4XVjkX
 sS/MLLJhU0yB9vmPKgt0Fpmzyp8URzwB+OFGbG1VsEddQgNmPRV75PGnQ4+NAeF8TQJV
 1l+sxPhCbT2nLdF9MjIjy1SLH/wB5jKzUHjj5DvSmivtWiekKxZU5hjA/MXzeyiYe361
 XfADY1dSEQDNE7zmkWuzK0BV5ZkTlZvNdbjCICtzIQanq4vH/Y8oibuaqFL739WLsh2t
 huKA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAxMiArKysKIGluY2x1ZGUva3VuaXQvdHJ5LWNh
dGNoLmggfCAgNjkgKysrKysrKysrKysrKysrCiBrdW5pdC9NYWtlZmlsZSAgICAgICAgICAgIHwg
ICAzICstCiBrdW5pdC90ZXN0LmMgICAgICAgICAgICAgIHwgMTc1ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrLS0tCiBrdW5pdC90cnktY2F0Y2guYyAgICAgICAgIHwgIDk1ICsr
KysrKysrKysrKysrKysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCAzMzkgaW5zZXJ0aW9ucygrKSwg
MTUgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5pdC90cnktY2F0
Y2guaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L3RyeS1jYXRjaC5jCgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9rdW5pdC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3QuaAppbmRleCBlMTcyOWYx
OTE3NGMxLi5mMDhlZmQxNmZhNWY0IDEwMDY0NAotLS0gYS9pbmNsdWRlL2t1bml0L3Rlc3QuaAor
KysgYi9pbmNsdWRlL2t1bml0L3Rlc3QuaApAQCAtMTMsNiArMTMsNyBAQAogI2luY2x1ZGUgPGxp
bnV4L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgogI2luY2x1ZGUgPGt1bml0L2t1
bml0LXN0cmVhbS5oPgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgogCiBzdHJ1Y3Qga3Vu
aXRfcmVzb3VyY2U7CiAKQEAgLTE3OSwxNSArMTgwLDI2IEBAIHN0cnVjdCBrdW5pdCB7CiAKIAkv
KiBwcml2YXRlOiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KIAljb25zdCBjaGFyICpuYW1lOyAvKiBS
ZWFkIG9ubHkgYWZ0ZXIgaW5pdGlhbGl6YXRpb24hICovCisJc3RydWN0IGt1bml0X3RyeV9jYXRj
aCB0cnlfY2F0Y2g7CiAJYm9vbCBzdWNjZXNzOyAvKiBSZWFkIG9ubHkgYWZ0ZXIgdGVzdF9jYXNl
IGZpbmlzaGVzISAqLwogCXN0cnVjdCBtdXRleCBsb2NrOyAvKiBHYXVyZHMgYWxsIG11dGFibGUg
dGVzdCBzdGF0ZS4gKi8KKwlib29sIGRlYXRoX3Rlc3Q7IC8qIFByb3RlY3RlZCBieSBsb2NrLiAq
LwogCXN0cnVjdCBsaXN0X2hlYWQgcmVzb3VyY2VzOyAvKiBQcm90ZWN0ZWQgYnkgbG9jay4gKi8K
IH07CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBrdW5pdF9zZXRfZGVhdGhfdGVzdChzdHJ1Y3Qga3Vu
aXQgKnRlc3QsIGJvb2wgZGVhdGhfdGVzdCkKK3sKKwltdXRleF9sb2NrKCZ0ZXN0LT5sb2NrKTsK
Kwl0ZXN0LT5kZWF0aF90ZXN0ID0gZGVhdGhfdGVzdDsKKwltdXRleF91bmxvY2soJnRlc3QtPmxv
Y2spOworfQorCiB2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3QsIGNvbnN0
IGNoYXIgKm5hbWUpOwogCiB2b2lkIGt1bml0X2ZhaWwoc3RydWN0IGt1bml0ICp0ZXN0LCBzdHJ1
Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0pOwogCit2b2lkIGt1bml0X2Fib3J0KHN0cnVjdCBrdW5p
dCAqdGVzdCk7CisKIGludCBrdW5pdF9ydW5fdGVzdHMoc3RydWN0IGt1bml0X3N1aXRlICpzdWl0
ZSk7CiAKIC8qKgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90cnktY2F0Y2guaCBiL2luY2x1
ZGUva3VuaXQvdHJ5LWNhdGNoLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAw
MDAwMC4uOGE0MTRhOWFmMGI2NAotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdHJ5
LWNhdGNoLmgKQEAgLTAsMCArMSw2OSBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQ
TC0yLjAgKi8KKy8qCisgKiBBbiBBUEkgdG8gYWxsb3cgYSBmdW5jdGlvbiwgdGhhdCBtYXkgZmFp
bCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGluIGEKKyAqIGNvbnRyb2xsZWQgbWFubmVy
LgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAqIEF1dGhvcjogQnJl
bmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICovCisKKyNpZm5kZWYg
X0tVTklUX1RSWV9DQVRDSF9ICisjZGVmaW5lIF9LVU5JVF9UUllfQ0FUQ0hfSAorCisjaW5jbHVk
ZSA8bGludXgvdHlwZXMuaD4KKwordHlwZWRlZiB2b2lkICgqa3VuaXRfdHJ5X2NhdGNoX2Z1bmNf
dCkodm9pZCAqKTsKKworc3RydWN0IGt1bml0OworCisvKgorICogc3RydWN0IGt1bml0X3RyeV9j
YXRjaCAtIHByb3ZpZGVzIGEgZ2VuZXJpYyB3YXkgdG8gcnVuIGNvZGUgd2hpY2ggbWlnaHQgZmFp
bC4KKyAqIEBjb250ZXh0OiB1c2VkIHRvIHBhc3MgdXNlciBkYXRhIHRvIHRoZSB0cnkgYW5kIGNh
dGNoIGZ1bmN0aW9ucy4KKyAqCisgKiBrdW5pdF90cnlfY2F0Y2ggcHJvdmlkZXMgYSBnZW5lcmlj
LCBhcmNoaXRlY3R1cmUgaW5kZXBlbmRlbnQgd2F5IHRvIGV4ZWN1dGUKKyAqIGFuIGFyYml0cmFy
eSBmdW5jdGlvbiBvZiB0eXBlIGt1bml0X3RyeV9jYXRjaF9mdW5jX3Qgd2hpY2ggbWF5IGJhaWwg
b3V0IGJ5CisgKiBjYWxsaW5nIGt1bml0X3RyeV9jYXRjaF90aHJvdygpLiBJZiBrdW5pdF90cnlf
Y2F0Y2hfdGhyb3coKSBpcyBjYWxsZWQsIEB0cnkKKyAqIGlzIHN0b3BwZWQgYXQgdGhlIHNpdGUg
b2YgaW52b2NhdGlvbiBhbmQgQGNhdGNoIGlzIGNhdGNoIGlzIGNhbGxlZC4KKyAqCisgKiBzdHJ1
Y3Qga3VuaXRfdHJ5X2NhdGNoIHByb3ZpZGVzIGEgZ2VuZXJpYyBpbnRlcmZhY2UgZm9yIHRoZSBm
dW5jdGlvbmFsaXR5CisgKiBuZWVkZWQgdG8gaW1wbGVtZW50IGt1bml0LT5hYm9ydCgpIHdoaWNo
IGluIHR1cm4gaXMgbmVlZGVkIGZvciBpbXBsZW1lbnRpbmcKKyAqIGFzc2VydGlvbnMuIEFzc2Vy
dGlvbnMgYWxsb3cgc3RhdGluZyBhIHByZWNvbmRpdGlvbiBmb3IgYSB0ZXN0IHNpbXBsaWZ5aW5n
CisgKiBob3cgdGVzdCBjYXNlcyBhcmUgd3JpdHRlbiBhbmQgcHJlc2VudGVkLgorICoKKyAqIEFz
c2VydGlvbnMgYXJlIGxpa2UgZXhwZWN0YXRpb25zLCBleGNlcHQgdGhleSBhYm9ydCAoY2FsbAor
ICoga3VuaXRfdHJ5X2NhdGNoX3Rocm93KCkpIHdoZW4gdGhlIHNwZWNpZmllZCBjb25kaXRpb24g
aXMgbm90IG1ldC4gVGhpcyBpcworICogdXNlZnVsIHdoZW4geW91IGxvb2sgYXQgYSB0ZXN0IGNh
c2UgYXMgYSBsb2dpY2FsIHN0YXRlbWVudCBhYm91dCBzb21lIHBpZWNlCisgKiBvZiBjb2RlLCB3
aGVyZSBhc3NlcnRpb25zIGFyZSB0aGUgcHJlbWlzZXMgZm9yIHRoZSB0ZXN0IGNhc2UsIGFuZCB0
aGUKKyAqIGNvbmNsdXNpb24gaXMgYSBzZXQgb2YgcHJlZGljYXRlcywgcmF0aGVyIGV4cGVjdGF0
aW9ucywgdGhhdCBtdXN0IGFsbCBiZQorICogdHJ1ZS4gSWYgeW91ciBwcmVtaXNlcyBhcmUgdmlv
bGF0ZWQsIGl0IGRvZXMgbm90IG1ha2VzIHNlbnNlIHRvIGNvbnRpbnVlLgorICovCitzdHJ1Y3Qg
a3VuaXRfdHJ5X2NhdGNoIHsKKwkvKiBwcml2YXRlOiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KKwlz
dHJ1Y3Qga3VuaXQgKnRlc3Q7CisJc3RydWN0IGNvbXBsZXRpb24gKnRyeV9jb21wbGV0aW9uOwor
CWludCB0cnlfcmVzdWx0OworCWt1bml0X3RyeV9jYXRjaF9mdW5jX3QgdHJ5OworCWt1bml0X3Ry
eV9jYXRjaF9mdW5jX3QgY2F0Y2g7CisJdm9pZCAqY29udGV4dDsKK307CisKK3ZvaWQga3VuaXRf
dHJ5X2NhdGNoX2luaXQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoLAorCQkJICBz
dHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkgIGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgdHJ5LAorCQkJ
ICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IGNhdGNoKTsKKwordm9pZCBrdW5pdF90cnlfY2F0Y2hf
cnVuKHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwgdm9pZCAqY29udGV4dCk7CisK
K3ZvaWQgX19ub3JldHVybiBrdW5pdF90cnlfY2F0Y2hfdGhyb3coc3RydWN0IGt1bml0X3RyeV9j
YXRjaCAqdHJ5X2NhdGNoKTsKKworc3RhdGljIGlubGluZSBpbnQga3VuaXRfdHJ5X2NhdGNoX2dl
dF9yZXN1bHQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKQoreworCXJldHVybiB0
cnlfY2F0Y2gtPnRyeV9yZXN1bHQ7Cit9CisKKy8qCisgKiBFeHBvc2VkIGZvciB0ZXN0aW5nIG9u
bHkuCisgKi8KK3ZvaWQga3VuaXRfZ2VuZXJpY190cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRf
dHJ5X2NhdGNoICp0cnlfY2F0Y2gpOworCisjZW5kaWYgLyogX0tVTklUX1RSWV9DQVRDSF9IICov
CmRpZmYgLS1naXQgYS9rdW5pdC9NYWtlZmlsZSBiL2t1bml0L01ha2VmaWxlCmluZGV4IDYwYTll
YTZjYjQ2OTcuLjFmNzY4MGNmYTExYWQgMTAwNjQ0Ci0tLSBhL2t1bml0L01ha2VmaWxlCisrKyBi
L2t1bml0L01ha2VmaWxlCkBAIC0xLDYgKzEsNyBAQAogb2JqLSQoQ09ORklHX0tVTklUKSArPQkJ
CXRlc3QubyBcCiAJCQkJCXN0cmluZy1zdHJlYW0ubyBcCi0JCQkJCWt1bml0LXN0cmVhbS5vCisJ
CQkJCWt1bml0LXN0cmVhbS5vIFwKKwkJCQkJdHJ5LWNhdGNoLm8KIAogb2JqLSQoQ09ORklHX0tV
TklUX1RFU1QpICs9CQlzdHJpbmctc3RyZWFtLXRlc3QubwogCmRpZmYgLS1naXQgYS9rdW5pdC90
ZXN0LmMgYi9rdW5pdC90ZXN0LmMKaW5kZXggY2Q4ZWY1Y2UxMmU5Mi4uYTdiNDVhMTVlYjc1ZCAx
MDA2NDQKLS0tIGEva3VuaXQvdGVzdC5jCisrKyBiL2t1bml0L3Rlc3QuYwpAQCAtOCwxMiArOCwy
NCBAQAogCiAjaW5jbHVkZSA8bGludXgvc2NoZWQvZGVidWcuaD4KICNpbmNsdWRlIDxrdW5pdC90
ZXN0Lmg+CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CiAKIHN0YXRpYyB2b2lkIGt1bml0
X3NldF9mYWlsdXJlKHN0cnVjdCBrdW5pdCAqdGVzdCkKIHsKIAlXUklURV9PTkNFKHRlc3QtPnN1
Y2Nlc3MsIGZhbHNlKTsKIH0KIAorc3RhdGljIGJvb2wga3VuaXRfZ2V0X2RlYXRoX3Rlc3Qoc3Ry
dWN0IGt1bml0ICp0ZXN0KQoreworCWJvb2wgZGVhdGhfdGVzdDsKKworCW11dGV4X2xvY2soJnRl
c3QtPmxvY2spOworCWRlYXRoX3Rlc3QgPSB0ZXN0LT5kZWF0aF90ZXN0OworCW11dGV4X3VubG9j
aygmdGVzdC0+bG9jayk7CisKKwlyZXR1cm4gZGVhdGhfdGVzdDsKK30KKwogc3RhdGljIGludCBr
dW5pdF92cHJpbnRrX2VtaXQoaW50IGxldmVsLCBjb25zdCBjaGFyICpmbXQsIHZhX2xpc3QgYXJn
cykKIHsKIAlyZXR1cm4gdnByaW50a19lbWl0KDAsIGxldmVsLCBOVUxMLCAwLCBmbXQsIGFyZ3Mp
OwpAQCAtMTI2LDQwICsxMzgsMTc1IEBAIHZvaWQga3VuaXRfZmFpbChzdHJ1Y3Qga3VuaXQgKnRl
c3QsIHN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSkKIAlrdW5pdF9zdHJlYW1fY29tbWl0KHN0
cmVhbSk7CiB9CiAKK3ZvaWQgX19ub3JldHVybiBrdW5pdF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRl
c3QpCit7CisJa3VuaXRfc2V0X2RlYXRoX3Rlc3QodGVzdCwgdHJ1ZSk7CisKKwlrdW5pdF90cnlf
Y2F0Y2hfdGhyb3coJnRlc3QtPnRyeV9jYXRjaCk7CisKKwkvKgorCSAqIFRocm93IGNvdWxkIG5v
dCBhYm9ydCBmcm9tIHRlc3QuCisJICoKKwkgKiBYWFg6IHdlIHNob3VsZCBuZXZlciByZWFjaCB0
aGlzIGxpbmUhIEFzIGt1bml0X3RyeV9jYXRjaF90aHJvdyBpcworCSAqIG1hcmtlZCBfX25vcmV0
dXJuLgorCSAqLworCVdBUk5fT05DRSh0cnVlLCAiVGhyb3cgY291bGQgbm90IGFib3J0IGZyb20g
dGVzdCFcbiIpOworfQorCiB2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3Qs
IGNvbnN0IGNoYXIgKm5hbWUpCiB7CiAJbXV0ZXhfaW5pdCgmdGVzdC0+bG9jayk7CiAJSU5JVF9M
SVNUX0hFQUQoJnRlc3QtPnJlc291cmNlcyk7CiAJdGVzdC0+bmFtZSA9IG5hbWU7CiAJdGVzdC0+
c3VjY2VzcyA9IHRydWU7CisJdGVzdC0+ZGVhdGhfdGVzdCA9IGZhbHNlOwogfQogCiAvKgotICog
UGVyZm9ybXMgYWxsIGxvZ2ljIHRvIHJ1biBhIHRlc3QgY2FzZS4KKyAqIEluaXRpYWxpemVzIGFu
ZCBydW5zIHRlc3QgY2FzZS4gRG9lcyBub3QgY2xlYW4gdXAgb3IgZG8gcG9zdCB2YWxpZGF0aW9u
cy4KICAqLwotc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X3N1aXRlICpz
dWl0ZSwKLQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCitzdGF0aWMgdm9pZCBr
dW5pdF9ydW5fY2FzZV9pbnRlcm5hbChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgIHN0cnVj
dCBrdW5pdF9zdWl0ZSAqc3VpdGUsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nh
c2UpCiB7Ci0Jc3RydWN0IGt1bml0IHRlc3Q7Ci0JaW50IHJldCA9IDA7Ci0KLQlrdW5pdF9pbml0
X3Rlc3QoJnRlc3QsIHRlc3RfY2FzZS0+bmFtZSk7CisJaW50IHJldDsKIAogCWlmIChzdWl0ZS0+
aW5pdCkgewotCQlyZXQgPSBzdWl0ZS0+aW5pdCgmdGVzdCk7CisJCXJldCA9IHN1aXRlLT5pbml0
KHRlc3QpOwogCQlpZiAocmV0KSB7Ci0JCQlrdW5pdF9lcnIoJnRlc3QsICJmYWlsZWQgdG8gaW5p
dGlhbGl6ZTogJWRcbiIsIHJldCk7Ci0JCQlrdW5pdF9zZXRfZmFpbHVyZSgmdGVzdCk7CisJCQlr
dW5pdF9lcnIodGVzdCwgImZhaWxlZCB0byBpbml0aWFsaXplOiAlZFxuIiwgcmV0KTsKKwkJCWt1
bml0X3NldF9mYWlsdXJlKHRlc3QpOwogCQkJcmV0dXJuOwogCQl9CiAJfQogCi0JdGVzdF9jYXNl
LT5ydW5fY2FzZSgmdGVzdCk7CisJdGVzdF9jYXNlLT5ydW5fY2FzZSh0ZXN0KTsKK30KKworc3Rh
dGljIHZvaWQga3VuaXRfY2FzZV9pbnRlcm5hbF9jbGVhbnVwKHN0cnVjdCBrdW5pdCAqdGVzdCkK
K3sKKwlrdW5pdF9jbGVhbnVwKHRlc3QpOworfQogCisvKgorICogUGVyZm9ybXMgcG9zdCB2YWxp
ZGF0aW9ucyBhbmQgY2xlYW51cCBhZnRlciBhIHRlc3QgY2FzZSB3YXMgcnVuLgorICogWFhYOiBT
aG91bGQgT05MWSBCRSBDQUxMRUQgQUZURVIga3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwhCisgKi8K
K3N0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlX2NsZWFudXAoc3RydWN0IGt1bml0ICp0ZXN0LAor
CQkJCSAgIHN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGUpCit7CiAJaWYgKHN1aXRlLT5leGl0KQot
CQlzdWl0ZS0+ZXhpdCgmdGVzdCk7CisJCXN1aXRlLT5leGl0KHRlc3QpOworCisJa3VuaXRfY2Fz
ZV9pbnRlcm5hbF9jbGVhbnVwKHRlc3QpOworfQorCisvKgorICogSGFuZGxlcyBhbiB1bmV4cGVj
dGVkIGNyYXNoIGluIGEgdGVzdCBjYXNlLgorICovCitzdGF0aWMgdm9pZCBrdW5pdF9oYW5kbGVf
dGVzdF9jcmFzaChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgc3RydWN0IGt1bml0X3N1aXRl
ICpzdWl0ZSwKKwkJCQkgICBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCWt1bml0
X2Vycih0ZXN0LCAia3VuaXQgdGVzdCBjYXNlIGNyYXNoZWQhIik7CisJLyoKKwkgKiBUT0RPKGJy
ZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20pOiBUaGlzIHByaW50cyB0aGUgc3RhY2sgdHJhY2UgdXAK
KwkgKiB0aHJvdWdoIHRoaXMgZnJhbWUsIG5vdCB1cCB0byB0aGUgZnJhbWUgdGhhdCBjYXVzZWQg
dGhlIGNyYXNoLgorCSAqLworCXNob3dfc3RhY2soTlVMTCwgTlVMTCk7CisKKwlrdW5pdF9jYXNl
X2ludGVybmFsX2NsZWFudXAodGVzdCk7Cit9CisKK3N0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29u
dGV4dCB7CisJc3RydWN0IGt1bml0ICp0ZXN0OworCXN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGU7
CisJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZTsKK307CisKK3N0YXRpYyB2b2lkIGt1bml0
X3RyeV9ydW5fY2FzZSh2b2lkICpkYXRhKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29u
dGV4dCAqY3R4ID0gZGF0YTsKKwlzdHJ1Y3Qga3VuaXQgKnRlc3QgPSBjdHgtPnRlc3Q7CisJc3Ry
dWN0IGt1bml0X3N1aXRlICpzdWl0ZSA9IGN0eC0+c3VpdGU7CisJc3RydWN0IGt1bml0X2Nhc2Ug
KnRlc3RfY2FzZSA9IGN0eC0+dGVzdF9jYXNlOworCisJLyoKKwkgKiBrdW5pdF9ydW5fY2FzZV9p
bnRlcm5hbCBtYXkgZW5jb3VudGVyIGEgZmF0YWwgZXJyb3I7IGlmIGl0IGRvZXMsCisJICogYWJv
cnQgd2lsbCBiZSBjYWxsZWQsIHRoaXMgdGhyZWFkIHdpbGwgZXhpdCwgYW5kIGZpbmFsbHkgdGhl
IHBhcmVudAorCSAqIHRocmVhZCB3aWxsIHJlc3VtZSBjb250cm9sIGFuZCBoYW5kbGUgYW55IG5l
Y2Vzc2FyeSBjbGVhbiB1cC4KKwkgKi8KKwlrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCh0ZXN0LCBz
dWl0ZSwgdGVzdF9jYXNlKTsKKwkvKiBUaGlzIGxpbmUgbWF5IG5ldmVyIGJlIHJlYWNoZWQuICov
CisJa3VuaXRfcnVuX2Nhc2VfY2xlYW51cCh0ZXN0LCBzdWl0ZSk7Cit9CisKK3N0YXRpYyB2b2lk
IGt1bml0X2NhdGNoX3J1bl9jYXNlKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9j
YXRjaF9jb250ZXh0ICpjdHggPSBkYXRhOworCXN0cnVjdCBrdW5pdCAqdGVzdCA9IGN0eC0+dGVz
dDsKKwlzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlID0gY3R4LT5zdWl0ZTsKKwlzdHJ1Y3Qga3Vu
aXRfY2FzZSAqdGVzdF9jYXNlID0gY3R4LT50ZXN0X2Nhc2U7CisJaW50IHRyeV9leGl0X2NvZGUg
PSBrdW5pdF90cnlfY2F0Y2hfZ2V0X3Jlc3VsdCgmdGVzdC0+dHJ5X2NhdGNoKTsKKworCWlmICh0
cnlfZXhpdF9jb2RlKSB7CisJCWt1bml0X3NldF9mYWlsdXJlKHRlc3QpOworCQkvKgorCQkgKiBU
ZXN0IGNhc2UgY291bGQgbm90IGZpbmlzaCwgd2UgaGF2ZSBubyBpZGVhIHdoYXQgc3RhdGUgaXQg
aXMKKwkJICogaW4sIHNvIGRvbid0IGRvIGNsZWFuIHVwLgorCQkgKi8KKwkJaWYgKHRyeV9leGl0
X2NvZGUgPT0gLUVUSU1FRE9VVCkKKwkJCWt1bml0X2Vycih0ZXN0LCAidGVzdCBjYXNlIHRpbWVk
IG91dFxuIik7CisJCS8qCisJCSAqIFVua25vd24gaW50ZXJuYWwgZXJyb3Igb2NjdXJyZWQgcHJl
dmVudGluZyB0ZXN0IGNhc2UgZnJvbQorCQkgKiBydW5uaW5nLCBzbyB0aGVyZSBpcyBub3RoaW5n
IHRvIGNsZWFuIHVwLgorCQkgKi8KKwkJZWxzZQorCQkJa3VuaXRfZXJyKHRlc3QsICJpbnRlcm5h
bCBlcnJvciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBmcm9tIHJ1bm5pbmc6ICVkXG4i
LAorCQkJCSAgdHJ5X2V4aXRfY29kZSk7CisJCXJldHVybjsKKwl9CisKKwlpZiAoa3VuaXRfZ2V0
X2RlYXRoX3Rlc3QodGVzdCkpIHsKKwkJLyoKKwkJICogRVhQRUNURUQgREVBVEg6IGt1bml0X3J1
bl9jYXNlX2ludGVybmFsIGVuY291bnRlcmVkCisJCSAqIGFudGljaXBhdGVkIGZhdGFsIGVycm9y
LiBFdmVyeXRoaW5nIHNob3VsZCBiZSBpbiBhIHNhZmUKKwkJICogc3RhdGUuCisJCSAqLworCQlr
dW5pdF9ydW5fY2FzZV9jbGVhbnVwKHRlc3QsIHN1aXRlKTsKKwl9IGVsc2UgeworCQkvKgorCQkg
KiBVTkVYUEVDVEVEIERFQVRIOiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCBlbmNvdW50ZXJlZCBh
bgorCQkgKiB1bmFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBXZSBoYXZlIG5vIGlkZWEgd2hhdCB0
aGUgc3RhdGUgb2YKKwkJICogdGhlIHRlc3QgY2FzZSBpcyBpbi4KKwkJICovCisJCWt1bml0X2hh
bmRsZV90ZXN0X2NyYXNoKHRlc3QsIHN1aXRlLCB0ZXN0X2Nhc2UpOworCQlrdW5pdF9zZXRfZmFp
bHVyZSh0ZXN0KTsKKwl9Cit9CisKKy8qCisgKiBQZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEg
dGVzdCBjYXNlLiBJdCBhbHNvIGNhdGNoZXMgbW9zdCBlcnJvcnMgdGhhdAorICogb2NjdXJzIGlu
IGEgdGVzdCBjYXNlIGFuZCByZXBvcnRzIHRoZW0gYXMgZmFpbHVyZXMuCisgKi8KK3N0YXRpYyB2
b2lkIGt1bml0X3J1bl9jYXNlX2NhdGNoX2Vycm9ycyhzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRl
LAorCQkJCQlzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCXN0cnVjdCBrdW5pdF90
cnlfY2F0Y2hfY29udGV4dCBjb250ZXh0OworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9j
YXRjaDsKKwlzdHJ1Y3Qga3VuaXQgdGVzdDsKKworCWt1bml0X2luaXRfdGVzdCgmdGVzdCwgdGVz
dF9jYXNlLT5uYW1lKTsKKwl0cnlfY2F0Y2ggPSAmdGVzdC50cnlfY2F0Y2g7CiAKLQlrdW5pdF9j
bGVhbnVwKCZ0ZXN0KTsKKwlrdW5pdF90cnlfY2F0Y2hfaW5pdCh0cnlfY2F0Y2gsCisJCQkgICAg
ICZ0ZXN0LAorCQkJICAgICBrdW5pdF90cnlfcnVuX2Nhc2UsCisJCQkgICAgIGt1bml0X2NhdGNo
X3J1bl9jYXNlKTsKKwljb250ZXh0LnRlc3QgPSAmdGVzdDsKKwljb250ZXh0LnN1aXRlID0gc3Vp
dGU7CisJY29udGV4dC50ZXN0X2Nhc2UgPSB0ZXN0X2Nhc2U7CisJa3VuaXRfdHJ5X2NhdGNoX3J1
bih0cnlfY2F0Y2gsICZjb250ZXh0KTsKIAogCXRlc3RfY2FzZS0+c3VjY2VzcyA9IHRlc3Quc3Vj
Y2VzczsKIH0KQEAgLTE3Miw3ICszMTksNyBAQCBpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBr
dW5pdF9zdWl0ZSAqc3VpdGUpCiAJa3VuaXRfcHJpbnRfc3VidGVzdF9zdGFydChzdWl0ZSk7CiAK
IAlmb3IgKHRlc3RfY2FzZSA9IHN1aXRlLT50ZXN0X2Nhc2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNl
OyB0ZXN0X2Nhc2UrKykgewotCQlrdW5pdF9ydW5fY2FzZShzdWl0ZSwgdGVzdF9jYXNlKTsKKwkJ
a3VuaXRfcnVuX2Nhc2VfY2F0Y2hfZXJyb3JzKHN1aXRlLCB0ZXN0X2Nhc2UpOwogCQlrdW5pdF9w
cmludF90ZXN0X2Nhc2Vfb2tfbm90X29rKHRlc3RfY2FzZSwgdGVzdF9jYXNlX2NvdW50KyspOwog
CX0KIApkaWZmIC0tZ2l0IGEva3VuaXQvdHJ5LWNhdGNoLmMgYi9rdW5pdC90cnktY2F0Y2guYwpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi5kZTU4MGYwNzQzODdiCi0t
LSAvZGV2L251bGwKKysrIGIva3VuaXQvdHJ5LWNhdGNoLmMKQEAgLTAsMCArMSw5NSBAQAorLy8g
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBBbiBBUEkgdG8gYWxsb3cg
YSBmdW5jdGlvbiwgdGhhdCBtYXkgZmFpbCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGlu
IGEKKyAqIGNvbnRyb2xsZWQgbWFubmVyLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29v
Z2xlIExMQy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29n
bGUuY29tPgorICovCisKKyNpbmNsdWRlIDxrdW5pdC90cnktY2F0Y2guaD4KKyNpbmNsdWRlIDxr
dW5pdC90ZXN0Lmg+CisjaW5jbHVkZSA8bGludXgvY29tcGxldGlvbi5oPgorI2luY2x1ZGUgPGxp
bnV4L2t0aHJlYWQuaD4KKwordm9pZCBfX25vcmV0dXJuIGt1bml0X3RyeV9jYXRjaF90aHJvdyhz
dHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpCit7CisJdHJ5X2NhdGNoLT50cnlfcmVz
dWx0ID0gLUVGQVVMVDsKKwljb21wbGV0ZV9hbmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0
aW9uLCAtRUZBVUxUKTsKK30KKworc3RhdGljIGludCBrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRm
bl9hZGFwdGVyKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2Nh
dGNoID0gZGF0YTsKKworCXRyeV9jYXRjaC0+dHJ5KHRyeV9jYXRjaC0+Y29udGV4dCk7CisKKwlj
b21wbGV0ZV9hbmRfZXhpdCh0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uLCAwKTsKK30KKwordm9p
ZCBrdW5pdF90cnlfY2F0Y2hfcnVuKHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwg
dm9pZCAqY29udGV4dCkKK3sKKwlERUNMQVJFX0NPTVBMRVRJT05fT05TVEFDSyh0cnlfY29tcGxl
dGlvbik7CisJc3RydWN0IGt1bml0ICp0ZXN0ID0gdHJ5X2NhdGNoLT50ZXN0OworCXN0cnVjdCB0
YXNrX3N0cnVjdCAqdGFza19zdHJ1Y3Q7CisJaW50IGV4aXRfY29kZSwgc3RhdHVzOworCisJdHJ5
X2NhdGNoLT5jb250ZXh0ID0gY29udGV4dDsKKwl0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uID0g
JnRyeV9jb21wbGV0aW9uOworCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IDA7CisJdGFza19zdHJ1
Y3QgPSBrdGhyZWFkX3J1bihrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFwdGVyLAorCQkJ
CSAgdHJ5X2NhdGNoLAorCQkJCSAgImt1bml0X3RyeV9jYXRjaF90aHJlYWQiKTsKKwlpZiAoSVNf
RVJSKHRhc2tfc3RydWN0KSkgeworCQl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4
dCk7CisJCXJldHVybjsKKwl9CisKKwkvKgorCSAqIFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xl
LmNvbSk6IFdlIHNob3VsZCBwcm9iYWJseSBoYXZlIHNvbWUgdHlwZSBvZgorCSAqIHZhcmlhYmxl
IHRpbWVvdXQgaGVyZS4gVGhlIG9ubHkgcXVlc3Rpb24gaXMgd2hhdCB0aGF0IHRpbWVvdXQgdmFs
dWUKKwkgKiBzaG91bGQgYmUuCisJICoKKwkgKiBUaGUgaW50ZW50aW9uIGhhcyBhbHdheXMgYmVl
biwgYXQgc29tZSBwb2ludCwgdG8gYmUgYWJsZSB0byBsYWJlbAorCSAqIHRlc3RzIHdpdGggc29t
ZSB0eXBlIG9mIHNpemUgYnVja2V0ICh1bml0L3NtYWxsLCBpbnRlZ3JhdGlvbi9tZWRpdW0sCisJ
ICogbGFyZ2Uvc3lzdGVtL2VuZC10by1lbmQsIGV0YyksIHdoZXJlIGVhY2ggc2l6ZSBidWNrZXQg
d291bGQgZ2V0IGEKKwkgKiBkZWZhdWx0IHRpbWVvdXQgdmFsdWUga2luZCBvZiBsaWtlIHdoYXQg
QmF6ZWwgZG9lczoKKwkgKiBodHRwczovL2RvY3MuYmF6ZWwuYnVpbGQvdmVyc2lvbnMvbWFzdGVy
L2JlL2NvbW1vbi1kZWZpbml0aW9ucy5odG1sI3Rlc3Quc2l6ZQorCSAqIFRoZXJlIGlzIHN0aWxs
IHNvbWUgZGViYXRlIHRvIGJlIGhhZCBvbiBleGFjdGx5IGhvdyB3ZSBkbyB0aGlzLiAoRm9yCisJ
ICogb25lLCB3ZSBwcm9iYWJseSB3YW50IHRvIGhhdmUgc29tZSBzb3J0IG9mIHRlc3QgcnVubmVy
IGxldmVsCisJICogdGltZW91dC4pCisJICoKKwkgKiBGb3IgbW9yZSBiYWNrZ3JvdW5kIG9uIHRo
aXMgdG9waWMsIHNlZToKKwkgKiBodHRwczovL21pa2UtYmxhbmQuY29tLzIwMTEvMTEvMDEvc21h
bGwtbWVkaXVtLWxhcmdlLmh0bWwKKwkgKi8KKwlzdGF0dXMgPSB3YWl0X2Zvcl9jb21wbGV0aW9u
X3RpbWVvdXQoJnRyeV9jb21wbGV0aW9uLAorCQkJCQkgICAgIDMwMCAqIE1TRUNfUEVSX1NFQyk7
IC8qIDUgbWluICovCisJaWYgKHN0YXR1cyA8IDApIHsKKwkJa3VuaXRfZXJyKHRlc3QsICJ0cnkg
dGltZWQgb3V0XG4iKTsKKwkJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gLUVUSU1FRE9VVDsKKwl9
CisKKwlleGl0X2NvZGUgPSB0cnlfY2F0Y2gtPnRyeV9yZXN1bHQ7CisKKwlpZiAoIWV4aXRfY29k
ZSkKKwkJcmV0dXJuOworCisJaWYgKGV4aXRfY29kZSA9PSAtRUZBVUxUKQorCQl0cnlfY2F0Y2gt
PnRyeV9yZXN1bHQgPSAwOworCWVsc2UgaWYgKGV4aXRfY29kZSA9PSAtRUlOVFIpCisJCWt1bml0
X2Vycih0ZXN0LCAid2FrZV91cF9wcm9jZXNzKCkgd2FzIG5ldmVyIGNhbGxlZFxuIik7CisJZWxz
ZSBpZiAoZXhpdF9jb2RlKQorCQlrdW5pdF9lcnIodGVzdCwgIlVua25vd24gZXJyb3I6ICVkXG4i
LCBleGl0X2NvZGUpOworCisJdHJ5X2NhdGNoLT5jYXRjaCh0cnlfY2F0Y2gtPmNvbnRleHQpOwor
fQorCit2b2lkIGt1bml0X3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRy
eV9jYXRjaCwKKwkJCSAgc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJICBrdW5pdF90cnlfY2F0Y2hf
ZnVuY190IHRyeSwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaCkKK3sKKwl0cnlf
Y2F0Y2gtPnRlc3QgPSB0ZXN0OworCXRyeV9jYXRjaC0+dHJ5ID0gdHJ5OworCXRyeV9jYXRjaC0+
Y2F0Y2ggPSBjYXRjaDsKK30KLS0gCjIuMjIuMC40MTAuZ2Q4ZmRiZTIxYjUtZ29vZwoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxp
bmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
