Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 50644FF8FA
	for <lists+dri-devel@lfdr.de>; Sun, 17 Nov 2019 12:44:40 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4D6476E29E;
	Sun, 17 Nov 2019 11:44:19 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from bhuna.collabora.co.uk (bhuna.collabora.co.uk [46.235.227.227])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6E4FD6E279
 for <dri-devel@lists.freedesktop.org>; Sun, 17 Nov 2019 07:11:03 +0000 (UTC)
Received: from [127.0.0.1] (localhost [127.0.0.1]) (Authenticated sender: sre)
 with ESMTPSA id 5012328FC5C
Received: by earth.universe (Postfix, from userid 1000)
 id 3498B3C0CAA; Sun, 17 Nov 2019 03:41:40 +0100 (CET)
From: Sebastian Reichel <sebastian.reichel@collabora.com>
To: Sebastian Reichel <sre@kernel.org>,
 Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
 Tomi Valkeinen <tomi.valkeinen@ti.com>
Subject: [RFCv1 30/42] drm/omap: dsi: move panel refresh function to host
Date: Sun, 17 Nov 2019 03:40:16 +0100
Message-Id: <20191117024028.2233-31-sebastian.reichel@collabora.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191117024028.2233-1-sebastian.reichel@collabora.com>
References: <20191117024028.2233-1-sebastian.reichel@collabora.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Sun, 17 Nov 2019 11:44:18 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: kernel@collabora.com, Tony Lindgren <tony@atomide.com>,
 "H. Nikolaus Schaller" <hns@goldelico.com>, Merlijn Wajer <merlijn@wizzup.org>,
 Sebastian Reichel <sebastian.reichel@collabora.com>,
 dri-devel@lists.freedesktop.org, linux-omap@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBtb3ZlcyB0aGUgcGFuZWwgcmVmcmVzaC91cGRhdGUgZnVuY3Rpb24gZnJvbSB0aGUgcGFu
ZWwKZHJpdmVyIGludG8gdGhlIERTSSBob3N0IGRyaXZlciB0byBwcmVwYXJlIGZvciBjb21tb24g
ZHJtX3BhbmVsCnN1cHBvcnQuCgpTaWduZWQtb2ZmLWJ5OiBTZWJhc3RpYW4gUmVpY2hlbCA8c2Vi
YXN0aWFuLnJlaWNoZWxAY29sbGFib3JhLmNvbT4KLS0tCiAuLi4vZ3B1L2RybS9vbWFwZHJtL2Rp
c3BsYXlzL3BhbmVsLWRzaS1jbS5jICAgfCAgNjggLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9k
cm0vb21hcGRybS9kc3MvZHNpLmMgICAgICAgICAgICAgfCAxMDEgKysrKysrKysrKysrKysrKy0t
CiBkcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21hcGRzcy5oICAgICAgICAgfCAgIDcgKy0K
IGRyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL29tYXBfY3J0Yy5jICAgICAgICAgICB8ICAxMSArLQog
NCBmaWxlcyBjaGFuZ2VkLCA5NyBpbnNlcnRpb25zKCspLCA5MCBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kaXNwbGF5cy9wYW5lbC1kc2ktY20uYyBi
L2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rpc3BsYXlzL3BhbmVsLWRzaS1jbS5jCmluZGV4IDU2
Mzk4ZTJhZWMyZC4uOWJmYzI2MmY1YzVhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vb21h
cGRybS9kaXNwbGF5cy9wYW5lbC1kc2ktY20uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vb21hcGRy
bS9kaXNwbGF5cy9wYW5lbC1kc2ktY20uYwpAQCAtMTc3LDI3ICsxNzcsNiBAQCBzdGF0aWMgaW50
IGRzaWNtX2dldF9pZChzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhLCB1OCAqaWQxLCB1OCAq
aWQyLCB1OCAqaWQzKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGRzaWNtX3NldF91cGRh
dGVfd2luZG93KHN0cnVjdCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEsCi0JCXUxNiB4LCB1MTYgeSwg
dTE2IHcsIHUxNiBoKQotewotCXN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSA9IGRkYXRhLT5k
c2k7Ci0JaW50IHI7Ci0JdTE2IHgxID0geDsKLQl1MTYgeDIgPSB4ICsgdyAtIDE7Ci0JdTE2IHkx
ID0geTsKLQl1MTYgeTIgPSB5ICsgaCAtIDE7Ci0KLQlyID0gbWlwaV9kc2lfZGNzX3NldF9jb2x1
bW5fYWRkcmVzcyhkc2ksIHgxLCB4Mik7Ci0JaWYgKHIgPCAwKQotCQlyZXR1cm4gcjsKLQotCXIg
PSBtaXBpX2RzaV9kY3Nfc2V0X3BhZ2VfYWRkcmVzcyhkc2ksIHkxLCB5Mik7Ci0JaWYgKHIgPCAw
KQotCQlyZXR1cm4gcjsKLQotCXJldHVybiAwOwotfQotCiBzdGF0aWMgaW50IGRzaWNtX2JsX3Vw
ZGF0ZV9zdGF0dXMoc3RydWN0IGJhY2tsaWdodF9kZXZpY2UgKmRldikKIHsKIAlzdHJ1Y3QgcGFu
ZWxfZHJ2X2RhdGEgKmRkYXRhID0gZGV2X2dldF9kcnZkYXRhKCZkZXYtPmRldik7CkBAIC00NzAs
NDggKzQ0OSw2IEBAIHN0YXRpYyB2b2lkIGRzaWNtX2Rpc2FibGUoc3RydWN0IG9tYXBfZHNzX2Rl
dmljZSAqZHNzZGV2KQogCW11dGV4X3VubG9jaygmZGRhdGEtPmxvY2spOwogfQogCi1zdGF0aWMg
dm9pZCBkc2ljbV9mcmFtZWRvbmVfY2IoaW50IGVyciwgdm9pZCAqZGF0YSkKLXsKLQlzdHJ1Y3Qg
cGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gZGF0YTsKLQotCWRldl9kYmcoJmRkYXRhLT5kc2ktPmRl
diwgImZyYW1lZG9uZSwgZXJyICVkXG4iLCBlcnIpOwotCW11dGV4X3VubG9jaygmZGRhdGEtPmxv
Y2spOwotfQotCi1zdGF0aWMgaW50IGRzaWNtX3VwZGF0ZShzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNl
ICpkc3NkZXYsCi0JCQkJICAgIHUxNiB4LCB1MTYgeSwgdTE2IHcsIHUxNiBoKQotewotCXN0cnVj
dCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEgPSB0b19wYW5lbF9kYXRhKGRzc2Rldik7Ci0Jc3RydWN0
IG9tYXBfZHNzX2RldmljZSAqc3JjID0gZGRhdGEtPnNyYzsKLQlpbnQgcjsKLQotCWRldl9kYmco
JmRkYXRhLT5kc2ktPmRldiwgInVwZGF0ZSAlZCwgJWQsICVkIHggJWRcbiIsIHgsIHksIHcsIGgp
OwotCi0JbXV0ZXhfbG9jaygmZGRhdGEtPmxvY2spOwotCi0JaWYgKCFkZGF0YS0+ZW5hYmxlZCkg
ewotCQlyID0gMDsKLQkJZ290byBlcnI7Ci0JfQotCi0JLyogWFhYIG5vIG5lZWQgdG8gc2VuZCB0
aGlzIGV2ZXJ5IGZyYW1lLCBidXQgZHNpIGJyZWFrIGlmIG5vdCBkb25lICovCi0JciA9IGRzaWNt
X3NldF91cGRhdGVfd2luZG93KGRkYXRhLCAwLCAwLCBkZGF0YS0+dm0uaGFjdGl2ZSwKLQkJCQkg
ICAgZGRhdGEtPnZtLnZhY3RpdmUpOwotCWlmIChyKQotCQlnb3RvIGVycjsKLQotCXIgPSBzcmMt
Pm9wcy0+ZHNpLnVwZGF0ZShzcmMsIGRkYXRhLT5kc2ktPmNoYW5uZWwsIGRzaWNtX2ZyYW1lZG9u
ZV9jYiwKLQkJCWRkYXRhKTsKLQlpZiAocikKLQkJZ290byBlcnI7Ci0KLQkvKiBub3RlOiBubyB1
bmxvY2sgaGVyZS4gdW5sb2NrIGlzIHNyYyBmcmFtZWRvbmVfY2IgKi8KLQlyZXR1cm4gMDsKLWVy
cjoKLQltdXRleF91bmxvY2soJmRkYXRhLT5sb2NrKTsKLQlyZXR1cm4gcjsKLX0KLQogc3RhdGlj
IGludCBfZHNpY21fZW5hYmxlX3RlKHN0cnVjdCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEsIGJvb2wg
ZW5hYmxlKQogewogCXN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSA9IGRkYXRhLT5kc2k7CkBA
IC01NzIsMTAgKzUwOSw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlX29w
cyBkc2ljbV9vcHMgPSB7CiAJLmNoZWNrX3RpbWluZ3MJPSBkc2ljbV9jaGVja190aW1pbmdzLAog
fTsKIAotc3RhdGljIGNvbnN0IHN0cnVjdCBvbWFwX2Rzc19kcml2ZXIgZHNpY21fZHNzX2RyaXZl
ciA9IHsKLQkudXBkYXRlCQk9IGRzaWNtX3VwZGF0ZSwKLX07Ci0KIHN0YXRpYyBpbnQgZHNpY21f
cHJvYmVfb2Yoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQogewogCXN0cnVjdCBkZXZpY2Vf
bm9kZSAqbm9kZSA9IGRzaS0+ZGV2Lm9mX25vZGU7CkBAIC02NjAsNyArNTkzLDYgQEAgc3RhdGlj
IGludCBkc2ljbV9wcm9iZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCiAJZHNzZGV2ID0g
JmRkYXRhLT5kc3NkZXY7CiAJZHNzZGV2LT5kZXYgPSBkZXY7CiAJZHNzZGV2LT5vcHMgPSAmZHNp
Y21fb3BzOwotCWRzc2Rldi0+ZHJpdmVyID0gJmRzaWNtX2Rzc19kcml2ZXI7CiAJZHNzZGV2LT50
eXBlID0gT01BUF9ESVNQTEFZX1RZUEVfRFNJOwogCWRzc2Rldi0+ZGlzcGxheSA9IHRydWU7CiAJ
ZHNzZGV2LT5vd25lciA9IFRISVNfTU9EVUxFOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L29tYXBkcm0vZHNzL2RzaS5jIGIvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vZHNzL2RzaS5jCmlu
ZGV4IDM1YzBjZTcyY2QxNS4uNjZhZDdkYmM2NmEyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vb21hcGRybS9kc3MvZHNpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vZHNzL2Rz
aS5jCkBAIC0yMTcsNiArMjE3LDkgQEAgc3RhdGljIHZvaWQgZHNpX2Rpc3BsYXlfdW5pbml0X2Rp
c3BjKHN0cnVjdCBkc2lfZGF0YSAqZHNpKTsKIAogc3RhdGljIGludCBkc2lfdmNfc2VuZF9udWxs
KHN0cnVjdCBkc2lfZGF0YSAqZHNpLCBpbnQgY2hhbm5lbCk7CiAKK3N0YXRpYyBzc2l6ZV90IF9v
bWFwX2RzaV9ob3N0X3RyYW5zZmVyKHN0cnVjdCBkc2lfZGF0YSAqZHNpLAorCQkJCSAgICAgICBj
b25zdCBzdHJ1Y3QgbWlwaV9kc2lfbXNnICptc2cpOworCiAvKiBEU0kgUExMIEhTRElWIGluZGlj
ZXMgKi8KICNkZWZpbmUgSFNESVZfRElTUEMJMAogI2RlZmluZSBIU0RJVl9EU0kJMQpAQCAtMzg2
LDkgKzM4OSw2IEBAIHN0cnVjdCBkc2lfZGF0YSB7CiAKIAlzdHJ1Y3QgZGVsYXllZF93b3JrIHVs
cHNfd29yazsKIAotCXZvaWQgKCpmcmFtZWRvbmVfY2FsbGJhY2spKGludCwgdm9pZCAqKTsKLQl2
b2lkICpmcmFtZWRvbmVfZGF0YTsKLQogCXN0cnVjdCBkZWxheWVkX3dvcmsgZnJhbWVkb25lX3Rp
bWVvdXRfd29yazsKIAogI2lmZGVmIERTSV9DQVRDSF9NSVNTSU5HX1RFCkBAIC0zODA5LDggKzM4
MDksNiBAQCBzdGF0aWMgdm9pZCBkc2lfaGFuZGxlX2ZyYW1lZG9uZShzdHJ1Y3QgZHNpX2RhdGEg
KmRzaSwgaW50IGVycm9yKQogCWRzaV9zZXRfdWxwc19hdXRvKGRzaSwgdHJ1ZSk7CiAJZHNpX2J1
c191bmxvY2soZHNpKTsKIAotCWRzaS0+ZnJhbWVkb25lX2NhbGxiYWNrKGVycm9yLCBkc2ktPmZy
YW1lZG9uZV9kYXRhKTsKLQogCWlmICghZXJyb3IpCiAJCWRzaV9wZXJmX3Nob3coZHNpLCAiRElT
UEMiKTsKIH0KQEAgLTM4NDIsNiArMzg0MCw4IEBAIHN0YXRpYyB2b2lkIGRzaV9mcmFtZWRvbmVf
aXJxX2NhbGxiYWNrKHZvaWQgKmRhdGEpCiAKIAljYW5jZWxfZGVsYXllZF93b3JrKCZkc2ktPmZy
YW1lZG9uZV90aW1lb3V0X3dvcmspOwogCisJRFNTREJHKCJGcmFtZWRvbmUgcmVjZWl2ZWQhXG4i
KTsKKwogCWRzaV9oYW5kbGVfZnJhbWVkb25lKGRzaSwgMCk7CiB9CiAKQEAgLTM4NjMsMTcgKzM4
NjMsNjkgQEAgc3RhdGljIGludCBfZHNpX3VwZGF0ZShzdHJ1Y3QgZHNpX2RhdGEgKmRzaSkKIAly
ZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBkc2lfdXBkYXRlKHN0cnVjdCBvbWFwX2Rzc19kZXZp
Y2UgKmRzc2RldiwgaW50IGNoYW5uZWwsCi0JCXZvaWQgKCpjYWxsYmFjaykoaW50LCB2b2lkICop
LCB2b2lkICpkYXRhKQorc3RhdGljIGludCBfZHNpX3VwZGF0ZV93aW5kb3coc3RydWN0IGRzaV9k
YXRhICpkc2ksIGludCBjaGFubmVsLAorCQkJICAgICAgaW50IHgsIGludCB5LCBpbnQgdywgaW50
IGgpCit7CisJaW50IHgxID0geCwgeDIgPSAoeCArIHcgLSAxKTsKKwlpbnQgeTEgPSB5LCB5MiA9
ICh5ICsgaCAtIDEpOworCXU4IHBheWxvYWRYWzVdID0geyBNSVBJX0RDU19TRVRfQ09MVU1OX0FE
RFJFU1MsCisJCQkgICB4MSA+PiA4LCB4MSAmIDB4ZmYsIHgyID4+IDgsIHgyICYgMHhmZiB9Owor
CXU4IHBheWxvYWRZWzVdID0geyBNSVBJX0RDU19TRVRfUEFHRV9BRERSRVNTLAorCQkJICAgeTEg
Pj4gOCwgeTEgJiAweGZmLCB5MiA+PiA4LCB5MiAmIDB4ZmYgfTsKKwlzdHJ1Y3QgbWlwaV9kc2lf
bXNnIG1zZ1ggPSB7IDAgfSwgbXNnWSA9IHsgMCB9OworCWludCByZXQ7CisKKwlXQVJOX09OKCFk
c2lfYnVzX2lzX2xvY2tlZChkc2kpKTsKKworCW1zZ1gudHlwZSA9IE1JUElfRFNJX0RDU19MT05H
X1dSSVRFOworCW1zZ1guY2hhbm5lbCA9IGNoYW5uZWw7CisJbXNnWC50eF9idWYgPSBwYXlsb2Fk
WDsKKwltc2dYLnR4X2xlbiA9IHNpemVvZihwYXlsb2FkWCk7CisKKwltc2dZLnR5cGUgPSBNSVBJ
X0RTSV9EQ1NfTE9OR19XUklURTsKKwltc2dZLmNoYW5uZWwgPSBjaGFubmVsOworCW1zZ1kudHhf
YnVmID0gcGF5bG9hZFk7CisJbXNnWS50eF9sZW4gPSBzaXplb2YocGF5bG9hZFkpOworCisJcmV0
ID0gX29tYXBfZHNpX2hvc3RfdHJhbnNmZXIoZHNpLCAmbXNnWCk7CisJaWYgKHJldCAhPSAwKQor
CQlyZXR1cm4gcmV0OworCisJcmV0dXJuIF9vbWFwX2RzaV9ob3N0X3RyYW5zZmVyKGRzaSwgJm1z
Z1kpOworfQorCitzdGF0aWMgaW50IGRzaV91cGRhdGVfY2hhbm5lbChzdHJ1Y3Qgb21hcF9kc3Nf
ZGV2aWNlICpkc3NkZXYsIGludCBjaGFubmVsKQogewogCXN0cnVjdCBkc2lfZGF0YSAqZHNpID0g
dG9fZHNpX2RhdGEoZHNzZGV2KTsKKwlpbnQgcjsKKworCWlmIChjaGFubmVsID4gMykKKwkJcmV0
dXJuIC1FSU5WQUw7CiAKIAlkc2lfYnVzX2xvY2soZHNpKTsKKworCWlmICghZHNpLT52Y1tjaGFu
bmVsXS5kZXN0KSB7CisJCXIgPSAtRU5PREVWOworCQlnb3RvIGVycjsKKwl9CisKKwlpZiAoZHNp
LT52bS5oYWN0aXZlID09IDAgfHwgZHNpLT52bS52YWN0aXZlID09IDApIHsKKwkJciA9IC1FSU5W
QUw7CisJCWdvdG8gZXJyOworCX0KKworCURTU0RCRygiZHNpX3VwZGF0ZV9jaGFubmVsOiAlZCIs
IGNoYW5uZWwpOworCiAJZHNpX3NldF91bHBzX2F1dG8oZHNpLCBmYWxzZSk7CiAKKwlyID0gX2Rz
aV91cGRhdGVfd2luZG93KGRzaSwgY2hhbm5lbCwgMCwgMCwgZHNpLT52bS5oYWN0aXZlLAorCQkJ
ICAgICAgIGRzaS0+dm0udmFjdGl2ZSk7CisJaWYgKHIgPCAwKSB7CisJCURTU1dBUk4oIndpbmRv
dyB1cGRhdGUgZXJyb3I6ICVkXG4iLCByKTsKKwkJZ290byBlcnI7CisJfQorCiAJZHNpLT51cGRh
dGVfY2hhbm5lbCA9IGNoYW5uZWw7Ci0JZHNpLT5mcmFtZWRvbmVfY2FsbGJhY2sgPSBjYWxsYmFj
azsKLQlkc2ktPmZyYW1lZG9uZV9kYXRhID0gZGF0YTsKIAogCWlmIChkc2ktPnRlX2VuYWJsZWQg
JiYgZHNpLT50ZV9ncGlvKSB7CiAJCXNjaGVkdWxlX2RlbGF5ZWRfd29yaygmZHNpLT50ZV90aW1l
b3V0X3dvcmssCkBAIC0zODgzLDYgKzM5MzUsMjQgQEAgc3RhdGljIGludCBkc2lfdXBkYXRlKHN0
cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiwgaW50IGNoYW5uZWwsCiAJCV9kc2lfdXBkYXRl
KGRzaSk7CiAJfQogCisJcmV0dXJuIDA7CisKK2VycjoKKwlkc2lfc2V0X3VscHNfYXV0byhkc2ks
IHRydWUpOworCWRzaV9idXNfdW5sb2NrKGRzaSk7CisJcmV0dXJuIHI7Cit9CisKK3N0YXRpYyBp
bnQgZHNpX3VwZGF0ZV9hbGwoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2KQoreworCWlu
dCBpLCByOworCisJZm9yIChpID0gMDsgaSA8IDQ7IGkrKykgeworCQlyID0gZHNpX3VwZGF0ZV9j
aGFubmVsKGRzc2RldiwgaSk7CisJCWlmIChyICE9IC1FTk9ERVYpCisJCQlyZXR1cm4gcjsKKwl9
CisKIAlyZXR1cm4gMDsKIH0KIApAQCAtNDEwMiw3ICs0MTcyLDkgQEAgc3RhdGljIHZvaWQgZHNp
X2Rpc3BsYXlfZW5hYmxlKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldikKIHsKIAlzdHJ1
Y3QgZHNpX2RhdGEgKmRzaSA9IHRvX2RzaV9kYXRhKGRzc2Rldik7CiAJRFNTREJHKCJkc2lfZGlz
cGxheV9lbmFibGVcbiIpOworCWRzaV9idXNfbG9jayhkc2kpOwogCWRzaV9kaXNwbGF5X3VscHNf
ZW5hYmxlKGRzaSk7CisJZHNpX2J1c191bmxvY2soZHNpKTsKIH0KIAogc3RhdGljIHZvaWQgZHNp
X2Rpc3BsYXlfdWxwc19kaXNhYmxlKHN0cnVjdCBkc2lfZGF0YSAqZHNpLApAQCAtNDEyOCw3ICs0
MjAwLDkgQEAgc3RhdGljIHZvaWQgZHNpX2Rpc3BsYXlfZGlzYWJsZShzdHJ1Y3Qgb21hcF9kc3Nf
ZGV2aWNlICpkc3NkZXYpCiB7CiAJc3RydWN0IGRzaV9kYXRhICpkc2kgPSB0b19kc2lfZGF0YShk
c3NkZXYpOwogCURTU0RCRygiZHNpX2Rpc3BsYXlfZGlzYWJsZVxuIik7CisJZHNpX2J1c19sb2Nr
KGRzaSk7CiAJZHNpX2Rpc3BsYXlfdWxwc19kaXNhYmxlKGRzaSwgdHJ1ZSwgZmFsc2UpOworCWRz
aV9idXNfdW5sb2NrKGRzaSk7CiB9CiAKIHN0YXRpYyBpbnQgZHNpX2VuYWJsZV90ZShzdHJ1Y3Qg
ZHNpX2RhdGEgKmRzaSwgYm9vbCBlbmFibGUpCkBAIC00ODc2LDcgKzQ5NTAsNyBAQCBzdGF0aWMg
Y29uc3Qgc3RydWN0IG9tYXBfZHNzX2RldmljZV9vcHMgZHNpX29wcyA9IHsKIAkJLmVuYWJsZV92
aWRlb19vdXRwdXQgPSBkc2lfZW5hYmxlX3ZpZGVvX291dHB1dCwKIAkJLmRpc2FibGVfdmlkZW9f
b3V0cHV0ID0gZHNpX2Rpc2FibGVfdmlkZW9fb3V0cHV0LAogCi0JCS51cGRhdGUgPSBkc2lfdXBk
YXRlLAorCQkudXBkYXRlID0gZHNpX3VwZGF0ZV9hbGwsCiAJfSwKIH07CiAKQEAgLTQ5NzQsMTQg
KzUwNDgsMTggQEAgaW50IG9tYXBfZHNpX2hvc3RfYXR0YWNoKHN0cnVjdCBtaXBpX2RzaV9ob3N0
ICpob3N0LAogCQlyZXR1cm4gLUVCVVNZOwogCX0KIAorCWRzaV9idXNfbG9jayhkc2kpOworCiAJ
YXRvbWljX3NldCgmZHNpLT5kb19leHRfdGVfdXBkYXRlLCAwKTsKIAogCWlmIChjbGllbnQtPm1v
ZGVfZmxhZ3MgJiBNSVBJX0RTSV9NT0RFX1ZJREVPKSB7CiAJCWRzaS0+bW9kZSA9IE9NQVBfRFNT
X0RTSV9WSURFT19NT0RFOwogCX0gZWxzZSB7CiAJCXIgPSBvbWFwX2RzaV9yZWdpc3Rlcl90ZV9p
cnEoZHNpLCBjbGllbnQpOwotCQlpZiAocikKKwkJaWYgKHIpIHsKKwkJCWRzaV9idXNfdW5sb2Nr
KGRzaSk7CiAJCQlyZXR1cm4gcjsKKwkJfQogCiAJCWRzaS0+bW9kZSA9IE9NQVBfRFNTX0RTSV9D
TURfTU9ERTsKIAl9CkBAIC00OTk1LDYgKzUwNzMsNyBAQCBpbnQgb21hcF9kc2lfaG9zdF9hdHRh
Y2goc3RydWN0IG1pcGlfZHNpX2hvc3QgKmhvc3QsCiAJZHNpLT51bHBzX2F1dG9faWRsZSA9ICEh
KGNsaWVudC0+bW9kZV9mbGFncyAmIE1JUElfRFNJX01PREVfVUxQU19JRExFKTsKIAlkc2lfc2V0
X3VscHNfYXV0byhkc2ksIHRydWUpOwogCisJZHNpX2J1c191bmxvY2soZHNpKTsKIAlyZXR1cm4g
MDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vZHNzL29tYXBkc3Mu
aCBiL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rzcy9vbWFwZHNzLmgKaW5kZXggNzRjZjAzNzFi
OGJiLi4yMTYwMWFmMjllZTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rz
cy9vbWFwZHNzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vZHNzL29tYXBkc3MuaApA
QCAtMjg3LDEzICsyODcsMTIgQEAgc3RydWN0IG9tYXBkc3NfaGRtaV9vcHMgewogfTsKIAogc3Ry
dWN0IG9tYXBkc3NfZHNpX29wcyB7Ci0JLyogYnVzIGNvbmZpZ3VyYXRpb24gKi8KKwlpbnQgKCp1
cGRhdGUpKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2Rldik7CisKKwkvKiBsZWdhY3kgQVBJ
IHVzZWQgYnkgb21hcGRzcyBwYW5lbHMgKi8KIAlpbnQgKCpzZXRfY29uZmlnKShzdHJ1Y3Qgb21h
cF9kc3NfZGV2aWNlICpkc3NkZXYsCiAJCQljb25zdCBzdHJ1Y3Qgb21hcF9kc3NfZHNpX2NvbmZp
ZyAqY2ZnKTsKIAotCWludCAoKnVwZGF0ZSkoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2
LCBpbnQgY2hhbm5lbCwKLQkJCXZvaWQgKCpjYWxsYmFjaykoaW50LCB2b2lkICopLCB2b2lkICpk
YXRhKTsKLQogCWludCAoKmVuYWJsZV92aWRlb19vdXRwdXQpKHN0cnVjdCBvbWFwX2Rzc19kZXZp
Y2UgKmRzc2RldiwgaW50IGNoYW5uZWwpOwogCXZvaWQgKCpkaXNhYmxlX3ZpZGVvX291dHB1dCko
c3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2LAogCQkJaW50IGNoYW5uZWwpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vb21hcF9jcnRjLmMgYi9kcml2ZXJzL2dwdS9k
cm0vb21hcGRybS9vbWFwX2NydGMuYwppbmRleCA4YjQ2OWVhYTUwMDUuLmE4ZDA1NDNkMTI5NiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vb21hcF9jcnRjLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL29tYXBkcm0vb21hcF9jcnRjLmMKQEAgLTM2MiwxMCArMzYyLDggQEAgc3Rh
dGljIHZvaWQgb21hcF9jcnRjX21hbnVhbF9kaXNwbGF5X3VwZGF0ZShzdHJ1Y3Qgd29ya19zdHJ1
Y3QgKmRhdGEpCiB7CiAJc3RydWN0IG9tYXBfY3J0YyAqb21hcF9jcnRjID0KIAkJCWNvbnRhaW5l
cl9vZihkYXRhLCBzdHJ1Y3Qgb21hcF9jcnRjLCB1cGRhdGVfd29yay53b3JrKTsKLQlzdHJ1Y3Qg
ZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSA9ICZvbWFwX2NydGMtPnBpcGUtPmNydGMtPm1vZGU7Ci0J
c3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2ID0gb21hcF9jcnRjLT5waXBlLT5vdXRwdXQt
Pm5leHQ7CisJc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2ID0gb21hcF9jcnRjLT5waXBl
LT5vdXRwdXQ7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IG9tYXBfY3J0Yy0+YmFzZS5kZXY7
Ci0JY29uc3Qgc3RydWN0IG9tYXBfZHNzX2RyaXZlciAqZHNzZHJ2OwogCWludCByZXQ7CiAKIAlp
ZiAoIWRzc2RldikgewpAQCAtMzczLDEzICszNzEsMTIgQEAgc3RhdGljIHZvaWQgb21hcF9jcnRj
X21hbnVhbF9kaXNwbGF5X3VwZGF0ZShzdHJ1Y3Qgd29ya19zdHJ1Y3QgKmRhdGEpCiAJCXJldHVy
bjsKIAl9CiAKLQlkc3NkcnYgPSBkc3NkZXYtPmRyaXZlcjsKLQlpZiAoIWRzc2RydiB8fCAhZHNz
ZHJ2LT51cGRhdGUpIHsKLQkJZGV2X2Vycl9vbmNlKGRldi0+ZGV2LCAibWlzc2luZyBvciBpbmNv
cnJlY3QgZHNzZHJ2ISIpOworCWlmIChkc3NkZXYtPnR5cGUgIT0gT01BUF9ESVNQTEFZX1RZUEVf
RFNJIHx8ICFkc3NkZXYtPm9wcy0+ZHNpLnVwZGF0ZSkgeworCQlkZXZfZXJyX29uY2UoZGV2LT5k
ZXYsICJubyBEU0kgdXBkYXRlIGNhbGxiYWNrIGZvdW5kISIpOwogCQlyZXR1cm47CiAJfQogCi0J
cmV0ID0gZHNzZHJ2LT51cGRhdGUoZHNzZGV2LCAwLCAwLCBtb2RlLT5oZGlzcGxheSwgbW9kZS0+
dmRpc3BsYXkpOworCXJldCA9IGRzc2Rldi0+b3BzLT5kc2kudXBkYXRlKGRzc2Rldik7CiAJaWYg
KHJldCA8IDApIHsKIAkJc3Bpbl9sb2NrX2lycSgmZGV2LT5ldmVudF9sb2NrKTsKIAkJb21hcF9j
cnRjLT5wZW5kaW5nID0gZmFsc2U7Ci0tIAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVs
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
