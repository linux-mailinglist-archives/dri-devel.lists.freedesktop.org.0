Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C5E8A9BA23
	for <lists+dri-devel@lfdr.de>; Sat, 24 Aug 2019 03:34:46 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D135B6ED7D;
	Sat, 24 Aug 2019 01:34:43 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pl1-x649.google.com (mail-pl1-x649.google.com
 [IPv6:2607:f8b0:4864:20::649])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6779B6ED7D
 for <dri-devel@lists.freedesktop.org>; Sat, 24 Aug 2019 01:34:39 +0000 (UTC)
Received: by mail-pl1-x649.google.com with SMTP id v4so6841387plp.23
 for <dri-devel@lists.freedesktop.org>; Fri, 23 Aug 2019 18:34:39 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=Zjjk/hNI/IaWxq0KcvGgj1clOn8R77PlBTrIcGoUruU=;
 b=PjLNjYBtEms7Sx1/C7A7NWRHy+bpzHCgQR3aElqoqxkSvLfrCVWIn37lapta8Lzzu+
 bLO9tf/WFWqwG9Y8ttIJ2a3k3YN7Ql6yT+4nYnt3JfcPEvBvPHPqFvb2JDOo+3RMhFe7
 Rin3MHsgRWvZMpkuTVVqmq+Xk3s8Qa7YyLiq6n/6As8hMwU41zmdYYsV64cyOZ2eJ4JM
 g8UETIQ5lxGol1rI+b+zH9e+xp6We6fu5jQLI6Y19000gVrixeNe2jg/ea1jmjYJGFHL
 nGrz/ckMWM3XWQw6jpTpr997sFOqe4hxUzEO/jILnmXDQtqmFoUgHKe+9Ki69RsfqNUj
 vrrQ==
X-Gm-Message-State: APjAAAUB+3WQYeSQwMUub1SSdSMpqdHapFknLlAihLat0vBrP4sRjAyx
 MRT7NPZP0yv4e7510jUGc6qzDbdj0vQPOHKVWRXhMg==
X-Google-Smtp-Source: APXvYqwRy5NbAT8zFEPMPCWpO58LcQ91q67SR9ocyeMfRI16nyscbu6oRY+PMaWJLI/kByqsgeKanVm9P8lAjEuAeLb7Vw==
X-Received: by 2002:a63:f357:: with SMTP id t23mr6524484pgj.421.1566610478075; 
 Fri, 23 Aug 2019 18:34:38 -0700 (PDT)
Date: Fri, 23 Aug 2019 18:34:08 -0700
In-Reply-To: <20190824013425.175645-1-brendanhiggins@google.com>
Message-Id: <20190824013425.175645-2-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190824013425.175645-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.187.g17f5b7556c-goog
Subject: [PATCH v15 01/18] kunit: test: add KUnit test runner core
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=Zjjk/hNI/IaWxq0KcvGgj1clOn8R77PlBTrIcGoUruU=;
 b=ggw9j6YNBEMgPSzlBuFE27eua4Ov4IEbzPmsadTK7/H4bfyMBTaku/Okn/5O0M5CsJ
 5FlAzBN5/KHr/0Epc2/1L8w66blJRvoOWduccIVHafJ+pwTwfeB7H6yiCd9Lo69rZZ1a
 9Zs1I4wg1a0UGANeYrXdpsGw8a0cxp1xp6cMCbTuvNhmLvmbclMPLH6aLMS62IfCAcce
 UCWTQaQLBWnLTXVSw7XB6VjZ0kXZWwpDhb9wdtIig/3kBip1TlHHUbRivDe14QHPWmbz
 v3hLRt1llXBI9NN2r9M5U5/K6HJ8BMmc6bkETvLauf7bhBvOmjpS91kLZJH5xFotK8O7
 eAiw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIGNvcmUgZmFjaWxpdGllcyBmb3IgZGVmaW5pbmcgdW5pdCB0ZXN0czsgdGhpcyBwcm92aWRl
cyBhIGNvbW1vbiB3YXkKdG8gZGVmaW5lIHRlc3QgY2FzZXMsIGZ1bmN0aW9ucyB0aGF0IGV4ZWN1
dGUgY29kZSB3aGljaCBpcyB1bmRlciB0ZXN0CmFuZCBkZXRlcm1pbmUgd2hldGhlciB0aGUgY29k
ZSB1bmRlciB0ZXN0IGJlaGF2ZXMgYXMgZXhwZWN0ZWQ7IHRoaXMgYWxzbwpwcm92aWRlcyBhIHdh
eSB0byBncm91cCB0b2dldGhlciByZWxhdGVkIHRlc3QgY2FzZXMgaW4gdGVzdCBzdWl0ZXMgKGhl
cmUKd2UgY2FsbCB0aGVtIHRlc3RfbW9kdWxlcykuCgpKdXN0IGRlZmluZSB0ZXN0IGNhc2VzIGFu
ZCBob3cgdG8gZXhlY3V0ZSB0aGVtIGZvciBub3c7IHNldHRpbmcKZXhwZWN0YXRpb25zIG9uIGNv
ZGUgd2lsbCBiZSBkZWZpbmVkIGxhdGVyLgoKU2lnbmVkLW9mZi1ieTogQnJlbmRhbiBIaWdnaW5z
IDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogR3JlZyBLcm9haC1IYXJ0
bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KUmV2aWV3ZWQtYnk6IExvZ2FuIEd1bnRo
b3JwZSA8bG9nYW5nQGRlbHRhdGVlLmNvbT4KUmV2aWV3ZWQtYnk6IEx1aXMgQ2hhbWJlcmxhaW4g
PG1jZ3JvZkBrZXJuZWwub3JnPgpSZXZpZXdlZC1ieTogU3RlcGhlbiBCb3lkIDxzYm95ZEBrZXJu
ZWwub3JnPgotLS0KIGluY2x1ZGUva3VuaXQvdGVzdC5oIHwgMTg4ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKwoga3VuaXQvS2NvbmZpZyAgICAgICAgfCAgMTcgKysr
Kwoga3VuaXQvTWFrZWZpbGUgICAgICAgfCAgIDEgKwoga3VuaXQvdGVzdC5jICAgICAgICAgfCAx
OTEgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNCBmaWxlcyBj
aGFuZ2VkLCAzOTcgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUva3Vu
aXQvdGVzdC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQga3VuaXQvS2NvbmZpZwogY3JlYXRlIG1vZGUg
MTAwNjQ0IGt1bml0L01ha2VmaWxlCiBjcmVhdGUgbW9kZSAxMDA2NDQga3VuaXQvdGVzdC5jCgpk
aWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3QuaApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmUzMGQxYmYyZmI2OAotLS0g
L2Rldi9udWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC0wLDAgKzEsMTg4IEBACisv
KiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLworLyoKKyAqIEJhc2UgdW5pdCB0
ZXN0IChLVW5pdCkgQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4K
KyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgor
ICovCisKKyNpZm5kZWYgX0tVTklUX1RFU1RfSAorI2RlZmluZSBfS1VOSVRfVEVTVF9ICisKKyNp
bmNsdWRlIDxsaW51eC90eXBlcy5oPgorCitzdHJ1Y3Qga3VuaXQ7CisKKy8qKgorICogc3RydWN0
IGt1bml0X2Nhc2UgLSByZXByZXNlbnRzIGFuIGluZGl2aWR1YWwgdGVzdCBjYXNlLgorICoKKyAq
IEBydW5fY2FzZTogdGhlIGZ1bmN0aW9uIHJlcHJlc2VudGluZyB0aGUgYWN0dWFsIHRlc3QgY2Fz
ZS4KKyAqIEBuYW1lOiAgICAgdGhlIG5hbWUgb2YgdGhlIHRlc3QgY2FzZS4KKyAqCisgKiBBIHRl
c3QgY2FzZSBpcyBhIGZ1bmN0aW9uIHdpdGggdGhlIHNpZ25hdHVyZSwKKyAqIGBgdm9pZCAoKiko
c3RydWN0IGt1bml0ICopYGAgdGhhdCBtYWtlcyBleHBlY3RhdGlvbnMgKHNlZQorICogS1VOSVRf
RVhQRUNUX1RSVUUoKSkgYWJvdXQgY29kZSB1bmRlciB0ZXN0LiBFYWNoIHRlc3QgY2FzZSBpcyBh
c3NvY2lhdGVkCisgKiB3aXRoIGEgJnN0cnVjdCBrdW5pdF9zdWl0ZSBhbmQgd2lsbCBiZSBydW4g
YWZ0ZXIgdGhlIHN1aXRlJ3MgaW5pdAorICogZnVuY3Rpb24gYW5kIGZvbGxvd2VkIGJ5IHRoZSBz
dWl0ZSdzIGV4aXQgZnVuY3Rpb24uCisgKgorICogQSB0ZXN0IGNhc2Ugc2hvdWxkIGJlIHN0YXRp
YyBhbmQgc2hvdWxkIG9ubHkgYmUgY3JlYXRlZCB3aXRoIHRoZQorICogS1VOSVRfQ0FTRSgpIG1h
Y3JvOyBhZGRpdGlvbmFsbHksIGV2ZXJ5IGFycmF5IG9mIHRlc3QgY2FzZXMgc2hvdWxkIGJlCisg
KiB0ZXJtaW5hdGVkIHdpdGggYW4gZW1wdHkgdGVzdCBjYXNlLgorICoKKyAqIEV4YW1wbGU6Cisg
KgorICogLi4gY29kZS1ibG9jazo6IGMKKyAqCisgKgl2b2lkIGFkZF90ZXN0X2Jhc2ljKHN0cnVj
dCBrdW5pdCAqdGVzdCkKKyAqCXsKKyAqCQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMSwgYWRkKDEs
IDApKTsKKyAqCQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMiwgYWRkKDEsIDEpKTsKKyAqCQlLVU5J
VF9FWFBFQ1RfRVEodGVzdCwgMCwgYWRkKC0xLCAxKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRl
c3QsIElOVF9NQVgsIGFkZCgwLCBJTlRfTUFYKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRlc3Qs
IC0xLCBhZGQoSU5UX01BWCwgSU5UX01JTikpOworICoJfQorICoKKyAqCXN0YXRpYyBzdHJ1Y3Qg
a3VuaXRfY2FzZSBleGFtcGxlX3Rlc3RfY2FzZXNbXSA9IHsKKyAqCQlLVU5JVF9DQVNFKGFkZF90
ZXN0X2Jhc2ljKSwKKyAqCQl7fQorICoJfTsKKyAqCisgKi8KK3N0cnVjdCBrdW5pdF9jYXNlIHsK
Kwl2b2lkICgqcnVuX2Nhc2UpKHN0cnVjdCBrdW5pdCAqdGVzdCk7CisJY29uc3QgY2hhciAqbmFt
ZTsKKworCS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLworCWJvb2wgc3VjY2VzczsK
K307CisKKy8qKgorICogS1VOSVRfQ0FTRSAtIEEgaGVscGVyIGZvciBjcmVhdGluZyBhICZzdHJ1
Y3Qga3VuaXRfY2FzZQorICoKKyAqIEB0ZXN0X25hbWU6IGEgcmVmZXJlbmNlIHRvIGEgdGVzdCBj
YXNlIGZ1bmN0aW9uLgorICoKKyAqIFRha2VzIGEgc3ltYm9sIGZvciBhIGZ1bmN0aW9uIHJlcHJl
c2VudGluZyBhIHRlc3QgY2FzZSBhbmQgY3JlYXRlcyBhCisgKiAmc3RydWN0IGt1bml0X2Nhc2Ug
b2JqZWN0IGZyb20gaXQuIFNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IKKyAqICZzdHJ1Y3Qga3Vu
aXRfY2FzZSBmb3IgYW4gZXhhbXBsZSBvbiBob3cgdG8gdXNlIGl0LgorICovCisjZGVmaW5lIEtV
TklUX0NBU0UodGVzdF9uYW1lKSB7IC5ydW5fY2FzZSA9IHRlc3RfbmFtZSwgLm5hbWUgPSAjdGVz
dF9uYW1lIH0KKworLyoqCisgKiBzdHJ1Y3Qga3VuaXRfc3VpdGUgLSBkZXNjcmliZXMgYSByZWxh
dGVkIGNvbGxlY3Rpb24gb2YgJnN0cnVjdCBrdW5pdF9jYXNlCisgKgorICogQG5hbWU6CXRoZSBu
YW1lIG9mIHRoZSB0ZXN0LiBQdXJlbHkgaW5mb3JtYXRpb25hbC4KKyAqIEBpbml0OgljYWxsZWQg
YmVmb3JlIGV2ZXJ5IHRlc3QgY2FzZS4KKyAqIEBleGl0OgljYWxsZWQgYWZ0ZXIgZXZlcnkgdGVz
dCBjYXNlLgorICogQHRlc3RfY2FzZXM6CWEgbnVsbCB0ZXJtaW5hdGVkIGFycmF5IG9mIHRlc3Qg
Y2FzZXMuCisgKgorICogQSBrdW5pdF9zdWl0ZSBpcyBhIGNvbGxlY3Rpb24gb2YgcmVsYXRlZCAm
c3RydWN0IGt1bml0X2Nhc2Ugcywgc3VjaCB0aGF0CisgKiBAaW5pdCBpcyBjYWxsZWQgYmVmb3Jl
IGV2ZXJ5IHRlc3QgY2FzZSBhbmQgQGV4aXQgaXMgY2FsbGVkIGFmdGVyIGV2ZXJ5CisgKiB0ZXN0
IGNhc2UsIHNpbWlsYXIgdG8gdGhlIG5vdGlvbiBvZiBhICp0ZXN0IGZpeHR1cmUqIG9yIGEgKnRl
c3QgY2xhc3MqCisgKiBpbiBvdGhlciB1bml0IHRlc3RpbmcgZnJhbWV3b3JrcyBsaWtlIEpVbml0
IG9yIEdvb2dsZXRlc3QuCisgKgorICogRXZlcnkgJnN0cnVjdCBrdW5pdF9jYXNlIG11c3QgYmUg
YXNzb2NpYXRlZCB3aXRoIGEga3VuaXRfc3VpdGUgZm9yIEtVbml0CisgKiB0byBydW4gaXQuCisg
Ki8KK3N0cnVjdCBrdW5pdF9zdWl0ZSB7CisJY29uc3QgY2hhciBuYW1lWzI1Nl07CisJaW50ICgq
aW5pdCkoc3RydWN0IGt1bml0ICp0ZXN0KTsKKwl2b2lkICgqZXhpdCkoc3RydWN0IGt1bml0ICp0
ZXN0KTsKKwlzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlczsKK307CisKKy8qKgorICogc3Ry
dWN0IGt1bml0IC0gcmVwcmVzZW50cyBhIHJ1bm5pbmcgaW5zdGFuY2Ugb2YgYSB0ZXN0LgorICoK
KyAqIEBwcml2OiBmb3IgdXNlciB0byBzdG9yZSBhcmJpdHJhcnkgZGF0YS4gQ29tbW9ubHkgdXNl
ZCB0byBwYXNzIGRhdGEKKyAqCSAgY3JlYXRlZCBpbiB0aGUgaW5pdCBmdW5jdGlvbiAoc2VlICZz
dHJ1Y3Qga3VuaXRfc3VpdGUpLgorICoKKyAqIFVzZWQgdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJv
dXQgdGhlIGN1cnJlbnQgY29udGV4dCB1bmRlciB3aGljaCB0aGUgdGVzdAorICogaXMgcnVubmlu
Zy4gTW9zdCBvZiB0aGlzIGRhdGEgaXMgcHJpdmF0ZSBhbmQgc2hvdWxkIG9ubHkgYmUgYWNjZXNz
ZWQKKyAqIGluZGlyZWN0bHkgdmlhIHB1YmxpYyBmdW5jdGlvbnM7IHRoZSBvbmUgZXhjZXB0aW9u
IGlzIEBwcml2IHdoaWNoIGNhbiBiZQorICogdXNlZCBieSB0aGUgdGVzdCB3cml0ZXIgdG8gc3Rv
cmUgYXJiaXRyYXJ5IGRhdGEuCisgKi8KK3N0cnVjdCBrdW5pdCB7CisJdm9pZCAqcHJpdjsKKwor
CS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLworCWNvbnN0IGNoYXIgKm5hbWU7IC8q
IFJlYWQgb25seSBhZnRlciBpbml0aWFsaXphdGlvbiEgKi8KKwkvKgorCSAqIHN1Y2Nlc3Mgc3Rh
cnRzIGFzIHRydWUsIGFuZCBtYXkgb25seSBiZSBzZXQgdG8gZmFsc2UgZHVyaW5nIGEKKwkgKiB0
ZXN0IGNhc2U7IHRodXMsIGl0IGlzIHNhZmUgdG8gdXBkYXRlIHRoaXMgYWNyb3NzIG11bHRpcGxl
CisJICogdGhyZWFkcyB1c2luZyBXUklURV9PTkNFOyBob3dldmVyLCBhcyBhIGNvbnNlcXVlbmNl
LCBpdCBtYXkgb25seQorCSAqIGJlIHJlYWQgYWZ0ZXIgdGhlIHRlc3QgY2FzZSBmaW5pc2hlcyBv
bmNlIGFsbCB0aHJlYWRzIGFzc29jaWF0ZWQKKwkgKiB3aXRoIHRoZSB0ZXN0IGNhc2UgaGF2ZSB0
ZXJtaW5hdGVkLgorCSAqLworCWJvb2wgc3VjY2VzczsgLyogUmVhZCBvbmx5IGFmdGVyIHRlc3Rf
Y2FzZSBmaW5pc2hlcyEgKi8KK307CisKK3ZvaWQga3VuaXRfaW5pdF90ZXN0KHN0cnVjdCBrdW5p
dCAqdGVzdCwgY29uc3QgY2hhciAqbmFtZSk7CisKK2ludCBrdW5pdF9ydW5fdGVzdHMoc3RydWN0
IGt1bml0X3N1aXRlICpzdWl0ZSk7CisKKy8qKgorICoga3VuaXRfdGVzdF9zdWl0ZSgpIC0gdXNl
ZCB0byByZWdpc3RlciBhICZzdHJ1Y3Qga3VuaXRfc3VpdGUgd2l0aCBLVW5pdC4KKyAqCisgKiBA
c3VpdGU6IGEgc3RhdGljYWxseSBhbGxvY2F0ZWQgJnN0cnVjdCBrdW5pdF9zdWl0ZS4KKyAqCisg
KiBSZWdpc3RlcnMgQHN1aXRlIHdpdGggdGhlIHRlc3QgZnJhbWV3b3JrLiBTZWUgJnN0cnVjdCBr
dW5pdF9zdWl0ZSBmb3IKKyAqIG1vcmUgaW5mb3JtYXRpb24uCisgKgorICogTk9URTogQ3VycmVu
dGx5IEtVbml0IHRlc3RzIGFyZSBhbGwgcnVuIGFzIGxhdGVfaW5pdGNhbGxzOyB0aGlzIG1lYW5z
CisgKiB0aGF0IHRoZXkgY2Fubm90IHRlc3QgYW55dGhpbmcgd2hlcmUgdGVzdHMgbXVzdCBydW4g
YXQgYSBkaWZmZXJlbnQgaW5pdAorICogcGhhc2UuIE9uZSBzaWduaWZpY2FudCByZXN0cmljdGlv
biByZXN1bHRpbmcgZnJvbSB0aGlzIGlzIHRoYXQgS1VuaXQKKyAqIGNhbm5vdCByZWxpYWJseSB0
ZXN0IGFueXRoaW5nIHRoYXQgaXMgaW5pdGlhbGl6ZSBpbiB0aGUgbGF0ZV9pbml0IHBoYXNlOwor
ICogYW5vdGhlciBpcyB0aGF0IEtVbml0IGlzIHVzZWxlc3MgdG8gdGVzdCB0aGluZ3MgdGhhdCBu
ZWVkIHRvIGJlIHJ1biBpbgorICogYW4gZWFybGllciBpbml0IHBoYXNlLgorICoKKyAqIFRPRE8o
YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6IERvbid0IHJ1biBhbGwgS1VuaXQgdGVzdHMgYXMK
KyAqIGxhdGVfaW5pdGNhbGxzLiAgSSBoYXZlIHNvbWUgZnV0dXJlIHdvcmsgcGxhbm5lZCB0byBk
aXNwYXRjaCBhbGwgS1VuaXQKKyAqIHRlc3RzIGZyb20gdGhlIHNhbWUgcGxhY2UsIGFuZCBhdCB0
aGUgdmVyeSBsZWFzdCB0byBkbyBzbyBhZnRlcgorICogZXZlcnl0aGluZyBlbHNlIGlzIGRlZmlu
aXRlbHkgaW5pdGlhbGl6ZWQuCisgKi8KKyNkZWZpbmUga3VuaXRfdGVzdF9zdWl0ZShzdWl0ZSkJ
CQkJCQkgICAgICAgXAorCXN0YXRpYyBpbnQga3VuaXRfc3VpdGVfaW5pdCMjc3VpdGUodm9pZCkJ
CQkgICAgICAgXAorCXsJCQkJCQkJCSAgICAgICBcCisJCXJldHVybiBrdW5pdF9ydW5fdGVzdHMo
JnN1aXRlKTsJCQkJICAgICAgIFwKKwl9CQkJCQkJCQkgICAgICAgXAorCWxhdGVfaW5pdGNhbGwo
a3VuaXRfc3VpdGVfaW5pdCMjc3VpdGUpCisKK3ZvaWQgX19wcmludGYoMywgNCkga3VuaXRfcHJp
bnRrKGNvbnN0IGNoYXIgKmxldmVsLAorCQkJCSBjb25zdCBzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJ
CQkJIGNvbnN0IGNoYXIgKmZtdCwgLi4uKTsKKworLyoqCisgKiBrdW5pdF9pbmZvKCkgLSBQcmlu
dHMgYW4gSU5GTyBsZXZlbCBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCBAdGVzdC4KKyAqCisgKiBA
dGVzdDogVGhlIHRlc3QgY29udGV4dCBvYmplY3QuCisgKiBAZm10OiAgQSBwcmludGsoKSBzdHls
ZSBmb3JtYXQgc3RyaW5nLgorICoKKyAqIFByaW50cyBhbiBpbmZvIGxldmVsIG1lc3NhZ2UgYXNz
b2NpYXRlZCB3aXRoIHRoZSB0ZXN0IHN1aXRlIGJlaW5nIHJ1bi4KKyAqIFRha2VzIGEgdmFyaWFi
bGUgbnVtYmVyIG9mIGZvcm1hdCBwYXJhbWV0ZXJzIGp1c3QgbGlrZSBwcmludGsoKS4KKyAqLwor
I2RlZmluZSBrdW5pdF9pbmZvKHRlc3QsIGZtdCwgLi4uKSBcCisJa3VuaXRfcHJpbnRrKEtFUk5f
SU5GTywgdGVzdCwgZm10LCAjI19fVkFfQVJHU19fKQorCisvKioKKyAqIGt1bml0X3dhcm4oKSAt
IFByaW50cyBhIFdBUk4gbGV2ZWwgbWVzc2FnZSBhc3NvY2lhdGVkIHdpdGggQHRlc3QuCisgKgor
ICogQHRlc3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGZtdDogIEEgcHJpbnRrKCkg
c3R5bGUgZm9ybWF0IHN0cmluZy4KKyAqCisgKiBQcmludHMgYSB3YXJuaW5nIGxldmVsIG1lc3Nh
Z2UuCisgKi8KKyNkZWZpbmUga3VuaXRfd2Fybih0ZXN0LCBmbXQsIC4uLikgXAorCWt1bml0X3By
aW50ayhLRVJOX1dBUk5JTkcsIHRlc3QsIGZtdCwgIyNfX1ZBX0FSR1NfXykKKworLyoqCisgKiBr
dW5pdF9lcnIoKSAtIFByaW50cyBhbiBFUlJPUiBsZXZlbCBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0
aCBAdGVzdC4KKyAqCisgKiBAdGVzdDogVGhlIHRlc3QgY29udGV4dCBvYmplY3QuCisgKiBAZm10
OiAgQSBwcmludGsoKSBzdHlsZSBmb3JtYXQgc3RyaW5nLgorICoKKyAqIFByaW50cyBhbiBlcnJv
ciBsZXZlbCBtZXNzYWdlLgorICovCisjZGVmaW5lIGt1bml0X2Vycih0ZXN0LCBmbXQsIC4uLikg
XAorCWt1bml0X3ByaW50ayhLRVJOX0VSUiwgdGVzdCwgZm10LCAjI19fVkFfQVJHU19fKQorCisj
ZW5kaWYgLyogX0tVTklUX1RFU1RfSCAqLwpkaWZmIC0tZ2l0IGEva3VuaXQvS2NvbmZpZyBiL2t1
bml0L0tjb25maWcKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4zMzBh
ZTgzNTI3YzIKLS0tIC9kZXYvbnVsbAorKysgYi9rdW5pdC9LY29uZmlnCkBAIC0wLDAgKzEsMTcg
QEAKKyMKKyMgS1VuaXQgYmFzZSBjb25maWd1cmF0aW9uCisjCisKK21lbnUgIktVbml0IHN1cHBv
cnQiCisKK2NvbmZpZyBLVU5JVAorCWJvb2wgIkVuYWJsZSBzdXBwb3J0IGZvciB1bml0IHRlc3Rz
IChLVW5pdCkiCisJaGVscAorCSAgRW5hYmxlcyBzdXBwb3J0IGZvciBrZXJuZWwgdW5pdCB0ZXN0
cyAoS1VuaXQpLCBhIGxpZ2h0d2VpZ2h0IHVuaXQKKwkgIHRlc3RpbmcgYW5kIG1vY2tpbmcgZnJh
bWV3b3JrIGZvciB0aGUgTGludXgga2VybmVsLiBUaGVzZSB0ZXN0cyBhcmUKKwkgIGFibGUgdG8g
YmUgcnVuIGxvY2FsbHkgb24gYSBkZXZlbG9wZXIncyB3b3Jrc3RhdGlvbiB3aXRob3V0IGEgVk0g
b3IKKwkgIHNwZWNpYWwgaGFyZHdhcmUgd2hlbiB1c2luZyBVTUwuIENhbiBhbHNvIGJlIHVzZWQg
b24gbW9zdCBvdGhlcgorCSAgYXJjaGl0ZWN0dXJlcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBs
ZWFzZSBzZWUKKwkgIERvY3VtZW50YXRpb24vZGV2LXRvb2xzL2t1bml0Ly4KKworZW5kbWVudQpk
aWZmIC0tZ2l0IGEva3VuaXQvTWFrZWZpbGUgYi9rdW5pdC9NYWtlZmlsZQpuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjVlZmRjNGRlYTJjMAotLS0gL2Rldi9udWxsCisr
KyBiL2t1bml0L01ha2VmaWxlCkBAIC0wLDAgKzEgQEAKK29iai0kKENPTkZJR19LVU5JVCkgKz0J
CQl0ZXN0Lm8KZGlmZiAtLWdpdCBhL2t1bml0L3Rlc3QuYyBiL2t1bml0L3Rlc3QuYwpuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmQzZGRhMzU5Zjk5YgotLS0gL2Rldi9u
dWxsCisrKyBiL2t1bml0L3Rlc3QuYwpAQCAtMCwwICsxLDE5MSBAQAorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBCYXNlIHVuaXQgdGVzdCAoS1VuaXQpIEFQSS4K
KyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBMTEMuCisgKiBBdXRob3I6IEJyZW5k
YW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KKyAqLworCisjaW5jbHVkZSA8
a3VuaXQvdGVzdC5oPgorI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgorCitzdGF0aWMgdm9pZCBr
dW5pdF9zZXRfZmFpbHVyZShzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJV1JJVEVfT05DRSh0ZXN0
LT5zdWNjZXNzLCBmYWxzZSk7Cit9CisKK3N0YXRpYyBpbnQga3VuaXRfdnByaW50a19lbWl0KGlu
dCBsZXZlbCwgY29uc3QgY2hhciAqZm10LCB2YV9saXN0IGFyZ3MpCit7CisJcmV0dXJuIHZwcmlu
dGtfZW1pdCgwLCBsZXZlbCwgTlVMTCwgMCwgZm10LCBhcmdzKTsKK30KKworc3RhdGljIGludCBr
dW5pdF9wcmludGtfZW1pdChpbnQgbGV2ZWwsIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQoreworCXZh
X2xpc3QgYXJnczsKKwlpbnQgcmV0OworCisJdmFfc3RhcnQoYXJncywgZm10KTsKKwlyZXQgPSBr
dW5pdF92cHJpbnRrX2VtaXQobGV2ZWwsIGZtdCwgYXJncyk7CisJdmFfZW5kKGFyZ3MpOworCisJ
cmV0dXJuIHJldDsKK30KKworc3RhdGljIHZvaWQga3VuaXRfdnByaW50ayhjb25zdCBzdHJ1Y3Qg
a3VuaXQgKnRlc3QsCisJCQkgIGNvbnN0IGNoYXIgKmxldmVsLAorCQkJICBzdHJ1Y3QgdmFfZm9y
bWF0ICp2YWYpCit7CisJa3VuaXRfcHJpbnRrX2VtaXQobGV2ZWxbMV0gLSAnMCcsICJcdCMgJXM6
ICVwViIsIHRlc3QtPm5hbWUsIHZhZik7Cit9CisKK3N0YXRpYyB2b2lkIGt1bml0X3ByaW50X3Rh
cF92ZXJzaW9uKHZvaWQpCit7CisJc3RhdGljIGJvb2wga3VuaXRfaGFzX3ByaW50ZWRfdGFwX3Zl
cnNpb247CisKKwlpZiAoIWt1bml0X2hhc19wcmludGVkX3RhcF92ZXJzaW9uKSB7CisJCWt1bml0
X3ByaW50a19lbWl0KExPR0xFVkVMX0lORk8sICJUQVAgdmVyc2lvbiAxNFxuIik7CisJCWt1bml0
X2hhc19wcmludGVkX3RhcF92ZXJzaW9uID0gdHJ1ZTsKKwl9Cit9CisKK3N0YXRpYyBzaXplX3Qg
a3VuaXRfdGVzdF9jYXNlc19sZW4oc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZXMpCit7CisJ
c3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZTsKKwlzaXplX3QgbGVuID0gMDsKKworCWZvciAo
dGVzdF9jYXNlID0gdGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsgdGVzdF9jYXNlKysp
CisJCWxlbisrOworCisJcmV0dXJuIGxlbjsKK30KKworc3RhdGljIHZvaWQga3VuaXRfcHJpbnRf
c3VidGVzdF9zdGFydChzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlKQoreworCWt1bml0X3ByaW50
X3RhcF92ZXJzaW9uKCk7CisJa3VuaXRfcHJpbnRrX2VtaXQoTE9HTEVWRUxfSU5GTywgIlx0IyBT
dWJ0ZXN0OiAlc1xuIiwgc3VpdGUtPm5hbWUpOworCWt1bml0X3ByaW50a19lbWl0KExPR0xFVkVM
X0lORk8sCisJCQkgICJcdDEuLiV6ZFxuIiwKKwkJCSAga3VuaXRfdGVzdF9jYXNlc19sZW4oc3Vp
dGUtPnRlc3RfY2FzZXMpKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfcHJpbnRfb2tfbm90X29r
KGJvb2wgc2hvdWxkX2luZGVudCwKKwkJCQkgIGJvb2wgaXNfb2ssCisJCQkJICBzaXplX3QgdGVz
dF9udW1iZXIsCisJCQkJICBjb25zdCBjaGFyICpkZXNjcmlwdGlvbikKK3sKKwljb25zdCBjaGFy
ICppbmRlbnQsICpva19ub3Rfb2s7CisKKwlpZiAoc2hvdWxkX2luZGVudCkKKwkJaW5kZW50ID0g
Ilx0IjsKKwllbHNlCisJCWluZGVudCA9ICIiOworCisJaWYgKGlzX29rKQorCQlva19ub3Rfb2sg
PSAib2siOworCWVsc2UKKwkJb2tfbm90X29rID0gIm5vdCBvayI7CisKKwlrdW5pdF9wcmludGtf
ZW1pdChMT0dMRVZFTF9JTkZPLAorCQkJICAiJXMlcyAlemQgLSAlc1xuIiwKKwkJCSAgaW5kZW50
LCBva19ub3Rfb2ssIHRlc3RfbnVtYmVyLCBkZXNjcmlwdGlvbik7Cit9CisKK3N0YXRpYyBib29s
IGt1bml0X3N1aXRlX2hhc19zdWNjZWVkZWQoc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSkKK3sK
Kwljb25zdCBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlOworCisJZm9yICh0ZXN0X2Nhc2Ug
PSBzdWl0ZS0+dGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsgdGVzdF9jYXNlKyspCisJ
CWlmICghdGVzdF9jYXNlLT5zdWNjZXNzKQorCQkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJuIHRy
dWU7Cit9CisKK3N0YXRpYyB2b2lkIGt1bml0X3ByaW50X3N1YnRlc3RfZW5kKHN0cnVjdCBrdW5p
dF9zdWl0ZSAqc3VpdGUpCit7CisJc3RhdGljIHNpemVfdCBrdW5pdF9zdWl0ZV9jb3VudGVyID0g
MTsKKworCWt1bml0X3ByaW50X29rX25vdF9vayhmYWxzZSwKKwkJCSAgICAgIGt1bml0X3N1aXRl
X2hhc19zdWNjZWVkZWQoc3VpdGUpLAorCQkJICAgICAga3VuaXRfc3VpdGVfY291bnRlcisrLAor
CQkJICAgICAgc3VpdGUtPm5hbWUpOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF90ZXN0
X2Nhc2Vfb2tfbm90X29rKHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UsCisJCQkJCSAgICBz
aXplX3QgdGVzdF9udW1iZXIpCit7CisJa3VuaXRfcHJpbnRfb2tfbm90X29rKHRydWUsCisJCQkg
ICAgICB0ZXN0X2Nhc2UtPnN1Y2Nlc3MsCisJCQkgICAgICB0ZXN0X251bWJlciwKKwkJCSAgICAg
IHRlc3RfY2FzZS0+bmFtZSk7Cit9CisKK3ZvaWQga3VuaXRfaW5pdF90ZXN0KHN0cnVjdCBrdW5p
dCAqdGVzdCwgY29uc3QgY2hhciAqbmFtZSkKK3sKKwl0ZXN0LT5uYW1lID0gbmFtZTsKKwl0ZXN0
LT5zdWNjZXNzID0gdHJ1ZTsKK30KKworLyoKKyAqIFBlcmZvcm1zIGFsbCBsb2dpYyB0byBydW4g
YSB0ZXN0IGNhc2UuCisgKi8KK3N0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlKHN0cnVjdCBrdW5p
dF9zdWl0ZSAqc3VpdGUsCisJCQkgICBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlKQorewor
CXN0cnVjdCBrdW5pdCB0ZXN0OworCisJa3VuaXRfaW5pdF90ZXN0KCZ0ZXN0LCB0ZXN0X2Nhc2Ut
Pm5hbWUpOworCisJaWYgKHN1aXRlLT5pbml0KSB7CisJCWludCByZXQ7CisKKwkJcmV0ID0gc3Vp
dGUtPmluaXQoJnRlc3QpOworCQlpZiAocmV0KSB7CisJCQlrdW5pdF9lcnIoJnRlc3QsICJmYWls
ZWQgdG8gaW5pdGlhbGl6ZTogJWRcbiIsIHJldCk7CisJCQlrdW5pdF9zZXRfZmFpbHVyZSgmdGVz
dCk7CisJCQl0ZXN0X2Nhc2UtPnN1Y2Nlc3MgPSB0ZXN0LnN1Y2Nlc3M7CisJCQlyZXR1cm47CisJ
CX0KKwl9CisKKwl0ZXN0X2Nhc2UtPnJ1bl9jYXNlKCZ0ZXN0KTsKKworCWlmIChzdWl0ZS0+ZXhp
dCkKKwkJc3VpdGUtPmV4aXQoJnRlc3QpOworCisJdGVzdF9jYXNlLT5zdWNjZXNzID0gdGVzdC5z
dWNjZXNzOworfQorCitpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9zdWl0ZSAqc3Vp
dGUpCit7CisJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZTsKKwlzaXplX3QgdGVzdF9jYXNl
X2NvdW50ID0gMTsKKworCWt1bml0X3ByaW50X3N1YnRlc3Rfc3RhcnQoc3VpdGUpOworCisJZm9y
ICh0ZXN0X2Nhc2UgPSBzdWl0ZS0+dGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsgdGVz
dF9jYXNlKyspIHsKKwkJa3VuaXRfcnVuX2Nhc2Uoc3VpdGUsIHRlc3RfY2FzZSk7CisJCWt1bml0
X3ByaW50X3Rlc3RfY2FzZV9va19ub3Rfb2sodGVzdF9jYXNlLCB0ZXN0X2Nhc2VfY291bnQrKyk7
CisJfQorCisJa3VuaXRfcHJpbnRfc3VidGVzdF9lbmQoc3VpdGUpOworCisJcmV0dXJuIDA7Cit9
CisKK3ZvaWQga3VuaXRfcHJpbnRrKGNvbnN0IGNoYXIgKmxldmVsLAorCQkgIGNvbnN0IHN0cnVj
dCBrdW5pdCAqdGVzdCwKKwkJICBjb25zdCBjaGFyICpmbXQsIC4uLikKK3sKKwlzdHJ1Y3QgdmFf
Zm9ybWF0IHZhZjsKKwl2YV9saXN0IGFyZ3M7CisKKwl2YV9zdGFydChhcmdzLCBmbXQpOworCisJ
dmFmLmZtdCA9IGZtdDsKKwl2YWYudmEgPSAmYXJnczsKKworCWt1bml0X3ZwcmludGsodGVzdCwg
bGV2ZWwsICZ2YWYpOworCisJdmFfZW5kKGFyZ3MpOworfQotLSAKMi4yMy4wLjE4Ny5nMTdmNWI3
NTU2Yy1nb29nCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
