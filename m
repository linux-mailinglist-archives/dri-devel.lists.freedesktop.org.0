Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BB6FAECA64
	for <lists+dri-devel@lfdr.de>; Fri,  1 Nov 2019 22:42:49 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 52F5C6E0C9;
	Fri,  1 Nov 2019 21:42:44 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pf1-x443.google.com (mail-pf1-x443.google.com
 [IPv6:2607:f8b0:4864:20::443])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 79D0D6E0C9
 for <dri-devel@lists.freedesktop.org>; Fri,  1 Nov 2019 21:42:43 +0000 (UTC)
Received: by mail-pf1-x443.google.com with SMTP id q26so7887888pfn.11
 for <dri-devel@lists.freedesktop.org>; Fri, 01 Nov 2019 14:42:43 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references;
 bh=8kvFWNSWua/p3Aj4VhYv+HpmGZYMCHXXBYOSuHa7CiA=;
 b=sfoSvML39I2ouBT6BavPGHiuRRw6XE6ia5frgvO6TSW+2MHa2VH2RtkHXGGt5ZOrSY
 k0mRguwQOFLvra3AhOdsLySmrb3r9o+R5qUhRdbOBCKFBeHEZUVc2xMnbJYvN40g63c0
 8JJzaVAbIkQ+cy5Hpmxx2vq5pqQtfIcyN4Xtyo2Ar3yFWh147/Qy5o9ltz4HJfd6b4MD
 h/CqRiZL0uEsh2QawCkN4BQ/p2ME57E9+tMLIRclHhVHoputr1K7AMJdHt5bDGciJSJT
 V6Ag+pPh8av3cYXLqM/6clQdX1BGZBmwJlMS3mKhxSKvJuiR1Ct2PNYscUD4sKkvHBjG
 1CXw==
X-Gm-Message-State: APjAAAW6R4Z+i23IhmN2C8p71NCuuJigDYT7+g10jmpFHn+6eSXK4IFV
 3I1LSpsgdUKsJS5kbQfkUOvaSg==
X-Google-Smtp-Source: APXvYqxB04h0xih6Slf953Ac85dLWbEKw40OmvppRm9EGhzfaOiwuMSu2BgqsDE72yCOW+2uqzmvoQ==
X-Received: by 2002:a17:90a:b30d:: with SMTP id
 d13mr18178430pjr.49.1572644562895; 
 Fri, 01 Nov 2019 14:42:42 -0700 (PDT)
Received: from localhost.localdomain ([2601:1c2:680:1319:692:26ff:feda:3a81])
 by smtp.gmail.com with ESMTPSA id
 u36sm8299058pgn.29.2019.11.01.14.42.41
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 01 Nov 2019 14:42:42 -0700 (PDT)
From: John Stultz <john.stultz@linaro.org>
To: lkml <linux-kernel@vger.kernel.org>
Subject: [PATCH v14 1/5] dma-buf: Add dma-buf heaps framework
Date: Fri,  1 Nov 2019 21:42:34 +0000
Message-Id: <20191101214238.78015-2-john.stultz@linaro.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191101214238.78015-1-john.stultz@linaro.org>
References: <20191101214238.78015-1-john.stultz@linaro.org>
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=linaro.org; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references;
 bh=8kvFWNSWua/p3Aj4VhYv+HpmGZYMCHXXBYOSuHa7CiA=;
 b=c86Ogd8JbcvI3YZ50oMXN2gpjUxV4c3MWwv6N4bZI+WQv7V24SCvJ4F09efd4v/B0I
 clCgR57D8m523266DUlAdQs/xrzuohSV5XXXtfaAFsbD6jKEp5uJqIfxSr/F2g60po+d
 y+tmOnBk2KC2l8eJyTV4EW1oBxhXd/bU2KkZaMBWtFLjBLplR7F/Pnr97S5iX6vl/tH1
 NVOK3JuSAULq5bzj/JkxlCeAXZOL+2twxkeAOv9HZ01fcA5WsF3ZBT02BzfesmFcy6bf
 j6sz7Caox06YqFwQI9bH+XGpC09mVO+MYkBAoQqM/6GXTpJveTuBMKGzSbp9aqF+oG5H
 jt3A==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Hillf Danton <hdanton@sina.com>, Sandeep Patil <sspatil@google.com>,
 Sudipto Paul <Sudipto.Paul@arm.com>,
 Vincent Donnefort <Vincent.Donnefort@arm.com>, Chenbo Feng <fengc@google.com>,
 Alistair Strachan <astrachan@google.com>, Liam Mark <lmark@codeaurora.org>,
 "Andrew F. Davis" <afd@ti.com>, Christoph Hellwig <hch@infradead.org>,
 dri-devel@lists.freedesktop.org, Hridya Valsaraju <hridya@google.com>,
 Pratik Patel <pratikp@codeaurora.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogIkFuZHJldyBGLiBEYXZpcyIgPGFmZEB0aS5jb20+CgpUaGlzIGZyYW1ld29yayBhbGxv
d3MgYSB1bmlmaWVkIHVzZXJzcGFjZSBpbnRlcmZhY2UgZm9yIGRtYS1idWYKZXhwb3J0ZXJzLCBh
bGxvd2luZyB1c2VybGFuZCB0byBhbGxvY2F0ZSBzcGVjaWZpYyB0eXBlcyBvZiBtZW1vcnkKZm9y
IHVzZSBpbiBkbWEtYnVmIHNoYXJpbmcuCgpFYWNoIGhlYXAgaXMgZ2l2ZW4gaXRzIG93biBkZXZp
Y2Ugbm9kZSwgd2hpY2ggYSB1c2VyIGNhbiBhbGxvY2F0ZQphIGRtYS1idWYgZmQgZnJvbSB1c2lu
ZyB0aGUgRE1BX0hFQVBfSU9DX0FMTE9DLgoKQWRkaXRpb25hbGx5IHNob3VsZCB0aGUgaW50ZXJm
YWNlIGdyb3cgaW4gdGhlIGZ1dHVyZSwgd2UgaGF2ZSBhCkRNQV9IRUFQX0lPQ19HRVRfRkVBVFVS
RVMgaW9jdGwgd2hpY2ggY2FuIHJldHVybiBmdXR1cmUgZmVhdHVyZQpmbGFncy4KClRoaXMgY29k
ZSBpcyBhbiBldm9sdWl0b24gb2YgdGhlIEFuZHJvaWQgSU9OIGltcGxlbWVudGF0aW9uLAphbmQg
YSBiaWcgdGhhbmtzIGlzIGR1ZSB0byBpdHMgYXV0aG9ycy9tYWludGFpbmVycyBvdmVyIHRpbWUK
Zm9yIHRoZWlyIGVmZm9ydDoKICBSZWJlY2NhIFNjaHVsdHogWmF2aW4sIENvbGluIENyb3NzLCBC
ZW5qYW1pbiBHYWlnbmFyZCwKICBMYXVyYSBBYmJvdHQsIGFuZCBtYW55IG90aGVyIGNvbnRyaWJ1
dG9ycyEKCkNjOiBMYXVyYSBBYmJvdHQgPGxhYmJvdHRAcmVkaGF0LmNvbT4KQ2M6IEJlbmphbWlu
IEdhaWduYXJkIDxiZW5qYW1pbi5nYWlnbmFyZEBsaW5hcm8ub3JnPgpDYzogU3VtaXQgU2Vtd2Fs
IDxzdW1pdC5zZW13YWxAbGluYXJvLm9yZz4KQ2M6IExpYW0gTWFyayA8bG1hcmtAY29kZWF1cm9y
YS5vcmc+CkNjOiBQcmF0aWsgUGF0ZWwgPHByYXRpa3BAY29kZWF1cm9yYS5vcmc+CkNjOiBCcmlh
biBTdGFya2V5IDxCcmlhbi5TdGFya2V5QGFybS5jb20+CkNjOiBWaW5jZW50IERvbm5lZm9ydCA8
VmluY2VudC5Eb25uZWZvcnRAYXJtLmNvbT4KQ2M6IFN1ZGlwdG8gUGF1bCA8U3VkaXB0by5QYXVs
QGFybS5jb20+CkNjOiBBbmRyZXcgRi4gRGF2aXMgPGFmZEB0aS5jb20+CkNjOiBDaHJpc3RvcGgg
SGVsbHdpZyA8aGNoQGluZnJhZGVhZC5vcmc+CkNjOiBDaGVuYm8gRmVuZyA8ZmVuZ2NAZ29vZ2xl
LmNvbT4KQ2M6IEFsaXN0YWlyIFN0cmFjaGFuIDxhc3RyYWNoYW5AZ29vZ2xlLmNvbT4KQ2M6IEhy
aWR5YSBWYWxzYXJhanUgPGhyaWR5YUBnb29nbGUuY29tPgpDYzogU2FuZGVlcCBQYXRpbCA8c3Nw
YXRpbEBnb29nbGUuY29tPgpDYzogSGlsbGYgRGFudG9uIDxoZGFudG9uQHNpbmEuY29tPgpDYzog
RGF2ZSBBaXJsaWUgPGFpcmxpZWRAZ21haWwuY29tPgpDYzogZHJpLWRldmVsQGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpTaWduZWQtb2ZmLWJ5OiBBbmRyZXcgRi4gRGF2aXMgPGFmZEB0aS5jb20+ClNp
Z25lZC1vZmYtYnk6IEpvaG4gU3R1bHR6IDxqb2huLnN0dWx0ekBsaW5hcm8ub3JnPgotLS0KdjI6
CiogRm9sZGVkIGRvd24gZml4ZXMgSSBoYWQgcHJldmlvdXNseSBzaGFyZWQgaW4gaW1wbGVtZW50
aW5nCiAgaGVhcHMKKiBNYWtlIGZsYWdzIGEgdTY0IChTdWdnZXN0ZWQgYnkgTGF1cmEpCiogQWRk
IFBBR0VfQUxJR04oKSBmaXggdG8gdGhlIGNvcmUgYWxsb2MgZnVuY2l0b24KKiBJT0NUTCBmaXh1
cHMgc3VnZ2VzdGVkIGJ5IEJyaWFuCiogQWRkZWQgZml4ZXMgc3VnZ2VzdGVkIGJ5IEJlbmphbWlu
CiogUmVtb3ZlZCBjb3JlIHN0YXRzIG1nbXQsIGFzIHRoYXQgc2hvdWxkIGJlIGltcGxlbWVudGVk
IGJ5CiAgcGVyLWhlYXAgY29kZQoqIENoYW5nZWQgYWxsb2MgdG8gcmV0dXJuIGEgZG1hLWJ1ZiBm
ZCwgcmF0aGVyIHRoYW4gYSBidWZmZXIKICAoYXMgaXQgc2ltcGxpZmllcyBlcnJvciBoYW5kbGlu
ZykKdjM6CiogUmVtb3ZlZCBzY2FyZS1xdW90ZXMgaW4gTUFJTlRBSU5FUlMgZW1haWwgYWRkcmVz
cwoqIEdldCByaWQgb2YgLnJlbGVhc2UgZnVuY3Rpb24gYXMgaXQgZGlkbid0IGRvIGFueXRoaW5n
IChmcm9tCiAgQ2hyaXN0b3BoKQoqIFJlbmFtZWQgZmlscCB0byBmaWxlIChzdWdnZXN0ZWQgYnkg
Q2hyaXN0b3BoKQoqIFNwbGl0IG91dCBpb2N0bCBoYW5kbGluZyB0byBzZXBhcmF0ZSBmdW5jdGlv
biAoc3VnZ2VzdGVkIGJ5CiAgQ2hyaXN0b3BoKQoqIEFkZCBjb21tZW50IGRvY3VtZW50aW5nIFBB
R0VfQUxJR04gdXNhZ2UgKHN1Z2dlc3RlZCBieSBCcmlhbikKKiBTd2l0Y2ggZnJvbSBpZHIgdG8g
WGFycmF5IChzdWdnZXN0ZWQgYnkgQnJpYW4pCiogRml4dXAgY2RldiBjcmVhdGlvbiAoc3VnZ2Vz
dGVkIGJ5IEJyaWFuKQoqIEF2b2lkIEVYUE9SVF9TWU1CT0wgdW50aWwgd2UgZmluYWxpemUgbW9k
dWxlcyAoc3VnZ2VzdGVkIGJ5CiAgQnJpYW4pCiogTWFrZSBzdHJ1Y3QgZG1hX2hlYXAgaW50ZXJu
YWwgb25seSAoZm9sZGVkIGluIGZyb20gQW5kcmV3KQoqIFNtYWxsIGNsZWFudXBzIHN1Z2dlc3Rl
ZCBieSBHcmVnS0gKKiBQcm92aWRlIGNsYXNzLT5kZXZub2RlIGNhbGxiYWNrIHRvIGdldCBjb25z
aXN0ZW50IC9kZXYvCiAgc3ViZGlyZWN0b3J5IG5hbWluZyAoU3VnZ2VzdGVkIGJ5IEJqb3JuKQp2
NDoKKiBGb2xkZWQgZG93biBkbWEtaGVhcC5oIGNoYW5nZSB0aGF0IHdhcyBpbiBhIGZvbGxvd2lu
ZyBwYXRjaAoqIEFkZGVkIGZkX2ZsYWdzIGVudHJ5IHRvIGFsbG9jYXRpb24gc3RydWN0dXJlIGFu
ZCBwYXNzIGl0CiAgdGhyb3VnaCB0byBoZWFwIGNvZGUgZm9yIHVzZSBvbiBkbWEtYnVmIGZkIGNy
ZWF0aW9uIChzdWdnZXN0ZWQKICBieSBCZW5qYW1pbikKdjU6CiogTWlub3IgY2xlYW51cHMKdjY6
CiogSW1wcm92ZWQgZXJyb3IgcGF0aCBoYW5kbGluZywgbWlub3Igd2hpdGVzcGFjZSBmaXhlcywg
Ym90aAogIHN1Z2dlc3RlZCBieSBCcmlhbgp2NzoKKiBMb25nZXIgS2NvbmZpZyBkZXNjcmlwdGlv
biB0byBxdWlldCBjaGVja3BhdGNoIHdhcm5pbmdzCiogUmUtYWRkIGNvbXBhdF9pb2N0bCBiaXRz
IChIcmlkeWEgbm90aWNlZCAzMmJpdCB1c2VybGFuZCB3YXNuJ3QKICB3b3JraW5nKQp2ODoKKiBN
YWtlIHN0cnVjdCBkbWFfaGVhcF9vcHMgY29uc3RzIChTdWdnZXN0ZWQgYnkgQ2hyaXN0b3BoKQoq
IENoZWNrcGF0Y2ggd2hpdGVzcGFjZSBmaXh1cHMKdjk6CiogTWlub3IgY2xlYW51cHMgc3VnZ2Vz
dGVkIGJ5IEJyaWFuIFN0YXJrZXkKKiBSZW5hbWUgZG1hX2hlYXBfZ2V0X2RhdGEtPmRtYV9oZWFw
X2dldF9kcnZkYXRhIHN1Z2dlc3RlZAogIGJ5IEhpbGYgRGFudG9uCnYxMToKKiBLY29uZmlnIHRl
eHQgaW1wcm92ZW1lbnRzIHN1Z2dlc3RlZCBieSBSYW5keSBEdW5sYXAKdjEyOgoqIEFkZCBsb2dp
YyB0byBwcmV2ZW50IGR1cGxpY2F0ZWx5IG5hbWVkIGhlYXBzIGJlaW5nIGFkZGVkCiogQWRkIHN5
bWJvbCBleHBvcnRzIGZvciBoZWFwcyBhcyBtb2R1bGVzCnYxMzoKKiBSZS1yZW1vdmUgc3ltYm9s
IGV4cG9ydHMgcGVyIGRpc2N1c3Npb24gdy8gQnJpYW4uIFdpbGwKICByZXN1Ym1pdCBpbiBhIHNl
cGFydGUgcGF0Y2ggZm9yIHJldmlldwp2MTQ6CiogUmV3b3JrZWQgaW9jdGwgaGFuZGxlciB0byB6
ZXJvIGZpbGwgYW55IGRpZmZlcmVuY2UgaW4KICBzdHJ1Y3R1cmUgc2l6ZSwgc2ltaWxhciB0byB3
aGF0IHRoZSBEUk0gY29yZSBkb2VzLCBhcwogIHN1Z2dlc3RlZCBieSBEYXZlIEFpcmxpZQoqIFJl
bW92ZWQgbm93IHVubmVjZXNzYXJ5IHJlc2VydmVkIGJpdHMgaW4gYWxsb2NhdGVfZGF0YQoqIEFk
ZGVkIGdldF9mZWF0dXJlcyBpb2N0bCBhcyBzdWdnZXN0ZWQgYnkgRGF2ZSBBaXJsaWUKKiBSZW1v
dmVkIHByX3dhcm5fb25jZSBtZXNzYWdlcyBhcyByZXF1ZXN0ZWQgYnkgRGF2ZQogIEFpcmxpZQot
LS0KIE1BSU5UQUlORVJTICAgICAgICAgICAgICAgICAgIHwgIDE4ICsrCiBkcml2ZXJzL2RtYS1i
dWYvS2NvbmZpZyAgICAgICB8ICAgOSArCiBkcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUgICAgICB8
ICAgMSArCiBkcml2ZXJzL2RtYS1idWYvZG1hLWhlYXAuYyAgICB8IDMxMyArKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L2RtYS1oZWFwLmggICAgICB8ICA1
OSArKysrKysrCiBpbmNsdWRlL3VhcGkvbGludXgvZG1hLWhlYXAuaCB8ICA3NyArKysrKysrKysK
IDYgZmlsZXMgY2hhbmdlZCwgNDc3IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBk
cml2ZXJzL2RtYS1idWYvZG1hLWhlYXAuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGlu
dXgvZG1hLWhlYXAuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvdWFwaS9saW51eC9kbWEt
aGVhcC5oCgpkaWZmIC0tZ2l0IGEvTUFJTlRBSU5FUlMgYi9NQUlOVEFJTkVSUwppbmRleCBjNmMz
NGQwNGNlOTUuLjc3YzNlOTkzZmIyZiAxMDA2NDQKLS0tIGEvTUFJTlRBSU5FUlMKKysrIGIvTUFJ
TlRBSU5FUlMKQEAgLTQ5NDAsNiArNDk0MCwyNCBAQCBGOglpbmNsdWRlL2xpbnV4LypmZW5jZS5o
CiBGOglEb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZG1hLWJ1Zi5yc3QKIFQ6CWdpdCBnaXQ6Ly9h
bm9uZ2l0LmZyZWVkZXNrdG9wLm9yZy9kcm0vZHJtLW1pc2MKIAorRE1BLUJVRiBIRUFQUyBGUkFN
RVdPUksKK006CVN1bWl0IFNlbXdhbCA8c3VtaXQuc2Vtd2FsQGxpbmFyby5vcmc+CitSOglBbmRy
ZXcgRi4gRGF2aXMgPGFmZEB0aS5jb20+CitSOglCZW5qYW1pbiBHYWlnbmFyZCA8YmVuamFtaW4u
Z2FpZ25hcmRAbGluYXJvLm9yZz4KK1I6CUxpYW0gTWFyayA8bG1hcmtAY29kZWF1cm9yYS5vcmc+
CitSOglMYXVyYSBBYmJvdHQgPGxhYmJvdHRAcmVkaGF0LmNvbT4KK1I6CUJyaWFuIFN0YXJrZXkg
PEJyaWFuLlN0YXJrZXlAYXJtLmNvbT4KK1I6CUpvaG4gU3R1bHR6IDxqb2huLnN0dWx0ekBsaW5h
cm8ub3JnPgorUzoJTWFpbnRhaW5lZAorTDoJbGludXgtbWVkaWFAdmdlci5rZXJuZWwub3JnCitM
OglkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCitMOglsaW5hcm8tbW0tc2lnQGxpc3Rz
LmxpbmFyby5vcmcgKG1vZGVyYXRlZCBmb3Igbm9uLXN1YnNjcmliZXJzKQorRjoJaW5jbHVkZS91
YXBpL2xpbnV4L2RtYS1oZWFwLmgKK0Y6CWluY2x1ZGUvbGludXgvZG1hLWhlYXAuaAorRjoJZHJp
dmVycy9kbWEtYnVmL2RtYS1oZWFwLmMKK0Y6CWRyaXZlcnMvZG1hLWJ1Zi9oZWFwcy8qCitUOgln
aXQgZ2l0Oi8vYW5vbmdpdC5mcmVlZGVza3RvcC5vcmcvZHJtL2RybS1taXNjCisKIERNQSBHRU5F
UklDIE9GRkxPQUQgRU5HSU5FIFNVQlNZU1RFTQogTToJVmlub2QgS291bCA8dmtvdWxAa2VybmVs
Lm9yZz4KIEw6CWRtYWVuZ2luZUB2Z2VyLmtlcm5lbC5vcmcKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
ZG1hLWJ1Zi9LY29uZmlnIGIvZHJpdmVycy9kbWEtYnVmL0tjb25maWcKaW5kZXggYTIzYjY3NTJk
MTFhLi5iZmZhNThmYzNlNmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCisr
KyBiL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCkBAIC00NCw0ICs0NCwxMyBAQCBjb25maWcgRE1B
QlVGX1NFTEZURVNUUwogCWRlZmF1bHQgbgogCWRlcGVuZHMgb24gRE1BX1NIQVJFRF9CVUZGRVIK
IAorbWVudWNvbmZpZyBETUFCVUZfSEVBUFMKKwlib29sICJETUEtQlVGIFVzZXJsYW5kIE1lbW9y
eSBIZWFwcyIKKwlzZWxlY3QgRE1BX1NIQVJFRF9CVUZGRVIKKwloZWxwCisJICBDaG9vc2UgdGhp
cyBvcHRpb24gdG8gZW5hYmxlIHRoZSBETUEtQlVGIHVzZXJsYW5kIG1lbW9yeSBoZWFwcy4KKwkg
IFRoaXMgb3B0aW9ucyBjcmVhdGVzIHBlciBoZWFwIGNoYXJkZXZzIGluIC9kZXYvZG1hX2hlYXAv
IHdoaWNoCisJICBhbGxvd3MgdXNlcnNwYWNlIHRvIGFsbG9jYXRlIGRtYS1idWZzIHRoYXQgY2Fu
IGJlIHNoYXJlZAorCSAgYmV0d2VlbiBkcml2ZXJzLgorCiBlbmRtZW51CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2RtYS1idWYvTWFrZWZpbGUgYi9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKaW5kZXgg
MDM0NzlkYTA2NDIyLi5jYWVlNWViM2QzNTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9N
YWtlZmlsZQorKysgYi9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKQEAgLTEsNiArMSw3IEBACiAj
IFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKIG9iai15IDo9IGRtYS1idWYu
byBkbWEtZmVuY2UubyBkbWEtZmVuY2UtYXJyYXkubyBkbWEtZmVuY2UtY2hhaW4ubyBcCiAJIGRt
YS1yZXN2Lm8gc2Vxbm8tZmVuY2Uubworb2JqLSQoQ09ORklHX0RNQUJVRl9IRUFQUykJKz0gZG1h
LWhlYXAubwogb2JqLSQoQ09ORklHX1NZTkNfRklMRSkJCSs9IHN5bmNfZmlsZS5vCiBvYmotJChD
T05GSUdfU1dfU1lOQykJCSs9IHN3X3N5bmMubyBzeW5jX2RlYnVnLm8KIG9iai0kKENPTkZJR19V
RE1BQlVGKQkJKz0gdWRtYWJ1Zi5vCmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLWhl
YXAuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtaGVhcC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAwMC4uN2NkZDcxNzllNWZhCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVy
cy9kbWEtYnVmL2RtYS1oZWFwLmMKQEAgLTAsMCArMSwzMTMgQEAKKy8vIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICogRnJhbWV3b3JrIGZvciB1c2Vyc3BhY2UgRE1BLUJV
RiBhbGxvY2F0aW9ucworICoKKyAqIENvcHlyaWdodCAoQykgMjAxMSBHb29nbGUsIEluYy4KKyAq
IENvcHlyaWdodCAoQykgMjAxOSBMaW5hcm8gTHRkLgorICovCisKKyNpbmNsdWRlIDxsaW51eC9j
ZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvZGVidWdmcy5oPgorI2luY2x1ZGUgPGxpbnV4L2Rldmlj
ZS5oPgorI2luY2x1ZGUgPGxpbnV4L2RtYS1idWYuaD4KKyNpbmNsdWRlIDxsaW51eC9lcnIuaD4K
KyNpbmNsdWRlIDxsaW51eC94YXJyYXkuaD4KKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5j
bHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4KKyNpbmNsdWRl
IDxsaW51eC9zeXNjYWxscy5oPgorI2luY2x1ZGUgPGxpbnV4L2RtYS1oZWFwLmg+CisjaW5jbHVk
ZSA8dWFwaS9saW51eC9kbWEtaGVhcC5oPgorCisjZGVmaW5lIERFVk5BTUUgImRtYV9oZWFwIgor
CisjZGVmaW5lIE5VTV9IRUFQX01JTk9SUyAxMjgKKworLyoqCisgKiBzdHJ1Y3QgZG1hX2hlYXAg
LSByZXByZXNlbnRzIGEgZG1hYnVmIGhlYXAgaW4gdGhlIHN5c3RlbQorICogQG5hbWU6CQl1c2Vk
IGZvciBkZWJ1Z2dpbmcvZGV2aWNlLW5vZGUgbmFtZQorICogQG9wczoJCW9wcyBzdHJ1Y3QgZm9y
IHRoaXMgaGVhcAorICogQG1pbm9yCQltaW5vciBudW1iZXIgb2YgdGhpcyBoZWFwIGRldmljZQor
ICogQGhlYXBfZGV2dAkJaGVhcCBkZXZpY2Ugbm9kZQorICogQGhlYXBfY2RldgkJaGVhcCBjaGFy
IGRldmljZQorICoKKyAqIFJlcHJlc2VudHMgYSBoZWFwIG9mIG1lbW9yeSBmcm9tIHdoaWNoIGJ1
ZmZlcnMgY2FuIGJlIG1hZGUuCisgKi8KK3N0cnVjdCBkbWFfaGVhcCB7CisJY29uc3QgY2hhciAq
bmFtZTsKKwljb25zdCBzdHJ1Y3QgZG1hX2hlYXBfb3BzICpvcHM7CisJdm9pZCAqcHJpdjsKKwl1
bnNpZ25lZCBpbnQgbWlub3I7CisJZGV2X3QgaGVhcF9kZXZ0OworCXN0cnVjdCBsaXN0X2hlYWQg
bGlzdDsKKwlzdHJ1Y3QgY2RldiBoZWFwX2NkZXY7Cit9OworCitzdGF0aWMgTElTVF9IRUFEKGhl
YXBfbGlzdCk7CitzdGF0aWMgREVGSU5FX01VVEVYKGhlYXBfbGlzdF9sb2NrKTsKK3N0YXRpYyBk
ZXZfdCBkbWFfaGVhcF9kZXZ0Oworc3RhdGljIHN0cnVjdCBjbGFzcyAqZG1hX2hlYXBfY2xhc3M7
CitzdGF0aWMgREVGSU5FX1hBUlJBWV9BTExPQyhkbWFfaGVhcF9taW5vcnMpOworCitzdGF0aWMg
aW50IGRtYV9oZWFwX2J1ZmZlcl9hbGxvYyhzdHJ1Y3QgZG1hX2hlYXAgKmhlYXAsIHNpemVfdCBs
ZW4sCisJCQkJIHVuc2lnbmVkIGludCBmZF9mbGFncywKKwkJCQkgdW5zaWduZWQgaW50IGhlYXBf
ZmxhZ3MpCit7CisJLyoKKwkgKiBBbGxvY2F0aW9ucyBmcm9tIGFsbCBoZWFwcyBoYXZlIHRvIGJl
Z2luCisJICogYW5kIGVuZCBvbiBwYWdlIGJvdW5kYXJpZXMuCisJICovCisJbGVuID0gUEFHRV9B
TElHTihsZW4pOworCWlmICghbGVuKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXJldHVybiBoZWFw
LT5vcHMtPmFsbG9jYXRlKGhlYXAsIGxlbiwgZmRfZmxhZ3MsIGhlYXBfZmxhZ3MpOworfQorCitz
dGF0aWMgaW50IGRtYV9oZWFwX29wZW4oc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUg
KmZpbGUpCit7CisJc3RydWN0IGRtYV9oZWFwICpoZWFwOworCisJaGVhcCA9IHhhX2xvYWQoJmRt
YV9oZWFwX21pbm9ycywgaW1pbm9yKGlub2RlKSk7CisJaWYgKCFoZWFwKSB7CisJCXByX2Vycigi
ZG1hX2hlYXA6IG1pbm9yICVkIHVua25vd24uXG4iLCBpbWlub3IoaW5vZGUpKTsKKwkJcmV0dXJu
IC1FTk9ERVY7CisJfQorCisJLyogaW5zdGFuY2UgZGF0YSBhcyBjb250ZXh0ICovCisJZmlsZS0+
cHJpdmF0ZV9kYXRhID0gaGVhcDsKKwlub25zZWVrYWJsZV9vcGVuKGlub2RlLCBmaWxlKTsKKwor
CXJldHVybiAwOworfQorCitzdGF0aWMgbG9uZyBkbWFfaGVhcF9pb2N0bF9nZXRfZmVhdHVyZXMo
c3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGRtYV9oZWFwX2dldF9m
ZWF0dXJlc19kYXRhICpoZWFwX2ZlYXR1cmVzID0gZGF0YTsKKworCS8qIG5vdGhpbmcgc2hvdWxk
IGJlIHBhc3NlZCBpbiAqLworCWlmIChoZWFwX2ZlYXR1cmVzLT5mZWF0dXJlcykKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwloZWFwX2ZlYXR1cmVzLT5mZWF0dXJlcyA9IERNQV9IRUFQX1NVUFBPUlRF
RF9GRUFUVVJFUzsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGxvbmcgZG1hX2hlYXBfaW9jdGxf
YWxsb2NhdGUoc3RydWN0IGZpbGUgKmZpbGUsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGRtYV9o
ZWFwX2FsbG9jYXRpb25fZGF0YSAqaGVhcF9hbGxvY2F0aW9uID0gZGF0YTsKKwlzdHJ1Y3QgZG1h
X2hlYXAgKmhlYXAgPSBmaWxlLT5wcml2YXRlX2RhdGE7CisJaW50IGZkOworCisJaWYgKGhlYXBf
YWxsb2NhdGlvbi0+ZmQpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKGhlYXBfYWxsb2NhdGlv
bi0+ZmRfZmxhZ3MgJiB+RE1BX0hFQVBfVkFMSURfRkRfRkxBR1MpCisJCXJldHVybiAtRUlOVkFM
OworCisJaWYgKGhlYXBfYWxsb2NhdGlvbi0+aGVhcF9mbGFncyAmIH5ETUFfSEVBUF9WQUxJRF9I
RUFQX0ZMQUdTKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWZkID0gZG1hX2hlYXBfYnVmZmVyX2Fs
bG9jKGhlYXAsIGhlYXBfYWxsb2NhdGlvbi0+bGVuLAorCQkJCSAgIGhlYXBfYWxsb2NhdGlvbi0+
ZmRfZmxhZ3MsCisJCQkJICAgaGVhcF9hbGxvY2F0aW9uLT5oZWFwX2ZsYWdzKTsKKwlpZiAoZmQg
PCAwKQorCQlyZXR1cm4gZmQ7CisKKwloZWFwX2FsbG9jYXRpb24tPmZkID0gZmQ7CisKKwlyZXR1
cm4gMDsKK30KKwordW5zaWduZWQgaW50IGRtYV9oZWFwX2lvY3RsX2NtZHNbXSA9IHsKKwlETUFf
SEVBUF9JT0NfR0VUX0ZFQVRVUkVTLAorCURNQV9IRUFQX0lPQ19BTExPQywKK307CisKK3N0YXRp
YyBsb25nIGRtYV9oZWFwX2lvY3RsKHN0cnVjdCBmaWxlICpmaWxlLCB1bnNpZ25lZCBpbnQgdWNt
ZCwKKwkJCSAgIHVuc2lnbmVkIGxvbmcgYXJnKQoreworCWNoYXIgc3RhY2tfa2RhdGFbMTI4XTsK
KwljaGFyICprZGF0YSA9IHN0YWNrX2tkYXRhOworCXVuc2lnbmVkIGludCBrY21kOworCXVuc2ln
bmVkIGludCBpbl9zaXplLCBvdXRfc2l6ZSwgZHJ2X3NpemUsIGtzaXplOworCWludCBuciA9IF9J
T0NfTlIodWNtZCk7CisJaW50IHJldCA9IDA7CisKKwlpZiAobnIgPj0gQVJSQVlfU0laRShkbWFf
aGVhcF9pb2N0bF9jbWRzKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwkvKiBHZXQgdGhlIGtlcm5l
bCBpb2N0bCBjbWQgdGhhdCBtYXRjaGVzICovCisJa2NtZCA9IGRtYV9oZWFwX2lvY3RsX2NtZHNb
bnJdOworCisJLyogRmlndXJlIG91dCB0aGUgZGVsdGEgYmV0d2VlbiB1c2VyIGNtZCBzaXplIGFu
ZCBrZXJuZWwgY21kIHNpemUgKi8KKwlkcnZfc2l6ZSA9IF9JT0NfU0laRShrY21kKTsKKwlvdXRf
c2l6ZSA9IF9JT0NfU0laRSh1Y21kKTsKKwlpbl9zaXplID0gb3V0X3NpemU7CisJaWYgKCh1Y21k
ICYga2NtZCAmIElPQ19JTikgPT0gMCkKKwkJaW5fc2l6ZSA9IDA7CisJaWYgKCh1Y21kICYga2Nt
ZCAmIElPQ19PVVQpID09IDApCisJCW91dF9zaXplID0gMDsKKwlrc2l6ZSA9IG1heChtYXgoaW5f
c2l6ZSwgb3V0X3NpemUpLCBkcnZfc2l6ZSk7CisKKwkvKiBJZiBuZWNlc3NhcnksIGFsbG9jYXRl
IGJ1ZmZlciBmb3IgaW9jdGwgYXJndW1lbnQgKi8KKwlpZiAoa3NpemUgPiBzaXplb2Yoc3RhY2tf
a2RhdGEpKSB7CisJCWtkYXRhID0ga21hbGxvYyhrc2l6ZSwgR0ZQX0tFUk5FTCk7CisJCWlmICgh
a2RhdGEpCisJCQlyZXR1cm4gLUVOT01FTTsKKwl9CisKKwlpZiAoY29weV9mcm9tX3VzZXIoa2Rh
dGEsICh2b2lkIF9fdXNlciAqKWFyZywgaW5fc2l6ZSkgIT0gMCkgeworCQlyZXQgPSAtRUZBVUxU
OworCQlnb3RvIGVycjsKKwl9CisKKwkvKiB6ZXJvIG91dCBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVu
IHRoZSBrZXJuZWwvdXNlciBzdHJ1Y3R1cmUgc2l6ZSAqLworCWlmIChrc2l6ZSA+IGluX3NpemUp
CisJCW1lbXNldChrZGF0YSArIGluX3NpemUsIDAsIGtzaXplIC0gaW5fc2l6ZSk7CisKKwlzd2l0
Y2ggKGtjbWQpIHsKKwljYXNlIERNQV9IRUFQX0lPQ19HRVRfRkVBVFVSRVM6CisJCXJldCA9IGRt
YV9oZWFwX2lvY3RsX2dldF9mZWF0dXJlcyhmaWxlLCBrZGF0YSk7CisJCWJyZWFrOworCWNhc2Ug
RE1BX0hFQVBfSU9DX0FMTE9DOgorCQlyZXQgPSBkbWFfaGVhcF9pb2N0bF9hbGxvY2F0ZShmaWxl
LCBrZGF0YSk7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldHVybiAtRU5PVFRZOworCX0KKwor
CWlmIChjb3B5X3RvX3VzZXIoKHZvaWQgX191c2VyICopYXJnLCBrZGF0YSwgb3V0X3NpemUpICE9
IDApCisJCXJldCA9IC1FRkFVTFQ7CitlcnI6CisJaWYgKGtkYXRhICE9IHN0YWNrX2tkYXRhKQor
CQlrZnJlZShrZGF0YSk7CisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBm
aWxlX29wZXJhdGlvbnMgZG1hX2hlYXBfZm9wcyA9IHsKKwkub3duZXIgICAgICAgICAgPSBUSElT
X01PRFVMRSwKKwkub3BlbgkJPSBkbWFfaGVhcF9vcGVuLAorCS51bmxvY2tlZF9pb2N0bCA9IGRt
YV9oZWFwX2lvY3RsLAorI2lmZGVmIENPTkZJR19DT01QQVQKKwkuY29tcGF0X2lvY3RsCT0gZG1h
X2hlYXBfaW9jdGwsCisjZW5kaWYKK307CisKKy8qKgorICogZG1hX2hlYXBfZ2V0X2RydmRhdGEo
KSAtIGdldCBwZXItc3ViZHJpdmVyIGRhdGEgZm9yIHRoZSBoZWFwCisgKiBAaGVhcDogRE1BLUhl
YXAgdG8gcmV0cmlldmUgcHJpdmF0ZSBkYXRhIGZvcgorICoKKyAqIFJldHVybnM6CisgKiBUaGUg
cGVyLXN1YmRyaXZlciBkYXRhIGZvciB0aGUgaGVhcC4KKyAqLwordm9pZCAqZG1hX2hlYXBfZ2V0
X2RydmRhdGEoc3RydWN0IGRtYV9oZWFwICpoZWFwKQoreworCXJldHVybiBoZWFwLT5wcml2Owor
fQorCitzdHJ1Y3QgZG1hX2hlYXAgKmRtYV9oZWFwX2FkZChjb25zdCBzdHJ1Y3QgZG1hX2hlYXBf
ZXhwb3J0X2luZm8gKmV4cF9pbmZvKQoreworCXN0cnVjdCBkbWFfaGVhcCAqaGVhcCwgKmgsICpl
cnJfcmV0OworCXN0cnVjdCBkZXZpY2UgKmRldl9yZXQ7CisJaW50IHJldDsKKworCWlmICghZXhw
X2luZm8tPm5hbWUgfHwgIXN0cmNtcChleHBfaW5mby0+bmFtZSwgIiIpKSB7CisJCXByX2Vycigi
ZG1hX2hlYXA6IENhbm5vdCBhZGQgaGVhcCB3aXRob3V0IGEgbmFtZVxuIik7CisJCXJldHVybiBF
UlJfUFRSKC1FSU5WQUwpOworCX0KKworCWlmICghZXhwX2luZm8tPm9wcyB8fCAhZXhwX2luZm8t
Pm9wcy0+YWxsb2NhdGUpIHsKKwkJcHJfZXJyKCJkbWFfaGVhcDogQ2Fubm90IGFkZCBoZWFwIHdp
dGggaW52YWxpZCBvcHMgc3RydWN0XG4iKTsKKwkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CisJ
fQorCisJLyogY2hlY2sgdGhlIG5hbWUgaXMgdW5pcXVlICovCisJbXV0ZXhfbG9jaygmaGVhcF9s
aXN0X2xvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnkoaCwgJmhlYXBfbGlzdCwgbGlzdCkgewor
CQlpZiAoIXN0cmNtcChoLT5uYW1lLCBleHBfaW5mby0+bmFtZSkpIHsKKwkJCW11dGV4X3VubG9j
aygmaGVhcF9saXN0X2xvY2spOworCQkJcHJfZXJyKCJkbWFfaGVhcDogQWxyZWFkeSByZWdpc3Rl
cmVkIGhlYXAgbmFtZWQgJXNcbiIsCisJCQkgICAgICAgZXhwX2luZm8tPm5hbWUpOworCQkJcmV0
dXJuIEVSUl9QVFIoLUVJTlZBTCk7CisJCX0KKwl9CisJbXV0ZXhfdW5sb2NrKCZoZWFwX2xpc3Rf
bG9jayk7CisKKwloZWFwID0ga3phbGxvYyhzaXplb2YoKmhlYXApLCBHRlBfS0VSTkVMKTsKKwlp
ZiAoIWhlYXApCisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOworCisJaGVhcC0+bmFtZSA9IGV4
cF9pbmZvLT5uYW1lOworCWhlYXAtPm9wcyA9IGV4cF9pbmZvLT5vcHM7CisJaGVhcC0+cHJpdiA9
IGV4cF9pbmZvLT5wcml2OworCisJLyogRmluZCB1bnVzZWQgbWlub3IgbnVtYmVyICovCisJcmV0
ID0geGFfYWxsb2MoJmRtYV9oZWFwX21pbm9ycywgJmhlYXAtPm1pbm9yLCBoZWFwLAorCQkgICAg
ICAgWEFfTElNSVQoMCwgTlVNX0hFQVBfTUlOT1JTIC0gMSksIEdGUF9LRVJORUwpOworCWlmIChy
ZXQgPCAwKSB7CisJCXByX2VycigiZG1hX2hlYXA6IFVuYWJsZSB0byBnZXQgbWlub3IgbnVtYmVy
IGZvciBoZWFwXG4iKTsKKwkJZXJyX3JldCA9IEVSUl9QVFIocmV0KTsKKwkJZ290byBlcnIwOwor
CX0KKworCS8qIENyZWF0ZSBkZXZpY2UgKi8KKwloZWFwLT5oZWFwX2RldnQgPSBNS0RFVihNQUpP
UihkbWFfaGVhcF9kZXZ0KSwgaGVhcC0+bWlub3IpOworCisJY2Rldl9pbml0KCZoZWFwLT5oZWFw
X2NkZXYsICZkbWFfaGVhcF9mb3BzKTsKKwlyZXQgPSBjZGV2X2FkZCgmaGVhcC0+aGVhcF9jZGV2
LCBoZWFwLT5oZWFwX2RldnQsIDEpOworCWlmIChyZXQgPCAwKSB7CisJCXByX2VycigiZG1hX2hl
YXA6IFVuYWJsZSB0byBhZGQgY2hhciBkZXZpY2VcbiIpOworCQllcnJfcmV0ID0gRVJSX1BUUihy
ZXQpOworCQlnb3RvIGVycjE7CisJfQorCisJZGV2X3JldCA9IGRldmljZV9jcmVhdGUoZG1hX2hl
YXBfY2xhc3MsCisJCQkJTlVMTCwKKwkJCQloZWFwLT5oZWFwX2RldnQsCisJCQkJTlVMTCwKKwkJ
CQloZWFwLT5uYW1lKTsKKwlpZiAoSVNfRVJSKGRldl9yZXQpKSB7CisJCXByX2VycigiZG1hX2hl
YXA6IFVuYWJsZSB0byBjcmVhdGUgZGV2aWNlXG4iKTsKKwkJZXJyX3JldCA9IEVSUl9DQVNUKGRl
dl9yZXQpOworCQlnb3RvIGVycjI7CisJfQorCS8qIEFkZCBoZWFwIHRvIHRoZSBsaXN0ICovCisJ
bXV0ZXhfbG9jaygmaGVhcF9saXN0X2xvY2spOworCWxpc3RfYWRkKCZoZWFwLT5saXN0LCAmaGVh
cF9saXN0KTsKKwltdXRleF91bmxvY2soJmhlYXBfbGlzdF9sb2NrKTsKKworCXJldHVybiBoZWFw
OworCitlcnIyOgorCWNkZXZfZGVsKCZoZWFwLT5oZWFwX2NkZXYpOworZXJyMToKKwl4YV9lcmFz
ZSgmZG1hX2hlYXBfbWlub3JzLCBoZWFwLT5taW5vcik7CitlcnIwOgorCWtmcmVlKGhlYXApOwor
CXJldHVybiBlcnJfcmV0OworfQorCitzdGF0aWMgY2hhciAqZG1hX2hlYXBfZGV2bm9kZShzdHJ1
Y3QgZGV2aWNlICpkZXYsIHVtb2RlX3QgKm1vZGUpCit7CisJcmV0dXJuIGthc3ByaW50ZihHRlBf
S0VSTkVMLCAiZG1hX2hlYXAvJXMiLCBkZXZfbmFtZShkZXYpKTsKK30KKworc3RhdGljIGludCBk
bWFfaGVhcF9pbml0KHZvaWQpCit7CisJaW50IHJldDsKKworCXJldCA9IGFsbG9jX2NocmRldl9y
ZWdpb24oJmRtYV9oZWFwX2RldnQsIDAsIE5VTV9IRUFQX01JTk9SUywgREVWTkFNRSk7CisJaWYg
KHJldCkKKwkJcmV0dXJuIHJldDsKKworCWRtYV9oZWFwX2NsYXNzID0gY2xhc3NfY3JlYXRlKFRI
SVNfTU9EVUxFLCBERVZOQU1FKTsKKwlpZiAoSVNfRVJSKGRtYV9oZWFwX2NsYXNzKSkgeworCQl1
bnJlZ2lzdGVyX2NocmRldl9yZWdpb24oZG1hX2hlYXBfZGV2dCwgTlVNX0hFQVBfTUlOT1JTKTsK
KwkJcmV0dXJuIFBUUl9FUlIoZG1hX2hlYXBfY2xhc3MpOworCX0KKwlkbWFfaGVhcF9jbGFzcy0+
ZGV2bm9kZSA9IGRtYV9oZWFwX2Rldm5vZGU7CisKKwlyZXR1cm4gMDsKK30KK3N1YnN5c19pbml0
Y2FsbChkbWFfaGVhcF9pbml0KTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvZG1hLWhlYXAu
aCBiL2luY2x1ZGUvbGludXgvZG1hLWhlYXAuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAw
MDAwMDAwMDAwMDAuLjQ1NGUzNTRkMWZmYgotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvbGlu
dXgvZG1hLWhlYXAuaApAQCAtMCwwICsxLDU5IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmll
cjogR1BMLTIuMCAqLworLyoKKyAqIERNQUJVRiBIZWFwcyBBbGxvY2F0aW9uIEluZnJhc3RydWN0
dXJlCisgKgorICogQ29weXJpZ2h0IChDKSAyMDExIEdvb2dsZSwgSW5jLgorICogQ29weXJpZ2h0
IChDKSAyMDE5IExpbmFybyBMdGQuCisgKi8KKworI2lmbmRlZiBfRE1BX0hFQVBTX0gKKyNkZWZp
bmUgX0RNQV9IRUFQU19ICisKKyNpbmNsdWRlIDxsaW51eC9jZGV2Lmg+CisjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KKworc3RydWN0IGRtYV9oZWFwOworCisvKioKKyAqIHN0cnVjdCBkbWFfaGVh
cF9vcHMgLSBvcHMgdG8gb3BlcmF0ZSBvbiBhIGdpdmVuIGhlYXAKKyAqIEBhbGxvY2F0ZToJCWFs
bG9jYXRlIGRtYWJ1ZiBhbmQgcmV0dXJuIGZkCisgKgorICogYWxsb2NhdGUgcmV0dXJucyBkbWFi
dWYgZmQgIG9uIHN1Y2Nlc3MsIC1lcnJubyBvbiBlcnJvci4KKyAqLworc3RydWN0IGRtYV9oZWFw
X29wcyB7CisJaW50ICgqYWxsb2NhdGUpKHN0cnVjdCBkbWFfaGVhcCAqaGVhcCwKKwkJCXVuc2ln
bmVkIGxvbmcgbGVuLAorCQkJdW5zaWduZWQgbG9uZyBmZF9mbGFncywKKwkJCXVuc2lnbmVkIGxv
bmcgaGVhcF9mbGFncyk7Cit9OworCisvKioKKyAqIHN0cnVjdCBkbWFfaGVhcF9leHBvcnRfaW5m
byAtIGluZm9ybWF0aW9uIG5lZWRlZCB0byBleHBvcnQgYSBuZXcgZG1hYnVmIGhlYXAKKyAqIEBu
YW1lOgl1c2VkIGZvciBkZWJ1Z2dpbmcvZGV2aWNlLW5vZGUgbmFtZQorICogQG9wczoJb3BzIHN0
cnVjdCBmb3IgdGhpcyBoZWFwCisgKiBAcHJpdjoJaGVhcCBleHBvcnRlciBwcml2YXRlIGRhdGEK
KyAqCisgKiBJbmZvcm1hdGlvbiBuZWVkZWQgdG8gZXhwb3J0IGEgbmV3IGRtYWJ1ZiBoZWFwLgor
ICovCitzdHJ1Y3QgZG1hX2hlYXBfZXhwb3J0X2luZm8geworCWNvbnN0IGNoYXIgKm5hbWU7CisJ
Y29uc3Qgc3RydWN0IGRtYV9oZWFwX29wcyAqb3BzOworCXZvaWQgKnByaXY7Cit9OworCisvKioK
KyAqIGRtYV9oZWFwX2dldF9kcnZkYXRhKCkgLSBnZXQgcGVyLWhlYXAgZHJpdmVyIGRhdGEKKyAq
IEBoZWFwOiBETUEtSGVhcCB0byByZXRyaWV2ZSBwcml2YXRlIGRhdGEgZm9yCisgKgorICogUmV0
dXJuczoKKyAqIFRoZSBwZXItaGVhcCBkYXRhIGZvciB0aGUgaGVhcC4KKyAqLwordm9pZCAqZG1h
X2hlYXBfZ2V0X2RydmRhdGEoc3RydWN0IGRtYV9oZWFwICpoZWFwKTsKKworLyoqCisgKiBkbWFf
aGVhcF9hZGQgLSBhZGRzIGEgaGVhcCB0byBkbWFidWYgaGVhcHMKKyAqIEBleHBfaW5mbzoJCWlu
Zm9ybWF0aW9uIG5lZWRlZCB0byByZWdpc3RlciB0aGlzIGhlYXAKKyAqLworc3RydWN0IGRtYV9o
ZWFwICpkbWFfaGVhcF9hZGQoY29uc3Qgc3RydWN0IGRtYV9oZWFwX2V4cG9ydF9pbmZvICpleHBf
aW5mbyk7CisKKyNlbmRpZiAvKiBfRE1BX0hFQVBTX0ggKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUv
dWFwaS9saW51eC9kbWEtaGVhcC5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L2RtYS1oZWFwLmgKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4yMmY2MjA5OTE3NTgKLS0tIC9k
ZXYvbnVsbAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgvZG1hLWhlYXAuaApAQCAtMCwwICsxLDc3
IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCBXSVRIIExpbnV4LXN5c2Nh
bGwtbm90ZSAqLworLyoKKyAqIERNQUJVRiBIZWFwcyBVc2Vyc3BhY2UgQVBJCisgKgorICogQ29w
eXJpZ2h0IChDKSAyMDExIEdvb2dsZSwgSW5jLgorICogQ29weXJpZ2h0IChDKSAyMDE5IExpbmFy
byBMdGQuCisgKi8KKyNpZm5kZWYgX1VBUElfTElOVVhfRE1BQlVGX1BPT0xfSAorI2RlZmluZSBf
VUFQSV9MSU5VWF9ETUFCVUZfUE9PTF9ICisKKyNpbmNsdWRlIDxsaW51eC9pb2N0bC5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKKy8qKgorICogRE9DOiBETUFCVUYgSGVhcHMgVXNlcnNw
YWNlIEFQSQorICovCisKKyNkZWZpbmUgRE1BX0hFQVBfRkVBVFVSRV9OT05FICgweDApCisKKy8q
IEN1cnJyZW50bHkgbm8gc3VwcG9ydGVkIGZlYXR1cmVzICovCisjZGVmaW5lIERNQV9IRUFQX1NV
UFBPUlRFRF9GRUFUVVJFUyAoRE1BX0hFQVBfRkVBVFVSRV9OT05FKQorCisvKioKKyAqIHN0cnVj
dCBkbWFfaGVhcF9nZXRfZmVhdHVyZXNfZGF0YSAtIG1ldGFkYXRhIHBhc3NlZCBmcm9tIHVzZXJz
cGFjZSBmb3IKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0dGluZyBp
bnRlcmZhY2UgZmVhdHVyZXMKKyAqIEBmZWF0dXJlczoJCWZlYXR1cmVzIGZsYWcgcmV0dXJuZWQg
ZnJvbSBrZXJuZWwKKyAqCisgKiBQcm92aWRlZCBieSB1c2Vyc3BhY2UgYXMgYW4gYXJndW1lbnQg
dG8gdGhlIGlvY3RsCisgKi8KK3N0cnVjdCBkbWFfaGVhcF9nZXRfZmVhdHVyZXNfZGF0YSB7CisJ
X191NjQgZmVhdHVyZXM7Cit9OworCisvKiBWYWxpZCBGRF9GTEFHUyBhcmUgT19DTE9FWEVDLCBP
X1JET05MWSwgT19XUk9OTFksIE9fUkRXUiAqLworI2RlZmluZSBETUFfSEVBUF9WQUxJRF9GRF9G
TEFHUyAoT19DTE9FWEVDIHwgT19BQ0NNT0RFKQorCisvKiBDdXJyZW50bHkgbm8gaGVhcCBmbGFn
cyAqLworI2RlZmluZSBETUFfSEVBUF9WQUxJRF9IRUFQX0ZMQUdTICgwKQorCisvKioKKyAqIHN0
cnVjdCBkbWFfaGVhcF9hbGxvY2F0aW9uX2RhdGEgLSBtZXRhZGF0YSBwYXNzZWQgZnJvbSB1c2Vy
c3BhY2UgZm9yCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsb2Nh
dGlvbnMKKyAqIEBsZW46CQlzaXplIG9mIHRoZSBhbGxvY2F0aW9uCisgKiBAZmQ6CQkJd2lsbCBi
ZSBwb3B1bGF0ZWQgd2l0aCBhIGZkIHdoaWNoIHByb3ZkZXMgdGhlCisgKgkJCWhhbmRsZSB0byB0
aGUgYWxsb2NhdGVkIGRtYS1idWYKKyAqIEBmZF9mbGFnczoJCWZpbGUgZGVzY3JpcHRvciBmbGFn
cyB1c2VkIHdoZW4gYWxsb2NhdGluZworICogQGhlYXBfZmxhZ3M6CQlmbGFncyBwYXNzZWQgdG8g
aGVhcAorICoKKyAqIFByb3ZpZGVkIGJ5IHVzZXJzcGFjZSBhcyBhbiBhcmd1bWVudCB0byB0aGUg
aW9jdGwKKyAqLworc3RydWN0IGRtYV9oZWFwX2FsbG9jYXRpb25fZGF0YSB7CisJX191NjQgbGVu
OworCV9fdTMyIGZkOworCV9fdTMyIGZkX2ZsYWdzOworCV9fdTY0IGhlYXBfZmxhZ3M7Cit9Owor
CisjZGVmaW5lIERNQV9IRUFQX0lPQ19NQUdJQwkJJ0gnCisKKy8qKgorICogRE9DOiBETUFfSEVB
UF9JT0NfR0VUX0ZFQVRVUkVTIC0gR2V0IGludGVyZmFjZSBmZWF0dXJlcworICoKKyAqIFRha2Vz
IGFuIGRtYV9oZWFwX2ZlYXR1cmVzX2RhdGEgc3RydWN0IGFuZCByZXR1cm5zIGl0IHdpdGggdGhl
IGZlYXR1cmVzCisgKiBmbGFnZXMgc2V0IHdpdGggdGhlIGludGVyZmFjZXMgc3VwcG9ydGVkIGZl
YXR1cmVzLgorICovCisjZGVmaW5lIERNQV9IRUFQX0lPQ19HRVRfRkVBVFVSRVMgX0lPUihETUFf
SEVBUF9JT0NfTUFHSUMsIDB4MCxcCisJCQkJICAgICAgIHN0cnVjdCBkbWFfaGVhcF9nZXRfZmVh
dHVyZXNfZGF0YSkKKy8qKgorICogRE9DOiBETUFfSEVBUF9JT0NfQUxMT0MgLSBhbGxvY2F0ZSBt
ZW1vcnkgZnJvbSBwb29sCisgKgorICogVGFrZXMgYW4gZG1hX2hlYXBfYWxsb2NhdGlvbl9kYXRh
IHN0cnVjdCBhbmQgcmV0dXJucyBpdCB3aXRoIHRoZSBmZCBmaWVsZAorICogcG9wdWxhdGVkIHdp
dGggdGhlIGRtYWJ1ZiBoYW5kbGUgb2YgdGhlIGFsbG9jYXRpb24uCisgKi8KKyNkZWZpbmUgRE1B
X0hFQVBfSU9DX0FMTE9DCV9JT1dSKERNQV9IRUFQX0lPQ19NQUdJQywgMHgxLFwKKwkJCQkgICAg
ICBzdHJ1Y3QgZG1hX2hlYXBfYWxsb2NhdGlvbl9kYXRhKQorCisjZW5kaWYgLyogX1VBUElfTElO
VVhfRE1BQlVGX1BPT0xfSCAqLwotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9kcmktZGV2ZWw=
