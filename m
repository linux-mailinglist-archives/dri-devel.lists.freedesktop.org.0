Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1585610FE3
	for <lists+dri-devel@lfdr.de>; Thu,  2 May 2019 01:04:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E0546892B9;
	Wed,  1 May 2019 23:04:37 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-ot1-x349.google.com (mail-ot1-x349.google.com
 [IPv6:2607:f8b0:4864:20::349])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BC8E5892B9
 for <dri-devel@lists.freedesktop.org>; Wed,  1 May 2019 23:04:35 +0000 (UTC)
Received: by mail-ot1-x349.google.com with SMTP id z17so315131otj.0
 for <dri-devel@lists.freedesktop.org>; Wed, 01 May 2019 16:04:35 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=2w5xfu9GjviUjmXUiGL3y5UBmpKTNTw//vQlQgl2ho0=;
 b=ayvXSf1jbbghdO8ZhitZ1V3pEKTAUMw9v2/WaEYE4t7sPR9QmB7DuQ4py4k0b8EWWD
 gZazZ+SHLCpUE7Gh7aPJxDgT1HqrOvdNFsZCg+X8TPYYbw//MlsTN7Jtj7IHmS0OKATB
 0CZg2vSl/0r25eHpn9VMny2eDyn814Zh0Pp/J/k2h/Vwb91wJTjy562O6UN8FKqIaM6W
 pXY2ICBSUDIZ9DIeNB1D6Q7LzjJ4WwYTvsgXHLQoYqXjfCjAcCKzSp32+2B3kTrAQMVr
 1+a33dL2dVLkUVTm4H52ebUmkn5mZk8siZo6r3GpRIqLSSYgaiDGzr8c3F0vtwaHGRx1
 briw==
X-Gm-Message-State: APjAAAXKkuMnWo+h6yU4Twi1LmjMFrSO7743SBDgAVnSj8c/3WLPKI9I
 zi+KW4ItBCmBQlgtQ1gDQ4GOxVRC+mUQDuzPj68ATw==
X-Google-Smtp-Source: APXvYqxJxPO6GlZz4/bAGqvwWNxlwLQ0kC05vzwzyt72esVI2M3tr11TsCRGVwL3AImQYpA1YthLZLN/JqdKDdr96Su2yw==
X-Received: by 2002:a05:6830:1449:: with SMTP id
 w9mr382814otp.276.1556751874971; 
 Wed, 01 May 2019 16:04:34 -0700 (PDT)
Date: Wed,  1 May 2019 16:01:21 -0700
In-Reply-To: <20190501230126.229218-1-brendanhiggins@google.com>
Message-Id: <20190501230126.229218-13-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190501230126.229218-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.21.0.593.g511ec345e18-goog
Subject: [PATCH v2 12/17] kunit: tool: add Python wrappers for running KUnit
 tests
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, keescook@google.com, 
 kieran.bingham@ideasonboard.com, mcgrof@kernel.org, robh@kernel.org, 
 sboyd@kernel.org, shuah@kernel.org
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=2w5xfu9GjviUjmXUiGL3y5UBmpKTNTw//vQlQgl2ho0=;
 b=aPhp4K7Ppw2uScWyrHYIcTzDgEoUszftPdVVA9a2w+upJnoB681LBPoHg2s0RrLbB0
 E+zIbzzmAk8ElUsZTQZ0UuySBbdQ0cWlk43efUiq01/SV+9jXrLapAocH9jrN3kqC/2k
 jhupUv/3SweTHXV7iGSHIU4gHqXerCIyln6KuCbCRv1WxerOUxnmi8MaOA2E/SU+MpEn
 PvVPGrkKk8eI3pLOxoW9dQhsVRjSSiKDdxKVu6pHBn0xoo6//BO+GJ1HySq1Xfy22P+4
 8xiSgxU1fqNIXnjiOOAHkdZgusoTSYtpfDrR1JvqjD5uuPqEajAJG+D5PUavkjRdjLEL
 MLuA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 Felix Guo <felixguoxiuping@gmail.com>, wfg@linux.intel.com, joel@jms.id.au,
 rientjes@google.com, jdike@addtoit.com, dan.carpenter@oracle.com,
 devicetree@vger.kernel.org, linux-kbuild@vger.kernel.org, Tim.Bird@sony.com,
 linux-um@lists.infradead.org, rostedt@goodmis.org, julia.lawall@lip6.fr,
 dan.j.williams@intel.com, kunit-dev@googlegroups.com, richard@nod.at,
 linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogRmVsaXggR3VvIDxmZWxpeGd1b3hpdXBpbmdAZ21haWwuY29tPgoKVGhlIHVsdGltYXRl
IGdvYWwgaXMgdG8gY3JlYXRlIG1pbmltYWwgaXNvbGF0ZWQgdGVzdCBiaW5hcmllczsgaW4gdGhl
Cm1lYW50aW1lIHdlIGFyZSB1c2luZyBVTUwgdG8gcHJvdmlkZSB0aGUgaW5mcmFzdHJ1Y3R1cmUg
dG8gcnVuIHRlc3RzLCBzbwpkZWZpbmUgYW4gYWJzdHJhY3Qgd2F5IHRvIGNvbmZpZ3VyZSBhbmQg
cnVuIHRlc3RzIHRoYXQgYWxsb3cgdXMgdG8KY2hhbmdlIHRoZSBjb250ZXh0IGluIHdoaWNoIHRl
c3RzIGFyZSBidWlsdCB3aXRob3V0IGFmZmVjdGluZyB0aGUgdXNlci4KVGhpcyBhbHNvIG1ha2Vz
IHByZXR0eSBhbmQgZHluYW1pYyBlcnJvciByZXBvcnRpbmcsIGFuZCBhIGxvdCBvZiBvdGhlcgpu
aWNlIGZlYXR1cmVzIGVhc2llci4KCmt1bml0X2NvbmZpZy5weToKICAtIHBhcnNlIC5jb25maWcg
YW5kIEtjb25maWcgZmlsZXMuCgprdW5pdF9rZXJuZWwucHk6IHByb3ZpZGVzIGhlbHBlciBmdW5j
dGlvbnMgdG86CiAgLSBjb25maWd1cmUgdGhlIGtlcm5lbCB1c2luZyBrdW5pdGNvbmZpZy4KICAt
IGJ1aWxkIHRoZSBrZXJuZWwgd2l0aCB0aGUgYXBwcm9wcmlhdGUgY29uZmlndXJhdGlvbi4KICAt
IHByb3ZpZGUgZnVuY3Rpb24gdG8gaW52b2tlIHRoZSBrZXJuZWwgYW5kIHN0cmVhbSB0aGUgb3V0
cHV0IGJhY2suCgpTaWduZWQtb2ZmLWJ5OiBGZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGluZ0BnbWFp
bC5jb20+ClNpZ25lZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29v
Z2xlLmNvbT4KLS0tCiB0b29scy90ZXN0aW5nL2t1bml0Ly5naXRpZ25vcmUgICAgICB8ICAgMyAr
CiB0b29scy90ZXN0aW5nL2t1bml0L2t1bml0LnB5ICAgICAgICB8ICA3OCArKysrKysrKysrKysr
KysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfY29uZmlnLnB5IHwgIDY2ICsrKysrKysrKysr
KysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfa2VybmVsLnB5IHwgMTQ4ICsrKysrKysrKysr
KysrKysrKysrKysrKysrKysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfcGFyc2VyLnB5IHwg
MTE5ICsrKysrKysrKysrKysrKysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgNDE0IGluc2VydGlv
bnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0b29scy90ZXN0aW5nL2t1bml0Ly5naXRpZ25vcmUK
IGNyZWF0ZSBtb2RlIDEwMDc1NSB0b29scy90ZXN0aW5nL2t1bml0L2t1bml0LnB5CiBjcmVhdGUg
bW9kZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF9jb25maWcucHkKIGNyZWF0ZSBt
b2RlIDEwMDY0NCB0b29scy90ZXN0aW5nL2t1bml0L2t1bml0X2tlcm5lbC5weQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfcGFyc2VyLnB5CgpkaWZmIC0tZ2l0
IGEvdG9vbHMvdGVzdGluZy9rdW5pdC8uZ2l0aWdub3JlIGIvdG9vbHMvdGVzdGluZy9rdW5pdC8u
Z2l0aWdub3JlCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLmM3OTFm
ZjU5YTM3YTkKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0aW5nL2t1bml0Ly5naXRpZ25v
cmUKQEAgLTAsMCArMSwzIEBACisjIEJ5dGUtY29tcGlsZWQgLyBvcHRpbWl6ZWQgLyBETEwgZmls
ZXMKK19fcHljYWNoZV9fLworKi5weVtjb2RdClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpk
aWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdC5weSBiL3Rvb2xzL3Rlc3Rpbmcv
a3VuaXQva3VuaXQucHkKbmV3IGZpbGUgbW9kZSAxMDA3NTUKaW5kZXggMDAwMDAwMDAwMDAwMC4u
NzQxM2VjNzM1MWEyMAotLS0gL2Rldi9udWxsCisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3Vu
aXQucHkKQEAgLTAsMCArMSw3OCBAQAorIyEvdXNyL2Jpbi9weXRob24zCisjIFNQRFgtTGljZW5z
ZS1JZGVudGlmaWVyOiBHUEwtMi4wCisjCisjIEEgdGhpbiB3cmFwcGVyIG9uIHRvcCBvZiB0aGUg
S1VuaXQgS2VybmVsCisjCisjIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyMgQXV0
aG9yOiBGZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGluZ0BnbWFpbC5jb20+CisjIEF1dGhvcjogQnJl
bmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorCitpbXBvcnQgYXJncGFy
c2UKK2ltcG9ydCBzeXMKK2ltcG9ydCBvcworaW1wb3J0IHRpbWUKKworaW1wb3J0IGt1bml0X2Nv
bmZpZworaW1wb3J0IGt1bml0X2tlcm5lbAoraW1wb3J0IGt1bml0X3BhcnNlcgorCitwYXJzZXIg
PSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0nUnVucyBLVW5pdCB0ZXN0cy4n
KQorCitwYXJzZXIuYWRkX2FyZ3VtZW50KCctLXJhd19vdXRwdXQnLCBoZWxwPSdkb25cJ3QgZm9y
bWF0IG91dHB1dCBmcm9tIGtlcm5lbCcsCisJCSAgICBhY3Rpb249J3N0b3JlX3RydWUnKQorCitw
YXJzZXIuYWRkX2FyZ3VtZW50KCctLXRpbWVvdXQnLCBoZWxwPSdtYXhpbXVtIG51bWJlciBvZiBz
ZWNvbmRzIHRvIGFsbG93IGZvciAnCisJCSAgICAnYWxsIHRlc3RzIHRvIHJ1bi4gVGhpcyBkb2Vz
IG5vdCBpbmNsdWRlIHRpbWUgdGFrZW4gdG8gJworCQkgICAgJ2J1aWxkIHRoZSB0ZXN0cy4nLCB0
eXBlPWludCwgZGVmYXVsdD0zMDAsCisJCSAgICBtZXRhdmFyPSd0aW1lb3V0JykKKworcGFyc2Vy
LmFkZF9hcmd1bWVudCgnLS1qb2JzJywKKwkJICAgIGhlbHA9J0FzIGluIHRoZSBtYWtlIGNvbW1h
bmQsICJTcGVjaWZpZXMgIHRoZSBudW1iZXIgb2YgJworCQkgICAgJ2pvYnMgKGNvbW1hbmRzKSB0
byBydW4gc2ltdWx0YW5lb3VzbHkuIicsCisJCSAgICB0eXBlPWludCwgZGVmYXVsdD04LCBtZXRh
dmFyPSdqb2JzJykKKworcGFyc2VyLmFkZF9hcmd1bWVudCgnLS1idWlsZF9kaXInLAorCQkgICAg
aGVscD0nQXMgaW4gdGhlIG1ha2UgY29tbWFuZCwgaXQgc3BlY2lmaWVzIHRoZSBidWlsZCAnCisJ
CSAgICAnZGlyZWN0b3J5LicsCisJCSAgICB0eXBlPXN0ciwgZGVmYXVsdD1Ob25lLCBtZXRhdmFy
PSdidWlsZF9kaXInKQorCitjbGlfYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKKworbGludXgg
PSBrdW5pdF9rZXJuZWwuTGludXhTb3VyY2VUcmVlKCkKKworYnVpbGRfZGlyID0gTm9uZQoraWYg
Y2xpX2FyZ3MuYnVpbGRfZGlyOgorCWJ1aWxkX2RpciA9IGNsaV9hcmdzLmJ1aWxkX2RpcgorCitj
b25maWdfc3RhcnQgPSB0aW1lLnRpbWUoKQorc3VjY2VzcyA9IGxpbnV4LmJ1aWxkX3JlY29uZmln
KGJ1aWxkX2RpcikKK2NvbmZpZ19lbmQgPSB0aW1lLnRpbWUoKQoraWYgbm90IHN1Y2Nlc3M6CisJ
cXVpdCgpCisKK2t1bml0X3BhcnNlci5wcmludF93aXRoX3RpbWVzdGFtcCgnQnVpbGRpbmcgS1Vu
aXQgS2VybmVsIC4uLicpCisKK2J1aWxkX3N0YXJ0ID0gdGltZS50aW1lKCkKKworc3VjY2VzcyA9
IGxpbnV4LmJ1aWxkX3VtX2tlcm5lbChqb2JzPWNsaV9hcmdzLmpvYnMsIGJ1aWxkX2Rpcj1idWls
ZF9kaXIpCitidWlsZF9lbmQgPSB0aW1lLnRpbWUoKQoraWYgbm90IHN1Y2Nlc3M6CisJcXVpdCgp
CisKK2t1bml0X3BhcnNlci5wcmludF93aXRoX3RpbWVzdGFtcCgnU3RhcnRpbmcgS1VuaXQgS2Vy
bmVsIC4uLicpCit0ZXN0X3N0YXJ0ID0gdGltZS50aW1lKCkKKworaWYgY2xpX2FyZ3MucmF3X291
dHB1dDoKKwlrdW5pdF9wYXJzZXIucmF3X291dHB1dChsaW51eC5ydW5fa2VybmVsKHRpbWVvdXQ9
Y2xpX2FyZ3MudGltZW91dCwKKwkJCQkJCSBidWlsZF9kaXI9YnVpbGRfZGlyKSkKK2Vsc2U6CisJ
a3VuaXRfcGFyc2VyLnBhcnNlX3J1bl90ZXN0cyhsaW51eC5ydW5fa2VybmVsKHRpbWVvdXQ9Y2xp
X2FyZ3MudGltZW91dCwKKwkJCQkJCSAgICAgIGJ1aWxkX2Rpcj1idWlsZF9kaXIpKQorCit0ZXN0
X2VuZCA9IHRpbWUudGltZSgpCisKK2t1bml0X3BhcnNlci5wcmludF93aXRoX3RpbWVzdGFtcCgo
CisJIkVsYXBzZWQgdGltZTogJS4zZnMgdG90YWwsICUuM2ZzIGNvbmZpZ3VyaW5nLCAlLjNmcyAi
ICsKKwkiYnVpbGRpbmcsICUuM2ZzIHJ1bm5pbmcuXG4iKSAlICh0ZXN0X2VuZCAtIGNvbmZpZ19z
dGFydCwKKwljb25maWdfZW5kIC0gY29uZmlnX3N0YXJ0LCBidWlsZF9lbmQgLSBidWlsZF9zdGFy
dCwKKwl0ZXN0X2VuZCAtIHRlc3Rfc3RhcnQpKQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9r
dW5pdC9rdW5pdF9jb25maWcucHkgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0X2NvbmZpZy5w
eQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAwLi4xNjdmNDdkOWFiOGU0
Ci0tLSAvZGV2L251bGwKKysrIGIvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF9jb25maWcucHkK
QEAgLTAsMCArMSw2NiBAQAorIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorIwor
IyBCdWlsZHMgYSAuY29uZmlnIGZyb20gYSBrdW5pdGNvbmZpZy4KKyMKKyMgQ29weXJpZ2h0IChD
KSAyMDE5LCBHb29nbGUgTExDLgorIyBBdXRob3I6IEZlbGl4IEd1byA8ZmVsaXhndW94aXVwaW5n
QGdtYWlsLmNvbT4KKyMgQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdv
b2dsZS5jb20+CisKK2ltcG9ydCBjb2xsZWN0aW9ucworaW1wb3J0IHJlCisKK0NPTkZJR19JU19O
T1RfU0VUX1BBVFRFUk4gPSByJ14jIENPTkZJR19cdysgaXMgbm90IHNldCQnCitDT05GSUdfUEFU
VEVSTiA9IHInXkNPTkZJR19cdys9XFMrJCcKKworS2NvbmZpZ0VudHJ5QmFzZSA9IGNvbGxlY3Rp
b25zLm5hbWVkdHVwbGUoJ0tjb25maWdFbnRyeScsIFsncmF3X2VudHJ5J10pCisKKworY2xhc3Mg
S2NvbmZpZ0VudHJ5KEtjb25maWdFbnRyeUJhc2UpOgorCisJZGVmIF9fc3RyX18oc2VsZikgLT4g
c3RyOgorCQlyZXR1cm4gc2VsZi5yYXdfZW50cnkKKworCitjbGFzcyBLY29uZmlnUGFyc2VFcnJv
cihFeGNlcHRpb24pOgorCSIiIkVycm9yIHBhcnNpbmcgS2NvbmZpZyBkZWZjb25maWcgb3IgLmNv
bmZpZy4iIiIKKworCitjbGFzcyBLY29uZmlnKG9iamVjdCk6CisJIiIiUmVwcmVzZW50cyBkZWZj
b25maWcgb3IgLmNvbmZpZyBzcGVjaWZpZWQgdXNpbmcgdGhlIEtjb25maWcgbGFuZ3VhZ2UuIiIi
CisKKwlkZWYgX19pbml0X18oc2VsZik6CisJCXNlbGYuX2VudHJpZXMgPSBbXQorCisJZGVmIGVu
dHJpZXMoc2VsZik6CisJCXJldHVybiBzZXQoc2VsZi5fZW50cmllcykKKworCWRlZiBhZGRfZW50
cnkoc2VsZiwgZW50cnk6IEtjb25maWdFbnRyeSkgLT4gTm9uZToKKwkJc2VsZi5fZW50cmllcy5h
cHBlbmQoZW50cnkpCisKKwlkZWYgaXNfc3Vic2V0X29mKHNlbGYsIG90aGVyOiAiS2NvbmZpZyIp
IC0+IGJvb2w6CisJCXJldHVybiBzZWxmLmVudHJpZXMoKS5pc3N1YnNldChvdGhlci5lbnRyaWVz
KCkpCisKKwlkZWYgd3JpdGVfdG9fZmlsZShzZWxmLCBwYXRoOiBzdHIpIC0+IE5vbmU6CisJCXdp
dGggb3BlbihwYXRoLCAndycpIGFzIGY6CisJCQlmb3IgZW50cnkgaW4gc2VsZi5lbnRyaWVzKCk6
CisJCQkJZi53cml0ZShzdHIoZW50cnkpICsgJ1xuJykKKworCWRlZiBwYXJzZV9mcm9tX3N0cmlu
ZyhzZWxmLCBibG9iOiBzdHIpIC0+IE5vbmU6CisJCSIiIlBhcnNlcyBhIHN0cmluZyBjb250YWlu
aW5nIEtjb25maWdFbnRyeXMgYW5kIHBvcHVsYXRlcyB0aGlzIEtjb25maWcuIiIiCisJCXNlbGYu
X2VudHJpZXMgPSBbXQorCQlpc19ub3Rfc2V0X21hdGNoZXIgPSByZS5jb21waWxlKENPTkZJR19J
U19OT1RfU0VUX1BBVFRFUk4pCisJCWNvbmZpZ19tYXRjaGVyID0gcmUuY29tcGlsZShDT05GSUdf
UEFUVEVSTikKKwkJZm9yIGxpbmUgaW4gYmxvYi5zcGxpdCgnXG4nKToKKwkJCWxpbmUgPSBsaW5l
LnN0cmlwKCkKKwkJCWlmIG5vdCBsaW5lOgorCQkJCWNvbnRpbnVlCisJCQllbGlmIGNvbmZpZ19t
YXRjaGVyLm1hdGNoKGxpbmUpIG9yIGlzX25vdF9zZXRfbWF0Y2hlci5tYXRjaChsaW5lKToKKwkJ
CQlzZWxmLl9lbnRyaWVzLmFwcGVuZChLY29uZmlnRW50cnkobGluZSkpCisJCQllbGlmIGxpbmVb
MF0gPT0gJyMnOgorCQkJCWNvbnRpbnVlCisJCQllbHNlOgorCQkJCXJhaXNlIEtjb25maWdQYXJz
ZUVycm9yKCdGYWlsZWQgdG8gcGFyc2U6ICcgKyBsaW5lKQorCisJZGVmIHJlYWRfZnJvbV9maWxl
KHNlbGYsIHBhdGg6IHN0cikgLT4gTm9uZToKKwkJd2l0aCBvcGVuKHBhdGgsICdyJykgYXMgZjoK
KwkJCXNlbGYucGFyc2VfZnJvbV9zdHJpbmcoZi5yZWFkKCkpCmRpZmYgLS1naXQgYS90b29scy90
ZXN0aW5nL2t1bml0L2t1bml0X2tlcm5lbC5weSBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRf
a2VybmVsLnB5Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLjA3YzBh
YmYyZjQ3ZGYKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0X2tl
cm5lbC5weQpAQCAtMCwwICsxLDE0OCBAQAorIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BM
LTIuMAorIworIyBSdW5zIFVNTCBrZXJuZWwsIGNvbGxlY3RzIG91dHB1dCwgYW5kIGhhbmRsZXMg
ZXJyb3JzLgorIworIyBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBMTEMuCisjIEF1dGhvcjog
RmVsaXggR3VvIDxmZWxpeGd1b3hpdXBpbmdAZ21haWwuY29tPgorIyBBdXRob3I6IEJyZW5kYW4g
SGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KKworCitpbXBvcnQgbG9nZ2luZwor
aW1wb3J0IHN1YnByb2Nlc3MKK2ltcG9ydCBvcworCitpbXBvcnQga3VuaXRfY29uZmlnCisKK0tD
T05GSUdfUEFUSCA9ICcuY29uZmlnJworCitjbGFzcyBDb25maWdFcnJvcihFeGNlcHRpb24pOgor
CSIiIlJlcHJlc2VudHMgYW4gZXJyb3IgdHJ5aW5nIHRvIGNvbmZpZ3VyZSB0aGUgTGludXgga2Vy
bmVsLiIiIgorCisKK2NsYXNzIEJ1aWxkRXJyb3IoRXhjZXB0aW9uKToKKwkiIiJSZXByZXNlbnRz
IGFuIGVycm9yIHRyeWluZyB0byBidWlsZCB0aGUgTGludXgga2VybmVsLiIiIgorCisKK2NsYXNz
IExpbnV4U291cmNlVHJlZU9wZXJhdGlvbnMob2JqZWN0KToKKwkiIiJBbiBhYnN0cmFjdGlvbiBv
dmVyIGNvbW1hbmQgbGluZSBvcGVyYXRpb25zIHBlcmZvcm1lZCBvbiBhIHNvdXJjZSB0cmVlLiIi
IgorCisJZGVmIG1ha2VfbXJwcm9wZXIoc2VsZik6CisJCXRyeToKKwkJCXN1YnByb2Nlc3MuY2hl
Y2tfb3V0cHV0KFsnbWFrZScsICdtcnByb3BlciddKQorCQlleGNlcHQgT1NFcnJvciBhcyBlOgor
CQkJcmFpc2UgQ29uZmlnRXJyb3IoJ0NvdWxkIG5vdCBjYWxsIG1ha2UgY29tbWFuZDogJyArIGUp
CisJCWV4Y2VwdCBzdWJwcm9jZXNzLkNhbGxlZFByb2Nlc3NFcnJvciBhcyBlOgorCQkJcmFpc2Ug
Q29uZmlnRXJyb3IoZS5vdXRwdXQpCisKKwlkZWYgbWFrZV9vbGRkZWZjb25maWcoc2VsZiwgYnVp
bGRfZGlyKToKKwkJY29tbWFuZCA9IFsnbWFrZScsICdBUkNIPXVtJywgJ29sZGRlZmNvbmZpZydd
CisJCWlmIGJ1aWxkX2RpcjoKKwkJCWNvbW1hbmQgKz0gWydPPScgKyBidWlsZF9kaXJdCisJCXRy
eToKKwkJCXN1YnByb2Nlc3MuY2hlY2tfb3V0cHV0KGNvbW1hbmQpCisJCWV4Y2VwdCBPU0Vycm9y
IGFzIGU6CisJCQlyYWlzZSBDb25maWdFcnJvcignQ291bGQgbm90IGNhbGwgbWFrZSBjb21tYW5k
OiAnICsgZSkKKwkJZXhjZXB0IHN1YnByb2Nlc3MuQ2FsbGVkUHJvY2Vzc0Vycm9yIGFzIGU6CisJ
CQlyYWlzZSBDb25maWdFcnJvcihlLm91dHB1dCkKKworCWRlZiBtYWtlKHNlbGYsIGpvYnMsIGJ1
aWxkX2Rpcik6CisJCWNvbW1hbmQgPSBbJ21ha2UnLCAnQVJDSD11bScsICctLWpvYnM9JyArIHN0
cihqb2JzKV0KKwkJaWYgYnVpbGRfZGlyOgorCQkJY29tbWFuZCArPSBbJ089JyArIGJ1aWxkX2Rp
cl0KKwkJdHJ5OgorCQkJc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoY29tbWFuZCkKKwkJZXhjZXB0
IE9TRXJyb3IgYXMgZToKKwkJCXJhaXNlIEJ1aWxkRXJyb3IoJ0NvdWxkIG5vdCBjYWxsIGV4ZWN1
dGUgbWFrZTogJyArIGUpCisJCWV4Y2VwdCBzdWJwcm9jZXNzLkNhbGxlZFByb2Nlc3NFcnJvciBh
cyBlOgorCQkJcmFpc2UgQnVpbGRFcnJvcihlLm91dHB1dCkKKworCWRlZiBsaW51eF9iaW4oc2Vs
ZiwgcGFyYW1zLCB0aW1lb3V0LCBidWlsZF9kaXIpOgorCQkiIiJSdW5zIHRoZSBMaW51eCBVTUwg
YmluYXJ5LiBNdXN0IGJlIG5hbWVkICdsaW51eCcuIiIiCisJCWxpbnV4X2JpbiA9ICcuL2xpbnV4
JworCQlpZiBidWlsZF9kaXI6CisJCQlsaW51eF9iaW4gPSBvcy5wYXRoLmpvaW4oYnVpbGRfZGly
LCAnbGludXgnKQorCQlwcm9jZXNzID0gc3VicHJvY2Vzcy5Qb3BlbigKKwkJCVtsaW51eF9iaW5d
ICsgcGFyYW1zLAorCQkJc3RkaW49c3VicHJvY2Vzcy5QSVBFLAorCQkJc3Rkb3V0PXN1YnByb2Nl
c3MuUElQRSwKKwkJCXN0ZGVycj1zdWJwcm9jZXNzLlBJUEUpCisJCXByb2Nlc3Mud2FpdCh0aW1l
b3V0PXRpbWVvdXQpCisJCXJldHVybiBwcm9jZXNzCisKKworZGVmIGdldF9rY29uZmlnX3BhdGgo
YnVpbGRfZGlyKToKKwlrY29uZmlnX3BhdGggPSBLQ09ORklHX1BBVEgKKwlpZiBidWlsZF9kaXI6
CisJCWtjb25maWdfcGF0aCA9IG9zLnBhdGguam9pbihidWlsZF9kaXIsIEtDT05GSUdfUEFUSCkK
KwlyZXR1cm4ga2NvbmZpZ19wYXRoCisKK2NsYXNzIExpbnV4U291cmNlVHJlZShvYmplY3QpOgor
CSIiIlJlcHJlc2VudHMgYSBMaW51eCBrZXJuZWwgc291cmNlIHRyZWUgd2l0aCBLVW5pdCB0ZXN0
cy4iIiIKKworCWRlZiBfX2luaXRfXyhzZWxmKToKKwkJc2VsZi5fa2NvbmZpZyA9IGt1bml0X2Nv
bmZpZy5LY29uZmlnKCkKKwkJc2VsZi5fa2NvbmZpZy5yZWFkX2Zyb21fZmlsZSgna3VuaXRjb25m
aWcnKQorCQlzZWxmLl9vcHMgPSBMaW51eFNvdXJjZVRyZWVPcGVyYXRpb25zKCkKKworCWRlZiBj
bGVhbihzZWxmKToKKwkJdHJ5OgorCQkJc2VsZi5fb3BzLm1ha2VfbXJwcm9wZXIoKQorCQlleGNl
cHQgQ29uZmlnRXJyb3IgYXMgZToKKwkJCWxvZ2dpbmcuZXJyb3IoZSkKKwkJCXJldHVybiBGYWxz
ZQorCQlyZXR1cm4gVHJ1ZQorCisJZGVmIGJ1aWxkX2NvbmZpZyhzZWxmLCBidWlsZF9kaXIpOgor
CQlrY29uZmlnX3BhdGggPSBnZXRfa2NvbmZpZ19wYXRoKGJ1aWxkX2RpcikKKwkJaWYgYnVpbGRf
ZGlyIGFuZCBub3Qgb3MucGF0aC5leGlzdHMoYnVpbGRfZGlyKToKKwkJCW9zLm1rZGlyKGJ1aWxk
X2RpcikKKwkJc2VsZi5fa2NvbmZpZy53cml0ZV90b19maWxlKGtjb25maWdfcGF0aCkKKwkJdHJ5
OgorCQkJc2VsZi5fb3BzLm1ha2Vfb2xkZGVmY29uZmlnKGJ1aWxkX2RpcikKKwkJZXhjZXB0IENv
bmZpZ0Vycm9yIGFzIGU6CisJCQlsb2dnaW5nLmVycm9yKGUpCisJCQlyZXR1cm4gRmFsc2UKKwkJ
dmFsaWRhdGVkX2tjb25maWcgPSBrdW5pdF9jb25maWcuS2NvbmZpZygpCisJCXZhbGlkYXRlZF9r
Y29uZmlnLnJlYWRfZnJvbV9maWxlKGtjb25maWdfcGF0aCkKKwkJaWYgbm90IHNlbGYuX2tjb25m
aWcuaXNfc3Vic2V0X29mKHZhbGlkYXRlZF9rY29uZmlnKToKKwkJCWxvZ2dpbmcuZXJyb3IoJ1By
b3ZpZGVkIEtjb25maWcgaXMgbm90IGNvbnRhaW5lZCBpbiB2YWxpZGF0ZWQgLmNvbmZpZyEnKQor
CQkJcmV0dXJuIEZhbHNlCisJCXJldHVybiBUcnVlCisKKwlkZWYgYnVpbGRfcmVjb25maWcoc2Vs
ZiwgYnVpbGRfZGlyKToKKwkJIiIiQ3JlYXRlcyBhIG5ldyAuY29uZmlnIGlmIGl0IGlzIG5vdCBh
IHN1YnNldCBvZiB0aGUga3VuaXRjb25maWcuIiIiCisJCWtjb25maWdfcGF0aCA9IGdldF9rY29u
ZmlnX3BhdGgoYnVpbGRfZGlyKQorCQlpZiBvcy5wYXRoLmV4aXN0cyhrY29uZmlnX3BhdGgpOgor
CQkJZXhpc3Rpbmdfa2NvbmZpZyA9IGt1bml0X2NvbmZpZy5LY29uZmlnKCkKKwkJCWV4aXN0aW5n
X2tjb25maWcucmVhZF9mcm9tX2ZpbGUoa2NvbmZpZ19wYXRoKQorCQkJaWYgbm90IHNlbGYuX2tj
b25maWcuaXNfc3Vic2V0X29mKGV4aXN0aW5nX2tjb25maWcpOgorCQkJCXByaW50KCdSZWdlbmVy
YXRpbmcgLmNvbmZpZyAuLi4nKQorCQkJCW9zLnJlbW92ZShrY29uZmlnX3BhdGgpCisJCQkJcmV0
dXJuIHNlbGYuYnVpbGRfY29uZmlnKGJ1aWxkX2RpcikKKwkJCWVsc2U6CisJCQkJcmV0dXJuIFRy
dWUKKwkJZWxzZToKKwkJCXByaW50KCdHZW5lcmF0aW5nIC5jb25maWcgLi4uJykKKwkJCXJldHVy
biBzZWxmLmJ1aWxkX2NvbmZpZyhidWlsZF9kaXIpCisKKwlkZWYgYnVpbGRfdW1fa2VybmVsKHNl
bGYsIGpvYnMsIGJ1aWxkX2Rpcik6CisJCXRyeToKKwkJCXNlbGYuX29wcy5tYWtlX29sZGRlZmNv
bmZpZyhidWlsZF9kaXIpCisJCQlzZWxmLl9vcHMubWFrZShqb2JzLCBidWlsZF9kaXIpCisJCWV4
Y2VwdCAoQ29uZmlnRXJyb3IsIEJ1aWxkRXJyb3IpIGFzIGU6CisJCQlsb2dnaW5nLmVycm9yKGUp
CisJCQlyZXR1cm4gRmFsc2UKKwkJdXNlZF9rY29uZmlnID0ga3VuaXRfY29uZmlnLktjb25maWco
KQorCQl1c2VkX2tjb25maWcucmVhZF9mcm9tX2ZpbGUoZ2V0X2tjb25maWdfcGF0aChidWlsZF9k
aXIpKQorCQlpZiBub3Qgc2VsZi5fa2NvbmZpZy5pc19zdWJzZXRfb2YodXNlZF9rY29uZmlnKToK
KwkJCWxvZ2dpbmcuZXJyb3IoJ1Byb3ZpZGVkIEtjb25maWcgaXMgbm90IGNvbnRhaW5lZCBpbiBm
aW5hbCBjb25maWchJykKKwkJCXJldHVybiBGYWxzZQorCQlyZXR1cm4gVHJ1ZQorCisJZGVmIHJ1
bl9rZXJuZWwoc2VsZiwgYXJncz1bXSwgdGltZW91dD1Ob25lLCBidWlsZF9kaXI9Tm9uZSk6CisJ
CWFyZ3MuZXh0ZW5kKFsnbWVtPTI1Nk0nXSkKKwkJcHJvY2VzcyA9IHNlbGYuX29wcy5saW51eF9i
aW4oYXJncywgdGltZW91dCwgYnVpbGRfZGlyKQorCQl3aXRoIG9wZW4oJ3Rlc3QubG9nJywgJ3cn
KSBhcyBmOgorCQkJZm9yIGxpbmUgaW4gcHJvY2Vzcy5zdGRvdXQ6CisJCQkJZi53cml0ZShsaW5l
LnJzdHJpcCgpLmRlY29kZSgnYXNjaWknKSArICdcbicpCisJCQkJeWllbGQgbGluZS5yc3RyaXAo
KS5kZWNvZGUoJ2FzY2lpJykKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRf
cGFyc2VyLnB5IGIvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF9wYXJzZXIucHkKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uNmM4MWQ0ZGNmYWJiNQotLS0gL2Rldi9u
dWxsCisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfcGFyc2VyLnB5CkBAIC0wLDAgKzEs
MTE5IEBACisjIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisjCisjIFBhcnNlcyB0
ZXN0IHJlc3VsdHMgZnJvbSBhIGtlcm5lbCBkbWVzZyBsb2cuCisjCisjIENvcHlyaWdodCAoQykg
MjAxOSwgR29vZ2xlIExMQy4KKyMgQXV0aG9yOiBGZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGluZ0Bn
bWFpbC5jb20+CisjIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29n
bGUuY29tPgorCitpbXBvcnQgcmUKK2Zyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCisKK2t1
bml0X3N0YXJ0X3JlID0gcmUuY29tcGlsZSgncHJpbnRrOiBjb25zb2xlIC4qIGVuYWJsZWQnKQor
a3VuaXRfZW5kX3JlID0gcmUuY29tcGlsZSgnTGlzdCBvZiBhbGwgcGFydGl0aW9uczonKQorCitk
ZWYgaXNvbGF0ZV9rdW5pdF9vdXRwdXQoa2VybmVsX291dHB1dCk6CisJc3RhcnRlZCA9IEZhbHNl
CisJZm9yIGxpbmUgaW4ga2VybmVsX291dHB1dDoKKwkJaWYga3VuaXRfc3RhcnRfcmUubWF0Y2go
bGluZSk6CisJCQlzdGFydGVkID0gVHJ1ZQorCQllbGlmIGt1bml0X2VuZF9yZS5tYXRjaChsaW5l
KToKKwkJCWJyZWFrCisJCWVsaWYgc3RhcnRlZDoKKwkJCXlpZWxkIGxpbmUKKworZGVmIHJhd19v
dXRwdXQoa2VybmVsX291dHB1dCk6CisJZm9yIGxpbmUgaW4ga2VybmVsX291dHB1dDoKKwkJcHJp
bnQobGluZSkKKworRElWSURFUiA9ICI9IiAqIDMwCisKK1JFU0VUID0gJ1wwMzNbMDswbScKKwor
ZGVmIHJlZCh0ZXh0KToKKwlyZXR1cm4gJ1wwMzNbMTszMW0nICsgdGV4dCArIFJFU0VUCisKK2Rl
ZiB5ZWxsb3codGV4dCk6CisJcmV0dXJuICdcMDMzWzE7MzNtJyArIHRleHQgKyBSRVNFVAorCitk
ZWYgZ3JlZW4odGV4dCk6CisJcmV0dXJuICdcMDMzWzE7MzJtJyArIHRleHQgKyBSRVNFVAorCitk
ZWYgcHJpbnRfd2l0aF90aW1lc3RhbXAobWVzc2FnZSk6CisJcHJpbnQoJ1slc10gJXMnICUgKGRh
dGV0aW1lLm5vdygpLnN0cmZ0aW1lKCclSDolTTolUycpLCBtZXNzYWdlKSkKKworZGVmIHByaW50
X2xvZyhsb2cpOgorCWZvciBtIGluIGxvZzoKKwkJcHJpbnRfd2l0aF90aW1lc3RhbXAobSkKKwor
ZGVmIHBhcnNlX3J1bl90ZXN0cyhrZXJuZWxfb3V0cHV0KToKKwl0ZXN0X2Nhc2Vfb3V0cHV0ID0g
cmUuY29tcGlsZSgnXmt1bml0IC4qPzogKC4qKSQnKQorCisJdGVzdF9tb2R1bGVfc3VjY2VzcyA9
IHJlLmNvbXBpbGUoJ15rdW5pdCAuKjogYWxsIHRlc3RzIHBhc3NlZCcpCisJdGVzdF9tb2R1bGVf
ZmFpbCA9IHJlLmNvbXBpbGUoJ15rdW5pdCAuKjogb25lIG9yIG1vcmUgdGVzdHMgZmFpbGVkJykK
KworCXRlc3RfY2FzZV9zdWNjZXNzID0gcmUuY29tcGlsZSgnXmt1bml0ICguKik6ICguKikgcGFz
c2VkJykKKwl0ZXN0X2Nhc2VfZmFpbCA9IHJlLmNvbXBpbGUoJ15rdW5pdCAoLiopOiAoLiopIGZh
aWxlZCcpCisJdGVzdF9jYXNlX2NyYXNoID0gcmUuY29tcGlsZSgnXmt1bml0ICguKik6ICguKikg
Y3Jhc2hlZCcpCisKKwl0b3RhbF90ZXN0cyA9IHNldCgpCisJZmFpbGVkX3Rlc3RzID0gc2V0KCkK
KwljcmFzaGVkX3Rlc3RzID0gc2V0KCkKKworCWRlZiBnZXRfdGVzdF9uYW1lKG1hdGNoKToKKwkJ
cmV0dXJuIG1hdGNoLmdyb3VwKDEpICsgIjoiICsgbWF0Y2guZ3JvdXAoMikKKworCWN1cnJlbnRf
Y2FzZV9sb2cgPSBbXQorCWRlZiBlbmRfb25lX3Rlc3QobWF0Y2gsIGxvZyk6CisJCWxvZy5jbGVh
cigpCisJCXRvdGFsX3Rlc3RzLmFkZChnZXRfdGVzdF9uYW1lKG1hdGNoKSkKKworCXByaW50X3dp
dGhfdGltZXN0YW1wKERJVklERVIpCisJZm9yIGxpbmUgaW4gaXNvbGF0ZV9rdW5pdF9vdXRwdXQo
a2VybmVsX291dHB1dCk6CisJCSMgSWdub3JlIG1vZHVsZSBvdXRwdXQ6CisJCWlmICh0ZXN0X21v
ZHVsZV9zdWNjZXNzLm1hdGNoKGxpbmUpIG9yCisJCSAgICB0ZXN0X21vZHVsZV9mYWlsLm1hdGNo
KGxpbmUpKToKKwkJCXByaW50X3dpdGhfdGltZXN0YW1wKERJVklERVIpCisJCQljb250aW51ZQor
CisJCW1hdGNoID0gcmUubWF0Y2godGVzdF9jYXNlX3N1Y2Nlc3MsIGxpbmUpCisJCWlmIG1hdGNo
OgorCQkJcHJpbnRfd2l0aF90aW1lc3RhbXAoZ3JlZW4oIltQQVNTRURdICIpICsKKwkJCQkJICAg
ICBnZXRfdGVzdF9uYW1lKG1hdGNoKSkKKwkJCWVuZF9vbmVfdGVzdChtYXRjaCwgY3VycmVudF9j
YXNlX2xvZykKKwkJCWNvbnRpbnVlCisKKwkJbWF0Y2ggPSByZS5tYXRjaCh0ZXN0X2Nhc2VfZmFp
bCwgbGluZSkKKwkJIyBDcmFzaGVkIHRlc3RzIHdpbGwgcmVwb3J0IGFzIGJvdGggZmFpbGVkIGFu
ZCBjcmFzaGVkLiBXZSBvbmx5CisJCSMgd2FudCB0byBzaG93IGFuZCBjb3VudCBpdCBvbmNlLgor
CQlpZiBtYXRjaCBhbmQgZ2V0X3Rlc3RfbmFtZShtYXRjaCkgbm90IGluIGNyYXNoZWRfdGVzdHM6
CisJCQlmYWlsZWRfdGVzdHMuYWRkKGdldF90ZXN0X25hbWUobWF0Y2gpKQorCQkJcHJpbnRfd2l0
aF90aW1lc3RhbXAocmVkKCJbRkFJTEVEXSAiICsKKwkJCQkJCSBnZXRfdGVzdF9uYW1lKG1hdGNo
KSkpCisJCQlwcmludF9sb2cobWFwKHllbGxvdywgY3VycmVudF9jYXNlX2xvZykpCisJCQlwcmlu
dF93aXRoX3RpbWVzdGFtcCgiIikKKwkJCWVuZF9vbmVfdGVzdChtYXRjaCwgY3VycmVudF9jYXNl
X2xvZykKKwkJCWNvbnRpbnVlCisKKwkJbWF0Y2ggPSByZS5tYXRjaCh0ZXN0X2Nhc2VfY3Jhc2gs
IGxpbmUpCisJCWlmIG1hdGNoOgorCQkJY3Jhc2hlZF90ZXN0cy5hZGQoZ2V0X3Rlc3RfbmFtZSht
YXRjaCkpCisJCQlwcmludF93aXRoX3RpbWVzdGFtcCh5ZWxsb3coIltDUkFTSF0gIiArCisJCQkJ
CQkgICAgZ2V0X3Rlc3RfbmFtZShtYXRjaCkpKQorCQkJcHJpbnRfbG9nKGN1cnJlbnRfY2FzZV9s
b2cpCisJCQlwcmludF93aXRoX3RpbWVzdGFtcCgiIikKKwkJCWVuZF9vbmVfdGVzdChtYXRjaCwg
Y3VycmVudF9jYXNlX2xvZykKKwkJCWNvbnRpbnVlCisKKwkJIyBTdHJpcCBvZmYgdGhlIGBrdW5p
dCBtb2R1bGUtbmFtZTpgIHByZWZpeAorCQltYXRjaCA9IHJlLm1hdGNoKHRlc3RfY2FzZV9vdXRw
dXQsIGxpbmUpCisJCWlmIG1hdGNoOgorCQkJY3VycmVudF9jYXNlX2xvZy5hcHBlbmQobWF0Y2gu
Z3JvdXAoMSkpCisJCWVsc2U6CisJCQljdXJyZW50X2Nhc2VfbG9nLmFwcGVuZChsaW5lKQorCisJ
Zm10ID0gZ3JlZW4gaWYgKGxlbihmYWlsZWRfdGVzdHMpICsgbGVuKGNyYXNoZWRfdGVzdHMpID09
IDApIGVsc2UgcmVkCisJcHJpbnRfd2l0aF90aW1lc3RhbXAoCisJCWZtdCgiVGVzdGluZyBjb21w
bGV0ZS4gJWQgdGVzdHMgcnVuLiAlZCBmYWlsZWQuICVkIGNyYXNoZWQuIiAlCisJCSAgICAobGVu
KHRvdGFsX3Rlc3RzKSwgbGVuKGZhaWxlZF90ZXN0cyksIGxlbihjcmFzaGVkX3Rlc3RzKSkpKQor
Ci0tIAoyLjIxLjAuNTkzLmc1MTFlYzM0NWUxOC1nb29nCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
