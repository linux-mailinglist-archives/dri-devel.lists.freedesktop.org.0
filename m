Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5F51C10E969
	for <lists+dri-devel@lfdr.de>; Mon,  2 Dec 2019 12:16:09 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 90DB36E18E;
	Mon,  2 Dec 2019 11:16:04 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E980A6E187
 for <dri-devel@lists.freedesktop.org>; Mon,  2 Dec 2019 11:16:02 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 53A02ABF4;
 Mon,  2 Dec 2019 11:16:01 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: kraxel@redhat.com, airlied@redhat.com, daniel.vetter@ffwll.ch,
 yc_chen@aspeedtech.com, sam@ravnborg.org
Subject: [PATCH v3 3/7] drm/ast: Clean up arguments of register functions
Date: Mon,  2 Dec 2019 12:15:53 +0100
Message-Id: <20191202111557.15176-4-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191202111557.15176-1-tzimmermann@suse.de>
References: <20191202111557.15176-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>, dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

SW4gcHJlcGFyYXRpb24gb2YgYW4gdXBkYXRlIG9mIHRoZSBwcmltYXJ5LXBsYW5lIGNvZGUsIHRo
aXMgcGF0Y2gKY2hhbmdlcyB0aGUgYXJndW1lbnRzIG9mIHNldmVyYWwgcmVnaXN0ZXItc2V0dGlu
ZyBmdW5jdGlvbnMuIE5vCmZ1bmN0aW9uYWwgY2hhbmdlcyBhcmUgbWFkZS4gVGhlIGZ1bmN0aW9u
IGFzdF9zZXRfZGFjX3JlZygpIGhhcyBubwplZmZlY3QgYW5kIHRoZXJlZm9yZSBnZXRzIHJlbW92
ZWQgZW50aXJlbHkuCgpTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgWmltbWVybWFubiA8dHppbW1lcm1h
bm5Ac3VzZS5kZT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vYXN0L2FzdF9tb2RlLmMgfCAxMDUgKysr
KysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNDMgaW5zZXJ0
aW9ucygrKSwgNjIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2Fz
dC9hc3RfbW9kZS5jIGIvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfbW9kZS5jCmluZGV4IDU0MmNm
NTJkZjkwYS4uODczNzU2Y2RiN2UyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYXN0L2Fz
dF9tb2RlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FzdC9hc3RfbW9kZS5jCkBAIC03MCw5ICs3
MCw4IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBhc3RfbG9hZF9wYWxldHRlX2luZGV4KHN0cnVjdCBh
c3RfcHJpdmF0ZSAqYXN0LAogCWFzdF9pb19yZWFkOChhc3QsIEFTVF9JT19TRVFfUE9SVCk7CiB9
CiAKLXN0YXRpYyB2b2lkIGFzdF9jcnRjX2xvYWRfbHV0KHN0cnVjdCBkcm1fY3J0YyAqY3J0YykK
K3N0YXRpYyB2b2lkIGFzdF9jcnRjX2xvYWRfbHV0KHN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0LCBz
dHJ1Y3QgZHJtX2NydGMgKmNydGMpCiB7Ci0Jc3RydWN0IGFzdF9wcml2YXRlICphc3QgPSBjcnRj
LT5kZXYtPmRldl9wcml2YXRlOwogCXUxNiAqciwgKmcsICpiOwogCWludCBpOwogCkBAIC04Nyw3
ICs4Niw3IEBAIHN0YXRpYyB2b2lkIGFzdF9jcnRjX2xvYWRfbHV0KHN0cnVjdCBkcm1fY3J0YyAq
Y3J0YykKIAkJYXN0X2xvYWRfcGFsZXR0ZV9pbmRleChhc3QsIGksICpyKysgPj4gOCwgKmcrKyA+
PiA4LCAqYisrID4+IDgpOwogfQogCi1zdGF0aWMgYm9vbCBhc3RfZ2V0X3ZiaW9zX21vZGVfaW5m
byhjb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKK3N0YXRpYyBib29sIGFzdF9nZXRf
dmJpb3NfbW9kZV9pbmZvKGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmZvcm1hdCwKIAkJ
CQkgICAgY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCiAJCQkJICAgIHN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlLAogCQkJCSAgICBzdHJ1Y3QgYXN0X3Zi
aW9zX21vZGVfaW5mbyAqdmJpb3NfbW9kZSkKQEAgLTk3LDcgKzk2LDcgQEAgc3RhdGljIGJvb2wg
YXN0X2dldF92Ymlvc19tb2RlX2luZm8oY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIs
CiAJdTMyIGhib3JkZXIsIHZib3JkZXI7CiAJYm9vbCBjaGVja19zeW5jOwogCi0Jc3dpdGNoIChm
Yi0+Zm9ybWF0LT5jcHBbMF0gKiA4KSB7CisJc3dpdGNoIChmb3JtYXQtPmNwcFswXSAqIDgpIHsK
IAljYXNlIDg6CiAJCXZiaW9zX21vZGUtPnN0ZF90YWJsZSA9ICZ2Ymlvc19zdGR0YWJsZVtWR0FN
b2RlSW5kZXhdOwogCQlicmVhazsKQEAgLTIwOSwxNCArMjA4LDEzIEBAIHN0YXRpYyBib29sIGFz
dF9nZXRfdmJpb3NfbW9kZV9pbmZvKGNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLAog
CXJldHVybiB0cnVlOwogfQogCi1zdGF0aWMgdm9pZCBhc3Rfc2V0X3ZiaW9zX2NvbG9yX3JlZyhz
dHJ1Y3QgZHJtX2NydGMgKmNydGMsCi0JCQkJICAgIGNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZm
ZXIgKmZiLAorc3RhdGljIHZvaWQgYXN0X3NldF92Ymlvc19jb2xvcl9yZWcoc3RydWN0IGFzdF9w
cml2YXRlICphc3QsCisJCQkJICAgIGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmZvcm1h
dCwKIAkJCQkgICAgY29uc3Qgc3RydWN0IGFzdF92Ymlvc19tb2RlX2luZm8gKnZiaW9zX21vZGUp
CiB7Ci0Jc3RydWN0IGFzdF9wcml2YXRlICphc3QgPSBjcnRjLT5kZXYtPmRldl9wcml2YXRlOwog
CXUzMiBjb2xvcl9pbmRleDsKIAotCXN3aXRjaCAoZmItPmZvcm1hdC0+Y3BwWzBdKSB7CisJc3dp
dGNoIChmb3JtYXQtPmNwcFswXSkgewogCWNhc2UgMToKIAkJY29sb3JfaW5kZXggPSBWR0FNb2Rl
SW5kZXggLSAxOwogCQlicmVhazsKQEAgLTIzNiwxNSArMjM0LDE0IEBAIHN0YXRpYyB2b2lkIGFz
dF9zZXRfdmJpb3NfY29sb3JfcmVnKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAogCWlmICh2Ymlv
c19tb2RlLT5lbmhfdGFibGUtPmZsYWdzICYgTmV3TW9kZUluZm8pIHsKIAkJYXN0X3NldF9pbmRl
eF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDkxLCAweGE4KTsKLQkJYXN0X3NldF9pbmRl
eF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDkyLCBmYi0+Zm9ybWF0LT5jcHBbMF0gKiA4
KTsKKwkJYXN0X3NldF9pbmRleF9yZWcoYXN0LCBBU1RfSU9fQ1JUQ19QT1JULCAweDkyLCBmb3Jt
YXQtPmNwcFswXSAqIDgpOwogCX0KIH0KIAotc3RhdGljIHZvaWQgYXN0X3NldF92Ymlvc19tb2Rl
X3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCitzdGF0aWMgdm9pZCBhc3Rfc2V0X3ZiaW9zX21v
ZGVfcmVnKHN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0LAogCQkJCSAgIGNvbnN0IHN0cnVjdCBkcm1f
ZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlLAogCQkJCSAgIGNvbnN0IHN0cnVjdCBhc3RfdmJp
b3NfbW9kZV9pbmZvICp2Ymlvc19tb2RlKQogewotCXN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0ID0g
Y3J0Yy0+ZGV2LT5kZXZfcHJpdmF0ZTsKIAl1MzIgcmVmcmVzaF9yYXRlX2luZGV4LCBtb2RlX2lk
OwogCiAJcmVmcmVzaF9yYXRlX2luZGV4ID0gdmJpb3NfbW9kZS0+ZW5oX3RhYmxlLT5yZWZyZXNo
X3JhdGVfaW5kZXg7CkBAIC0yNjUsMTAgKzI2MiwxMCBAQCBzdGF0aWMgdm9pZCBhc3Rfc2V0X3Zi
aW9zX21vZGVfcmVnKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAl9CiB9CiAKLXN0YXRpYyB2b2lk
IGFzdF9zZXRfc3RkX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsIHN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICptb2RlLAorc3RhdGljIHZvaWQgYXN0X3NldF9zdGRfcmVnKHN0cnVjdCBhc3RfcHJp
dmF0ZSAqYXN0LAorCQkJICAgIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlLAogCQkJICAg
IHN0cnVjdCBhc3RfdmJpb3NfbW9kZV9pbmZvICp2Ymlvc19tb2RlKQogewotCXN0cnVjdCBhc3Rf
cHJpdmF0ZSAqYXN0ID0gY3J0Yy0+ZGV2LT5kZXZfcHJpdmF0ZTsKIAljb25zdCBzdHJ1Y3QgYXN0
X3ZiaW9zX3N0ZHRhYmxlICpzdGR0YWJsZTsKIAl1MzIgaTsKIAl1OCBqcmVnOwpAQCAtMzEzLDEw
ICszMTAsMTAgQEAgc3RhdGljIHZvaWQgYXN0X3NldF9zdGRfcmVnKHN0cnVjdCBkcm1fY3J0YyAq
Y3J0Yywgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUKIAkJYXN0X3NldF9pbmRleF9yZWco
YXN0LCBBU1RfSU9fR1JfUE9SVCwgaSwgc3RkdGFibGUtPmdyW2ldKTsKIH0KIAotc3RhdGljIHZv
aWQgYXN0X3NldF9jcnRjX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsIHN0cnVjdCBkcm1fZGlz
cGxheV9tb2RlICptb2RlLAorc3RhdGljIHZvaWQgYXN0X3NldF9jcnRjX3JlZyhzdHJ1Y3QgYXN0
X3ByaXZhdGUgKmFzdCwKKwkJCSAgICAgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCiAJ
CQkgICAgIHN0cnVjdCBhc3RfdmJpb3NfbW9kZV9pbmZvICp2Ymlvc19tb2RlKQogewotCXN0cnVj
dCBhc3RfcHJpdmF0ZSAqYXN0ID0gY3J0Yy0+ZGV2LT5kZXZfcHJpdmF0ZTsKIAl1OCBqcmVnMDUg
PSAwLCBqcmVnMDcgPSAwLCBqcmVnMDkgPSAwLCBqcmVnQUMgPSAwLCBqcmVnQUQgPSAwLCBqcmVn
QUUgPSAwOwogCXUxNiB0ZW1wLCBwcmVjYWNoZSA9IDA7CiAKQEAgLTQyMiwxMSArNDE5LDkgQEAg
c3RhdGljIHZvaWQgYXN0X3NldF9jcnRjX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsIHN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICptb2QKIAlhc3Rfc2V0X2luZGV4X3JlZ19tYXNrKGFzdCwgQVNU
X0lPX0NSVENfUE9SVCwgMHgxMSwgMHg3ZiwgMHg4MCk7CiB9CiAKLXN0YXRpYyB2b2lkIGFzdF9z
ZXRfb2Zmc2V0X3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMpCitzdGF0aWMgdm9pZCBhc3Rfc2V0
X29mZnNldF9yZWcoc3RydWN0IGFzdF9wcml2YXRlICphc3QsCisJCQkgICAgICAgc3RydWN0IGRy
bV9mcmFtZWJ1ZmZlciAqZmIpCiB7Ci0Jc3RydWN0IGFzdF9wcml2YXRlICphc3QgPSBjcnRjLT5k
ZXYtPmRldl9wcml2YXRlOwotCWNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gY3J0
Yy0+cHJpbWFyeS0+c3RhdGUtPmZiOwotCiAJdTE2IG9mZnNldDsKIAogCW9mZnNldCA9IGZiLT5w
aXRjaGVzWzBdID4+IDM7CkBAIC00MzQsMTAgKzQyOSwxMCBAQCBzdGF0aWMgdm9pZCBhc3Rfc2V0
X29mZnNldF9yZWcoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCWFzdF9zZXRfaW5kZXhfcmVnKGFz
dCwgQVNUX0lPX0NSVENfUE9SVCwgMHhiMCwgKG9mZnNldCA+PiA4KSAmIDB4M2YpOwogfQogCi1z
dGF0aWMgdm9pZCBhc3Rfc2V0X2RjbGtfcmVnKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICptb2RlLAorc3RhdGljIHZvaWQgYXN0X3NldF9kY2xrX3JlZyhz
dHJ1Y3QgYXN0X3ByaXZhdGUgKmFzdCwKKwkJCSAgICAgc3RydWN0IGRybV9kaXNwbGF5X21vZGUg
Km1vZGUsCiAJCQkgICAgIHN0cnVjdCBhc3RfdmJpb3NfbW9kZV9pbmZvICp2Ymlvc19tb2RlKQog
ewotCXN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAljb25zdCBz
dHJ1Y3QgYXN0X3ZiaW9zX2RjbGtfaW5mbyAqY2xrX2luZm87CiAKIAlpZiAoYXN0LT5jaGlwID09
IEFTVDI1MDApCkBAIC00NTIsMTMgKzQ0NywxMiBAQCBzdGF0aWMgdm9pZCBhc3Rfc2V0X2RjbGtf
cmVnKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptbwog
CQkJICAgICAgICgoY2xrX2luZm8tPnBhcmFtMyAmIDB4MykgPDwgNCkpOwogfQogCi1zdGF0aWMg
dm9pZCBhc3Rfc2V0X2NvbG9yX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCi0JCQkgICAgICBj
b25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYikKK3N0YXRpYyB2b2lkIGFzdF9zZXRfY29s
b3JfcmVnKHN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0LAorCQkJICAgICAgY29uc3Qgc3RydWN0IGRy
bV9mb3JtYXRfaW5mbyAqZm9ybWF0KQogewotCXN0cnVjdCBhc3RfcHJpdmF0ZSAqYXN0ID0gY3J0
Yy0+ZGV2LT5kZXZfcHJpdmF0ZTsKIAl1OCBqcmVnQTAgPSAwLCBqcmVnQTMgPSAwLCBqcmVnQTgg
PSAwOwogCi0Jc3dpdGNoIChmYi0+Zm9ybWF0LT5jcHBbMF0gKiA4KSB7CisJc3dpdGNoIChmb3Jt
YXQtPmNwcFswXSAqIDgpIHsKIAljYXNlIDg6CiAJCWpyZWdBMCA9IDB4NzA7CiAJCWpyZWdBMyA9
IDB4MDE7CkBAIC00ODIsMTAgKzQ3Niw4IEBAIHN0YXRpYyB2b2lkIGFzdF9zZXRfY29sb3JfcmVn
KHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAlhc3Rfc2V0X2luZGV4X3JlZ19tYXNrKGFzdCwgQVNU
X0lPX0NSVENfUE9SVCwgMHhhOCwgMHhmZCwganJlZ0E4KTsKIH0KIAotc3RhdGljIHZvaWQgYXN0
X3NldF9jcnR0aGRfcmVnKHN0cnVjdCBkcm1fY3J0YyAqY3J0YykKK3N0YXRpYyB2b2lkIGFzdF9z
ZXRfY3J0dGhkX3JlZyhzdHJ1Y3QgYXN0X3ByaXZhdGUgKmFzdCkKIHsKLQlzdHJ1Y3QgYXN0X3By
aXZhdGUgKmFzdCA9IGNydGMtPmRldi0+ZGV2X3ByaXZhdGU7Ci0KIAkvKiBTZXQgVGhyZXNob2xk
ICovCiAJaWYgKGFzdC0+Y2hpcCA9PSBBU1QyMzAwIHx8IGFzdC0+Y2hpcCA9PSBBU1QyNDAwIHx8
CiAJICAgIGFzdC0+Y2hpcCA9PSBBU1QyNTAwKSB7CkBAIC01MDMsMTAgKzQ5NSwxMCBAQCBzdGF0
aWMgdm9pZCBhc3Rfc2V0X2NydHRoZF9yZWcoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCX0KIH0K
IAotc3RhdGljIHZvaWQgYXN0X3NldF9zeW5jX3JlZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKK3N0YXRpYyB2b2lkIGFzdF9zZXRfc3luY19y
ZWcoc3RydWN0IGFzdF9wcml2YXRlICphc3QsCisJCQkgICAgIHN0cnVjdCBkcm1fZGlzcGxheV9t
b2RlICptb2RlLAogCQkJICAgICBzdHJ1Y3QgYXN0X3ZiaW9zX21vZGVfaW5mbyAqdmJpb3NfbW9k
ZSkKIHsKLQlzdHJ1Y3QgYXN0X3ByaXZhdGUgKmFzdCA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJdTgg
anJlZzsKIAogCWpyZWcgID0gYXN0X2lvX3JlYWQ4KGFzdCwgQVNUX0lPX01JU0NfUE9SVF9SRUFE
KTsKQEAgLTUxNiwyMyArNTA4LDkgQEAgc3RhdGljIHZvaWQgYXN0X3NldF9zeW5jX3JlZyhzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW8KIAlhc3RfaW9f
d3JpdGU4KGFzdCwgQVNUX0lPX01JU0NfUE9SVF9XUklURSwganJlZyk7CiB9CiAKLXN0YXRpYyBi
b29sIGFzdF9zZXRfZGFjX3JlZyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsIHN0cnVjdCBkcm1fZGlz
cGxheV9tb2RlICptb2RlLAotCQkgICAgIHN0cnVjdCBhc3RfdmJpb3NfbW9kZV9pbmZvICp2Ymlv
c19tb2RlKQorc3RhdGljIHZvaWQgYXN0X3NldF9zdGFydF9hZGRyZXNzX2NydDEoc3RydWN0IGFz
dF9wcml2YXRlICphc3QsCisJCQkJICAgICAgIHVuc2lnbmVkIG9mZnNldCkKIHsKLQljb25zdCBz
dHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9IGNydGMtPnByaW1hcnktPnN0YXRlLT5mYjsKLQot
CXN3aXRjaCAoZmItPmZvcm1hdC0+Y3BwWzBdICogOCkgewotCWNhc2UgODoKLQkJYnJlYWs7Ci0J
ZGVmYXVsdDoKLQkJcmV0dXJuIGZhbHNlOwotCX0KLQlyZXR1cm4gdHJ1ZTsKLX0KLQotc3RhdGlj
IHZvaWQgYXN0X3NldF9zdGFydF9hZGRyZXNzX2NydDEoc3RydWN0IGRybV9jcnRjICpjcnRjLCB1
bnNpZ25lZCBvZmZzZXQpCi17Ci0Jc3RydWN0IGFzdF9wcml2YXRlICphc3QgPSBjcnRjLT5kZXYt
PmRldl9wcml2YXRlOwogCXUzMiBhZGRyOwogCiAJYWRkciA9IG9mZnNldCA+PiAyOwpAQCAtNTYz
LDcgKzU0MSw2IEBAIHZvaWQgYXN0X3ByaW1hcnlfcGxhbmVfaGVscGVyX2F0b21pY191cGRhdGUo
c3RydWN0IGRybV9wbGFuZSAqcGxhbmUsCiB7CiAJc3RydWN0IGFzdF9wcml2YXRlICphc3QgPSBw
bGFuZS0+ZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpzdGF0ZSA9
IHBsYW5lLT5zdGF0ZTsKLQlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBzdGF0ZS0+Y3J0YzsKIAlz
dHJ1Y3QgZHJtX2dlbV92cmFtX29iamVjdCAqZ2JvOwogCXM2NCBncHVfYWRkcjsKIApAQCAtNTcy
LDggKzU0OSw4IEBAIHZvaWQgYXN0X3ByaW1hcnlfcGxhbmVfaGVscGVyX2F0b21pY191cGRhdGUo
c3RydWN0IGRybV9wbGFuZSAqcGxhbmUsCiAJaWYgKFdBUk5fT05fT05DRShncHVfYWRkciA8IDAp
KQogCQlyZXR1cm47IC8qIEJ1Zzogd2UgZGlkbid0IHBpbiB0aGUgQk8gdG8gVlJBTSBpbiBwcmVw
YXJlX2ZiLiAqLwogCi0JYXN0X3NldF9vZmZzZXRfcmVnKGNydGMpOwotCWFzdF9zZXRfc3RhcnRf
YWRkcmVzc19jcnQxKGNydGMsICh1MzIpZ3B1X2FkZHIpOworCWFzdF9zZXRfb2Zmc2V0X3JlZyhh
c3QsIHN0YXRlLT5mYik7CisJYXN0X3NldF9zdGFydF9hZGRyZXNzX2NydDEoYXN0LCAodTMyKWdw
dV9hZGRyKTsKIAogCWFzdF9zZXRfaW5kZXhfcmVnX21hc2soYXN0LCBBU1RfSU9fU0VRX1BPUlQs
IDB4MSwgMHhkZiwgMHgwMCk7CiB9CkBAIC03NTQsNyArNzMxLDcgQEAgc3RhdGljIHZvaWQgYXN0
X2NydGNfZHBtcyhzdHJ1Y3QgZHJtX2NydGMgKmNydGMsIGludCBtb2RlKQogCWNhc2UgRFJNX01P
REVfRFBNU19TVVNQRU5EOgogCQlpZiAoYXN0LT50eF9jaGlwX3R5cGUgPT0gQVNUX1RYX0RQNTAx
KQogCQkJYXN0X3NldF9kcDUwMV92aWRlb19vdXRwdXQoY3J0Yy0+ZGV2LCAxKTsKLQkJYXN0X2Ny
dGNfbG9hZF9sdXQoY3J0Yyk7CisJCWFzdF9jcnRjX2xvYWRfbHV0KGFzdCwgY3J0Yyk7CiAJCWJy
ZWFrOwogCWNhc2UgRFJNX01PREVfRFBNU19PRkY6CiAJCWlmIChhc3QtPnR4X2NoaXBfdHlwZSA9
PSBBU1RfVFhfRFA1MDEpCkBAIC03ODAsOCArNzU3LDkgQEAgc3RhdGljIGludCBhc3RfY3J0Y19o
ZWxwZXJfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAlwbGFuZV9zdGF0ZSA9
IGNydGMtPnByaW1hcnktPnN0YXRlOwogCiAJaWYgKHBsYW5lX3N0YXRlICYmIHBsYW5lX3N0YXRl
LT5mYikgewotCQlzdWNjID0gYXN0X2dldF92Ymlvc19tb2RlX2luZm8ocGxhbmVfc3RhdGUtPmZi
LCAmc3RhdGUtPm1vZGUsCi0JCQkJCSAgICAgICAmYWRqdXN0ZWRfbW9kZSwgJnZiaW9zX21vZGUp
OworCQlzdWNjID0gYXN0X2dldF92Ymlvc19tb2RlX2luZm8ocGxhbmVfc3RhdGUtPmZiLT5mb3Jt
YXQsCisJCQkJCSAgICAgICAmc3RhdGUtPm1vZGUsICZhZGp1c3RlZF9tb2RlLAorCQkJCQkgICAg
ICAgJnZiaW9zX21vZGUpOwogCQlpZiAoIXN1Y2MpCiAJCQlyZXR1cm4gLUVJTlZBTDsKIAl9CkBA
IC04MDMsNiArNzgxLDcgQEAgc3RhdGljIHZvaWQgYXN0X2NydGNfaGVscGVyX2F0b21pY19mbHVz
aChzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMt
PmRldjsKIAlzdHJ1Y3QgYXN0X3ByaXZhdGUgKmFzdCA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJY29u
c3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBjcnRjLT5wcmltYXJ5LT5zdGF0ZS0+ZmI7
CisJY29uc3Qgc3RydWN0IGRybV9mb3JtYXRfaW5mbyAqZm9ybWF0OwogCXN0cnVjdCBkcm1fZGlz
cGxheV9tb2RlIGFkanVzdGVkX21vZGU7CiAJc3RydWN0IGFzdF92Ymlvc19tb2RlX2luZm8gdmJp
b3NfbW9kZTsKIAlib29sIHN1Y2M7CkBAIC04MTIsMjggKzc5MSwzMCBAQCBzdGF0aWMgdm9pZCBh
c3RfY3J0Y19oZWxwZXJfYXRvbWljX2ZsdXNoKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAlpZiAo
IWZiKQogCQlyZXR1cm47CiAKKwlmb3JtYXQgPSBmYi0+Zm9ybWF0OworCiAJbWVtc2V0KCZhZGp1
c3RlZF9tb2RlLCAwLCBzaXplb2YoYWRqdXN0ZWRfbW9kZSkpOwogCWRybV9tb2RlX2NvcHkoJmFk
anVzdGVkX21vZGUsICZjcnRjLT5zdGF0ZS0+YWRqdXN0ZWRfbW9kZSk7CiAKLQlzdWNjID0gYXN0
X2dldF92Ymlvc19tb2RlX2luZm8oZmIsICZjcnRjLT5zdGF0ZS0+YWRqdXN0ZWRfbW9kZSwKKwlz
dWNjID0gYXN0X2dldF92Ymlvc19tb2RlX2luZm8oZm9ybWF0LAorCQkJCSAgICAgICAmY3J0Yy0+
c3RhdGUtPmFkanVzdGVkX21vZGUsCiAJCQkJICAgICAgICZhZGp1c3RlZF9tb2RlLCAmdmJpb3Nf
bW9kZSk7CiAJaWYgKFdBUk5fT05fT05DRSghc3VjYykpCiAJCXJldHVybjsgLyogQlVHOiBkaWRu
J3QgdmFsaWRhdGUgdGhpcyBpbiBhdG9taWNfY2hlY2soKSAqLwogCi0JYXN0X3NldF9jb2xvcl9y
ZWcoY3J0YywgZmIpOwotCWFzdF9zZXRfdmJpb3NfY29sb3JfcmVnKGNydGMsIGZiLCAmdmJpb3Nf
bW9kZSk7CisJYXN0X3NldF9jb2xvcl9yZWcoYXN0LCBmb3JtYXQpOworCWFzdF9zZXRfdmJpb3Nf
Y29sb3JfcmVnKGFzdCwgZm9ybWF0LCAmdmJpb3NfbW9kZSk7CiAKIAlpZiAoIWNydGMtPnN0YXRl
LT5tb2RlX2NoYW5nZWQpCiAJCXJldHVybjsKIAotCWFzdF9zZXRfdmJpb3NfbW9kZV9yZWcoY3J0
YywgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKKwlhc3Rfc2V0X3ZiaW9zX21vZGVfcmVn
KGFzdCwgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKIAlhc3Rfc2V0X2luZGV4X3JlZyhh
c3QsIEFTVF9JT19DUlRDX1BPUlQsIDB4YTEsIDB4MDYpOwotCWFzdF9zZXRfc3RkX3JlZyhjcnRj
LCAmYWRqdXN0ZWRfbW9kZSwgJnZiaW9zX21vZGUpOwotCWFzdF9zZXRfY3J0Y19yZWcoY3J0Yywg
JmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKLQlhc3Rfc2V0X2RjbGtfcmVnKGRldiwgJmFk
anVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKLQlhc3Rfc2V0X2NydHRoZF9yZWcoY3J0Yyk7Ci0J
YXN0X3NldF9zeW5jX3JlZyhkZXYsICZhZGp1c3RlZF9tb2RlLCAmdmJpb3NfbW9kZSk7Ci0JYXN0
X3NldF9kYWNfcmVnKGNydGMsICZhZGp1c3RlZF9tb2RlLCAmdmJpb3NfbW9kZSk7CisJYXN0X3Nl
dF9zdGRfcmVnKGFzdCwgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKKwlhc3Rfc2V0X2Ny
dGNfcmVnKGFzdCwgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKKwlhc3Rfc2V0X2RjbGtf
cmVnKGFzdCwgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19tb2RlKTsKKwlhc3Rfc2V0X2NydHRoZF9y
ZWcoYXN0KTsKKwlhc3Rfc2V0X3N5bmNfcmVnKGFzdCwgJmFkanVzdGVkX21vZGUsICZ2Ymlvc19t
b2RlKTsKIH0KIAogc3RhdGljIHZvaWQKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2
ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21h
aWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
