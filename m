Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C65AE47A83
	for <lists+dri-devel@lfdr.de>; Mon, 17 Jun 2019 09:14:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id ED7458918A;
	Mon, 17 Jun 2019 07:13:45 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0b-001b2d01.pphosted.com
 [148.163.158.5])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 439B089169
 for <dri-devel@lists.freedesktop.org>; Mon, 17 Jun 2019 03:04:23 +0000 (UTC)
Received: from pps.filterd (m0098419.ppops.net [127.0.0.1])
 by mx0b-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x5H2743E103089
 for <dri-devel@lists.freedesktop.org>; Sun, 16 Jun 2019 22:07:07 -0400
Received: from e06smtp02.uk.ibm.com (e06smtp02.uk.ibm.com [195.75.94.98])
 by mx0b-001b2d01.pphosted.com with ESMTP id 2t5vdufeqb-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Sun, 16 Jun 2019 22:07:06 -0400
Received: from localhost
 by e06smtp02.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Mon, 17 Jun 2019 03:06:52 +0100
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
 by e06smtp02.uk.ibm.com (192.168.101.132) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Mon, 17 Jun 2019 03:06:44 +0100
Received: from d06av21.portsmouth.uk.ibm.com (d06av21.portsmouth.uk.ibm.com
 [9.149.105.232])
 by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x5H26hnJ63242362
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Mon, 17 Jun 2019 02:06:43 GMT
Received: from d06av21.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 2930C52059;
 Mon, 17 Jun 2019 02:06:43 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by d06av21.portsmouth.uk.ibm.com (Postfix) with ESMTP id 924825204E;
 Mon, 17 Jun 2019 02:06:42 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 7FC7BA0208;
 Mon, 17 Jun 2019 12:06:41 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v3 4/7] lib/hexdump.c: Replace ascii bool in
 hex_dump_to_buffer with flags
Date: Mon, 17 Jun 2019 12:04:27 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190617020430.8708-1-alastair@au1.ibm.com>
References: <20190617020430.8708-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19061702-0008-0000-0000-000002F449E1
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19061702-0009-0000-0000-000022615945
Message-Id: <20190617020430.8708-5-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-06-17_01:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1906170019
X-Mailman-Approved-At: Mon, 17 Jun 2019 07:13:33 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpJbiBvcmRlciB0
byBzdXBwb3J0IGFkZGl0aW9uYWwgZmVhdHVyZXMgaW4gaGV4X2R1bXBfdG9fYnVmZmVyLCByZXBs
YWNlCnRoZSBhc2NpaSBib29sIHBhcmFtZXRlciB3aXRoIGZsYWdzLgoKU2lnbmVkLW9mZi1ieTog
QWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2lz
ZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMgICAgICAgICAgIHwgIDYgKysrKy0tCiBkcml2
ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRy
aXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMgICAgICAgICAgfCAgMiArLQog
ZHJpdmVycy9uZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdjLXhsZ21hYy1jb21tb24uYyB8ICAyICst
CiBkcml2ZXJzL25ldC93aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMgICAgICAgICAgIHwgIDMg
KystCiBkcml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2FjeS8zOTQ1LW1hYy5jICAgIHwg
IDIgKy0KIGRyaXZlcnMvcGxhdGZvcm0vY2hyb21lL3dpbGNvX2VjL2RlYnVnZnMuYyAgICAgICAg
fCAgMiArLQogZHJpdmVycy9zY3NpL3Njc2lfbG9nZ2luZy5jICAgICAgICAgICAgICAgICAgICAg
ICB8ICA4ICsrKy0tLS0tCiBkcml2ZXJzL3N0YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jICAgICAg
ICAgICAgICAgIHwgIDIgKy0KIGZzL3NlcV9maWxlLmMgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgMyArKy0KIGluY2x1ZGUvbGludXgvcHJpbnRrLmggICAgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgOCArKysrLS0tLQogbGliL2hleGR1bXAuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8IDE1ICsrKysrKysrLS0tLS0tLQogbGliL3Rlc3RfaGV4
ZHVtcC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA1ICsrKy0tCiAxNCBmaWxl
cyBjaGFuZ2VkLCAzMyBpbnNlcnRpb25zKCspLCAyOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IGVlYTliZWMwNGYxYi4uNWRmNWZmZmRiODQ4
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtMTM0MCw3ICsxMzQw
LDcgQEAgc3RhdGljIHZvaWQgaGV4ZHVtcChzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0sIGNvbnN0IHZv
aWQgKmJ1Ziwgc2l6ZV90IGxlbikKIAkJV0FSTl9PTl9PTkNFKGhleF9kdW1wX3RvX2J1ZmZlcihi
dWYgKyBwb3MsIGxlbiAtIHBvcywKIAkJCQkJCXJvd3NpemUsIHNpemVvZih1MzIpLAogCQkJCQkJ
bGluZSwgc2l6ZW9mKGxpbmUpLAotCQkJCQkJZmFsc2UpID49IHNpemVvZihsaW5lKSk7CisJCQkJ
CQkwKSA+PSBzaXplb2YobGluZSkpOwogCQlkcm1fcHJpbnRmKG0sICJbJTA0enhdICVzXG4iLCBw
b3MsIGxpbmUpOwogCiAJCXByZXYgPSBidWYgKyBwb3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lz
ZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMgYi9kcml2ZXJzL2lzZG4vaGFyZHdhcmUvbUlT
RE4vbUlTRE5pc2FyLmMKaW5kZXggZmQ1YzUyZjM3ODAyLi5jY2MwZWU5ZDg5NGYgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvaXNkbi9oYXJkd2FyZS9tSVNETi9tSVNETmlzYXIuYworKysgYi9kcml2ZXJz
L2lzZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMKQEAgLTcxLDcgKzcxLDggQEAgc2VuZF9t
Ym94KHN0cnVjdCBpc2FyX2h3ICppc2FyLCB1OCBoaXMsIHU4IGNyZWcsIHU4IGxlbiwgdTggKm1z
ZykKIAogCQkJd2hpbGUgKGwgPCAoaW50KWxlbikgewogCQkJCWhleF9kdW1wX3RvX2J1ZmZlciht
c2cgKyBsLCBsZW4gLSBsLCAzMiwgMSwKLQkJCQkJCSAgIGlzYXItPmxvZywgMjU2LCAxKTsKKwkJ
CQkJCSAgIGlzYXItPmxvZywgMjU2LAorCQkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQkJcHJf
ZGVidWcoIiVzOiAlcyAlMDJ4OiAlc1xuIiwgaXNhci0+bmFtZSwKIAkJCQkJIF9fZnVuY19fLCBs
LCBpc2FyLT5sb2cpOwogCQkJCWwgKz0gMzI7CkBAIC0xMDAsNyArMTAxLDggQEAgcmN2X21ib3go
c3RydWN0IGlzYXJfaHcgKmlzYXIsIHU4ICptc2cpCiAKIAkJCXdoaWxlIChsIDwgKGludClpc2Fy
LT5jbHNiKSB7CiAJCQkJaGV4X2R1bXBfdG9fYnVmZmVyKG1zZyArIGwsIGlzYXItPmNsc2IgLSBs
LCAzMiwKLQkJCQkJCSAgIDEsIGlzYXItPmxvZywgMjU2LCAxKTsKKwkJCQkJCSAgIDEsIGlzYXIt
PmxvZywgMjU2LAorCQkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQkJcHJfZGVidWcoIiVzOiAl
cyAlMDJ4OiAlc1xuIiwgaXNhci0+bmFtZSwKIAkJCQkJIF9fZnVuY19fLCBsLCBpc2FyLT5sb2cp
OwogCQkJCWwgKz0gMzI7CmRpZmYgLS1naXQgYS9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0
LmMgYi9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMKaW5kZXggNDU1NWQ2NzhmYWRkLi4y
M2MzZmJhZmRjYjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbWFpbGJveC9tYWlsYm94LXRlc3QuYwor
KysgYi9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMKQEAgLTIwOSw3ICsyMDksNyBAQCBz
dGF0aWMgc3NpemVfdCBtYm94X3Rlc3RfbWVzc2FnZV9yZWFkKHN0cnVjdCBmaWxlICpmaWxwLCBj
aGFyIF9fdXNlciAqdXNlcmJ1ZiwKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKHB0ciwKIAkJCQkgICBN
Qk9YX0JZVEVTX1BFUl9MSU5FLAogCQkJCSAgIE1CT1hfQllURVNfUEVSX0xJTkUsIDEsIHRvdXNl
ciArIGwsCi0JCQkJICAgTUJPWF9IRVhEVU1QX0xJTkVfTEVOLCB0cnVlKTsKKwkJCQkgICBNQk9Y
X0hFWERVTVBfTElORV9MRU4sIEhFWERVTVBfQVNDSUkpOwogCiAJCXB0ciArPSBNQk9YX0JZVEVT
X1BFUl9MSU5FOwogCQlsICs9IE1CT1hfSEVYRFVNUF9MSU5FX0xFTjsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMgYi9kcml2ZXJzL25ldC9ldGhl
cm5ldC9hbWQveGdiZS94Z2JlLWRydi5jCmluZGV4IDNkZDBjZWNkZGJhOC4uMWUyNjQxMGNmNmMy
IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9hbWQveGdiZS94Z2JlLWRydi5jCisr
KyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMKQEAgLTI5OTIsNyAr
Mjk5Miw3IEBAIHZvaWQgeGdiZV9wcmludF9wa3Qoc3RydWN0IG5ldF9kZXZpY2UgKm5ldGRldiwg
c3RydWN0IHNrX2J1ZmYgKnNrYiwgYm9vbCB0eF9yeCkKIAkJdW5zaWduZWQgaW50IGxlbiA9IG1p
bihza2ItPmxlbiAtIGksIDMyVSk7CiAKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKCZza2ItPmRhdGFb
aV0sIGxlbiwgMzIsIDEsCi0JCQkJICAgYnVmZmVyLCBzaXplb2YoYnVmZmVyKSwgZmFsc2UpOwor
CQkJCSAgIGJ1ZmZlciwgc2l6ZW9mKGJ1ZmZlciksIDApOwogCQluZXRkZXZfZGJnKG5ldGRldiwg
IiAgJSMwNng6ICVzXG4iLCBpLCBidWZmZXIpOwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdjLXhsZ21hYy1jb21tb24uYyBiL2RyaXZlcnMvbmV0L2V0
aGVybmV0L3N5bm9wc3lzL2R3Yy14bGdtYWMtY29tbW9uLmMKaW5kZXggZWIxYzZiMDNjMzI5Li5i
ODBhZGZhMWY4OTAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L3N5bm9wc3lzL2R3
Yy14bGdtYWMtY29tbW9uLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdj
LXhsZ21hYy1jb21tb24uYwpAQCAtMzQ5LDcgKzM0OSw3IEBAIHZvaWQgeGxnbWFjX3ByaW50X3Br
dChzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2LAogCQl1bnNpZ25lZCBpbnQgbGVuID0gbWluKHNr
Yi0+bGVuIC0gaSwgMzJVKTsKIAogCQloZXhfZHVtcF90b19idWZmZXIoJnNrYi0+ZGF0YVtpXSwg
bGVuLCAzMiwgMSwKLQkJCQkgICBidWZmZXIsIHNpemVvZihidWZmZXIpLCBmYWxzZSk7CisJCQkJ
ICAgYnVmZmVyLCBzaXplb2YoYnVmZmVyKSwgMCk7CiAJCW5ldGRldl9kYmcobmV0ZGV2LCAiICAl
IzA2eDogJXNcbiIsIGksIGJ1ZmZlcik7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC93
aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMgYi9kcml2ZXJzL25ldC93aXJlbGVzcy9hdGgvYXRo
MTBrL2RlYnVnLmMKaW5kZXggMzJkOTY3YTMxYzY1Li40Yzk5ZWEwMzIyNmQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L3dpcmVsZXNzL2F0aC9hdGgxMGsvZGVidWcuYworKysgYi9kcml2ZXJzL25l
dC93aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMKQEAgLTI2NjIsNyArMjY2Miw4IEBAIHZvaWQg
YXRoMTBrX2RiZ19kdW1wKHN0cnVjdCBhdGgxMGsgKmFyLAogCQkJCQkJKHVuc2lnbmVkIGludCko
cHRyIC0gYnVmKSk7CiAJCQloZXhfZHVtcF90b19idWZmZXIocHRyLCBsZW4gLSAocHRyIC0gYnVm
KSwgMTYsIDEsCiAJCQkJCSAgIGxpbmVidWYgKyBsaW5lYnVmbGVuLAotCQkJCQkgICBzaXplb2Yo
bGluZWJ1ZikgLSBsaW5lYnVmbGVuLCB0cnVlKTsKKwkJCQkJICAgc2l6ZW9mKGxpbmVidWYpIC0g
bGluZWJ1ZmxlbiwKKwkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQlkZXZfcHJpbnRrKEtFUk5f
REVCVUcsIGFyLT5kZXYsICIlc1xuIiwgbGluZWJ1Zik7CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2FjeS8zOTQ1LW1hYy5jIGIvZHJpdmVycy9u
ZXQvd2lyZWxlc3MvaW50ZWwvaXdsZWdhY3kvMzk0NS1tYWMuYwppbmRleCBiODJkYTc1YTlhZTMu
LjgxYzRiMTc4NTI3YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvd2lyZWxlc3MvaW50ZWwvaXds
ZWdhY3kvMzk0NS1tYWMuYworKysgYi9kcml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2Fj
eS8zOTQ1LW1hYy5jCkBAIC0zMjMyLDcgKzMyMzIsNyBAQCBpbDM5NDVfc2hvd19tZWFzdXJlbWVu
dChzdHJ1Y3QgZGV2aWNlICpkLCBzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSAqYXR0ciwKIAogCXdo
aWxlIChzaXplICYmIFBBR0VfU0laRSAtIGxlbikgewogCQloZXhfZHVtcF90b19idWZmZXIoZGF0
YSArIG9mcywgc2l6ZSwgMTYsIDEsIGJ1ZiArIGxlbiwKLQkJCQkgICBQQUdFX1NJWkUgLSBsZW4s
IHRydWUpOworCQkJCSAgIFBBR0VfU0laRSAtIGxlbiwgSEVYRFVNUF9BU0NJSSk7CiAJCWxlbiA9
IHN0cmxlbihidWYpOwogCQlpZiAoUEFHRV9TSVpFIC0gbGVuKQogCQkJYnVmW2xlbisrXSA9ICdc
bic7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxjb19lYy9kZWJ1Z2Zz
LmMgYi9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxjb19lYy9kZWJ1Z2ZzLmMKaW5kZXggZjE2
MzQ3NmQwODBkLi5jNTNiMTg1MzlmNTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcGxhdGZvcm0vY2hy
b21lL3dpbGNvX2VjL2RlYnVnZnMuYworKysgYi9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxj
b19lYy9kZWJ1Z2ZzLmMKQEAgLTE0OCw3ICsxNDgsNyBAQCBzdGF0aWMgc3NpemVfdCByYXdfcmVh
ZChzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBfX3VzZXIgKnVzZXJfYnVmLCBzaXplX3QgY291bnQs
CiAJCQkJCSAgICAgZGVidWdfaW5mby0+cmVzcG9uc2Vfc2l6ZSwKIAkJCQkJICAgICAxNiwgMSwg
ZGVidWdfaW5mby0+Zm9ybWF0dGVkX2RhdGEsCiAJCQkJCSAgICAgc2l6ZW9mKGRlYnVnX2luZm8t
PmZvcm1hdHRlZF9kYXRhKSwKLQkJCQkJICAgICB0cnVlKTsKKwkJCQkJICAgICBIRVhEVU1QX0FT
Q0lJKTsKIAkJLyogT25seSByZXR1cm4gcmVzcG9uc2UgdGhlIGZpcnN0IHRpbWUgaXQgaXMgcmVh
ZCAqLwogCQlkZWJ1Z19pbmZvLT5yZXNwb25zZV9zaXplID0gMDsKIAl9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL3Njc2kvc2NzaV9sb2dnaW5nLmMgYi9kcml2ZXJzL3Njc2kvc2NzaV9sb2dnaW5nLmMK
aW5kZXggMzliOGNjNDU3NGI0Li5jN2YzZWI0MWQzMmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvc2Nz
aS9zY3NpX2xvZ2dpbmcuYworKysgYi9kcml2ZXJzL3Njc2kvc2NzaV9sb2dnaW5nLmMKQEAgLTI2
Miw3ICsyNjIsNyBAQCB2b2lkIHNjc2lfcHJpbnRfY29tbWFuZChzdHJ1Y3Qgc2NzaV9jbW5kICpj
bWQpCiAJCQkJCQkgIkNEQlslMDJ4XTogIiwgayk7CiAJCQkJaGV4X2R1bXBfdG9fYnVmZmVyKCZj
bWQtPmNtbmRba10sIGxpbmVsZW4sCiAJCQkJCQkgICAxNiwgMSwgbG9nYnVmICsgb2ZmLAotCQkJ
CQkJICAgbG9nYnVmX2xlbiAtIG9mZiwgZmFsc2UpOworCQkJCQkJICAgbG9nYnVmX2xlbiAtIG9m
ZiwgMCk7CiAJCQl9CiAJCQlkZXZfcHJpbnRrKEtFUk5fSU5GTywgJmNtZC0+ZGV2aWNlLT5zZGV2
X2dlbmRldiwgIiVzIiwKIAkJCQkgICBsb2didWYpOwpAQCAtMjczLDggKzI3Myw3IEBAIHZvaWQg
c2NzaV9wcmludF9jb21tYW5kKHN0cnVjdCBzY3NpX2NtbmQgKmNtZCkKIAlpZiAoIVdBUk5fT04o
b2ZmID4gbG9nYnVmX2xlbiAtIDQ5KSkgewogCQlvZmYgKz0gc2NucHJpbnRmKGxvZ2J1ZiArIG9m
ZiwgbG9nYnVmX2xlbiAtIG9mZiwgIiAiKTsKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKGNtZC0+Y21u
ZCwgY21kLT5jbWRfbGVuLCAxNiwgMSwKLQkJCQkgICBsb2didWYgKyBvZmYsIGxvZ2J1Zl9sZW4g
LSBvZmYsCi0JCQkJICAgZmFsc2UpOworCQkJCSAgIGxvZ2J1ZiArIG9mZiwgbG9nYnVmX2xlbiAt
IG9mZiwgMCk7CiAJfQogb3V0X3ByaW50azoKIAlkZXZfcHJpbnRrKEtFUk5fSU5GTywgJmNtZC0+
ZGV2aWNlLT5zZGV2X2dlbmRldiwgIiVzIiwgbG9nYnVmKTsKQEAgLTM1Myw4ICszNTIsNyBAQCBz
Y3NpX2xvZ19kdW1wX3NlbnNlKGNvbnN0IHN0cnVjdCBzY3NpX2RldmljZSAqc2RldiwgY29uc3Qg
Y2hhciAqbmFtZSwgaW50IHRhZywKIAkJb2ZmID0gc2Rldl9mb3JtYXRfaGVhZGVyKGxvZ2J1Ziwg
bG9nYnVmX2xlbiwKIAkJCQkJIG5hbWUsIHRhZyk7CiAJCWhleF9kdW1wX3RvX2J1ZmZlcigmc2Vu
c2VfYnVmZmVyW2ldLCBsZW4sIDE2LCAxLAotCQkJCSAgIGxvZ2J1ZiArIG9mZiwgbG9nYnVmX2xl
biAtIG9mZiwKLQkJCQkgICBmYWxzZSk7CisJCQkJICAgbG9nYnVmICsgb2ZmLCBsb2didWZfbGVu
IC0gb2ZmLCAwKTsKIAkJZGV2X3ByaW50ayhLRVJOX0lORk8sICZzZGV2LT5zZGV2X2dlbmRldiwg
IiVzIiwgbG9nYnVmKTsKIAl9CiAJc2NzaV9sb2dfcmVsZWFzZV9idWZmZXIobG9nYnVmKTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvc3RhZ2luZy9mYnRmdC9mYnRmdC1jb3JlLmMgYi9kcml2ZXJzL3N0
YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jCmluZGV4IDliMDdiYWRmNGM2Yy4uMmU1ZGY1Y2M5ZDYx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3N0YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jCisrKyBiL2Ry
aXZlcnMvc3RhZ2luZy9mYnRmdC9mYnRmdC1jb3JlLmMKQEAgLTYxLDcgKzYxLDcgQEAgdm9pZCBm
YnRmdF9kYmdfaGV4KGNvbnN0IHN0cnVjdCBkZXZpY2UgKmRldiwgaW50IGdyb3Vwc2l6ZSwKIAl2
YV9lbmQoYXJncyk7CiAKIAloZXhfZHVtcF90b19idWZmZXIoYnVmLCBsZW4sIDMyLCBncm91cHNp
emUsIHRleHQgKyB0ZXh0X2xlbiwKLQkJCSAgIDUxMiAtIHRleHRfbGVuLCBmYWxzZSk7CisJCQkg
ICA1MTIgLSB0ZXh0X2xlbiwgMCk7CiAKIAlpZiAobGVuID4gMzIpCiAJCWRldl9pbmZvKGRldiwg
IiVzIC4uLlxuIiwgdGV4dCk7CmRpZmYgLS1naXQgYS9mcy9zZXFfZmlsZS5jIGIvZnMvc2VxX2Zp
bGUuYwppbmRleCBhYmUyN2VjNDMxNzYuLjQ3MmE4YWNiNzQwNSAxMDA2NDQKLS0tIGEvZnMvc2Vx
X2ZpbGUuYworKysgYi9mcy9zZXFfZmlsZS5jCkBAIC04NzQsNyArODc0LDggQEAgdm9pZCBzZXFf
aGV4X2R1bXAoc3RydWN0IHNlcV9maWxlICptLCBjb25zdCBjaGFyICpwcmVmaXhfc3RyLCBpbnQg
cHJlZml4X3R5cGUsCiAKIAkJc2l6ZSA9IHNlcV9nZXRfYnVmKG0sICZidWZmZXIpOwogCQlyZXQg
PSBoZXhfZHVtcF90b19idWZmZXIocHRyICsgaSwgbGluZWxlbiwgcm93c2l6ZSwgZ3JvdXBzaXpl
LAotCQkJCQkgYnVmZmVyLCBzaXplLCBhc2NpaSk7CisJCQkJCSBidWZmZXIsIHNpemUsCisJCQkJ
CSBhc2NpaSA/IEhFWERVTVBfQVNDSUkgOiAwKTsKIAkJc2VxX2NvbW1pdChtLCByZXQgPCBzaXpl
ID8gcmV0IDogLTEpOwogCiAJCXNlcV9wdXRjKG0sICdcbicpOwpkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9saW51eC9wcmludGsuaCBiL2luY2x1ZGUvbGludXgvcHJpbnRrLmgKaW5kZXggZDc3NTQ3OTlj
ZmUwLi45N2RkMjlhMmJkNzcgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcHJpbnRrLmgKKysr
IGIvaW5jbHVkZS9saW51eC9wcmludGsuaApAQCAtNDgyLDEzICs0ODIsMTMgQEAgZW51bSB7CiAJ
RFVNUF9QUkVGSVhfT0ZGU0VUCiB9OwogCi1leHRlcm4gaW50IGhleF9kdW1wX3RvX2J1ZmZlcihj
b25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLAotCQkJICAgICAgaW50IGdy
b3Vwc2l6ZSwgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sCi0JCQkgICAgICBib29s
IGFzY2lpKTsKLQogI2RlZmluZSBIRVhEVU1QX0FTQ0lJCQkJQklUKDApCiAjZGVmaW5lIEhFWERV
TVBfU1VQUFJFU1NfUkVQRUFURUQJQklUKDEpCiAKK2V4dGVybiBpbnQgaGV4X2R1bXBfdG9fYnVm
ZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsCisJCQkgICAgICBp
bnQgZ3JvdXBzaXplLCBjaGFyICpsaW5lYnVmLCBzaXplX3QgbGluZWJ1ZmxlbiwKKwkJCSAgICAg
IHUzMiBmbGFncyk7CisKICNpZmRlZiBDT05GSUdfUFJJTlRLCiBleHRlcm4gdm9pZCBwcmludF9o
ZXhfZHVtcF9leHQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCiAJ
CQkgICBpbnQgcHJlZml4X3R5cGUsIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLApkaWZmIC0t
Z2l0IGEvbGliL2hleGR1bXAuYyBiL2xpYi9oZXhkdW1wLmMKaW5kZXggYjc4MWY4ODg4ODRlLi4w
OGM2MDg0ZDdkYWEgMTAwNjQ0Ci0tLSBhL2xpYi9oZXhkdW1wLmMKKysrIGIvbGliL2hleGR1bXAu
YwpAQCAtODUsNyArODUsOCBAQCBFWFBPUlRfU1lNQk9MKGJpbjJoZXgpOwogICogQGdyb3Vwc2l6
ZTogbnVtYmVyIG9mIGJ5dGVzIHRvIHByaW50IGF0IGEgdGltZSAoMSwgMiwgNCwgODsgZGVmYXVs
dCA9IDEpCiAgKiBAbGluZWJ1Zjogd2hlcmUgdG8gcHV0IHRoZSBjb252ZXJ0ZWQgZGF0YQogICog
QGxpbmVidWZsZW46IHRvdGFsIHNpemUgb2YgQGxpbmVidWYsIGluY2x1ZGluZyBzcGFjZSBmb3Ig
dGVybWluYXRpbmcgTlVMCi0gKiBAYXNjaWk6IGluY2x1ZGUgQVNDSUkgYWZ0ZXIgdGhlIGhleCBv
dXRwdXQKKyAqIEBmbGFnczogQSBiaXR3aXNlIE9SIG9mIHRoZSBmb2xsb3dpbmcgZmxhZ3M6Cisg
KglIRVhEVU1QX0FTQ0lJOgkJCWluY2x1ZGUgQVNDSUkgYWZ0ZXIgdGhlIGhleCBvdXRwdXQKICAq
CiAgKiBoZXhfZHVtcF90b19idWZmZXIoKSB3b3JrcyBvbiBvbmUgImxpbmUiIG9mIG91dHB1dCBh
dCBhIHRpbWUsIGNvbnZlcnRpbmcKICAqIDxncm91cHNpemU+IGJ5dGVzIG9mIGlucHV0IHRvIGhl
eGFkZWNpbWFsIChhbmQgb3B0aW9uYWxseSBwcmludGFibGUgQVNDSUkpCkBAIC05Nyw3ICs5OCw3
IEBAIEVYUE9SVF9TWU1CT0woYmluMmhleCk7CiAgKgogICogRS5nLjoKICAqICAgaGV4X2R1bXBf
dG9fYnVmZmVyKGZyYW1lLT5kYXRhLCBmcmFtZS0+bGVuLCAxNiwgMSwKLSAqCQkJbGluZWJ1Ziwg
c2l6ZW9mKGxpbmVidWYpLCB0cnVlKTsKKyAqCQkJbGluZWJ1Ziwgc2l6ZW9mKGxpbmVidWYpLCBI
RVhEVU1QX0FTQ0lJKTsKICAqCiAgKiBleGFtcGxlIG91dHB1dCBidWZmZXI6CiAgKiA0MCA0MSA0
MiA0MyA0NCA0NSA0NiA0NyA0OCA0OSA0YSA0YiA0YyA0ZCA0ZSA0ZiAgQEFCQ0RFRkdISUpLTE1O
TwpAQCAtMTA5LDcgKzExMCw3IEBAIEVYUE9SVF9TWU1CT0woYmluMmhleCk7CiAgKiBzdHJpbmcg
aWYgZW5vdWdoIHNwYWNlIGhhZCBiZWVuIGF2YWlsYWJsZS4KICAqLwogaW50IGhleF9kdW1wX3Rv
X2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLCBpbnQgZ3Jv
dXBzaXplLAotCQkgICAgICAgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sIGJvb2wg
YXNjaWkpCisJCSAgICAgICBjaGFyICpsaW5lYnVmLCBzaXplX3QgbGluZWJ1ZmxlbiwgdTMyIGZs
YWdzKQogewogCWNvbnN0IHU4ICpwdHIgPSBidWY7CiAJaW50IG5ncm91cHM7CkBAIC0xODcsNyAr
MTg4LDcgQEAgaW50IGhleF9kdW1wX3RvX2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBs
ZW4sIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLAogCQlpZiAoaikKIAkJCWx4LS07CiAJfQot
CWlmICghYXNjaWkpCisJaWYgKCEoZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKSkKIAkJZ290byBuaWw7
CiAKIAl3aGlsZSAobHggPCBhc2NpaV9jb2x1bW4pIHsKQEAgLTIwNyw3ICsyMDgsOCBAQCBpbnQg
aGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3Np
emUsIGludCBncm91cHNpemUsCiBvdmVyZmxvdzI6CiAJbGluZWJ1ZltseCsrXSA9ICdcMCc7CiBv
dmVyZmxvdzE6Ci0JcmV0dXJuIGFzY2lpID8gYXNjaWlfY29sdW1uICsgbGVuIDogKGdyb3Vwc2l6
ZSAqIDIgKyAxKSAqIG5ncm91cHMgLSAxOworCXJldHVybiAoZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJ
KSA/IGFzY2lpX2NvbHVtbiArIGxlbiA6CisJCQkJCSAoZ3JvdXBzaXplICogMiArIDEpICogbmdy
b3VwcyAtIDE7CiB9CiBFWFBPUlRfU1lNQk9MKGhleF9kdW1wX3RvX2J1ZmZlcik7CiAKQEAgLTMz
Niw4ICszMzgsNyBAQCB2b2lkIHByaW50X2hleF9kdW1wX2V4dChjb25zdCBjaGFyICpsZXZlbCwg
Y29uc3QgY2hhciAqcHJlZml4X3N0ciwKIAkJfQogCiAJCWhleF9kdW1wX3RvX2J1ZmZlcihwdHIg
KyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0JCQkJICAgbGluZWJ1ZiwgbGluZWJ1
Zl9sZW4sCi0JCQkJICAgZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKTsKKwkJCQkgICBsaW5lYnVmLCBs
aW5lYnVmX2xlbiwgZmxhZ3MpOwogCiAJCXN3aXRjaCAocHJlZml4X3R5cGUpIHsKIAkJY2FzZSBE
VU1QX1BSRUZJWF9BRERSRVNTOgpkaWZmIC0tZ2l0IGEvbGliL3Rlc3RfaGV4ZHVtcC5jIGIvbGli
L3Rlc3RfaGV4ZHVtcC5jCmluZGV4IDZhYjc1YTIwOWI0My4uYWUzNDBjNWMxYzZmIDEwMDY0NAot
LS0gYS9saWIvdGVzdF9oZXhkdW1wLmMKKysrIGIvbGliL3Rlc3RfaGV4ZHVtcC5jCkBAIC0xNjYs
NyArMTY2LDcgQEAgc3RhdGljIHZvaWQgX19pbml0IHRlc3RfaGV4ZHVtcChzaXplX3QgbGVuLCBp
bnQgcm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKIAogCW1lbXNldChyZWFsLCBGSUxMX0NIQVIsIHNp
emVvZihyZWFsKSk7CiAJaGV4X2R1bXBfdG9fYnVmZmVyKGRhdGFfYiwgbGVuLCByb3dzaXplLCBn
cm91cHNpemUsIHJlYWwsIHNpemVvZihyZWFsKSwKLQkJCSAgIGFzY2lpKTsKKwkJCSAgIGFzY2lp
ID8gSEVYRFVNUF9BU0NJSSA6IDApOwogCiAJbWVtc2V0KHRlc3QsIEZJTExfQ0hBUiwgc2l6ZW9m
KHRlc3QpKTsKIAl0ZXN0X2hleGR1bXBfcHJlcGFyZV90ZXN0KGxlbiwgcm93c2l6ZSwgZ3JvdXBz
aXplLCB0ZXN0LCBzaXplb2YodGVzdCksCkBAIC0yMDQsNyArMjA0LDggQEAgc3RhdGljIHZvaWQg
X19pbml0IHRlc3RfaGV4ZHVtcF9vdmVyZmxvdyhzaXplX3QgYnVmbGVuLCBzaXplX3QgbGVuLAog
CiAJbWVtc2V0KGJ1ZiwgRklMTF9DSEFSLCBzaXplb2YoYnVmKSk7CiAKLQlyYyA9IGhleF9kdW1w
X3RvX2J1ZmZlcihkYXRhX2IsIGxlbiwgcm93c2l6ZSwgZ3JvdXBzaXplLCBidWYsIGJ1Zmxlbiwg
YXNjaWkpOworCXJjID0gaGV4X2R1bXBfdG9fYnVmZmVyKGRhdGFfYiwgbGVuLCByb3dzaXplLCBn
cm91cHNpemUsIGJ1ZiwgYnVmbGVuLAorCQkJCWFzY2lpID8gSEVYRFVNUF9BU0NJSSA6IDApOwog
CiAJLyoKIAkgKiBDYWxsZXIgbXVzdCBwcm92aWRlIHRoZSBkYXRhIGxlbmd0aCBtdWx0aXBsZSBv
ZiBncm91cHNpemUuIFRoZQotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
