Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3269259A44
	for <lists+dri-devel@lfdr.de>; Fri, 28 Jun 2019 14:14:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 22CD86E904;
	Fri, 28 Jun 2019 12:13:58 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D778C6E901
 for <dri-devel@lists.freedesktop.org>; Fri, 28 Jun 2019 12:13:55 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
 [10.5.11.14])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 0BC3E85541;
 Fri, 28 Jun 2019 12:13:47 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-96.ams2.redhat.com
 [10.36.116.96])
 by smtp.corp.redhat.com (Postfix) with ESMTP id AC3105DD63;
 Fri, 28 Jun 2019 12:13:44 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id 7330B9D73; Fri, 28 Jun 2019 14:13:40 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v5 11/12] drm/virtio: switch from ttm to gem shmem helpers
Date: Fri, 28 Jun 2019 14:13:37 +0200
Message-Id: <20190628121338.24398-12-kraxel@redhat.com>
In-Reply-To: <20190628121338.24398-1-kraxel@redhat.com>
References: <20190628121338.24398-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.28]); Fri, 28 Jun 2019 12:13:55 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>, open list <linux-kernel@vger.kernel.org>,
 "open list:VIRTIO GPU DRIVER" <virtualization@lists.linux-foundation.org>,
 Gerd Hoffmann <kraxel@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

dmlydGlvLWdwdSBiYXNpY2FsbHkgbmVlZHMgYSBzZ190YWJsZSBmb3IgdGhlIGJvLCB0byB0ZWxs
IHRoZSBob3N0IHdoZXJlCnRoZSBiYWNraW5nIHBhZ2VzIGZvciB0aGUgb2JqZWN0IGFyZS4gIFNv
IHRoZSBnZW0gc2htZW0gaGVscGVycyBhcmUgYQpwZXJmZWN0IGZpdC4gIFNvbWUgZHJtX2dlbV9v
YmplY3RfZnVuY3MgbmVlZCB0aGluIHdyYXBwZXJzIHRvIHVwZGF0ZSB0aGUKaG9zdCBzdGF0ZSwg
YnV0IG90aGVyd2lzZSB0aGUgaGVscGVycyBoYW5kbGUgZXZlcnl0aGluZyBqdXN0IGZpbmUuCgpP
bmNlIHRoZSBmZW5jaW5nIHdhcyBzb3J0ZWQgdGhlIHN3aXRjaCB3YXMgc3VycHJpc2luZ2x5IGVh
c3kgYW5kIGZvciB0aGUKbW9zdCBwYXJ0IGp1c3QgcmVtb3ZpbmcgdGhlIHR0bSBjb2RlLgoKdjU6
IG1vdmUgZHJtX2dlbV9vYmplY3RfZnVuY3MgaG9va3VwIChDaGlhLUkgV3UpLgp2NDogZml4IGRy
bV9nZW1fb2JqZWN0X2Z1bmNzIG5hbWUuCgpTaWduZWQtb2ZmLWJ5OiBHZXJkIEhvZmZtYW5uIDxr
cmF4ZWxAcmVkaGF0LmNvbT4KQWNrZWQtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJA
ZmZ3bGwuY2g+Ci0tLQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oICAgIHwg
IDUyICstLS0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYyAgICB8ICAyMCAr
LQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jICAgIHwgIDE2ICstCiBkcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYyAgfCAgMTkgKy0KIGRyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYyAgICB8ICAgOSAtCiBkcml2ZXJzL2dwdS9kcm0vdmly
dGlvL3ZpcnRncHVfb2JqZWN0LmMgfCAxNDggKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0v
dmlydGlvL3ZpcnRncHVfcHJpbWUuYyAgfCAgMzcgLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfdHRtLmMgICAgfCAzMDQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdnEuYyAgICAgfCAgMjQgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vS2NvbmZpZyAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL3ZpcnRp
by9NYWtlZmlsZSAgICAgICAgIHwgICAyICstCiAxMSBmaWxlcyBjaGFuZ2VkLCA4MiBpbnNlcnRp
b25zKCspLCA1NTEgZGVsZXRpb25zKC0pCiBkZWxldGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Zp
cnRpby92aXJ0Z3B1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5o
CmluZGV4IGM2YzBhNjZjY2Y2Yi4uNzhmNGQ2MjExODEyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92
aXJ0Z3B1X2Rydi5oCkBAIC0zMywxNCArMzMsMTEgQEAKIAogI2luY2x1ZGUgPGRybS9kcm1QLmg+
CiAjaW5jbHVkZSA8ZHJtL2RybV9nZW0uaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2dlbV9zaG1lbV9o
ZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2F0b21pYy5oPgogI2luY2x1ZGUgPGRybS9kcm1f
ZW5jb2Rlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fZmJfaGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJt
L2RybV9wcm9iZV9oZWxwZXIuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19hcGkuaD4KLSNp
bmNsdWRlIDxkcm0vdHRtL3R0bV9ib19kcml2ZXIuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9w
bGFjZW1lbnQuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9tb2R1bGUuaD4KIAogI2RlZmluZSBE
UklWRVJfTkFNRSAidmlydGlvX2dwdSIKICNkZWZpbmUgRFJJVkVSX0RFU0MgInZpcnRpbyBHUFUi
CkBAIC02OCwyMSArNjUsMTYgQEAgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0X3BhcmFtcyB7CiB9
OwogCiBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgewotCXN0cnVjdCBkcm1fZ2VtX29iamVjdCBn
ZW1fYmFzZTsKKwlzdHJ1Y3QgZHJtX2dlbV9zaG1lbV9vYmplY3QgYmFzZTsKIAl1aW50MzJfdCBo
d19yZXNfaGFuZGxlOwogCiAJc3RydWN0IHNnX3RhYmxlICpwYWdlczsKIAl1aW50MzJfdCBtYXBw
ZWQ7Ci0Jdm9pZCAqdm1hcDsKIAlib29sIGR1bWI7Ci0Jc3RydWN0IHR0bV9wbGFjZSAgICAgICAg
ICAgICAgICBwbGFjZW1lbnRfY29kZTsKLQlzdHJ1Y3QgdHRtX3BsYWNlbWVudAkJcGxhY2VtZW50
OwotCXN0cnVjdCB0dG1fYnVmZmVyX29iamVjdAl0Ym87Ci0Jc3RydWN0IHR0bV9ib19rbWFwX29i
agkJa21hcDsKIAlib29sIGNyZWF0ZWQ7CiB9OwogI2RlZmluZSBnZW1fdG9fdmlydGlvX2dwdV9v
YmooZ29iaikgXAotCWNvbnRhaW5lcl9vZigoZ29iaiksIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dCwgZ2VtX2Jhc2UpCisJY29udGFpbmVyX29mKChnb2JqKSwgc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0LCBiYXNlLmJhc2UpCiAKIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9hcnJheSB7CiAJdTMy
IG5lbnRzOwpAQCAtMTUyLDEwICsxNDQsNiBAQCBzdHJ1Y3QgdmlydGlvX2dwdV9mcmFtZWJ1ZmZl
ciB7CiAjZGVmaW5lIHRvX3ZpcnRpb19ncHVfZnJhbWVidWZmZXIoeCkgXAogCWNvbnRhaW5lcl9v
Zih4LCBzdHJ1Y3QgdmlydGlvX2dwdV9mcmFtZWJ1ZmZlciwgYmFzZSkKIAotc3RydWN0IHZpcnRp
b19ncHVfbW1hbiB7Ci0Jc3RydWN0IHR0bV9ib19kZXZpY2UJCWJkZXY7Ci19OwotCiBzdHJ1Y3Qg
dmlydGlvX2dwdV9xdWV1ZSB7CiAJc3RydWN0IHZpcnRxdWV1ZSAqdnE7CiAJc3BpbmxvY2tfdCBx
bG9jazsKQEAgLTE4NCw4ICsxNzIsNiBAQCBzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgewogCiAJ
c3RydWN0IHZpcnRpb19kZXZpY2UgKnZkZXY7CiAKLQlzdHJ1Y3QgdmlydGlvX2dwdV9tbWFuIG1t
YW47Ci0KIAlzdHJ1Y3QgdmlydGlvX2dwdV9vdXRwdXQgb3V0cHV0c1tWSVJUSU9fR1BVX01BWF9T
Q0FOT1VUU107CiAJdWludDMyX3QgbnVtX3NjYW5vdXRzOwogCkBAIC0zNTAsMTEgKzMzNiw2IEBA
IHN0cnVjdCBkcm1fcGxhbmUgKnZpcnRpb19ncHVfcGxhbmVfaW5pdChzdHJ1Y3QgdmlydGlvX2dw
dV9kZXZpY2UgKnZnZGV2LAogCQkJCQllbnVtIGRybV9wbGFuZV90eXBlIHR5cGUsCiAJCQkJCWlu
dCBpbmRleCk7CiAKLS8qIHZpcnRpb19ncHVfdHRtLmMgKi8KLWludCB2aXJ0aW9fZ3B1X3R0bV9p
bml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpOwotdm9pZCB2aXJ0aW9fZ3B1X3R0
bV9maW5pKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpOwotaW50IHZpcnRpb19ncHVf
bW1hcChzdHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpOwotCiAv
KiB2aXJ0aW9fZ3B1X2ZlbmNlLmMgKi8KIGJvb2wgdmlydGlvX2ZlbmNlX3NpZ25hbGVkKHN0cnVj
dCBkbWFfZmVuY2UgKmYpOwogc3RydWN0IHZpcnRpb19ncHVfZmVuY2UgKnZpcnRpb19ncHVfZmVu
Y2VfYWxsb2MoCkBAIC0zNjYsNTggKzM0Nyw0NyBAQCB2b2lkIHZpcnRpb19ncHVfZmVuY2VfZXZl
bnRfcHJvY2VzcyhzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZkZXYsCiAJCQkJICAgIHU2NCBs
YXN0X3NlcSk7CiAKIC8qIHZpcnRpb19ncHVfb2JqZWN0ICovCitzdHJ1Y3QgZHJtX2dlbV9vYmpl
Y3QgKnZpcnRpb19ncHVfY3JlYXRlX29iamVjdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJ
CQkJc2l6ZV90IHNpemUpOwogaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3Qgdmly
dGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCQkJICAgICBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Rf
cGFyYW1zICpwYXJhbXMsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqKmJvX3B0
ciwKIAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfZmVuY2UgKmZlbmNlKTsKLXZvaWQgdmlydGlv
X2dwdV9vYmplY3Rfa3VubWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwotaW50IHZp
cnRpb19ncHVfb2JqZWN0X2ttYXAoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyk7Ci1pbnQg
dmlydGlvX2dwdV9vYmplY3RfZ2V0X3NnX3RhYmxlKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAq
cWRldiwKLQkJCQkgICBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKTsKLXZvaWQgdmlydGlv
X2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKTsK
IAogLyogdmlydGdwdV9wcmltZS5jICovCi1zdHJ1Y3Qgc2dfdGFibGUgKnZpcnRncHVfZ2VtX3By
aW1lX2dldF9zZ190YWJsZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaik7CiBzdHJ1Y3QgZHJt
X2dlbV9vYmplY3QgKnZpcnRncHVfZ2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSgKIAlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LCBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsCiAJc3Ry
dWN0IHNnX3RhYmxlICpzZ3QpOwotdm9pZCAqdmlydGdwdV9nZW1fcHJpbWVfdm1hcChzdHJ1Y3Qg
ZHJtX2dlbV9vYmplY3QgKm9iaik7Ci12b2lkIHZpcnRncHVfZ2VtX3ByaW1lX3Z1bm1hcChzdHJ1
Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgdm9pZCAqdmFkZHIpOwotaW50IHZpcnRncHVfZ2VtX3By
aW1lX21tYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosCi0JCQkgICBzdHJ1Y3Qgdm1fYXJl
YV9zdHJ1Y3QgKnZtYSk7CiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0
KgogdmlydGlvX2dwdV9vYmplY3RfcmVmKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCiB7
Ci0JdHRtX2JvX2dldCgmYm8tPnRibyk7CisJZHJtX2dlbV9vYmplY3RfZ2V0KCZiby0+YmFzZS5i
YXNlKTsKIAlyZXR1cm4gYm87CiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCB2aXJ0aW9fZ3B1X29i
amVjdF91bnJlZihzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKipibykKIHsKLQlzdHJ1Y3QgdHRt
X2J1ZmZlcl9vYmplY3QgKnRibzsKLQogCWlmICgoKmJvKSA9PSBOVUxMKQogCQlyZXR1cm47Ci0J
dGJvID0gJigoKmJvKS0+dGJvKTsKLQl0dG1fYm9fcHV0KHRibyk7CisJZHJtX2dlbV9vYmplY3Rf
cHV0KCYoKmJvKS0+YmFzZS5iYXNlKTsKIAkqYm8gPSBOVUxMOwogfQogCiBzdGF0aWMgaW5saW5l
IHU2NCB2aXJ0aW9fZ3B1X29iamVjdF9tbWFwX29mZnNldChzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3QgKmJvKQogewotCXJldHVybiBkcm1fdm1hX25vZGVfb2Zmc2V0X2FkZHIoJmJvLT50Ym8udm1h
X25vZGUpOworCXJldHVybiBkcm1fdm1hX25vZGVfb2Zmc2V0X2FkZHIoJmJvLT5iYXNlLmJhc2Uu
dm1hX25vZGUpOwogfQogCiBzdGF0aWMgaW5saW5lIGludCB2aXJ0aW9fZ3B1X29iamVjdF9yZXNl
cnZlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCiB7CiAJaW50IHI7CiAKLQlyID0gcmVz
ZXJ2YXRpb25fb2JqZWN0X2xvY2tfaW50ZXJydXB0aWJsZShiby0+Z2VtX2Jhc2UucmVzdiwgTlVM
TCk7CisJciA9IHJlc2VydmF0aW9uX29iamVjdF9sb2NrX2ludGVycnVwdGlibGUoYm8tPmJhc2Uu
YmFzZS5yZXN2LCBOVUxMKTsKIAlpZiAodW5saWtlbHkociAhPSAwKSkgewogCQlpZiAociAhPSAt
RUlOVFIpIHsKIAkJCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqcWRldiA9Ci0JCQkJYm8tPmdl
bV9iYXNlLmRldi0+ZGV2X3ByaXZhdGU7CisJCQkJYm8tPmJhc2UuYmFzZS5kZXYtPmRldl9wcml2
YXRlOwogCQkJZGV2X2VycihxZGV2LT5kZXYsICIlcCByZXNlcnZlIGZhaWxlZFxuIiwgYm8pOwog
CQl9CiAJCXJldHVybiByOwpAQCAtNDI3LDcgKzM5Nyw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IHZp
cnRpb19ncHVfb2JqZWN0X3Jlc2VydmUoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIAog
c3RhdGljIGlubGluZSB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X3VucmVzZXJ2ZShzdHJ1Y3Qgdmly
dGlvX2dwdV9vYmplY3QgKmJvKQogewotCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYm8tPmdl
bV9iYXNlLnJlc3YpOworCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYm8tPmJhc2UuYmFzZS5y
ZXN2KTsKIH0KIAogLyogdmlyZ2wgZGVidWZzICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVf
ZHJ2LmMKaW5kZXggOTliY2QyOTBmMWZiLi44Y2UxOTNlMjgwMGIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmly
dGlvL3ZpcnRncHVfZHJ2LmMKQEAgLTE4MiwxNyArMTgyLDcgQEAgTU9EVUxFX0FVVEhPUigiRGF2
ZSBBaXJsaWUgPGFpcmxpZWRAcmVkaGF0LmNvbT4iKTsKIE1PRFVMRV9BVVRIT1IoIkdlcmQgSG9m
Zm1hbm4gPGtyYXhlbEByZWRoYXQuY29tPiIpOwogTU9EVUxFX0FVVEhPUigiQWxvbiBMZXZ5Iik7
CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHZpcnRpb19ncHVfZHJpdmVy
X2ZvcHMgPSB7Ci0JLm93bmVyID0gVEhJU19NT0RVTEUsCi0JLm9wZW4gPSBkcm1fb3BlbiwKLQku
bW1hcCA9IHZpcnRpb19ncHVfbW1hcCwKLQkucG9sbCA9IGRybV9wb2xsLAotCS5yZWFkID0gZHJt
X3JlYWQsCi0JLnVubG9ja2VkX2lvY3RsCT0gZHJtX2lvY3RsLAotCS5yZWxlYXNlID0gZHJtX3Jl
bGVhc2UsCi0JLmNvbXBhdF9pb2N0bCA9IGRybV9jb21wYXRfaW9jdGwsCi0JLmxsc2VlayA9IG5v
b3BfbGxzZWVrLAotfTsKK0RFRklORV9EUk1fR0VNX1NITUVNX0ZPUFModmlydGlvX2dwdV9kcml2
ZXJfZm9wcyk7CiAKIHN0YXRpYyBzdHJ1Y3QgZHJtX2RyaXZlciBkcml2ZXIgPSB7CiAJLmRyaXZl
cl9mZWF0dXJlcyA9IERSSVZFUl9NT0RFU0VUIHwgRFJJVkVSX0dFTSB8IERSSVZFUl9SRU5ERVIg
fCBEUklWRVJfQVRPTUlDLApAQCAtMjA3LDE1ICsxOTcsOSBAQCBzdGF0aWMgc3RydWN0IGRybV9k
cml2ZXIgZHJpdmVyID0gewogI2VuZGlmCiAJLnByaW1lX2hhbmRsZV90b19mZCA9IGRybV9nZW1f
cHJpbWVfaGFuZGxlX3RvX2ZkLAogCS5wcmltZV9mZF90b19oYW5kbGUgPSBkcm1fZ2VtX3ByaW1l
X2ZkX3RvX2hhbmRsZSwKLQkuZ2VtX3ByaW1lX2dldF9zZ190YWJsZSA9IHZpcnRncHVfZ2VtX3By
aW1lX2dldF9zZ190YWJsZSwKIAkuZ2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSA9IHZpcnRncHVf
Z2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSwKLQkuZ2VtX3ByaW1lX3ZtYXAgPSB2aXJ0Z3B1X2dl
bV9wcmltZV92bWFwLAotCS5nZW1fcHJpbWVfdnVubWFwID0gdmlydGdwdV9nZW1fcHJpbWVfdnVu
bWFwLAotCS5nZW1fcHJpbWVfbW1hcCA9IHZpcnRncHVfZ2VtX3ByaW1lX21tYXAsCiAKLQkuZ2Vt
X2ZyZWVfb2JqZWN0X3VubG9ja2VkID0gdmlydGlvX2dwdV9nZW1fZnJlZV9vYmplY3QsCi0JLmdl
bV9vcGVuX29iamVjdCA9IHZpcnRpb19ncHVfZ2VtX29iamVjdF9vcGVuLAotCS5nZW1fY2xvc2Vf
b2JqZWN0ID0gdmlydGlvX2dwdV9nZW1fb2JqZWN0X2Nsb3NlLAorCS5nZW1fY3JlYXRlX29iamVj
dCA9IHZpcnRpb19ncHVfY3JlYXRlX29iamVjdCwKIAkuZm9wcyA9ICZ2aXJ0aW9fZ3B1X2RyaXZl
cl9mb3BzLAogCiAJLmlvY3RscyA9IHZpcnRpb19ncHVfaW9jdGxzLApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRp
by92aXJ0Z3B1X2dlbS5jCmluZGV4IDc0YmEzZjBkYjRmMS4uZmM0YWJhOGY3YmY4IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZ2VtLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jCkBAIC0yNiwxNCArMjYsNiBAQAogI2luY2x1ZGUg
PGRybS9kcm1QLmg+CiAjaW5jbHVkZSAidmlydGdwdV9kcnYuaCIKIAotdm9pZCB2aXJ0aW9fZ3B1
X2dlbV9mcmVlX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmdlbV9vYmopCi17Ci0Jc3Ry
dWN0IHZpcnRpb19ncHVfb2JqZWN0ICpvYmogPSBnZW1fdG9fdmlydGlvX2dwdV9vYmooZ2VtX29i
aik7Ci0KLQlpZiAob2JqKQotCQl2aXJ0aW9fZ3B1X29iamVjdF91bnJlZigmb2JqKTsKLX0KLQog
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KgogdmlydGlvX2dwdV9hbGxvY19vYmplY3Qoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwKIAkJCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgKnBh
cmFtcywKQEAgLTY0LDE2ICs1NiwxNiBAQCBpbnQgdmlydGlvX2dwdV9nZW1fY3JlYXRlKHN0cnVj
dCBkcm1fZmlsZSAqZmlsZSwKIAlpZiAoSVNfRVJSKG9iaikpCiAJCXJldHVybiBQVFJfRVJSKG9i
aik7CiAKLQlyZXQgPSBkcm1fZ2VtX2hhbmRsZV9jcmVhdGUoZmlsZSwgJm9iai0+Z2VtX2Jhc2Us
ICZoYW5kbGUpOworCXJldCA9IGRybV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlLCAmb2JqLT5iYXNl
LmJhc2UsICZoYW5kbGUpOwogCWlmIChyZXQpIHsKLQkJZHJtX2dlbV9vYmplY3RfcmVsZWFzZSgm
b2JqLT5nZW1fYmFzZSk7CisJCWRybV9nZW1fb2JqZWN0X3JlbGVhc2UoJm9iai0+YmFzZS5iYXNl
KTsKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQkqb2JqX3AgPSAmb2JqLT5nZW1fYmFzZTsKKwkqb2Jq
X3AgPSAmb2JqLT5iYXNlLmJhc2U7CiAKIAkvKiBkcm9wIHJlZmVyZW5jZSBmcm9tIGFsbG9jYXRl
IC0gaGFuZGxlIGhvbGRzIGl0IG5vdyAqLwotCWRybV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZCgm
b2JqLT5nZW1fYmFzZSk7CisJZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZvYmotPmJhc2Uu
YmFzZSk7CiAKIAkqaGFuZGxlX3AgPSBoYW5kbGU7CiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYyBiL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9pb2N0bC5jCmluZGV4IDY4OGIwYjcwZDNkMy4uNDMzODA3ODZiYjk2IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYwpAQCAtMjcsNyArMjcsNiBAQAog
CiAjaW5jbHVkZSA8ZHJtL2RybVAuaD4KICNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4KLSNp
bmNsdWRlIDxkcm0vdHRtL3R0bV9leGVjYnVmX3V0aWwuaD4KICNpbmNsdWRlIDxsaW51eC9zeW5j
X2ZpbGUuaD4KIAogI2luY2x1ZGUgInZpcnRncHVfZHJ2LmgiCkBAIC0yNzEsNyArMjcwLDcgQEAg
c3RhdGljIGludCB2aXJ0aW9fZ3B1X3Jlc291cmNlX2NyZWF0ZV9pb2N0bChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LCB2b2lkICpkYXRhLAogCWRtYV9mZW5jZV9wdXQoJmZlbmNlLT5mKTsKIAlpZiAo
SVNfRVJSKHFvYmopKQogCQlyZXR1cm4gUFRSX0VSUihxb2JqKTsKLQlvYmogPSAmcW9iai0+Z2Vt
X2Jhc2U7CisJb2JqID0gJnFvYmotPmJhc2UuYmFzZTsKIAogCXJldCA9IGRybV9nZW1faGFuZGxl
X2NyZWF0ZShmaWxlX3ByaXYsIG9iaiwgJmhhbmRsZSk7CiAJaWYgKHJldCkgewpAQCAtMjk4LDcg
KzI5Nyw3IEBAIHN0YXRpYyBpbnQgdmlydGlvX2dwdV9yZXNvdXJjZV9pbmZvX2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAKIAlxb2JqID0gZ2VtX3RvX3ZpcnRpb19n
cHVfb2JqKGdvYmopOwogCi0JcmktPnNpemUgPSBxb2JqLT5nZW1fYmFzZS5zaXplOworCXJpLT5z
aXplID0gcW9iai0+YmFzZS5iYXNlLnNpemU7CiAJcmktPnJlc19oYW5kbGUgPSBxb2JqLT5od19y
ZXNfaGFuZGxlOwogCWRybV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZChnb2JqKTsKIAlyZXR1cm4g
MDsKQEAgLTMxMSw3ICszMTAsNiBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVfdHJhbnNmZXJfZnJv
bV9ob3N0X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJc3RydWN0IHZpcnRpb19ncHVf
ZGV2aWNlICp2Z2RldiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3RydWN0IHZpcnRpb19ncHVfZnBy
aXYgKnZmcHJpdiA9IGZpbGUtPmRyaXZlcl9wcml2OwogCXN0cnVjdCBkcm1fdmlydGdwdV8zZF90
cmFuc2Zlcl9mcm9tX2hvc3QgKmFyZ3MgPSBkYXRhOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0
eCBjdHggPSB7IHRydWUsIGZhbHNlIH07CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnb2JqID0g
TlVMTDsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKnFvYmogPSBOVUxMOwogCXN0cnVjdCB2
aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZTsKQEAgLTMzMiwxMCArMzMwLDYgQEAgc3RhdGljIGludCB2
aXJ0aW9fZ3B1X3RyYW5zZmVyX2Zyb21faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LAogCWlmIChyZXQpCiAJCWdvdG8gb3V0OwogCi0JcmV0ID0gdHRtX2JvX3ZhbGlkYXRlKCZxb2Jq
LT50Ym8sICZxb2JqLT5wbGFjZW1lbnQsICZjdHgpOwotCWlmICh1bmxpa2VseShyZXQpKQotCQln
b3RvIG91dF91bnJlczsKLQogCWNvbnZlcnRfdG9faHdfYm94KCZib3gsICZhcmdzLT5ib3gpOwog
CiAJZmVuY2UgPSB2aXJ0aW9fZ3B1X2ZlbmNlX2FsbG9jKHZnZGV2KTsKQEAgLTM0Nyw3ICszNDEs
NyBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVfdHJhbnNmZXJfZnJvbV9ob3N0X2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiAJCSh2Z2RldiwgcW9iai0+aHdfcmVzX2hhbmRsZSwKIAkJIHZm
cHJpdi0+Y3R4X2lkLCBvZmZzZXQsIGFyZ3MtPmxldmVsLAogCQkgJmJveCwgZmVuY2UpOwotCXJl
c2VydmF0aW9uX29iamVjdF9hZGRfZXhjbF9mZW5jZShxb2JqLT50Ym8ucmVzdiwKKwlyZXNlcnZh
dGlvbl9vYmplY3RfYWRkX2V4Y2xfZmVuY2UocW9iai0+YmFzZS5iYXNlLnJlc3YsCiAJCQkJCSAg
JmZlbmNlLT5mKTsKIAogCWRtYV9mZW5jZV9wdXQoJmZlbmNlLT5mKTsKQEAgLTM2NCw3ICszNTgs
NiBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVfdHJhbnNmZXJfdG9faG9zdF9pb2N0bChzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAq
dmdkZXYgPSBkZXYtPmRldl9wcml2YXRlOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X2Zwcml2ICp2ZnBy
aXYgPSBmaWxlLT5kcml2ZXJfcHJpdjsKIAlzdHJ1Y3QgZHJtX3ZpcnRncHVfM2RfdHJhbnNmZXJf
dG9faG9zdCAqYXJncyA9IGRhdGE7Ci0Jc3RydWN0IHR0bV9vcGVyYXRpb25fY3R4IGN0eCA9IHsg
dHJ1ZSwgZmFsc2UgfTsKIAlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmdvYmogPSBOVUxMOwogCXN0
cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqcW9iaiA9IE5VTEw7CiAJc3RydWN0IHZpcnRpb19ncHVf
ZmVuY2UgKmZlbmNlOwpAQCAtMzgyLDEwICszNzUsNiBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVf
dHJhbnNmZXJfdG9faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRh
LAogCWlmIChyZXQpCiAJCWdvdG8gb3V0OwogCi0JcmV0ID0gdHRtX2JvX3ZhbGlkYXRlKCZxb2Jq
LT50Ym8sICZxb2JqLT5wbGFjZW1lbnQsICZjdHgpOwotCWlmICh1bmxpa2VseShyZXQpKQotCQln
b3RvIG91dF91bnJlczsKLQogCWNvbnZlcnRfdG9faHdfYm94KCZib3gsICZhcmdzLT5ib3gpOwog
CWlmICghdmdkZXYtPmhhc192aXJnbF8zZCkgewogCQl2aXJ0aW9fZ3B1X2NtZF90cmFuc2Zlcl90
b19ob3N0XzJkCkBAIC00MDEsNyArMzkwLDcgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1X3RyYW5z
ZmVyX3RvX2hvc3RfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJ
CSh2Z2RldiwgcW9iaiwKIAkJCSB2ZnByaXYgPyB2ZnByaXYtPmN0eF9pZCA6IDAsIG9mZnNldCwK
IAkJCSBhcmdzLT5sZXZlbCwgJmJveCwgZmVuY2UpOwotCQlyZXNlcnZhdGlvbl9vYmplY3RfYWRk
X2V4Y2xfZmVuY2UocW9iai0+dGJvLnJlc3YsCisJCXJlc2VydmF0aW9uX29iamVjdF9hZGRfZXhj
bF9mZW5jZShxb2JqLT5iYXNlLmJhc2UucmVzdiwKIAkJCQkJCSAgJmZlbmNlLT5mKTsKIAkJZG1h
X2ZlbmNlX3B1dCgmZmVuY2UtPmYpOwogCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9rbXMuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMu
YwppbmRleCA4NGI2YTZiZjAwYzYuLjBiYzZhYmFlYWZjYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2ttcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV9rbXMuYwpAQCAtMTcxLDEyICsxNzEsNiBAQCBpbnQgdmlydGlvX2dwdV9pbml0KHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCWdvdG8gZXJyX3ZidWZzOwogCX0KIAotCXJldCA9IHZp
cnRpb19ncHVfdHRtX2luaXQodmdkZXYpOwotCWlmIChyZXQpIHsKLQkJRFJNX0VSUk9SKCJmYWls
ZWQgdG8gaW5pdCB0dG0gJWRcbiIsIHJldCk7Ci0JCWdvdG8gZXJyX3R0bTsKLQl9Ci0KIAkvKiBn
ZXQgZGlzcGxheSBpbmZvICovCiAJdmlydGlvX2NyZWFkKHZnZGV2LT52ZGV2LCBzdHJ1Y3Qgdmly
dGlvX2dwdV9jb25maWcsCiAJCSAgICAgbnVtX3NjYW5vdXRzLCAmbnVtX3NjYW5vdXRzKTsKQEAg
LTIwOCw4ICsyMDIsNiBAQCBpbnQgdmlydGlvX2dwdV9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpCiAJcmV0dXJuIDA7CiAKIGVycl9zY2Fub3V0czoKLQl2aXJ0aW9fZ3B1X3R0bV9maW5pKHZn
ZGV2KTsKLWVycl90dG06CiAJdmlydGlvX2dwdV9mcmVlX3ZidWZzKHZnZGV2KTsKIGVycl92YnVm
czoKIAl2Z2Rldi0+dmRldi0+Y29uZmlnLT5kZWxfdnFzKHZnZGV2LT52ZGV2KTsKQEAgLTI0MCw3
ICsyMzIsNiBAQCB2b2lkIHZpcnRpb19ncHVfZGVpbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
CiAJdmdkZXYtPnZkZXYtPmNvbmZpZy0+ZGVsX3Zxcyh2Z2Rldi0+dmRldik7CiAKIAl2aXJ0aW9f
Z3B1X21vZGVzZXRfZmluaSh2Z2Rldik7Ci0JdmlydGlvX2dwdV90dG1fZmluaSh2Z2Rldik7CiAJ
dmlydGlvX2dwdV9mcmVlX3ZidWZzKHZnZGV2KTsKIAl2aXJ0aW9fZ3B1X2NsZWFudXBfY2FwX2Nh
Y2hlKHZnZGV2KTsKIAlrZnJlZSh2Z2Rldi0+Y2Fwc2V0cyk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfb2JqZWN0LmMKaW5kZXggZmEwZWEyMmM2OGIwLi5hZGViY2Y0NDFiMmQgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9vYmplY3QuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMKQEAgLTIzLDggKzIzLDYgQEAKICAq
IFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNP
RlRXQVJFLgogICovCiAKLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9leGVjYnVmX3V0aWwuaD4KLQog
I2luY2x1ZGUgInZpcnRncHVfZHJ2LmgiCiAKIHN0YXRpYyBpbnQgdmlydGlvX2dwdV9yZXNvdXJj
ZV9pZF9nZXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKQEAgLTU3LDM5ICs1NSw0
NSBAQCBzdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3Jlc291cmNlX2lkX3B1dChzdHJ1Y3QgdmlydGlv
X2dwdV9kZXZpY2UgKnZnZGV2LCB1aW50MzJfdAogI2VuZGlmCiB9CiAKLXN0YXRpYyB2b2lkIHZp
cnRpb19ncHVfdHRtX2JvX2Rlc3Ryb3koc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICp0Ym8pCitz
dGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X2ZyZWVfb2JqZWN0KHN0cnVjdCBkcm1fZ2VtX29iamVjdCAq
b2JqKQogewotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm87Ci0Jc3RydWN0IHZpcnRpb19n
cHVfZGV2aWNlICp2Z2RldjsKLQotCWJvID0gY29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRp
b19ncHVfb2JqZWN0LCB0Ym8pOwotCXZnZGV2ID0gKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAq
KWJvLT5nZW1fYmFzZS5kZXYtPmRldl9wcml2YXRlOworCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dCAqYm8gPSBnZW1fdG9fdmlydGlvX2dwdV9vYmoob2JqKTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9k
ZXZpY2UgKnZnZGV2ID0gYm8tPmJhc2UuYmFzZS5kZXYtPmRldl9wcml2YXRlOwogCisJaWYgKGJv
LT5wYWdlcykKKwkJdmlydGlvX2dwdV9vYmplY3RfZGV0YWNoKHZnZGV2LCBibyk7CiAJaWYgKGJv
LT5jcmVhdGVkKQogCQl2aXJ0aW9fZ3B1X2NtZF91bnJlZl9yZXNvdXJjZSh2Z2RldiwgYm8tPmh3
X3Jlc19oYW5kbGUpOwotCWlmIChiby0+cGFnZXMpCi0JCXZpcnRpb19ncHVfb2JqZWN0X2ZyZWVf
c2dfdGFibGUoYm8pOwotCWlmIChiby0+dm1hcCkKLQkJdmlydGlvX2dwdV9vYmplY3Rfa3VubWFw
KGJvKTsKLQlkcm1fZ2VtX29iamVjdF9yZWxlYXNlKCZiby0+Z2VtX2Jhc2UpOwogCXZpcnRpb19n
cHVfcmVzb3VyY2VfaWRfcHV0KHZnZGV2LCBiby0+aHdfcmVzX2hhbmRsZSk7Ci0Ja2ZyZWUoYm8p
OworCisJZHJtX2dlbV9zaG1lbV9mcmVlX29iamVjdChvYmopOwogfQogCi1zdGF0aWMgdm9pZCB2
aXJ0aW9fZ3B1X2luaXRfdHRtX3BsYWNlbWVudChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKnZn
Ym8pCitzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9nZW1fb2JqZWN0X2Z1bmNzIHZpcnRpb19ncHVf
Z2VtX2Z1bmNzID0geworCS5mcmVlID0gdmlydGlvX2dwdV9mcmVlX29iamVjdCwKKwkub3BlbiA9
IHZpcnRpb19ncHVfZ2VtX29iamVjdF9vcGVuLAorCS5jbG9zZSA9IHZpcnRpb19ncHVfZ2VtX29i
amVjdF9jbG9zZSwKKworCS5wcmludF9pbmZvID0gZHJtX2dlbV9zaG1lbV9wcmludF9pbmZvLAor
CS5waW4gPSBkcm1fZ2VtX3NobWVtX3BpbiwKKwkudW5waW4gPSBkcm1fZ2VtX3NobWVtX3VucGlu
LAorCS5nZXRfc2dfdGFibGUgPSBkcm1fZ2VtX3NobWVtX2dldF9zZ190YWJsZSwKKwkudm1hcCA9
IGRybV9nZW1fc2htZW1fdm1hcCwKKwkudnVubWFwID0gZHJtX2dlbV9zaG1lbV92dW5tYXAsCisJ
LnZtX29wcyA9ICZkcm1fZ2VtX3NobWVtX3ZtX29wcywKK307CisKK3N0cnVjdCBkcm1fZ2VtX29i
amVjdCAqdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJ
CQkJCQlzaXplX3Qgc2l6ZSkKIHsKLQl1MzIgYyA9IDE7CisJc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0ICpibzsKIAotCXZnYm8tPnBsYWNlbWVudC5wbGFjZW1lbnQgPSAmdmdiby0+cGxhY2VtZW50
X2NvZGU7Ci0Jdmdiby0+cGxhY2VtZW50LmJ1c3lfcGxhY2VtZW50ID0gJnZnYm8tPnBsYWNlbWVu
dF9jb2RlOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmZwZm4gPSAwOwotCXZnYm8tPnBsYWNlbWVu
dF9jb2RlLmxwZm4gPSAwOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmZsYWdzID0KLQkJVFRNX1BM
X01BU0tfQ0FDSElORyB8IFRUTV9QTF9GTEFHX1RUIHwKLQkJVFRNX1BMX0ZMQUdfTk9fRVZJQ1Q7
Ci0Jdmdiby0+cGxhY2VtZW50Lm51bV9wbGFjZW1lbnQgPSBjOwotCXZnYm8tPnBsYWNlbWVudC5u
dW1fYnVzeV9wbGFjZW1lbnQgPSBjOworCWJvID0ga3phbGxvYyhzaXplb2YoKmJvKSwgR0ZQX0tF
Uk5FTCk7CisJaWYgKCFibykKKwkJcmV0dXJuIE5VTEw7CiAKKwliby0+YmFzZS5iYXNlLmZ1bmNz
ID0gJnZpcnRpb19ncHVfZ2VtX2Z1bmNzOworCXJldHVybiAmYm8tPmJhc2UuYmFzZTsKIH0KIAog
aW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZn
ZGV2LApAQCAtOTgsMzYgKzEwMiwyOSBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0
cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1
X2ZlbmNlICpmZW5jZSkKIHsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3RfYXJyYXkgKm9ianMg
PSBOVUxMOworCXN0cnVjdCBkcm1fZ2VtX3NobWVtX29iamVjdCAqc2htZW1fb2JqOwogCXN0cnVj
dCB2aXJ0aW9fZ3B1X29iamVjdCAqYm87CiAJc3RydWN0IHd3X2FjcXVpcmVfY3R4IHRpY2tldDsK
LQlzaXplX3QgYWNjX3NpemU7CiAJaW50IHJldDsKIAogCSpib19wdHIgPSBOVUxMOwogCi0JYWNj
X3NpemUgPSB0dG1fYm9fZG1hX2FjY19zaXplKCZ2Z2Rldi0+bW1hbi5iZGV2LCBwYXJhbXMtPnNp
emUsCi0JCQkJICAgICAgIHNpemVvZihzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QpKTsKKwlwYXJh
bXMtPnNpemUgPSByb3VuZHVwKHBhcmFtcy0+c2l6ZSwgUEFHRV9TSVpFKTsKKwlzaG1lbV9vYmog
PSBkcm1fZ2VtX3NobWVtX2NyZWF0ZSh2Z2Rldi0+ZGRldiwgcGFyYW1zLT5zaXplKTsKKwlpZiAo
SVNfRVJSKHNobWVtX29iaikpCisJCXJldHVybiBQVFJfRVJSKHNobWVtX29iaik7CisJYm8gPSBn
ZW1fdG9fdmlydGlvX2dwdV9vYmooJnNobWVtX29iai0+YmFzZSk7CiAKLQlibyA9IGt6YWxsb2Mo
c2l6ZW9mKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCksIEdGUF9LRVJORUwpOwotCWlmIChibyA9
PSBOVUxMKQotCQlyZXR1cm4gLUVOT01FTTsKIAlyZXQgPSB2aXJ0aW9fZ3B1X3Jlc291cmNlX2lk
X2dldCh2Z2RldiwgJmJvLT5od19yZXNfaGFuZGxlKTsKIAlpZiAocmV0IDwgMCkgewotCQlrZnJl
ZShibyk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCXBhcmFtcy0+c2l6ZSA9IHJvdW5kdXAocGFyYW1z
LT5zaXplLCBQQUdFX1NJWkUpOwotCXJldCA9IGRybV9nZW1fb2JqZWN0X2luaXQodmdkZXYtPmRk
ZXYsICZiby0+Z2VtX2Jhc2UsIHBhcmFtcy0+c2l6ZSk7Ci0JaWYgKHJldCAhPSAwKSB7Ci0JCXZp
cnRpb19ncHVfcmVzb3VyY2VfaWRfcHV0KHZnZGV2LCBiby0+aHdfcmVzX2hhbmRsZSk7Ci0JCWtm
cmVlKGJvKTsKKwkJZHJtX2dlbV9zaG1lbV9mcmVlX29iamVjdCgmc2htZW1fb2JqLT5iYXNlKTsK
IAkJcmV0dXJuIHJldDsKIAl9CiAJYm8tPmR1bWIgPSBwYXJhbXMtPmR1bWI7CiAKIAlpZiAoZmVu
Y2UpIHsKIAkJb2JqcyA9IHZpcnRpb19ncHVfYXJyYXlfYWxsb2MoMSk7Ci0JCW9ianMtPm9ianNb
MF0gPSAmYm8tPmdlbV9iYXNlOworCQlvYmpzLT5vYmpzWzBdID0gJmJvLT5iYXNlLmJhc2U7CiAJ
CWRybV9nZW1fb2JqZWN0X2dldChvYmpzLT5vYmpzWzBdKTsKIAogCQlyZXQgPSBkcm1fZ2VtX2xv
Y2tfcmVzZXJ2YXRpb25zKG9ianMtPm9ianMsIG9ianMtPm5lbnRzLApAQCAtMTQ4LDc1ICsxNDUs
MTIgQEAgaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZp
Y2UgKnZnZGV2LAogCWlmIChmZW5jZSkKIAkJZHJtX2dlbV91bmxvY2tfcmVzZXJ2YXRpb25zKG9i
anMtPm9ianMsIG9ianMtPm5lbnRzLCAmdGlja2V0KTsKIAotCXZpcnRpb19ncHVfaW5pdF90dG1f
cGxhY2VtZW50KGJvKTsKLQlyZXQgPSB0dG1fYm9faW5pdCgmdmdkZXYtPm1tYW4uYmRldiwgJmJv
LT50Ym8sIHBhcmFtcy0+c2l6ZSwKLQkJCSAgdHRtX2JvX3R5cGVfZGV2aWNlLCAmYm8tPnBsYWNl
bWVudCwgMCwKLQkJCSAgdHJ1ZSwgYWNjX3NpemUsIE5VTEwsCi0JCQkgIGJvLT5nZW1fYmFzZS5y
ZXN2LAotCQkJICAmdmlydGlvX2dwdV90dG1fYm9fZGVzdHJveSk7Ci0JLyogdHRtX2JvX2luaXQg
ZmFpbHVyZSB3aWxsIGNhbGwgdGhlIGRlc3Ryb3kgKi8KLQlpZiAocmV0ICE9IDApCisJcmV0ID0g
dmlydGlvX2dwdV9vYmplY3RfYXR0YWNoKHZnZGV2LCBibywgTlVMTCk7CisJaWYgKHJldCAhPSAw
KSB7CisJCXZpcnRpb19ncHVfZnJlZV9vYmplY3QoJnNobWVtX29iai0+YmFzZSk7CiAJCXJldHVy
biByZXQ7CisJfQogCiAJKmJvX3B0ciA9IGJvOwogCXJldHVybiAwOwogfQotCi12b2lkIHZpcnRp
b19ncHVfb2JqZWN0X2t1bm1hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQotewotCWJv
LT52bWFwID0gTlVMTDsKLQl0dG1fYm9fa3VubWFwKCZiby0+a21hcCk7Ci19Ci0KLWludCB2aXJ0
aW9fZ3B1X29iamVjdF9rbWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JYm9v
bCBpc19pb21lbTsKLQlpbnQgcjsKLQotCVdBUk5fT04oYm8tPnZtYXApOwotCi0JciA9IHR0bV9i
b19rbWFwKCZiby0+dGJvLCAwLCBiby0+dGJvLm51bV9wYWdlcywgJmJvLT5rbWFwKTsKLQlpZiAo
cikKLQkJcmV0dXJuIHI7Ci0JYm8tPnZtYXAgPSB0dG1fa21hcF9vYmpfdmlydHVhbCgmYm8tPmtt
YXAsICZpc19pb21lbSk7Ci0JcmV0dXJuIDA7Ci19Ci0KLWludCB2aXJ0aW9fZ3B1X29iamVjdF9n
ZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2LAotCQkJCSAgIHN0cnVj
dCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JaW50IHJldDsKLQlzdHJ1Y3QgcGFnZSAqKnBh
Z2VzID0gYm8tPnRiby50dG0tPnBhZ2VzOwotCWludCBucl9wYWdlcyA9IGJvLT50Ym8ubnVtX3Bh
Z2VzOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7Ci0JCS5pbnRlcnJ1cHRpYmxl
ID0gZmFsc2UsCi0JCS5ub193YWl0X2dwdSA9IGZhbHNlCi0JfTsKLQotCS8qIHd0ZiBzd2FwcGlu
ZyAqLwotCWlmIChiby0+cGFnZXMpCi0JCXJldHVybiAwOwotCi0JaWYgKGJvLT50Ym8udHRtLT5z
dGF0ZSA9PSB0dF91bnBvcHVsYXRlZCkKLQkJYm8tPnRiby50dG0tPmJkZXYtPmRyaXZlci0+dHRt
X3R0X3BvcHVsYXRlKGJvLT50Ym8udHRtLCAmY3R4KTsKLQliby0+cGFnZXMgPSBrbWFsbG9jKHNp
emVvZihzdHJ1Y3Qgc2dfdGFibGUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWJvLT5wYWdlcykKLQkJ
Z290byBvdXQ7Ci0KLQlyZXQgPSBzZ19hbGxvY190YWJsZV9mcm9tX3BhZ2VzKGJvLT5wYWdlcywg
cGFnZXMsIG5yX3BhZ2VzLCAwLAotCQkJCQlucl9wYWdlcyA8PCBQQUdFX1NISUZULCBHRlBfS0VS
TkVMKTsKLQlpZiAocmV0KQotCQlnb3RvIG91dDsKLQlyZXR1cm4gMDsKLW91dDoKLQlrZnJlZShi
by0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci0JcmV0dXJuIC1FTk9NRU07Ci19Ci0KLXZv
aWQgdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3QgKmJvKQotewotCXNnX2ZyZWVfdGFibGUoYm8tPnBhZ2VzKTsKLQlrZnJlZShiby0+cGFnZXMp
OwotCWJvLT5wYWdlcyA9IE5VTEw7Ci19CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmly
dGlvL3ZpcnRncHVfcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9wcmlt
ZS5jCmluZGV4IDhmYmY3MWJkMGM1ZS4uMThhMTU1Y2QwOGQ1IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmly
dGlvL3ZpcnRncHVfcHJpbWUuYwpAQCAtMjgsNDYgKzI4LDkgQEAKICAqIGRldmljZSB0aGF0IG1p
Z2h0IHNoYXJlIGJ1ZmZlcnMgd2l0aCB2aXJ0Z3B1CiAgKi8KIAotc3RydWN0IHNnX3RhYmxlICp2
aXJ0Z3B1X2dlbV9wcmltZV9nZXRfc2dfdGFibGUoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmop
Ci17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192aXJ0aW9fZ3B1X29i
aihvYmopOwotCi0JaWYgKCFiby0+dGJvLnR0bS0+cGFnZXMgfHwgIWJvLT50Ym8udHRtLT5udW1f
cGFnZXMpCi0JCS8qIHNob3VsZCBub3QgaGFwcGVuICovCi0JCXJldHVybiBFUlJfUFRSKC1FSU5W
QUwpOwotCi0JcmV0dXJuIGRybV9wcmltZV9wYWdlc190b19zZyhiby0+dGJvLnR0bS0+cGFnZXMs
Ci0JCQkJICAgICBiby0+dGJvLnR0bS0+bnVtX3BhZ2VzKTsKLX0KLQogc3RydWN0IGRybV9nZW1f
b2JqZWN0ICp2aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUoCiAJc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoLAogCXN0cnVjdCBz
Z190YWJsZSAqdGFibGUpCiB7CiAJcmV0dXJuIEVSUl9QVFIoLUVOT0RFVik7CiB9Ci0KLXZvaWQg
KnZpcnRncHVfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmopCi17Ci0J
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192aXJ0aW9fZ3B1X29iaihvYmop
OwotCWludCByZXQ7Ci0KLQlyZXQgPSB2aXJ0aW9fZ3B1X29iamVjdF9rbWFwKGJvKTsKLQlpZiAo
cmV0KQotCQlyZXR1cm4gTlVMTDsKLQlyZXR1cm4gYm8tPnZtYXA7Ci19Ci0KLXZvaWQgdmlydGdw
dV9nZW1fcHJpbWVfdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCB2b2lkICp2YWRk
cikKLXsKLQl2aXJ0aW9fZ3B1X29iamVjdF9rdW5tYXAoZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKG9i
aikpOwotfQotCi1pbnQgdmlydGdwdV9nZW1fcHJpbWVfbW1hcChzdHJ1Y3QgZHJtX2dlbV9vYmpl
Y3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQotewotCXN0cnVjdCB2
aXJ0aW9fZ3B1X29iamVjdCAqYm8gPSBnZW1fdG9fdmlydGlvX2dwdV9vYmoob2JqKTsKLQotCWJv
LT5nZW1fYmFzZS52bWFfbm9kZS52bV9ub2RlLnN0YXJ0ID0gYm8tPnRiby52bWFfbm9kZS52bV9u
b2RlLnN0YXJ0OwotCXJldHVybiBkcm1fZ2VtX3ByaW1lX21tYXAob2JqLCB2bWEpOwotfQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jIGIvZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAzMDBlZjNhODM1MzguLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfdHRtLmMKKysrIC9kZXYvbnVsbApAQCAtMSwzMDQgKzAsMCBAQAotLyoKLSAqIENv
cHlyaWdodCAoQykgMjAxNSBSZWQgSGF0LCBJbmMuCi0gKiBBbGwgUmlnaHRzIFJlc2VydmVkLgot
ICoKLSAqIEF1dGhvcnM6Ci0gKiAgICBEYXZlIEFpcmxpZQotICogICAgQWxvbiBMZXZ5Ci0gKgot
ICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBw
ZXJzb24gb2J0YWluaW5nIGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRl
ZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCi0gKiB0byBkZWFsIGluIHRo
ZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0
aW9uCi0gKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwg
ZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKLSAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29m
dHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQotICogU29mdHdhcmUgaXMg
ZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoK
LSAqCi0gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5v
dGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgotICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBw
b3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCi0gKgotICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVE
ICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKLSAqIElN
UExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVS
Q0hBTlRBQklMSVRZLAotICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5P
TklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCi0gKiBUSEUgQ09QWVJJR0hUIEhPTERF
UihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKLSAq
IE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQg
T1IgT1RIRVJXSVNFLAotICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBX
SVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCi0gKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUg
U09GVFdBUkUuCi0gKi8KLQotI2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2FwaS5oPgotI2luY2x1
ZGUgPGRybS90dG0vdHRtX2JvX2RyaXZlci5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX3BsYWNl
bWVudC5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX3BhZ2VfYWxsb2MuaD4KLSNpbmNsdWRlIDxk
cm0vdHRtL3R0bV9tb2R1bGUuaD4KLSNpbmNsdWRlIDxkcm0vZHJtUC5oPgotI2luY2x1ZGUgPGRy
bS9kcm0uaD4KLSNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4KLSNpbmNsdWRlICJ2aXJ0Z3B1
X2Rydi5oIgotCi0jaW5jbHVkZSA8bGludXgvZGVsYXkuaD4KLQotc3RhdGljIHN0cnVjdAotdmly
dGlvX2dwdV9kZXZpY2UgKnZpcnRpb19ncHVfZ2V0X3ZnZGV2KHN0cnVjdCB0dG1fYm9fZGV2aWNl
ICpiZGV2KQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gKm1tYW47Ci0Jc3RydWN0IHZpcnRp
b19ncHVfZGV2aWNlICp2Z2RldjsKLQotCW1tYW4gPSBjb250YWluZXJfb2YoYmRldiwgc3RydWN0
IHZpcnRpb19ncHVfbW1hbiwgYmRldik7Ci0JdmdkZXYgPSBjb250YWluZXJfb2YobW1hbiwgc3Ry
dWN0IHZpcnRpb19ncHVfZGV2aWNlLCBtbWFuKTsKLQlyZXR1cm4gdmdkZXY7Ci19Ci0KLWludCB2
aXJ0aW9fZ3B1X21tYXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAq
dm1hKQotewotCXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2OwotCXN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXY7Ci0JaW50IHI7Ci0KLQlmaWxlX3ByaXYgPSBmaWxwLT5wcml2YXRlX2Rh
dGE7Ci0JdmdkZXYgPSBmaWxlX3ByaXYtPm1pbm9yLT5kZXYtPmRldl9wcml2YXRlOwotCWlmICh2
Z2RldiA9PSBOVUxMKSB7Ci0JCURSTV9FUlJPUigKLQkJICJmaWxwLT5wcml2YXRlX2RhdGEtPm1p
bm9yLT5kZXYtPmRldl9wcml2YXRlID09IE5VTExcbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9
Ci0JciA9IHR0bV9ib19tbWFwKGZpbHAsIHZtYSwgJnZnZGV2LT5tbWFuLmJkZXYpOwotCi0JcmV0
dXJuIHI7Ci19Ci0KLXN0YXRpYyBpbnQgdmlydGlvX2dwdV9pbnZhbGlkYXRlX2NhY2hlcyhzdHJ1
Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJCQkJdWludDMyX3QgZmxhZ3MpCi17Ci0JcmV0dXJu
IDA7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl9nZXRfbm9kZShzdHJ1Y3QgdHRtX21lbV90
eXBlX21hbmFnZXIgKm1hbiwKLQkJCSAgICAgICBzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJv
LAotCQkJICAgICAgIGNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAotCQkJICAgICAgIHN0
cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCW1lbS0+bW1fbm9kZSA9ICh2b2lkICopMTsKLQly
ZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9wdXRfbm9kZShzdHJ1Y3QgdHRt
X21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCQlzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsK
LQltZW0tPm1tX25vZGUgPSAodm9pZCAqKU5VTEw7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21h
bl9pbml0KHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuLAotCQkJICAgdW5zaWduZWQg
bG9uZyBwX3NpemUpCi17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl90
YWtlZG93bihzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbikKLXsKLQlyZXR1cm4gMDsK
LX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9kZWJ1ZyhzdHJ1Y3QgdHRtX21lbV90eXBlX21h
bmFnZXIgKm1hbiwKLQkJCSAgICAgc3RydWN0IGRybV9wcmludGVyICpwcmludGVyKQotewotfQot
Ci1zdGF0aWMgY29uc3Qgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyX2Z1bmMgdmlydGlvX2dw
dV9ib19tYW5hZ2VyX2Z1bmMgPSB7Ci0JLmluaXQgPSB0dG1fYm9fbWFuX2luaXQsCi0JLnRha2Vk
b3duID0gdHRtX2JvX21hbl90YWtlZG93biwKLQkuZ2V0X25vZGUgPSB0dG1fYm9fbWFuX2dldF9u
b2RlLAotCS5wdXRfbm9kZSA9IHR0bV9ib19tYW5fcHV0X25vZGUsCi0JLmRlYnVnID0gdHRtX2Jv
X21hbl9kZWJ1ZwotfTsKLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X2luaXRfbWVtX3R5cGUoc3Ry
dWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsIHVpbnQzMl90IHR5cGUsCi0JCQkJICAgIHN0cnVjdCB0
dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuKQotewotCXN3aXRjaCAodHlwZSkgewotCWNhc2UgVFRN
X1BMX1NZU1RFTToKLQkJLyogU3lzdGVtIG1lbW9yeSAqLwotCQltYW4tPmZsYWdzID0gVFRNX01F
TVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9N
QVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVE
OwotCQlicmVhazsKLQljYXNlIFRUTV9QTF9UVDoKLQkJbWFuLT5mdW5jID0gJnZpcnRpb19ncHVf
Ym9fbWFuYWdlcl9mdW5jOwotCQltYW4tPmZsYWdzID0gVFRNX01FTVRZUEVfRkxBR19NQVBQQUJM
RTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkc7Ci0JCW1h
bi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVEOwotCQlicmVhazsKLQlkZWZh
dWx0OgotCQlEUk1fRVJST1IoIlVuc3VwcG9ydGVkIG1lbW9yeSB0eXBlICV1XG4iLCAodW5zaWdu
ZWQgaW50KXR5cGUpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0
YXRpYyB2b2lkIHZpcnRpb19ncHVfZXZpY3RfZmxhZ3Moc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0
ICpibywKLQkJCQlzdHJ1Y3QgdHRtX3BsYWNlbWVudCAqcGxhY2VtZW50KQotewotCXN0YXRpYyBj
b25zdCBzdHJ1Y3QgdHRtX3BsYWNlIHBsYWNlbWVudHMgPSB7Ci0JCS5mcGZuICA9IDAsCi0JCS5s
cGZuICA9IDAsCi0JCS5mbGFncyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkcgfCBUVE1fUExfRkxBR19T
WVNURU0sCi0JfTsKLQotCXBsYWNlbWVudC0+cGxhY2VtZW50ID0gJnBsYWNlbWVudHM7Ci0JcGxh
Y2VtZW50LT5idXN5X3BsYWNlbWVudCA9ICZwbGFjZW1lbnRzOwotCXBsYWNlbWVudC0+bnVtX3Bs
YWNlbWVudCA9IDE7Ci0JcGxhY2VtZW50LT5udW1fYnVzeV9wbGFjZW1lbnQgPSAxOwotfQotCi1z
dGF0aWMgaW50IHZpcnRpb19ncHVfdmVyaWZ5X2FjY2VzcyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmpl
Y3QgKmJvLAotCQkJCSAgICBzdHJ1Y3QgZmlsZSAqZmlscCkKLXsKLQlyZXR1cm4gMDsKLX0KLQot
c3RhdGljIGludCB2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fcmVzZXJ2ZShzdHJ1Y3QgdHRtX2JvX2Rl
dmljZSAqYmRldiwKLQkJCQkJIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCXN0cnVjdCB0
dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuID0gJmJkZXYtPm1hblttZW0tPm1lbV90eXBlXTsKLQot
CW1lbS0+YnVzLmFkZHIgPSBOVUxMOwotCW1lbS0+YnVzLm9mZnNldCA9IDA7Ci0JbWVtLT5idXMu
c2l6ZSA9IG1lbS0+bnVtX3BhZ2VzIDw8IFBBR0VfU0hJRlQ7Ci0JbWVtLT5idXMuYmFzZSA9IDA7
Ci0JbWVtLT5idXMuaXNfaW9tZW0gPSBmYWxzZTsKLQlpZiAoIShtYW4tPmZsYWdzICYgVFRNX01F
TVRZUEVfRkxBR19NQVBQQUJMRSkpCi0JCXJldHVybiAtRUlOVkFMOwotCXN3aXRjaCAobWVtLT5t
ZW1fdHlwZSkgewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQljYXNlIFRUTV9QTF9UVDoKLQkJLyog
c3lzdGVtIG1lbW9yeSAqLwotCQlyZXR1cm4gMDsKLQlkZWZhdWx0OgotCQlyZXR1cm4gLUVJTlZB
TDsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfdHRtX2lvX21l
bV9mcmVlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJCSAgICAgICBzdHJ1Y3QgdHRt
X21lbV9yZWcgKm1lbSkKLXsKLX0KLQotLyoKLSAqIFRUTSBiYWNrZW5kIGZ1bmN0aW9ucy4KLSAq
Lwotc3RydWN0IHZpcnRpb19ncHVfdHRtX3R0IHsKLQlzdHJ1Y3QgdHRtX2RtYV90dAkJdHRtOwot
CXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAgICAgICAgKm9iajsKLX07Ci0KLXN0YXRpYyBpbnQg
dmlydGlvX2dwdV90dG1fdHRfYmluZChzdHJ1Y3QgdHRtX3R0ICp0dG0sCi0JCQkJICBzdHJ1Y3Qg
dHRtX21lbV9yZWcgKmJvX21lbSkKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dCA9
Ci0JCWNvbnRhaW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7
Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9Ci0JCXZpcnRpb19ncHVfZ2V0X3Zn
ZGV2KGd0dC0+b2JqLT50Ym8uYmRldik7Ci0KLQl2aXJ0aW9fZ3B1X29iamVjdF9hdHRhY2godmdk
ZXYsIGd0dC0+b2JqLCBOVUxMKTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCB2aXJ0aW9f
Z3B1X3R0bV90dF91bmJpbmQoc3RydWN0IHR0bV90dCAqdHRtKQotewotCXN0cnVjdCB2aXJ0aW9f
Z3B1X3R0bV90dCAqZ3R0ID0KLQkJY29udGFpbmVyX29mKHR0bSwgc3RydWN0IHZpcnRpb19ncHVf
dHRtX3R0LCB0dG0udHRtKTsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0KLQkJ
dmlydGlvX2dwdV9nZXRfdmdkZXYoZ3R0LT5vYmotPnRiby5iZGV2KTsKLQotCXZpcnRpb19ncHVf
b2JqZWN0X2RldGFjaCh2Z2RldiwgZ3R0LT5vYmopOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMg
dm9pZCB2aXJ0aW9fZ3B1X3R0bV90dF9kZXN0cm95KHN0cnVjdCB0dG1fdHQgKnR0bSkKLXsKLQlz
dHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNvbnRhaW5lcl9vZih0dG0sIHN0cnVj
dCB2aXJ0aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7Ci0KLQl0dG1fZG1hX3R0X2ZpbmkoJmd0dC0+
dHRtKTsKLQlrZnJlZShndHQpOwotfQotCi1zdGF0aWMgc3RydWN0IHR0bV9iYWNrZW5kX2Z1bmMg
dmlydGlvX2dwdV90dF9mdW5jID0gewotCS5iaW5kID0gJnZpcnRpb19ncHVfdHRtX3R0X2JpbmQs
Ci0JLnVuYmluZCA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQsCi0JLmRlc3Ryb3kgPSAmdmly
dGlvX2dwdV90dG1fdHRfZGVzdHJveSwKLX07Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX3R0ICp2aXJ0
aW9fZ3B1X3R0bV90dF9jcmVhdGUoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKLQkJCQkJ
ICAgICAgIHVpbnQzMl90IHBhZ2VfZmxhZ3MpCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNl
ICp2Z2RldjsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dDsKLQotCXZnZGV2ID0gdmly
dGlvX2dwdV9nZXRfdmdkZXYoYm8tPmJkZXYpOwotCWd0dCA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVj
dCB2aXJ0aW9fZ3B1X3R0bV90dCksIEdGUF9LRVJORUwpOwotCWlmIChndHQgPT0gTlVMTCkKLQkJ
cmV0dXJuIE5VTEw7Ci0JZ3R0LT50dG0udHRtLmZ1bmMgPSAmdmlydGlvX2dwdV90dF9mdW5jOwot
CWd0dC0+b2JqID0gY29udGFpbmVyX29mKGJvLCBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QsIHRi
byk7Ci0JaWYgKHR0bV9kbWFfdHRfaW5pdCgmZ3R0LT50dG0sIGJvLCBwYWdlX2ZsYWdzKSkgewot
CQlrZnJlZShndHQpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0JcmV0dXJuICZndHQtPnR0bS50dG07
Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfYm9fc3dhcF9ub3RpZnkoc3RydWN0IHR0bV9i
dWZmZXJfb2JqZWN0ICp0Ym8pCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibzsKLQot
CWJvID0gY29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCB0Ym8pOwot
Ci0JaWYgKGJvLT5wYWdlcykKLQkJdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShibyk7
Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX2JvX2RyaXZlciB2aXJ0aW9fZ3B1X2JvX2RyaXZlciA9
IHsKLQkudHRtX3R0X2NyZWF0ZSA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF9jcmVhdGUsCi0JLmludmFs
aWRhdGVfY2FjaGVzID0gJnZpcnRpb19ncHVfaW52YWxpZGF0ZV9jYWNoZXMsCi0JLmluaXRfbWVt
X3R5cGUgPSAmdmlydGlvX2dwdV9pbml0X21lbV90eXBlLAotCS5ldmljdGlvbl92YWx1YWJsZSA9
IHR0bV9ib19ldmljdGlvbl92YWx1YWJsZSwKLQkuZXZpY3RfZmxhZ3MgPSAmdmlydGlvX2dwdV9l
dmljdF9mbGFncywKLQkudmVyaWZ5X2FjY2VzcyA9ICZ2aXJ0aW9fZ3B1X3ZlcmlmeV9hY2Nlc3Ms
Ci0JLmlvX21lbV9yZXNlcnZlID0gJnZpcnRpb19ncHVfdHRtX2lvX21lbV9yZXNlcnZlLAotCS5p
b19tZW1fZnJlZSA9ICZ2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fZnJlZSwKLQkuc3dhcF9ub3RpZnkg
PSAmdmlydGlvX2dwdV9ib19zd2FwX25vdGlmeSwKLX07Ci0KLWludCB2aXJ0aW9fZ3B1X3R0bV9p
bml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpCi17Ci0JaW50IHI7Ci0KLQkvKiBO
byBvdGhlcnMgdXNlciBvZiBhZGRyZXNzIHNwYWNlIHNvIHNldCBpdCB0byAwICovCi0JciA9IHR0
bV9ib19kZXZpY2VfaW5pdCgmdmdkZXYtPm1tYW4uYmRldiwKLQkJCSAgICAgICAmdmlydGlvX2dw
dV9ib19kcml2ZXIsCi0JCQkgICAgICAgdmdkZXYtPmRkZXYtPmFub25faW5vZGUtPmlfbWFwcGlu
ZywKLQkJCSAgICAgICBmYWxzZSk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJmYWlsZWQgaW5p
dGlhbGl6aW5nIGJ1ZmZlciBvYmplY3QgZHJpdmVyKCVkKS5cbiIsIHIpOwotCQlnb3RvIGVycl9k
ZXZfaW5pdDsKLQl9Ci0KLQlyID0gdHRtX2JvX2luaXRfbW0oJnZnZGV2LT5tbWFuLmJkZXYsIFRU
TV9QTF9UVCwgMCk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJGYWlsZWQgaW5pdGlhbGl6aW5n
IEdUVCBoZWFwLlxuIik7Ci0JCWdvdG8gZXJyX21tX2luaXQ7Ci0JfQotCXJldHVybiAwOwotCi1l
cnJfbW1faW5pdDoKLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZnZGV2LT5tbWFuLmJkZXYpOwot
ZXJyX2Rldl9pbml0OgotCXJldHVybiByOwotfQotCi12b2lkIHZpcnRpb19ncHVfdHRtX2Zpbmko
c3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldikKLXsKLQl0dG1fYm9fZGV2aWNlX3JlbGVh
c2UoJnZnZGV2LT5tbWFuLmJkZXYpOwotCURSTV9JTkZPKCJ2aXJ0aW9fZ3B1OiB0dG0gZmluYWxp
emVkXG4iKTsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92
cS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMKaW5kZXggMGE3MzVlNTFh
ODAzLi4wNDVmZjc5YTA1NGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmly
dGdwdV92cS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jCkBAIC05
NzUsMTcgKzk3NSwyMSBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfYXR0YWNoKHN0cnVjdCB2aXJ0
aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJYm9vbCB1c2VfZG1hX2FwaSA9ICF2aXJ0aW9faGFzX2lv
bW11X3F1aXJrKHZnZGV2LT52ZGV2KTsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9tZW1fZW50cnkgKmVu
dHM7CiAJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZzsKLQlpbnQgc2ksIG5lbnRzOworCWludCBzaSwg
bmVudHMsIHJldDsKIAogCWlmIChXQVJOX09OX09OQ0UoIW9iai0+Y3JlYXRlZCkpCiAJCXJldHVy
biAtRUlOVkFMOworCWlmIChXQVJOX09OX09OQ0Uob2JqLT5wYWdlcykpCisJCXJldHVybiAtRUlO
VkFMOwogCi0JaWYgKCFvYmotPnBhZ2VzKSB7Ci0JCWludCByZXQ7CisJcmV0ID0gZHJtX2dlbV9z
aG1lbV9waW4oJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0dXJuIC1FSU5W
QUw7CiAKLQkJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfZ2V0X3NnX3RhYmxlKHZnZGV2LCBvYmop
OwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKKwlvYmotPnBhZ2VzID0gZHJtX2dlbV9zaG1l
bV9nZXRfc2dfdGFibGUoJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAob2JqLT5wYWdlcyA9PSBOVUxM
KSB7CisJCWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKKwkJcmV0dXJuIC1F
SU5WQUw7CiAJfQogCiAJaWYgKHVzZV9kbWFfYXBpKSB7CkBAIC0xMDI0LDYgKzEwMjgsOSBAQCB2
b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZn
ZGV2LAogewogCWJvb2wgdXNlX2RtYV9hcGkgPSAhdmlydGlvX2hhc19pb21tdV9xdWlyayh2Z2Rl
di0+dmRldik7CiAKKwlpZiAoV0FSTl9PTl9PTkNFKCFvYmotPnBhZ2VzKSkKKwkJcmV0dXJuOwor
CiAJaWYgKHVzZV9kbWFfYXBpICYmIG9iai0+bWFwcGVkKSB7CiAJCXN0cnVjdCB2aXJ0aW9fZ3B1
X2ZlbmNlICpmZW5jZSA9IHZpcnRpb19ncHVfZmVuY2VfYWxsb2ModmdkZXYpOwogCQkvKiBkZXRh
Y2ggYmFja2luZyBhbmQgd2FpdCBmb3IgdGhlIGhvc3QgcHJvY2VzcyBpdCAuLi4gKi8KQEAgLTEw
MzksNiArMTA0NiwxMSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3Qgdmly
dGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCX0gZWxzZSB7CiAJCXZpcnRpb19ncHVfY21kX3Jlc291
cmNlX2ludmFsX2JhY2tpbmcodmdkZXYsIG9iai0+aHdfcmVzX2hhbmRsZSwgTlVMTCk7CiAJfQor
CisJc2dfZnJlZV90YWJsZShvYmotPnBhZ2VzKTsKKwlvYmotPnBhZ2VzID0gTlVMTDsKKworCWRy
bV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKIH0KIAogdm9pZCB2aXJ0aW9fZ3B1
X2N1cnNvcl9waW5nKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L0tjb25maWcKaW5kZXggYmEzNmU5MzNiYjQ5Li5lZmYzMDQ3MDUyZDQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L0tjb25maWcKQEAgLTMsNyArMyw3IEBAIGNvbmZpZyBEUk1fVklSVElPX0dQVQogCXRyaXN0YXRl
ICJWaXJ0aW8gR1BVIGRyaXZlciIKIAlkZXBlbmRzIG9uIERSTSAmJiBWSVJUSU8gJiYgTU1VCiAJ
c2VsZWN0IERSTV9LTVNfSEVMUEVSCi0Jc2VsZWN0IERSTV9UVE0KKwlzZWxlY3QgRFJNX0dFTV9T
SE1FTV9IRUxQRVIKIAloZWxwCiAJICAgVGhpcyBpcyB0aGUgdmlydHVhbCBHUFUgZHJpdmVyIGZv
ciB2aXJ0aW8uICBJdCBjYW4gYmUgdXNlZCB3aXRoCiAJICAgUUVNVSBiYXNlZCBWTU1zIChsaWtl
IEtWTSBvciBYZW4pLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmls
ZSBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUKaW5kZXggNDU4ZTYwNmE5MzZmLi45
MmFhMmIzZDM0OWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUK
KysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQpAQCAtNCw3ICs0LDcgQEAKICMg
RGlyZWN0IFJlbmRlcmluZyBJbmZyYXN0cnVjdHVyZSAoRFJJKSBpbiBYRnJlZTg2IDQuMS4wIGFu
ZCBoaWdoZXIuCiAKIHZpcnRpby1ncHUteSA6PSB2aXJ0Z3B1X2Rydi5vIHZpcnRncHVfa21zLm8g
dmlydGdwdV9nZW0ubyBcCi0JdmlydGdwdV9kaXNwbGF5Lm8gdmlydGdwdV92cS5vIHZpcnRncHVf
dHRtLm8gXAorCXZpcnRncHVfZGlzcGxheS5vIHZpcnRncHVfdnEubyBcCiAJdmlydGdwdV9mZW5j
ZS5vIHZpcnRncHVfb2JqZWN0Lm8gdmlydGdwdV9kZWJ1Z2ZzLm8gdmlydGdwdV9wbGFuZS5vIFwK
IAl2aXJ0Z3B1X2lvY3RsLm8gdmlydGdwdV9wcmltZS5vIHZpcnRncHVfdHJhY2VfcG9pbnRzLm8K
IAotLSAKMi4xOC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2
ZWw=
