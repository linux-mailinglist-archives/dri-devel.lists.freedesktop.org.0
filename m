Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id B9006325FF7
	for <lists+dri-devel@lfdr.de>; Fri, 26 Feb 2021 10:26:57 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0EB176E8E8;
	Fri, 26 Feb 2021 09:26:54 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CF08E6E8E8
 for <dri-devel@lists.freedesktop.org>; Fri, 26 Feb 2021 09:26:51 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 61464ACD9;
 Fri, 26 Feb 2021 09:26:50 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: daniel@ffwll.ch, airlied@linux.ie, maarten.lankhorst@linux.intel.com,
 mripard@kernel.org, sumit.semwal@linaro.org, christian.koenig@amd.com,
 gregkh@linuxfoundation.org, hdegoede@redhat.com, sean@poorly.run,
 noralf@tronnes.org, stern@rowland.harvard.edu
Subject: [PATCH v5] drm: Use USB controller's DMA mask when importing dmabufs
Date: Fri, 26 Feb 2021 10:26:47 +0100
Message-Id: <20210226092648.4584-1-tzimmermann@suse.de>
X-Mailer: git-send-email 2.30.1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, stable@vger.kernel.org,
 dri-devel@lists.freedesktop.org, Pavel Machek <pavel@ucw.cz>,
 Christoph Hellwig <hch@lst.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VVNCIGRldmljZXMgY2Fubm90IHBlcmZvcm0gRE1BIGFuZCBoZW5jZSBoYXZlIG5vIGRtYV9tYXNr
IHNldCBpbiB0aGVpcgpkZXZpY2Ugc3RydWN0dXJlLiBUaGVyZWZvcmUgaW1wb3J0aW5nIGRtYWJ1
ZiBpbnRvIGEgVVNCLWJhc2VkIGRyaXZlcgpmYWlscywgd2hpY2ggYnJlYWtzIGpvaW5pbmcgYW5k
IG1pcnJvcmluZyBvZiBkaXNwbGF5IGluIFgxMS4KCkZvciBVU0IgZGV2aWNlcywgcGljayB0aGUg
YXNzb2NpYXRlZCBVU0IgY29udHJvbGxlciBhcyBhdHRhY2htZW50IGRldmljZS4KVGhpcyBhbGxv
d3MgdGhlIERSTSBpbXBvcnQgaGVscGVycyB0byBwZXJmb3JtIHRoZSBETUEgc2V0dXAuIElmIHRo
ZSBETUEKY29udHJvbGxlciBkb2VzIG5vdCBzdXBwb3J0IERNQSB0cmFuc2ZlcnMsIHdlJ3JlIG91
dCBvZiBsdWNrIGFuZCBjYW5ub3QKaW1wb3J0LiBPdXIgY3VycmVudCBVU0ItYmFzZWQgRFJNIGRy
aXZlcnMgZG9uJ3QgdXNlIERNQSwgc28gdGhlIGFjdHVhbApETUEgZGV2aWNlIGlzIG5vdCBpbXBv
cnRhbnQuCgpEcml2ZXJzIHNob3VsZCB1c2UgRFJNX0dFTV9TSE1FTV9EUk9WRVJfT1BTX1VTQiB0
byBpbml0aWFsaXplIHRoZWlyCmluc3RhbmNlIG9mIHN0cnVjdCBkcm1fZHJpdmVyLgoKVGVzdGVk
IGJ5IGpvaW5pbmcvbWlycm9yaW5nIGRpc3BsYXlzIG9mIHVkbCBhbmQgcmFkZW9uIHVuIGRlciBH
bm9tZS9YMTEuCgp2NToKCSogcHJvdmlkZSBhIGhlbHBlciBmb3IgVVNCIGludGVyZmFjZXMgKEFs
YW4pCgkqIGFkZCBGSVhNRSBpdGVtIHRvIGRvY3VtZW50YXRpb24gYW5kIFRPRE8gbGlzdCAoRGFu
aWVsKQp2NDoKCSogaW1wbGVtZW50IHdvcmthcm91bmQgd2l0aCBVU0IgaGVscGVyIGZ1bmN0aW9u
cyAoR3JlZykKCSogdXNlIHN0cnVjdCB1c2JfZGV2aWNlLT5idXMtPnN5c2RldiBhcyBETUEgZGV2
aWNlIChUYWthc2hpKQp2MzoKCSogZHJvcCBnZW1fY3JlYXRlX29iamVjdAoJKiB1c2UgRE1BIG1h
c2sgb2YgVVNCIGNvbnRyb2xsZXIsIGlmIGFueSAoRGFuaWVsLCBDaHJpc3RpYW4sIE5vcmFsZikK
djI6CgkqIG1vdmUgZml4IHRvIGltcG9ydGVyIHNpZGUgKENocmlzdGlhbiwgRGFuaWVsKQoJKiB1
cGRhdGUgU0hNRU0gYW5kIENNQSBoZWxwZXJzIGZvciBuZXcgUFJJTUUgY2FsbGJhY2tzCgpTaWdu
ZWQtb2ZmLWJ5OiBUaG9tYXMgWmltbWVybWFubiA8dHppbW1lcm1hbm5Ac3VzZS5kZT4KRml4ZXM6
IDZlYjAyMzNlYzJkMCAoInVzYjogZG9uJ3QgaW5oZXJpdHkgRE1BIHByb3BlcnRpZXMgZm9yIFVT
QiBkZXZpY2VzIikKVGVzdGVkLWJ5OiBQYXZlbCBNYWNoZWsgPHBhdmVsQHVjdy5jej4KQWNrZWQt
Ynk6IENocmlzdGlhbiBLw7ZuaWcgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4KQWNrZWQtYnk6
IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAZmZ3bGwuY2g+CkNjOiBDaHJpc3RvcGggSGVs
bHdpZyA8aGNoQGxzdC5kZT4KQ2M6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91
bmRhdGlvbi5vcmc+CkNjOiA8c3RhYmxlQHZnZXIua2VybmVsLm9yZz4gIyB2NS4xMCsKLS0tCiBE
b2N1bWVudGF0aW9uL2dwdS90b2RvLnJzdCAgICAgICAgIHwgMTUgKysrKysrKysrKwogZHJpdmVy
cy9ncHUvZHJtL2RybV9wcmltZS5jICAgICAgICB8IDQ1ICsrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKwogZHJpdmVycy9ncHUvZHJtL3RpbnkvZ20xMnUzMjAuYyAgICB8ICAyICstCiBkcml2
ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuYyAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdXNiL2NvcmUv
dXNiLmMgICAgICAgICAgICAgfCAzMSArKysrKysrKysrKysrKysrKysrKwogaW5jbHVkZS9kcm0v
ZHJtX2dlbV9zaG1lbV9oZWxwZXIuaCB8IDE2ICsrKysrKysrKysrCiBpbmNsdWRlL2RybS9kcm1f
cHJpbWUuaCAgICAgICAgICAgIHwgIDUgKysrKwogaW5jbHVkZS9saW51eC91c2IuaCAgICAgICAg
ICAgICAgICB8IDI0ICsrKysrKysrKysrKysrKysKIDggZmlsZXMgY2hhbmdlZCwgMTM4IGluc2Vy
dGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9ncHUv
dG9kby5yc3QgYi9Eb2N1bWVudGF0aW9uL2dwdS90b2RvLnJzdAppbmRleCBmODcyZDNkMzMyMTgu
LmMxODVlMGEyOTUxZSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QKKysr
IGIvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QKQEAgLTYxNyw2ICs2MTcsMjEgQEAgQ29udGFj
dDogRGFuaWVsIFZldHRlcgogCiBMZXZlbDogSW50ZXJtZWRpYXRlCiAKK1JlbW92ZSBhdXRvbWF0
aWMgcGFnZSBtYXBwaW5nIGZyb20gZG1hLWJ1ZiBpbXBvcnRpbmcKKy0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworV2hlbiBpbXBvcnRpbmcgZG1h
LWJ1ZnMsIHRoZSBkbWEtYnVmIGFuZCBQUklNRSBmcmFtZXdvcmtzIGF1dG9tYXRpY2FsbHkgbWFw
CitpbXBvcnRlZCBwYWdlcyBpbnRvIHRoZSBpbXBvcnRlcidzIERNQSBhcmVhLiBUaGlzIGlzIGEg
cHJvYmxlbSBmb3IgVVNCIGRldmljZXMsCit3aGljaCBkbyBub3Qgc3VwcG9ydCBETUEgb3BlcmF0
aW9ucy4gQnkgZGVmYXVsdCwgaW1wb3J0aW5nIGZhaWxzIGZvciBVU0IKK2RldmljZXMuIFVTQi1i
YXNlZCBkcml2ZXJzIHdvcmsgYXJvdW5kIHRoaXMgcHJvYmxlbSBieSBlbXBsb3lpbmcKK2RybV9n
ZW1fcHJpbWVfaW1wb3J0X3VzYigpLiBUbyBmaXggdGhlIGlzc3VlLCBhdXRvbWF0aWMgcGFnZSBt
YXBwaW5ncyBzaG91bGQKK2JlIHJlbW92ZWQgZnJvbSB0aGUgYnVmZmVyLXNoYXJpbmcgY29kZS4K
KworQ29udGFjdDogVGhvbWFzIFppbW1lcm1hbm4gPHR6aW1tZXJtYW5uQHN1c2UuZGU+LCBEYW5p
ZWwgVmV0dGVyCisKK0xldmVsOiBBZHZhbmNlZAorCisKIEJldHRlciBUZXN0aW5nCiA9PT09PT09
PT09PT09PQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX3ByaW1lLmMgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX3ByaW1lLmMKaW5kZXggMmE1NGY4Njg1NmFmLi41OTAxM2JiMWNkNGIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fcHJpbWUuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vZHJtX3ByaW1lLmMKQEAgLTI5LDYgKzI5LDcgQEAKICNpbmNsdWRlIDxsaW51eC9leHBv
cnQuaD4KICNpbmNsdWRlIDxsaW51eC9kbWEtYnVmLmg+CiAjaW5jbHVkZSA8bGludXgvcmJ0cmVl
Lmg+CisjaW5jbHVkZSA8bGludXgvdXNiLmg+CiAKICNpbmNsdWRlIDxkcm0vZHJtLmg+CiAjaW5j
bHVkZSA8ZHJtL2RybV9kcnYuaD4KQEAgLTEwNTUsMyArMTA1Niw0NyBAQCB2b2lkIGRybV9wcmlt
ZV9nZW1fZGVzdHJveShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgc3RydWN0IHNnX3RhYmxl
ICpzZykKIAlkbWFfYnVmX3B1dChkbWFfYnVmKTsKIH0KIEVYUE9SVF9TWU1CT0woZHJtX3ByaW1l
X2dlbV9kZXN0cm95KTsKKworLyoqCisgKiBkcm1fZ2VtX3ByaW1lX2ltcG9ydF91c2IgLSBoZWxw
ZXIgbGlicmFyeSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgaW1wb3J0IGNhbGxiYWNrIGZvciBVU0Ig
ZGV2aWNlcworICogQGRldjogZHJtX2RldmljZSB0byBpbXBvcnQgaW50bworICogQGRtYV9idWY6
IGRtYS1idWYgb2JqZWN0IHRvIGltcG9ydAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRp
b24gb2YgZHJtX2dlbV9wcmltZV9pbXBvcnQoKSBmb3IgVVNCLWJhc2VkIGRldmljZXMuCisgKiBV
U0IgZGV2aWNlcyBjYW5ub3QgcGVyZm9ybSBETUEgZGlyZWN0bHkuIFRoaXMgZnVuY3Rpb24gc2Vs
ZWN0cyB0aGUgVVNCIGhvc3QKKyAqIGNvbnRyb2xsZXIgYXMgRE1BIGRldmljZSBpbnN0ZWFkLiBE
cml2ZXJzIGNhbiB1c2UgdGhpcyBhcyB0aGVpcgorICogJmRybV9kcml2ZXIuZ2VtX3ByaW1lX2lt
cG9ydCBpbXBsZW1lbnRhdGlvbi4KKyAqCisgKiBTZWUgYWxzbyBkcm1fZ2VtX3ByaW1lX2ltcG9y
dCgpLgorICoKKyAqIEZJWE1FOiBUaGUgZG1hLWJ1ZiBmcmFtZXdvcmsgZXhwZWN0cyB0byBtYXAg
dGhlIGV4cG9ydGVkIHBhZ2VzIGludG8KKyAqICAgICAgICB0aGUgaW1wb3J0ZXIncyBETUEgYXJl
YS4gVVNCIGRldmljZXMgZG9uJ3Qgc3VwcG9ydCBETUEsIGFuZAorICogICAgICAgIGltcG9ydGlu
ZyB3b3VsZCBmYWlsLiBGb2lyIHRoZSB0aW1lIGJlaW5nLCB0aGlzIGZ1bmN0aW9uIHByb3ZpZGVz
CisgKiAgICAgICAgYSB3b3JrYXJvdW5kIGJ5IHVzaW5nIHRoZSBVU0IgY29udHJvbGxlcidzIERN
QSBhcmVhLiBUaGUgcmVhbAorICogICAgICAgIHNvbHV0aW9uIGlzIHRvIHJlbW92ZSBwYWdlLW1h
cHBpbmcgb3BlcmF0aW9ucyBmcm9tIHRoZSBkbWEtYnVmCisgKiAgICAgICAgZnJhbWV3b3JrLgor
ICoKKyAqIFJldHVybnM6IEEgR0VNIG9iamVjdCBvbiBzdWNjZXNzLCBvciBhIHBvaW50ZXItZW5j
b2RlciBlcnJubyB2YWx1ZSBvdGhlcndpc2UuCisgKi8KKyNpZmRlZiBDT05GSUdfVVNCCitzdHJ1
Y3QgZHJtX2dlbV9vYmplY3QgKmRybV9nZW1fcHJpbWVfaW1wb3J0X3VzYihzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LAorCQkJCQkJc3RydWN0IGRtYV9idWYgKmRtYV9idWYpCit7CisJc3RydWN0IGRl
dmljZSAqZG1hZGV2OworCXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqOworCisJaWYgKCFkZXZf
aXNfdXNiKGRldi0+ZGV2KSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT0RFVik7CisKKwlkbWFkZXYg
PSB1c2JfaW50Zl9nZXRfZG1hX2RldmljZSh0b191c2JfaW50ZXJmYWNlKGRldi0+ZGV2KSk7CisJ
aWYgKGRybV9XQVJOX09OQ0UoZGV2LCAhZG1hZGV2LCAiYnVmZmVyIHNoYXJpbmcgbm90IHN1cHBv
cnRlZCIpKQorCQlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKKworCW9iaiA9IGRybV9nZW1fcHJp
bWVfaW1wb3J0X2RldihkZXYsIGRtYV9idWYsIGRtYWRldik7CisKKwlwdXRfZGV2aWNlKGRtYWRl
dik7CisKKwlyZXR1cm4gb2JqOworfQorRVhQT1JUX1NZTUJPTChkcm1fZ2VtX3ByaW1lX2ltcG9y
dF91c2IpOworI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdGlueS9nbTEydTMy
MC5jIGIvZHJpdmVycy9ncHUvZHJtL3RpbnkvZ20xMnUzMjAuYwppbmRleCAwYjRmNGYyYWYxZWYu
Ljk5ZTdiZDM2YTIyMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3RpbnkvZ20xMnUzMjAu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vdGlueS9nbTEydTMyMC5jCkBAIC02MTEsNyArNjExLDcg
QEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fZHJpdmVyIGdtMTJ1MzIwX2RybV9kcml2ZXIgPSB7
CiAJLm1pbm9yCQkgPSBEUklWRVJfTUlOT1IsCiAKIAkuZm9wcwkJID0gJmdtMTJ1MzIwX2ZvcHMs
Ci0JRFJNX0dFTV9TSE1FTV9EUklWRVJfT1BTLAorCURSTV9HRU1fU0hNRU1fRFJJVkVSX09QU19V
U0IsCiB9OwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9tb2RlX2NvbmZpZ19mdW5jcyBnbTEy
dTMyMF9tb2RlX2NvbmZpZ19mdW5jcyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS91
ZGwvdWRsX2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMKaW5kZXggOTI2OTA5
MjY5N2Q4Li4yZGI0ODNiMmIxOTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRs
X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCkBAIC0zOSw3ICszOSw3
IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZHJtX2RyaXZlciBkcml2ZXIgPSB7CiAKIAkvKiBHRU0g
aG9va3MgKi8KIAkuZm9wcyA9ICZ1ZGxfZHJpdmVyX2ZvcHMsCi0JRFJNX0dFTV9TSE1FTV9EUklW
RVJfT1BTLAorCURSTV9HRU1fU0hNRU1fRFJJVkVSX09QU19VU0IsCiAKIAkubmFtZSA9IERSSVZF
Ul9OQU1FLAogCS5kZXNjID0gRFJJVkVSX0RFU0MsCmRpZmYgLS1naXQgYS9kcml2ZXJzL3VzYi9j
b3JlL3VzYi5jIGIvZHJpdmVycy91c2IvY29yZS91c2IuYwppbmRleCA4ZjA3YjA1MTYxMDAuLjVl
MDc5MjFlODdiYSAxMDA2NDQKLS0tIGEvZHJpdmVycy91c2IvY29yZS91c2IuYworKysgYi9kcml2
ZXJzL3VzYi9jb3JlL3VzYi5jCkBAIC03NDgsNiArNzQ4LDM3IEBAIHZvaWQgdXNiX3B1dF9pbnRm
KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmKQogfQogRVhQT1JUX1NZTUJPTF9HUEwodXNiX3B1
dF9pbnRmKTsKIAorLyoqCisgKiB1c2JfZ2V0X2RtYV9kZXZpY2UgLSBhY3F1aXJlIGEgcmVmZXJl
bmNlIG9uIHRoZSB1c2IgZGV2aWNlJ3MgRE1BIGVuZHBvaW50CisgKiBAdWRldjogdXNiIGRldmlj
ZQorICoKKyAqIFdoaWxlIGEgVVNCIGRldmljZSBjYW5ub3QgcGVyZm9ybSBETUEgb3BlcmF0aW9u
cyBieSBpdHNlbGYsIG1hbnkgVVNCCisgKiBjb250cm9sbGVycyBjYW4uIEEgY2FsbCB0byB1c2Jf
Z2V0X2RtYV9kZXZpY2UoKSByZXR1cm5zIHRoZSBETUEgZW5kcG9pbnQKKyAqIGZvciB0aGUgZ2l2
ZW4gVVNCIGRldmljZSwgaWYgYW55LiBUaGUgcmV0dXJuZWQgZGV2aWNlIHN0cnVjdHVyZSBzaG91
bGQgYmUKKyAqIHJlbGVhc2VkIHdpdGggcHV0X2RldmljZSgpLgorICoKKyAqIFNlZSBhbHNvIHVz
Yl9pbnRmX2dldF9kbWFfZGV2aWNlKCkuCisgKgorICogUmV0dXJuczogQSByZWZlcmVuY2UgdG8g
dGhlIHVzYiBkZXZpY2UncyBETUEgZW5kcG9pbnQ7IG9yIE5VTEwgaWYgbm9uZQorICogICAgICAg
ICAgZXhpc3RzLgorICovCitzdHJ1Y3QgZGV2aWNlICp1c2JfZ2V0X2RtYV9kZXZpY2Uoc3RydWN0
IHVzYl9kZXZpY2UgKnVkZXYpCit7CisJc3RydWN0IGRldmljZSAqZG1hZGV2OworCisJaWYgKCF1
ZGV2LT5idXMpCisJCXJldHVybiBOVUxMOworCisJZG1hZGV2ID0gZ2V0X2RldmljZSh1ZGV2LT5i
dXMtPnN5c2Rldik7CisJaWYgKCFkbWFkZXYgfHwgIWRtYWRldi0+ZG1hX21hc2spIHsKKwkJcHV0
X2RldmljZShkbWFkZXYpOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlyZXR1cm4gZG1hZGV2Owor
fQorRVhQT1JUX1NZTUJPTF9HUEwodXNiX2dldF9kbWFfZGV2aWNlKTsKKwogLyoJCQlVU0IgZGV2
aWNlIGxvY2tpbmcKICAqCiAgKiBVU0IgZGV2aWNlcyBhbmQgaW50ZXJmYWNlcyBhcmUgbG9ja2Vk
IHVzaW5nIHRoZSBzZW1hcGhvcmUgaW4gdGhlaXIKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2Ry
bV9nZW1fc2htZW1faGVscGVyLmggYi9pbmNsdWRlL2RybS9kcm1fZ2VtX3NobWVtX2hlbHBlci5o
CmluZGV4IDQzNDMyOGQ4YTBkOS4uZWE4MTQ0ZjMzYzFmIDEwMDY0NAotLS0gYS9pbmNsdWRlL2Ry
bS9kcm1fZ2VtX3NobWVtX2hlbHBlci5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV9nZW1fc2htZW1f
aGVscGVyLmgKQEAgLTE2Miw0ICsxNjIsMjAgQEAgc3RydWN0IHNnX3RhYmxlICpkcm1fZ2VtX3No
bWVtX2dldF9wYWdlc19zZ3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmopOwogCS5nZW1fcHJp
bWVfbW1hcAkJPSBkcm1fZ2VtX3ByaW1lX21tYXAsIFwKIAkuZHVtYl9jcmVhdGUJCT0gZHJtX2dl
bV9zaG1lbV9kdW1iX2NyZWF0ZQogCisjaWZkZWYgQ09ORklHX1VTQgorLyoqCisgKiBEUk1fR0VN
X1NITUVNX0RSSVZFUl9PUFNfVVNCIC0gRGVmYXVsdCBzaG1lbSBHRU0gb3BlcmF0aW9ucyBmb3Ig
VVNCIGRldmljZXMKKyAqCisgKiBUaGlzIG1hY3JvIHByb3ZpZGVzIGEgc2hvcnRjdXQgZm9yIHNl
dHRpbmcgdGhlIHNobWVtIEdFTSBvcGVyYXRpb25zIGluCisgKiB0aGUgJmRybV9kcml2ZXIgc3Ry
dWN0dXJlLiBEcml2ZXJzIGZvciBVU0ItYmFzZWQgZGV2aWNlcyBzaG91bGQgdXNlIHRoaXMKKyAq
IG1hY3JvIGluc3RlYWQgb2YgJkRSTV9HRU1fU0hNRU1fRFJJVkVSX09QUy4KKyAqCisgKiBGSVhN
RTogU3VwcG9ydCBVU0IgZGV2aWNlcyB3aXRoIGRlZmF1bHQgU0hNRU0gZHJpdmVyIG9wcy4gU2Vl
IHRoZQorICogICAgICAgIGRvY3VtZW50YXRpb24gb2YgZHJtX2dlbV9wcmltZV9pbXBvcnRfdXNi
KCkgZm9yIGRldGFpbHMuCisgKi8KKyNkZWZpbmUgRFJNX0dFTV9TSE1FTV9EUklWRVJfT1BTX1VT
QiBcCisJRFJNX0dFTV9TSE1FTV9EUklWRVJfT1BTLCBcCisJLmdlbV9wcmltZV9pbXBvcnQgPSBk
cm1fZ2VtX3ByaW1lX2ltcG9ydF91c2IKKyNlbmRpZgorCiAjZW5kaWYgLyogX19EUk1fR0VNX1NI
TUVNX0hFTFBFUl9IX18gKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9wcmltZS5oIGIv
aW5jbHVkZS9kcm0vZHJtX3ByaW1lLmgKaW5kZXggNTRmMmM1ODMwNWQyLi5iNDJlMDdlZGQ5ZTYg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2RybV9wcmltZS5oCisrKyBiL2luY2x1ZGUvZHJtL2Ry
bV9wcmltZS5oCkBAIC0xMTAsNCArMTEwLDkgQEAgaW50IGRybV9wcmltZV9zZ190b19wYWdlX2Fy
cmF5KHN0cnVjdCBzZ190YWJsZSAqc2d0LCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAogaW50IGRybV9w
cmltZV9zZ190b19kbWFfYWRkcl9hcnJheShzdHJ1Y3Qgc2dfdGFibGUgKnNndCwgZG1hX2FkZHJf
dCAqYWRkcnMsCiAJCQkJICAgaW50IG1heF9wYWdlcyk7CiAKKyNpZmRlZiBDT05GSUdfVVNCCitz
dHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmRybV9nZW1fcHJpbWVfaW1wb3J0X3VzYihzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2LAorCQkJCQkJc3RydWN0IGRtYV9idWYgKmRtYV9idWYpOworI2VuZGlmCisK
ICNlbmRpZiAvKiBfX0RSTV9QUklNRV9IX18gKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgv
dXNiLmggYi9pbmNsdWRlL2xpbnV4L3VzYi5oCmluZGV4IDdkNzJjNGUwNzEzYy4uZTZlMGFjZjZh
MTkzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3VzYi5oCisrKyBiL2luY2x1ZGUvbGludXgv
dXNiLmgKQEAgLTcxMSw2ICs3MTEsNyBAQCBzdHJ1Y3QgdXNiX2RldmljZSB7CiAJdW5zaWduZWQg
dXNlX2dlbmVyaWNfZHJpdmVyOjE7CiB9OwogI2RlZmluZQl0b191c2JfZGV2aWNlKGQpIGNvbnRh
aW5lcl9vZihkLCBzdHJ1Y3QgdXNiX2RldmljZSwgZGV2KQorI2RlZmluZSBkZXZfaXNfdXNiKGQp
CSgoZCktPmJ1cyA9PSAmdXNiX2J1c190eXBlKQogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCB1c2Jf
ZGV2aWNlICppbnRlcmZhY2VfdG9fdXNiZGV2KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmKQog
ewpAQCAtNzQ2LDYgKzc0NywyOSBAQCBleHRlcm4gaW50IHVzYl9sb2NrX2RldmljZV9mb3JfcmVz
ZXQoc3RydWN0IHVzYl9kZXZpY2UgKnVkZXYsCiBleHRlcm4gaW50IHVzYl9yZXNldF9kZXZpY2Uo
c3RydWN0IHVzYl9kZXZpY2UgKmRldik7CiBleHRlcm4gdm9pZCB1c2JfcXVldWVfcmVzZXRfZGV2
aWNlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICpkZXYpOwogCitleHRlcm4gc3RydWN0IGRldmljZSAq
dXNiX2dldF9kbWFfZGV2aWNlKHN0cnVjdCB1c2JfZGV2aWNlICp1ZGV2KTsKKworLyoqCisgKiB1
c2JfaW50Zl9nZXRfZG1hX2RldmljZSAtIGFjcXVpcmUgYSByZWZlcmVuY2Ugb24gdGhlIHVzYiBp
bnRlcmZhY2UncyBETUEgZW5kcG9pbnQKKyAqIEBpbnRmOiB0aGUgdXNiIGludGVyZmFjZQorICoK
KyAqIFdoaWxlIGEgVVNCIGRldmljZSBjYW5ub3QgcGVyZm9ybSBETUEgb3BlcmF0aW9ucyBieSBp
dHNlbGYsIG1hbnkgVVNCCisgKiBjb250cm9sbGVycyBjYW4uIEEgY2FsbCB0byB1c2JfaW50Zl9n
ZXRfZG1hX2RldmljZSgpIHJldHVybnMgdGhlIERNQSBlbmRwb2ludAorICogZm9yIHRoZSBnaXZl
biBVU0IgaW50ZXJmYWNlLCBpZiBhbnkuIFRoZSByZXR1cm5lZCBkZXZpY2Ugc3RydWN0dXJlIHNo
b3VsZCBiZQorICogcmVsZWFzZWQgd2l0aCBwdXRfZGV2aWNlKCkuCisgKgorICogU2VlIGFsc28g
dXNiX2dldF9kbWFfZGV2aWNlKCkuCisgKgorICogUmV0dXJuczogQSByZWZlcmVuY2UgdG8gdGhl
IHVzYiBpbnRlcmZhY2UncyBETUEgZW5kcG9pbnQ7IG9yIE5VTEwgaWYgbm9uZQorICogICAgICAg
ICAgZXhpc3RzLgorICovCitzdGF0aWMgaW5saW5lIHN0cnVjdCBkZXZpY2UgKnVzYl9pbnRmX2dl
dF9kbWFfZGV2aWNlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmKQoreworCWlmICghaW50ZikK
KwkJcmV0dXJuIE5VTEw7CisJcmV0dXJuIHVzYl9nZXRfZG1hX2RldmljZShpbnRlcmZhY2VfdG9f
dXNiZGV2KGludGYpKTsKK30KKwogI2lmZGVmIENPTkZJR19BQ1BJCiBleHRlcm4gaW50IHVzYl9h
Y3BpX3NldF9wb3dlcl9zdGF0ZShzdHJ1Y3QgdXNiX2RldmljZSAqaGRldiwgaW50IGluZGV4LAog
CWJvb2wgZW5hYmxlKTsKLS0gCjIuMzAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vZHJpLWRldmVsCg==
