Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BA9D9FF922
	for <lists+dri-devel@lfdr.de>; Sun, 17 Nov 2019 12:46:24 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 07A386E370;
	Sun, 17 Nov 2019 11:45:15 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from bhuna.collabora.co.uk (bhuna.collabora.co.uk [46.235.227.227])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 823626E25F
 for <dri-devel@lists.freedesktop.org>; Sun, 17 Nov 2019 07:11:02 +0000 (UTC)
Received: from [127.0.0.1] (localhost [127.0.0.1]) (Authenticated sender: sre)
 with ESMTPSA id 0007028FC55
Received: by earth.universe (Postfix, from userid 1000)
 id 3E7593C0CAC; Sun, 17 Nov 2019 03:41:40 +0100 (CET)
From: Sebastian Reichel <sebastian.reichel@collabora.com>
To: Sebastian Reichel <sre@kernel.org>,
 Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
 Tomi Valkeinen <tomi.valkeinen@ti.com>
Subject: [RFCv1 32/42] drm/omap: dsi: convert to drm_panel
Date: Sun, 17 Nov 2019 03:40:18 +0100
Message-Id: <20191117024028.2233-33-sebastian.reichel@collabora.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191117024028.2233-1-sebastian.reichel@collabora.com>
References: <20191117024028.2233-1-sebastian.reichel@collabora.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Sun, 17 Nov 2019 11:44:18 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: kernel@collabora.com, Tony Lindgren <tony@atomide.com>,
 "H. Nikolaus Schaller" <hns@goldelico.com>, Merlijn Wajer <merlijn@wizzup.org>,
 Sebastian Reichel <sebastian.reichel@collabora.com>,
 dri-devel@lists.freedesktop.org, linux-omap@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBjb252ZXJ0cyB0aGUgRFNJIG1vZHVsZSB0byBleHBlY3QgY29tbW9uIGRybV9wYW5lbCBk
aXNwbGF5CmRyaXZlcnMgaW5zdGVhZCBvZiBkc3NkZXYgYmFzZWQgb25lcy4KClRoaXMgY29tbWl0
IGlzIFdJUC4gV2Ugc29tZWhvdyBuZWVkIHRvIGtub3cgdGhlIHBhbmVscyByZXNvbHV0aW9uCmlu
IG9tYXBfZHNpX2hvc3RfYXR0YWNoKCksIHNvIHRoYXQgd2UgY2FuIHByb3Blcmx5IGNvbmZpZ3Vy
ZSB0aGUKRFNJIGJ1cyBjbG9jayBiZWZvcmUgZW5hYmxpbmcgdGhlIGJ1cy4gVGhlIGNvbnRyb2wg
YnVzIG11c3QgYmUKZW5hYmxlZCBhdCB0aGlzIHBvaW50LCBzbyB0aGF0IHRoZSBwYW5lbCBjYW4g
dXNlIGl0LgoKT3RoZXIgZHJpdmVycyBydW4gZHJtX3BhbmVsX2F0dGFjaCgpIGluIHRoZWlyIGRz
aSBob3N0IGF0dGFjaCwKd2hpY2ggbWFrZXMgaXQgcG9zc2libGUgdG8gY2FsbCBkcm1fcGFuZWxf
Z2V0X21vZGVzKCkgYWZ0ZXJ3YXJkcwphbmQgdGhlIGdldCB0aGUgY29ycmVjdCBtb2RlIGZyb20g
dGhlIGNvbm5lY3Rvci4KClNpZ25lZC1vZmYtYnk6IFNlYmFzdGlhbiBSZWljaGVsIDxzZWJhc3Rp
YW4ucmVpY2hlbEBjb2xsYWJvcmEuY29tPgotLS0KIC4uLi9ncHUvZHJtL29tYXBkcm0vZGlzcGxh
eXMvcGFuZWwtZHNpLWNtLmMgICB8IDIxNyArKysrKysrLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1
L2RybS9vbWFwZHJtL2Rzcy9kc2kuYyAgICAgICAgICAgICB8IDE0MSArKysrKysrKysrLS0KIC4u
Li9ncHUvZHJtL29tYXBkcm0vZHNzL29tYXBkc3MtYm9vdC1pbml0LmMgICB8ICAgMSAtCiBkcml2
ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21hcGRzcy5oICAgICAgICAgfCAgMjIgKy0KIGRyaXZl
cnMvZ3B1L2RybS9vbWFwZHJtL29tYXBfY3J0Yy5jICAgICAgICAgICB8ICAxNyArLQogNSBmaWxl
cyBjaGFuZ2VkLCAyMDUgaW5zZXJ0aW9ucygrKSwgMTkzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rpc3BsYXlzL3BhbmVsLWRzaS1jbS5jIGIvZHJp
dmVycy9ncHUvZHJtL29tYXBkcm0vZGlzcGxheXMvcGFuZWwtZHNpLWNtLmMKaW5kZXggMTgwMjBh
YzQzYTgzLi44NGIwZTc5YzAyNWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJt
L2Rpc3BsYXlzL3BhbmVsLWRzaS1jbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rp
c3BsYXlzL3BhbmVsLWRzaS1jbS5jCkBAIC02LDggKzYsNiBAQAogICogQXV0aG9yOiBUb21pIFZh
bGtlaW5lbiA8dG9taS52YWxrZWluZW5AdGkuY29tPgogICovCiAKLS8qICNkZWZpbmUgREVCVUcg
Ki8KLQogI2luY2x1ZGUgPGxpbnV4L2JhY2tsaWdodC5oPgogI2luY2x1ZGUgPGxpbnV4L2RlbGF5
Lmg+CiAjaW5jbHVkZSA8bGludXgvZ3Bpby9jb25zdW1lci5oPgpAQCAtMjAsMTEgKzE4LDE0IEBA
CiAjaW5jbHVkZSA8bGludXgvcmVndWxhdG9yL2NvbnN1bWVyLmg+CiAKICNpbmNsdWRlIDxkcm0v
ZHJtX2Nvbm5lY3Rvci5oPgorI2luY2x1ZGUgPGRybS9kcm1fbWlwaV9kc2kuaD4KKyNpbmNsdWRl
IDxkcm0vZHJtX3BhbmVsLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9tb2Rlcy5oPgogCisjaW5jbHVk
ZSA8dmlkZW8vZGlzcGxheV90aW1pbmcuaD4KICNpbmNsdWRlIDx2aWRlby9taXBpX2Rpc3BsYXku
aD4KICNpbmNsdWRlIDx2aWRlby9vZl9kaXNwbGF5X3RpbWluZy5oPgotCi0jaW5jbHVkZSAiLi4v
ZHNzL29tYXBkc3MuaCIKKyNpbmNsdWRlIDx2aWRlby92aWRlb21vZGUuaD4KIAogI2RlZmluZSBE
Q1NfUkVBRF9OVU1fRVJST1JTCTB4MDUKICNkZWZpbmUgRENTX0dFVF9JRDEJCTB4ZGEKQEAgLTM1
LDExICszNiw4IEBACiAKIHN0cnVjdCBwYW5lbF9kcnZfZGF0YSB7CiAJc3RydWN0IG1pcGlfZHNp
X2RldmljZSAqZHNpOwotCi0Jc3RydWN0IG9tYXBfZHNzX2RldmljZSBkc3NkZXY7Ci0Jc3RydWN0
IG9tYXBfZHNzX2RldmljZSAqc3JjOwotCi0Jc3RydWN0IHZpZGVvbW9kZSB2bTsKKwlzdHJ1Y3Qg
ZHJtX3BhbmVsIHBhbmVsOworCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlIG1vZGU7CiAKIAlzdHJ1
Y3QgbXV0ZXggbG9jazsKIApAQCAtNzEsNyArNjksMTEgQEAgc3RydWN0IHBhbmVsX2Rydl9kYXRh
IHsKIAlib29sIHVscHNfZW5hYmxlZDsKIH07CiAKLSNkZWZpbmUgdG9fcGFuZWxfZGF0YShwKSBj
b250YWluZXJfb2YocCwgc3RydWN0IHBhbmVsX2Rydl9kYXRhLCBkc3NkZXYpCisKK3N0YXRpYyBp
bmxpbmUgc3RydWN0IHBhbmVsX2Rydl9kYXRhICpwYW5lbF90b19kZGF0YShzdHJ1Y3QgZHJtX3Bh
bmVsICpwYW5lbCkKK3sKKwlyZXR1cm4gY29udGFpbmVyX29mKHBhbmVsLCBzdHJ1Y3QgcGFuZWxf
ZHJ2X2RhdGEsIHBhbmVsKTsKK30KIAogc3RhdGljIGludCBfZHNpY21fZW5hYmxlX3RlKHN0cnVj
dCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEsIGJvb2wgZW5hYmxlKTsKIApAQCAtMjg1LDEwICsyODcs
MTUgQEAgc3RhdGljIHZvaWQgZHNpY21faHdfcmVzZXQoc3RydWN0IHBhbmVsX2Rydl9kYXRhICpk
ZGF0YSkKIAogc3RhdGljIGludCBkc2ljbV9wb3dlcl9vbihzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEg
KmRkYXRhKQogewotCXN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKnNyYyA9IGRkYXRhLT5zcmM7CiAJ
dTggaWQxLCBpZDIsIGlkMzsKIAlpbnQgcjsKIAorCXIgPSByZWd1bGF0b3JfYnVsa19lbmFibGUo
RENTX1JFR1VMQVRPUl9TVVBQTFlfTlVNLCBkZGF0YS0+c3VwcGxpZXMpOworCWlmIChyKSB7CisJ
CWRldl9lcnIoJmRkYXRhLT5kc2ktPmRldiwgImZhaWxlZCB0byBlbmFibGUgc3VwcGxpZXM6ICVk
XG4iLCByKTsKKwkJcmV0dXJuIHI7CisJfQorCiAJZHNpY21faHdfcmVzZXQoZGRhdGEpOwogCiAJ
ZGRhdGEtPmRzaS0+bW9kZV9mbGFncyB8PSBNSVBJX0RTSV9NT0RFX0xQTTsKQEAgLTMyMiwxMCAr
MzI5LDYgQEAgc3RhdGljIGludCBkc2ljbV9wb3dlcl9vbihzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEg
KmRkYXRhKQogCWlmIChyKQogCQlnb3RvIGVycjsKIAotCXIgPSBzcmMtPm9wcy0+ZHNpLmVuYWJs
ZV92aWRlb19vdXRwdXQoc3JjLCBkZGF0YS0+ZHNpLT5jaGFubmVsKTsKLQlpZiAocikKLQkJZ290
byBlcnI7Ci0KIAlkZGF0YS0+ZW5hYmxlZCA9IDE7CiAKIAlpZiAoIWRkYXRhLT5pbnRyb19wcmlu
dGVkKSB7CkBAIC0zNDIsMTggKzM0NSwxNyBAQCBzdGF0aWMgaW50IGRzaWNtX3Bvd2VyX29uKHN0
cnVjdCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEpCiAKIAlkc2ljbV9od19yZXNldChkZGF0YSk7CiAK
KwlyZWd1bGF0b3JfYnVsa19kaXNhYmxlKERDU19SRUdVTEFUT1JfU1VQUExZX05VTSwgZGRhdGEt
PnN1cHBsaWVzKTsKKwogCXJldHVybiByOwogfQogCi1zdGF0aWMgdm9pZCBkc2ljbV9wb3dlcl9v
ZmYoc3RydWN0IHBhbmVsX2Rydl9kYXRhICpkZGF0YSkKK3N0YXRpYyBpbnQgZHNpY21fcG93ZXJf
b2ZmKHN0cnVjdCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEpCiB7Ci0Jc3RydWN0IG9tYXBfZHNzX2Rl
dmljZSAqc3JjID0gZGRhdGEtPnNyYzsKIAlpbnQgcjsKIAogCWRkYXRhLT5lbmFibGVkID0gMDsK
IAotCXNyYy0+b3BzLT5kc2kuZGlzYWJsZV92aWRlb19vdXRwdXQoc3JjLCBkZGF0YS0+ZHNpLT5j
aGFubmVsKTsKLQogCXIgPSBtaXBpX2RzaV9kY3Nfc2V0X2Rpc3BsYXlfb2ZmKGRkYXRhLT5kc2kp
OwogCWlmICghcikKIAkJciA9IGRzaWNtX3NsZWVwX2luKGRkYXRhKTsKQEAgLTM2Myw1MiArMzY1
LDE3IEBAIHN0YXRpYyB2b2lkIGRzaWNtX3Bvd2VyX29mZihzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEg
KmRkYXRhKQogCQkJCSJlcnJvciBkaXNhYmxpbmcgcGFuZWwsIGlzc3VpbmcgSFcgcmVzZXRcbiIp
OwogCQlkc2ljbV9od19yZXNldChkZGF0YSk7CiAJfQotfQogCi1zdGF0aWMgaW50IGRzaWNtX2Nv
bm5lY3Qoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqc3JjLAotCQkJIHN0cnVjdCBvbWFwX2Rzc19k
ZXZpY2UgKmRzdCkKLXsKLQlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gdG9fcGFuZWxf
ZGF0YShkc3QpOwotCi0JZGRhdGEtPnNyYyA9IHNyYzsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGlj
IHZvaWQgZHNpY21fZGlzY29ubmVjdChzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpzcmMsCi0JCQkg
ICAgIHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzdCkKLXsKLQlzdHJ1Y3QgcGFuZWxfZHJ2X2Rh
dGEgKmRkYXRhID0gdG9fcGFuZWxfZGF0YShkc3QpOwotCi0JZGRhdGEtPnNyYyA9IE5VTEw7Ci19
Ci0KLXN0YXRpYyB2b2lkIGRzaWNtX3ByZV9lbmFibGUoc3RydWN0IG9tYXBfZHNzX2RldmljZSAq
ZHNzZGV2KQotewotCXN0cnVjdCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEgPSB0b19wYW5lbF9kYXRh
KGRzc2Rldik7Ci0Jc3RydWN0IG9tYXBfZHNzX2RldmljZSAqc3JjID0gZGRhdGEtPnNyYzsKLQlp
bnQgcjsKLQlzdHJ1Y3Qgb21hcF9kc3NfZHNpX2NvbmZpZyBkc2lfY29uZmlnID0gewotCQkudm0g
PSAmZGRhdGEtPnZtLAotCQkuaHNfY2xrX21pbiA9IDE1MDAwMDAwMCwKLQkJLmhzX2Nsa19tYXgg
PSAzMDAwMDAwMDAsCi0JCS5scF9jbGtfbWluID0gNzAwMDAwMCwKLQkJLmxwX2Nsa19tYXggPSAx
MDAwMDAwMCwKLQl9OwotCi0JciA9IHJlZ3VsYXRvcl9idWxrX2VuYWJsZShEQ1NfUkVHVUxBVE9S
X1NVUFBMWV9OVU0sIGRkYXRhLT5zdXBwbGllcyk7Ci0JaWYgKHIpIHsKLQkJZGV2X2VycigmZGRh
dGEtPmRzaS0+ZGV2LCAiZmFpbGVkIHRvIGVuYWJsZSBzdXBwbGllczogJWRcbiIsIHIpOwotCX0K
KwlyID0gcmVndWxhdG9yX2J1bGtfZGlzYWJsZShEQ1NfUkVHVUxBVE9SX1NVUFBMWV9OVU0sIGRk
YXRhLT5zdXBwbGllcyk7CisJaWYgKHIpCisJCWRldl9lcnIoJmRkYXRhLT5kc2ktPmRldiwgImZh
aWxlZCB0byBkaXNhYmxlIHN1cHBsaWVzOiAlZFxuIiwgcik7CiAKLQlyID0gc3JjLT5vcHMtPmRz
aS5zZXRfY29uZmlnKHNyYywgJmRzaV9jb25maWcpOwotCWlmIChyKSB7Ci0JCWRldl9lcnIoJmRk
YXRhLT5kc2ktPmRldiwgImZhaWxlZCB0byBjb25maWd1cmUgRFNJXG4iKTsKLQl9CisJcmV0dXJu
IHI7CiB9CiAKLXN0YXRpYyB2b2lkIGRzaWNtX2VuYWJsZShzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNl
ICpkc3NkZXYpCitzdGF0aWMgaW50IGRzaWNtX3ByZXBhcmUoc3RydWN0IGRybV9wYW5lbCAqcGFu
ZWwpCiB7Ci0Jc3RydWN0IHBhbmVsX2Rydl9kYXRhICpkZGF0YSA9IHRvX3BhbmVsX2RhdGEoZHNz
ZGV2KTsKKwlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gcGFuZWxfdG9fZGRhdGEocGFu
ZWwpOwogCWludCByOwogCiAJbXV0ZXhfbG9jaygmZGRhdGEtPmxvY2spOwpAQCAtNDIxLDMzICsz
ODgsMjcgQEAgc3RhdGljIHZvaWQgZHNpY21fZW5hYmxlKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2Ug
KmRzc2RldikKIAogCWRzaWNtX2JsX3Bvd2VyKGRkYXRhLCB0cnVlKTsKIAotCXJldHVybjsKKwly
ZXR1cm4gMDsKIGVycjoKLQlkZXZfZGJnKCZkZGF0YS0+ZHNpLT5kZXYsICJlbmFibGUgZmFpbGVk
ICglZClcbiIsIHIpOworCWRldl9lcnIoJmRkYXRhLT5kc2ktPmRldiwgImVuYWJsZSBmYWlsZWQg
KCVkKVxuIiwgcik7CiAJbXV0ZXhfdW5sb2NrKCZkZGF0YS0+bG9jayk7CisJcmV0dXJuIHI7CiB9
CiAKLXN0YXRpYyB2b2lkIGRzaWNtX2Rpc2FibGUoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNz
ZGV2KQorc3RhdGljIGludCBkc2ljbV91bnByZXBhcmUoc3RydWN0IGRybV9wYW5lbCAqcGFuZWwp
CiB7Ci0Jc3RydWN0IHBhbmVsX2Rydl9kYXRhICpkZGF0YSA9IHRvX3BhbmVsX2RhdGEoZHNzZGV2
KTsKKwlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gcGFuZWxfdG9fZGRhdGEocGFuZWwp
OworCWludCByOwogCiAJZHNpY21fYmxfcG93ZXIoZGRhdGEsIGZhbHNlKTsKIAogCW11dGV4X2xv
Y2soJmRkYXRhLT5sb2NrKTsKIAotCWRzaWNtX3Bvd2VyX29mZihkZGF0YSk7CisJciA9IGRzaWNt
X3Bvd2VyX29mZihkZGF0YSk7CiAKIAltdXRleF91bmxvY2soJmRkYXRhLT5sb2NrKTsKLX0KLQot
c3RhdGljIHZvaWQgZHNpY21fcG9zdF9kaXNhYmxlKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRz
c2RldikKLXsKLQlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gdG9fcGFuZWxfZGF0YShk
c3NkZXYpOwotCWludCByOwogCi0JciA9IHJlZ3VsYXRvcl9idWxrX2Rpc2FibGUoRENTX1JFR1VM
QVRPUl9TVVBQTFlfTlVNLCBkZGF0YS0+c3VwcGxpZXMpOwotCWlmIChyKQotCQlkZXZfZXJyKCZk
ZGF0YS0+ZHNpLT5kZXYsICJmYWlsZWQgdG8gZGlzYWJsZSBzdXBwbGllczogJWRcbiIsIHIpOwor
CXJldHVybiByOwogfQogCiBzdGF0aWMgaW50IF9kc2ljbV9lbmFibGVfdGUoc3RydWN0IHBhbmVs
X2Rydl9kYXRhICpkZGF0YSwgYm9vbCBlbmFibGUpCkBAIC00NjYsNTAgKzQyNywzNSBAQCBzdGF0
aWMgaW50IF9kc2ljbV9lbmFibGVfdGUoc3RydWN0IHBhbmVsX2Rydl9kYXRhICpkZGF0YSwgYm9v
bCBlbmFibGUpCiAJcmV0dXJuIHI7CiB9CiAKLXN0YXRpYyBpbnQgZHNpY21fZ2V0X21vZGVzKHN0
cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiwKLQkJCSAgIHN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3IpCitzdGF0aWMgaW50IGRzaWNtX2dldF9tb2RlcyhzdHJ1Y3QgZHJtX3BhbmVs
ICpwYW5lbCkKIHsKLQlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gdG9fcGFuZWxfZGF0
YShkc3NkZXYpOwotCi0JY29ubmVjdG9yLT5kaXNwbGF5X2luZm8ud2lkdGhfbW0gPSBkZGF0YS0+
d2lkdGhfbW07Ci0JY29ubmVjdG9yLT5kaXNwbGF5X2luZm8uaGVpZ2h0X21tID0gZGRhdGEtPmhl
aWdodF9tbTsKLQotCXJldHVybiBvbWFwZHNzX2Rpc3BsYXlfZ2V0X21vZGVzKGNvbm5lY3Rvciwg
JmRkYXRhLT52bSk7Ci19Ci0KLXN0YXRpYyBpbnQgZHNpY21fY2hlY2tfdGltaW5ncyhzdHJ1Y3Qg
b21hcF9kc3NfZGV2aWNlICpkc3NkZXYsCi0JCQkgICAgICAgc3RydWN0IGRybV9kaXNwbGF5X21v
ZGUgKm1vZGUpCi17Ci0Jc3RydWN0IHBhbmVsX2Rydl9kYXRhICpkZGF0YSA9IHRvX3BhbmVsX2Rh
dGEoZHNzZGV2KTsKLQlpbnQgcmV0ID0gMDsKKwlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRh
ID0gcGFuZWxfdG9fZGRhdGEocGFuZWwpOworCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0
b3IgPSBwYW5lbC0+Y29ubmVjdG9yOworCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlOwor
CisJbW9kZSA9IGRybV9tb2RlX2R1cGxpY2F0ZShwYW5lbC0+ZHJtLCAmZGRhdGEtPm1vZGUpOwor
CWlmICghbW9kZSkgeworCQlkZXZfZXJyKCZkZGF0YS0+ZHNpLT5kZXYsICJmYWlsZWQgdG8gYWRk
IG1vZGUgJXV4JXV4QCV1XG4iLAorCQkJZGRhdGEtPm1vZGUuaGRpc3BsYXksIGRkYXRhLT5tb2Rl
LnZkaXNwbGF5LAorCQkJZGRhdGEtPm1vZGUudnJlZnJlc2gpOworCQlyZXR1cm4gLUVOT01FTTsK
Kwl9CiAKLQlpZiAobW9kZS0+aGRpc3BsYXkgIT0gZGRhdGEtPnZtLmhhY3RpdmUpCi0JCXJldCA9
IC1FSU5WQUw7CisJZHJtX21vZGVfc2V0X25hbWUobW9kZSk7CiAKLQlpZiAobW9kZS0+dmRpc3Bs
YXkgIT0gZGRhdGEtPnZtLnZhY3RpdmUpCi0JCXJldCA9IC1FSU5WQUw7CisJbW9kZS0+dHlwZSA9
IERSTV9NT0RFX1RZUEVfRFJJVkVSIHwgRFJNX01PREVfVFlQRV9QUkVGRVJSRUQ7CisJZHJtX21v
ZGVfcHJvYmVkX2FkZChjb25uZWN0b3IsIG1vZGUpOwogCi0JaWYgKHJldCkgewotCQlkZXZfd2Fy
bihkc3NkZXYtPmRldiwgIndyb25nIHJlc29sdXRpb246ICVkIHggJWQiLAotCQkJIG1vZGUtPmhk
aXNwbGF5LCBtb2RlLT52ZGlzcGxheSk7Ci0JCWRldl93YXJuKGRzc2Rldi0+ZGV2LCAicGFuZWwg
cmVzb2x1dGlvbjogJWQgeCAlZCIsCi0JCQkgZGRhdGEtPnZtLmhhY3RpdmUsIGRkYXRhLT52bS52
YWN0aXZlKTsKLQl9CisJY29ubmVjdG9yLT5kaXNwbGF5X2luZm8ud2lkdGhfbW0gPSBkZGF0YS0+
d2lkdGhfbW07CisJY29ubmVjdG9yLT5kaXNwbGF5X2luZm8uaGVpZ2h0X21tID0gZGRhdGEtPmhl
aWdodF9tbTsKIAotCXJldHVybiByZXQ7CisJcmV0dXJuIDE7CiB9CiAKLXN0YXRpYyBjb25zdCBz
dHJ1Y3Qgb21hcF9kc3NfZGV2aWNlX29wcyBkc2ljbV9vcHMgPSB7Ci0JLmNvbm5lY3QJPSBkc2lj
bV9jb25uZWN0LAotCS5kaXNjb25uZWN0CT0gZHNpY21fZGlzY29ubmVjdCwKLQotCS5wcmVfZW5h
YmxlCT0gZHNpY21fcHJlX2VuYWJsZSwKLQkuZW5hYmxlCQk9IGRzaWNtX2VuYWJsZSwKLQkuZGlz
YWJsZQk9IGRzaWNtX2Rpc2FibGUsCi0JLnBvc3RfZGlzYWJsZQk9IGRzaWNtX3Bvc3RfZGlzYWJs
ZSwKLQotCS5nZXRfbW9kZXMJPSBkc2ljbV9nZXRfbW9kZXMsCi0JLmNoZWNrX3RpbWluZ3MJPSBk
c2ljbV9jaGVja190aW1pbmdzLAorc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fcGFuZWxfZnVuY3Mg
ZHNpY21fcGFuZWxfZnVuY3MgPSB7CisJLnVucHJlcGFyZSA9IGRzaWNtX3VucHJlcGFyZSwKKwku
cHJlcGFyZSA9IGRzaWNtX3ByZXBhcmUsCisJLmdldF9tb2RlcyA9IGRzaWNtX2dldF9tb2RlcywK
IH07CiAKIHN0YXRpYyBpbnQgZHNpY21fcHJvYmVfb2Yoc3RydWN0IG1pcGlfZHNpX2RldmljZSAq
ZHNpKQpAQCAtNTE4LDggKzQ2NCwxMiBAQCBzdGF0aWMgaW50IGRzaWNtX3Byb2JlX29mKHN0cnVj
dCBtaXBpX2RzaV9kZXZpY2UgKmRzaSkKIAlzdHJ1Y3QgZGV2aWNlX25vZGUgKmJhY2tsaWdodDsK
IAlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhID0gbWlwaV9kc2lfZ2V0X2RydmRhdGEoZHNp
KTsKIAlzdHJ1Y3QgZGlzcGxheV90aW1pbmcgdGltaW5nOworCXN0cnVjdCB2aWRlb21vZGUgdm07
CiAJaW50IGVycjsKIAorCXZtLmhhY3RpdmUgPSA4NjQ7CisJdm0udmFjdGl2ZSA9IDQ4MDsKKwog
CWRkYXRhLT5yZXNldF9ncGlvID0gZGV2bV9ncGlvZF9nZXQoJmRzaS0+ZGV2LCAicmVzZXQiLCBH
UElPRF9PVVRfTE9XKTsKIAlpZiAoSVNfRVJSKGRkYXRhLT5yZXNldF9ncGlvKSkgewogCQllcnIg
PSBQVFJfRVJSKGRkYXRhLT5yZXNldF9ncGlvKTsKQEAgLTUyOSwxNSArNDc5LDE2IEBAIHN0YXRp
YyBpbnQgZHNpY21fcHJvYmVfb2Yoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQogCiAJZXJy
ID0gb2ZfZ2V0X2Rpc3BsYXlfdGltaW5nKG5vZGUsICJwYW5lbC10aW1pbmciLCAmdGltaW5nKTsK
IAlpZiAoIWVycikgewotCQl2aWRlb21vZGVfZnJvbV90aW1pbmcoJnRpbWluZywgJmRkYXRhLT52
bSk7Ci0JCWlmICghZGRhdGEtPnZtLnBpeGVsY2xvY2spCi0JCQlkZGF0YS0+dm0ucGl4ZWxjbG9j
ayA9Ci0JCQkJZGRhdGEtPnZtLmhhY3RpdmUgKiBkZGF0YS0+dm0udmFjdGl2ZSAqIDYwOworCQl2
aWRlb21vZGVfZnJvbV90aW1pbmcoJnRpbWluZywgJnZtKTsKIAl9IGVsc2UgewogCQlkZXZfd2Fy
bigmZHNpLT5kZXYsCiAJCQkgImZhaWxlZCB0byBnZXQgdmlkZW8gdGltaW5nLCB1c2luZyBkZWZh
dWx0c1xuIik7CiAJfQogCisJaWYgKCF2bS5waXhlbGNsb2NrKQorCQl2bS5waXhlbGNsb2NrID0g
dm0uaGFjdGl2ZSAqIHZtLnZhY3RpdmUgKiA2MDsKKwlkcm1fZGlzcGxheV9tb2RlX2Zyb21fdmlk
ZW9tb2RlKCZ2bSwgJmRkYXRhLT5tb2RlKTsKKwogCWRkYXRhLT53aWR0aF9tbSA9IDA7CiAJb2Zf
cHJvcGVydHlfcmVhZF91MzIobm9kZSwgIndpZHRoLW1tIiwgJmRkYXRhLT53aWR0aF9tbSk7CiAK
QEAgLTU3Myw3ICs1MjQsNiBAQCBzdGF0aWMgaW50IGRzaWNtX3Byb2JlKHN0cnVjdCBtaXBpX2Rz
aV9kZXZpY2UgKmRzaSkKIAlzdHJ1Y3QgcGFuZWxfZHJ2X2RhdGEgKmRkYXRhOwogCXN0cnVjdCBi
YWNrbGlnaHRfZGV2aWNlICpibGRldiA9IE5VTEw7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJmRz
aS0+ZGV2OwotCXN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldjsKIAlpbnQgcjsKIAogCWRl
dl9kYmcoZGV2LCAicHJvYmVcbiIpOwpAQCAtNTg1LDMzICs1MzUsMTcgQEAgc3RhdGljIGludCBk
c2ljbV9wcm9iZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCiAJbWlwaV9kc2lfc2V0X2Ry
dmRhdGEoZHNpLCBkZGF0YSk7CiAJZGRhdGEtPmRzaSA9IGRzaTsKIAotCWRkYXRhLT52bS5oYWN0
aXZlID0gODY0OwotCWRkYXRhLT52bS52YWN0aXZlID0gNDgwOwotCWRkYXRhLT52bS5waXhlbGNs
b2NrID0gODY0ICogNDgwICogNjA7Ci0KIAlyID0gZHNpY21fcHJvYmVfb2YoZHNpKTsKIAlpZiAo
cikKIAkJcmV0dXJuIHI7CiAKLQlkc3NkZXYgPSAmZGRhdGEtPmRzc2RldjsKLQlkc3NkZXYtPmRl
diA9IGRldjsKLQlkc3NkZXYtPm9wcyA9ICZkc2ljbV9vcHM7Ci0JZHNzZGV2LT50eXBlID0gT01B
UF9ESVNQTEFZX1RZUEVfRFNJOwotCWRzc2Rldi0+ZGlzcGxheSA9IHRydWU7Ci0JZHNzZGV2LT5v
d25lciA9IFRISVNfTU9EVUxFOwotCWRzc2Rldi0+b2ZfcG9ydHMgPSBCSVQoMCk7Ci0JZHNzZGV2
LT5vcHNfZmxhZ3MgPSBPTUFQX0RTU19ERVZJQ0VfT1BfTU9ERVM7Ci0KLQlkc3NkZXYtPmNhcHMg
PSBPTUFQX0RTU19ESVNQTEFZX0NBUF9NQU5VQUxfVVBEQVRFIHwKLQkJT01BUF9EU1NfRElTUExB
WV9DQVBfVEVBUl9FTElNOwotCi0Jb21hcGRzc19kaXNwbGF5X2luaXQoZHNzZGV2KTsKLQlvbWFw
ZHNzX2RldmljZV9yZWdpc3Rlcihkc3NkZXYpOwotCiAJbXV0ZXhfaW5pdCgmZGRhdGEtPmxvY2sp
OwogCiAJZHNpY21faHdfcmVzZXQoZGRhdGEpOwogCisJZHJtX3BhbmVsX2luaXQoJmRkYXRhLT5w
YW5lbCwgZGV2LCAmZHNpY21fcGFuZWxfZnVuY3MsCisJCSAgICAgICBEUk1fTU9ERV9DT05ORUNU
T1JfRFNJKTsKKwogCWlmIChkZGF0YS0+dXNlX2RzaV9iYWNrbGlnaHQpIHsKIAkJc3RydWN0IGJh
Y2tsaWdodF9wcm9wZXJ0aWVzIHByb3BzID0geyAwIH07CiAJCXByb3BzLm1heF9icmlnaHRuZXNz
ID0gMjU1OwpAQCAtNjQzLDYgKzU3NywxMCBAQCBzdGF0aWMgaW50IGRzaWNtX3Byb2JlKHN0cnVj
dCBtaXBpX2RzaV9kZXZpY2UgKmRzaSkKIAlpZiAoZGRhdGEtPnVscHNfZW5hYmxlZCkKIAkJZHNp
LT5tb2RlX2ZsYWdzIHw9IE1JUElfRFNJX01PREVfVUxQU19JRExFOwogCisJciA9IGRybV9wYW5l
bF9hZGQoJmRkYXRhLT5wYW5lbCk7CisJaWYgKHIgPCAwKQorCQlnb3RvIGVycl9wYW5lbF9hZGQ7
CisKIAlyID0gbWlwaV9kc2lfYXR0YWNoKGRzaSk7CiAJaWYgKHIgPCAwKQogCQlnb3RvIGVycl9k
c2lfYXR0YWNoOwpAQCAtNjUwLDYgKzU4OCw4IEBAIHN0YXRpYyBpbnQgZHNpY21fcHJvYmUoc3Ry
dWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQogCXJldHVybiAwOwogCiBlcnJfZHNpX2F0dGFjaDoK
Kwlkcm1fcGFuZWxfcmVtb3ZlKCZkZGF0YS0+cGFuZWwpOworZXJyX3BhbmVsX2FkZDoKIAlzeXNm
c19yZW1vdmVfZ3JvdXAoJmRzaS0+ZGV2LmtvYmosICZkc2ljbV9hdHRyX2dyb3VwKTsKIGVycl9i
bDoKIAlpZiAoZGRhdGEtPmV4dGJsZGV2KQpAQCAtNjYxLDE1ICs2MDEsMTIgQEAgc3RhdGljIGlu
dCBkc2ljbV9wcm9iZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCiBzdGF0aWMgaW50IF9f
ZXhpdCBkc2ljbV9yZW1vdmUoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQogewogCXN0cnVj
dCBwYW5lbF9kcnZfZGF0YSAqZGRhdGEgPSBtaXBpX2RzaV9nZXRfZHJ2ZGF0YShkc2kpOwotCXN0
cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiA9ICZkZGF0YS0+ZHNzZGV2OwogCiAJZGV2X2Ri
ZygmZHNpLT5kZXYsICJyZW1vdmVcbiIpOwogCiAJbWlwaV9kc2lfZGV0YWNoKGRzaSk7CiAKLQlv
bWFwZHNzX2RldmljZV91bnJlZ2lzdGVyKGRzc2Rldik7Ci0KLQlvbWFwZHNzX2RldmljZV9kaXNj
b25uZWN0KGRkYXRhLT5zcmMsIGRzc2Rldik7CisJZHJtX3BhbmVsX3JlbW92ZSgmZGRhdGEtPnBh
bmVsKTsKIAogCXN5c2ZzX3JlbW92ZV9ncm91cCgmZHNpLT5kZXYua29iaiwgJmRzaWNtX2F0dHJf
Z3JvdXApOwogCkBAIC02ODMsNyArNjIwLDcgQEAgc3RhdGljIGludCBfX2V4aXQgZHNpY21fcmVt
b3ZlKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSkKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVj
dCBvZl9kZXZpY2VfaWQgZHNpY21fb2ZfbWF0Y2hbXSA9IHsKLQl7IC5jb21wYXRpYmxlID0gIm9t
YXBkc3MscGFuZWwtZHNpLWNtIiwgfSwKKwl7IC5jb21wYXRpYmxlID0gInBhbmVsLWRzaS1jbSIs
IH0sCiAJe30sCiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mv
ZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3MvZHNpLmMKaW5kZXggNjZhZDdkYmM2
NmEyLi43NTQ4MTUwNjg5MjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rz
cy9kc2kuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3MvZHNpLmMKQEAgLTM3LDYg
KzM3LDcgQEAKIAogI2luY2x1ZGUgPHZpZGVvL21pcGlfZGlzcGxheS5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fbWlwaV9kc2kuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX3BhbmVsLmg+CiAKICNpbmNsdWRl
ICJvbWFwZHNzLmgiCiAjaW5jbHVkZSAiZHNzLmgiCkBAIC0yMjAsNiArMjIxLDggQEAgc3RhdGlj
IGludCBkc2lfdmNfc2VuZF9udWxsKHN0cnVjdCBkc2lfZGF0YSAqZHNpLCBpbnQgY2hhbm5lbCk7
CiBzdGF0aWMgc3NpemVfdCBfb21hcF9kc2lfaG9zdF90cmFuc2ZlcihzdHJ1Y3QgZHNpX2RhdGEg
KmRzaSwKIAkJCQkgICAgICAgY29uc3Qgc3RydWN0IG1pcGlfZHNpX21zZyAqbXNnKTsKIAorc3Rh
dGljIHZvaWQgZHNpX2Rpc3BsYXlfZGlzYWJsZShzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpkc3Nk
ZXYpOworCiAvKiBEU0kgUExMIEhTRElWIGluZGljZXMgKi8KICNkZWZpbmUgSFNESVZfRElTUEMJ
MAogI2RlZmluZSBIU0RJVl9EU0kJMQpAQCAtMzg2LDYgKzM4OSw3IEBAIHN0cnVjdCBkc2lfZGF0
YSB7CiAJYm9vbCB0ZV9lbmFibGVkOwogCWJvb2wgdWxwc19lbmFibGVkOwogCWJvb2wgdWxwc19h
dXRvX2lkbGU7CisJYm9vbCB2aWRlb19lbmFibGVkOwogCiAJc3RydWN0IGRlbGF5ZWRfd29yayB1
bHBzX3dvcms7CiAKQEAgLTQyNiw2ICs0MzAsOCBAQCBzdHJ1Y3QgZHNpX2RhdGEgewogCiAJdW5z
aWduZWQgaW50IHNjcF9jbGtfcmVmY291bnQ7CiAKKwlzdHJ1Y3Qgb21hcF9kc3NfZHNpX2NvbmZp
ZyBjb25maWc7CisKIAlzdHJ1Y3QgZHNzX2xjZF9tZ3JfY29uZmlnIG1ncl9jb25maWc7CiAJc3Ry
dWN0IHZpZGVvbW9kZSB2bTsKIAllbnVtIG1pcGlfZHNpX3BpeGVsX2Zvcm1hdCBwaXhfZm10OwpA
QCAtMzYyOSw3ICszNjM1LDcgQEAgc3RhdGljIGludCBkc2lfY29uZmlndXJlX3BpbnMoc3RydWN0
IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2LAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGRz
aV9lbmFibGVfdmlkZW9fb3V0cHV0KHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiwgaW50
IGNoYW5uZWwpCitzdGF0aWMgdm9pZCBkc2lfZW5hYmxlX3ZpZGVvX291dHB1dChzdHJ1Y3Qgb21h
cF9kc3NfZGV2aWNlICpkc3NkZXYsIGludCBjaGFubmVsKQogewogCXN0cnVjdCBkc2lfZGF0YSAq
ZHNpID0gdG9fZHNpX2RhdGEoZHNzZGV2KTsKIAlpbnQgYnBwID0gbWlwaV9kc2lfcGl4ZWxfZm9y
bWF0X3RvX2JwcChkc2ktPnBpeF9mbXQpOwpAQCAtMzYzOCw4ICszNjQ0LDEwIEBAIHN0YXRpYyBp
bnQgZHNpX2VuYWJsZV92aWRlb19vdXRwdXQoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2
LCBpbnQgY2hhbm5lbCkKIAlpbnQgcjsKIAogCXIgPSBkc2lfZGlzcGxheV9pbml0X2Rpc3BjKGRz
aSk7Ci0JaWYgKHIpCi0JCXJldHVybiByOworCWlmIChyKSB7CisJCWRldl9lcnIoZHNpLT5kZXYs
ICJmYWlsZWQgdG8gaW5pdCBkaXNwYyFcbiIpOworCQlyZXR1cm47CisJfQogCiAJaWYgKGRzaS0+
bW9kZSA9PSBPTUFQX0RTU19EU0lfVklERU9fTU9ERSkgewogCQlzd2l0Y2ggKGRzaS0+cGl4X2Zt
dCkgewpAQCAtMzY3OSw3ICszNjg3LDcgQEAgc3RhdGljIGludCBkc2lfZW5hYmxlX3ZpZGVvX291
dHB1dChzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpkc3NkZXYsIGludCBjaGFubmVsKQogCWlmIChy
KQogCQlnb3RvIGVycl9tZ3JfZW5hYmxlOwogCi0JcmV0dXJuIDA7CisJcmV0dXJuOwogCiBlcnJf
bWdyX2VuYWJsZToKIAlpZiAoZHNpLT5tb2RlID09IE9NQVBfRFNTX0RTSV9WSURFT19NT0RFKSB7
CkBAIC0zNjg4LDcgKzM2OTYsOCBAQCBzdGF0aWMgaW50IGRzaV9lbmFibGVfdmlkZW9fb3V0cHV0
KHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiwgaW50IGNoYW5uZWwpCiAJfQogZXJyX3Bp
eF9mbXQ6CiAJZHNpX2Rpc3BsYXlfdW5pbml0X2Rpc3BjKGRzaSk7Ci0JcmV0dXJuIHI7CisJZGV2
X2Vycihkc2ktPmRldiwgImZhaWxlZCB0byBlbmFibGUgRFNJIGVuY29kZXIhXG4iKTsKKwlyZXR1
cm47CiB9CiAKIHN0YXRpYyB2b2lkIGRzaV9kaXNhYmxlX3ZpZGVvX291dHB1dChzdHJ1Y3Qgb21h
cF9kc3NfZGV2aWNlICpkc3NkZXYsIGludCBjaGFubmVsKQpAQCAtMzcxMSw2ICszNzIwLDI1IEBA
IHN0YXRpYyB2b2lkIGRzaV9kaXNhYmxlX3ZpZGVvX291dHB1dChzdHJ1Y3Qgb21hcF9kc3NfZGV2
aWNlICpkc3NkZXYsIGludCBjaGFubmVsCiAJZHNpX2Rpc3BsYXlfdW5pbml0X2Rpc3BjKGRzaSk7
CiB9CiAKK3N0YXRpYyB2b2lkIGRzaV9kaXNhYmxlX3ZpZGVvX291dHB1dHMoc3RydWN0IG9tYXBf
ZHNzX2RldmljZSAqZHNzZGV2KQoreworCXN0cnVjdCBkc2lfZGF0YSAqZHNpID0gdG9fZHNpX2Rh
dGEoZHNzZGV2KTsKKwlpbnQgaTsKKworCWRzaV9idXNfbG9jayhkc2kpOworCWRzaS0+dmlkZW9f
ZW5hYmxlZCA9IGZhbHNlOworCisJZm9yIChpID0gMDsgaSA8IDM7IGkrKykgeworCQlpZiAoIWRz
aS0+dmNbaV0uZGVzdCkKKwkJCWNvbnRpbnVlOworCQlkc2lfZGlzYWJsZV92aWRlb19vdXRwdXQo
ZHNzZGV2LCBpKTsKKwl9CisKKwlkc2lfZGlzcGxheV9kaXNhYmxlKGRzc2Rldik7CisKKwlkc2lf
YnVzX3VubG9jayhkc2kpOworfQorCiBzdGF0aWMgdm9pZCBkc2lfdXBkYXRlX3NjcmVlbl9kaXNw
YyhzdHJ1Y3QgZHNpX2RhdGEgKmRzaSkKIHsKIAl1bnNpZ25lZCBpbnQgYnl0ZXNwcDsKQEAgLTM5
MDQsNiArMzkzMiwxMSBAQCBzdGF0aWMgaW50IGRzaV91cGRhdGVfY2hhbm5lbChzdHJ1Y3Qgb21h
cF9kc3NfZGV2aWNlICpkc3NkZXYsIGludCBjaGFubmVsKQogCiAJZHNpX2J1c19sb2NrKGRzaSk7
CiAKKwlpZiAoIWRzaS0+dmlkZW9fZW5hYmxlZCkgeworCQlyID0gLUVJTzsKKwkJZ290byBlcnI7
CisJfQorCiAJaWYgKCFkc2ktPnZjW2NoYW5uZWxdLmRlc3QpIHsKIAkJciA9IC1FTk9ERVY7CiAJ
CWdvdG8gZXJyOwpAQCAtMzk0OSw3ICszOTgyLDcgQEAgc3RhdGljIGludCBkc2lfdXBkYXRlX2Fs
bChzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpkc3NkZXYpCiAKIAlmb3IgKGkgPSAwOyBpIDwgNDsg
aSsrKSB7CiAJCXIgPSBkc2lfdXBkYXRlX2NoYW5uZWwoZHNzZGV2LCBpKTsKLQkJaWYgKHIgIT0g
LUVOT0RFVikKKwkJaWYgKHIgJiYgciAhPSAtRU5PREVWKQogCQkJcmV0dXJuIHI7CiAJfQogCkBA
IC00MTcyLDggKzQyMDUsMzAgQEAgc3RhdGljIHZvaWQgZHNpX2Rpc3BsYXlfZW5hYmxlKHN0cnVj
dCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldikKIHsKIAlzdHJ1Y3QgZHNpX2RhdGEgKmRzaSA9IHRv
X2RzaV9kYXRhKGRzc2Rldik7CiAJRFNTREJHKCJkc2lfZGlzcGxheV9lbmFibGVcbiIpOwotCWRz
aV9idXNfbG9jayhkc2kpOworCVdBUk5fT04oIWRzaV9idXNfaXNfbG9ja2VkKGRzaSkpOworCiAJ
ZHNpX2Rpc3BsYXlfdWxwc19lbmFibGUoZHNpKTsKK30KKworc3RhdGljIHZvaWQgZHNpX2VuYWJs
ZV92aWRlb19vdXRwdXRzKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldikKK3sKKwlzdHJ1
Y3QgZHNpX2RhdGEgKmRzaSA9IHRvX2RzaV9kYXRhKGRzc2Rldik7CisJaW50IGk7CisKKwlkc2lf
YnVzX2xvY2soZHNpKTsKKworCWRzaV9kaXNwbGF5X2VuYWJsZShkc3NkZXYpOworCisJZm9yIChp
ID0gMDsgaSA8IDM7IGkrKykgeworCQlpZiAoIWRzaS0+dmNbaV0uZGVzdCkKKwkJCWNvbnRpbnVl
OworCQlkc2lfZW5hYmxlX3ZpZGVvX291dHB1dChkc3NkZXYsIGkpOworCX0KKworCWRzaS0+dmlk
ZW9fZW5hYmxlZCA9IHRydWU7CisKKwlkc2lfc2V0X3VscHNfYXV0byhkc2ksIHRydWUpOworCiAJ
ZHNpX2J1c191bmxvY2soZHNpKTsKIH0KIApAQCAtNDE5OSwxMCArNDI1NCwxMCBAQCBzdGF0aWMg
dm9pZCBkc2lfZGlzcGxheV91bHBzX2Rpc2FibGUoc3RydWN0IGRzaV9kYXRhICpkc2ksCiBzdGF0
aWMgdm9pZCBkc2lfZGlzcGxheV9kaXNhYmxlKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2Rl
dikKIHsKIAlzdHJ1Y3QgZHNpX2RhdGEgKmRzaSA9IHRvX2RzaV9kYXRhKGRzc2Rldik7CisJV0FS
Tl9PTighZHNpX2J1c19pc19sb2NrZWQoZHNpKSk7CiAJRFNTREJHKCJkc2lfZGlzcGxheV9kaXNh
YmxlXG4iKTsKLQlkc2lfYnVzX2xvY2soZHNpKTsKKwogCWRzaV9kaXNwbGF5X3VscHNfZGlzYWJs
ZShkc2ksIHRydWUsIGZhbHNlKTsKLQlkc2lfYnVzX3VubG9jayhkc2kpOwogfQogCiBzdGF0aWMg
aW50IGRzaV9lbmFibGVfdGUoc3RydWN0IGRzaV9kYXRhICpkc2ksIGJvb2wgZW5hYmxlKQpAQCAt
NDczMiwxNSArNDc4NywyNiBAQCBzdGF0aWMgYm9vbCBkc2lfdm1fY2FsYyhzdHJ1Y3QgZHNpX2Rh
dGEgKmRzaSwKIAkJCWRzaV92bV9jYWxjX3BsbF9jYiwgY3R4KTsKIH0KIAorc3RhdGljIGJvb2wg
ZHNpX2lzX3ZpZGVvX21vZGUoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2KQoreworCXN0
cnVjdCBkc2lfZGF0YSAqZHNpID0gdG9fZHNpX2RhdGEoZHNzZGV2KTsKKworCXJldHVybiAoZHNp
LT5tb2RlID09IE9NQVBfRFNTX0RTSV9WSURFT19NT0RFKTsKK30KKwogc3RhdGljIGludCBkc2lf
c2V0X2NvbmZpZyhzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpkc3NkZXYsCi0JCWNvbnN0IHN0cnVj
dCBvbWFwX2Rzc19kc2lfY29uZmlnICpjb25maWcpCisJCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICptb2RlKQogewogCXN0cnVjdCBkc2lfZGF0YSAqZHNpID0gdG9fZHNpX2RhdGEoZHNz
ZGV2KTsKIAlzdHJ1Y3QgZHNpX2Nsa19jYWxjX2N0eCBjdHg7Ci0Jc3RydWN0IG9tYXBfZHNzX2Rz
aV9jb25maWcgY2ZnID0gKmNvbmZpZzsKKwlzdHJ1Y3QgdmlkZW9tb2RlIHZtOworCXN0cnVjdCBv
bWFwX2Rzc19kc2lfY29uZmlnIGNmZyA9IGRzaS0+Y29uZmlnOwogCWJvb2wgb2s7CiAJaW50IHI7
CiAKKwlkcm1fZGlzcGxheV9tb2RlX3RvX3ZpZGVvbW9kZShtb2RlLCAmdm0pOworCWNmZy52bSA9
ICZ2bTsKKwogCW11dGV4X2xvY2soJmRzaS0+bG9jayk7CiAKIAljZmcubW9kZSA9IGRzaS0+bW9k
ZTsKQEAgLTQ5MDMsOSArNDk2OSwxNSBAQCBzdGF0aWMgc3NpemVfdCBvbWFwX2RzaV9ob3N0X3Ry
YW5zZmVyKHN0cnVjdCBtaXBpX2RzaV9ob3N0ICpob3N0LAogCWludCByOwogCiAJZHNpX2J1c19s
b2NrKGRzaSk7Ci0JZHNpX3NldF91bHBzX2F1dG8oZHNpLCBmYWxzZSk7Ci0JciA9IF9vbWFwX2Rz
aV9ob3N0X3RyYW5zZmVyKGRzaSwgbXNnKTsKLQlkc2lfc2V0X3VscHNfYXV0byhkc2ksIHRydWUp
OworCisJaWYgKGRzaS0+dmlkZW9fZW5hYmxlZCkgeworCQlkc2lfc2V0X3VscHNfYXV0byhkc2ks
IGZhbHNlKTsKKwkJciA9IF9vbWFwX2RzaV9ob3N0X3RyYW5zZmVyKGRzaSwgbXNnKTsKKwkJZHNp
X3NldF91bHBzX2F1dG8oZHNpLCB0cnVlKTsKKwl9IGVsc2UgeworCQlyID0gLUVJTzsKKwl9CisK
IAlkc2lfYnVzX3VubG9jayhkc2kpOwogCiAJcmV0dXJuIHI7CkBAIC00OTI2LDYgKzQ5OTgsMjMg
QEAgc3RhdGljIGludCBkc2lfZ2V0X2Nsb2NrcyhzdHJ1Y3QgZHNpX2RhdGEgKmRzaSkKIAlyZXR1
cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgZHNpX3NldF90aW1pbmdzKHN0cnVjdCBvbWFwX2Rzc19k
ZXZpY2UgKmRzc2RldiwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9k
ZSkKK3sKKwlEU1NEQkcoImRzaV9zZXRfdGltaW5nc1xuIik7CisJZHNpX3NldF9jb25maWcoZHNz
ZGV2LCBtb2RlKTsKK30KKworc3RhdGljIGludCBkc2lfY2hlY2tfdGltaW5ncyhzdHJ1Y3Qgb21h
cF9kc3NfZGV2aWNlICpkc3NkZXYsCisJCQkgICAgIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICpt
b2RlKQoreworCURTU0RCRygiZHNpX2NoZWNrX3RpbWluZ3NcbiIpOworCisJLyogVE9ETyAqLwor
CisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQgZHNpX2Nvbm5lY3Qoc3RydWN0IG9tYXBfZHNz
X2RldmljZSAqc3JjLAogCQkgICAgICAgc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHN0KQogewpA
QCAtNDk0MSwxNiArNTAzMCwxNSBAQCBzdGF0aWMgdm9pZCBkc2lfZGlzY29ubmVjdChzdHJ1Y3Qg
b21hcF9kc3NfZGV2aWNlICpzcmMsCiBzdGF0aWMgY29uc3Qgc3RydWN0IG9tYXBfZHNzX2Rldmlj
ZV9vcHMgZHNpX29wcyA9IHsKIAkuY29ubmVjdCA9IGRzaV9jb25uZWN0LAogCS5kaXNjb25uZWN0
ID0gZHNpX2Rpc2Nvbm5lY3QsCi0JLmVuYWJsZSA9IGRzaV9kaXNwbGF5X2VuYWJsZSwKLQkuZGlz
YWJsZSA9IGRzaV9kaXNwbGF5X2Rpc2FibGUsCi0KLQkuZHNpID0gewotCQkuc2V0X2NvbmZpZyA9
IGRzaV9zZXRfY29uZmlnLAorCS5lbmFibGUgPSBkc2lfZW5hYmxlX3ZpZGVvX291dHB1dHMsCisJ
LmRpc2FibGUgPSBkc2lfZGlzYWJsZV92aWRlb19vdXRwdXRzLAogCi0JCS5lbmFibGVfdmlkZW9f
b3V0cHV0ID0gZHNpX2VuYWJsZV92aWRlb19vdXRwdXQsCi0JCS5kaXNhYmxlX3ZpZGVvX291dHB1
dCA9IGRzaV9kaXNhYmxlX3ZpZGVvX291dHB1dCwKKwkuY2hlY2tfdGltaW5ncyA9IGRzaV9jaGVj
a190aW1pbmdzLAorCS5zZXRfdGltaW5ncyA9IGRzaV9zZXRfdGltaW5ncywKIAorCS5kc2kgPSB7
CiAJCS51cGRhdGUgPSBkc2lfdXBkYXRlX2FsbCwKKwkJLmlzX3ZpZGVvX21vZGUgPSBkc2lfaXNf
dmlkZW9fbW9kZSwKIAl9LAogfTsKIApAQCAtNTAzOCw2ICs1MTI2LDcgQEAgaW50IG9tYXBfZHNp
X2hvc3RfYXR0YWNoKHN0cnVjdCBtaXBpX2RzaV9ob3N0ICpob3N0LAogewogCXN0cnVjdCBkc2lf
ZGF0YSAqZHNpID0gaG9zdF90b19vbWFwKGhvc3QpOwogCXVuc2lnbmVkIGludCBjaGFubmVsID0g
Y2xpZW50LT5jaGFubmVsOworCXN0cnVjdCBkcm1fcGFuZWwgKnBhbmVsOwogCWludCByOwogCiAJ
aWYgKGNoYW5uZWwgPiAzKQpAQCAtNTA1MCw2ICs1MTM5LDEwIEBAIGludCBvbWFwX2RzaV9ob3N0
X2F0dGFjaChzdHJ1Y3QgbWlwaV9kc2lfaG9zdCAqaG9zdCwKIAogCWRzaV9idXNfbG9jayhkc2kp
OwogCisJcGFuZWwgPSBvZl9kcm1fZmluZF9wYW5lbChjbGllbnQtPmRldi5vZl9ub2RlKTsKKwlp
ZiAoSVNfRVJSKHBhbmVsKSkKKwkJcmV0dXJuIFBUUl9FUlIocGFuZWwpOworCiAJYXRvbWljX3Nl
dCgmZHNpLT5kb19leHRfdGVfdXBkYXRlLCAwKTsKIAogCWlmIChjbGllbnQtPm1vZGVfZmxhZ3Mg
JiBNSVBJX0RTSV9NT0RFX1ZJREVPKSB7CkBAIC01MDcwLDggKzUxNjMsMTIgQEAgaW50IG9tYXBf
ZHNpX2hvc3RfYXR0YWNoKHN0cnVjdCBtaXBpX2RzaV9ob3N0ICpob3N0LAogCUlOSVRfREVGRVJS
QUJMRV9XT1JLKCZkc2ktPnVscHNfd29yaywKIAkJCSAgICAgb21hcF9kc2lfdWxwc193b3JrX2Nh
bGxiYWNrKTsKIAorCWRzaS0+Y29uZmlnLmhzX2Nsa19taW4gPSAxNTAwMDAwMDA7IC8vIFRPRE86
IGdldCBmcm9tIGNsaWVudD8KKwlkc2ktPmNvbmZpZy5oc19jbGtfbWF4ID0gY2xpZW50LT5oc19y
YXRlOworCWRzaS0+Y29uZmlnLmxwX2Nsa19taW4gPSA3MDAwMDAwOyAvLyBUT0RPOiBnZXQgZnJv
bSBjbGllbnQ/CisJZHNpLT5jb25maWcubHBfY2xrX21heCA9IGNsaWVudC0+bHBfcmF0ZTsKKwog
CWRzaS0+dWxwc19hdXRvX2lkbGUgPSAhIShjbGllbnQtPm1vZGVfZmxhZ3MgJiBNSVBJX0RTSV9N
T0RFX1VMUFNfSURMRSk7Ci0JZHNpX3NldF91bHBzX2F1dG8oZHNpLCB0cnVlKTsKIAogCWRzaV9i
dXNfdW5sb2NrKGRzaSk7CiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
b21hcGRybS9kc3Mvb21hcGRzcy1ib290LWluaXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJt
L2Rzcy9vbWFwZHNzLWJvb3QtaW5pdC5jCmluZGV4IDMxNTAyODU3ZjAxMy4uMDVhYzJlMWNkNzdl
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21hcGRzcy1ib290LWlu
aXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21hcGRzcy1ib290LWluaXQu
YwpAQCAtMTc2LDcgKzE3Niw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIG9t
YXBkc3Nfb2ZfbWF0Y2hbXSBfX2luaXRjb25zdCA9IHsKIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgb2Zf
ZGV2aWNlX2lkIG9tYXBkc3Nfb2ZfZml4dXBzX3doaXRlbGlzdFtdIF9faW5pdGNvbnN0ID0gewog
CXsgLmNvbXBhdGlibGUgPSAiY29tcG9zaXRlLXZpZGVvLWNvbm5lY3RvciIgfSwKIAl7IC5jb21w
YXRpYmxlID0gImhkbWktY29ubmVjdG9yIiB9LAotCXsgLmNvbXBhdGlibGUgPSAicGFuZWwtZHNp
LWNtIiB9LAogCXsgLmNvbXBhdGlibGUgPSAic3ZpZGVvLWNvbm5lY3RvciIgfSwKIAl7IC5jb21w
YXRpYmxlID0gInRpLG9wYTM2MiIgfSwKIAl7IC5jb21wYXRpYmxlID0gInRpLHRwZDEyczAxNSIg
fSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rzcy9vbWFwZHNzLmggYi9k
cml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21hcGRzcy5oCmluZGV4IDIxNjAxYWYyOWVlNC4u
YmZiNDAyYTg4NDc1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9kc3Mvb21h
cGRzcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9vbWFwZHJtL2Rzcy9vbWFwZHNzLmgKQEAgLTEy
MiwxMSArMTIyLDYgQEAgZW51bSBvbWFwX2Rzc19kc2lfbW9kZSB7CiAJT01BUF9EU1NfRFNJX1ZJ
REVPX01PREUsCiB9OwogCi1lbnVtIG9tYXBfZGlzcGxheV9jYXBzIHsKLQlPTUFQX0RTU19ESVNQ
TEFZX0NBUF9NQU5VQUxfVVBEQVRFCT0gMSA8PCAwLAotCU9NQVBfRFNTX0RJU1BMQVlfQ0FQX1RF
QVJfRUxJTQkJPSAxIDw8IDEsCi19OwotCiBlbnVtIG9tYXBfZHNzX2Rpc3BsYXlfc3RhdGUgewog
CU9NQVBfRFNTX0RJU1BMQVlfRElTQUJMRUQgPSAwLAogCU9NQVBfRFNTX0RJU1BMQVlfQUNUSVZF
LApAQCAtMjg4LDE0ICsyODMsNyBAQCBzdHJ1Y3Qgb21hcGRzc19oZG1pX29wcyB7CiAKIHN0cnVj
dCBvbWFwZHNzX2RzaV9vcHMgewogCWludCAoKnVwZGF0ZSkoc3RydWN0IG9tYXBfZHNzX2Rldmlj
ZSAqZHNzZGV2KTsKLQotCS8qIGxlZ2FjeSBBUEkgdXNlZCBieSBvbWFwZHNzIHBhbmVscyAqLwot
CWludCAoKnNldF9jb25maWcpKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRzc2RldiwKLQkJCWNv
bnN0IHN0cnVjdCBvbWFwX2Rzc19kc2lfY29uZmlnICpjZmcpOwotCi0JaW50ICgqZW5hYmxlX3Zp
ZGVvX291dHB1dCkoc3RydWN0IG9tYXBfZHNzX2RldmljZSAqZHNzZGV2LCBpbnQgY2hhbm5lbCk7
Ci0Jdm9pZCAoKmRpc2FibGVfdmlkZW9fb3V0cHV0KShzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpk
c3NkZXYsCi0JCQlpbnQgY2hhbm5lbCk7CisJYm9vbCAoKmlzX3ZpZGVvX21vZGUpKHN0cnVjdCBv
bWFwX2Rzc19kZXZpY2UgKmRzc2Rldik7CiB9OwogCiBzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlX29w
cyB7CkBAIC0zNzQsMTMgKzM2MiwxMCBAQCBzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlIHsKIAogCWNv
bnN0IGNoYXIgKm5hbWU7CiAKLQljb25zdCBzdHJ1Y3Qgb21hcF9kc3NfZHJpdmVyICpkcml2ZXI7
CiAJY29uc3Qgc3RydWN0IG9tYXBfZHNzX2RldmljZV9vcHMgKm9wczsKIAl1bnNpZ25lZCBsb25n
IG9wc19mbGFnczsKIAl1MzIgYnVzX2ZsYWdzOwogCi0JZW51bSBvbWFwX2Rpc3BsYXlfY2FwcyBj
YXBzOwotCiAJZW51bSBvbWFwX2Rzc19kaXNwbGF5X3N0YXRlIHN0YXRlOwogCiAJLyogT01BUCBE
U1Mgb3V0cHV0IHNwZWNpZmljIGZpZWxkcyAqLwpAQCAtMzk1LDExICszODAsNiBAQCBzdHJ1Y3Qg
b21hcF9kc3NfZGV2aWNlIHsKIAl1bnNpZ25lZCBpbnQgb2ZfcG9ydHM7CiB9OwogCi1zdHJ1Y3Qg
b21hcF9kc3NfZHJpdmVyIHsKLQlpbnQgKCp1cGRhdGUpKHN0cnVjdCBvbWFwX2Rzc19kZXZpY2Ug
KmRzc2RldiwKLQkJCSAgICAgICB1MTYgeCwgdTE2IHksIHUxNiB3LCB1MTYgaCk7Ci19OwotCiBz
dHJ1Y3QgZHNzX2RldmljZSAqb21hcGRzc19nZXRfZHNzKHZvaWQpOwogdm9pZCBvbWFwZHNzX3Nl
dF9kc3Moc3RydWN0IGRzc19kZXZpY2UgKmRzcyk7CiBzdGF0aWMgaW5saW5lIGJvb2wgb21hcGRz
c19pc19pbml0aWFsaXplZCh2b2lkKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL29tYXBk
cm0vb21hcF9jcnRjLmMgYi9kcml2ZXJzL2dwdS9kcm0vb21hcGRybS9vbWFwX2NydGMuYwppbmRl
eCBhOGQwNTQzZDEyOTYuLjgwZWQxYjE1YmE0OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L29tYXBkcm0vb21hcF9jcnRjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL29tYXBkcm0vb21hcF9j
cnRjLmMKQEAgLTQ5NSw4ICs0OTUsNyBAQCBzdGF0aWMgZW51bSBkcm1fbW9kZV9zdGF0dXMgb21h
cF9jcnRjX21vZGVfdmFsaWQoc3RydWN0IGRybV9jcnRjICpjcnRjLAogCSAqIHZhbGlkIERJU1BD
IG1vZGUuIERTSSB3aWxsIGNhbGN1bGF0ZSBhbmQgY29uZmlndXJlIHRoZQogCSAqIHByb3BlciBE
SVNQQyBtb2RlIGxhdGVyLgogCSAqLwotCWlmIChvbWFwX2NydGMtPnBpcGUtPm91dHB1dC0+bmV4
dCA9PSBOVUxMIHx8Ci0JICAgIG9tYXBfY3J0Yy0+cGlwZS0+b3V0cHV0LT5uZXh0LT50eXBlICE9
IE9NQVBfRElTUExBWV9UWVBFX0RTSSkgeworCWlmIChvbWFwX2NydGMtPnBpcGUtPm91dHB1dC0+
dHlwZSAhPSBPTUFQX0RJU1BMQVlfVFlQRV9EU0kpIHsKIAkJciA9IHByaXYtPmRpc3BjX29wcy0+
bWdyX2NoZWNrX3RpbWluZ3MocHJpdi0+ZGlzcGMsCiAJCQkJCQkgICAgICAgb21hcF9jcnRjLT5j
aGFubmVsLAogCQkJCQkJICAgICAgICZ2bSk7CkBAIC01NDgsMTcgKzU0NywxNyBAQCBzdGF0aWMg
dm9pZCBvbWFwX2NydGNfbW9kZV9zZXRfbm9mYihzdHJ1Y3QgZHJtX2NydGMgKmNydGMpCiBzdGF0
aWMgYm9vbCBvbWFwX2NydGNfaXNfbWFudWFsbHlfdXBkYXRlZChzdHJ1Y3QgZHJtX2NydGMgKmNy
dGMpCiB7CiAJc3RydWN0IG9tYXBfY3J0YyAqb21hcF9jcnRjID0gdG9fb21hcF9jcnRjKGNydGMp
OwotCXN0cnVjdCBvbWFwX2Rzc19kZXZpY2UgKmRpc3BsYXkgPSBvbWFwX2NydGMtPnBpcGUtPm91
dHB1dC0+bmV4dDsKKwlzdHJ1Y3Qgb21hcF9kc3NfZGV2aWNlICpkc3NkZXYgPSBvbWFwX2NydGMt
PnBpcGUtPm91dHB1dDsKIAotCWlmICghZGlzcGxheSkKKwlpZiAoZHNzZGV2LT50eXBlICE9IE9N
QVBfRElTUExBWV9UWVBFX0RTSSB8fAorCSAgICAhZHNzZGV2LT5vcHMtPmRzaS5pc192aWRlb19t
b2RlKQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoZGlzcGxheS0+Y2FwcyAmIE9NQVBfRFNTX0RJ
U1BMQVlfQ0FQX01BTlVBTF9VUERBVEUpIHsKLQkJREJHKCJkZXRlY3RlZCBtYW51YWxseSB1cGRh
dGVkIGRpc3BsYXkhIik7Ci0JCXJldHVybiB0cnVlOwotCX0KKwlpZiAoZHNzZGV2LT5vcHMtPmRz
aS5pc192aWRlb19tb2RlKGRzc2RldikpCisJCXJldHVybiBmYWxzZTsKIAotCXJldHVybiBmYWxz
ZTsKKwlEQkcoImRldGVjdGVkIG1hbnVhbGx5IHVwZGF0ZWQgZGlzcGxheSEiKTsKKwlyZXR1cm4g
dHJ1ZTsKIH0KIAogc3RhdGljIGludCBvbWFwX2NydGNfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1f
Y3J0YyAqY3J0YywKLS0gCjIuMjQuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vZHJpLWRldmVs
