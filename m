Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5B21E261CB
	for <lists+dri-devel@lfdr.de>; Wed, 22 May 2019 12:33:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1D9248991A;
	Wed, 22 May 2019 10:33:20 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CE7388991A
 for <dri-devel@lists.freedesktop.org>; Wed, 22 May 2019 10:33:18 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
 [10.5.11.23])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 401AB309267F;
 Wed, 22 May 2019 10:33:13 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-117-74.ams2.redhat.com
 [10.36.117.74])
 by smtp.corp.redhat.com (Postfix) with ESMTP id E52782855E;
 Wed, 22 May 2019 10:33:08 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id C46F7A1E7; Wed, 22 May 2019 12:33:07 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH] drm/cirrus: remove leftover files
Date: Wed, 22 May 2019 12:33:07 +0200
Message-Id: <20190522103307.12711-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.43]); Wed, 22 May 2019 10:33:18 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>, open list <linux-kernel@vger.kernel.org>,
 "open list:DRM DRIVER FOR QEMU'S CIRRUS DEVICE"
 <virtualization@lists.linux-foundation.org>, Gerd Hoffmann <kraxel@redhat.com>,
 Dave Airlie <airlied@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

Y2lycnVzX2Rydi5oIGFuZCBjaXJydXNfdHRtLmMgYXJlIHVudXNlZCBzaW5jZSBjb21taXQgYWIz
ZTAyM2IxYjRjCigiZHJtL2NpcnJ1czogcmV3cml0ZSBhbmQgbW9kZXJuaXplIGRyaXZlciIpLCBh
cHBhcmVudGx5IEkgcmFuICJybSIKaW5zdGVhZCBvZiAiZ2l0IHJtIiBvbiB0aGVtIHNvIHRoZXkg
YXJlIHN0aWxsIGluIHByZXNlbnQgdGhlIHRyZWUuCgpTaWduZWQtb2ZmLWJ5OiBHZXJkIEhvZmZt
YW5uIDxrcmF4ZWxAcmVkaGF0LmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vY2lycnVzL2NpcnJ1
c19kcnYuaCB8IDI1MCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9jaXJy
dXMvY2lycnVzX3R0bS5jIHwgMzM3IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDIgZmls
ZXMgY2hhbmdlZCwgNTg3IGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMv
Z3B1L2RybS9jaXJydXMvY2lycnVzX2Rydi5oCiBkZWxldGUgbW9kZSAxMDA2NDQgZHJpdmVycy9n
cHUvZHJtL2NpcnJ1cy9jaXJydXNfdHRtLmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
Y2lycnVzL2NpcnJ1c19kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9jaXJydXMvY2lycnVzX2Rydi5o
CmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAxYmQ4MTZiZTNhYWUuLjAwMDAwMDAwMDAw
MAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vY2lycnVzL2NpcnJ1c19kcnYuaAorKysgL2Rldi9udWxs
CkBAIC0xLDI1MCArMCwwIEBACi0vKgotICogQ29weXJpZ2h0IDIwMTIgUmVkIEhhdAotICoKLSAq
IFRoaXMgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUg
R05VIEdlbmVyYWwKLSAqIFB1YmxpYyBMaWNlbnNlIHZlcnNpb24gMi4gU2VlIHRoZSBmaWxlIENP
UFlJTkcgaW4gdGhlIG1haW4KLSAqIGRpcmVjdG9yeSBvZiB0aGlzIGFyY2hpdmUgZm9yIG1vcmUg
ZGV0YWlscy4KLSAqCi0gKiBBdXRob3JzOiBNYXR0aGV3IEdhcnJldHQKLSAqICAgICAgICAgIERh
dmUgQWlybGllCi0gKi8KLSNpZm5kZWYgX19DSVJSVVNfRFJWX0hfXwotI2RlZmluZSBfX0NJUlJV
U19EUlZfSF9fCi0KLSNpbmNsdWRlIDx2aWRlby92Z2EuaD4KLQotI2luY2x1ZGUgPGRybS9kcm1f
ZW5jb2Rlci5oPgotI2luY2x1ZGUgPGRybS9kcm1fZmJfaGVscGVyLmg+Ci0KLSNpbmNsdWRlIDxk
cm0vdHRtL3R0bV9ib19hcGkuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19kcml2ZXIuaD4K
LSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9wbGFjZW1lbnQuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0
bV9tZW1vcnkuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9tb2R1bGUuaD4KLQotI2luY2x1ZGUg
PGRybS9kcm1fZ2VtLmg+Ci0KLSNkZWZpbmUgRFJJVkVSX0FVVEhPUgkJIk1hdHRoZXcgR2FycmV0
dCIKLQotI2RlZmluZSBEUklWRVJfTkFNRQkJImNpcnJ1cyIKLSNkZWZpbmUgRFJJVkVSX0RFU0MJ
CSJxZW11IENpcnJ1cyBlbXVsYXRpb24iCi0jZGVmaW5lIERSSVZFUl9EQVRFCQkiMjAxMTA0MTgi
Ci0KLSNkZWZpbmUgRFJJVkVSX01BSk9SCQkxCi0jZGVmaW5lIERSSVZFUl9NSU5PUgkJMAotI2Rl
ZmluZSBEUklWRVJfUEFUQ0hMRVZFTAkwCi0KLSNkZWZpbmUgQ0lSUlVTRkJfQ09OTl9MSU1JVCAx
Ci0KLSNkZWZpbmUgUlJFRzgocmVnKSBpb3JlYWQ4KCgodm9pZCBfX2lvbWVtICopY2Rldi0+cm1t
aW8pICsgKHJlZykpCi0jZGVmaW5lIFdSRUc4KHJlZywgdikgaW93cml0ZTgodiwgKCh2b2lkIF9f
aW9tZW0gKiljZGV2LT5ybW1pbykgKyAocmVnKSkKLSNkZWZpbmUgUlJFRzMyKHJlZykgaW9yZWFk
MzIoKCh2b2lkIF9faW9tZW0gKiljZGV2LT5ybW1pbykgKyAocmVnKSkKLSNkZWZpbmUgV1JFRzMy
KHJlZywgdikgaW93cml0ZTMyKHYsICgodm9pZCBfX2lvbWVtICopY2Rldi0+cm1taW8pICsgKHJl
ZykpCi0KLSNkZWZpbmUgU0VRX0lOREVYIDQKLSNkZWZpbmUgU0VRX0RBVEEgNQotCi0jZGVmaW5l
IFdSRUdfU0VRKHJlZywgdikJCQkJCVwKLQlkbyB7CQkJCQkJCVwKLQkJV1JFRzgoU0VRX0lOREVY
LCByZWcpOwkJCQlcCi0JCVdSRUc4KFNFUV9EQVRBLCB2KTsJCQkJXAotCX0gd2hpbGUgKDApCQkJ
CQkJXAotCi0jZGVmaW5lIENSVF9JTkRFWCAweDE0Ci0jZGVmaW5lIENSVF9EQVRBIDB4MTUKLQot
I2RlZmluZSBXUkVHX0NSVChyZWcsIHYpCQkJCQlcCi0JZG8gewkJCQkJCQlcCi0JCVdSRUc4KENS
VF9JTkRFWCwgcmVnKTsJCQkJXAotCQlXUkVHOChDUlRfREFUQSwgdik7CQkJCVwKLQl9IHdoaWxl
ICgwKQkJCQkJCVwKLQotI2RlZmluZSBHRlhfSU5ERVggMHhlCi0jZGVmaW5lIEdGWF9EQVRBIDB4
ZgotCi0jZGVmaW5lIFdSRUdfR0ZYKHJlZywgdikJCQkJCVwKLQlkbyB7CQkJCQkJCVwKLQkJV1JF
RzgoR0ZYX0lOREVYLCByZWcpOwkJCQlcCi0JCVdSRUc4KEdGWF9EQVRBLCB2KTsJCQkJXAotCX0g
d2hpbGUgKDApCQkJCQkJXAotCi0vKgotICogQ2lycnVzIGhhcyBhICJoaWRkZW4iIERBQyByZWdp
c3RlciB0aGF0IGNhbiBiZSBhY2Nlc3NlZCBieSB3cml0aW5nIHRvCi0gKiB0aGUgcGl4ZWwgbWFz
ayByZWdpc3RlciB0byByZXNldCB0aGUgc3RhdGUsIHRoZW4gcmVhZGluZyBmcm9tIHRoZSByZWdp
c3RlcgotICogZm91ciB0aW1lcy4gVGhlIG5leHQgd3JpdGUgd2lsbCB0aGVuIHBhc3MgdG8gdGhl
IERBQwotICovCi0jZGVmaW5lIFZHQV9EQUNfTUFTSyAweDYKLQotI2RlZmluZSBXUkVHX0hEUih2
KQkJCQkJCVwKLQlkbyB7CQkJCQkJCVwKLQkJUlJFRzgoVkdBX0RBQ19NQVNLKTsJCQkJCVwKLQkJ
UlJFRzgoVkdBX0RBQ19NQVNLKTsJCQkJCVwKLQkJUlJFRzgoVkdBX0RBQ19NQVNLKTsJCQkJCVwK
LQkJUlJFRzgoVkdBX0RBQ19NQVNLKTsJCQkJCVwKLQkJV1JFRzgoVkdBX0RBQ19NQVNLLCB2KTsJ
CQkJCVwKLQl9IHdoaWxlICgwKQkJCQkJCVwKLQotCi0jZGVmaW5lIENJUlJVU19NQVhfRkJfSEVJ
R0hUIDQwOTYKLSNkZWZpbmUgQ0lSUlVTX01BWF9GQl9XSURUSCA0MDk2Ci0KLSNkZWZpbmUgQ0lS
UlVTX0RQTVNfQ0xFQVJFRCAoLTEpCi0KLSNkZWZpbmUgdG9fY2lycnVzX2NydGMoeCkgY29udGFp
bmVyX29mKHgsIHN0cnVjdCBjaXJydXNfY3J0YywgYmFzZSkKLSNkZWZpbmUgdG9fY2lycnVzX2Vu
Y29kZXIoeCkgY29udGFpbmVyX29mKHgsIHN0cnVjdCBjaXJydXNfZW5jb2RlciwgYmFzZSkKLQot
c3RydWN0IGNpcnJ1c19jcnRjIHsKLQlzdHJ1Y3QgZHJtX2NydGMJCQliYXNlOwotCWludAkJCQls
YXN0X2RwbXM7Ci0JYm9vbAkJCQllbmFibGVkOwotfTsKLQotc3RydWN0IGNpcnJ1c19mYmRldjsK
LXN0cnVjdCBjaXJydXNfbW9kZV9pbmZvIHsKLQlzdHJ1Y3QgY2lycnVzX2NydGMJCSpjcnRjOwot
CS8qIHBvaW50ZXIgdG8gZmJkZXYgaW5mbyBzdHJ1Y3R1cmUgKi8KLQlzdHJ1Y3QgY2lycnVzX2Zi
ZGV2CQkqZ2ZiZGV2OwotfTsKLQotc3RydWN0IGNpcnJ1c19lbmNvZGVyIHsKLQlzdHJ1Y3QgZHJt
X2VuY29kZXIJCWJhc2U7Ci0JaW50CQkJCWxhc3RfZHBtczsKLX07Ci0KLXN0cnVjdCBjaXJydXNf
Y29ubmVjdG9yIHsKLQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvcgkJYmFzZTsKLX07Ci0KLXN0cnVjdCBj
aXJydXNfbWMgewotCXJlc291cmNlX3NpemVfdAkJCXZyYW1fc2l6ZTsKLQlyZXNvdXJjZV9zaXpl
X3QJCQl2cmFtX2Jhc2U7Ci19OwotCi1zdHJ1Y3QgY2lycnVzX2RldmljZSB7Ci0Jc3RydWN0IGRy
bV9kZXZpY2UJCSpkZXY7Ci0JdW5zaWduZWQgbG9uZwkJCWZsYWdzOwotCi0JcmVzb3VyY2Vfc2l6
ZV90CQkJcm1taW9fYmFzZTsKLQlyZXNvdXJjZV9zaXplX3QJCQlybW1pb19zaXplOwotCXZvaWQg
X19pb21lbQkJCSpybW1pbzsKLQotCXN0cnVjdCBjaXJydXNfbWMJCQltYzsKLQlzdHJ1Y3QgY2ly
cnVzX21vZGVfaW5mbwkJbW9kZV9pbmZvOwotCi0JaW50CQkJCW51bV9jcnRjOwotCWludCBmYl9t
dHJyOwotCi0Jc3RydWN0IHsKLQkJc3RydWN0IHR0bV9ib19kZXZpY2UgYmRldjsKLQl9IHR0bTsK
LQlib29sIG1tX2luaXRlZDsKLX07Ci0KLQotc3RydWN0IGNpcnJ1c19mYmRldiB7Ci0Jc3RydWN0
IGRybV9mYl9oZWxwZXIgaGVscGVyOyAvKiBtdXN0IGJlIGZpcnN0ICovCi0Jc3RydWN0IGRybV9m
cmFtZWJ1ZmZlciAqZ2ZiOwotCXZvaWQgKnN5c3JhbTsKLQlpbnQgc2l6ZTsKLQlpbnQgeDEsIHkx
LCB4MiwgeTI7IC8qIGRpcnR5IHJlY3QgKi8KLQlzcGlubG9ja190IGRpcnR5X2xvY2s7Ci19Owot
Ci1zdHJ1Y3QgY2lycnVzX2JvIHsKLQlzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgYm87Ci0Jc3Ry
dWN0IHR0bV9wbGFjZW1lbnQgcGxhY2VtZW50OwotCXN0cnVjdCB0dG1fYm9fa21hcF9vYmoga21h
cDsKLQlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgZ2VtOwotCXN0cnVjdCB0dG1fcGxhY2UgcGxhY2Vt
ZW50c1szXTsKLQlpbnQgcGluX2NvdW50OwotfTsKLSNkZWZpbmUgZ2VtX3RvX2NpcnJ1c19ibyhn
b2JqKSBjb250YWluZXJfb2YoKGdvYmopLCBzdHJ1Y3QgY2lycnVzX2JvLCBnZW0pCi0KLXN0YXRp
YyBpbmxpbmUgc3RydWN0IGNpcnJ1c19ibyAqCi1jaXJydXNfYm8oc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICpibykKLXsKLQlyZXR1cm4gY29udGFpbmVyX29mKGJvLCBzdHJ1Y3QgY2lycnVzX2Jv
LCBibyk7Ci19Ci0KLQotI2RlZmluZSB0b19jaXJydXNfb2JqKHgpIGNvbnRhaW5lcl9vZih4LCBz
dHJ1Y3QgY2lycnVzX2dlbV9vYmplY3QsIGJhc2UpCi0KLQkJCQkvKiBjaXJydXNfbWFpbi5jICov
Ci1pbnQgY2lycnVzX2RldmljZV9pbml0KHN0cnVjdCBjaXJydXNfZGV2aWNlICpjZGV2LAotCQkg
ICAgICBzdHJ1Y3QgZHJtX2RldmljZSAqZGRldiwKLQkJICAgICAgc3RydWN0IHBjaV9kZXYgKnBk
ZXYsCi0JCSAgICAgIHVpbnQzMl90IGZsYWdzKTsKLXZvaWQgY2lycnVzX2RldmljZV9maW5pKHN0
cnVjdCBjaXJydXNfZGV2aWNlICpjZGV2KTsKLXZvaWQgY2lycnVzX2dlbV9mcmVlX29iamVjdChz
dHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaik7Ci1pbnQgY2lycnVzX2R1bWJfbW1hcF9vZmZzZXQo
c3RydWN0IGRybV9maWxlICpmaWxlLAotCQkJICAgIHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0J
CQkgICAgdWludDMyX3QgaGFuZGxlLAotCQkJICAgIHVpbnQ2NF90ICpvZmZzZXQpOwotaW50IGNp
cnJ1c19nZW1fY3JlYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0JCSAgIHUzMiBzaXplLCBi
b29sIGlza2VybmVsLAotCQkgICAgICBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKipvYmopOwotaW50
IGNpcnJ1c19kdW1iX2NyZWF0ZShzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCi0JCSAgICBzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LAotCQkgICAgICAgc3RydWN0IGRybV9tb2RlX2NyZWF0ZV9kdW1iICph
cmdzKTsKLQotaW50IGNpcnJ1c19mcmFtZWJ1ZmZlcl9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYsCi0JCQkgICAgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZ2ZiLAotCQkJICAgIGNvbnN0IHN0
cnVjdCBkcm1fbW9kZV9mYl9jbWQyICptb2RlX2NtZCwKLQkJCSAgICBzdHJ1Y3QgZHJtX2dlbV9v
YmplY3QgKm9iaik7Ci0KLWJvb2wgY2lycnVzX2NoZWNrX2ZyYW1lYnVmZmVyKHN0cnVjdCBjaXJy
dXNfZGV2aWNlICpjZGV2LCBpbnQgd2lkdGgsIGludCBoZWlnaHQsCi0JCQkgICAgICBpbnQgYnBw
LCBpbnQgcGl0Y2gpOwotCi0JCQkJLyogY2lycnVzX2Rpc3BsYXkuYyAqLwotaW50IGNpcnJ1c19t
b2Rlc2V0X2luaXQoc3RydWN0IGNpcnJ1c19kZXZpY2UgKmNkZXYpOwotdm9pZCBjaXJydXNfbW9k
ZXNldF9maW5pKHN0cnVjdCBjaXJydXNfZGV2aWNlICpjZGV2KTsKLQotCQkJCS8qIGNpcnJ1c19m
YmRldi5jICovCi1pbnQgY2lycnVzX2ZiZGV2X2luaXQoc3RydWN0IGNpcnJ1c19kZXZpY2UgKmNk
ZXYpOwotdm9pZCBjaXJydXNfZmJkZXZfZmluaShzdHJ1Y3QgY2lycnVzX2RldmljZSAqY2Rldik7
Ci0KLQotCi0JCQkJLyogY2lycnVzX2lycS5jICovCi12b2lkIGNpcnJ1c19kcml2ZXJfaXJxX3By
ZWluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRldik7Ci1pbnQgY2lycnVzX2RyaXZlcl9pcnFf
cG9zdGluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRldik7Ci12b2lkIGNpcnJ1c19kcml2ZXJf
aXJxX3VuaW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KTsKLWlycXJldHVybl90IGNpcnJ1
c19kcml2ZXJfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKTsKLQotCQkJCS8qIGNpcnJ1
c19rbXMuYyAqLwotaW50IGNpcnJ1c19kcml2ZXJfbG9hZChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB1bnNpZ25lZCBsb25nIGZsYWdzKTsKLXZvaWQgY2lycnVzX2RyaXZlcl91bmxvYWQoc3RydWN0
IGRybV9kZXZpY2UgKmRldik7Ci1leHRlcm4gc3RydWN0IGRybV9pb2N0bF9kZXNjIGNpcnJ1c19p
b2N0bHNbXTsKLWV4dGVybiBpbnQgY2lycnVzX21heF9pb2N0bDsKLQotaW50IGNpcnJ1c19tbV9p
bml0KHN0cnVjdCBjaXJydXNfZGV2aWNlICpjaXJydXMpOwotdm9pZCBjaXJydXNfbW1fZmluaShz
dHJ1Y3QgY2lycnVzX2RldmljZSAqY2lycnVzKTsKLXZvaWQgY2lycnVzX3R0bV9wbGFjZW1lbnQo
c3RydWN0IGNpcnJ1c19ibyAqYm8sIGludCBkb21haW4pOwotaW50IGNpcnJ1c19ib19jcmVhdGUo
c3RydWN0IGRybV9kZXZpY2UgKmRldiwgaW50IHNpemUsIGludCBhbGlnbiwKLQkJICAgICB1aW50
MzJfdCBmbGFncywgc3RydWN0IGNpcnJ1c19ibyAqKnBjaXJydXNibyk7Ci1pbnQgY2lycnVzX21t
YXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKTsKLQotc3Rh
dGljIGlubGluZSBpbnQgY2lycnVzX2JvX3Jlc2VydmUoc3RydWN0IGNpcnJ1c19ibyAqYm8sIGJv
b2wgbm9fd2FpdCkKLXsKLQlpbnQgcmV0OwotCi0JcmV0ID0gdHRtX2JvX3Jlc2VydmUoJmJvLT5i
bywgdHJ1ZSwgbm9fd2FpdCwgTlVMTCk7Ci0JaWYgKHJldCkgewotCQlpZiAocmV0ICE9IC1FUkVT
VEFSVFNZUyAmJiByZXQgIT0gLUVCVVNZKQotCQkJRFJNX0VSUk9SKCJyZXNlcnZlIGZhaWxlZCAl
cFxuIiwgYm8pOwotCQlyZXR1cm4gcmV0OwotCX0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGlu
bGluZSB2b2lkIGNpcnJ1c19ib191bnJlc2VydmUoc3RydWN0IGNpcnJ1c19ibyAqYm8pCi17Ci0J
dHRtX2JvX3VucmVzZXJ2ZSgmYm8tPmJvKTsKLX0KLQotaW50IGNpcnJ1c19ib19wdXNoX3N5c3Jh
bShzdHJ1Y3QgY2lycnVzX2JvICpibyk7Ci1pbnQgY2lycnVzX2JvX3BpbihzdHJ1Y3QgY2lycnVz
X2JvICpibywgdTMyIHBsX2ZsYWcsIHU2NCAqZ3B1X2FkZHIpOwotCi1leHRlcm4gaW50IGNpcnJ1
c19icHA7Ci0KLSNlbmRpZgkJCQkvKiBfX0NJUlJVU19EUlZfSF9fICovCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vY2lycnVzL2NpcnJ1c190dG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9jaXJy
dXMvY2lycnVzX3R0bS5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCBlNmI5ODQ2N2E0
MjguLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vY2lycnVzL2NpcnJ1c190dG0u
YworKysgL2Rldi9udWxsCkBAIC0xLDMzNyArMCwwIEBACi0vKgotICogQ29weXJpZ2h0IDIwMTIg
UmVkIEhhdCBJbmMuCi0gKgotICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0
d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUKLSAqICJTb2Z0d2Fy
ZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRp
bmcKLSAqIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5
LCBtZXJnZSwgcHVibGlzaCwKLSAqIGRpc3RyaWJ1dGUsIHN1YiBsaWNlbnNlLCBhbmQvb3Igc2Vs
bCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8KLSAqIHBlcm1pdCBwZXJzb25zIHRvIHdo
b20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0bwotICogdGhl
IGZvbGxvd2luZyBjb25kaXRpb25zOgotICoKLSAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAi
QVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCi0gKiBJTVBM
SUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNI
QU5UQUJJTElUWSwKLSAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04t
SU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTAotICogVEhFIENPUFlSSUdIVCBIT0xERVJT
LCBBVVRIT1JTIEFORC9PUiBJVFMgU1VQUExJRVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLAot
ICogREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENP
TlRSQUNULCBUT1JUIE9SCi0gKiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElO
IENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFCi0gKiBVU0UgT1IgT1RIRVIgREVB
TElOR1MgSU4gVEhFIFNPRlRXQVJFLgotICoKLSAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNl
IGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIChpbmNsdWRpbmcgdGhlCi0gKiBuZXh0IHBhcmFn
cmFwaCkgc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0
aW9ucwotICogb2YgdGhlIFNvZnR3YXJlLgotICoKLSAqLwotLyoKLSAqIEF1dGhvcnM6IERhdmUg
QWlybGllIDxhaXJsaWVkQHJlZGhhdC5jb20+Ci0gKi8KLSNpbmNsdWRlIDxkcm0vZHJtUC5oPgot
I2luY2x1ZGUgPGRybS90dG0vdHRtX3BhZ2VfYWxsb2MuaD4KLQotI2luY2x1ZGUgImNpcnJ1c19k
cnYuaCIKLQotc3RhdGljIGlubGluZSBzdHJ1Y3QgY2lycnVzX2RldmljZSAqCi1jaXJydXNfYmRl
dihzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmQpCi17Ci0JcmV0dXJuIGNvbnRhaW5lcl9vZihiZCwg
c3RydWN0IGNpcnJ1c19kZXZpY2UsIHR0bS5iZGV2KTsKLX0KLQotc3RhdGljIHZvaWQgY2lycnVz
X2JvX3R0bV9kZXN0cm95KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqdGJvKQotewotCXN0cnVj
dCBjaXJydXNfYm8gKmJvOwotCi0JYm8gPSBjb250YWluZXJfb2YodGJvLCBzdHJ1Y3QgY2lycnVz
X2JvLCBibyk7Ci0KLQlkcm1fZ2VtX29iamVjdF9yZWxlYXNlKCZiby0+Z2VtKTsKLQlrZnJlZShi
byk7Ci19Ci0KLXN0YXRpYyBib29sIGNpcnJ1c190dG1fYm9faXNfY2lycnVzX2JvKHN0cnVjdCB0
dG1fYnVmZmVyX29iamVjdCAqYm8pCi17Ci0JaWYgKGJvLT5kZXN0cm95ID09ICZjaXJydXNfYm9f
dHRtX2Rlc3Ryb3kpCi0JCXJldHVybiB0cnVlOwotCXJldHVybiBmYWxzZTsKLX0KLQotc3RhdGlj
IGludAotY2lycnVzX2JvX2luaXRfbWVtX3R5cGUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYs
IHVpbnQzMl90IHR5cGUsCi0JCSAgICAgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyICptYW4p
Ci17Ci0Jc3dpdGNoICh0eXBlKSB7Ci0JY2FzZSBUVE1fUExfU1lTVEVNOgotCQltYW4tPmZsYWdz
ID0gVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9
IFRUTV9QTF9NQVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZM
QUdfQ0FDSEVEOwotCQlicmVhazsKLQljYXNlIFRUTV9QTF9WUkFNOgotCQltYW4tPmZ1bmMgPSAm
dHRtX2JvX21hbmFnZXJfZnVuYzsKLQkJbWFuLT5mbGFncyA9IFRUTV9NRU1UWVBFX0ZMQUdfRklY
RUQgfAotCQkJVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2Fj
aGluZyA9IFRUTV9QTF9GTEFHX1VOQ0FDSEVEIHwKLQkJCVRUTV9QTF9GTEFHX1dDOwotCQltYW4t
PmRlZmF1bHRfY2FjaGluZyA9IFRUTV9QTF9GTEFHX1dDOwotCQlicmVhazsKLQlkZWZhdWx0Ogot
CQlEUk1fRVJST1IoIlVuc3VwcG9ydGVkIG1lbW9yeSB0eXBlICV1XG4iLCAodW5zaWduZWQpdHlw
ZSk7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQK
LWNpcnJ1c19ib19ldmljdF9mbGFncyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLCBzdHJ1
Y3QgdHRtX3BsYWNlbWVudCAqcGwpCi17Ci0Jc3RydWN0IGNpcnJ1c19ibyAqY2lycnVzYm8gPSBj
aXJydXNfYm8oYm8pOwotCi0JaWYgKCFjaXJydXNfdHRtX2JvX2lzX2NpcnJ1c19ibyhibykpCi0J
CXJldHVybjsKLQotCWNpcnJ1c190dG1fcGxhY2VtZW50KGNpcnJ1c2JvLCBUVE1fUExfRkxBR19T
WVNURU0pOwotCSpwbCA9IGNpcnJ1c2JvLT5wbGFjZW1lbnQ7Ci19Ci0KLXN0YXRpYyBpbnQgY2ly
cnVzX2JvX3ZlcmlmeV9hY2Nlc3Moc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywgc3RydWN0
IGZpbGUgKmZpbHApCi17Ci0Jc3RydWN0IGNpcnJ1c19ibyAqY2lycnVzYm8gPSBjaXJydXNfYm8o
Ym8pOwotCi0JcmV0dXJuIGRybV92bWFfbm9kZV92ZXJpZnlfYWNjZXNzKCZjaXJydXNiby0+Z2Vt
LnZtYV9ub2RlLAotCQkJCQkgIGZpbHAtPnByaXZhdGVfZGF0YSk7Ci19Ci0KLXN0YXRpYyBpbnQg
Y2lycnVzX3R0bV9pb19tZW1fcmVzZXJ2ZShzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJ
CQkgIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCXN0cnVjdCB0dG1fbWVtX3R5cGVfbWFu
YWdlciAqbWFuID0gJmJkZXYtPm1hblttZW0tPm1lbV90eXBlXTsKLQlzdHJ1Y3QgY2lycnVzX2Rl
dmljZSAqY2lycnVzID0gY2lycnVzX2JkZXYoYmRldik7Ci0KLQltZW0tPmJ1cy5hZGRyID0gTlVM
TDsKLQltZW0tPmJ1cy5vZmZzZXQgPSAwOwotCW1lbS0+YnVzLnNpemUgPSBtZW0tPm51bV9wYWdl
cyA8PCBQQUdFX1NISUZUOwotCW1lbS0+YnVzLmJhc2UgPSAwOwotCW1lbS0+YnVzLmlzX2lvbWVt
ID0gZmFsc2U7Ci0JaWYgKCEobWFuLT5mbGFncyAmIFRUTV9NRU1UWVBFX0ZMQUdfTUFQUEFCTEUp
KQotCQlyZXR1cm4gLUVJTlZBTDsKLQlzd2l0Y2ggKG1lbS0+bWVtX3R5cGUpIHsKLQljYXNlIFRU
TV9QTF9TWVNURU06Ci0JCS8qIHN5c3RlbSBtZW1vcnkgKi8KLQkJcmV0dXJuIDA7Ci0JY2FzZSBU
VE1fUExfVlJBTToKLQkJbWVtLT5idXMub2Zmc2V0ID0gbWVtLT5zdGFydCA8PCBQQUdFX1NISUZU
OwotCQltZW0tPmJ1cy5iYXNlID0gcGNpX3Jlc291cmNlX3N0YXJ0KGNpcnJ1cy0+ZGV2LT5wZGV2
LCAwKTsKLQkJbWVtLT5idXMuaXNfaW9tZW0gPSB0cnVlOwotCQlicmVhazsKLQlkZWZhdWx0Ogot
CQlyZXR1cm4gLUVJTlZBTDsKLQkJYnJlYWs7Ci0JfQotCXJldHVybiAwOwotfQotCi1zdGF0aWMg
dm9pZCBjaXJydXNfdHRtX2lvX21lbV9mcmVlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LCBz
dHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsKLX0KLQotc3RhdGljIHZvaWQgY2lycnVzX3R0bV9i
YWNrZW5kX2Rlc3Ryb3koc3RydWN0IHR0bV90dCAqdHQpCi17Ci0JdHRtX3R0X2ZpbmkodHQpOwot
CWtmcmVlKHR0KTsKLX0KLQotc3RhdGljIHN0cnVjdCB0dG1fYmFja2VuZF9mdW5jIGNpcnJ1c190
dF9iYWNrZW5kX2Z1bmMgPSB7Ci0JLmRlc3Ryb3kgPSAmY2lycnVzX3R0bV9iYWNrZW5kX2Rlc3Ry
b3ksCi19OwotCi0KLXN0YXRpYyBzdHJ1Y3QgdHRtX3R0ICpjaXJydXNfdHRtX3R0X2NyZWF0ZShz
dHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJCQkgICB1aW50MzJfdCBwYWdlX2ZsYWdz
KQotewotCXN0cnVjdCB0dG1fdHQgKnR0OwotCi0JdHQgPSBremFsbG9jKHNpemVvZihzdHJ1Y3Qg
dHRtX3R0KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKHR0ID09IE5VTEwpCi0JCXJldHVybiBOVUxMOwot
CXR0LT5mdW5jID0gJmNpcnJ1c190dF9iYWNrZW5kX2Z1bmM7Ci0JaWYgKHR0bV90dF9pbml0KHR0
LCBibywgcGFnZV9mbGFncykpIHsKLQkJa2ZyZWUodHQpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0J
cmV0dXJuIHR0OwotfQotCi1zdHJ1Y3QgdHRtX2JvX2RyaXZlciBjaXJydXNfYm9fZHJpdmVyID0g
ewotCS50dG1fdHRfY3JlYXRlID0gY2lycnVzX3R0bV90dF9jcmVhdGUsCi0JLmluaXRfbWVtX3R5
cGUgPSBjaXJydXNfYm9faW5pdF9tZW1fdHlwZSwKLQkuZXZpY3Rpb25fdmFsdWFibGUgPSB0dG1f
Ym9fZXZpY3Rpb25fdmFsdWFibGUsCi0JLmV2aWN0X2ZsYWdzID0gY2lycnVzX2JvX2V2aWN0X2Zs
YWdzLAotCS5tb3ZlID0gTlVMTCwKLQkudmVyaWZ5X2FjY2VzcyA9IGNpcnJ1c19ib192ZXJpZnlf
YWNjZXNzLAotCS5pb19tZW1fcmVzZXJ2ZSA9ICZjaXJydXNfdHRtX2lvX21lbV9yZXNlcnZlLAot
CS5pb19tZW1fZnJlZSA9ICZjaXJydXNfdHRtX2lvX21lbV9mcmVlLAotfTsKLQotaW50IGNpcnJ1
c19tbV9pbml0KHN0cnVjdCBjaXJydXNfZGV2aWNlICpjaXJydXMpCi17Ci0JaW50IHJldDsKLQlz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gY2lycnVzLT5kZXY7Ci0Jc3RydWN0IHR0bV9ib19kZXZp
Y2UgKmJkZXYgPSAmY2lycnVzLT50dG0uYmRldjsKLQotCXJldCA9IHR0bV9ib19kZXZpY2VfaW5p
dCgmY2lycnVzLT50dG0uYmRldiwKLQkJCQkgJmNpcnJ1c19ib19kcml2ZXIsCi0JCQkJIGRldi0+
YW5vbl9pbm9kZS0+aV9tYXBwaW5nLAotCQkJCSB0cnVlKTsKLQlpZiAocmV0KSB7Ci0JCURSTV9F
UlJPUigiRXJyb3IgaW5pdGlhbGlzaW5nIGJvIGRyaXZlcjsgJWRcbiIsIHJldCk7Ci0JCXJldHVy
biByZXQ7Ci0JfQotCi0JcmV0ID0gdHRtX2JvX2luaXRfbW0oYmRldiwgVFRNX1BMX1ZSQU0sCi0J
CQkgICAgIGNpcnJ1cy0+bWMudnJhbV9zaXplID4+IFBBR0VfU0hJRlQpOwotCWlmIChyZXQpIHsK
LQkJRFJNX0VSUk9SKCJGYWlsZWQgdHRtIFZSQU0gaW5pdDogJWRcbiIsIHJldCk7Ci0JCXJldHVy
biByZXQ7Ci0JfQotCi0JYXJjaF9pb19yZXNlcnZlX21lbXR5cGVfd2MocGNpX3Jlc291cmNlX3N0
YXJ0KGRldi0+cGRldiwgMCksCi0JCQkJICAgcGNpX3Jlc291cmNlX2xlbihkZXYtPnBkZXYsIDAp
KTsKLQotCWNpcnJ1cy0+ZmJfbXRyciA9IGFyY2hfcGh5c193Y19hZGQocGNpX3Jlc291cmNlX3N0
YXJ0KGRldi0+cGRldiwgMCksCi0JCQkJCSAgIHBjaV9yZXNvdXJjZV9sZW4oZGV2LT5wZGV2LCAw
KSk7Ci0KLQljaXJydXMtPm1tX2luaXRlZCA9IHRydWU7Ci0JcmV0dXJuIDA7Ci19Ci0KLXZvaWQg
Y2lycnVzX21tX2Zpbmkoc3RydWN0IGNpcnJ1c19kZXZpY2UgKmNpcnJ1cykKLXsKLQlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gY2lycnVzLT5kZXY7Ci0KLQlpZiAoIWNpcnJ1cy0+bW1faW5pdGVk
KQotCQlyZXR1cm47Ci0KLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJmNpcnJ1cy0+dHRtLmJkZXYp
OwotCi0JYXJjaF9waHlzX3djX2RlbChjaXJydXMtPmZiX210cnIpOwotCWNpcnJ1cy0+ZmJfbXRy
ciA9IDA7Ci0JYXJjaF9pb19mcmVlX21lbXR5cGVfd2MocGNpX3Jlc291cmNlX3N0YXJ0KGRldi0+
cGRldiwgMCksCi0JCQkJcGNpX3Jlc291cmNlX2xlbihkZXYtPnBkZXYsIDApKTsKLX0KLQotdm9p
ZCBjaXJydXNfdHRtX3BsYWNlbWVudChzdHJ1Y3QgY2lycnVzX2JvICpibywgaW50IGRvbWFpbikK
LXsKLQl1MzIgYyA9IDA7Ci0JdW5zaWduZWQgaTsKLQliby0+cGxhY2VtZW50LnBsYWNlbWVudCA9
IGJvLT5wbGFjZW1lbnRzOwotCWJvLT5wbGFjZW1lbnQuYnVzeV9wbGFjZW1lbnQgPSBiby0+cGxh
Y2VtZW50czsKLQlpZiAoZG9tYWluICYgVFRNX1BMX0ZMQUdfVlJBTSkKLQkJYm8tPnBsYWNlbWVu
dHNbYysrXS5mbGFncyA9IFRUTV9QTF9GTEFHX1dDIHwgVFRNX1BMX0ZMQUdfVU5DQUNIRUQgfCBU
VE1fUExfRkxBR19WUkFNOwotCWlmIChkb21haW4gJiBUVE1fUExfRkxBR19TWVNURU0pCi0JCWJv
LT5wbGFjZW1lbnRzW2MrK10uZmxhZ3MgPSBUVE1fUExfTUFTS19DQUNISU5HIHwgVFRNX1BMX0ZM
QUdfU1lTVEVNOwotCWlmICghYykKLQkJYm8tPnBsYWNlbWVudHNbYysrXS5mbGFncyA9IFRUTV9Q
TF9NQVNLX0NBQ0hJTkcgfCBUVE1fUExfRkxBR19TWVNURU07Ci0JYm8tPnBsYWNlbWVudC5udW1f
cGxhY2VtZW50ID0gYzsKLQliby0+cGxhY2VtZW50Lm51bV9idXN5X3BsYWNlbWVudCA9IGM7Ci0J
Zm9yIChpID0gMDsgaSA8IGM7ICsraSkgewotCQliby0+cGxhY2VtZW50c1tpXS5mcGZuID0gMDsK
LQkJYm8tPnBsYWNlbWVudHNbaV0ubHBmbiA9IDA7Ci0JfQotfQotCi1pbnQgY2lycnVzX2JvX2Ny
ZWF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBpbnQgc2l6ZSwgaW50IGFsaWduLAotCQkgIHVp
bnQzMl90IGZsYWdzLCBzdHJ1Y3QgY2lycnVzX2JvICoqcGNpcnJ1c2JvKQotewotCXN0cnVjdCBj
aXJydXNfZGV2aWNlICpjaXJydXMgPSBkZXYtPmRldl9wcml2YXRlOwotCXN0cnVjdCBjaXJydXNf
Ym8gKmNpcnJ1c2JvOwotCXNpemVfdCBhY2Nfc2l6ZTsKLQlpbnQgcmV0OwotCi0JY2lycnVzYm8g
PSBremFsbG9jKHNpemVvZihzdHJ1Y3QgY2lycnVzX2JvKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFj
aXJydXNibykKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQlyZXQgPSBkcm1fZ2VtX29iamVjdF9pbml0
KGRldiwgJmNpcnJ1c2JvLT5nZW0sIHNpemUpOwotCWlmIChyZXQpIHsKLQkJa2ZyZWUoY2lycnVz
Ym8pOwotCQlyZXR1cm4gcmV0OwotCX0KLQotCWNpcnJ1c2JvLT5iby5iZGV2ID0gJmNpcnJ1cy0+
dHRtLmJkZXY7Ci0KLQljaXJydXNfdHRtX3BsYWNlbWVudChjaXJydXNibywgVFRNX1BMX0ZMQUdf
VlJBTSB8IFRUTV9QTF9GTEFHX1NZU1RFTSk7Ci0KLQlhY2Nfc2l6ZSA9IHR0bV9ib19kbWFfYWNj
X3NpemUoJmNpcnJ1cy0+dHRtLmJkZXYsIHNpemUsCi0JCQkJICAgICAgIHNpemVvZihzdHJ1Y3Qg
Y2lycnVzX2JvKSk7Ci0KLQlyZXQgPSB0dG1fYm9faW5pdCgmY2lycnVzLT50dG0uYmRldiwgJmNp
cnJ1c2JvLT5ibywgc2l6ZSwKLQkJCSAgdHRtX2JvX3R5cGVfZGV2aWNlLCAmY2lycnVzYm8tPnBs
YWNlbWVudCwKLQkJCSAgYWxpZ24gPj4gUEFHRV9TSElGVCwgZmFsc2UsIGFjY19zaXplLAotCQkJ
ICBOVUxMLCBOVUxMLCBjaXJydXNfYm9fdHRtX2Rlc3Ryb3kpOwotCWlmIChyZXQpCi0JCXJldHVy
biByZXQ7Ci0KLQkqcGNpcnJ1c2JvID0gY2lycnVzYm87Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRp
YyBpbmxpbmUgdTY0IGNpcnJ1c19ib19ncHVfb2Zmc2V0KHN0cnVjdCBjaXJydXNfYm8gKmJvKQot
ewotCXJldHVybiBiby0+Ym8ub2Zmc2V0OwotfQotCi1pbnQgY2lycnVzX2JvX3BpbihzdHJ1Y3Qg
Y2lycnVzX2JvICpibywgdTMyIHBsX2ZsYWcsIHU2NCAqZ3B1X2FkZHIpCi17Ci0Jc3RydWN0IHR0
bV9vcGVyYXRpb25fY3R4IGN0eCA9IHsgZmFsc2UsIGZhbHNlIH07Ci0JaW50IGksIHJldDsKLQot
CWlmIChiby0+cGluX2NvdW50KSB7Ci0JCWJvLT5waW5fY291bnQrKzsKLQkJaWYgKGdwdV9hZGRy
KQotCQkJKmdwdV9hZGRyID0gY2lycnVzX2JvX2dwdV9vZmZzZXQoYm8pOwotCX0KLQotCWNpcnJ1
c190dG1fcGxhY2VtZW50KGJvLCBwbF9mbGFnKTsKLQlmb3IgKGkgPSAwOyBpIDwgYm8tPnBsYWNl
bWVudC5udW1fcGxhY2VtZW50OyBpKyspCi0JCWJvLT5wbGFjZW1lbnRzW2ldLmZsYWdzIHw9IFRU
TV9QTF9GTEFHX05PX0VWSUNUOwotCXJldCA9IHR0bV9ib192YWxpZGF0ZSgmYm8tPmJvLCAmYm8t
PnBsYWNlbWVudCwgJmN0eCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCWJvLT5waW5f
Y291bnQgPSAxOwotCWlmIChncHVfYWRkcikKLQkJKmdwdV9hZGRyID0gY2lycnVzX2JvX2dwdV9v
ZmZzZXQoYm8pOwotCXJldHVybiAwOwotfQotCi1pbnQgY2lycnVzX2JvX3B1c2hfc3lzcmFtKHN0
cnVjdCBjaXJydXNfYm8gKmJvKQotewotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7
IGZhbHNlLCBmYWxzZSB9OwotCWludCBpLCByZXQ7Ci0JaWYgKCFiby0+cGluX2NvdW50KSB7Ci0J
CURSTV9FUlJPUigidW5waW4gYmFkICVwXG4iLCBibyk7Ci0JCXJldHVybiAwOwotCX0KLQliby0+
cGluX2NvdW50LS07Ci0JaWYgKGJvLT5waW5fY291bnQpCi0JCXJldHVybiAwOwotCi0JaWYgKGJv
LT5rbWFwLnZpcnR1YWwpCi0JCXR0bV9ib19rdW5tYXAoJmJvLT5rbWFwKTsKLQotCWNpcnJ1c190
dG1fcGxhY2VtZW50KGJvLCBUVE1fUExfRkxBR19TWVNURU0pOwotCWZvciAoaSA9IDA7IGkgPCBi
by0+cGxhY2VtZW50Lm51bV9wbGFjZW1lbnQgOyBpKyspCi0JCWJvLT5wbGFjZW1lbnRzW2ldLmZs
YWdzIHw9IFRUTV9QTF9GTEFHX05PX0VWSUNUOwotCi0JcmV0ID0gdHRtX2JvX3ZhbGlkYXRlKCZi
by0+Ym8sICZiby0+cGxhY2VtZW50LCAmY3R4KTsKLQlpZiAocmV0KSB7Ci0JCURSTV9FUlJPUigi
cHVzaGluZyB0byBWUkFNIGZhaWxlZFxuIik7Ci0JCXJldHVybiByZXQ7Ci0JfQotCXJldHVybiAw
OwotfQotCi1pbnQgY2lycnVzX21tYXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hKQotewotCXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2ID0gZmlscC0+cHJp
dmF0ZV9kYXRhOwotCXN0cnVjdCBjaXJydXNfZGV2aWNlICpjaXJydXMgPSBmaWxlX3ByaXYtPm1p
bm9yLT5kZXYtPmRldl9wcml2YXRlOwotCi0JcmV0dXJuIHR0bV9ib19tbWFwKGZpbHAsIHZtYSwg
JmNpcnJ1cy0+dHRtLmJkZXYpOwotfQotLSAKMi4xOC4xCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
