Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3F326E13BD
	for <lists+dri-devel@lfdr.de>; Wed, 23 Oct 2019 10:10:47 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 79F116E9A9;
	Wed, 23 Oct 2019 08:10:23 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.codeaurora.org (smtp.codeaurora.org [198.145.29.96])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4740A6E96B
 for <dri-devel@lists.freedesktop.org>; Wed, 23 Oct 2019 07:08:05 +0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
 id D883060D8D; Wed, 23 Oct 2019 07:08:04 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
 pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
 DKIM_INVALID,DKIM_SIGNED,SPF_NONE autolearn=no autolearn_force=no
 version=3.4.0
Received: from kgunda-linux.qualcomm.com
 (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: kgunda@smtp.codeaurora.org)
 by smtp.codeaurora.org (Postfix) with ESMTPSA id 166F960D6F;
 Wed, 23 Oct 2019 07:07:56 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 166F960D6F
From: Kiran Gunda <kgunda@codeaurora.org>
To: bjorn.andersson@linaro.org, jingoohan1@gmail.com, lee.jones@linaro.org,
 b.zolnierkie@samsung.com, dri-devel@lists.freedesktop.org,
 daniel.thompson@linaro.org, jacek.anaszewski@gmail.com, pavel@ucw.cz,
 robh+dt@kernel.org, mark.rutland@arm.com, linux-leds@vger.kernel.org,
 devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
 Andy Gross <agross@kernel.org>, linux-arm-msm@vger.kernel.org,
 linux-fbdev@vger.kernel.org
Subject: [PATCH V9 6/6] backlight: qcom-wled: Add auto string detection logic
Date: Wed, 23 Oct 2019 12:37:03 +0530
Message-Id: <1571814423-6535-7-git-send-email-kgunda@codeaurora.org>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1571814423-6535-1-git-send-email-kgunda@codeaurora.org>
References: <1571814423-6535-1-git-send-email-kgunda@codeaurora.org>
X-Mailman-Approved-At: Wed, 23 Oct 2019 08:09:38 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1571814485;
 bh=uhbb9fQIZZVUWVQ9dy7YmNcmCr+lR9StIJ8G/dTrj7A=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=JRjyCJuzD+O0bAY2VMtb5wyEtMs1mPdRSxIDFk+1Tsbo7KDE43Q17bC6F5EUH+bj3
 n0jTOqOSCjhpk/J2/bnlAe7h1ZO3ve/jnB7ELZifGwLmZaT095cBn2sFDji3mE8JGt
 9TFCKaR8zYO5Ncr7166IgdKXznMRB8f5wYvn0HNc=
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1571814482;
 bh=uhbb9fQIZZVUWVQ9dy7YmNcmCr+lR9StIJ8G/dTrj7A=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=TQvdpkU5QDEQ6OZCC3jCKT75tFYbZO8Xbqg7sqbR4iXB0EWYy8ZgBqXplK1F3Mf9Q
 KKSM13sDMvbcXjGrG2XUPak/gijU8OqB9H8RBokLfK3NcAS6HPexZVpC05BWalaJo6
 sbscb42J9xd7dVjvzMsI1yqwGwJllyD/7/cmVmEY=
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 dmarc=none (p=none dis=none)
 header.from=codeaurora.org
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 spf=none
 smtp.mailfrom=kgunda@codeaurora.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Kiran Gunda <kgunda@codeaurora.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGF1dG8gc3RyaW5nIGRldGVjdGlvbiBhbGdvcml0aG0gY2hlY2tzIGlmIHRoZSBjdXJyZW50
IFdMRUQKc2luayBjb25maWd1cmF0aW9uIGlzIHZhbGlkLiBJdCB0cmllcyBlbmFibGluZyBldmVy
eSBzaW5rIGFuZApjaGVja3MgaWYgdGhlIE9WUCBmYXVsdCBpcyBvYnNlcnZlZC4gQmFzZWQgb24g
dGhpcyBpbmZvcm1hdGlvbgppdCBkZXRlY3RzIGFuZCBlbmFibGVzIHRoZSB2YWxpZCBzaW5rIGNv
bmZpZ3VyYXRpb24uCkF1dG8gY2FsaWJyYXRpb24gd2lsbCBiZSB0cmlnZ2VyZWQgd2hlbiB0aGUg
T1ZQIGZhdWx0IGludGVycnVwdHMKYXJlIHNlZW4gZnJlcXVlbnRseSB0aGVyZWJ5IGl0IHRyaWVz
IHRvIGZpeCB0aGUgc2luayBjb25maWd1cmF0aW9uLgoKVGhlIGF1dG8tZGV0ZWN0aW9uIGFsc28g
a2lja3MgaW4gd2hlbiB0aGUgY29ubmVjdGVkIExFRCBzdHJpbmcKb2YgdGhlIGRpc3BsYXktYmFj
a2xpZ2h0IG1hbGZ1bmN0aW9ucyAoYmVjYXVzZSBvZiBkYW1hZ2UpIGFuZApyZXF1aXJlcyB0aGUg
ZGFtYWdlZCBzdHJpbmcgdG8gYmUgdHVybmVkIG9mZiB0byBwcmV2ZW50IHRoZQpjb21wbGV0ZSBw
YW5lbCBhbmQvb3IgYm9hcmQgZnJvbSBiZWluZyBkYW1hZ2VkLgoKU2lnbmVkLW9mZi1ieTogS2ly
YW4gR3VuZGEgPGtndW5kYUBjb2RlYXVyb3JhLm9yZz4KLS0tCiBkcml2ZXJzL3ZpZGVvL2JhY2ts
aWdodC9xY29tLXdsZWQuYyB8IDQwMCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
Ky0KIDEgZmlsZSBjaGFuZ2VkLCAzOTQgaW5zZXJ0aW9ucygrKSwgNiBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3ZpZGVvL2JhY2tsaWdodC9xY29tLXdsZWQuYyBiL2RyaXZlcnMv
dmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCmluZGV4IDY1OGIxZTAuLjMzYjYwMDcgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvdmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCisrKyBiL2RyaXZlcnMv
dmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCkBAIC0xNywxOSArMTcsMjkgQEAKICNkZWZpbmUg
V0xFRF9NQVhfU1RSSU5HUwkJCQk0CiAKICNkZWZpbmUgV0xFRF9ERUZBVUxUX0JSSUdIVE5FU1MJ
CQkJMjA0OAotCisjZGVmaW5lIFdMRURfU09GVF9TVEFSVF9ETFlfVVMJCQkJMTAwMDAKICNkZWZp
bmUgV0xFRDNfU0lOS19SRUdfQlJJR0hUX01BWAkJCTB4RkZGCiAKIC8qIFdMRUQzL1dMRUQ0IGNv
bnRyb2wgcmVnaXN0ZXJzICovCisjZGVmaW5lIFdMRUQzX0NUUkxfUkVHX0ZBVUxUX1NUQVRVUwkJ
CTB4MDgKKyNkZWZpbmUgIFdMRUQzX0NUUkxfUkVHX0lMSU1fRkFVTFRfQklUCQkJQklUKDApCisj
ZGVmaW5lICBXTEVEM19DVFJMX1JFR19PVlBfRkFVTFRfQklUCQkJQklUKDEpCisjZGVmaW5lICBX
TEVENF9DVFJMX1JFR19TQ19GQVVMVF9CSVQJCQlCSVQoMikKKworI2RlZmluZSBXTEVEM19DVFJM
X1JFR19JTlRfUlRfU1RTCQkJMHgxMAorI2RlZmluZSAgV0xFRDNfQ1RSTF9SRUdfT1ZQX0ZBVUxU
X1NUQVRVUwkJQklUKDEpCisKICNkZWZpbmUgV0xFRDNfQ1RSTF9SRUdfTU9EX0VOCQkJCTB4NDYK
ICNkZWZpbmUgIFdMRUQzX0NUUkxfUkVHX01PRF9FTl9NQVNLCQkJQklUKDcpCiAjZGVmaW5lICBX
TEVEM19DVFJMX1JFR19NT0RfRU5fU0hJRlQJCQk3CiAKKyNkZWZpbmUgV0xFRDNfQ1RSTF9SRUdf
RkVFREJBQ0tfQ09OVFJPTAkJCTB4NDgKKwogI2RlZmluZSBXTEVEM19DVFJMX1JFR19GUkVRCQkJ
CTB4NGMKICNkZWZpbmUgIFdMRUQzX0NUUkxfUkVHX0ZSRVFfTUFTSwkJCUdFTk1BU0soMywgMCkK
IAogI2RlZmluZSBXTEVEM19DVFJMX1JFR19PVlAJCQkJMHg0ZAotI2RlZmluZSAgV0xFRDNfQ1RS
TF9SRUdfT1ZQX01BU0sJCQkJR0VOTUFTSygxLCAwKQorI2RlZmluZSAgV0xFRDNfQ1RSTF9SRUdf
T1ZQX01BU0sJCQlHRU5NQVNLKDEsIDApCiAKICNkZWZpbmUgV0xFRDNfQ1RSTF9SRUdfSUxJTUlU
CQkJCTB4NGUKICNkZWZpbmUgIFdMRUQzX0NUUkxfUkVHX0lMSU1JVF9NQVNLCQkJR0VOTUFTSygy
LCAwKQpAQCAtMTE5LDYgKzEyOSw3IEBAIHN0cnVjdCB3bGVkX2NvbmZpZyB7CiAJYm9vbCBleHRf
Z2VuOwogCWJvb2wgY2FiYzsKIAlib29sIGV4dGVybmFsX3BmZXQ7CisJYm9vbCBhdXRvX2RldGVj
dGlvbl9lbmFibGVkOwogfTsKIAogc3RydWN0IHdsZWQgewpAQCAtMTI3LDE3ICsxMzgsMjIgQEAg
c3RydWN0IHdsZWQgewogCXN0cnVjdCByZWdtYXAgKnJlZ21hcDsKIAlzdHJ1Y3QgbXV0ZXggbG9j
azsJLyogTG9jayB0byBhdm9pZCByYWNlIGZyb20gdGhyZWFkIGlycSBoYW5kbGVyICovCiAJa3Rp
bWVfdCBsYXN0X3Nob3J0X2V2ZW50OworCWt0aW1lX3Qgc3RhcnRfb3ZwX2ZhdWx0X3RpbWU7CiAJ
dTE2IGN0cmxfYWRkcjsKIAl1MTYgc2lua19hZGRyOwogCXUxNiBtYXhfc3RyaW5nX2NvdW50Owor
CXUxNiBhdXRvX2RldGVjdGlvbl9vdnBfY291bnQ7CiAJdTMyIGJyaWdodG5lc3M7CiAJdTMyIG1h
eF9icmlnaHRuZXNzOwogCXUzMiBzaG9ydF9jb3VudDsKKwl1MzIgYXV0b19kZXRlY3RfY291bnQ7
CiAJYm9vbCBkaXNhYmxlZF9ieV9zaG9ydDsKIAlib29sIGhhc19zaG9ydF9kZXRlY3Q7CiAJaW50
IHNob3J0X2lycTsKKwlpbnQgb3ZwX2lycTsKIAogCXN0cnVjdCB3bGVkX2NvbmZpZyBjZmc7CisJ
c3RydWN0IGRlbGF5ZWRfd29yayBvdnBfd29yazsKIAlpbnQgKCp3bGVkX3NldF9icmlnaHRuZXNz
KShzdHJ1Y3Qgd2xlZCAqd2xlZCwgdTE2IGJyaWdodG5lc3MpOwogfTsKIApAQCAtMTgyLDYgKzE5
OCwxMyBAQCBzdGF0aWMgaW50IHdsZWQ0X3NldF9icmlnaHRuZXNzKHN0cnVjdCB3bGVkICp3bGVk
LCB1MTYgYnJpZ2h0bmVzcykKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgd2xlZF9vdnBf
d29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCit7CisJc3RydWN0IHdsZWQgKndsZWQgPSBj
b250YWluZXJfb2Yod29yaywKKwkJCQkJIHN0cnVjdCB3bGVkLCBvdnBfd29yay53b3JrKTsKKwll
bmFibGVfaXJxKHdsZWQtPm92cF9pcnEpOworfQorCiBzdGF0aWMgaW50IHdsZWRfbW9kdWxlX2Vu
YWJsZShzdHJ1Y3Qgd2xlZCAqd2xlZCwgaW50IHZhbCkKIHsKIAlpbnQgcmM7CkBAIC0xOTMsNyAr
MjE2LDI1IEBAIHN0YXRpYyBpbnQgd2xlZF9tb2R1bGVfZW5hYmxlKHN0cnVjdCB3bGVkICp3bGVk
LCBpbnQgdmFsKQogCQkJCVdMRUQzX0NUUkxfUkVHX01PRF9FTiwKIAkJCQlXTEVEM19DVFJMX1JF
R19NT0RfRU5fTUFTSywKIAkJCQl2YWwgPDwgV0xFRDNfQ1RSTF9SRUdfTU9EX0VOX1NISUZUKTsK
LQlyZXR1cm4gcmM7CisJaWYgKHJjIDwgMCkKKwkJcmV0dXJuIHJjOworCisJaWYgKHdsZWQtPm92
cF9pcnEgPiAwKSB7CisJCWlmICh2YWwpIHsKKwkJCS8qCisJCQkgKiBUaGUgaGFyZHdhcmUgZ2Vu
ZXJhdGVzIGEgc3Rvcm0gb2Ygc3B1cmlvdXMgT1ZQCisJCQkgKiBpbnRlcnJ1cHRzIGR1cmluZyBz
b2Z0IHN0YXJ0IG9wZXJhdGlvbnMuIFNvIGRlZmVyCisJCQkgKiBlbmFibGluZyB0aGUgSVJRIGZv
ciAxMG1zIHRvIGVuc3VyZSB0aGF0IHRoZQorCQkJICogc29mdCBzdGFydCBpcyBjb21wbGV0ZS4K
KwkJCSAqLworCQkJc2NoZWR1bGVfZGVsYXllZF93b3JrKCZ3bGVkLT5vdnBfd29yaywgSFogLyAx
MDApOworCQl9IGVsc2UgeworCQkJaWYgKCFjYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJndsZWQt
Pm92cF93b3JrKSkKKwkJCQlkaXNhYmxlX2lycSh3bGVkLT5vdnBfaXJxKTsKKwkJfQorCX0KKwor
CXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IHdsZWRfc3luY190b2dnbGUoc3RydWN0IHdsZWQg
KndsZWQpCkBAIC0zMDAsNiArMzQxLDMwNCBAQCBzdGF0aWMgaXJxcmV0dXJuX3Qgd2xlZF9zaG9y
dF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICpfd2xlZCkKIAlyZXR1cm4gSVJRX0hBTkRMRUQ7
CiB9CiAKKyNkZWZpbmUgQVVUT19ERVRFQ1RfQlJJR0hUTkVTUwkJMjAwCisKK3N0YXRpYyB2b2lk
IHdsZWRfYXV0b19zdHJpbmdfZGV0ZWN0aW9uKHN0cnVjdCB3bGVkICp3bGVkKQoreworCWludCBy
YyA9IDAsIGk7CisJdTMyIHNpbmtfY29uZmlnID0gMCwgaW50X3N0czsKKwl1OCBzaW5rX3Rlc3Qg
PSAwLCBzaW5rX3ZhbGlkID0gMCwgdmFsOworCisJLyogUmVhZCBjb25maWd1cmVkIHNpbmsgY29u
ZmlndXJhdGlvbiAqLworCXJjID0gcmVnbWFwX3JlYWQod2xlZC0+cmVnbWFwLCB3bGVkLT5zaW5r
X2FkZHIgKworCQkJIFdMRUQ0X1NJTktfUkVHX0NVUlJfU0lOSywgJnNpbmtfY29uZmlnKTsKKwlp
ZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHJlYWQgU0lOSyBj
b25maWd1cmF0aW9uIHJjPSVkXG4iLAorCQkJcmMpOworCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJ
fQorCisJLyogRGlzYWJsZSB0aGUgbW9kdWxlIGJlZm9yZSBzdGFydGluZyBkZXRlY3Rpb24gKi8K
KwlyYyA9IHJlZ21hcF91cGRhdGVfYml0cyh3bGVkLT5yZWdtYXAsCisJCQkJd2xlZC0+Y3RybF9h
ZGRyICsgV0xFRDNfQ1RSTF9SRUdfTU9EX0VOLAorCQkJCVdMRUQzX0NUUkxfUkVHX01PRF9FTl9N
QVNLLCAwKTsKKwlpZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRv
IGRpc2FibGUgV0xFRCBtb2R1bGUgcmM9JWRcbiIsIHJjKTsKKwkJZ290byBmYWlsZWRfZGV0ZWN0
OworCX0KKworCS8qIFNldCBsb3cgYnJpZ2h0bmVzcyBhY3Jvc3MgYWxsIHNpbmtzICovCisJcmMg
PSB3bGVkNF9zZXRfYnJpZ2h0bmVzcyh3bGVkLCBBVVRPX0RFVEVDVF9CUklHSFRORVNTKTsKKwlp
ZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHNldCBicmlnaHRu
ZXNzIGZvciBhdXRvIGRldGVjdGlvbiByYz0lZFxuIiwKKwkJCXJjKTsKKwkJZ290byBmYWlsZWRf
ZGV0ZWN0OworCX0KKworCWlmICh3bGVkLT5jZmcuY2FiYykgeworCQlmb3IgKGkgPSAwOyBpIDwg
d2xlZC0+Y2ZnLm51bV9zdHJpbmdzOyBpKyspIHsKKwkJCXJjID0gcmVnbWFwX3VwZGF0ZV9iaXRz
KHdsZWQtPnJlZ21hcCwgd2xlZC0+c2lua19hZGRyICsKKwkJCQkJCVdMRUQ0X1NJTktfUkVHX1NU
Ul9DQUJDKGkpLAorCQkJCQkJV0xFRDRfU0lOS19SRUdfU1RSX0NBQkNfTUFTSywKKwkJCQkJCTAp
OworCQkJaWYgKHJjIDwgMCkKKwkJCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJCX0KKwl9CisKKwkv
KiBEaXNhYmxlIGFsbCBzaW5rcyAqLworCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwK
KwkJCSAgd2xlZC0+c2lua19hZGRyICsgV0xFRDRfU0lOS19SRUdfQ1VSUl9TSU5LLCAwKTsKKwlp
ZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIGRpc2FibGUgYWxs
IHNpbmtzIHJjPSVkXG4iLCByYyk7CisJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwl9CisKKwkvKiBJ
dGVyYXRlIHRocm91Z2ggdGhlIHN0cmluZ3Mgb25lIGJ5IG9uZSAqLworCWZvciAoaSA9IDA7IGkg
PCB3bGVkLT5jZmcubnVtX3N0cmluZ3M7IGkrKykgeworCQlzaW5rX3Rlc3QgPSBCSVQoKFdMRUQ0
X1NJTktfUkVHX0NVUlJfU0lOS19TSEZUICsgaSkpOworCisJCS8qIEVuYWJsZSBmZWVkYmFjayBj
b250cm9sICovCisJCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwgd2xlZC0+Y3RybF9h
ZGRyICsKKwkJCQkgIFdMRUQzX0NUUkxfUkVHX0ZFRURCQUNLX0NPTlRST0wsIGkgKyAxKTsKKwkJ
aWYgKHJjIDwgMCkgeworCQkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8gZW5hYmxlIGZl
ZWRiYWNrIGZvciBTSU5LICVkIHJjID0gJWRcbiIsCisJCQkJaSArIDEsIHJjKTsKKwkJCWdvdG8g
ZmFpbGVkX2RldGVjdDsKKwkJfQorCisJCS8qIEVuYWJsZSB0aGUgc2luayAqLworCQlyYyA9IHJl
Z21hcF93cml0ZSh3bGVkLT5yZWdtYXAsIHdsZWQtPnNpbmtfYWRkciArCisJCQkJICBXTEVENF9T
SU5LX1JFR19DVVJSX1NJTkssIHNpbmtfdGVzdCk7CisJCWlmIChyYyA8IDApIHsKKwkJCWRldl9l
cnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIGNvbmZpZ3VyZSBTSU5LICVkIHJjPSVkXG4iLAorCQkJ
CWkgKyAxLCByYyk7CisJCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJCX0KKworCQkvKiBFbmFibGUg
dGhlIG1vZHVsZSAqLworCQlyYyA9IHJlZ21hcF91cGRhdGVfYml0cyh3bGVkLT5yZWdtYXAsIHds
ZWQtPmN0cmxfYWRkciArCisJCQkJCVdMRUQzX0NUUkxfUkVHX01PRF9FTiwKKwkJCQkJV0xFRDNf
Q1RSTF9SRUdfTU9EX0VOX01BU0ssCisJCQkJCVdMRUQzX0NUUkxfUkVHX01PRF9FTl9NQVNLKTsK
KwkJaWYgKHJjIDwgMCkgeworCQkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8gZW5hYmxl
IFdMRUQgbW9kdWxlIHJjPSVkXG4iLAorCQkJCXJjKTsKKwkJCWdvdG8gZmFpbGVkX2RldGVjdDsK
KwkJfQorCisJCXVzbGVlcF9yYW5nZShXTEVEX1NPRlRfU1RBUlRfRExZX1VTLAorCQkJICAgICBX
TEVEX1NPRlRfU1RBUlRfRExZX1VTICsgMTAwMCk7CisKKwkJcmMgPSByZWdtYXBfcmVhZCh3bGVk
LT5yZWdtYXAsIHdsZWQtPmN0cmxfYWRkciArCisJCQkJIFdMRUQzX0NUUkxfUkVHX0lOVF9SVF9T
VFMsICZpbnRfc3RzKTsKKwkJaWYgKHJjIDwgMCkgeworCQkJZGV2X2Vycih3bGVkLT5kZXYsICJF
cnJvciBpbiByZWFkaW5nIFdMRUQzX0NUUkxfSU5UX1JUX1NUUyByYz0lZFxuIiwKKwkJCQlyYyk7
CisJCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJCX0KKworCQlpZiAoaW50X3N0cyAmIFdMRUQzX0NU
UkxfUkVHX09WUF9GQVVMVF9TVEFUVVMpCisJCQlkZXZfZGJnKHdsZWQtPmRldiwgIldMRUQgT1ZQ
IGZhdWx0IGRldGVjdGVkIHdpdGggU0lOSyAlZFxuIiwKKwkJCQlpICsgMSk7CisJCWVsc2UKKwkJ
CXNpbmtfdmFsaWQgfD0gc2lua190ZXN0OworCisJCS8qIERpc2FibGUgdGhlIG1vZHVsZSAqLwor
CQlyYyA9IHJlZ21hcF91cGRhdGVfYml0cyh3bGVkLT5yZWdtYXAsCisJCQkJCXdsZWQtPmN0cmxf
YWRkciArIFdMRUQzX0NUUkxfUkVHX01PRF9FTiwKKwkJCQkJV0xFRDNfQ1RSTF9SRUdfTU9EX0VO
X01BU0ssIDApOworCQlpZiAocmMgPCAwKSB7CisJCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxl
ZCB0byBkaXNhYmxlIFdMRUQgbW9kdWxlIHJjPSVkXG4iLAorCQkJCXJjKTsKKwkJCWdvdG8gZmFp
bGVkX2RldGVjdDsKKwkJfQorCX0KKworCWlmICghc2lua192YWxpZCkgeworCQlkZXZfZXJyKHds
ZWQtPmRldiwgIk5vIHZhbGlkIFdMRUQgc2lua3MgZm91bmRcbiIpOworCQl3bGVkLT5kaXNhYmxl
ZF9ieV9zaG9ydCA9IHRydWU7CisJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwl9CisKKwlpZiAoc2lu
a192YWxpZCAhPSBzaW5rX2NvbmZpZykgeworCQlkZXZfd2Fybih3bGVkLT5kZXYsICIleCBpcyBu
b3QgYSB2YWxpZCBzaW5rIGNvbmZpZ3VyYXRpb24gLSB1c2luZyAleCBpbnN0ZWFkXG4iLAorCQkJ
IHNpbmtfY29uZmlnLCBzaW5rX3ZhbGlkKTsKKwkJc2lua19jb25maWcgPSBzaW5rX3ZhbGlkOwor
CX0KKworCS8qIFdyaXRlIHRoZSBuZXcgc2luayBjb25maWd1cmF0aW9uICovCisJcmMgPSByZWdt
YXBfd3JpdGUod2xlZC0+cmVnbWFwLAorCQkJICB3bGVkLT5zaW5rX2FkZHIgKyBXTEVENF9TSU5L
X1JFR19DVVJSX1NJTkssCisJCQkgIHNpbmtfY29uZmlnKTsKKwlpZiAocmMgPCAwKSB7CisJCWRl
dl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHJlY29uZmlndXJlIHRoZSBkZWZhdWx0IHNpbmsg
cmM9JWRcbiIsCisJCQlyYyk7CisJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwl9CisKKwkvKiBFbmFi
bGUgdmFsaWQgc2lua3MgKi8KKwlmb3IgKGkgPSAwOyBpIDwgd2xlZC0+Y2ZnLm51bV9zdHJpbmdz
OyBpKyspIHsKKwkJaWYgKHdsZWQtPmNmZy5jYWJjKSB7CisJCQlyYyA9IHJlZ21hcF91cGRhdGVf
Yml0cyh3bGVkLT5yZWdtYXAsIHdsZWQtPnNpbmtfYWRkciArCisJCQkJCQlXTEVENF9TSU5LX1JF
R19TVFJfQ0FCQyhpKSwKKwkJCQkJCVdMRUQ0X1NJTktfUkVHX1NUUl9DQUJDX01BU0ssCisJCQkJ
CQlXTEVENF9TSU5LX1JFR19TVFJfQ0FCQ19NQVNLKTsKKwkJCWlmIChyYyA8IDApCisJCQkJZ290
byBmYWlsZWRfZGV0ZWN0OworCQl9CisKKwkJaWYgKHNpbmtfY29uZmlnICYgQklUKFdMRUQ0X1NJ
TktfUkVHX0NVUlJfU0lOS19TSEZUICsgaSkpCisJCQl2YWwgPSBXTEVENF9TSU5LX1JFR19TVFJf
TU9EX01BU0s7CisJCWVsc2UKKwkJCXZhbCA9IDB4MDsgLyogRGlzYWJsZSBtb2R1bGF0b3JfZW4g
Zm9yIHVudXNlZCBzaW5rICovCisKKwkJcmMgPSByZWdtYXBfd3JpdGUod2xlZC0+cmVnbWFwLCB3
bGVkLT5zaW5rX2FkZHIgKworCQkJCSAgV0xFRDRfU0lOS19SRUdfU1RSX01PRF9FTihpKSwgdmFs
KTsKKwkJaWYgKHJjIDwgMCkgeworCQkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8gY29u
ZmlndXJlIE1PRFVMQVRPUl9FTiByYz0lZFxuIiwKKwkJCQlyYyk7CisJCQlnb3RvIGZhaWxlZF9k
ZXRlY3Q7CisJCX0KKwl9CisKKwkvKiBSZXN0b3JlIHRoZSBmZWVkYmFjayBzZXR0aW5nICovCisJ
cmMgPSByZWdtYXBfd3JpdGUod2xlZC0+cmVnbWFwLAorCQkJICB3bGVkLT5jdHJsX2FkZHIgKyBX
TEVEM19DVFJMX1JFR19GRUVEQkFDS19DT05UUk9MLCAwKTsKKwlpZiAocmMgPCAwKSB7CisJCWRl
dl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHJlc3RvcmUgZmVlZGJhY2sgc2V0dGluZyByYz0l
ZFxuIiwKKwkJCXJjKTsKKwkJZ290byBmYWlsZWRfZGV0ZWN0OworCX0KKworCS8qIFJlc3RvcmUg
YnJpZ2h0bmVzcyAqLworCXJjID0gd2xlZDRfc2V0X2JyaWdodG5lc3Mod2xlZCwgd2xlZC0+YnJp
Z2h0bmVzcyk7CisJaWYgKHJjIDwgMCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxlZCB0
byBzZXQgYnJpZ2h0bmVzcyBhZnRlciBhdXRvIGRldGVjdGlvbiByYz0lZFxuIiwKKwkJCXJjKTsK
KwkJZ290byBmYWlsZWRfZGV0ZWN0OworCX0KKworCXJjID0gcmVnbWFwX3VwZGF0ZV9iaXRzKHds
ZWQtPnJlZ21hcCwKKwkJCQl3bGVkLT5jdHJsX2FkZHIgKyBXTEVEM19DVFJMX1JFR19NT0RfRU4s
CisJCQkJV0xFRDNfQ1RSTF9SRUdfTU9EX0VOX01BU0ssCisJCQkJV0xFRDNfQ1RSTF9SRUdfTU9E
X0VOX01BU0spOworCWlmIChyYyA8IDApIHsKKwkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQg
dG8gZW5hYmxlIFdMRUQgbW9kdWxlIHJjPSVkXG4iLCByYyk7CisJCWdvdG8gZmFpbGVkX2RldGVj
dDsKKwl9CisKK2ZhaWxlZF9kZXRlY3Q6CisJcmV0dXJuOworfQorCisjZGVmaW5lIFdMRURfQVVU
T19ERVRFQ1RfT1ZQX0NPVU5UCQk1CisjZGVmaW5lIFdMRURfQVVUT19ERVRFQ1RfQ05UX0RMWV9V
UwkJVVNFQ19QRVJfU0VDCitzdGF0aWMgYm9vbCB3bGVkX2F1dG9fZGV0ZWN0aW9uX3JlcXVpcmVk
KHN0cnVjdCB3bGVkICp3bGVkKQoreworCXM2NCBlbGFwc2VkX3RpbWVfdXM7CisKKwlpZiAoIXds
ZWQtPmNmZy5hdXRvX2RldGVjdGlvbl9lbmFibGVkKQorCQlyZXR1cm4gZmFsc2U7CisKKwkvKgor
CSAqIENoZWNrIGlmIHRoZSBPVlAgZmF1bHQgd2FzIGFuIG9jY2FzaW9uYWwgb25lCisJICogb3Ig
aWYgaXQncyBmaXJpbmcgY29udGludW91c2x5LCB0aGUgbGF0dGVyIHF1YWxpZmllcworCSAqIGZv
ciBhbiBhdXRvLWRldGVjdGlvbiBjaGVjay4KKwkgKi8KKwlpZiAoIXdsZWQtPmF1dG9fZGV0ZWN0
aW9uX292cF9jb3VudCkgeworCQl3bGVkLT5zdGFydF9vdnBfZmF1bHRfdGltZSA9IGt0aW1lX2dl
dCgpOworCQl3bGVkLT5hdXRvX2RldGVjdGlvbl9vdnBfY291bnQrKzsKKwl9IGVsc2UgeworCQll
bGFwc2VkX3RpbWVfdXMgPSBrdGltZV91c19kZWx0YShrdGltZV9nZXQoKSwKKwkJCQkJCSB3bGVk
LT5zdGFydF9vdnBfZmF1bHRfdGltZSk7CisJCWlmIChlbGFwc2VkX3RpbWVfdXMgPiBXTEVEX0FV
VE9fREVURUNUX0NOVF9ETFlfVVMpCisJCQl3bGVkLT5hdXRvX2RldGVjdGlvbl9vdnBfY291bnQg
PSAwOworCQllbHNlCisJCQl3bGVkLT5hdXRvX2RldGVjdGlvbl9vdnBfY291bnQrKzsKKworCQlp
ZiAod2xlZC0+YXV0b19kZXRlY3Rpb25fb3ZwX2NvdW50ID49CisJCQkJV0xFRF9BVVRPX0RFVEVD
VF9PVlBfQ09VTlQpIHsKKwkJCXdsZWQtPmF1dG9fZGV0ZWN0aW9uX292cF9jb3VudCA9IDA7CisJ
CQlyZXR1cm4gdHJ1ZTsKKwkJfQorCX0KKworCXJldHVybiBmYWxzZTsKK30KKworc3RhdGljIGlu
dCB3bGVkX2F1dG9fZGV0ZWN0aW9uX2F0X2luaXQoc3RydWN0IHdsZWQgKndsZWQpCit7CisJaW50
IHJjOworCXUzMiBmYXVsdF9zdGF0dXMsIHJ0X3N0YXR1czsKKworCWlmICghd2xlZC0+Y2ZnLmF1
dG9fZGV0ZWN0aW9uX2VuYWJsZWQpCisJCXJldHVybiAwOworCisJcmMgPSByZWdtYXBfcmVhZCh3
bGVkLT5yZWdtYXAsCisJCQkgd2xlZC0+Y3RybF9hZGRyICsgV0xFRDNfQ1RSTF9SRUdfSU5UX1JU
X1NUUywKKwkJCSAmcnRfc3RhdHVzKTsKKwlpZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+
ZGV2LCAiRmFpbGVkIHRvIHJlYWQgUlQgc3RhdHVzIHJjPSVkXG4iLCByYyk7CisJCXJldHVybiBy
YzsKKwl9CisKKwlyYyA9IHJlZ21hcF9yZWFkKHdsZWQtPnJlZ21hcCwKKwkJCSB3bGVkLT5jdHJs
X2FkZHIgKyBXTEVEM19DVFJMX1JFR19GQVVMVF9TVEFUVVMsCisJCQkgJmZhdWx0X3N0YXR1cyk7
CisJaWYgKHJjIDwgMCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxlZCB0byByZWFkIGZh
dWx0IHN0YXR1cyByYz0lZFxuIiwgcmMpOworCQlyZXR1cm4gcmM7CisJfQorCisJaWYgKChydF9z
dGF0dXMgJiBXTEVEM19DVFJMX1JFR19PVlBfRkFVTFRfU1RBVFVTKSB8fAorCSAgICAoZmF1bHRf
c3RhdHVzICYgV0xFRDNfQ1RSTF9SRUdfT1ZQX0ZBVUxUX0JJVCkpIHsKKwkJbXV0ZXhfbG9jaygm
d2xlZC0+bG9jayk7CisJCXdsZWRfYXV0b19zdHJpbmdfZGV0ZWN0aW9uKHdsZWQpOworCQltdXRl
eF91bmxvY2soJndsZWQtPmxvY2spOworCX0KKworCXJldHVybiByYzsKK30KKworc3RhdGljIGly
cXJldHVybl90IHdsZWRfb3ZwX2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKl93bGVkKQorewor
CXN0cnVjdCB3bGVkICp3bGVkID0gX3dsZWQ7CisJaW50IHJjOworCXUzMiBpbnRfc3RzLCBmYXVs
dF9zdHM7CisKKwlyYyA9IHJlZ21hcF9yZWFkKHdsZWQtPnJlZ21hcCwKKwkJCSB3bGVkLT5jdHJs
X2FkZHIgKyBXTEVEM19DVFJMX1JFR19JTlRfUlRfU1RTLCAmaW50X3N0cyk7CisJaWYgKHJjIDwg
MCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIkVycm9yIGluIHJlYWRpbmcgV0xFRDNfSU5UX1JU
X1NUUyByYz0lZFxuIiwKKwkJCXJjKTsKKwkJcmV0dXJuIElSUV9IQU5ETEVEOworCX0KKworCXJj
ID0gcmVnbWFwX3JlYWQod2xlZC0+cmVnbWFwLCB3bGVkLT5jdHJsX2FkZHIgKworCQkJIFdMRUQz
X0NUUkxfUkVHX0ZBVUxUX1NUQVRVUywgJmZhdWx0X3N0cyk7CisJaWYgKHJjIDwgMCkgeworCQlk
ZXZfZXJyKHdsZWQtPmRldiwgIkVycm9yIGluIHJlYWRpbmcgV0xFRF9GQVVMVF9TVEFUVVMgcmM9
JWRcbiIsCisJCQlyYyk7CisJCXJldHVybiBJUlFfSEFORExFRDsKKwl9CisKKwlpZiAoZmF1bHRf
c3RzICYgKFdMRUQzX0NUUkxfUkVHX09WUF9GQVVMVF9CSVQgfAorCQlXTEVEM19DVFJMX1JFR19J
TElNX0ZBVUxUX0JJVCkpCisJCWRldl9kYmcod2xlZC0+ZGV2LCAiV0xFRCBPVlAgZmF1bHQgZGV0
ZWN0ZWQsIGludF9zdHM9JXggZmF1bHRfc3RzPSAleFxuIiwKKwkJCWludF9zdHMsIGZhdWx0X3N0
cyk7CisKKwlpZiAoZmF1bHRfc3RzICYgV0xFRDNfQ1RSTF9SRUdfT1ZQX0ZBVUxUX0JJVCkgewor
CQlpZiAod2xlZF9hdXRvX2RldGVjdGlvbl9yZXF1aXJlZCh3bGVkKSkgeworCQkJbXV0ZXhfbG9j
aygmd2xlZC0+bG9jayk7CisJCQl3bGVkX2F1dG9fc3RyaW5nX2RldGVjdGlvbih3bGVkKTsKKwkJ
CW11dGV4X3VubG9jaygmd2xlZC0+bG9jayk7CisJCX0KKwl9CisKKwlyZXR1cm4gSVJRX0hBTkRM
RUQ7Cit9CisKIHN0YXRpYyBpbnQgd2xlZDNfc2V0dXAoc3RydWN0IHdsZWQgKndsZWQpCiB7CiAJ
dTE2IGFkZHI7CkBAIC00MzYsOCArNzc1LDEwIEBAIHN0YXRpYyBpbnQgd2xlZDRfc2V0dXAoc3Ry
dWN0IHdsZWQgKndsZWQpCiAJCXNpbmtfZW4gfD0gMSA8PCB0ZW1wOwogCX0KIAotCWlmIChzaW5r
X2NmZyA9PSBzaW5rX2VuKQotCQlyZXR1cm4gMDsKKwlpZiAoc2lua19jZmcgPT0gc2lua19lbikg
eworCQlyYyA9IHdsZWRfYXV0b19kZXRlY3Rpb25fYXRfaW5pdCh3bGVkKTsKKwkJcmV0dXJuIHJj
OworCX0KIAogCXJjID0gcmVnbWFwX3VwZGF0ZV9iaXRzKHdsZWQtPnJlZ21hcCwKIAkJCQl3bGVk
LT5zaW5rX2FkZHIgKyBXTEVENF9TSU5LX1JFR19DVVJSX1NJTkssCkBAIC01MDAsNyArODQxLDkg
QEAgc3RhdGljIGludCB3bGVkNF9zZXR1cChzdHJ1Y3Qgd2xlZCAqd2xlZCkKIAkJcmV0dXJuIHJj
OwogCX0KIAotCXJldHVybiAwOworCXJjID0gd2xlZF9hdXRvX2RldGVjdGlvbl9hdF9pbml0KHds
ZWQpOworCisJcmV0dXJuIHJjOwogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IHdsZWRfY29uZmln
IHdsZWQ0X2NvbmZpZ19kZWZhdWx0cyA9IHsKQEAgLTUxMSw2ICs4NTQsNyBAQCBzdGF0aWMgaW50
IHdsZWQ0X3NldHVwKHN0cnVjdCB3bGVkICp3bGVkKQogCS5zd2l0Y2hfZnJlcSA9IDExLAogCS5j
YWJjID0gZmFsc2UsCiAJLmV4dGVybmFsX3BmZXQgPSBmYWxzZSwKKwkuYXV0b19kZXRlY3Rpb25f
ZW5hYmxlZCA9IGZhbHNlLAogfTsKIAogc3RhdGljIGNvbnN0IHUzMiB3bGVkM19ib29zdF9pX2xp
bWl0X3ZhbHVlc1tdID0gewpAQCAtNjc3LDYgKzEwMjEsNyBAQCBzdGF0aWMgaW50IHdsZWRfY29u
ZmlndXJlKHN0cnVjdCB3bGVkICp3bGVkLCBpbnQgdmVyc2lvbikKIAkJeyAicWNvbSxleHQtZ2Vu
IiwgJmNmZy0+ZXh0X2dlbiwgfSwKIAkJeyAicWNvbSxjYWJjIiwgJmNmZy0+Y2FiYywgfSwKIAkJ
eyAicWNvbSxleHRlcm5hbC1wZmV0IiwgJmNmZy0+ZXh0ZXJuYWxfcGZldCwgfSwKKwkJeyAicWNv
bSxhdXRvLXN0cmluZy1kZXRlY3Rpb24iLCAmY2ZnLT5hdXRvX2RldGVjdGlvbl9lbmFibGVkLCB9
LAogCX07CiAKIAlwcm9wX2FkZHIgPSBvZl9nZXRfYWRkcmVzcyhkZXYtPm9mX25vZGUsIDAsIE5V
TEwsIE5VTEwpOwpAQCAtNzk3LDYgKzExNDIsNDAgQEAgc3RhdGljIGludCB3bGVkX2NvbmZpZ3Vy
ZV9zaG9ydF9pcnEoc3RydWN0IHdsZWQgKndsZWQsCiAJcmV0dXJuIHJjOwogfQogCitzdGF0aWMg
aW50IHdsZWRfY29uZmlndXJlX292cF9pcnEoc3RydWN0IHdsZWQgKndsZWQsCisJCQkJICBzdHJ1
Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQoreworCWludCByYzsKKwl1MzIgdmFsOworCisJd2xl
ZC0+b3ZwX2lycSA9IHBsYXRmb3JtX2dldF9pcnFfYnluYW1lKHBkZXYsICJvdnAiKTsKKwlpZiAo
d2xlZC0+b3ZwX2lycSA8IDApIHsKKwkJZGV2X2RiZygmcGRldi0+ZGV2LCAiT1ZQIElSUSBub3Qg
Zm91bmQgLSBkaXNhYmxpbmcgYXV0b21hdGljIHN0cmluZyBkZXRlY3Rpb25cbiIpOworCQlyZXR1
cm4gMDsKKwl9CisKKwlyYyA9IGRldm1fcmVxdWVzdF90aHJlYWRlZF9pcnEod2xlZC0+ZGV2LCB3
bGVkLT5vdnBfaXJxLCBOVUxMLAorCQkJCSAgICAgICB3bGVkX292cF9pcnFfaGFuZGxlciwgSVJR
Rl9PTkVTSE9ULAorCQkJCSAgICAgICAid2xlZF9vdnBfaXJxIiwgd2xlZCk7CisJaWYgKHJjIDwg
MCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIlVuYWJsZSB0byByZXF1ZXN0IG92cF9pcnEgKGVy
cjolZClcbiIsCisJCQlyYyk7CisJCXdsZWQtPm92cF9pcnEgPSAwOworCQlyZXR1cm4gMDsKKwl9
CisKKwlyYyA9IHJlZ21hcF9yZWFkKHdsZWQtPnJlZ21hcCwgd2xlZC0+Y3RybF9hZGRyICsKKwkJ
CSBXTEVEM19DVFJMX1JFR19NT0RfRU4sICZ2YWwpOworCWlmIChyYyA8IDApCisJCXJldHVybiBy
YzsKKworCS8qIEtlZXAgT1ZQIGlycSBkaXNhYmxlZCB1bnRpbCBtb2R1bGUgaXMgZW5hYmxlZCAq
LworCWlmICghKHZhbCAmIFdMRUQzX0NUUkxfUkVHX01PRF9FTl9NQVNLKSkKKwkJZGlzYWJsZV9p
cnEod2xlZC0+b3ZwX2lycSk7CisKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGNvbnN0IHN0cnVj
dCBiYWNrbGlnaHRfb3BzIHdsZWRfb3BzID0gewogCS51cGRhdGVfc3RhdHVzID0gd2xlZF91cGRh
dGVfc3RhdHVzLAogfTsKQEAgLTgzNyw2ICsxMjE2LDcgQEAgc3RhdGljIGludCB3bGVkX3Byb2Jl
KHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAKIAlzd2l0Y2ggKHZlcnNpb24pIHsKIAlj
YXNlIDM6CisJCXdsZWQtPmNmZy5hdXRvX2RldGVjdGlvbl9lbmFibGVkID0gZmFsc2U7CiAJCXJj
ID0gd2xlZDNfc2V0dXAod2xlZCk7CiAJCWlmIChyYykgewogCQkJZGV2X2VycigmcGRldi0+ZGV2
LCAid2xlZDNfc2V0dXAgZmFpbGVkXG4iKTsKQEAgLTg1OCwxMCArMTIzOCwxNiBAQCBzdGF0aWMg
aW50IHdsZWRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAkJYnJlYWs7CiAJ
fQogCisJSU5JVF9ERUxBWUVEX1dPUksoJndsZWQtPm92cF93b3JrLCB3bGVkX292cF93b3JrKTsK
KwogCXJjID0gd2xlZF9jb25maWd1cmVfc2hvcnRfaXJxKHdsZWQsIHBkZXYpOwogCWlmIChyYyA8
IDApCiAJCXJldHVybiByYzsKIAorCXJjID0gd2xlZF9jb25maWd1cmVfb3ZwX2lycSh3bGVkLCBw
ZGV2KTsKKwlpZiAocmMgPCAwKQorCQlyZXR1cm4gcmM7CisKIAl2YWwgPSBXTEVEX0RFRkFVTFRf
QlJJR0hUTkVTUzsKIAlvZl9wcm9wZXJ0eV9yZWFkX3UzMihwZGV2LT5kZXYub2Zfbm9kZSwgImRl
ZmF1bHQtYnJpZ2h0bmVzcyIsICZ2YWwpOwogCkBAIC04ODAsNyArMTI2Niw5IEBAIHN0YXRpYyBp
bnQgd2xlZF9yZW1vdmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlzdHJ1Y3Qgd2xl
ZCAqd2xlZCA9IGRldl9nZXRfZHJ2ZGF0YSgmcGRldi0+ZGV2KTsKIAogCW11dGV4X2Rlc3Ryb3ko
JndsZWQtPmxvY2spOworCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmd2xlZC0+b3ZwX3dvcmsp
OwogCWRpc2FibGVfaXJxKHdsZWQtPnNob3J0X2lycSk7CisJZGlzYWJsZV9pcnEod2xlZC0+b3Zw
X2lycSk7CiAKIAlyZXR1cm4gMDsKIH0KLS0gClRoZSBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRl
ciwgSW5jLiBpcyBhIG1lbWJlciBvZiB0aGUgQ29kZSBBdXJvcmEgRm9ydW0sCiBhIExpbnV4IEZv
dW5kYXRpb24gQ29sbGFib3JhdGl2ZSBQcm9qZWN0CgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9kcmktZGV2ZWw=
