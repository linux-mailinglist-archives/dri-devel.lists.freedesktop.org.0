Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 51AB9BB4EC
	for <lists+dri-devel@lfdr.de>; Mon, 23 Sep 2019 15:06:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5434A6E901;
	Mon, 23 Sep 2019 13:06:32 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 852256E8FC;
 Mon, 23 Sep 2019 13:06:30 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id C14FA7BDA7;
 Mon, 23 Sep 2019 13:06:29 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-93.pek2.redhat.com [10.72.12.93])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 79DEC10013D9;
 Mon, 23 Sep 2019 13:06:10 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [PATCH 6/6] docs: sample driver to demonstrate how to implement
 virtio-mdev framework
Date: Mon, 23 Sep 2019 21:03:31 +0800
Message-Id: <20190923130331.29324-7-jasowang@redhat.com>
In-Reply-To: <20190923130331.29324-1-jasowang@redhat.com>
References: <20190923130331.29324-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.26]); Mon, 23 Sep 2019 13:06:30 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: sebott@linux.ibm.com, airlied@linux.ie, Jason Wang <jasowang@redhat.com>,
 heiko.carstens@de.ibm.com, virtualization@lists.linux-foundation.org,
 rob.miller@broadcom.com, lulu@redhat.com, eperezma@redhat.com,
 pasic@linux.ibm.com, borntraeger@de.ibm.com, haotian.wang@sifive.com,
 zhi.a.wang@intel.com, farman@linux.ibm.com, idos@mellanox.com,
 gor@linux.ibm.com, cunming.liang@intel.com, rodrigo.vivi@intel.com,
 xiao.w.wang@intel.com, freude@linux.ibm.com, parav@mellanox.com,
 zhihong.wang@intel.com, akrowiak@linux.ibm.com, netdev@vger.kernel.org,
 cohuck@redhat.com, oberpar@linux.ibm.com, maxime.coquelin@redhat.com,
 lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBzYW1wbGUgZHJpdmVyIGNyZWF0ZXMgbWRldiBkZXZpY2UgdGhhdCBzaW11bGF0ZSB2aXJ0
aW8gbmV0IGRldmljZQpvdmVyIHZpcnRpbyBtZGV2IHRyYW5zcG9ydC4gVGhlIGRldmljZSBpcyBp
bXBsZW1lbnRlZCB0aHJvdWdoIHZyaW5naAphbmQgd29ya3F1ZXVlLiBBIGRldmljZSBzcGVjaWZp
YyBkbWEgb3BzIGlzIHRvIG1ha2Ugc3VyZSBIVkEgaXMgdXNlZApkaXJlY3RseSBhcyB0aGUgSU9W
QS4gVGhpcyBzaG91bGQgYmUgc3VmZmljaWVudCBmb3Iga2VybmVsIHZpcnRpbwpkcml2ZXIgdG8g
d29yay4KCk9ubHkgJ3ZpcnRpbycgdHlwZSBpcyBzdXBwb3J0ZWQgcmlnaHQgbm93LiBJIHBsYW4g
dG8gYWRkICd2aG9zdCcgdHlwZQpvbiB0b3Agd2hpY2ggcmVxdWlyZXMgc29tZSB2aXJ0dWFsIElP
TU1VIGluIHRoaXMgc2FtcGxlIGRyaXZlci4KClNpZ25lZC1vZmYtYnk6IEphc29uIFdhbmcgPGph
c293YW5nQHJlZGhhdC5jb20+Ci0tLQogTUFJTlRBSU5FUlMgICAgICAgICAgICAgICAgfCAgIDEg
Kwogc2FtcGxlcy9LY29uZmlnICAgICAgICAgICAgfCAgIDcgKwogc2FtcGxlcy92ZmlvLW1kZXYv
TWFrZWZpbGUgfCAgIDEgKwogc2FtcGxlcy92ZmlvLW1kZXYvbXZuZXQuYyAgfCA2ODggKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCA2OTcgaW5z
ZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHNhbXBsZXMvdmZpby1tZGV2L212bmV0LmMK
CmRpZmYgLS1naXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTCmluZGV4IDgyMGVjMjUwY2M1
Mi4uNmNlZTM4OGVlYzZhIDEwMDY0NAotLS0gYS9NQUlOVEFJTkVSUworKysgYi9NQUlOVEFJTkVS
UwpAQCAtMTcyMDMsNiArMTcyMDMsNyBAQCBGOglpbmNsdWRlL3VhcGkvbGludXgvdmlydGlvXyou
aAogRjoJZHJpdmVycy9jcnlwdG8vdmlydGlvLwogRjoJbW0vYmFsbG9vbl9jb21wYWN0aW9uLmMK
IEY6CWRyaXZlcnMvdmZpby9tZGV2L3ZpcnRpb19tZGV2LmMKK0Y6CXNhbXBsZXMvdmZpby1tZGV2
L212bmV0LmMKIAogVklSVElPIEJMT0NLIEFORCBTQ1NJIERSSVZFUlMKIE06CSJNaWNoYWVsIFMu
IFRzaXJraW4iIDxtc3RAcmVkaGF0LmNvbT4KZGlmZiAtLWdpdCBhL3NhbXBsZXMvS2NvbmZpZyBi
L3NhbXBsZXMvS2NvbmZpZwppbmRleCBjOGRhY2I0ZGRhODAuLmExYTFjYTJjMDBiNyAxMDA2NDQK
LS0tIGEvc2FtcGxlcy9LY29uZmlnCisrKyBiL3NhbXBsZXMvS2NvbmZpZwpAQCAtMTMxLDYgKzEz
MSwxMyBAQCBjb25maWcgU0FNUExFX1ZGSU9fTURFVl9NRFBZCiAJICBtZWRpYXRlZCBkZXZpY2Uu
ICBJdCBpcyBhIHNpbXBsZSBmcmFtZWJ1ZmZlciBhbmQgc3VwcG9ydHMKIAkgIHRoZSByZWdpb24g
ZGlzcGxheSBpbnRlcmZhY2UgKFZGSU9fR0ZYX1BMQU5FX1RZUEVfUkVHSU9OKS4KIAorY29uZmln
IFNBTVBMRV9WSVJUSU9fTURFVl9ORVQKKyAgICAgICAgdHJpc3RhdGUgIkJ1aWxkIHZpcnRpbyBt
ZGV2IG5ldCBleGFtcGxlIG1lZGlhdGVkIGRldmljZSBzYW1wbGUgY29kZSAtLSBsb2FkYWJsZSBt
b2R1bGVzIG9ubHkiCisJZGVwZW5kcyBvbiBWSVJUSU9fTURFVl9ERVZJQ0UgJiYgVkhPU1RfUklO
RyAmJiBtCisJaGVscAorCSAgQnVpbGQgYSBuZXR3b3JraW5nIHNhbXBsZSBkZXZpY2UgZm9yIHVz
ZSBhcyBhIHZpcnRpbworCSAgbWVkaWF0ZWQgZGV2aWNlLgorCiBjb25maWcgU0FNUExFX1ZGSU9f
TURFVl9NRFBZX0ZCCiAJdHJpc3RhdGUgIkJ1aWxkIFZGSU8gbWRweSBleGFtcGxlIGd1ZXN0IGZi
ZGV2IGRyaXZlciAtLSBsb2FkYWJsZSBtb2R1bGUgb25seSIKIAlkZXBlbmRzIG9uIEZCICYmIG0K
ZGlmZiAtLWdpdCBhL3NhbXBsZXMvdmZpby1tZGV2L01ha2VmaWxlIGIvc2FtcGxlcy92ZmlvLW1k
ZXYvTWFrZWZpbGUKaW5kZXggMTBkMTc5YzRmZGViLi5mMzRhZjkwZWQwYTAgMTAwNjQ0Ci0tLSBh
L3NhbXBsZXMvdmZpby1tZGV2L01ha2VmaWxlCisrKyBiL3NhbXBsZXMvdmZpby1tZGV2L01ha2Vm
aWxlCkBAIC0zLDMgKzMsNCBAQCBvYmotJChDT05GSUdfU0FNUExFX1ZGSU9fTURFVl9NVFRZKSAr
PSBtdHR5Lm8KIG9iai0kKENPTkZJR19TQU1QTEVfVkZJT19NREVWX01EUFkpICs9IG1kcHkubwog
b2JqLSQoQ09ORklHX1NBTVBMRV9WRklPX01ERVZfTURQWV9GQikgKz0gbWRweS1mYi5vCiBvYmot
JChDT05GSUdfU0FNUExFX1ZGSU9fTURFVl9NQk9DSFMpICs9IG1ib2Nocy5vCitvYmotJChDT05G
SUdfU0FNUExFX1ZJUlRJT19NREVWX05FVCkgKz0gbXZuZXQubwpkaWZmIC0tZ2l0IGEvc2FtcGxl
cy92ZmlvLW1kZXYvbXZuZXQuYyBiL3NhbXBsZXMvdmZpby1tZGV2L212bmV0LmMKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi41OTFiYTE3OWJjN2YKLS0tIC9kZXYvbnVs
bAorKysgYi9zYW1wbGVzL3ZmaW8tbWRldi9tdm5ldC5jCkBAIC0wLDAgKzEsNjg4IEBACisvLyBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CisvKgorICogTWVkaWF0ZWQgdmly
dHVhbCB2aXJ0aW8tbmV0IGRldmljZSBkcml2ZXIuCisgKgorICogQ29weXJpZ2h0IChjKSAyMDE5
LCBSZWQgSGF0IEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KKyAqICAgICBBdXRob3I6IEphc29u
IFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+CisgKgorICogU2FtcGxlIGRyaXZlciB0aGF0IGNy
ZWF0ZXMgbWRldiBkZXZpY2UgdGhhdCBzaW11bGF0ZXMgZXRoZXJuZXQgbG9vcGJhY2sKKyAqIGRl
dmljZS4KKyAqCisgKiBVc2FnZToKKyAqCisgKiAjIG1vZHByb2JlIHZpcnRpb19tZGV2CisgKiAj
IG1vZHByb2JlIG12bmV0CisgKiAjIGNkIC9zeXMvZGV2aWNlcy92aXJ0dWFsL212bmV0L212bmV0
L21kZXZfc3VwcG9ydGVkX3R5cGVzL212bmV0LXZpcnRpbworICogIyBlY2hvICI4M2I4ZjRmMi01
MDlmLTM4MmYtM2MxZS1lNmJmZTBmYTEwMDEiID4gLi9jcmVhdGUKKyAqICMgY2QgZGV2aWNlcy84
M2I4ZjRmMi01MDlmLTM4MmYtM2MxZS1lNmJmZTBmYTEwMDEKKyAqICMgbHMgLWQgdmlydGlvMAor
ICogdmlydGlvMAorICovCisKKyNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CisjaW5jbHVkZSA8bGlu
dXgvbW9kdWxlLmg+CisjaW5jbHVkZSA8bGludXgvZGV2aWNlLmg+CisjaW5jbHVkZSA8bGludXgv
a2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9wb2xsLmg+
CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CisjaW5j
bHVkZSA8bGludXgvd2FpdC5oPgorI2luY2x1ZGUgPGxpbnV4L3V1aWQuaD4KKyNpbmNsdWRlIDxs
aW51eC9pb21tdS5oPgorI2luY2x1ZGUgPGxpbnV4L3N5c2ZzLmg+CisjaW5jbHVkZSA8bGludXgv
ZmlsZS5oPgorI2luY2x1ZGUgPGxpbnV4L2V0aGVyZGV2aWNlLmg+CisjaW5jbHVkZSA8bGludXgv
bWRldi5oPgorI2luY2x1ZGUgPGxpbnV4L3ZyaW5naC5oPgorI2luY2x1ZGUgPGxpbnV4L3ZpcnRp
b19tZGV2Lmg+CisjaW5jbHVkZSA8dWFwaS9saW51eC92aXJ0aW9fY29uZmlnLmg+CisjaW5jbHVk
ZSA8dWFwaS9saW51eC92aXJ0aW9fbmV0Lmg+CisKKyNkZWZpbmUgVkVSU0lPTl9TVFJJTkcgICIw
LjEiCisjZGVmaW5lIERSSVZFUl9BVVRIT1IgICAiUmVkIEhhdCBDb3Jwb3JhdGlvbiIKKworI2Rl
ZmluZSBNVk5FVF9DTEFTU19OQU1FICJtdm5ldCIKKyNkZWZpbmUgTVZORVRfTkFNRSAgICAgICAi
bXZuZXQiCisKKy8qCisgKiBHbG9iYWwgU3RydWN0dXJlcworICovCisKK3N0YXRpYyBzdHJ1Y3Qg
bXZuZXRfZGV2IHsKKwlzdHJ1Y3QgY2xhc3MJKnZkX2NsYXNzOworCXN0cnVjdCBpZHIJdmRfaWRy
OworCXN0cnVjdCBkZXZpY2UJZGV2OworfSBtdm5ldF9kZXY7CisKK3N0cnVjdCBtdm5ldF92aXJ0
cXVldWUgeworCXN0cnVjdCB2cmluZ2ggdnJpbmc7CisJc3RydWN0IHZyaW5naF9raW92IGlvdjsK
Kwl1bnNpZ25lZCBzaG9ydCBoZWFkOworCWJvb2wgcmVhZHk7CisJdTY0IGRlc2NfYWRkcjsKKwl1
NjQgZGV2aWNlX2FkZHI7CisJdTY0IGRyaXZlcl9hZGRyOworCXUzMiBudW07CisJdm9pZCAqcHJp
dmF0ZTsKKwlpcnFyZXR1cm5fdCAoKmNiKSh2b2lkICpkYXRhKTsKK307CisKKyNkZWZpbmUgTVZO
RVRfUVVFVUVfQUxJR04gUEFHRV9TSVpFCisjZGVmaW5lIE1WTkVUX1FVRVVFX01BWCAyNTYKKyNk
ZWZpbmUgTVZORVRfREVWSUNFX0lEIDB4MQorI2RlZmluZSBNVk5FVF9WRU5ET1JfSUQgMAorCit1
NjQgbXZuZXRfZmVhdHVyZXMgPSAoMVVMTCA8PCBWSVJUSU9fRl9BTllfTEFZT1VUKSB8CisJCSAg
ICAgKDFVTEwgPDwgVklSVElPX0ZfVkVSU0lPTl8xKSB8CisJCSAgICAgKDFVTEwgPDwgVklSVElP
X0ZfSU9NTVVfUExBVEZPUk0pOworCisvKiBTdGF0ZSBvZiBlYWNoIG1kZXYgZGV2aWNlICovCitz
dHJ1Y3QgbXZuZXRfc3RhdGUgeworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgdnFzWzJdOworCXN0
cnVjdCB3b3JrX3N0cnVjdCB3b3JrOworCXNwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXY7CisJc3RydWN0IHZpcnRpb19uZXRfY29uZmlnIGNvbmZpZzsKKwl2b2lkICpi
dWZmZXI7CisJdTMyIHN0YXR1czsKKwl1MzIgZ2VuZXJhdGlvbjsKKwl1NjQgZmVhdHVyZXM7CisJ
c3RydWN0IGxpc3RfaGVhZCBuZXh0OworfTsKKworc3RhdGljIHN0cnVjdCBtdXRleCBtZGV2X2xp
c3RfbG9jazsKK3N0YXRpYyBzdHJ1Y3QgbGlzdF9oZWFkIG1kZXZfZGV2aWNlc19saXN0OworCitz
dGF0aWMgdm9pZCBtdm5ldF9xdWV1ZV9yZWFkeShzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0LCB1
bnNpZ25lZCBpbnQgaWR4KQoreworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0
LT52cXNbaWR4XTsKKwlpbnQgcmV0OworCisJcmV0ID0gdnJpbmdoX2luaXRfa2VybigmdnEtPnZy
aW5nLCBtdm5ldF9mZWF0dXJlcywgTVZORVRfUVVFVUVfTUFYLAorCQkJICAgICAgIGZhbHNlLCAo
c3RydWN0IHZyaW5nX2Rlc2MgKil2cS0+ZGVzY19hZGRyLAorCQkJICAgICAgIChzdHJ1Y3QgdnJp
bmdfYXZhaWwgKil2cS0+ZHJpdmVyX2FkZHIsCisJCQkgICAgICAgKHN0cnVjdCB2cmluZ191c2Vk
ICopdnEtPmRldmljZV9hZGRyKTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfdnFfcmVzZXQoc3Ry
dWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEpCit7CisJdnEtPnJlYWR5ID0gMDsKKwl2cS0+ZGVzY19h
ZGRyID0gMDsKKwl2cS0+ZHJpdmVyX2FkZHIgPSAwOworCXZxLT5kZXZpY2VfYWRkciA9IDA7CisJ
dnEtPmNiID0gTlVMTDsKKwl2cS0+cHJpdmF0ZSA9IE5VTEw7CisJdnJpbmdoX2luaXRfa2Vybigm
dnEtPnZyaW5nLCBtdm5ldF9mZWF0dXJlcywgTVZORVRfUVVFVUVfTUFYLAorCQkJZmFsc2UsIDAs
IDAsIDApOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9yZXNldChzdHJ1Y3QgbXZuZXRfc3RhdGUg
Km12bmV0KQoreworCWludCBpOworCisJZm9yIChpID0gMDsgaSA8IDI7IGkrKykKKwkJbXZuZXRf
dnFfcmVzZXQoJm12bmV0LT52cXNbaV0pOworCisJbXZuZXQtPmZlYXR1cmVzID0gMDsKKwltdm5l
dC0+c3RhdHVzID0gMDsKKwkrK212bmV0LT5nZW5lcmF0aW9uOworfQorCitzdGF0aWMgdm9pZCBt
dm5ldF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKK3sKKwlzdHJ1Y3QgbXZuZXRfc3Rh
dGUgKm12bmV0ID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdAorCQkJCQkJIG12bmV0X3N0YXRl
LCB3b3JrKTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp0eHEgPSAmbXZuZXQtPnZxc1sxXTsK
KwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICpyeHEgPSAmbXZuZXQtPnZxc1swXTsKKwlzaXplX3Qg
cmVhZCwgd3JpdGUsIHRvdGFsX3dyaXRlOworCWludCBlcnI7CisJaW50IHBrdHMgPSAwOworCisJ
c3Bpbl9sb2NrKCZtdm5ldC0+bG9jayk7CisKKwlpZiAoIXR4cS0+cmVhZHkgfHwgIXJ4cS0+cmVh
ZHkpCisJCWdvdG8gb3V0OworCisJd2hpbGUgKHRydWUpIHsKKwkJdG90YWxfd3JpdGUgPSAwOwor
CQllcnIgPSB2cmluZ2hfZ2V0ZGVzY19rZXJuKCZ0eHEtPnZyaW5nLCAmdHhxLT5pb3YsIE5VTEws
CisJCQkJCSAgJnR4cS0+aGVhZCwgR0ZQX0FUT01JQyk7CisJCWlmIChlcnIgPD0gMCkKKwkJCWJy
ZWFrOworCisJCWVyciA9IHZyaW5naF9nZXRkZXNjX2tlcm4oJnJ4cS0+dnJpbmcsIE5VTEwsICZy
eHEtPmlvdiwKKwkJCQkJICAmcnhxLT5oZWFkLCBHRlBfQVRPTUlDKTsKKwkJaWYgKGVyciA8PSAw
KSB7CisJCQl2cmluZ2hfY29tcGxldGVfa2VybigmdHhxLT52cmluZywgdHhxLT5oZWFkLCAwKTsK
KwkJCWJyZWFrOworCQl9CisKKwkJd2hpbGUgKHRydWUpIHsKKwkJCXJlYWQgPSB2cmluZ2hfaW92
X3B1bGxfa2VybigmdHhxLT5pb3YsIG12bmV0LT5idWZmZXIsCisJCQkJCQkgICAgUEFHRV9TSVpF
KTsKKwkJCWlmIChyZWFkIDw9IDApCisJCQkJYnJlYWs7CisKKwkJCXdyaXRlID0gdnJpbmdoX2lv
dl9wdXNoX2tlcm4oJnJ4cS0+aW92LCBtdm5ldC0+YnVmZmVyLAorCQkJCQkJICAgICByZWFkKTsK
KwkJCWlmICh3cml0ZSA8PSAwKQorCQkJCWJyZWFrOworCisJCQl0b3RhbF93cml0ZSArPSB3cml0
ZTsKKwkJfQorCisJCS8qIE1ha2Ugc3VyZSBkYXRhIGlzIHdyb3RlIGJlZm9yZSBhZHZhbmNpbmcg
aW5kZXggKi8KKwkJc21wX3dtYigpOworCisJCXZyaW5naF9jb21wbGV0ZV9rZXJuKCZ0eHEtPnZy
aW5nLCB0eHEtPmhlYWQsIDApOworCQl2cmluZ2hfY29tcGxldGVfa2VybigmcnhxLT52cmluZywg
cnhxLT5oZWFkLCB0b3RhbF93cml0ZSk7CisKKwkJLyogTWFrZSBzdXJlIHVzZWQgaXMgdmlzaWJs
ZSBiZWZvcmUgcmFzaW5nIHRoZSBpbnRlcnJ1cHQuICovCisJCXNtcF93bWIoKTsKKworCQlsb2Nh
bF9iaF9kaXNhYmxlKCk7CisJCWlmICh0eHEtPmNiKQorCQkJdHhxLT5jYih0eHEtPnByaXZhdGUp
OworCQlpZiAocnhxLT5jYikKKwkJCXJ4cS0+Y2IocnhxLT5wcml2YXRlKTsKKwkJbG9jYWxfYmhf
ZW5hYmxlKCk7CisKKwkJaWYgKCsrcGt0cyA+IDQpIHsKKwkJCXNjaGVkdWxlX3dvcmsoJm12bmV0
LT53b3JrKTsKKwkJCWdvdG8gb3V0OworCQl9CisJfQorCitvdXQ6CisJc3Bpbl91bmxvY2soJm12
bmV0LT5sb2NrKTsKK30KKworc3RhdGljIGRtYV9hZGRyX3QgbXZuZXRfbWFwX3BhZ2Uoc3RydWN0
IGRldmljZSAqZGV2LCBzdHJ1Y3QgcGFnZSAqcGFnZSwKKwkJCQkgdW5zaWduZWQgbG9uZyBvZmZz
ZXQsIHNpemVfdCBzaXplLAorCQkJCSBlbnVtIGRtYV9kYXRhX2RpcmVjdGlvbiBkaXIsCisJCQkJ
IHVuc2lnbmVkIGxvbmcgYXR0cnMpCit7CisJLyogVnJpbmdoIGNhbiBvbmx5IHVzZSBIVkEgKi8K
KwlyZXR1cm4gKGRtYV9hZGRyX3QpKHBhZ2VfYWRkcmVzcyhwYWdlKSArIG9mZnNldCk7Cit9CisK
K3N0YXRpYyB2b2lkIG12bmV0X3VubWFwX3BhZ2Uoc3RydWN0IGRldmljZSAqZGV2LCBkbWFfYWRk
cl90IGRtYV9hZGRyLAorCQkJICAgICBzaXplX3Qgc2l6ZSwgZW51bSBkbWFfZGF0YV9kaXJlY3Rp
b24gZGlyLAorCQkJICAgICB1bnNpZ25lZCBsb25nIGF0dHJzKQoreworfQorCitzdGF0aWMgdm9p
ZCAqbXZuZXRfYWxsb2NfY29oZXJlbnQoc3RydWN0IGRldmljZSAqZGV2LCBzaXplX3Qgc2l6ZSwK
KwkJCQkgIGRtYV9hZGRyX3QgKmRtYV9hZGRyLCBnZnBfdCBmbGFnLAorCQkJCSAgdW5zaWduZWQg
bG9uZyBhdHRycykKK3sKKwl2b2lkICphZGRyID0ga21hbGxvYyhzaXplLCBmbGFnKTsKKworCWlm
IChhZGRyID09IE5VTEwpCisJCSpkbWFfYWRkciA9IERNQV9NQVBQSU5HX0VSUk9SOworCWVsc2UK
KwkJKmRtYV9hZGRyID0gKGRtYV9hZGRyX3QpIGFkZHI7CisKKwlyZXR1cm4gYWRkcjsKK30KKwor
c3RhdGljIHZvaWQgbXZuZXRfZnJlZV9jb2hlcmVudChzdHJ1Y3QgZGV2aWNlICpkZXYsIHNpemVf
dCBzaXplLAorCQkJCXZvaWQgKnZhZGRyLCBkbWFfYWRkcl90IGRtYV9hZGRyLAorCQkJCXVuc2ln
bmVkIGxvbmcgYXR0cnMpCit7CisJa2ZyZWUoKHZvaWQgKilkbWFfYWRkcik7Cit9CisKK3N0YXRp
YyBjb25zdCBzdHJ1Y3QgZG1hX21hcF9vcHMgbXZuZXRfZG1hX29wcyA9IHsKKwkubWFwX3BhZ2Ug
PSBtdm5ldF9tYXBfcGFnZSwKKwkudW5tYXBfcGFnZSA9IG12bmV0X3VubWFwX3BhZ2UsCisJLmFs
bG9jID0gbXZuZXRfYWxsb2NfY29oZXJlbnQsCisJLmZyZWUgPSBtdm5ldF9mcmVlX2NvaGVyZW50
LAorfTsKKworc3RhdGljIGludCBtdm5ldF9jcmVhdGUoc3RydWN0IGtvYmplY3QgKmtvYmosIHN0
cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0Owor
CXN0cnVjdCB2aXJ0aW9fbmV0X2NvbmZpZyAqY29uZmlnOworCXN0cnVjdCBkZXZpY2UgKmRldiA9
IG1kZXZfZGV2KG1kZXYpOworCisJaWYgKCFtZGV2KQorCQlyZXR1cm4gLUVJTlZBTDsKKworCW12
bmV0ID0ga3phbGxvYyhzaXplb2Yoc3RydWN0IG12bmV0X3N0YXRlKSwgR0ZQX0tFUk5FTCk7CisJ
aWYgKG12bmV0ID09IE5VTEwpCisJCXJldHVybiAtRU5PTUVNOworCisJbXZuZXQtPmJ1ZmZlciA9
IGttYWxsb2MoUEFHRV9TSVpFLCBHRlBfS0VSTkVMKTsKKwlpZiAoIW12bmV0LT5idWZmZXIpIHsK
KwkJa2ZyZWUobXZuZXQpOworCQlyZXR1cm4gLUVOT01FTTsKKwl9CisKKwljb25maWcgPSAmbXZu
ZXQtPmNvbmZpZzsKKwljb25maWctPm10dSA9IDE1MDA7CisJY29uZmlnLT5zdGF0dXMgPSBWSVJU
SU9fTkVUX1NfTElOS19VUDsKKwlldGhfcmFuZG9tX2FkZHIoY29uZmlnLT5tYWMpOworCisJSU5J
VF9XT1JLKCZtdm5ldC0+d29yaywgbXZuZXRfd29yayk7CisKKwlzcGluX2xvY2tfaW5pdCgmbXZu
ZXQtPmxvY2spOworCW12bmV0LT5tZGV2ID0gbWRldjsKKwltZGV2X3NldF9kcnZkYXRhKG1kZXYs
IG12bmV0KTsKKworCW11dGV4X2xvY2soJm1kZXZfbGlzdF9sb2NrKTsKKwlsaXN0X2FkZCgmbXZu
ZXQtPm5leHQsICZtZGV2X2RldmljZXNfbGlzdCk7CisJbXV0ZXhfdW5sb2NrKCZtZGV2X2xpc3Rf
bG9jayk7CisKKwlkZXYtPmNvaGVyZW50X2RtYV9tYXNrID0gRE1BX0JJVF9NQVNLKDY0KTsKKwlz
ZXRfZG1hX29wcyhkZXYsICZtdm5ldF9kbWFfb3BzKTsKKworCXJldHVybiAwOworfQorCitzdGF0
aWMgaW50IG12bmV0X3JlbW92ZShzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0
IG12bmV0X3N0YXRlICptZHMsICp0bXBfbWRzOworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQg
PSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCWludCByZXQgPSAtRUlOVkFMOworCisJbXV0ZXhf
bG9jaygmbWRldl9saXN0X2xvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShtZHMsIHRt
cF9tZHMsICZtZGV2X2RldmljZXNfbGlzdCwgbmV4dCkgeworCQlpZiAobXZuZXQgPT0gbWRzKSB7
CisJCQlsaXN0X2RlbCgmbXZuZXQtPm5leHQpOworCQkJbWRldl9zZXRfZHJ2ZGF0YShtZGV2LCBO
VUxMKTsKKwkJCWtmcmVlKG12bmV0LT5idWZmZXIpOworCQkJa2ZyZWUobXZuZXQpOworCQkJcmV0
ID0gMDsKKwkJCWJyZWFrOworCQl9CisJfQorCW11dGV4X3VubG9jaygmbWRldl9saXN0X2xvY2sp
OworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9tdm5ldF9kZXZf
c2hvdyhzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAor
CQkgICAgIGNoYXIgKmJ1ZikKK3sKKwlpZiAobWRldl9mcm9tX2RldihkZXYpKQorCQlyZXR1cm4g
c3ByaW50ZihidWYsICJUaGlzIGlzIE1ERVYgJXNcbiIsIGRldl9uYW1lKGRldikpOworCisJcmV0
dXJuIHNwcmludGYoYnVmLCAiXG4iKTsKK30KKworc3RhdGljIERFVklDRV9BVFRSX1JPKHNhbXBs
ZV9tdm5ldF9kZXYpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbXZuZXRfZGV2X2F0dHJz
W10gPSB7CisJJmRldl9hdHRyX3NhbXBsZV9tdm5ldF9kZXYuYXR0ciwKKwlOVUxMLAorfTsKKwor
c3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgbXZuZXRfZGV2X2dyb3VwID0gewor
CS5uYW1lICA9ICJtdm5ldF9kZXYiLAorCS5hdHRycyA9IG12bmV0X2Rldl9hdHRycywKK307CisK
K3N0YXRpYyBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptdm5ldF9kZXZfZ3JvdXBzW10g
PSB7CisJJm12bmV0X2Rldl9ncm91cCwKKwlOVUxMLAorfTsKKworc3RhdGljIHNzaXplX3QKK3Nh
bXBsZV9tZGV2X2Rldl9zaG93KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRy
aWJ1dGUgKmF0dHIsCisJCSAgICAgY2hhciAqYnVmKQoreworCWlmIChtZGV2X2Zyb21fZGV2KGRl
dikpCisJCXJldHVybiBzcHJpbnRmKGJ1ZiwgIlRoaXMgaXMgTURFViAlc1xuIiwgZGV2X25hbWUo
ZGV2KSk7CisKKwlyZXR1cm4gc3ByaW50ZihidWYsICJcbiIpOworfQorCitzdGF0aWMgREVWSUNF
X0FUVFJfUk8oc2FtcGxlX21kZXZfZGV2KTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKm1k
ZXZfZGV2X2F0dHJzW10gPSB7CisJJmRldl9hdHRyX3NhbXBsZV9tZGV2X2Rldi5hdHRyLAorCU5V
TEwsCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X2Rldl9n
cm91cCA9IHsKKwkubmFtZSAgPSAidmVuZG9yIiwKKwkuYXR0cnMgPSBtZGV2X2Rldl9hdHRycywK
K307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X2Rldl9ncm91
cHNbXSA9IHsKKwkmbWRldl9kZXZfZ3JvdXAsCisJTlVMTCwKK307CisKKyNkZWZpbmUgTVZORVRf
U1RSSU5HX0xFTiAxNgorCitzdGF0aWMgc3NpemVfdAorbmFtZV9zaG93KHN0cnVjdCBrb2JqZWN0
ICprb2JqLCBzdHJ1Y3QgZGV2aWNlICpkZXYsIGNoYXIgKmJ1ZikKK3sKKwljaGFyIG5hbWVbTVZO
RVRfU1RSSU5HX0xFTl07CisJY29uc3QgY2hhciAqbmFtZV9zdHIgPSAidmlydGlvLW5ldCI7CisK
KwlzbnByaW50ZihuYW1lLCBNVk5FVF9TVFJJTkdfTEVOLCAiJXMiLCBkZXZfZHJpdmVyX3N0cmlu
ZyhkZXYpKTsKKwlpZiAoIXN0cmNtcChrb2JqLT5uYW1lLCBuYW1lKSkKKwkJcmV0dXJuIHNwcmlu
dGYoYnVmLCAiJXNcbiIsIG5hbWVfc3RyKTsKKworCXJldHVybiAtRUlOVkFMOworfQorCitzdGF0
aWMgTURFVl9UWVBFX0FUVFJfUk8obmFtZSk7CisKK3N0YXRpYyBzc2l6ZV90CithdmFpbGFibGVf
aW5zdGFuY2VzX3Nob3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwg
Y2hhciAqYnVmKQoreworCXJldHVybiBzcHJpbnRmKGJ1ZiwgIiVkXG4iLCBJTlRfTUFYKTsKK30K
Kworc3RhdGljIE1ERVZfVFlQRV9BVFRSX1JPKGF2YWlsYWJsZV9pbnN0YW5jZXMpOworCitzdGF0
aWMgc3NpemVfdCBkZXZpY2VfYXBpX3Nob3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBk
ZXZpY2UgKmRldiwKKwkJCSAgICAgICBjaGFyICpidWYpCit7CisJcmV0dXJuIHNwcmludGYoYnVm
LCAiJXNcbiIsIFZJUlRJT19NREVWX0RFVklDRV9BUElfU1RSSU5HKTsKK30KKworc3RhdGljIE1E
RVZfVFlQRV9BVFRSX1JPKGRldmljZV9hcGkpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAq
bWRldl90eXBlc19hdHRyc1tdID0geworCSZtZGV2X3R5cGVfYXR0cl9uYW1lLmF0dHIsCisJJm1k
ZXZfdHlwZV9hdHRyX2RldmljZV9hcGkuYXR0ciwKKwkmbWRldl90eXBlX2F0dHJfYXZhaWxhYmxl
X2luc3RhbmNlcy5hdHRyLAorCU5VTEwsCit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9n
cm91cCBtZGV2X3R5cGVfZ3JvdXAgPSB7CisJLm5hbWUgID0gInZpcnRpbyIsCisJLmF0dHJzID0g
bWRldl90eXBlc19hdHRycywKK307CisKKy8qIFRCRDogInZob3N0IiB0eXBlICovCisKK3N0YXRp
YyBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X3R5cGVfZ3JvdXBzW10gPSB7CisJJm1kZXZf
dHlwZV9ncm91cCwKKwlOVUxMLAorfTsKKworc3RhdGljIGludCBtdm5ldF9zZXRfdnFfYWRkcmVz
cyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJCQkJdTY0IGRlc2NfYXJlYSwg
dTY0IGRyaXZlcl9hcmVhLCB1NjQgZGV2aWNlX2FyZWEpCit7CisJc3RydWN0IG12bmV0X3N0YXRl
ICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1
ZSAqdnEgPSAmbXZuZXQtPnZxc1tpZHhdOworCisJdnEtPmRlc2NfYWRkciA9IGRlc2NfYXJlYTsK
Kwl2cS0+ZHJpdmVyX2FkZHIgPSBkcml2ZXJfYXJlYTsKKwl2cS0+ZGV2aWNlX2FkZHIgPSBkZXZp
Y2VfYXJlYTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfdnFfbnVt
KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgdTMyIG51bSkKK3sKKwlzdHJ1Y3Qg
bXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZu
ZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwl2cS0+bnVtID0gbnVtOwor
fQorCitzdGF0aWMgdm9pZCBtdm5ldF9raWNrX3ZxKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwg
dTE2IGlkeCkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0
YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07
CisKKwlpZiAodnEtPnJlYWR5KQorCQlzY2hlZHVsZV93b3JrKCZtdm5ldC0+d29yayk7Cit9CisK
K3N0YXRpYyB2b2lkIG12bmV0X3NldF92cV9jYihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUx
NiBpZHgsCisJCQkgICAgc3RydWN0IHZpcnRpb19tZGV2X2NhbGxiYWNrICpjYikKK3sKKwlzdHJ1
Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3Qg
bXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwl2cS0+Y2IgPSBjYi0+
Y2FsbGJhY2s7CisJdnEtPnByaXZhdGUgPSBjYi0+cHJpdmF0ZTsKK30KKworc3RhdGljIHZvaWQg
bXZuZXRfc2V0X3ZxX3JlYWR5KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgYm9v
bCByZWFkeSkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0
YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07
CisKKwlzcGluX2xvY2soJm12bmV0LT5sb2NrKTsKKwl2cS0+cmVhZHkgPSByZWFkeTsKKwlpZiAo
dnEtPnJlYWR5KQorCQltdm5ldF9xdWV1ZV9yZWFkeShtdm5ldCwgaWR4KTsKKwlzcGluX3VubG9j
aygmbXZuZXQtPmxvY2spOworfQorCitzdGF0aWMgYm9vbCBtdm5ldF9nZXRfdnFfcmVhZHkoc3Ry
dWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAq
bXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUg
KnZxID0gJm12bmV0LT52cXNbaWR4XTsKKworCXJldHVybiB2cS0+cmVhZHk7Cit9CisKK3N0YXRp
YyBpbnQgbXZuZXRfc2V0X3ZxX3N0YXRlKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlk
eCwgdTY0IHN0YXRlKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9k
cnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNb
aWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2cmggPSAmdnEtPnZyaW5nOworCisJc3Bpbl9sb2NrKCZt
dm5ldC0+bG9jayk7CisJdnJoLT5sYXN0X2F2YWlsX2lkeCA9IHN0YXRlOworCXNwaW5fdW5sb2Nr
KCZtdm5ldC0+bG9jayk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHU2NCBtdm5ldF9nZXRf
dnFfc3RhdGUoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1MTYgaWR4KQoreworCXN0cnVjdCBt
dm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5l
dF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2cmgg
PSAmdnEtPnZyaW5nOworCisJcmV0dXJuIHZyaC0+bGFzdF9hdmFpbF9pZHg7Cit9CisKK3N0YXRp
YyB1MTYgbXZuZXRfZ2V0X3ZxX2FsaWduKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwly
ZXR1cm4gTVZORVRfUVVFVUVfQUxJR047Cit9CisKK3N0YXRpYyB1NjQgbXZuZXRfZ2V0X2ZlYXR1
cmVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1cm4gbXZuZXRfZmVhdHVyZXM7
Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfc2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2X2RldmljZSAq
bWRldiwgdTY0IGZlYXR1cmVzKQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2
X2dldF9kcnZkYXRhKG1kZXYpOworCisJLyogRE1BIG1hcHBpbmcgbXVzdCBiZSBkb25lIGJ5IGRy
aXZlciAqLworCWlmICghKGZlYXR1cmVzICYgKDFVTEwgPDwgVklSVElPX0ZfSU9NTVVfUExBVEZP
Uk0pKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwltdm5ldC0+ZmVhdHVyZXMgPSBmZWF0dXJlcyAm
IG12bmV0X2ZlYXR1cmVzOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3Nl
dF9jb25maWdfY2Ioc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LAorCQkJCXN0cnVjdCB2aXJ0aW9f
bWRldl9jYWxsYmFjayAqY2IpCit7CisJLyogV2UgZG9uJ3Qgc3VwcG9ydCBjb25maWcgaW50ZXJy
dXB0ICovCit9CisKK3N0YXRpYyB1MTYgbXZuZXRfZ2V0X3F1ZXVlX21heChzdHJ1Y3QgbWRldl9k
ZXZpY2UgKm1kZXYpCit7CisJcmV0dXJuIE1WTkVUX1FVRVVFX01BWDsKK30KKworc3RhdGljIHUz
MiBtdm5ldF9nZXRfZGV2aWNlX2lkKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1
cm4gTVZORVRfREVWSUNFX0lEOworfQorCitzdGF0aWMgdTMyIG12bmV0X2dldF92ZW5kb3JfaWQo
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQoreworCXJldHVybiBNVk5FVF9WRU5ET1JfSUQ7Cit9
CisKK3N0YXRpYyB1OCBtdm5ldF9nZXRfc3RhdHVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikK
K3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsK
KworCXJldHVybiBtdm5ldC0+c3RhdHVzOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfc3Rh
dHVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTggc3RhdHVzKQoreworCXN0cnVjdCBtdm5l
dF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCisJbXZuZXQtPnN0YXR1
cyA9IHN0YXR1czsKKworCWlmIChzdGF0dXMgPT0gMCkgeworCQlzcGluX2xvY2soJm12bmV0LT5s
b2NrKTsKKwkJbXZuZXRfcmVzZXQobXZuZXQpOworCQlzcGluX3VubG9jaygmbXZuZXQtPmxvY2sp
OworCX0KK30KKworc3RhdGljIHZvaWQgbXZuZXRfZ2V0X2NvbmZpZyhzdHJ1Y3QgbWRldl9kZXZp
Y2UgKm1kZXYsIHVuc2lnbmVkIGludCBvZmZzZXQsCisJCQkgICAgIHZvaWQgKmJ1ZiwgdW5zaWdu
ZWQgaW50IGxlbikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2
ZGF0YShtZGV2KTsKKworCWlmIChvZmZzZXQgKyBsZW4gPCBzaXplb2Yoc3RydWN0IHZpcnRpb19u
ZXRfY29uZmlnKSkKKwkJbWVtY3B5KGJ1ZiwgJm12bmV0LT5jb25maWcgKyBvZmZzZXQsIGxlbik7
Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3NldF9jb25maWcoc3RydWN0IG1kZXZfZGV2aWNlICpt
ZGV2LCB1bnNpZ25lZCBpbnQgb2Zmc2V0LAorCQkJICAgICBjb25zdCB2b2lkICpidWYsIHVuc2ln
bmVkIGludCBsZW4pCit7CisJLyogTm8gd3JpdGFibGUgY29uZmlnIHN1cHBvcnR0ZWQgYnkgbXZu
ZXQgKi8KK30KKworc3RhdGljIGludCBtdm5ldF9nZXRfdmVyc2lvbihzdHJ1Y3QgbWRldl9kZXZp
Y2UgKm1kZXYpCit7CisJcmV0dXJuIDB4MTsKK30KKworc3RhdGljIHUzMiBtdm5ldF9nZXRfZ2Vu
ZXJhdGlvbihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0X3N0YXRl
ICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7CisKKwlyZXR1cm4gbXZuZXQtPmdlbmVy
YXRpb247Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmlydGlvX21kZXZfcGFyZW50X29wcyB2
aXJ0aW9fbWRldl9vcHMgPSB7CisJLnNldF92cV9hZGRyZXNzICAgICAgICAgPSBtdm5ldF9zZXRf
dnFfYWRkcmVzcywKKwkuc2V0X3ZxX251bSAgICAgICAgICAgICA9IG12bmV0X3NldF92cV9udW0s
CisJLmtpY2tfdnEgICAgICAgICAgICAgICAgPSBtdm5ldF9raWNrX3ZxLAorCS5zZXRfdnFfY2Ig
ICAgICAgICAgICAgID0gbXZuZXRfc2V0X3ZxX2NiLAorCS5zZXRfdnFfcmVhZHkgICAgICAgICAg
ID0gbXZuZXRfc2V0X3ZxX3JlYWR5LAorCS5nZXRfdnFfcmVhZHkgICAgICAgICAgID0gbXZuZXRf
Z2V0X3ZxX3JlYWR5LAorCS5zZXRfdnFfc3RhdGUgICAgICAgICAgID0gbXZuZXRfc2V0X3ZxX3N0
YXRlLAorCS5nZXRfdnFfc3RhdGUgICAgICAgICAgID0gbXZuZXRfZ2V0X3ZxX3N0YXRlLAorCS5n
ZXRfdnFfYWxpZ24gICAgICAgICAgID0gbXZuZXRfZ2V0X3ZxX2FsaWduLAorCS5nZXRfZmVhdHVy
ZXMgICAgICAgICAgID0gbXZuZXRfZ2V0X2ZlYXR1cmVzLAorCS5zZXRfZmVhdHVyZXMgICAgICAg
ICAgID0gbXZuZXRfc2V0X2ZlYXR1cmVzLAorCS5zZXRfY29uZmlnX2NiICAgICAgICAgID0gbXZu
ZXRfc2V0X2NvbmZpZ19jYiwKKwkuZ2V0X3F1ZXVlX21heCAgICAgICAgICA9IG12bmV0X2dldF9x
dWV1ZV9tYXgsCisJLmdldF9kZXZpY2VfaWQgICAgICAgICAgPSBtdm5ldF9nZXRfZGV2aWNlX2lk
LAorCS5nZXRfdmVuZG9yX2lkICAgICAgICAgID0gbXZuZXRfZ2V0X3ZlbmRvcl9pZCwKKwkuZ2V0
X3N0YXR1cyAgICAgICAgICAgICA9IG12bmV0X2dldF9zdGF0dXMsCisJLnNldF9zdGF0dXMgICAg
ICAgICAgICAgPSBtdm5ldF9zZXRfc3RhdHVzLAorCS5nZXRfY29uZmlnICAgICAgICAgICAgID0g
bXZuZXRfZ2V0X2NvbmZpZywKKwkuc2V0X2NvbmZpZyAgICAgICAgICAgICA9IG12bmV0X3NldF9j
b25maWcsCisJLmdldF92ZXJzaW9uICAgICAgICAgICAgPSBtdm5ldF9nZXRfdmVyc2lvbiwKKwku
Z2V0X2dlbmVyYXRpb24gICAgICAgICA9IG12bmV0X2dldF9nZW5lcmF0aW9uLAorfTsKKworc3Rh
dGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMgbWRldl9mb3BzID0geworCS5vd25lciAg
ICAgICAgICAgICAgICAgID0gVEhJU19NT0RVTEUsCisJLmRldl9hdHRyX2dyb3VwcyAgICAgICAg
PSBtdm5ldF9kZXZfZ3JvdXBzLAorCS5tZGV2X2F0dHJfZ3JvdXBzICAgICAgID0gbWRldl9kZXZf
Z3JvdXBzLAorCS5zdXBwb3J0ZWRfdHlwZV9ncm91cHMgID0gbWRldl90eXBlX2dyb3VwcywKKwku
Y3JlYXRlICAgICAgICAgICAgICAgICA9IG12bmV0X2NyZWF0ZSwKKwkucmVtb3ZlCQkJPSBtdm5l
dF9yZW1vdmUsCisJLmRldmljZV9vcHMJCT0gJnZpcnRpb19tZGV2X29wcywKK307CisKK3N0YXRp
YyB2b2lkIG12bmV0X2RldmljZV9yZWxlYXNlKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlkZXZf
ZGJnKGRldiwgIm12bmV0OiByZWxlYXNlZFxuIik7Cit9CisKK3N0YXRpYyBpbnQgX19pbml0IG12
bmV0X2Rldl9pbml0KHZvaWQpCit7CisJaW50IHJldCA9IDA7CisKKwlwcl9pbmZvKCJtdm5ldF9k
ZXY6ICVzXG4iLCBfX2Z1bmNfXyk7CisKKwltZW1zZXQoJm12bmV0X2RldiwgMCwgc2l6ZW9mKG12
bmV0X2RldikpOworCisJaWRyX2luaXQoJm12bmV0X2Rldi52ZF9pZHIpOworCisJbXZuZXRfZGV2
LnZkX2NsYXNzID0gY2xhc3NfY3JlYXRlKFRISVNfTU9EVUxFLCBNVk5FVF9DTEFTU19OQU1FKTsK
KworCWlmIChJU19FUlIobXZuZXRfZGV2LnZkX2NsYXNzKSkgeworCQlwcl9lcnIoIkVycm9yOiBm
YWlsZWQgdG8gcmVnaXN0ZXIgbXZuZXRfZGV2IGNsYXNzXG4iKTsKKwkJcmV0ID0gUFRSX0VSUiht
dm5ldF9kZXYudmRfY2xhc3MpOworCQlnb3RvIGZhaWxlZDE7CisJfQorCisJbXZuZXRfZGV2LmRl
di5jbGFzcyA9IG12bmV0X2Rldi52ZF9jbGFzczsKKwltdm5ldF9kZXYuZGV2LnJlbGVhc2UgPSBt
dm5ldF9kZXZpY2VfcmVsZWFzZTsKKwlkZXZfc2V0X25hbWUoJm12bmV0X2Rldi5kZXYsICIlcyIs
IE1WTkVUX05BTUUpOworCisJcmV0ID0gZGV2aWNlX3JlZ2lzdGVyKCZtdm5ldF9kZXYuZGV2KTsK
KwlpZiAocmV0KQorCQlnb3RvIGZhaWxlZDI7CisKKwlyZXQgPSBtZGV2X3JlZ2lzdGVyX3ZpcnRp
b19kZXZpY2UoJm12bmV0X2Rldi5kZXYsICZtZGV2X2ZvcHMpOworCWlmIChyZXQpCisJCWdvdG8g
ZmFpbGVkMzsKKworCW11dGV4X2luaXQoJm1kZXZfbGlzdF9sb2NrKTsKKwlJTklUX0xJU1RfSEVB
RCgmbWRldl9kZXZpY2VzX2xpc3QpOworCisJZ290byBhbGxfZG9uZTsKKworZmFpbGVkMzoKKwor
CWRldmljZV91bnJlZ2lzdGVyKCZtdm5ldF9kZXYuZGV2KTsKK2ZhaWxlZDI6CisJY2xhc3NfZGVz
dHJveShtdm5ldF9kZXYudmRfY2xhc3MpOworCitmYWlsZWQxOgorYWxsX2RvbmU6CisJcmV0dXJu
IHJldDsKK30KKworc3RhdGljIHZvaWQgX19leGl0IG12bmV0X2Rldl9leGl0KHZvaWQpCit7CisJ
bXZuZXRfZGV2LmRldi5idXMgPSBOVUxMOworCW1kZXZfdW5yZWdpc3Rlcl9kZXZpY2UoJm12bmV0
X2Rldi5kZXYpOworCisJZGV2aWNlX3VucmVnaXN0ZXIoJm12bmV0X2Rldi5kZXYpOworCWlkcl9k
ZXN0cm95KCZtdm5ldF9kZXYudmRfaWRyKTsKKwljbGFzc19kZXN0cm95KG12bmV0X2Rldi52ZF9j
bGFzcyk7CisJbXZuZXRfZGV2LnZkX2NsYXNzID0gTlVMTDsKKwlwcl9pbmZvKCJtdm5ldF9kZXY6
IFVubG9hZGVkIVxuIik7Cit9CisKK21vZHVsZV9pbml0KG12bmV0X2Rldl9pbml0KQorbW9kdWxl
X2V4aXQobXZuZXRfZGV2X2V4aXQpCisKK01PRFVMRV9MSUNFTlNFKCJHUEwgdjIiKTsKK01PRFVM
RV9JTkZPKHN1cHBvcnRlZCwgIlNpbXVsYXRlIGxvb3BiYWNrIGV0aGVybmV0IGRldmljZSBvdmVy
IG1kZXYiKTsKK01PRFVMRV9WRVJTSU9OKFZFUlNJT05fU1RSSU5HKTsKK01PRFVMRV9BVVRIT1Io
RFJJVkVSX0FVVEhPUik7Ci0tIAoyLjE5LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2RyaS1kZXZlbA==
