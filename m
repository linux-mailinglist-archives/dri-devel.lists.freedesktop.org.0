Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9A8C53D3029
	for <lists+dri-devel@lfdr.de>; Fri, 23 Jul 2021 01:24:28 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 263CB6F50F;
	Thu, 22 Jul 2021 23:24:26 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E3CDF6F50D;
 Thu, 22 Jul 2021 23:24:24 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10053"; a="209874761"
X-IronPort-AV: E=Sophos;i="5.84,262,1620716400"; d="scan'208";a="209874761"
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 22 Jul 2021 16:24:24 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.84,262,1620716400"; d="scan'208";a="497139304"
Received: from orsmsx604.amr.corp.intel.com ([10.22.229.17])
 by orsmga001.jf.intel.com with ESMTP; 22 Jul 2021 16:24:24 -0700
Received: from orsmsx612.amr.corp.intel.com (10.22.229.25) by
 ORSMSX604.amr.corp.intel.com (10.22.229.17) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.10; Thu, 22 Jul 2021 16:24:23 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX612.amr.corp.intel.com (10.22.229.25) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.10; Thu, 22 Jul 2021 16:24:23 -0700
Received: from orsmsx610.amr.corp.intel.com ([10.22.229.23]) by
 ORSMSX610.amr.corp.intel.com ([10.22.229.23]) with mapi id 15.01.2242.010;
 Thu, 22 Jul 2021 16:24:23 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
 "daniel.vetter@ffwll.ch" <daniel.vetter@ffwll.ch>
Subject: Re: [PATCH 3/3] drm/plane: Move drm_plane_enable_fb_damage_clips into
 core
Thread-Topic: [PATCH 3/3] drm/plane: Move drm_plane_enable_fb_damage_clips
 into core
Thread-Index: AQHXfjSQX8ArUocJNEuiAZNSYVFqCqtQG5KA
Date: Thu, 22 Jul 2021 23:24:22 +0000
Message-ID: <6f2e077ca4a8325e67c13328e7c5486385350737.camel@intel.com>
References: <20210721133014.3880922-1-daniel.vetter@ffwll.ch>
 <20210721133014.3880922-3-daniel.vetter@ffwll.ch>
In-Reply-To: <20210721133014.3880922-3-daniel.vetter@ffwll.ch>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.22.254.132]
Content-Type: text/plain; charset="utf-8"
Content-ID: <BD2B26CAFD8A24449B0E7C45573B1F8B@intel.com>
Content-Transfer-Encoding: base64
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: "airlied@linux.ie" <airlied@linux.ie>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>, "Mun,
 Gwan-gyeong" <gwan-gyeong.mun@intel.com>,
 "hdegoede@redhat.com" <hdegoede@redhat.com>,
 "tzimmermann@suse.de" <tzimmermann@suse.de>, "Vetter,
 Daniel" <daniel.vetter@intel.com>
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gV2VkLCAyMDIxLTA3LTIxIGF0IDE1OjMwICswMjAwLCBEYW5pZWwgVmV0dGVyIHdyb3RlOg0K
PiBXZSdyZSB0cnlpbmcgdG8gaGF2ZSBhIGZhaXJseSBzdHJpY3Qgc3BsaXQgYmV0d2VlbiBjb3Jl
IGZ1bmN0aW9uYWxpdHkNCj4gdGhhdCBkZWZpbmVzIHRoZSB1YXBpLCBpbmNsdWRpbmcgdGhlIGRv
Y3MsIGFuZCB0aGUgaGVscGVyIGZ1bmN0aW9ucyB0bw0KPiBpbXBsZW1lbnQgaXQuDQo+IA0KPiBN
b3ZlIGRybV9wbGFuZV9lbmFibGVfZmJfZGFtYWdlX2NsaXBzIGFuZCBhc3NvY2lhdGVkIGtlcm5l
bGRvYyBpbnRvDQo+IGRybV9wbGFuZSBmcm9tIGRybV9kYW1hZ2VfaGVscGVyLmMgdG8gZml4IHRo
aXMuDQoNClJldmlld2VkLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGlu
dGVsLmNvbT4NCg0KPiANCj4gQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51
eC5pbnRlbC5jb20+DQo+IENjOiBHd2FuLWd5ZW9uZyBNdW4gPGd3YW4tZ3llb25nLm11bkBpbnRl
bC5jb20+DQo+IENjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNv
bT4NCj4gQ2M6IEhhbnMgZGUgR29lZGUgPGhkZWdvZWRlQHJlZGhhdC5jb20+DQo+IFNpZ25lZC1v
ZmYtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAaW50ZWwuY29tPg0KPiBDYzogTWFh
cnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4NCj4gQ2M6
IE1heGltZSBSaXBhcmQgPG1yaXBhcmRAa2VybmVsLm9yZz4NCj4gQ2M6IFRob21hcyBaaW1tZXJt
YW5uIDx0emltbWVybWFubkBzdXNlLmRlPg0KPiBDYzogRGF2aWQgQWlybGllIDxhaXJsaWVkQGxp
bnV4LmllPg0KPiBDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNoPg0KPiAtLS0NCj4g
IERvY3VtZW50YXRpb24vZ3B1L2RybS1rbXMucnN0ICAgICAgIHwgIDQgKy0tDQo+ICBkcml2ZXJz
L2dwdS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIuYyB8IDU0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tDQo+ICBkcml2ZXJzL2dwdS9kcm0vZHJtX3BsYW5lLmMgICAgICAgICB8IDU0ICsrKysr
KysrKysrKysrKysrKysrKysrKysrKysrDQo+ICBpbmNsdWRlL2RybS9kcm1fZGFtYWdlX2hlbHBl
ci5oICAgICB8ICAxIC0NCj4gIGluY2x1ZGUvZHJtL2RybV9wbGFuZS5oICAgICAgICAgICAgIHwg
IDMgKy0NCj4gIDUgZmlsZXMgY2hhbmdlZCwgNTggaW5zZXJ0aW9ucygrKSwgNTggZGVsZXRpb25z
KC0pDQo+IA0KPiBkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9ncHUvZHJtLWttcy5yc3QgYi9E
b2N1bWVudGF0aW9uL2dwdS9kcm0ta21zLnJzdA0KPiBpbmRleCA4N2U1MDIzZTNmNTUuLjczOTlm
NDk3ZTdlMiAxMDA2NDQNCj4gLS0tIGEvRG9jdW1lbnRhdGlvbi9ncHUvZHJtLWttcy5yc3QNCj4g
KysrIGIvRG9jdW1lbnRhdGlvbi9ncHUvZHJtLWttcy5yc3QNCj4gQEAgLTUwOCw4ICs1MDgsOCBA
QCBQbGFuZSBDb21wb3NpdGlvbiBQcm9wZXJ0aWVzDQo+ICBEYW1hZ2UgVHJhY2tpbmcgUHJvcGVy
dGllcw0KPiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCj4gIA0KPiAtLi4ga2VybmVsLWRv
Yzo6IGRyaXZlcnMvZ3B1L2RybS9kcm1fZGFtYWdlX2hlbHBlci5jDQo+IC0gICA6ZG9jOiBvdmVy
dmlldw0KPiArLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1L2RybS9kcm1fcGxhbmUuYw0KPiAr
ICAgOmRvYzogZGFtYWdlIHRyYWNraW5nDQo+ICANCj4gIENvbG9yIE1hbmFnZW1lbnQgUHJvcGVy
dGllcw0KPiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQo+IGRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fZGFt
YWdlX2hlbHBlci5jDQo+IGluZGV4IGViNjliNzEyM2FmNS4uMjQ1OTU5ZGFkN2JiIDEwMDY0NA0K
PiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIuYw0KPiArKysgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIuYw0KPiBAQCAtMzQsNDQgKzM0LDYgQEANCj4g
ICNpbmNsdWRlIDxkcm0vZHJtX2RhbWFnZV9oZWxwZXIuaD4NCj4gICNpbmNsdWRlIDxkcm0vZHJt
X2RldmljZS5oPg0KPiAgDQo+IC0vKioNCj4gLSAqIERPQzogb3ZlcnZpZXcNCj4gLSAqDQo+IC0g
KiBGQl9EQU1BR0VfQ0xJUFMgaXMgYW4gb3B0aW9uYWwgcGxhbmUgcHJvcGVydHkgd2hpY2ggcHJv
dmlkZXMgYSBtZWFucyB0bw0KPiAtICogc3BlY2lmeSBhIGxpc3Qgb2YgZGFtYWdlIHJlY3Rhbmds
ZXMgb24gYSBwbGFuZSBpbiBmcmFtZWJ1ZmZlciBjb29yZGluYXRlcyBvZg0KPiAtICogdGhlIGZy
YW1lYnVmZmVyIGF0dGFjaGVkIHRvIHRoZSBwbGFuZS4gSW4gY3VycmVudCBjb250ZXh0IGRhbWFn
ZSBpcyB0aGUgYXJlYQ0KPiAtICogb2YgcGxhbmUgZnJhbWVidWZmZXIgdGhhdCBoYXMgY2hhbmdl
ZCBzaW5jZSBsYXN0IHBsYW5lIHVwZGF0ZSAoYWxzbyBjYWxsZWQNCj4gLSAqIHBhZ2UtZmxpcCks
IGlycmVzcGVjdGl2ZSBvZiB3aGV0aGVyIGN1cnJlbnRseSBhdHRhY2hlZCBmcmFtZWJ1ZmZlciBp
cyBzYW1lIGFzDQo+IC0gKiBmcmFtZWJ1ZmZlciBhdHRhY2hlZCBkdXJpbmcgbGFzdCBwbGFuZSB1
cGRhdGUgb3Igbm90Lg0KPiAtICoNCj4gLSAqIEZCX0RBTUFHRV9DTElQUyBpcyBhIGhpbnQgdG8g
a2VybmVsIHdoaWNoIGNvdWxkIGJlIGhlbHBmdWwgZm9yIHNvbWUgZHJpdmVycw0KPiAtICogdG8g
b3B0aW1pemUgaW50ZXJuYWxseSBlc3BlY2lhbGx5IGZvciB2aXJ0dWFsIGRldmljZXMgd2hlcmUg
ZWFjaCBmcmFtZWJ1ZmZlcg0KPiAtICogY2hhbmdlIG5lZWRzIHRvIGJlIHRyYW5zbWl0dGVkIG92
ZXIgbmV0d29yaywgdXNiLCBldGMuDQo+IC0gKg0KPiAtICogU2luY2UgRkJfREFNQUdFX0NMSVBT
IGlzIGEgaGludCBzbyBpdCBpcyBhbiBvcHRpb25hbCBwcm9wZXJ0eS4gVXNlci1zcGFjZSBjYW4N
Cj4gLSAqIGlnbm9yZSBkYW1hZ2UgY2xpcHMgcHJvcGVydHkgYW5kIGluIHRoYXQgY2FzZSBkcml2
ZXIgd2lsbCBkbyBhIGZ1bGwgcGxhbmUNCj4gLSAqIHVwZGF0ZS4gSW4gY2FzZSBkYW1hZ2UgY2xp
cHMgYXJlIHByb3ZpZGVkIHRoZW4gaXQgaXMgZ3VhcmFudGVlZCB0aGF0IHRoZSBhcmVhDQo+IC0g
KiBpbnNpZGUgZGFtYWdlIGNsaXBzIHdpbGwgYmUgdXBkYXRlZCB0byBwbGFuZS4gRm9yIGVmZmlj
aWVuY3kgZHJpdmVyIGNhbiBkbw0KPiAtICogZnVsbCB1cGRhdGUgb3IgY2FuIHVwZGF0ZSBtb3Jl
IHRoYW4gc3BlY2lmaWVkIGluIGRhbWFnZSBjbGlwcy4gU2luY2UgZHJpdmVyDQo+IC0gKiBpcyBm
cmVlIHRvIHJlYWQgbW9yZSwgdXNlci1zcGFjZSBtdXN0IGFsd2F5cyByZW5kZXIgdGhlIGVudGly
ZSB2aXNpYmxlDQo+IC0gKiBmcmFtZWJ1ZmZlci4gT3RoZXJ3aXNlIHRoZXJlIGNhbiBiZSBjb3Jy
dXB0aW9ucy4gQWxzbywgaWYgYSB1c2VyLXNwYWNlDQo+IC0gKiBwcm92aWRlcyBkYW1hZ2UgY2xp
cHMgd2hpY2ggZG9lc24ndCBlbmNvbXBhc3MgdGhlIGFjdHVhbCBkYW1hZ2UgdG8NCj4gLSAqIGZy
YW1lYnVmZmVyIChzaW5jZSBsYXN0IHBsYW5lIHVwZGF0ZSkgY2FuIHJlc3VsdCBpbiBpbmNvcnJl
Y3QgcmVuZGVyaW5nLg0KPiAtICoNCj4gLSAqIEZCX0RBTUFHRV9DTElQUyBpcyBhIGJsb2IgcHJv
cGVydHkgd2l0aCB0aGUgbGF5b3V0IG9mIGJsb2IgZGF0YSBpcyBzaW1wbHkgYW4NCj4gLSAqIGFy
cmF5IG9mICZkcm1fbW9kZV9yZWN0LiBVbmxpa2UgcGxhbmUgJmRybV9wbGFuZV9zdGF0ZS5zcmMg
Y29vcmRpbmF0ZXMsDQo+IC0gKiBkYW1hZ2UgY2xpcHMgYXJlIG5vdCBpbiAxNi4xNiBmaXhlZCBw
b2ludC4gU2ltaWxhciB0byBwbGFuZSBzcmMgaW4NCj4gLSAqIGZyYW1lYnVmZmVyLCBkYW1hZ2Ug
Y2xpcHMgY2Fubm90IGJlIG5lZ2F0aXZlLiBJbiBkYW1hZ2UgY2xpcCwgeDEveTEgYXJlDQo+IC0g
KiBpbmNsdXNpdmUgYW5kIHgyL3kyIGFyZSBleGNsdXNpdmUuIFdoaWxlIGtlcm5lbCBkb2VzIG5v
dCBlcnJvciBmb3Igb3ZlcmxhcHBlZA0KPiAtICogZGFtYWdlIGNsaXBzLCBpdCBpcyBzdHJvbmds
eSBkaXNjb3VyYWdlZC4NCj4gLSAqDQo+IC0gKiBEcml2ZXJzIHRoYXQgYXJlIGludGVyZXN0ZWQg
aW4gZGFtYWdlIGludGVyZmFjZSBmb3IgcGxhbmUgc2hvdWxkIGVuYWJsZQ0KPiAtICogRkJfREFN
QUdFX0NMSVBTIHByb3BlcnR5IGJ5IGNhbGxpbmcgZHJtX3BsYW5lX2VuYWJsZV9mYl9kYW1hZ2Vf
Y2xpcHMoKS4NCj4gLSAqIERyaXZlcnMgaW1wbGVtZW50aW5nIGRhbWFnZSBjYW4gdXNlIGRybV9h
dG9taWNfaGVscGVyX2RhbWFnZV9pdGVyX2luaXQoKSBhbmQNCj4gLSAqIGRybV9hdG9taWNfaGVs
cGVyX2RhbWFnZV9pdGVyX25leHQoKSBoZWxwZXIgaXRlcmF0b3IgZnVuY3Rpb24gdG8gZ2V0IGRh
bWFnZQ0KPiAtICogcmVjdGFuZ2xlcyBjbGlwcGVkIHRvICZkcm1fcGxhbmVfc3RhdGUuc3JjLg0K
PiAtICovDQo+IC0NCj4gIHN0YXRpYyB2b2lkIGNvbnZlcnRfY2xpcF9yZWN0X3RvX3JlY3QoY29u
c3Qgc3RydWN0IGRybV9jbGlwX3JlY3QgKnNyYywNCj4gIAkJCQkgICAgICBzdHJ1Y3QgZHJtX21v
ZGVfcmVjdCAqZGVzdCwNCj4gIAkJCQkgICAgICB1aW50MzJfdCBudW1fY2xpcHMsIHVpbnQzMl90
IHNyY19pbmMpDQo+IEBAIC04NywyMiArNDksNiBAQCBzdGF0aWMgdm9pZCBjb252ZXJ0X2NsaXBf
cmVjdF90b19yZWN0KGNvbnN0IHN0cnVjdCBkcm1fY2xpcF9yZWN0ICpzcmMsDQo+ICAJfQ0KPiAg
fQ0KPiAgDQo+IC0vKioNCj4gLSAqIGRybV9wbGFuZV9lbmFibGVfZmJfZGFtYWdlX2NsaXBzIC0g
RW5hYmxlcyBwbGFuZSBmYiBkYW1hZ2UgY2xpcHMgcHJvcGVydHkuDQo+IC0gKiBAcGxhbmU6IFBs
YW5lIG9uIHdoaWNoIHRvIGVuYWJsZSBkYW1hZ2UgY2xpcHMgcHJvcGVydHkuDQo+IC0gKg0KPiAt
ICogVGhpcyBmdW5jdGlvbiBsZXRzIGRyaXZlciB0byBlbmFibGUgdGhlIGRhbWFnZSBjbGlwcyBw
cm9wZXJ0eSBvbiBhIHBsYW5lLg0KPiAtICovDQo+IC12b2lkIGRybV9wbGFuZV9lbmFibGVfZmJf
ZGFtYWdlX2NsaXBzKHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lKQ0KPiAtew0KPiAtCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXYgPSBwbGFuZS0+ZGV2Ow0KPiAtCXN0cnVjdCBkcm1fbW9kZV9jb25maWcg
KmNvbmZpZyA9ICZkZXYtPm1vZGVfY29uZmlnOw0KPiAtDQo+IC0JZHJtX29iamVjdF9hdHRhY2hf
cHJvcGVydHkoJnBsYW5lLT5iYXNlLCBjb25maWctPnByb3BfZmJfZGFtYWdlX2NsaXBzLA0KPiAt
CQkJCSAgIDApOw0KPiAtfQ0KPiAtRVhQT1JUX1NZTUJPTChkcm1fcGxhbmVfZW5hYmxlX2ZiX2Rh
bWFnZV9jbGlwcyk7DQo+IC0NCj4gIC8qKg0KPiAgICogZHJtX2F0b21pY19oZWxwZXJfY2hlY2tf
cGxhbmVfZGFtYWdlIC0gVmVyaWZ5IHBsYW5lIGRhbWFnZSBvbiBhdG9taWNfY2hlY2suDQo+ICAg
KiBAc3RhdGU6IFRoZSBkcml2ZXIgc3RhdGUgb2JqZWN0Lg0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2RybV9wbGFuZS5jIGIvZHJpdmVycy9ncHUvZHJtL2RybV9wbGFuZS5jDQo+IGlu
ZGV4IDQwZjA5OWM2N2E4ZC4uYjY4ZDA2ZjUzNmZhIDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dw
dS9kcm0vZHJtX3BsYW5lLmMNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2RybV9wbGFuZS5jDQo+
IEBAIC0xMzk3LDYgKzEzOTcsNjAgQEAgaW50IGRybV9tb2RlX3BhZ2VfZmxpcF9pb2N0bChzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LA0KPiAgCXJldHVybiByZXQ7DQo+ICB9DQo+ICANCj4gKy8qKg0K
PiArICogRE9DOiBkYW1hZ2UgdHJhY2tpbmcNCj4gKyAqDQo+ICsgKiBGQl9EQU1BR0VfQ0xJUFMg
aXMgYW4gb3B0aW9uYWwgcGxhbmUgcHJvcGVydHkgd2hpY2ggcHJvdmlkZXMgYSBtZWFucyB0bw0K
PiArICogc3BlY2lmeSBhIGxpc3Qgb2YgZGFtYWdlIHJlY3RhbmdsZXMgb24gYSBwbGFuZSBpbiBm
cmFtZWJ1ZmZlciBjb29yZGluYXRlcyBvZg0KPiArICogdGhlIGZyYW1lYnVmZmVyIGF0dGFjaGVk
IHRvIHRoZSBwbGFuZS4gSW4gY3VycmVudCBjb250ZXh0IGRhbWFnZSBpcyB0aGUgYXJlYQ0KPiAr
ICogb2YgcGxhbmUgZnJhbWVidWZmZXIgdGhhdCBoYXMgY2hhbmdlZCBzaW5jZSBsYXN0IHBsYW5l
IHVwZGF0ZSAoYWxzbyBjYWxsZWQNCj4gKyAqIHBhZ2UtZmxpcCksIGlycmVzcGVjdGl2ZSBvZiB3
aGV0aGVyIGN1cnJlbnRseSBhdHRhY2hlZCBmcmFtZWJ1ZmZlciBpcyBzYW1lIGFzDQo+ICsgKiBm
cmFtZWJ1ZmZlciBhdHRhY2hlZCBkdXJpbmcgbGFzdCBwbGFuZSB1cGRhdGUgb3Igbm90Lg0KPiAr
ICoNCj4gKyAqIEZCX0RBTUFHRV9DTElQUyBpcyBhIGhpbnQgdG8ga2VybmVsIHdoaWNoIGNvdWxk
IGJlIGhlbHBmdWwgZm9yIHNvbWUgZHJpdmVycw0KPiArICogdG8gb3B0aW1pemUgaW50ZXJuYWxs
eSBlc3BlY2lhbGx5IGZvciB2aXJ0dWFsIGRldmljZXMgd2hlcmUgZWFjaCBmcmFtZWJ1ZmZlcg0K
PiArICogY2hhbmdlIG5lZWRzIHRvIGJlIHRyYW5zbWl0dGVkIG92ZXIgbmV0d29yaywgdXNiLCBl
dGMuDQo+ICsgKg0KPiArICogU2luY2UgRkJfREFNQUdFX0NMSVBTIGlzIGEgaGludCBzbyBpdCBp
cyBhbiBvcHRpb25hbCBwcm9wZXJ0eS4gVXNlci1zcGFjZSBjYW4NCj4gKyAqIGlnbm9yZSBkYW1h
Z2UgY2xpcHMgcHJvcGVydHkgYW5kIGluIHRoYXQgY2FzZSBkcml2ZXIgd2lsbCBkbyBhIGZ1bGwg
cGxhbmUNCj4gKyAqIHVwZGF0ZS4gSW4gY2FzZSBkYW1hZ2UgY2xpcHMgYXJlIHByb3ZpZGVkIHRo
ZW4gaXQgaXMgZ3VhcmFudGVlZCB0aGF0IHRoZSBhcmVhDQo+ICsgKiBpbnNpZGUgZGFtYWdlIGNs
aXBzIHdpbGwgYmUgdXBkYXRlZCB0byBwbGFuZS4gRm9yIGVmZmljaWVuY3kgZHJpdmVyIGNhbiBk
bw0KPiArICogZnVsbCB1cGRhdGUgb3IgY2FuIHVwZGF0ZSBtb3JlIHRoYW4gc3BlY2lmaWVkIGlu
IGRhbWFnZSBjbGlwcy4gU2luY2UgZHJpdmVyDQo+ICsgKiBpcyBmcmVlIHRvIHJlYWQgbW9yZSwg
dXNlci1zcGFjZSBtdXN0IGFsd2F5cyByZW5kZXIgdGhlIGVudGlyZSB2aXNpYmxlDQo+ICsgKiBm
cmFtZWJ1ZmZlci4gT3RoZXJ3aXNlIHRoZXJlIGNhbiBiZSBjb3JydXB0aW9ucy4gQWxzbywgaWYg
YSB1c2VyLXNwYWNlDQo+ICsgKiBwcm92aWRlcyBkYW1hZ2UgY2xpcHMgd2hpY2ggZG9lc24ndCBl
bmNvbXBhc3MgdGhlIGFjdHVhbCBkYW1hZ2UgdG8NCj4gKyAqIGZyYW1lYnVmZmVyIChzaW5jZSBs
YXN0IHBsYW5lIHVwZGF0ZSkgY2FuIHJlc3VsdCBpbiBpbmNvcnJlY3QgcmVuZGVyaW5nLg0KPiAr
ICoNCj4gKyAqIEZCX0RBTUFHRV9DTElQUyBpcyBhIGJsb2IgcHJvcGVydHkgd2l0aCB0aGUgbGF5
b3V0IG9mIGJsb2IgZGF0YSBpcyBzaW1wbHkgYW4NCj4gKyAqIGFycmF5IG9mICZkcm1fbW9kZV9y
ZWN0LiBVbmxpa2UgcGxhbmUgJmRybV9wbGFuZV9zdGF0ZS5zcmMgY29vcmRpbmF0ZXMsDQo+ICsg
KiBkYW1hZ2UgY2xpcHMgYXJlIG5vdCBpbiAxNi4xNiBmaXhlZCBwb2ludC4gU2ltaWxhciB0byBw
bGFuZSBzcmMgaW4NCj4gKyAqIGZyYW1lYnVmZmVyLCBkYW1hZ2UgY2xpcHMgY2Fubm90IGJlIG5l
Z2F0aXZlLiBJbiBkYW1hZ2UgY2xpcCwgeDEveTEgYXJlDQo+ICsgKiBpbmNsdXNpdmUgYW5kIHgy
L3kyIGFyZSBleGNsdXNpdmUuIFdoaWxlIGtlcm5lbCBkb2VzIG5vdCBlcnJvciBmb3Igb3Zlcmxh
cHBlZA0KPiArICogZGFtYWdlIGNsaXBzLCBpdCBpcyBzdHJvbmdseSBkaXNjb3VyYWdlZC4NCj4g
KyAqDQo+ICsgKiBEcml2ZXJzIHRoYXQgYXJlIGludGVyZXN0ZWQgaW4gZGFtYWdlIGludGVyZmFj
ZSBmb3IgcGxhbmUgc2hvdWxkIGVuYWJsZQ0KPiArICogRkJfREFNQUdFX0NMSVBTIHByb3BlcnR5
IGJ5IGNhbGxpbmcgZHJtX3BsYW5lX2VuYWJsZV9mYl9kYW1hZ2VfY2xpcHMoKS4NCj4gKyAqIERy
aXZlcnMgaW1wbGVtZW50aW5nIGRhbWFnZSBjYW4gdXNlIGRybV9hdG9taWNfaGVscGVyX2RhbWFn
ZV9pdGVyX2luaXQoKSBhbmQNCj4gKyAqIGRybV9hdG9taWNfaGVscGVyX2RhbWFnZV9pdGVyX25l
eHQoKSBoZWxwZXIgaXRlcmF0b3IgZnVuY3Rpb24gdG8gZ2V0IGRhbWFnZQ0KPiArICogcmVjdGFu
Z2xlcyBjbGlwcGVkIHRvICZkcm1fcGxhbmVfc3RhdGUuc3JjLg0KPiArICovDQo+ICsNCj4gKy8q
Kg0KPiArICogZHJtX3BsYW5lX2VuYWJsZV9mYl9kYW1hZ2VfY2xpcHMgLSBFbmFibGVzIHBsYW5l
IGZiIGRhbWFnZSBjbGlwcyBwcm9wZXJ0eS4NCj4gKyAqIEBwbGFuZTogUGxhbmUgb24gd2hpY2gg
dG8gZW5hYmxlIGRhbWFnZSBjbGlwcyBwcm9wZXJ0eS4NCj4gKyAqDQo+ICsgKiBUaGlzIGZ1bmN0
aW9uIGxldHMgZHJpdmVyIHRvIGVuYWJsZSB0aGUgZGFtYWdlIGNsaXBzIHByb3BlcnR5IG9uIGEg
cGxhbmUuDQo+ICsgKi8NCj4gK3ZvaWQgZHJtX3BsYW5lX2VuYWJsZV9mYl9kYW1hZ2VfY2xpcHMo
c3RydWN0IGRybV9wbGFuZSAqcGxhbmUpDQo+ICt7DQo+ICsJc3RydWN0IGRybV9kZXZpY2UgKmRl
diA9IHBsYW5lLT5kZXY7DQo+ICsJc3RydWN0IGRybV9tb2RlX2NvbmZpZyAqY29uZmlnID0gJmRl
di0+bW9kZV9jb25maWc7DQo+ICsNCj4gKwlkcm1fb2JqZWN0X2F0dGFjaF9wcm9wZXJ0eSgmcGxh
bmUtPmJhc2UsIGNvbmZpZy0+cHJvcF9mYl9kYW1hZ2VfY2xpcHMsDQo+ICsJCQkJICAgMCk7DQo+
ICt9DQo+ICtFWFBPUlRfU1lNQk9MKGRybV9wbGFuZV9lbmFibGVfZmJfZGFtYWdlX2NsaXBzKTsN
Cj4gKw0KPiAgLyoqDQo+ICAgKiBkcm1fcGxhbmVfZ2V0X2RhbWFnZV9jbGlwc19jb3VudCAtIFJl
dHVybnMgZGFtYWdlIGNsaXBzIGNvdW50Lg0KPiAgICogQHN0YXRlOiBQbGFuZSBzdGF0ZS4NCj4g
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9kYW1hZ2VfaGVscGVyLmggYi9pbmNsdWRlL2Ry
bS9kcm1fZGFtYWdlX2hlbHBlci5oDQo+IGluZGV4IDFhZThiY2U2YTVjZS4uZWZmZGE0MmNjZTMx
IDEwMDY0NA0KPiAtLS0gYS9pbmNsdWRlL2RybS9kcm1fZGFtYWdlX2hlbHBlci5oDQo+ICsrKyBi
L2luY2x1ZGUvZHJtL2RybV9kYW1hZ2VfaGVscGVyLmgNCj4gQEAgLTY0LDcgKzY0LDYgQEAgc3Ry
dWN0IGRybV9hdG9taWNfaGVscGVyX2RhbWFnZV9pdGVyIHsNCj4gIAlib29sIGZ1bGxfdXBkYXRl
Ow0KPiAgfTsNCj4gIA0KPiAtdm9pZCBkcm1fcGxhbmVfZW5hYmxlX2ZiX2RhbWFnZV9jbGlwcyhz
dHJ1Y3QgZHJtX3BsYW5lICpwbGFuZSk7DQo+ICB2b2lkIGRybV9hdG9taWNfaGVscGVyX2NoZWNr
X3BsYW5lX2RhbWFnZShzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUsDQo+ICAJCQkJCSAg
c3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpOw0KPiAgaW50IGRybV9hdG9taWNf
aGVscGVyX2RpcnR5ZmIoc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsDQo+IGRpZmYgLS1naXQg
YS9pbmNsdWRlL2RybS9kcm1fcGxhbmUuaCBiL2luY2x1ZGUvZHJtL2RybV9wbGFuZS5oDQo+IGlu
ZGV4IGEyNjg0YWFiODM3Mi4uZmVkOTdlMzU2MjZmIDEwMDY0NA0KPiAtLS0gYS9pbmNsdWRlL2Ry
bS9kcm1fcGxhbmUuaA0KPiArKysgYi9pbmNsdWRlL2RybS9kcm1fcGxhbmUuaA0KPiBAQCAtODk3
LDkgKzg5NywxMCBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBkcm1fcGxhbmUgKmRybV9wbGFuZV9m
aW5kKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsDQo+ICANCj4gIGJvb2wgZHJtX2FueV9wbGFuZV9o
YXNfZm9ybWF0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsDQo+ICAJCQkgICAgICB1MzIgZm9ybWF0
LCB1NjQgbW9kaWZpZXIpOw0KPiArDQo+ICt2b2lkIGRybV9wbGFuZV9lbmFibGVfZmJfZGFtYWdl
X2NsaXBzKHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lKTsNCj4gIHVuc2lnbmVkIGludA0KPiAgZHJt
X3BsYW5lX2dldF9kYW1hZ2VfY2xpcHNfY291bnQoY29uc3Qgc3RydWN0IGRybV9wbGFuZV9zdGF0
ZSAqc3RhdGUpOw0KPiAtDQo+ICBzdHJ1Y3QgZHJtX21vZGVfcmVjdCAqDQo+ICBkcm1fcGxhbmVf
Z2V0X2RhbWFnZV9jbGlwcyhjb25zdCBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpzdGF0ZSk7DQo+
ICANCg0K
