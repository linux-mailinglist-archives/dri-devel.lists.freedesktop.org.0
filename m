Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4BC149BA42
	for <lists+dri-devel@lfdr.de>; Sat, 24 Aug 2019 03:35:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AD6AF6ED8E;
	Sat, 24 Aug 2019 01:35:08 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-vk1-xa49.google.com (mail-vk1-xa49.google.com
 [IPv6:2607:f8b0:4864:20::a49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 77C326ED81
 for <dri-devel@lists.freedesktop.org>; Sat, 24 Aug 2019 01:34:48 +0000 (UTC)
Received: by mail-vk1-xa49.google.com with SMTP id v124so2932881vkg.8
 for <dri-devel@lists.freedesktop.org>; Fri, 23 Aug 2019 18:34:48 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=muEFi5XbMQmCWubHNJsSTZbt20ELRCq0d4kk9MWLAhY=;
 b=fdae+SUvX63s5WlQTVs7y+Sp29fqN3ghd1N5ojw0tMOHYWyWHQ8ZuJlwYIwiWMWg1H
 LsiyGSmhXesQR7i3zUs7MAwALRbGcDPf0JZc4aYChjL4dpSYY3KeJfsc/gQQ7E24Mlce
 0riKro+UA8s7r3X0VyZPydYJomK48aichnL4l7bFToMNey9mzY0I4m+qmFtrBHM/p/hV
 5Ot8o0jogtWhWpJiM53S6v1Oyjw+tbfYyDI/lmkNNXxwVwgfs/ps+mYoKHGdyqc3rj/P
 eBBsHjSbyT2spA2sRSZRkhzTkWV88SvBcwSqa4MAvIebFtISrZngW7pRXUClg4lWVXqZ
 I9pg==
X-Gm-Message-State: APjAAAVXAqK8l/3h5iXbJkV1Qs7Zn+meLYKeBGSGYIJSj1gjPGgWcBzR
 vqQJJIk+6rLbIPJ/HvYTLdY6ZTZrWHug7t5uJmxZfw==
X-Google-Smtp-Source: APXvYqyzxjJ9JoyT3A+XfepOGsNwxIZV79ZscxUSzQZX5VxR0tnvqnDI/dhSpGz1YDYJukl0zy20lkmdrjnQP2HimabbMQ==
X-Received: by 2002:a67:10c6:: with SMTP id 189mr4558166vsq.194.1566610487074; 
 Fri, 23 Aug 2019 18:34:47 -0700 (PDT)
Date: Fri, 23 Aug 2019 18:34:11 -0700
In-Reply-To: <20190824013425.175645-1-brendanhiggins@google.com>
Message-Id: <20190824013425.175645-5-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190824013425.175645-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.187.g17f5b7556c-goog
Subject: [PATCH v15 04/18] kunit: test: add assertion printing library
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=muEFi5XbMQmCWubHNJsSTZbt20ELRCq0d4kk9MWLAhY=;
 b=ByBp05uH0wF5sTDMClbO8RG7ZoITrAHEZLs3ElIwwylqd6RilfLfxung+4/RY0LWQ2
 BAM9bP+qtX24fIuD09gg3IXsocYloRy+Yvu/ZZfR4OEbKfXPsYPmsf20s5fOWtR3h/Xv
 ZAnN0D/NJYLUGMUBJJEtopMeFnLeGPem9tGq2TMGFQTr1gJ/CVGgKJQ+4EoLxm4quuiN
 0Ft7uCrHqqiB9rAbou2iggO97/ujbzqexCs0btdBBa0YXDmlJdmFtf5EzUYY/Qr8txzp
 mnqKDmh90R3uO04bdAtr3Le/51/HITIZIgArZeX8TSGvZ9dQYKADxPxcVedK/VeGkz0w
 jabw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIGBzdHJ1Y3Qga3VuaXRfYXNzZXJ0YCBhbmQgZnJpZW5kcyB3aGljaCBwcm92aWRlIGEgc3Ry
dWN0dXJlZCB3YXkgdG8KY2FwdHVyZSBkYXRhIGZyb20gYW4gZXhwZWN0YXRpb24gb3IgYW4gYXNz
ZXJ0aW9uIChpbnRyb2R1Y2VkIGxhdGVyIGluCnRoZSBzZXJpZXMpIHNvIHRoYXQgaXQgbWF5IGJl
IHByaW50ZWQgb3V0IGluIHRoZSBldmVudCBvZiBhIGZhaWx1cmUuCgpTaWduZWQtb2ZmLWJ5OiBC
cmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBT
dGVwaGVuIEJveWQgPHNib3lkQGtlcm5lbC5vcmc+Ci0tLQogaW5jbHVkZS9rdW5pdC9hc3NlcnQu
aCB8IDM1NiArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwoga3VuaXQv
TWFrZWZpbGUgICAgICAgICB8ICAgMyArLQoga3VuaXQvYXNzZXJ0LmMgICAgICAgICB8IDE0MSAr
KysrKysrKysrKysrKysrCiAzIGZpbGVzIGNoYW5nZWQsIDQ5OSBpbnNlcnRpb25zKCspLCAxIGRl
bGV0aW9uKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5pdC9hc3NlcnQuaAogY3Jl
YXRlIG1vZGUgMTAwNjQ0IGt1bml0L2Fzc2VydC5jCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5p
dC9hc3NlcnQuaCBiL2luY2x1ZGUva3VuaXQvYXNzZXJ0LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwMDAwLi5kYjZhMGZjYTA5YjQKLS0tIC9kZXYvbnVsbAorKysgYi9pbmNs
dWRlL2t1bml0L2Fzc2VydC5oCkBAIC0wLDAgKzEsMzU2IEBACisvKiBTUERYLUxpY2Vuc2UtSWRl
bnRpZmllcjogR1BMLTIuMCAqLworLyoKKyAqIEFzc2VydGlvbiBhbmQgZXhwZWN0YXRpb24gc2Vy
aWFsaXphdGlvbiBBUEkuCisgKgorICogQ29weXJpZ2h0IChDKSAyMDE5LCBHb29nbGUgTExDLgor
ICogQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+Cisg
Ki8KKworI2lmbmRlZiBfS1VOSVRfQVNTRVJUX0gKKyNkZWZpbmUgX0tVTklUX0FTU0VSVF9ICisK
KyNpbmNsdWRlIDxrdW5pdC9zdHJpbmctc3RyZWFtLmg+CisjaW5jbHVkZSA8bGludXgvZXJyLmg+
CisKK3N0cnVjdCBrdW5pdDsKKworLyoqCisgKiBlbnVtIGt1bml0X2Fzc2VydF90eXBlIC0gVHlw
ZSBvZiBleHBlY3RhdGlvbi9hc3NlcnRpb24uCisgKiBAS1VOSVRfQVNTRVJUSU9OOiBVc2VkIHRv
IGRlbm90ZSB0aGF0IGEga3VuaXRfYXNzZXJ0IHJlcHJlc2VudHMgYW4gYXNzZXJ0aW9uLgorICog
QEtVTklUX0VYUEVDVEFUSU9OOiBEZW5vdGVzIHRoYXQgYSBrdW5pdF9hc3NlcnQgcmVwcmVzZW50
cyBhbiBleHBlY3RhdGlvbi4KKyAqCisgKiBVc2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYSAmc3Ry
dWN0IGt1bml0X2Fzc2VydCB0byBkZW5vdGUgd2hldGhlciBpdAorICogcmVwcmVzZW50cyBhbiBl
eHBlY3RhdGlvbiBvciBhbiBhc3NlcnRpb24uCisgKi8KK2VudW0ga3VuaXRfYXNzZXJ0X3R5cGUg
eworCUtVTklUX0FTU0VSVElPTiwKKwlLVU5JVF9FWFBFQ1RBVElPTiwKK307CisKKy8qKgorICog
c3RydWN0IGt1bml0X2Fzc2VydCAtIERhdGEgZm9yIHByaW50aW5nIGEgZmFpbGVkIGFzc2VydGlv
biBvciBleHBlY3RhdGlvbi4KKyAqIEB0ZXN0OiB0aGUgdGVzdCBjYXNlIHRoaXMgZXhwZWN0YXRp
b24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEB0eXBlOiB0aGUgdHlwZSAoZWl0
aGVyIGFuIGV4cGVjdGF0aW9uIG9yIGFuIGFzc2VydGlvbikgb2YgdGhpcyBrdW5pdF9hc3NlcnQu
CisgKiBAbGluZTogdGhlIHNvdXJjZSBjb2RlIGxpbmUgbnVtYmVyIHRoYXQgdGhlIGV4cGVjdGF0
aW9uL2Fzc2VydGlvbiBpcyBhdC4KKyAqIEBmaWxlOiB0aGUgZmlsZSBwYXRoIG9mIHRoZSBzb3Vy
Y2UgZmlsZSB0aGF0IHRoZSBleHBlY3RhdGlvbi9hc3NlcnRpb24gaXMgaW4uCisgKiBAbWVzc2Fn
ZTogYW4gb3B0aW9uYWwgbWVzc2FnZSB0byBwcm92aWRlIGFkZGl0aW9uYWwgY29udGV4dC4KKyAq
IEBmb3JtYXQ6IGEgZnVuY3Rpb24gd2hpY2ggZm9ybWF0cyB0aGUgZGF0YSBpbiB0aGlzIGt1bml0
X2Fzc2VydCB0byBhIHN0cmluZy4KKyAqCisgKiBSZXByZXNlbnRzIGEgZmFpbGVkIGV4cGVjdGF0
aW9uL2Fzc2VydGlvbi4gQ29udGFpbnMgYWxsIHRoZSBkYXRhIG5lY2Vzc2FyeSB0bworICogZm9y
bWF0IGEgc3RyaW5nIHRvIGEgdXNlciByZXBvcnRpbmcgdGhlIGZhaWx1cmUuCisgKi8KK3N0cnVj
dCBrdW5pdF9hc3NlcnQgeworCXN0cnVjdCBrdW5pdCAqdGVzdDsKKwllbnVtIGt1bml0X2Fzc2Vy
dF90eXBlIHR5cGU7CisJaW50IGxpbmU7CisJY29uc3QgY2hhciAqZmlsZTsKKwlzdHJ1Y3QgdmFf
Zm9ybWF0IG1lc3NhZ2U7CisJdm9pZCAoKmZvcm1hdCkoY29uc3Qgc3RydWN0IGt1bml0X2Fzc2Vy
dCAqYXNzZXJ0LAorCQkgICAgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSk7Cit9Owor
CisvKioKKyAqIEtVTklUX0lOSVRfVkFfRk1UX05VTEwgLSBEZWZhdWx0IGluaXRpYWxpemVyIGZv
ciBzdHJ1Y3QgdmFfZm9ybWF0LgorICoKKyAqIFVzZWQgaW5zaWRlIGEgc3RydWN0IGluaXRpYWxp
emF0aW9uIGJsb2NrIHRvIGluaXRpYWxpemUgc3RydWN0IHZhX2Zvcm1hdCB0bworICogZGVmYXVs
dCB2YWx1ZXMgd2hlcmUgZm10IGFuZCB2YSBhcmUgbnVsbC4KKyAqLworI2RlZmluZSBLVU5JVF9J
TklUX1ZBX0ZNVF9OVUxMIHsgLmZtdCA9IE5VTEwsIC52YSA9IE5VTEwgfQorCisvKioKKyAqIEtV
TklUX0lOSVRfQVNTRVJUX1NUUlVDVCgpIC0gSW5pdGlhbGl6ZXIgZm9yIGEgJnN0cnVjdCBrdW5p
dF9hc3NlcnQuCisgKiBAa3VuaXQ6IFRoZSB0ZXN0IGNhc2UgdGhhdCB0aGlzIGV4cGVjdGF0aW9u
L2Fzc2VydGlvbiBpcyBhc3NvY2lhdGVkIHdpdGguCisgKiBAYXNzZXJ0X3R5cGU6IFRoZSB0eXBl
IChhc3NlcnRpb24gb3IgZXhwZWN0YXRpb24pIG9mIHRoaXMga3VuaXRfYXNzZXJ0LgorICogQGZt
dDogVGhlIGZvcm1hdHRpbmcgZnVuY3Rpb24gd2hpY2ggYnVpbGRzIGEgc3RyaW5nIG91dCBvZiB0
aGlzIGt1bml0X2Fzc2VydC4KKyAqCisgKiBUaGUgYmFzZSBpbml0aWFsaXplciBmb3IgYSAmc3Ry
dWN0IGt1bml0X2Fzc2VydC4KKyAqLworI2RlZmluZSBLVU5JVF9JTklUX0FTU0VSVF9TVFJVQ1Qo
a3VuaXQsIGFzc2VydF90eXBlLCBmbXQpIHsJCSAgICAgICBcCisJLnRlc3QgPSBrdW5pdCwJCQkJ
CQkJICAgICAgIFwKKwkudHlwZSA9IGFzc2VydF90eXBlLAkJCQkJCSAgICAgICBcCisJLmZpbGUg
PSBfX0ZJTEVfXywJCQkJCQkgICAgICAgXAorCS5saW5lID0gX19MSU5FX18sCQkJCQkJICAgICAg
IFwKKwkubWVzc2FnZSA9IEtVTklUX0lOSVRfVkFfRk1UX05VTEwsCQkJCSAgICAgICBcCisJLmZv
cm1hdCA9IGZtdAkJCQkJCQkgICAgICAgXAorfQorCit2b2lkIGt1bml0X2Jhc2VfYXNzZXJ0X2Zv
cm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkgICAgICBzdHJ1Y3Qg
c3RyaW5nX3N0cmVhbSAqc3RyZWFtKTsKKwordm9pZCBrdW5pdF9hc3NlcnRfcHJpbnRfbXNnKGNv
bnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICBzdHJ1Y3Qgc3RyaW5nX3N0
cmVhbSAqc3RyZWFtKTsKKworLyoqCisgKiBzdHJ1Y3Qga3VuaXRfZmFpbF9hc3NlcnQgLSBSZXBy
ZXNlbnRzIGEgcGxhaW4gZmFpbCBleHBlY3RhdGlvbi9hc3NlcnRpb24uCisgKiBAYXNzZXJ0OiBU
aGUgcGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqCisgKiBSZXByZXNlbnRzIGEgc2ltcGxlIEtVTklU
X0ZBSUwvS1VOSVRfQVNTRVJUX0ZBSUxVUkUgdGhhdCBhbHdheXMgZmFpbHMuCisgKi8KK3N0cnVj
dCBrdW5pdF9mYWlsX2Fzc2VydCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7Cit9Owor
Cit2b2lkIGt1bml0X2ZhaWxfYXNzZXJ0X2Zvcm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0
ICphc3NlcnQsCisJCQkgICAgICBzdHJ1Y3Qgc3RyaW5nX3N0cmVhbSAqc3RyZWFtKTsKKworLyoq
CisgKiBLVU5JVF9JTklUX0ZBSUxfQVNTRVJUX1NUUlVDVCgpIC0gSW5pdGlhbGl6ZXIgZm9yICZz
dHJ1Y3Qga3VuaXRfZmFpbF9hc3NlcnQuCisgKiBAdGVzdDogVGhlIHRlc3QgY2FzZSB0aGF0IHRo
aXMgZXhwZWN0YXRpb24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEB0eXBlOiBU
aGUgdHlwZSAoYXNzZXJ0aW9uIG9yIGV4cGVjdGF0aW9uKSBvZiB0aGlzIGt1bml0X2Fzc2VydC4K
KyAqCisgKiBJbml0aWFsaXplcyBhICZzdHJ1Y3Qga3VuaXRfZmFpbF9hc3NlcnQuIEludGVuZGVk
IHRvIGJlIHVzZWQgaW4KKyAqIEtVTklUX0VYUEVDVF8qIGFuZCBLVU5JVF9BU1NFUlRfKiBtYWNy
b3MuCisgKi8KKyNkZWZpbmUgS1VOSVRfSU5JVF9GQUlMX0FTU0VSVF9TVFJVQ1QodGVzdCwgdHlw
ZSkgewkJCSAgICAgICBcCisJLmFzc2VydCA9IEtVTklUX0lOSVRfQVNTRVJUX1NUUlVDVCh0ZXN0
LAkJCSAgICAgICBcCisJCQkJCSAgIHR5cGUsCQkJICAgICAgIFwKKwkJCQkJICAga3VuaXRfZmFp
bF9hc3NlcnRfZm9ybWF0KQkgICAgICAgXAorfQorCisvKioKKyAqIHN0cnVjdCBrdW5pdF91bmFy
eV9hc3NlcnQgLSBSZXByZXNlbnRzIGEgS1VOSVRfe0VYUEVDVHxBU1NFUlR9X3tUUlVFfEZBTFNF
fQorICogQGFzc2VydDogVGhlIHBhcmVudCBvZiB0aGlzIHR5cGUuCisgKiBAY29uZGl0aW9uOiBB
IHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhIGNvbmRpdGlvbmFsIGV4cHJlc3Npb24uCisgKiBA
ZXhwZWN0ZWRfdHJ1ZTogVHJ1ZSBpZiBvZiB0eXBlIEtVTklUX3tFWFBFQ1R8QVNTRVJUfV9UUlVF
LCBmYWxzZSBvdGhlcndpc2UuCisgKgorICogUmVwcmVzZW50cyBhIHNpbXBsZSBleHBlY3RhdGlv
biBvciBhc3NlcnRpb24gdGhhdCBzaW1wbHkgYXNzZXJ0cyBzb21ldGhpbmcgaXMKKyAqIHRydWUg
b3IgZmFsc2UuIEluIG90aGVyIHdvcmRzLCByZXByZXNlbnRzIHRoZSBleHBlY3RhdGlvbnM6Cisg
KiBLVU5JVF97RVhQRUNUfEFTU0VSVH1fe1RSVUV8RkFMU0V9CisgKi8KK3N0cnVjdCBrdW5pdF91
bmFyeV9hc3NlcnQgeworCXN0cnVjdCBrdW5pdF9hc3NlcnQgYXNzZXJ0OworCWNvbnN0IGNoYXIg
KmNvbmRpdGlvbjsKKwlib29sIGV4cGVjdGVkX3RydWU7Cit9OworCit2b2lkIGt1bml0X3VuYXJ5
X2Fzc2VydF9mb3JtYXQoY29uc3Qgc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJICAg
ICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pOworCisvKioKKyAqIEtVTklUX0lOSVRf
VU5BUllfQVNTRVJUX1NUUlVDVCgpIC0gSW5pdGlhbGl6ZXMgJnN0cnVjdCBrdW5pdF91bmFyeV9h
c3NlcnQuCisgKiBAdGVzdDogVGhlIHRlc3QgY2FzZSB0aGF0IHRoaXMgZXhwZWN0YXRpb24vYXNz
ZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEB0eXBlOiBUaGUgdHlwZSAoYXNzZXJ0aW9u
IG9yIGV4cGVjdGF0aW9uKSBvZiB0aGlzIGt1bml0X2Fzc2VydC4KKyAqIEBjb25kOiBBIHN0cmlu
ZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBhc3NlcnRlZCB0cnVlIG9yIGZhbHNl
LgorICogQGV4cGVjdF90cnVlOiBUcnVlIGlmIG9mIHR5cGUgS1VOSVRfe0VYUEVDVHxBU1NFUlR9
X1RSVUUsIGZhbHNlIG90aGVyd2lzZS4KKyAqCisgKiBJbml0aWFsaXplcyBhICZzdHJ1Y3Qga3Vu
aXRfdW5hcnlfYXNzZXJ0LiBJbnRlbmRlZCB0byBiZSB1c2VkIGluCisgKiBLVU5JVF9FWFBFQ1Rf
KiBhbmQgS1VOSVRfQVNTRVJUXyogbWFjcm9zLgorICovCisjZGVmaW5lIEtVTklUX0lOSVRfVU5B
UllfQVNTRVJUX1NUUlVDVCh0ZXN0LCB0eXBlLCBjb25kLCBleHBlY3RfdHJ1ZSkgewkgICAgICAg
XAorCS5hc3NlcnQgPSBLVU5JVF9JTklUX0FTU0VSVF9TVFJVQ1QodGVzdCwJCQkgICAgICAgXAor
CQkJCQkgICB0eXBlLAkJCSAgICAgICBcCisJCQkJCSAgIGt1bml0X3VuYXJ5X2Fzc2VydF9mb3Jt
YXQpLAkgICAgICAgXAorCS5jb25kaXRpb24gPSBjb25kLAkJCQkJCSAgICAgICBcCisJLmV4cGVj
dGVkX3RydWUgPSBleHBlY3RfdHJ1ZQkJCQkJICAgICAgIFwKK30KKworLyoqCisgKiBzdHJ1Y3Qg
a3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0IC0gQW4gZXhwZWN0YXRpb24vYXNzZXJ0aW9uIHRoYXQg
YSBwb2ludGVyIGlzCisgKglub3QgTlVMTCBhbmQgbm90IGEgLWVycm5vLgorICogQGFzc2VydDog
VGhlIHBhcmVudCBvZiB0aGlzIHR5cGUuCisgKiBAdGV4dDogQSBzdHJpbmcgcmVwcmVzZW50YXRp
b24gb2YgdGhlIGV4cHJlc3Npb24gcGFzc2VkIHRvIHRoZSBleHBlY3RhdGlvbi4KKyAqIEB2YWx1
ZTogVGhlIGFjdHVhbCBldmFsdWF0ZWQgcG9pbnRlciB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbi4K
KyAqCisgKiBSZXByZXNlbnRzIGFuIGV4cGVjdGF0aW9uL2Fzc2VydGlvbiB0aGF0IGEgcG9pbnRl
ciBpcyBub3QgbnVsbCBhbmQgaXMgZG9lcworICogbm90IGNvbnRhaW4gYSAtZXJybm8uIChTZWUg
SVNfRVJSX09SX05VTEwoKS4pCisgKi8KK3N0cnVjdCBrdW5pdF9wdHJfbm90X2Vycl9hc3NlcnQg
eworCXN0cnVjdCBrdW5pdF9hc3NlcnQgYXNzZXJ0OworCWNvbnN0IGNoYXIgKnRleHQ7CisJY29u
c3Qgdm9pZCAqdmFsdWU7Cit9OworCit2b2lkIGt1bml0X3B0cl9ub3RfZXJyX2Fzc2VydF9mb3Jt
YXQoY29uc3Qgc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJCSAgICAgc3RydWN0IHN0
cmluZ19zdHJlYW0gKnN0cmVhbSk7CisKKy8qKgorICogS1VOSVRfSU5JVF9QVFJfTk9UX0VSUl9B
U1NFUlRfU1RSVUNUKCkgLSBJbml0aWFsaXplcyBhCisgKgkmc3RydWN0IGt1bml0X3B0cl9ub3Rf
ZXJyX2Fzc2VydC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjYXNlIHRoYXQgdGhpcyBleHBlY3RhdGlv
bi9hc3NlcnRpb24gaXMgYXNzb2NpYXRlZCB3aXRoLgorICogQHR5cGU6IFRoZSB0eXBlIChhc3Nl
cnRpb24gb3IgZXhwZWN0YXRpb24pIG9mIHRoaXMga3VuaXRfYXNzZXJ0LgorICogQHR4dDogQSBz
dHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Npb24gcGFzc2VkIHRvIHRoZSBleHBl
Y3RhdGlvbi4KKyAqIEB2YWw6IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHBvaW50ZXIgdmFsdWUgb2Yg
dGhlIGV4cHJlc3Npb24uCisgKgorICogSW5pdGlhbGl6ZXMgYSAmc3RydWN0IGt1bml0X3B0cl9u
b3RfZXJyX2Fzc2VydC4gSW50ZW5kZWQgdG8gYmUgdXNlZCBpbgorICogS1VOSVRfRVhQRUNUXyog
YW5kIEtVTklUX0FTU0VSVF8qIG1hY3Jvcy4KKyAqLworI2RlZmluZSBLVU5JVF9JTklUX1BUUl9O
T1RfRVJSX1NUUlVDVCh0ZXN0LCB0eXBlLCB0eHQsIHZhbCkgewkJICAgICAgIFwKKwkuYXNzZXJ0
ID0gS1VOSVRfSU5JVF9BU1NFUlRfU1RSVUNUKHRlc3QsCQkJICAgICAgIFwKKwkJCQkJICAgdHlw
ZSwJCQkgICAgICAgXAorCQkJCQkgICBrdW5pdF9wdHJfbm90X2Vycl9hc3NlcnRfZm9ybWF0KSwg
ICBcCisJLnRleHQgPSB0eHQsCQkJCQkJCSAgICAgICBcCisJLnZhbHVlID0gdmFsCQkJCQkJCSAg
ICAgICBcCit9CisKKy8qKgorICogc3RydWN0IGt1bml0X2JpbmFyeV9hc3NlcnQgLSBBbiBleHBl
Y3RhdGlvbi9hc3NlcnRpb24gdGhhdCBjb21wYXJlcyB0d28KKyAqCW5vbi1wb2ludGVyIHZhbHVl
cyAoZm9yIGV4YW1wbGUsIEtVTklUX0VYUEVDVF9FUSh0ZXN0LCAxICsgMSwgMikpLgorICogQGFz
c2VydDogVGhlIHBhcmVudCBvZiB0aGlzIHR5cGUuCisgKiBAb3BlcmF0aW9uOiBBIHN0cmluZyBy
ZXByZXNlbnRhdGlvbiBvZiB0aGUgY29tcGFyaXNvbiBvcGVyYXRvciAoZS5nLiAiPT0iKS4KKyAq
IEBsZWZ0X3RleHQ6IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGlu
IHRoZSBsZWZ0IHNsb3QuCisgKiBAbGVmdF92YWx1ZTogVGhlIGFjdHVhbCBldmFsdWF0ZWQgdmFs
dWUgb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIGxlZnQgc2xvdC4KKyAqIEByaWdodF90ZXh0OiBB
IHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xv
dC4KKyAqIEByaWdodF92YWx1ZTogVGhlIGFjdHVhbCBldmFsdWF0ZWQgdmFsdWUgb2YgdGhlIGV4
cHJlc3Npb24gaW4gdGhlIHJpZ2h0IHNsb3QuCisgKgorICogUmVwcmVzZW50cyBhbiBleHBlY3Rh
dGlvbi9hc3NlcnRpb24gdGhhdCBjb21wYXJlcyB0d28gbm9uLXBvaW50ZXIgdmFsdWVzLiBGb3IK
KyAqIGV4YW1wbGUsIHRvIGV4cGVjdCB0aGF0IDEgKyAxID09IDIsIHlvdSBjYW4gdXNlIHRoZSBl
eHBlY3RhdGlvbgorICogS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDEgKyAxLCAyKTsKKyAqLworc3Ry
dWN0IGt1bml0X2JpbmFyeV9hc3NlcnQgeworCXN0cnVjdCBrdW5pdF9hc3NlcnQgYXNzZXJ0Owor
CWNvbnN0IGNoYXIgKm9wZXJhdGlvbjsKKwljb25zdCBjaGFyICpsZWZ0X3RleHQ7CisJbG9uZyBs
b25nIGxlZnRfdmFsdWU7CisJY29uc3QgY2hhciAqcmlnaHRfdGV4dDsKKwlsb25nIGxvbmcgcmln
aHRfdmFsdWU7Cit9OworCit2b2lkIGt1bml0X2JpbmFyeV9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0
cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1Y3Qgc3RyaW5nX3N0cmVhbSAqc3Ry
ZWFtKTsKKworLyoqCisgKiBLVU5JVF9JTklUX0JJTkFSWV9BU1NFUlRfU1RSVUNUKCkgLSBJbml0
aWFsaXplcyBhCisgKgkmc3RydWN0IGt1bml0X2JpbmFyeV9hc3NlcnQuCisgKiBAdGVzdDogVGhl
IHRlc3QgY2FzZSB0aGF0IHRoaXMgZXhwZWN0YXRpb24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQg
d2l0aC4KKyAqIEB0eXBlOiBUaGUgdHlwZSAoYXNzZXJ0aW9uIG9yIGV4cGVjdGF0aW9uKSBvZiB0
aGlzIGt1bml0X2Fzc2VydC4KKyAqIEBvcF9zdHI6IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9m
IHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIChlLmcuICI9PSIpLgorICogQGxlZnRfc3RyOiBBIHN0
cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90Lgor
ICogQGxlZnRfdmFsOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lv
biBpbiB0aGUgbGVmdCBzbG90LgorICogQHJpZ2h0X3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRp
b24gb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIHJpZ2h0IHNsb3QuCisgKiBAcmlnaHRfdmFsOiBU
aGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQg
c2xvdC4KKyAqCisgKiBJbml0aWFsaXplcyBhICZzdHJ1Y3Qga3VuaXRfYmluYXJ5X2Fzc2VydC4g
SW50ZW5kZWQgdG8gYmUgdXNlZCBpbgorICogS1VOSVRfRVhQRUNUXyogYW5kIEtVTklUX0FTU0VS
VF8qIG1hY3Jvcy4KKyAqLworI2RlZmluZSBLVU5JVF9JTklUX0JJTkFSWV9BU1NFUlRfU1RSVUNU
KHRlc3QsCQkJCSAgICAgICBcCisJCQkJCXR5cGUsCQkJCSAgICAgICBcCisJCQkJCW9wX3N0ciwJ
CQkJICAgICAgIFwKKwkJCQkJbGVmdF9zdHIsCQkJICAgICAgIFwKKwkJCQkJbGVmdF92YWwsCQkJ
ICAgICAgIFwKKwkJCQkJcmlnaHRfc3RyLAkJCSAgICAgICBcCisJCQkJCXJpZ2h0X3ZhbCkgewkJ
CSAgICAgICBcCisJLmFzc2VydCA9IEtVTklUX0lOSVRfQVNTRVJUX1NUUlVDVCh0ZXN0LAkJCSAg
ICAgICBcCisJCQkJCSAgIHR5cGUsCQkJICAgICAgIFwKKwkJCQkJICAga3VuaXRfYmluYXJ5X2Fz
c2VydF9mb3JtYXQpLAkgICAgICAgXAorCS5vcGVyYXRpb24gPSBvcF9zdHIsCQkJCQkJICAgICAg
IFwKKwkubGVmdF90ZXh0ID0gbGVmdF9zdHIsCQkJCQkJICAgICAgIFwKKwkubGVmdF92YWx1ZSA9
IGxlZnRfdmFsLAkJCQkJCSAgICAgICBcCisJLnJpZ2h0X3RleHQgPSByaWdodF9zdHIsCQkJCQkg
ICAgICAgXAorCS5yaWdodF92YWx1ZSA9IHJpZ2h0X3ZhbAkJCQkJICAgICAgIFwKK30KKworLyoq
CisgKiBzdHJ1Y3Qga3VuaXRfYmluYXJ5X3B0cl9hc3NlcnQgLSBBbiBleHBlY3RhdGlvbi9hc3Nl
cnRpb24gdGhhdCBjb21wYXJlcyB0d28KKyAqCXBvaW50ZXIgdmFsdWVzIChmb3IgZXhhbXBsZSwg
S1VOSVRfRVhQRUNUX1BUUl9FUSh0ZXN0LCBmb28sIGJhcikpLgorICogQGFzc2VydDogVGhlIHBh
cmVudCBvZiB0aGlzIHR5cGUuCisgKiBAb3BlcmF0aW9uOiBBIHN0cmluZyByZXByZXNlbnRhdGlv
biBvZiB0aGUgY29tcGFyaXNvbiBvcGVyYXRvciAoZS5nLiAiPT0iKS4KKyAqIEBsZWZ0X3RleHQ6
IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSBsZWZ0IHNs
b3QuCisgKiBAbGVmdF92YWx1ZTogVGhlIGFjdHVhbCBldmFsdWF0ZWQgdmFsdWUgb2YgdGhlIGV4
cHJlc3Npb24gaW4gdGhlIGxlZnQgc2xvdC4KKyAqIEByaWdodF90ZXh0OiBBIHN0cmluZyByZXBy
ZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqIEByaWdo
dF92YWx1ZTogVGhlIGFjdHVhbCBldmFsdWF0ZWQgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaW4g
dGhlIHJpZ2h0IHNsb3QuCisgKgorICogUmVwcmVzZW50cyBhbiBleHBlY3RhdGlvbi9hc3NlcnRp
b24gdGhhdCBjb21wYXJlcyB0d28gcG9pbnRlciB2YWx1ZXMuIEZvcgorICogZXhhbXBsZSwgdG8g
ZXhwZWN0IHRoYXQgZm9vIGFuZCBiYXIgcG9pbnQgdG8gdGhlIHNhbWUgdGhpbmcsIHlvdSBjYW4g
dXNlIHRoZQorICogZXhwZWN0YXRpb24gS1VOSVRfRVhQRUNUX1BUUl9FUSh0ZXN0LCBmb28sIGJh
cik7CisgKi8KK3N0cnVjdCBrdW5pdF9iaW5hcnlfcHRyX2Fzc2VydCB7CisJc3RydWN0IGt1bml0
X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hhciAqb3BlcmF0aW9uOworCWNvbnN0IGNoYXIgKmxl
ZnRfdGV4dDsKKwljb25zdCB2b2lkICpsZWZ0X3ZhbHVlOworCWNvbnN0IGNoYXIgKnJpZ2h0X3Rl
eHQ7CisJY29uc3Qgdm9pZCAqcmlnaHRfdmFsdWU7Cit9OworCit2b2lkIGt1bml0X2JpbmFyeV9w
dHJfYXNzZXJ0X2Zvcm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJ
ICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pOworCisvKioKKyAqIEtVTklUX0lOSVRf
QklOQVJZX1BUUl9BU1NFUlRfU1RSVUNUKCkgLSBJbml0aWFsaXplcyBhCisgKgkmc3RydWN0IGt1
bml0X2JpbmFyeV9wdHJfYXNzZXJ0LgorICogQHRlc3Q6IFRoZSB0ZXN0IGNhc2UgdGhhdCB0aGlz
IGV4cGVjdGF0aW9uL2Fzc2VydGlvbiBpcyBhc3NvY2lhdGVkIHdpdGguCisgKiBAdHlwZTogVGhl
IHR5cGUgKGFzc2VydGlvbiBvciBleHBlY3RhdGlvbikgb2YgdGhpcyBrdW5pdF9hc3NlcnQuCisg
KiBAb3Bfc3RyOiBBIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29tcGFyaXNvbiBvcGVy
YXRvciAoZS5nLiAiPT0iKS4KKyAqIEBsZWZ0X3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24g
b2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIGxlZnQgc2xvdC4KKyAqIEBsZWZ0X3ZhbDogVGhlIGFj
dHVhbCBldmFsdWF0ZWQgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIGxlZnQgc2xvdC4K
KyAqIEByaWdodF9zdHI6IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9u
IGluIHRoZSByaWdodCBzbG90LgorICogQHJpZ2h0X3ZhbDogVGhlIGFjdHVhbCBldmFsdWF0ZWQg
dmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIHJpZ2h0IHNsb3QuCisgKgorICogSW5pdGlh
bGl6ZXMgYSAmc3RydWN0IGt1bml0X2JpbmFyeV9wdHJfYXNzZXJ0LiBJbnRlbmRlZCB0byBiZSB1
c2VkIGluCisgKiBLVU5JVF9FWFBFQ1RfKiBhbmQgS1VOSVRfQVNTRVJUXyogbWFjcm9zLgorICov
CisjZGVmaW5lIEtVTklUX0lOSVRfQklOQVJZX1BUUl9BU1NFUlRfU1RSVUNUKHRlc3QsCQkJICAg
ICAgIFwKKwkJCQkJICAgIHR5cGUsCQkJICAgICAgIFwKKwkJCQkJICAgIG9wX3N0ciwJCQkgICAg
ICAgXAorCQkJCQkgICAgbGVmdF9zdHIsCQkJICAgICAgIFwKKwkJCQkJICAgIGxlZnRfdmFsLAkJ
CSAgICAgICBcCisJCQkJCSAgICByaWdodF9zdHIsCQkJICAgICAgIFwKKwkJCQkJICAgIHJpZ2h0
X3ZhbCkgewkJICAgICAgIFwKKwkuYXNzZXJ0ID0gS1VOSVRfSU5JVF9BU1NFUlRfU1RSVUNUKHRl
c3QsCQkJICAgICAgIFwKKwkJCQkJICAgdHlwZSwJCQkgICAgICAgXAorCQkJCQkgICBrdW5pdF9i
aW5hcnlfcHRyX2Fzc2VydF9mb3JtYXQpLCAgICBcCisJLm9wZXJhdGlvbiA9IG9wX3N0ciwJCQkJ
CQkgICAgICAgXAorCS5sZWZ0X3RleHQgPSBsZWZ0X3N0ciwJCQkJCQkgICAgICAgXAorCS5sZWZ0
X3ZhbHVlID0gbGVmdF92YWwsCQkJCQkJICAgICAgIFwKKwkucmlnaHRfdGV4dCA9IHJpZ2h0X3N0
ciwJCQkJCSAgICAgICBcCisJLnJpZ2h0X3ZhbHVlID0gcmlnaHRfdmFsCQkJCQkgICAgICAgXAor
fQorCisvKioKKyAqIHN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydCAtIEFuIGV4cGVjdGF0
aW9uL2Fzc2VydGlvbiB0aGF0IGNvbXBhcmVzIHR3bworICoJc3RyaW5nIHZhbHVlcyAoZm9yIGV4
YW1wbGUsIEtVTklUX0VYUEVDVF9TVFJFUSh0ZXN0LCBmb28sICJiYXIiKSkuCisgKiBAYXNzZXJ0
OiBUaGUgcGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqIEBvcGVyYXRpb246IEEgc3RyaW5nIHJlcHJl
c2VudGF0aW9uIG9mIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIChlLmcuICI9PSIpLgorICogQGxl
ZnRfdGV4dDogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhl
IGxlZnQgc2xvdC4KKyAqIEBsZWZ0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBv
ZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90LgorICogQHJpZ2h0X3RleHQ6IEEgc3Ry
aW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSByaWdodCBzbG90Lgor
ICogQHJpZ2h0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVz
c2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqCisgKiBSZXByZXNlbnRzIGFuIGV4cGVjdGF0aW9u
L2Fzc2VydGlvbiB0aGF0IGNvbXBhcmVzIHR3byBzdHJpbmcgdmFsdWVzLiBGb3IKKyAqIGV4YW1w
bGUsIHRvIGV4cGVjdCB0aGF0IHRoZSBzdHJpbmcgaW4gZm9vIGlzIGVxdWFsIHRvICJiYXIiLCB5
b3UgY2FuIHVzZSB0aGUKKyAqIGV4cGVjdGF0aW9uIEtVTklUX0VYUEVDVF9TVFJFUSh0ZXN0LCBm
b28sICJiYXIiKTsKKyAqLworc3RydWN0IGt1bml0X2JpbmFyeV9zdHJfYXNzZXJ0IHsKKwlzdHJ1
Y3Qga3VuaXRfYXNzZXJ0IGFzc2VydDsKKwljb25zdCBjaGFyICpvcGVyYXRpb247CisJY29uc3Qg
Y2hhciAqbGVmdF90ZXh0OworCWNvbnN0IGNoYXIgKmxlZnRfdmFsdWU7CisJY29uc3QgY2hhciAq
cmlnaHRfdGV4dDsKKwljb25zdCBjaGFyICpyaWdodF92YWx1ZTsKK307CisKK3ZvaWQga3VuaXRf
YmluYXJ5X3N0cl9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2Vy
dCwKKwkJCQkgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSk7CisKKy8qKgorICogS1VO
SVRfSU5JVF9CSU5BUllfU1RSX0FTU0VSVF9TVFJVQ1QoKSAtIEluaXRpYWxpemVzIGEKKyAqCSZz
dHJ1Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQuCisgKiBAdGVzdDogVGhlIHRlc3QgY2FzZSB0
aGF0IHRoaXMgZXhwZWN0YXRpb24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEB0
eXBlOiBUaGUgdHlwZSAoYXNzZXJ0aW9uIG9yIGV4cGVjdGF0aW9uKSBvZiB0aGlzIGt1bml0X2Fz
c2VydC4KKyAqIEBvcF9zdHI6IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBjb21wYXJp
c29uIG9wZXJhdG9yIChlLmcuICI9PSIpLgorICogQGxlZnRfc3RyOiBBIHN0cmluZyByZXByZXNl
bnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90LgorICogQGxlZnRfdmFs
OiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVm
dCBzbG90LgorICogQHJpZ2h0X3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4
cHJlc3Npb24gaW4gdGhlIHJpZ2h0IHNsb3QuCisgKiBAcmlnaHRfdmFsOiBUaGUgYWN0dWFsIGV2
YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqCisg
KiBJbml0aWFsaXplcyBhICZzdHJ1Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQuIEludGVuZGVk
IHRvIGJlIHVzZWQgaW4KKyAqIEtVTklUX0VYUEVDVF8qIGFuZCBLVU5JVF9BU1NFUlRfKiBtYWNy
b3MuCisgKi8KKyNkZWZpbmUgS1VOSVRfSU5JVF9CSU5BUllfU1RSX0FTU0VSVF9TVFJVQ1QodGVz
dCwJCQkgICAgICAgXAorCQkJCQkgICAgdHlwZSwJCQkgICAgICAgXAorCQkJCQkgICAgb3Bfc3Ry
LAkJCSAgICAgICBcCisJCQkJCSAgICBsZWZ0X3N0ciwJCQkgICAgICAgXAorCQkJCQkgICAgbGVm
dF92YWwsCQkJICAgICAgIFwKKwkJCQkJICAgIHJpZ2h0X3N0ciwJCQkgICAgICAgXAorCQkJCQkg
ICAgcmlnaHRfdmFsKSB7CQkgICAgICAgXAorCS5hc3NlcnQgPSBLVU5JVF9JTklUX0FTU0VSVF9T
VFJVQ1QodGVzdCwJCQkgICAgICAgXAorCQkJCQkgICB0eXBlLAkJCSAgICAgICBcCisJCQkJCSAg
IGt1bml0X2JpbmFyeV9zdHJfYXNzZXJ0X2Zvcm1hdCksICAgIFwKKwkub3BlcmF0aW9uID0gb3Bf
c3RyLAkJCQkJCSAgICAgICBcCisJLmxlZnRfdGV4dCA9IGxlZnRfc3RyLAkJCQkJCSAgICAgICBc
CisJLmxlZnRfdmFsdWUgPSBsZWZ0X3ZhbCwJCQkJCQkgICAgICAgXAorCS5yaWdodF90ZXh0ID0g
cmlnaHRfc3RyLAkJCQkJICAgICAgIFwKKwkucmlnaHRfdmFsdWUgPSByaWdodF92YWwJCQkJCSAg
ICAgICBcCit9CisKKyNlbmRpZiAvKiAgX0tVTklUX0FTU0VSVF9IICovCmRpZmYgLS1naXQgYS9r
dW5pdC9NYWtlZmlsZSBiL2t1bml0L01ha2VmaWxlCmluZGV4IDI3NWI1NjVhMGU4MS4uNmRjYmUz
MDkwMzZiIDEwMDY0NAotLS0gYS9rdW5pdC9NYWtlZmlsZQorKysgYi9rdW5pdC9NYWtlZmlsZQpA
QCAtMSwyICsxLDMgQEAKIG9iai0kKENPTkZJR19LVU5JVCkgKz0JCQl0ZXN0Lm8gXAotCQkJCQlz
dHJpbmctc3RyZWFtLm8KKwkJCQkJc3RyaW5nLXN0cmVhbS5vIFwKKwkJCQkJYXNzZXJ0Lm8KZGlm
ZiAtLWdpdCBhL2t1bml0L2Fzc2VydC5jIGIva3VuaXQvYXNzZXJ0LmMKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi44NjAxM2Q0Y2Y4OTEKLS0tIC9kZXYvbnVsbAorKysg
Yi9rdW5pdC9hc3NlcnQuYwpAQCAtMCwwICsxLDE0MSBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBBc3NlcnRpb24gYW5kIGV4cGVjdGF0aW9uIHNlcmlhbGl6
YXRpb24gQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAqIEF1
dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICovCisj
aW5jbHVkZSA8a3VuaXQvYXNzZXJ0Lmg+CisKK3ZvaWQga3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0
KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVjdCBzdHJp
bmdfc3RyZWFtICpzdHJlYW0pCit7CisJY29uc3QgY2hhciAqZXhwZWN0X29yX2Fzc2VydCA9IE5V
TEw7CisKKwlzd2l0Y2ggKGFzc2VydC0+dHlwZSkgeworCWNhc2UgS1VOSVRfRVhQRUNUQVRJT046
CisJCWV4cGVjdF9vcl9hc3NlcnQgPSAiRVhQRUNUQVRJT04iOworCQlicmVhazsKKwljYXNlIEtV
TklUX0FTU0VSVElPTjoKKwkJZXhwZWN0X29yX2Fzc2VydCA9ICJBU1NFUlRJT04iOworCQlicmVh
azsKKwl9CisKKwlzdHJpbmdfc3RyZWFtX2FkZChzdHJlYW0sICIlcyBGQUlMRUQgYXQgJXM6JWRc
biIsCisJCQkgZXhwZWN0X29yX2Fzc2VydCwgYXNzZXJ0LT5maWxlLCBhc3NlcnQtPmxpbmUpOwor
fQorCit2b2lkIGt1bml0X2Fzc2VydF9wcmludF9tc2coY29uc3Qgc3RydWN0IGt1bml0X2Fzc2Vy
dCAqYXNzZXJ0LAorCQkJICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7CisJaWYg
KGFzc2VydC0+bWVzc2FnZS5mbXQpCisJCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwgIlxuJXBW
IiwgJmFzc2VydC0+bWVzc2FnZSk7Cit9CisKK3ZvaWQga3VuaXRfZmFpbF9hc3NlcnRfZm9ybWF0
KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVjdCBzdHJp
bmdfc3RyZWFtICpzdHJlYW0pCit7CisJa3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFzc2VydCwg
c3RyZWFtKTsKKwlzdHJpbmdfc3RyZWFtX2FkZChzdHJlYW0sICIlcFYiLCAmYXNzZXJ0LT5tZXNz
YWdlKTsKK30KKwordm9pZCBrdW5pdF91bmFyeV9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBr
dW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgICBzdHJ1Y3Qgc3RyaW5nX3N0cmVhbSAqc3Ry
ZWFtKQoreworCXN0cnVjdCBrdW5pdF91bmFyeV9hc3NlcnQgKnVuYXJ5X2Fzc2VydCA9IGNvbnRh
aW5lcl9vZigKKwkJCWFzc2VydCwgc3RydWN0IGt1bml0X3VuYXJ5X2Fzc2VydCwgYXNzZXJ0KTsK
KworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7CisJaWYgKHVuYXJ5
X2Fzc2VydC0+ZXhwZWN0ZWRfdHJ1ZSkKKwkJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJ
CSAiXHRFeHBlY3RlZCAlcyB0byBiZSB0cnVlLCBidXQgaXMgZmFsc2VcbiIsCisJCQkJIHVuYXJ5
X2Fzc2VydC0+Y29uZGl0aW9uKTsKKwllbHNlCisJCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwK
KwkJCQkgIlx0RXhwZWN0ZWQgJXMgdG8gYmUgZmFsc2UsIGJ1dCBpcyB0cnVlXG4iLAorCQkJCSB1
bmFyeV9hc3NlcnQtPmNvbmRpdGlvbik7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQs
IHN0cmVhbSk7Cit9CisKK3ZvaWQga3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0X2Zvcm1hdChjb25z
dCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgICBzdHJ1Y3Qgc3RyaW5nX3N0
cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF9wdHJfbm90X2Vycl9hc3NlcnQgKnB0cl9h
c3NlcnQgPSBjb250YWluZXJfb2YoCisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9wdHJfbm90X2Vy
cl9hc3NlcnQsIGFzc2VydCk7CisKKwlrdW5pdF9iYXNlX2Fzc2VydF9mb3JtYXQoYXNzZXJ0LCBz
dHJlYW0pOworCWlmICghcHRyX2Fzc2VydC0+dmFsdWUpIHsKKwkJc3RyaW5nX3N0cmVhbV9hZGQo
c3RyZWFtLAorCQkJCSAiXHRFeHBlY3RlZCAlcyBpcyBub3QgbnVsbCwgYnV0IGlzXG4iLAorCQkJ
CSBwdHJfYXNzZXJ0LT50ZXh0KTsKKwl9IGVsc2UgaWYgKElTX0VSUihwdHJfYXNzZXJ0LT52YWx1
ZSkpIHsKKwkJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJCSAiXHRFeHBlY3RlZCAlcyBp
cyBub3QgZXJyb3IsIGJ1dCBpczogJWxkXG4iLAorCQkJCSBwdHJfYXNzZXJ0LT50ZXh0LAorCQkJ
CSBQVFJfRVJSKHB0cl9hc3NlcnQtPnZhbHVlKSk7CisJfQorCWt1bml0X2Fzc2VydF9wcmludF9t
c2coYXNzZXJ0LCBzdHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9hc3NlcnRfZm9ybWF0
KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1Y3Qgc3RyaW5nX3N0
cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF9iaW5hcnlfYXNzZXJ0ICpiaW5hcnlfYXNz
ZXJ0ID0gY29udGFpbmVyX29mKAorCQkJYXNzZXJ0LCBzdHJ1Y3Qga3VuaXRfYmluYXJ5X2Fzc2Vy
dCwgYXNzZXJ0KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7
CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJICJcdEV4cGVjdGVkICVzICVzICVzLCBi
dXRcbiIsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAorCQkJIGJpbmFyeV9hc3NlcnQt
Pm9wZXJhdGlvbiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdodF90ZXh0KTsKKwlzdHJpbmdfc3Ry
ZWFtX2FkZChzdHJlYW0sICJcdFx0JXMgPT0gJWxsZFxuIiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5s
ZWZ0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF92YWx1ZSk7CisJc3RyaW5nX3N0cmVh
bV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVsbGQiLAorCQkJIGJpbmFyeV9hc3NlcnQtPnJpZ2h0
X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdmFsdWUpOworCWt1bml0X2Fzc2VydF9w
cmludF9tc2coYXNzZXJ0LCBzdHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9wdHJfYXNz
ZXJ0X2Zvcm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgIHN0
cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0IGt1bml0X2JpbmFyeV9wdHJf
YXNzZXJ0ICpiaW5hcnlfYXNzZXJ0ID0gY29udGFpbmVyX29mKAorCQkJYXNzZXJ0LCBzdHJ1Y3Qg
a3VuaXRfYmluYXJ5X3B0cl9hc3NlcnQsIGFzc2VydCk7CisKKwlrdW5pdF9iYXNlX2Fzc2VydF9m
b3JtYXQoYXNzZXJ0LCBzdHJlYW0pOworCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwKKwkJCSAi
XHRFeHBlY3RlZCAlcyAlcyAlcywgYnV0XG4iLAorCQkJIGJpbmFyeV9hc3NlcnQtPmxlZnRfdGV4
dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5vcGVyYXRpb24sCisJCQkgYmluYXJ5X2Fzc2VydC0+cmln
aHRfdGV4dCk7CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVwS1xuIiwK
KwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF92
YWx1ZSk7CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVwSyIsCisJCQkg
YmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdodF92YWx1
ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQsIHN0cmVhbSk7Cit9CisKK3ZvaWQg
a3VuaXRfYmluYXJ5X3N0cl9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQg
KmFzc2VydCwKKwkJCQkgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSkKK3sKKwlzdHJ1
Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQgKmJpbmFyeV9hc3NlcnQgPSBjb250YWluZXJfb2Yo
CisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydCwgYXNzZXJ0KTsKKwor
CWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7CisJc3RyaW5nX3N0cmVh
bV9hZGQoc3RyZWFtLAorCQkJICJcdEV4cGVjdGVkICVzICVzICVzLCBidXRcbiIsCisJCQkgYmlu
YXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAorCQkJIGJpbmFyeV9hc3NlcnQtPm9wZXJhdGlvbiwKKwkJ
CSBiaW5hcnlfYXNzZXJ0LT5yaWdodF90ZXh0KTsKKwlzdHJpbmdfc3RyZWFtX2FkZChzdHJlYW0s
ICJcdFx0JXMgPT0gJXNcbiIsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAorCQkJIGJp
bmFyeV9hc3NlcnQtPmxlZnRfdmFsdWUpOworCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwgIlx0
XHQlcyA9PSAlcyIsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCwKKwkJCSBiaW5hcnlf
YXNzZXJ0LT5yaWdodF92YWx1ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQsIHN0
cmVhbSk7Cit9Ci0tIAoyLjIzLjAuMTg3LmcxN2Y1Yjc1NTZjLWdvb2cKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QK
ZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
