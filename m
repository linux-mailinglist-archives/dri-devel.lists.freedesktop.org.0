Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9CD2AEFDEE
	for <lists+dri-devel@lfdr.de>; Tue,  5 Nov 2019 14:10:52 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B2F0B6EA46;
	Tue,  5 Nov 2019 13:10:49 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4B6AD6EA46
 for <dri-devel@lists.freedesktop.org>; Tue,  5 Nov 2019 13:10:48 +0000 (UTC)
Received: from rapoport-lnx (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 3BAFB21882;
 Tue,  5 Nov 2019 13:10:38 +0000 (UTC)
Date: Tue, 5 Nov 2019 15:10:34 +0200
From: Mike Rapoport <rppt@kernel.org>
To: John Hubbard <jhubbard@nvidia.com>
Subject: Re: [PATCH v2 05/18] mm/gup: introduce pin_user_pages*() and FOLL_PIN
Message-ID: <20191105131032.GG25005@rapoport-lnx>
References: <20191103211813.213227-1-jhubbard@nvidia.com>
 <20191103211813.213227-6-jhubbard@nvidia.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20191103211813.213227-6-jhubbard@nvidia.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=kernel.org; s=default; t=1572959448;
 bh=vQ3G3gXntK/LDngknBhGWjzSEECHf91Tn3dUHddTs1g=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=uJHNiBXfr/6eTLhAJBmPj0BBfms5QJb6XhqslfHojJdfV1LBbB43tiEggrKjZmSPM
 rCpK6sWp0KoQMwWCivODtZauvu3MOL9N2dVzjgWjQLLpc9Jub5dpx2Y6+rqI8O5RhV
 TJMV4GpKU+emJfOk+0crj53gORAiMuFkUj9rXoqI=
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Michal Hocko <mhocko@suse.com>, Jan Kara <jack@suse.cz>,
 kvm@vger.kernel.org, linux-doc@vger.kernel.org,
 David Airlie <airlied@linux.ie>, Dave Chinner <david@fromorbit.com>,
 dri-devel@lists.freedesktop.org, LKML <linux-kernel@vger.kernel.org>,
 linux-mm@kvack.org, Paul Mackerras <paulus@samba.org>,
 linux-kselftest@vger.kernel.org, Ira Weiny <ira.weiny@intel.com>,
 Jonathan Corbet <corbet@lwn.net>, linux-rdma@vger.kernel.org,
 Michael Ellerman <mpe@ellerman.id.au>, Christoph Hellwig <hch@infradead.org>,
 Jason Gunthorpe <jgg@ziepe.ca>, Vlastimil Babka <vbabka@suse.cz>,
 =?iso-8859-1?Q?Bj=F6rn_T=F6pel?= <bjorn.topel@intel.com>,
 linux-media@vger.kernel.org, Shuah Khan <shuah@kernel.org>,
 linux-block@vger.kernel.org,
 =?iso-8859-1?B?Suly9G1l?= Glisse <jglisse@redhat.com>,
 Al Viro <viro@zeniv.linux.org.uk>, Dan Williams <dan.j.williams@intel.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>, bpf@vger.kernel.org,
 Magnus Karlsson <magnus.karlsson@intel.com>, Jens Axboe <axboe@kernel.dk>,
 netdev@vger.kernel.org, Alex Williamson <alex.williamson@redhat.com>,
 linux-fsdevel@vger.kernel.org, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S . Miller" <davem@davemloft.net>,
 Mike Kravetz <mike.kravetz@oracle.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gU3VuLCBOb3YgMDMsIDIwMTkgYXQgMDE6MTg6MDBQTSAtMDgwMCwgSm9obiBIdWJiYXJkIHdy
b3RlOgo+IEludHJvZHVjZSBwaW5fdXNlcl9wYWdlcyooKSB2YXJpYXRpb25zIG9mIGdldF91c2Vy
X3BhZ2VzKigpIGNhbGxzLAo+IGFuZCBhbHNvIHBpbl9sb25ndGVybV9wYWdlcyooKSB2YXJpYXRp
b25zLgo+IAo+IFRoZXNlIHZhcmlhbnRzIGFsbCBzZXQgRk9MTF9QSU4sIHdoaWNoIGlzIGFsc28g
aW50cm9kdWNlZCwgYW5kCj4gdGhvcm91Z2hseSBkb2N1bWVudGVkLgo+IAo+IFRoZSBwaW5fbG9u
Z3Rlcm0qKCkgdmFyaWFudHMgYWxzbyBzZXQgRk9MTF9MT05HVEVSTSwgaW4gYWRkaXRpb24KPiB0
byBGT0xMX1BJTjoKPiAKPiAgICAgcGluX3VzZXJfcGFnZXMoKQo+ICAgICBwaW5fdXNlcl9wYWdl
c19yZW1vdGUoKQo+ICAgICBwaW5fdXNlcl9wYWdlc19mYXN0KCkKPiAKPiAgICAgcGluX2xvbmd0
ZXJtX3BhZ2VzKCkKPiAgICAgcGluX2xvbmd0ZXJtX3BhZ2VzX3JlbW90ZSgpCj4gICAgIHBpbl9s
b25ndGVybV9wYWdlc19mYXN0KCkKPiAKPiBBbGwgcGFnZXMgdGhhdCBhcmUgcGlubmVkIHZpYSB0
aGUgYWJvdmUgY2FsbHMsIG11c3QgYmUgdW5waW5uZWQgdmlhCj4gcHV0X3VzZXJfcGFnZSgpLgo+
IAo+IFRoZSB1bmRlcmx5aW5nIHJ1bGVzIGFyZToKPiAKPiAqIFRoZXNlIGFyZSBndXAtaW50ZXJu
YWwgZmxhZ3MsIHNvIHRoZSBjYWxsIHNpdGVzIHNob3VsZCBub3QgZGlyZWN0bHkKPiBzZXQgRk9M
TF9QSU4gbm9yIEZPTExfTE9OR1RFUk0uIFRoYXQgYmVoYXZpb3IgaXMgZW5mb3JjZWQgd2l0aAo+
IGFzc2VydGlvbnMsIGZvciB0aGUgbmV3IEZPTExfUElOIGZsYWcuIEhvd2V2ZXIsIGZvciB0aGUg
cHJlLWV4aXN0aW5nCj4gRk9MTF9MT05HVEVSTSBmbGFnLCB3aGljaCBoYXMgc29tZSBjYWxsIHNp
dGVzIHRoYXQgc3RpbGwgZGlyZWN0bHkKPiBzZXQgRk9MTF9MT05HVEVSTSwgdGhlcmUgaXMgbm8g
YXNzZXJ0aW9uIHlldC4KPiAKPiAqIENhbGwgc2l0ZXMgdGhhdCB3YW50IHRvIGluZGljYXRlIHRo
YXQgdGhleSBhcmUgZ29pbmcgdG8gZG8gRGlyZWN0SU8KPiAgICgiRElPIikgb3Igc29tZXRoaW5n
IHdpdGggc2ltaWxhciBjaGFyYWN0ZXJpc3RpY3MsIHNob3VsZCBjYWxsIGEKPiAgIGdldF91c2Vy
X3BhZ2VzKCktbGlrZSB3cmFwcGVyIGNhbGwgdGhhdCBzZXRzIEZPTExfUElOLiBUaGVzZSB3cmFw
cGVycwo+ICAgd2lsbDoKPiAgICAgICAgICogU3RhcnQgd2l0aCAicGluX3VzZXJfcGFnZXMiIGlu
c3RlYWQgb2YgImdldF91c2VyX3BhZ2VzIi4gVGhhdAo+ICAgICAgICAgICBtYWtlcyBpdCBlYXN5
IHRvIGZpbmQgYW5kIGF1ZGl0IHRoZSBjYWxsIHNpdGVzLgo+ICAgICAgICAgKiBTZXQgRk9MTF9Q
SU4KPiAKPiAqIEZvciBwYWdlcyB0aGF0IGFyZSByZWNlaXZlZCB2aWEgRk9MTF9QSU4sIHRob3Nl
IHBhZ2VzIG11c3QgYmUgcmV0dXJuZWQKPiAgIHZpYSBwdXRfdXNlcl9wYWdlKCkuCj4gCj4gVGhh
bmtzIHRvIEphbiBLYXJhIGFuZCBWbGFzdGltaWwgQmFia2EgZm9yIGV4cGxhaW5pbmcgdGhlIDQg
Y2FzZXMKPiBpbiB0aGlzIGRvY3VtZW50YXRpb24uIChJJ3ZlIHJld29yZGVkIGl0IGFuZCBleHBh
bmRlZCBvbiBpdCBzbGlnaHRseS4pCj4gCj4gQ2M6IEpvbmF0aGFuIENvcmJldCA8Y29yYmV0QGx3
bi5uZXQ+Cj4gQ2M6IElyYSBXZWlueSA8aXJhLndlaW55QGludGVsLmNvbT4KPiBTaWduZWQtb2Zm
LWJ5OiBKb2huIEh1YmJhcmQgPGpodWJiYXJkQG52aWRpYS5jb20+Cj4gLS0tCj4gIERvY3VtZW50
YXRpb24vdm0vaW5kZXgucnN0ICAgICAgICAgIHwgICAxICsKPiAgRG9jdW1lbnRhdGlvbi92bS9w
aW5fdXNlcl9wYWdlcy5yc3QgfCAyMTIgKysrKysrKysrKysrKysrKysrKysrKwoKSSB0aGluayBp
dCBiZWxvbmdzIHRvIERvY3VtZW50YXRpb24vY29yZS1hcGkuCgo+ICBpbmNsdWRlL2xpbnV4L21t
LmggICAgICAgICAgICAgICAgICB8ICA2MiArKysrKystCj4gIG1tL2d1cC5jICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgMjY1ICsrKysrKysrKysrKysrKysrKysrKysrKystLS0KPiAgNCBm
aWxlcyBjaGFuZ2VkLCA1MTQgaW5zZXJ0aW9ucygrKSwgMjYgZGVsZXRpb25zKC0pCj4gIGNyZWF0
ZSBtb2RlIDEwMDY0NCBEb2N1bWVudGF0aW9uL3ZtL3Bpbl91c2VyX3BhZ2VzLnJzdAo+IAo+IGRp
ZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3ZtL2luZGV4LnJzdCBiL0RvY3VtZW50YXRpb24vdm0v
aW5kZXgucnN0Cj4gaW5kZXggZThkOTQzYjIxY2Y5Li43MTk0ZWZhMzU1NGEgMTAwNjQ0Cj4gLS0t
IGEvRG9jdW1lbnRhdGlvbi92bS9pbmRleC5yc3QKPiArKysgYi9Eb2N1bWVudGF0aW9uL3ZtL2lu
ZGV4LnJzdAo+IEBAIC00NCw2ICs0NCw3IEBAIGRlc2NyaXB0aW9ucyBvZiBkYXRhIHN0cnVjdHVy
ZXMgYW5kIGFsZ29yaXRobXMuCj4gICAgIHBhZ2VfbWlncmF0aW9uCj4gICAgIHBhZ2VfZnJhZ3MK
PiAgICAgcGFnZV9vd25lcgo+ICsgICBwaW5fdXNlcl9wYWdlcwo+ICAgICByZW1hcF9maWxlX3Bh
Z2VzCj4gICAgIHNsdWIKPiAgICAgc3BsaXRfcGFnZV90YWJsZV9sb2NrCj4gZGlmZiAtLWdpdCBh
L0RvY3VtZW50YXRpb24vdm0vcGluX3VzZXJfcGFnZXMucnN0IGIvRG9jdW1lbnRhdGlvbi92bS9w
aW5fdXNlcl9wYWdlcy5yc3QKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+IGluZGV4IDAwMDAwMDAw
MDAwMC4uMzkxMGY0OWNhOThjCj4gLS0tIC9kZXYvbnVsbAo+ICsrKyBiL0RvY3VtZW50YXRpb24v
dm0vcGluX3VzZXJfcGFnZXMucnN0Cj4gQEAgLTAsMCArMSwyMTIgQEAKPiArLi4gU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKPiArCj4gKz09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KPiArcGluX3VzZXJfcGFnZXMoKSBhbmQgcmVsYXRl
ZCBjYWxscwo+ICs9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09CgpJIGtub3cgdGhpcyBpcyB0b28gbXVjaCB0byBhc2ssIGJ1dCBoYXZpbmcgcGluX3Vz
ZXJfcGFnZXMoKSBhIHBhcnQgb2YgbW9yZQpnZW5lcmFsIEdVUCBkZXNjcmlwdGlvbiB3b3VsZCBi
ZSByZWFsbHkgZ3JlYXQgOikKCj4gKwo+ICsuLiBjb250ZW50czo6IDpsb2NhbDoKPiArCj4gK092
ZXJ2aWV3Cj4gKz09PT09PT09Cj4gKwo+ICtUaGlzIGRvY3VtZW50IGRlc2NyaWJlcyB0aGUgZm9s
bG93aW5nIGZ1bmN0aW9uczogOjoKPiArCj4gKyBwaW5fdXNlcl9wYWdlcwo+ICsgcGluX3VzZXJf
cGFnZXNfZmFzdAo+ICsgcGluX3VzZXJfcGFnZXNfcmVtb3RlCj4gKwo+ICsgcGluX2xvbmd0ZXJt
X3BhZ2VzCj4gKyBwaW5fbG9uZ3Rlcm1fcGFnZXNfZmFzdAo+ICsgcGluX2xvbmd0ZXJtX3BhZ2Vz
X3JlbW90ZQo+ICsKPiArQmFzaWMgZGVzY3JpcHRpb24gb2YgRk9MTF9QSU4KPiArPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KPiArCj4gK0EgbmV3IGZsYWcgZm9yIGdldF91c2VyX3BhZ2Vz
ICgiZ3VwIikgaGFzIGJlZW4gYWRkZWQ6IEZPTExfUElOLiBGT0xMX1BJTiBoYXMKCkNvbnNpZGVy
IHJlYWRpbmcgdGhpcyBhZnRlciwgc2F5LCBoYWxmIGEgeWVhciA7LSkKCj4gK3NpZ25pZmljYW50
IGludGVyYWN0aW9ucyBhbmQgaW50ZXJkZXBlbmRlbmNpZXMgd2l0aCBGT0xMX0xPTkdURVJNLCBz
byBib3RoIGFyZQo+ICtjb3ZlcmVkIGhlcmUuCj4gKwo+ICtCb3RoIEZPTExfUElOIGFuZCBGT0xM
X0xPTkdURVJNIGFyZSAiaW50ZXJuYWwiIHRvIGd1cCwgbWVhbmluZyB0aGF0IG5laXRoZXIKPiAr
Rk9MTF9QSU4gbm9yIEZPTExfTE9OR1RFUk0gc2hvdWxkIG5vdCBhcHBlYXIgYXQgdGhlIGd1cCBj
YWxsIHNpdGVzLiBUaGlzIGFsbG93cwo+ICt0aGUgYXNzb2NpYXRlZCB3cmFwcGVyIGZ1bmN0aW9u
cyAgKHBpbl91c2VyX3BhZ2VzIGFuZCBvdGhlcnMpIHRvIHNldCB0aGUgY29ycmVjdAo+ICtjb21i
aW5hdGlvbiBvZiB0aGVzZSBmbGFncywgYW5kIHRvIGNoZWNrIGZvciBwcm9ibGVtcyBhcyB3ZWxs
Lgo+ICsKPiArRk9MTF9QSU4gYW5kIEZPTExfR0VUIGFyZSBtdXR1YWxseSBleGNsdXNpdmUgZm9y
IGEgZ2l2ZW4gZ3VwIGNhbGwuIEhvd2V2ZXIsCj4gK211bHRpcGxlIHRocmVhZHMgYW5kIGNhbGwg
c2l0ZXMgYXJlIGZyZWUgdG8gcGluIHRoZSBzYW1lIHN0cnVjdCBwYWdlcywgdmlhIGJvdGgKPiAr
Rk9MTF9QSU4gYW5kIEZPTExfR0VULiBJdCdzIGp1c3QgdGhlIGNhbGwgc2l0ZSB0aGF0IG5lZWRz
IHRvIGNob29zZSBvbmUgb3IgdGhlCj4gK290aGVyLCBub3QgdGhlIHN0cnVjdCBwYWdlKHMpLgo+
ICsKPiArVGhlIEZPTExfUElOIGltcGxlbWVudGF0aW9uIGlzIG5lYXJseSB0aGUgc2FtZSBhcyBG
T0xMX0dFVCwgZXhjZXB0IHRoYXQgRk9MTF9QSU4KPiArdXNlcyBhIGRpZmZlcmVudCByZWZlcmVu
Y2UgY291bnRpbmcgdGVjaG5pcXVlLgo+ICsKPiArRk9MTF9QSU4gaXMgYSBwcmVyZXF1aXNpdGUg
dG8gRk9MTF9MT05HVEdFUk0uIEFub3RoZXIgd2F5IG9mIHNheWluZyB0aGF0IGlzLAo+ICtGT0xM
X0xPTkdURVJNIGlzIGEgc3BlY2lmaWMgY2FzZSwgbW9yZSByZXN0cmljdGl2ZSBjYXNlIG9mIEZP
TExfUElOLgo+ICsKPiArV2hpY2ggZmxhZ3MgYXJlIHNldCBieSBlYWNoIHdyYXBwZXIKPiArPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KPiArCj4gK09ubHkgRk9MTF9QSU4gYW5k
IEZPTExfTE9OR1RFUk0gYXJlIGNvdmVyZWQgaGVyZS4gVGhlc2UgZmxhZ3MgYXJlIGFkZGVkIHRv
Cj4gK3doYXRldmVyIGZsYWdzIHRoZSBjYWxsZXIgcHJvdmlkZXM6Ogo+ICsKPiArIEZ1bmN0aW9u
ICAgICAgICAgICAgICAgICAgICBndXAgZmxhZ3MgKEZPTExfUElOIG9yIEZPTExfTE9OR1RFUk0g
b25seSkKPiArIC0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KPiArIHBpbl91c2VyX3BhZ2VzICAgICAgICAgICAgICBG
T0xMX1BJTgo+ICsgcGluX3VzZXJfcGFnZXNfZmFzdCAgICAgICAgIEZPTExfUElOCj4gKyBwaW5f
dXNlcl9wYWdlc19yZW1vdGUgICAgICAgRk9MTF9QSU4KPiArCj4gKyBwaW5fbG9uZ3Rlcm1fcGFn
ZXMgICAgICAgICAgRk9MTF9QSU4gfCBGT0xMX0xPTkdURVJNCj4gKyBwaW5fbG9uZ3Rlcm1fcGFn
ZXNfZmFzdCAgICAgRk9MTF9QSU4gfCBGT0xMX0xPTkdURVJNCj4gKyBwaW5fbG9uZ3Rlcm1fcGFn
ZXNfcmVtb3RlICAgRk9MTF9QSU4gfCBGT0xMX0xPTkdURVJNCj4gKwo+ICtUcmFja2luZyBkbWEt
cGlubmVkIHBhZ2VzCj4gKz09PT09PT09PT09PT09PT09PT09PT09PT0KPiArCj4gK1NvbWUgb2Yg
dGhlIGtleSBkZXNpZ24gY29uc3RyYWludHMsIGFuZCBzb2x1dGlvbnMsIGZvciB0cmFja2luZyBk
bWEtcGlubmVkCj4gK3BhZ2VzOgo+ICsKPiArKiBBbiBhY3R1YWwgcmVmZXJlbmNlIGNvdW50LCBw
ZXIgc3RydWN0IHBhZ2UsIGlzIHJlcXVpcmVkLiBUaGlzIGlzIGJlY2F1c2UKPiArICBtdWx0aXBs
ZSBwcm9jZXNzZXMgbWF5IHBpbiBhbmQgdW5waW4gYSBwYWdlLgo+ICsKPiArKiBGYWxzZSBwb3Np
dGl2ZXMgKHJlcG9ydGluZyB0aGF0IGEgcGFnZSBpcyBkbWEtcGlubmVkLCB3aGVuIGluIGZhY3Qg
aXQgaXMgbm90KQo+ICsgIGFyZSBhY2NlcHRhYmxlLCBidXQgZmFsc2UgbmVnYXRpdmVzIGFyZSBu
b3QuCj4gKwo+ICsqIHN0cnVjdCBwYWdlIG1heSBub3QgYmUgaW5jcmVhc2VkIGluIHNpemUgZm9y
IHRoaXMsIGFuZCBhbGwgZmllbGRzIGFyZSBhbHJlYWR5Cj4gKyAgdXNlZC4KPiArCj4gKyogR2l2
ZW4gdGhlIGFib3ZlLCB3ZSBjYW4gb3ZlcmxvYWQgdGhlIHBhZ2UtPl9yZWZjb3VudCBmaWVsZCBi
eSB1c2luZywgc29ydCBvZiwKPiArICB0aGUgdXBwZXIgYml0cyBpbiB0aGF0IGZpZWxkIGZvciBh
IGRtYS1waW5uZWQgY291bnQuICJTb3J0IG9mIiwgbWVhbnMgdGhhdCwKPiArICByYXRoZXIgdGhh
biBkaXZpZGluZyBwYWdlLT5fcmVmY291bnQgaW50byBiaXQgZmllbGRzLCB3ZSBzaW1wbGUgYWRk
IGEgbWVkaXVtLQo+ICsgIGxhcmdlIHZhbHVlIChHVVBfUElOX0NPVU5USU5HX0JJQVMsIGluaXRp
YWxseSBjaG9zZW4gdG8gYmUgMTAyNDogMTAgYml0cykgdG8KPiArICBwYWdlLT5fcmVmY291bnQu
IFRoaXMgcHJvdmlkZXMgZnV6enkgYmVoYXZpb3I6IGlmIGEgcGFnZSBoYXMgZ2V0X3BhZ2UoKSBj
YWxsZWQKPiArICBvbiBpdCAxMDI0IHRpbWVzLCB0aGVuIGl0IHdpbGwgYXBwZWFyIHRvIGhhdmUg
YSBzaW5nbGUgZG1hLXBpbm5lZCBjb3VudC4KPiArICBBbmQgYWdhaW4sIHRoYXQncyBhY2NlcHRh
YmxlLgo+ICsKPiArVGhpcyBhbHNvIGxlYWRzIHRvIGxpbWl0YXRpb25zOiB0aGVyZSBhcmUgb25s
eSAzMS0xMD09MjEgYml0cyBhdmFpbGFibGUgZm9yIGEKPiArY291bnRlciB0aGF0IGluY3JlbWVu
dHMgMTAgYml0cyBhdCBhIHRpbWUuCj4gKwo+ICtUT0RPOiBmb3IgMUdCIGFuZCBsYXJnZXIgaHVn
ZSBwYWdlcywgdGhpcyBpcyBjdXR0aW5nIGl0IGNsb3NlLiBUaGF0J3MgYmVjYXVzZQo+ICt3aGVu
IHBpbl91c2VyX3BhZ2VzKCkgZm9sbG93cyBzdWNoIHBhZ2VzLCBpdCBpbmNyZW1lbnRzIHRoZSBo
ZWFkIHBhZ2UgYnkgIjEiCj4gKyh3aGVyZSAiMSIgdXNlZCB0byBtZWFuICIrMSIgZm9yIGdldF91
c2VyX3BhZ2VzKCksIGJ1dCBub3cgbWVhbnMgIisxMDI0IiBmb3IKPiArcGluX3VzZXJfcGFnZXMo
KSkgZm9yIGVhY2ggdGFpbCBwYWdlLiBTbyBpZiB5b3UgaGF2ZSBhIDFHQiBodWdlIHBhZ2U6Cj4g
Kwo+ICsqIFRoZXJlIGFyZSAyNTZLICgxOCBiaXRzKSB3b3J0aCBvZiA0IEtCIHRhaWwgcGFnZXMu
Cj4gKyogVGhlcmUgYXJlIDIxIGJpdHMgYXZhaWxhYmxlIHRvIGNvdW50IHVwIHZpYSBHVVBfUElO
X0NPVU5USU5HX0JJQVMgKHRoYXQgaXMsCj4gKyAgMTAgYml0cyBhdCBhIHRpbWUpCj4gKyogVGhl
cmUgYXJlIDIxIC0gMTggPT0gMyBiaXRzIGF2YWlsYWJsZSB0byBjb3VudC4gRXhjZXB0IHRoYXQg
dGhlcmUgYXJlbid0LAo+ICsgIGJlY2F1c2UgeW91IG5lZWQgdG8gYWxsb3cgZm9yIGEgZmV3IG5v
cm1hbCBnZXRfcGFnZSgpIGNhbGxzIG9uIHRoZSBoZWFkIHBhZ2UsCj4gKyAgYXMgd2VsbC4gRm9y
dHVuYXRlbHksIHRoZSBhcHByb2FjaCBvZiB1c2luZyBhZGRpdGlvbiwgcmF0aGVyIHRoYW4gImhh
cmQiCj4gKyAgYml0ZmllbGRzLCB3aXRoaW4gcGFnZS0+X3JlZmNvdW50LCBhbGxvd3MgZm9yIHNo
YXJpbmcgdGhlc2UgYml0cyBncmFjZWZ1bGx5Lgo+ICsgIEJ1dCB3ZSdyZSBzdGlsbCBsb29raW5n
IGF0IGFib3V0IDggcmVmZXJlbmNlcy4KPiArCj4gK1RoaXMsIGhvd2V2ZXIsIGlzIGEgbWlzc2lu
ZyBmZWF0dXJlIG1vcmUgdGhhbiBhbnl0aGluZyBlbHNlLCBiZWNhdXNlIGl0J3MgZWFzaWx5Cj4g
K3NvbHZlZCBieSBhZGRyZXNzaW5nIGFuIG9idmlvdXMgaW5lZmZpY2llbmN5IGluIHRoZSBvcmln
aW5hbCBnZXRfdXNlcl9wYWdlcygpCj4gK2FwcHJvYWNoIG9mIHJldHJpZXZpbmcgcGFnZXM6IHN0
b3AgdHJlYXRpbmcgYWxsIHRoZSBwYWdlcyBhcyBpZiB0aGV5IHdlcmUKPiArUEFHRV9TSVpFLiBS
ZXRyaWV2ZSBodWdlIHBhZ2VzIGFzIGh1Z2UgcGFnZXMuIFRoZSBjYWxsZXJzIG5lZWQgdG8gYmUg
YXdhcmUgb2YKPiArdGhpcywgc28gc29tZSB3b3JrIGlzIHJlcXVpcmVkLiBPbmNlIHRoYXQncyBp
biBwbGFjZSwgdGhpcyBsaW1pdGF0aW9uIG1vc3RseQo+ICtkaXNhcHBlYXJzIGZyb20gdmlldywg
YmVjYXVzZSB0aGVyZSB3aWxsIGJlIGFtcGxlIHJlZmNvdW50aW5nIHJhbmdlIGF2YWlsYWJsZS4K
PiArCj4gKyogQ2FsbGVycyBtdXN0IHNwZWNpZmljYWxseSByZXF1ZXN0ICJkbWEtcGlubmVkIHRy
YWNraW5nIG9mIHBhZ2VzIi4gSW4gb3RoZXIKPiArICB3b3JkcywganVzdCBjYWxsaW5nIGdldF91
c2VyX3BhZ2VzKCkgd2lsbCBub3Qgc3VmZmljZTsgYSBuZXcgc2V0IG9mIGZ1bmN0aW9ucywKPiAr
ICBwaW5fdXNlcl9wYWdlKCkgYW5kIHJlbGF0ZWQsIG11c3QgYmUgdXNlZC4KPiArCj4gK0ZPTExf
UElOLCBGT0xMX0dFVCwgRk9MTF9MT05HVEVSTTogd2hlbiB0byB1c2Ugd2hpY2ggZmxhZ3MKPiAr
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQo+ICsKPiArVGhhbmtzIHRvIEphbiBLYXJhLCBWbGFzdGltaWwgQmFia2EgYW5kIHNldmVyYWwg
b3RoZXIgLW1tIHBlb3BsZSwgZm9yIGRlc2NyaWJpbmcKPiArdGhlc2UgY2F0ZWdvcmllczoKPiAr
Cj4gK0NBU0UgMTogRGlyZWN0IElPIChESU8pCj4gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCj4g
K1RoZXJlIGFyZSBHVVAgcmVmZXJlbmNlcyB0byBwYWdlcyB0aGF0IGFyZSBzZXJ2aW5nCj4gK2Fz
IERJTyBidWZmZXJzLiBUaGVzZSBidWZmZXJzIGFyZSBuZWVkZWQgZm9yIGEgcmVsYXRpdmVseSBz
aG9ydCB0aW1lIChzbyB0aGV5Cj4gK2FyZSBub3QgImxvbmcgdGVybSIpLiBObyBzcGVjaWFsIHN5
bmNocm9uaXphdGlvbiB3aXRoIHBhZ2VfbWtjbGVhbigpIG9yCj4gK211bm1hcCgpIGlzIHByb3Zp
ZGVkLiBUaGVyZWZvcmUsIGZsYWdzIHRvIHNldCBhdCB0aGUgY2FsbCBzaXRlIGFyZTogOjoKPiAr
Cj4gKyAgICBGT0xMX1BJTgo+ICsKPiArLi4uYnV0IHJhdGhlciB0aGFuIHNldHRpbmcgRk9MTF9Q
SU4gZGlyZWN0bHksIGNhbGwgc2l0ZXMgc2hvdWxkIHVzZSBvbmUgb2YKPiArdGhlIHBpbl91c2Vy
X3BhZ2VzKigpIHJvdXRpbmVzIHRoYXQgc2V0IEZPTExfUElOLgo+ICsKPiArQ0FTRSAyOiBSRE1B
Cj4gKy0tLS0tLS0tLS0tLQo+ICtUaGVyZSBhcmUgR1VQIHJlZmVyZW5jZXMgdG8gcGFnZXMgdGhh
dCBhcmUgc2VydmluZyBhcyBETUEKPiArYnVmZmVycy4gVGhlc2UgYnVmZmVycyBhcmUgbmVlZGVk
IGZvciBhIGxvbmcgdGltZSAoImxvbmcgdGVybSIpLiBObyBzcGVjaWFsCj4gK3N5bmNocm9uaXph
dGlvbiB3aXRoIHBhZ2VfbWtjbGVhbigpIG9yIG11bm1hcCgpIGlzIHByb3ZpZGVkLiBUaGVyZWZv
cmUsIGZsYWdzCj4gK3RvIHNldCBhdCB0aGUgY2FsbCBzaXRlIGFyZTogOjoKPiArCj4gKyAgICBG
T0xMX1BJTiB8IEZPTExfTE9OR1RFUk0KPiArCj4gK05PVEU6IFNvbWUgcGFnZXMsIHN1Y2ggYXMg
REFYIHBhZ2VzLCBjYW5ub3QgYmUgcGlubmVkIHdpdGggbG9uZ3Rlcm0gcGlucy4gVGhhdCdzCj4g
K2JlY2F1c2UgREFYIHBhZ2VzIGRvIG5vdCBoYXZlIGEgc2VwYXJhdGUgcGFnZSBjYWNoZSwgYW5k
IHNvICJwaW5uaW5nIiBpbXBsaWVzCj4gK2xvY2tpbmcgZG93biBmaWxlIHN5c3RlbSBibG9ja3Ms
IHdoaWNoIGlzIG5vdCAoeWV0KSBzdXBwb3J0ZWQgaW4gdGhhdCB3YXkuCj4gKwo+ICtDQVNFIDM6
IE9EUAo+ICstLS0tLS0tLS0tLQo+ICsoTWVsbGFub3gvSW5maW5pYmFuZCBPbiBEZW1hbmQgUGFn
aW5nOiB0aGUgaGFyZHdhcmUgc3VwcG9ydHMKPiArcmVwbGF5YWJsZSBwYWdlIGZhdWx0aW5nKS4g
VGhlcmUgYXJlIEdVUCByZWZlcmVuY2VzIHRvIHBhZ2VzIHNlcnZpbmcgYXMgRE1BCj4gK2J1ZmZl
cnMuIEZvciBPRFAsIE1NVSBub3RpZmllcnMgYXJlIHVzZWQgdG8gc3luY2hyb25pemUgd2l0aCBw
YWdlX21rY2xlYW4oKQo+ICthbmQgbXVubWFwKCkuIFRoZXJlZm9yZSwgbm9ybWFsIEdVUCBjYWxs
cyBhcmUgc3VmZmljaWVudCwgc28gbmVpdGhlciBmbGFnCj4gK25lZWRzIHRvIGJlIHNldC4KPiAr
Cj4gK0NBU0UgNDogUGlubmluZyBmb3Igc3RydWN0IHBhZ2UgbWFuaXB1bGF0aW9uIG9ubHkKPiAr
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo+ICtIZXJl
LCBub3JtYWwgR1VQIGNhbGxzIGFyZSBzdWZmaWNpZW50LCBzbyBuZWl0aGVyIGZsYWcgbmVlZHMg
dG8gYmUgc2V0Lgo+ICsKPiArcGFnZV9kbWFfcGlubmVkKCk6IHRoZSB3aG9sZSBwb2ludCBvZiBw
aW5uaW5nCj4gKz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQo+
ICsKPiArVGhlIHdob2xlIHBvaW50IG9mIG1hcmtpbmcgcGFnZXMgYXMgIkRNQS1waW5uZWQiIG9y
ICJndXAtcGlubmVkIiBpcyB0byBiZSBhYmxlCj4gK3RvIHF1ZXJ5LCAiaXMgdGhpcyBwYWdlIERN
QS1waW5uZWQ/IiBUaGF0IGFsbG93cyBjb2RlIHN1Y2ggYXMgcGFnZV9ta2NsZWFuKCkKPiArKGFu
ZCBmaWxlIHN5c3RlbSB3cml0ZWJhY2sgY29kZSBpbiBnZW5lcmFsKSB0byBtYWtlIGluZm9ybWVk
IGRlY2lzaW9ucyBhYm91dAo+ICt3aGF0IHRvIGRvIHdoZW4gYSBwYWdlIGNhbm5vdCBiZSB1bm1h
cHBlZCBkdWUgdG8gc3VjaCBwaW5zLgo+ICsKPiArV2hhdCB0byBkbyBpbiB0aG9zZSBjYXNlcyBp
cyB0aGUgc3ViamVjdCBvZiBhIHllYXJzLWxvbmcgc2VyaWVzIG9mIGRpc2N1c3Npb25zCj4gK2Fu
ZCBkZWJhdGVzIChzZWUgdGhlIFJlZmVyZW5jZXMgYXQgdGhlIGVuZCBvZiB0aGlzIGRvY3VtZW50
KS4gSXQncyBhIFRPRE8gaXRlbQo+ICtoZXJlOiBmaWxsIGluIHRoZSBkZXRhaWxzIG9uY2UgdGhh
dCdzIHdvcmtlZCBvdXQuIE1lYW53aGlsZSwgaXQncyBzYWZlIHRvIHNheQo+ICt0aGF0IGhhdmlu
ZyB0aGlzIGF2YWlsYWJsZTogOjoKPiArCj4gKyAgICAgICAgc3RhdGljIGlubGluZSBib29sIHBh
Z2VfZG1hX3Bpbm5lZChzdHJ1Y3QgcGFnZSAqcGFnZSkKPiArCj4gKy4uLmlzIGEgcHJlcmVxdWlz
aXRlIHRvIHNvbHZpbmcgdGhlIGxvbmctcnVubmluZyBndXArRE1BIHByb2JsZW0uCj4gKwo+ICtB
bm90aGVyIHdheSBvZiB0aGlua2luZyBhYm91dCBGT0xMX0dFVCwgRk9MTF9QSU4sIGFuZCBGT0xM
X0xPTkdURVJNCj4gKz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KPiArCj4gK0Fub3RoZXIgd2F5IG9mIHRoaW5raW5nIGFi
b3V0IHRoZXNlIGZsYWdzIGlzIGFzIGEgcHJvZ3Jlc3Npb24gb2YgcmVzdHJpY3Rpb25zOgo+ICtG
T0xMX0dFVCBpcyBmb3Igc3RydWN0IHBhZ2UgbWFuaXB1bGF0aW9uLCB3aXRob3V0IGFmZmVjdGlu
ZyB0aGUgZGF0YSB0aGF0IHRoZQo+ICtzdHJ1Y3QgcGFnZSByZWZlcnMgdG8uIEZPTExfUElOIGlz
IGEgKnJlcGxhY2VtZW50KiBmb3IgRk9MTF9HRVQsIGFuZCBpcyBmb3IKPiArc2hvcnQgdGVybSBw
aW5zIG9uIHBhZ2VzIHdob3NlIGRhdGEgKndpbGwqIGdldCBhY2Nlc3NlZC4gQXMgc3VjaCwgRk9M
TF9QSU4gaXMKPiArYSAibW9yZSBzZXZlcmUiIGZvcm0gb2YgcGlubmluZy4gQW5kIGZpbmFsbHks
IEZPTExfTE9OR1RFUk0gaXMgYW4gZXZlbiBtb3JlCj4gK3Jlc3RyaWN0aXZlIGNhc2UgdGhhdCBo
YXMgRk9MTF9QSU4gYXMgYSBwcmVyZXF1aXNpdGU6IHRoaXMgaXMgZm9yIHBhZ2VzIHRoYXQKPiAr
d2lsbCBiZSBwaW5uZWQgbG9uZ3Rlcm0sIGFuZCB3aG9zZSBkYXRhIHdpbGwgYmUgYWNjZXNzZWQu
Cj4gKwo+ICtVbml0IHRlc3RpbmcKPiArPT09PT09PT09PT09Cj4gK1RoaXMgZmlsZTo6Cj4gKwo+
ICsgdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvdm0vZ3VwX2JlbmNobWFyay5jCj4gKwo+ICtoYXMg
dGhlIGZvbGxvd2luZyBuZXcgY2FsbHMgdG8gZXhlcmNpc2UgdGhlIG5ldyBwaW4qKCkgd3JhcHBl
ciBmdW5jdGlvbnM6Cj4gKwo+ICsqIFBJTl9GQVNUX0JFTkNITUFSSyAoLi9ndXBfYmVuY2htYXJr
IC1hKQo+ICsqIFBJTl9MT05HVEVSTV9CRU5DSE1BUksgKC4vZ3VwX2JlbmNobWFyayAtYSkKPiAr
KiBQSU5fQkVOQ0hNQVJLICguL2d1cF9iZW5jaG1hcmsgLWEpCj4gKwo+ICtZb3UgY2FuIG1vbml0
b3IgaG93IG1hbnkgdG90YWwgZG1hLXBpbm5lZCBwYWdlcyBoYXZlIGJlZW4gYWNxdWlyZWQgYW5k
IHJlbGVhc2VkCj4gK3NpbmNlIHRoZSBzeXN0ZW0gd2FzIGJvb3RlZCwgdmlhIHR3byBuZXcgL3By
b2Mvdm1zdGF0IGVudHJpZXM6IDo6Cj4gKwo+ICsgICAgL3Byb2Mvdm1zdGF0L25yX2ZvbGxfcGlu
X3JlcXVlc3RlZAo+ICsgICAgL3Byb2Mvdm1zdGF0L25yX2ZvbGxfcGluX3JlcXVlc3RlZAo+ICsK
PiArVGhvc2UgYXJlIGJvdGggZ29pbmcgdG8gc2hvdyB6ZXJvLCB1bmxlc3MgQ09ORklHX0RFQlVH
X1ZNIGlzIHNldC4gVGhpcyBpcwo+ICtiZWNhdXNlIHRoZXJlIGlzIGEgbm90aWNlYWJsZSBwZXJm
b3JtYW5jZSBkcm9wIGluIHB1dF91c2VyX3BhZ2UoKSwgd2hlbiB0aGV5Cj4gK2FyZSBhY3RpdmF0
ZWQuCj4gKwo+ICtSZWZlcmVuY2VzCj4gKz09PT09PT09PT0KPiArCj4gKyogYFNvbWUgc2xvdyBw
cm9ncmVzcyBvbiBnZXRfdXNlcl9wYWdlcygpIChBcHIgMiwgMjAxOSkgPGh0dHBzOi8vbHduLm5l
dC9BcnRpY2xlcy83ODQ1NzQvPmBfCj4gKyogYERNQSBhbmQgZ2V0X3VzZXJfcGFnZXMoKSAoTFBD
OiBEZWMgMTIsIDIwMTgpIDxodHRwczovL2x3bi5uZXQvQXJ0aWNsZXMvNzc0NDExLz5gXwo+ICsq
IGBUaGUgdHJvdWJsZSB3aXRoIGdldF91c2VyX3BhZ2VzKCkgKEFwciAzMCwgMjAxOCkgPGh0dHBz
Oi8vbHduLm5ldC9BcnRpY2xlcy83NTMwMjcvPmBfCj4gKwo+ICtKb2huIEh1YmJhcmQsIE9jdG9i
ZXIsIDIwMTkKPiBkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9tbS5oIGIvaW5jbHVkZS9saW51
eC9tbS5oCj4gaW5kZXggY2MyOTIyNzNlNmJhLi5jZGZiNmZlZGIyNzEgMTAwNjQ0Cj4gLS0tIGEv
aW5jbHVkZS9saW51eC9tbS5oCj4gKysrIGIvaW5jbHVkZS9saW51eC9tbS5oCj4gQEAgLTE1MjYs
OSArMTUyNiwyMyBAQCBsb25nIGdldF91c2VyX3BhZ2VzX3JlbW90ZShzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnRzaywgc3RydWN0IG1tX3N0cnVjdCAqbW0sCj4gIAkJCSAgICB1bnNpZ25lZCBsb25nIHN0
YXJ0LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAo+ICAJCQkgICAgdW5zaWduZWQgaW50IGd1cF9m
bGFncywgc3RydWN0IHBhZ2UgKipwYWdlcywKPiAgCQkJICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVj
dCAqKnZtYXMsIGludCAqbG9ja2VkKTsKPiArbG9uZyBwaW5fdXNlcl9wYWdlc19yZW1vdGUoc3Ry
dWN0IHRhc2tfc3RydWN0ICp0c2ssIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLAo+ICsJCQkgICB1bnNp
Z25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAo+ICsJCQkgICB1bnNpZ25l
ZCBpbnQgZ3VwX2ZsYWdzLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAo+ICsJCQkgICBzdHJ1Y3Qgdm1f
YXJlYV9zdHJ1Y3QgKip2bWFzLCBpbnQgKmxvY2tlZCk7Cj4gK2xvbmcgcGluX2xvbmd0ZXJtX3Bh
Z2VzX3JlbW90ZShzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywgc3RydWN0IG1tX3N0cnVjdCAqbW0s
Cj4gKwkJCSAgICAgICB1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2Vz
LAo+ICsJCQkgICAgICAgdW5zaWduZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBhZ2UgKipwYWdl
cywKPiArCQkJICAgICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKnZtYXMsIGludCAqbG9ja2Vk
KTsKPiAgbG9uZyBnZXRfdXNlcl9wYWdlcyh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBs
b25nIG5yX3BhZ2VzLAo+ICAJCQkgICAgdW5zaWduZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBh
Z2UgKipwYWdlcywKPiAgCQkJICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKnZtYXMpOwo+ICts
b25nIHBpbl91c2VyX3BhZ2VzKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbnJf
cGFnZXMsCj4gKwkJICAgIHVuc2lnbmVkIGludCBndXBfZmxhZ3MsIHN0cnVjdCBwYWdlICoqcGFn
ZXMsCj4gKwkJICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKnZtYXMpOwo+ICtsb25nIHBpbl9s
b25ndGVybV9wYWdlcyh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2Vz
LAo+ICsJCQl1bnNpZ25lZCBpbnQgZ3VwX2ZsYWdzLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAo+ICsJ
CQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKip2bWFzKTsKPiAgbG9uZyBnZXRfdXNlcl9wYWdlc19s
b2NrZWQodW5zaWduZWQgbG9uZyBzdGFydCwgdW5zaWduZWQgbG9uZyBucl9wYWdlcywKPiAgCQkg
ICAgdW5zaWduZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBhZ2UgKipwYWdlcywgaW50ICpsb2Nr
ZWQpOwo+ICBsb25nIGdldF91c2VyX3BhZ2VzX3VubG9ja2VkKHVuc2lnbmVkIGxvbmcgc3RhcnQs
IHVuc2lnbmVkIGxvbmcgbnJfcGFnZXMsCj4gQEAgLTE1MzYsNiArMTU1MCwxMCBAQCBsb25nIGdl
dF91c2VyX3BhZ2VzX3VubG9ja2VkKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcg
bnJfcGFnZXMsCj4gIAo+ICBpbnQgZ2V0X3VzZXJfcGFnZXNfZmFzdCh1bnNpZ25lZCBsb25nIHN0
YXJ0LCBpbnQgbnJfcGFnZXMsCj4gIAkJCXVuc2lnbmVkIGludCBndXBfZmxhZ3MsIHN0cnVjdCBw
YWdlICoqcGFnZXMpOwo+ICtpbnQgcGluX3VzZXJfcGFnZXNfZmFzdCh1bnNpZ25lZCBsb25nIHN0
YXJ0LCBpbnQgbnJfcGFnZXMsCj4gKwkJCXVuc2lnbmVkIGludCBndXBfZmxhZ3MsIHN0cnVjdCBw
YWdlICoqcGFnZXMpOwo+ICtpbnQgcGluX2xvbmd0ZXJtX3BhZ2VzX2Zhc3QodW5zaWduZWQgbG9u
ZyBzdGFydCwgaW50IG5yX3BhZ2VzLAo+ICsJCQkgICAgdW5zaWduZWQgaW50IGd1cF9mbGFncywg
c3RydWN0IHBhZ2UgKipwYWdlcyk7Cj4gIAo+ICBpbnQgYWNjb3VudF9sb2NrZWRfdm0oc3RydWN0
IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgcGFnZXMsIGJvb2wgaW5jKTsKPiAgaW50IF9f
YWNjb3VudF9sb2NrZWRfdm0oc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgcGFn
ZXMsIGJvb2wgaW5jLAo+IEBAIC0yNTk0LDEzICsyNjEyLDE1IEBAIHN0cnVjdCBwYWdlICpmb2xs
b3dfcGFnZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwgdW5zaWduZWQgbG9uZyBhZGRyZXNz
LAo+ICAjZGVmaW5lIEZPTExfQU5PTgkweDgwMDAJLyogZG9uJ3QgZG8gZmlsZSBtYXBwaW5ncyAq
Lwo+ICAjZGVmaW5lIEZPTExfTE9OR1RFUk0JMHgxMDAwMAkvKiBtYXBwaW5nIGxpZmV0aW1lIGlz
IGluZGVmaW5pdGU6IHNlZSBiZWxvdyAqLwo+ICAjZGVmaW5lIEZPTExfU1BMSVRfUE1ECTB4MjAw
MDAJLyogc3BsaXQgaHVnZSBwbWQgYmVmb3JlIHJldHVybmluZyAqLwo+ICsjZGVmaW5lIEZPTExf
UElOCTB4NDAwMDAJLyogcGFnZXMgbXVzdCBiZSByZWxlYXNlZCB2aWEgcHV0X3VzZXJfcGFnZSgp
ICovCj4gIAo+ICAvKgo+IC0gKiBOT1RFIG9uIEZPTExfTE9OR1RFUk06Cj4gKyAqIEZPTExfUElO
IGFuZCBGT0xMX0xPTkdURVJNIG1heSBiZSB1c2VkIGluIHZhcmlvdXMgY29tYmluYXRpb25zIHdp
dGggZWFjaAo+ICsgKiBvdGhlci4gSGVyZSBpcyB3aGF0IHRoZXkgbWVhbiwgYW5kIGhvdyB0byB1
c2UgdGhlbToKPiAgICoKPiAgICogRk9MTF9MT05HVEVSTSBpbmRpY2F0ZXMgdGhhdCB0aGUgcGFn
ZSB3aWxsIGJlIGhlbGQgZm9yIGFuIGluZGVmaW5pdGUgdGltZQo+IC0gKiBwZXJpb2QgX29mdGVu
XyB1bmRlciB1c2Vyc3BhY2UgY29udHJvbC4gIFRoaXMgaXMgY29udHJhc3RlZCB3aXRoCj4gLSAq
IGlvdl9pdGVyX2dldF9wYWdlcygpIHdoZXJlIHVzYWdlcyB3aGljaCBhcmUgdHJhbnNpZW50Lgo+
ICsgKiBwZXJpb2QgX29mdGVuXyB1bmRlciB1c2Vyc3BhY2UgY29udHJvbC4gIFRoaXMgaXMgaW4g
Y29udHJhc3QgdG8KPiArICogaW92X2l0ZXJfZ2V0X3BhZ2VzKCksIHdoZXJlIHVzYWdlcyB3aGlj
aCBhcmUgdHJhbnNpZW50Lgo+ICAgKgo+ICAgKiBGSVhNRTogRm9yIHBhZ2VzIHdoaWNoIGFyZSBw
YXJ0IG9mIGEgZmlsZXN5c3RlbSwgbWFwcGluZ3MgYXJlIHN1YmplY3QgdG8gdGhlCj4gICAqIGxp
ZmV0aW1lIGVuZm9yY2VkIGJ5IHRoZSBmaWxlc3lzdGVtIGFuZCB3ZSBuZWVkIGd1YXJhbnRlZXMg
dGhhdCBsb25ndGVybQo+IEBAIC0yNjE1LDExICsyNjM1LDQxIEBAIHN0cnVjdCBwYWdlICpmb2xs
b3dfcGFnZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwgdW5zaWduZWQgbG9uZyBhZGRyZXNz
LAo+ICAgKiBDdXJyZW50bHkgb25seSBnZXRfdXNlcl9wYWdlcygpIGFuZCBnZXRfdXNlcl9wYWdl
c19mYXN0KCkgc3VwcG9ydCB0aGlzIGZsYWcKPiAgICogYW5kIGNhbGxzIHRvIGdldF91c2VyX3Bh
Z2VzX1t1bl1sb2NrZWQgYXJlIHNwZWNpZmljYWxseSBub3QgYWxsb3dlZC4gIFRoaXMKPiAgICog
aXMgZHVlIHRvIGFuIGluY29tcGF0aWJpbGl0eSB3aXRoIHRoZSBGUyBEQVggY2hlY2sgYW5kCj4g
LSAqIEZBVUxUX0ZMQUdfQUxMT1dfUkVUUlkKPiArICogRkFVTFRfRkxBR19BTExPV19SRVRSWS4K
PiAgICoKPiAtICogSW4gdGhlIENNQSBjYXNlOiBsb25ndGVybSBwaW5zIGluIGEgQ01BIHJlZ2lv
biB3b3VsZCB1bm5lY2Vzc2FyaWx5IGZyYWdtZW50Cj4gLSAqIHRoYXQgcmVnaW9uLiAgQW5kIHNv
IENNQSBhdHRlbXB0cyB0byBtaWdyYXRlIHRoZSBwYWdlIGJlZm9yZSBwaW5uaW5nIHdoZW4KPiAr
ICogSW4gdGhlIENNQSBjYXNlOiBsb25nIHRlcm0gcGlucyBpbiBhIENNQSByZWdpb24gd291bGQg
dW5uZWNlc3NhcmlseSBmcmFnbWVudAo+ICsgKiB0aGF0IHJlZ2lvbi4gIEFuZCBzbywgQ01BIGF0
dGVtcHRzIHRvIG1pZ3JhdGUgdGhlIHBhZ2UgYmVmb3JlIHBpbm5pbmcsIHdoZW4KPiAgICogRk9M
TF9MT05HVEVSTSBpcyBzcGVjaWZpZWQuCj4gKyAqCj4gKyAqIEZPTExfUElOIGluZGljYXRlcyB0
aGF0IGEgc3BlY2lhbCBraW5kIG9mIHRyYWNraW5nIChub3QganVzdCBwYWdlLT5fcmVmY291bnQs
Cj4gKyAqIGJ1dCBhbiBhZGRpdGlvbmFsIHBpbiBjb3VudGluZyBzeXN0ZW0pIHdpbGwgYmUgaW52
b2tlZC4gVGhpcyBpcyBpbnRlbmRlZCBmb3IKPiArICogYW55dGhpbmcgdGhhdCBnZXRzIGEgcGFn
ZSByZWZlcmVuY2UgYW5kIHRoZW4gdG91Y2hlcyBwYWdlIGRhdGEgKGZvciBleGFtcGxlLAo+ICsg
KiBEaXJlY3QgSU8pLiBUaGlzIGxldHMgdGhlIGZpbGVzeXN0ZW0ga25vdyB0aGF0IHNvbWUgbm9u
LWZpbGUtc3lzdGVtIGVudGl0eSBpcwo+ICsgKiBwb3RlbnRpYWxseSBjaGFuZ2luZyB0aGUgcGFn
ZXMnIGRhdGEuIEluIGNvbnRyYXN0IHRvIEZPTExfR0VUICh3aG9zZSBwYWdlcwo+ICsgKiBhcmUg
cmVsZWFzZWQgdmlhIHB1dF9wYWdlKCkpLCBGT0xMX1BJTiBwYWdlcyBtdXN0IGJlIHJlbGVhc2Vk
LCB1bHRpbWF0ZWx5LCBieQo+ICsgKiBhIGNhbGwgdG8gcHV0X3VzZXJfcGFnZSgpLgo+ICsgKgo+
ICsgKiBGT0xMX1BJTiBpcyBzaW1pbGFyIHRvIEZPTExfR0VUOiBib3RoIG9mIHRoZXNlIHBpbiBw
YWdlcy4gVGhleSB1c2UgZGlmZmVyZW50Cj4gKyAqIGFuZCBzZXBhcmF0ZSByZWZjb3VudGluZyBt
ZWNoYW5pc21zLCBob3dldmVyLCBhbmQgdGhhdCBtZWFucyB0aGF0IGVhY2ggaGFzCj4gKyAqIGl0
cyBvd24gYWNxdWlyZSBhbmQgcmVsZWFzZSBtZWNoYW5pc21zOgo+ICsgKgo+ICsgKiAgICAgRk9M
TF9HRVQ6IGdldF91c2VyX3BhZ2VzKigpIHRvIGFjcXVpcmUsIGFuZCBwdXRfcGFnZSgpIHRvIHJl
bGVhc2UuCj4gKyAqCj4gKyAqICAgICBGT0xMX1BJTjogcGluX3VzZXJfcGFnZXMqKCkgb3IgcGlu
X2xvbmd0ZXJtX3BhZ2VzKigpIHRvIGFjcXVpcmUsIGFuZAo+ICsgKiAgICAgICAgICAgICAgIHB1
dF91c2VyX3BhZ2VzIHRvIHJlbGVhc2UuCj4gKyAqCj4gKyAqIEZPTExfUElOIGFuZCBGT0xMX0dF
VCBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlIGZvciBhIGdpdmVuIGZ1bmN0aW9uIGNhbGwuCj4gKyAq
IChUaGUgdW5kZXJseWluZyBwYWdlcyBtYXkgZXhwZXJpZW5jZSBib3RoIEZPTExfR0VULWJhc2Vk
IGFuZCBGT0xMX1BJTi1iYXNlZAo+ICsgKiBjYWxscyBhcHBsaWVkIHRvIHRoZW0sIGFuZCB0aGF0
J3MgcGVyZmVjdGx5IE9LLiBUaGlzIGlzIGEgY29uc3RyYWludCBvbiB0aGUKPiArICogY2FsbGVy
cywgbm90IG9uIHRoZSBwYWdlcy4pCj4gKyAqCj4gKyAqIEZPTExfUElOIGFuZCBGT0xMX0xPTkdU
RVJNIHNob3VsZCBiZSBzZXQgaW50ZXJuYWxseSBieSB0aGUgcGluX3VzZXJfcGFnZSooKQo+ICsg
KiBhbmQgcGluX2xvbmd0ZXJtXyooKSBBUElzLCBuZXZlciBkaXJlY3RseSBieSB0aGUgY2FsbGVy
LiBUaGF0J3MgaW4gb3JkZXIgdG8KPiArICogaGVscCBhdm9pZCBtaXNtYXRjaGVzIHdoZW4gcmVs
ZWFzaW5nIHBhZ2VzOiBnZXRfdXNlcl9wYWdlcyooKSBwYWdlcyBtdXN0IGJlCj4gKyAqIHJlbGVh
c2VkIHZpYSBwdXRfcGFnZSgpLCB3aGlsZSBwaW5fdXNlcl9wYWdlcyooKSBwYWdlcyBtdXN0IGJl
IHJlbGVhc2VkIHZpYQo+ICsgKiBwdXRfdXNlcl9wYWdlKCkuCj4gKyAqCj4gKyAqIFBsZWFzZSBz
ZWUgRG9jdW1lbnRhdGlvbi92bS9waW5fdXNlcl9wYWdlcy5yc3QgZm9yIG1vcmUgaW5mb3JtYXRp
b24uCj4gICAqLwo+ICAKPiAgc3RhdGljIGlubGluZSBpbnQgdm1fZmF1bHRfdG9fZXJybm8odm1f
ZmF1bHRfdCB2bV9mYXVsdCwgaW50IGZvbGxfZmxhZ3MpCj4gZGlmZiAtLWdpdCBhL21tL2d1cC5j
IGIvbW0vZ3VwLmMKPiBpbmRleCAxOTlkYTk5ZThmZmMuLjFhZWE0ODQyNzg3OSAxMDA2NDQKPiAt
LS0gYS9tbS9ndXAuYwo+ICsrKyBiL21tL2d1cC5jCj4gQEAgLTE3OSw2ICsxNzksMTAgQEAgc3Rh
dGljIHN0cnVjdCBwYWdlICpmb2xsb3dfcGFnZV9wdGUoc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2
bWEsCj4gIAlzcGlubG9ja190ICpwdGw7Cj4gIAlwdGVfdCAqcHRlcCwgcHRlOwo+ICAKPiArCS8q
IEZPTExfR0VUIGFuZCBGT0xMX1BJTiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiAqLwo+ICsJaWYg
KFdBUk5fT05fT05DRSgoZmxhZ3MgJiAoRk9MTF9QSU4gfCBGT0xMX0dFVCkpID09Cj4gKwkJCSAo
Rk9MTF9QSU4gfCBGT0xMX0dFVCkpKQo+ICsJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwo+ICBy
ZXRyeToKPiAgCWlmICh1bmxpa2VseShwbWRfYmFkKCpwbWQpKSkKPiAgCQlyZXR1cm4gbm9fcGFn
ZV90YWJsZSh2bWEsIGZsYWdzKTsKPiBAQCAtNzkwLDcgKzc5NCw3IEBAIHN0YXRpYyBsb25nIF9f
Z2V0X3VzZXJfcGFnZXMoc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssIHN0cnVjdCBtbV9zdHJ1Y3Qg
Km1tLAo+ICAKPiAgCXN0YXJ0ID0gdW50YWdnZWRfYWRkcihzdGFydCk7Cj4gIAo+IC0JVk1fQlVH
X09OKCEhcGFnZXMgIT0gISEoZ3VwX2ZsYWdzICYgRk9MTF9HRVQpKTsKPiArCVZNX0JVR19PTigh
IXBhZ2VzICE9ICEhKGd1cF9mbGFncyAmIChGT0xMX0dFVCB8IEZPTExfUElOKSkpOwo+ICAKPiAg
CS8qCj4gIAkgKiBJZiBGT0xMX0ZPUkNFIGlzIHNldCB0aGVuIGRvIG5vdCBmb3JjZSBhIGZ1bGwg
ZmF1bHQgYXMgdGhlIGhpbnRpbmcKPiBAQCAtMTAxNCw3ICsxMDE4LDE2IEBAIHN0YXRpYyBfX2Fs
d2F5c19pbmxpbmUgbG9uZyBfX2dldF91c2VyX3BhZ2VzX2xvY2tlZChzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnRzaywKPiAgCQlCVUdfT04oKmxvY2tlZCAhPSAxKTsKPiAgCX0KPiAgCj4gLQlpZiAocGFn
ZXMpCj4gKwkvKgo+ICsJICogRk9MTF9QSU4gYW5kIEZPTExfR0VUIGFyZSBtdXR1YWxseSBleGNs
dXNpdmUuIFRyYWRpdGlvbmFsIGJlaGF2aW9yCj4gKwkgKiBpcyB0byBzZXQgRk9MTF9HRVQgaWYg
dGhlIGNhbGxlciB3YW50cyBwYWdlc1tdIGZpbGxlZCBpbiAoYnV0IGhhcwo+ICsJICogY2FyZWxl
c3NseSBmYWlsZWQgdG8gc3BlY2lmeSBGT0xMX0dFVCksIHNvIGtlZXAgZG9pbmcgdGhhdCwgYnV0
IG9ubHkKPiArCSAqIGZvciBGT0xMX0dFVCwgbm90IGZvciB0aGUgbmV3ZXIgRk9MTF9QSU4uCj4g
KwkgKgo+ICsJICogRk9MTF9QSU4gYWx3YXlzIGV4cGVjdHMgcGFnZXMgdG8gYmUgbm9uLW51bGws
IGJ1dCBubyBuZWVkIHRvIGFzc2VydAo+ICsJICogdGhhdCBoZXJlLCBhcyBhbnkgZmFpbHVyZXMg
d2lsbCBiZSBvYnZpb3VzIGVub3VnaC4KPiArCSAqLwo+ICsJaWYgKHBhZ2VzICYmICEoZmxhZ3Mg
JiBGT0xMX1BJTikpCj4gIAkJZmxhZ3MgfD0gRk9MTF9HRVQ7Cj4gIAo+ICAJcGFnZXNfZG9uZSA9
IDA7Cj4gQEAgLTExNTEsNiArMTE2NCwxNCBAQCBsb25nIGdldF91c2VyX3BhZ2VzX3JlbW90ZShz
dHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywgc3RydWN0IG1tX3N0cnVjdCAqbW0sCj4gIAkJdW5zaWdu
ZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBhZ2UgKipwYWdlcywKPiAgCQlzdHJ1Y3Qgdm1fYXJl
YV9zdHJ1Y3QgKip2bWFzLCBpbnQgKmxvY2tlZCkKPiAgewo+ICsJLyoKPiArCSAqIEZPTExfUElO
IG11c3Qgb25seSBiZSBzZXQgaW50ZXJuYWxseSBieSB0aGUgcGluX3VzZXJfcGFnZSooKSBhbmQK
PiArCSAqIHBpbl9sb25ndGVybV8qKCkgQVBJcywgbmV2ZXIgZGlyZWN0bHkgYnkgdGhlIGNhbGxl
ciwgc28gZW5mb3JjZSB0aGF0Cj4gKwkgKiB3aXRoIGFuIGFzc2VydGlvbjoKPiArCSAqLwo+ICsJ
aWYgKFdBUk5fT05fT05DRShndXBfZmxhZ3MgJiBGT0xMX1BJTikpCj4gKwkJcmV0dXJuIC1FSU5W
QUw7Cj4gKwo+ICAJLyoKPiAgCSAqIEZJWE1FOiBDdXJyZW50IEZPTExfTE9OR1RFUk0gYmVoYXZp
b3IgaXMgaW5jb21wYXRpYmxlIHdpdGgKPiAgCSAqIEZBVUxUX0ZMQUdfQUxMT1dfUkVUUlkgYmVj
YXVzZSBvZiB0aGUgRlMgREFYIGNoZWNrIHJlcXVpcmVtZW50IG9uCj4gQEAgLTE2MDgsNiArMTYy
OSwxNCBAQCBsb25nIGdldF91c2VyX3BhZ2VzKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVk
IGxvbmcgbnJfcGFnZXMsCj4gIAkJdW5zaWduZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBhZ2Ug
KipwYWdlcywKPiAgCQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKip2bWFzKQo+ICB7Cj4gKwkvKgo+
ICsJICogRk9MTF9QSU4gbXVzdCBvbmx5IGJlIHNldCBpbnRlcm5hbGx5IGJ5IHRoZSBwaW5fdXNl
cl9wYWdlKigpIGFuZAo+ICsJICogcGluX2xvbmd0ZXJtXyooKSBBUElzLCBuZXZlciBkaXJlY3Rs
eSBieSB0aGUgY2FsbGVyLCBzbyBlbmZvcmNlIHRoYXQKPiArCSAqIHdpdGggYW4gYXNzZXJ0aW9u
Ogo+ICsJICovCj4gKwlpZiAoV0FSTl9PTl9PTkNFKGd1cF9mbGFncyAmIEZPTExfUElOKSkKPiAr
CQlyZXR1cm4gLUVJTlZBTDsKPiArCj4gIAlyZXR1cm4gX19ndXBfbG9uZ3Rlcm1fbG9ja2VkKGN1
cnJlbnQsIGN1cnJlbnQtPm1tLCBzdGFydCwgbnJfcGFnZXMsCj4gIAkJCQkgICAgIHBhZ2VzLCB2
bWFzLCBndXBfZmxhZ3MgfCBGT0xMX1RPVUNIKTsKPiAgfQo+IEBAIC0yMzczLDI0ICsyNDAyLDkg
QEAgc3RhdGljIGludCBfX2d1cF9sb25ndGVybV91bmxvY2tlZCh1bnNpZ25lZCBsb25nIHN0YXJ0
LCBpbnQgbnJfcGFnZXMsCj4gIAlyZXR1cm4gcmV0Owo+ICB9Cj4gIAo+IC0vKioKPiAtICogZ2V0
X3VzZXJfcGFnZXNfZmFzdCgpIC0gcGluIHVzZXIgcGFnZXMgaW4gbWVtb3J5Cj4gLSAqIEBzdGFy
dDoJc3RhcnRpbmcgdXNlciBhZGRyZXNzCj4gLSAqIEBucl9wYWdlczoJbnVtYmVyIG9mIHBhZ2Vz
IGZyb20gc3RhcnQgdG8gcGluCj4gLSAqIEBndXBfZmxhZ3M6CWZsYWdzIG1vZGlmeWluZyBwaW4g
YmVoYXZpb3VyCj4gLSAqIEBwYWdlczoJYXJyYXkgdGhhdCByZWNlaXZlcyBwb2ludGVycyB0byB0
aGUgcGFnZXMgcGlubmVkLgo+IC0gKgkJU2hvdWxkIGJlIGF0IGxlYXN0IG5yX3BhZ2VzIGxvbmcu
Cj4gLSAqCj4gLSAqIEF0dGVtcHQgdG8gcGluIHVzZXIgcGFnZXMgaW4gbWVtb3J5IHdpdGhvdXQg
dGFraW5nIG1tLT5tbWFwX3NlbS4KPiAtICogSWYgbm90IHN1Y2Nlc3NmdWwsIGl0IHdpbGwgZmFs
bCBiYWNrIHRvIHRha2luZyB0aGUgbG9jayBhbmQKPiAtICogY2FsbGluZyBnZXRfdXNlcl9wYWdl
cygpLgo+IC0gKgo+IC0gKiBSZXR1cm5zIG51bWJlciBvZiBwYWdlcyBwaW5uZWQuIFRoaXMgbWF5
IGJlIGZld2VyIHRoYW4gdGhlIG51bWJlcgo+IC0gKiByZXF1ZXN0ZWQuIElmIG5yX3BhZ2VzIGlz
IDAgb3IgbmVnYXRpdmUsIHJldHVybnMgMC4gSWYgbm8gcGFnZXMKPiAtICogd2VyZSBwaW5uZWQs
IHJldHVybnMgLWVycm5vLgo+IC0gKi8KPiAtaW50IGdldF91c2VyX3BhZ2VzX2Zhc3QodW5zaWdu
ZWQgbG9uZyBzdGFydCwgaW50IG5yX3BhZ2VzLAo+IC0JCQl1bnNpZ25lZCBpbnQgZ3VwX2ZsYWdz
LCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzKQo+ICtzdGF0aWMgaW50IGludGVybmFsX2dldF91c2VyX3Bh
Z2VzX2Zhc3QodW5zaWduZWQgbG9uZyBzdGFydCwgaW50IG5yX3BhZ2VzLAo+ICsJCQkJCXVuc2ln
bmVkIGludCBndXBfZmxhZ3MsCj4gKwkJCQkJc3RydWN0IHBhZ2UgKipwYWdlcykKPiAgewo+ICAJ
dW5zaWduZWQgbG9uZyBhZGRyLCBsZW4sIGVuZDsKPiAgCWludCBuciA9IDAsIHJldCA9IDA7Cj4g
QEAgLTI0MzUsNCArMjQ0OSwyMTUgQEAgaW50IGdldF91c2VyX3BhZ2VzX2Zhc3QodW5zaWduZWQg
bG9uZyBzdGFydCwgaW50IG5yX3BhZ2VzLAo+ICAKPiAgCXJldHVybiByZXQ7Cj4gIH0KPiArCj4g
Ky8qKgo+ICsgKiBnZXRfdXNlcl9wYWdlc19mYXN0KCkgLSBwaW4gdXNlciBwYWdlcyBpbiBtZW1v
cnkKPiArICogQHN0YXJ0OglzdGFydGluZyB1c2VyIGFkZHJlc3MKPiArICogQG5yX3BhZ2VzOglu
dW1iZXIgb2YgcGFnZXMgZnJvbSBzdGFydCB0byBwaW4KPiArICogQGd1cF9mbGFnczoJZmxhZ3Mg
bW9kaWZ5aW5nIHBpbiBiZWhhdmlvdXIKPiArICogQHBhZ2VzOglhcnJheSB0aGF0IHJlY2VpdmVz
IHBvaW50ZXJzIHRvIHRoZSBwYWdlcyBwaW5uZWQuCj4gKyAqCQlTaG91bGQgYmUgYXQgbGVhc3Qg
bnJfcGFnZXMgbG9uZy4KPiArICoKPiArICogQXR0ZW1wdCB0byBwaW4gdXNlciBwYWdlcyBpbiBt
ZW1vcnkgd2l0aG91dCB0YWtpbmcgbW0tPm1tYXBfc2VtLgo+ICsgKiBJZiBub3Qgc3VjY2Vzc2Z1
bCwgaXQgd2lsbCBmYWxsIGJhY2sgdG8gdGFraW5nIHRoZSBsb2NrIGFuZAo+ICsgKiBjYWxsaW5n
IGdldF91c2VyX3BhZ2VzKCkuCj4gKyAqCj4gKyAqIFJldHVybnMgbnVtYmVyIG9mIHBhZ2VzIHBp
bm5lZC4gVGhpcyBtYXkgYmUgZmV3ZXIgdGhhbiB0aGUgbnVtYmVyIHJlcXVlc3RlZC4KPiArICog
SWYgbnJfcGFnZXMgaXMgMCBvciBuZWdhdGl2ZSwgcmV0dXJucyAwLiBJZiBubyBwYWdlcyB3ZXJl
IHBpbm5lZCwgcmV0dXJucwo+ICsgKiAtZXJybm8uCj4gKyAqLwo+ICtpbnQgZ2V0X3VzZXJfcGFn
ZXNfZmFzdCh1bnNpZ25lZCBsb25nIHN0YXJ0LCBpbnQgbnJfcGFnZXMsCj4gKwkJCXVuc2lnbmVk
IGludCBndXBfZmxhZ3MsIHN0cnVjdCBwYWdlICoqcGFnZXMpCj4gK3sKPiArCS8qCj4gKwkgKiBG
T0xMX1BJTiBtdXN0IG9ubHkgYmUgc2V0IGludGVybmFsbHkgYnkgdGhlIHBpbl91c2VyX3BhZ2Uq
KCkgYW5kCj4gKwkgKiBwaW5fbG9uZ3Rlcm1fKigpIEFQSXMsIG5ldmVyIGRpcmVjdGx5IGJ5IHRo
ZSBjYWxsZXIsIHNvIGVuZm9yY2UgdGhhdDoKPiArCSAqLwo+ICsJaWYgKFdBUk5fT05fT05DRShn
dXBfZmxhZ3MgJiBGT0xMX1BJTikpCj4gKwkJcmV0dXJuIC1FSU5WQUw7Cj4gKwo+ICsJcmV0dXJu
IGludGVybmFsX2dldF91c2VyX3BhZ2VzX2Zhc3Qoc3RhcnQsIG5yX3BhZ2VzLCBndXBfZmxhZ3Ms
IHBhZ2VzKTsKPiArfQo+ICBFWFBPUlRfU1lNQk9MX0dQTChnZXRfdXNlcl9wYWdlc19mYXN0KTsK
PiArCj4gKy8qKgo+ICsgKiBwaW5fdXNlcl9wYWdlc19mYXN0KCkgLSBwaW4gdXNlciBwYWdlcyBp
biBtZW1vcnkgd2l0aG91dCB0YWtpbmcgbG9ja3MKPiArICoKPiArICogTmVhcmx5IHRoZSBzYW1l
IGFzIGdldF91c2VyX3BhZ2VzX2Zhc3QoKSwgZXhjZXB0IHRoYXQgRk9MTF9QSU4gaXMgc2V0LiBT
ZWUKPiArICogZ2V0X3VzZXJfcGFnZXNfZmFzdCgpIGZvciBkb2N1bWVudGF0aW9uIG9uIHRoZSBm
dW5jdGlvbiBhcmd1bWVudHMsIGJlY2F1c2UKPiArICogdGhlIGFyZ3VtZW50cyBoZXJlIGFyZSBp
ZGVudGljYWwuCj4gKyAqCj4gKyAqIEZPTExfUElOIG1lYW5zIHRoYXQgdGhlIHBhZ2VzIG11c3Qg
YmUgcmVsZWFzZWQgdmlhIHB1dF91c2VyX3BhZ2UoKS4gUGxlYXNlCj4gKyAqIHNlZSBEb2N1bWVu
dGF0aW9uL3ZtL3Bpbl91c2VyX3BhZ2VzLnJzdCBmb3IgZnVydGhlciBkZXRhaWxzLgo+ICsgKgo+
ICsgKiBUaGlzIGlzIGludGVuZGVkIGZvciBDYXNlIDEgKERJTykgaW4gRG9jdW1lbnRhdGlvbi92
bS9waW5fdXNlcl9wYWdlcy5yc3QuIEl0Cj4gKyAqIGlzIE5PVCBpbnRlbmRlZCBmb3IgQ2FzZSAy
IChSRE1BOiBsb25nLXRlcm0gcGlucykuCj4gKyAqLwo+ICtpbnQgcGluX3VzZXJfcGFnZXNfZmFz
dCh1bnNpZ25lZCBsb25nIHN0YXJ0LCBpbnQgbnJfcGFnZXMsCj4gKwkJCXVuc2lnbmVkIGludCBn
dXBfZmxhZ3MsIHN0cnVjdCBwYWdlICoqcGFnZXMpCj4gK3sKPiArCS8qIEZPTExfR0VUIGFuZCBG
T0xMX1BJTiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiAqLwo+ICsJaWYgKFdBUk5fT05fT05DRShn
dXBfZmxhZ3MgJiBGT0xMX0dFVCkpCj4gKwkJcmV0dXJuIC1FSU5WQUw7Cj4gKwo+ICsJZ3VwX2Zs
YWdzIHw9IEZPTExfUElOOwo+ICsJcmV0dXJuIGludGVybmFsX2dldF91c2VyX3BhZ2VzX2Zhc3Qo
c3RhcnQsIG5yX3BhZ2VzLCBndXBfZmxhZ3MsIHBhZ2VzKTsKPiArfQo+ICtFWFBPUlRfU1lNQk9M
X0dQTChwaW5fdXNlcl9wYWdlc19mYXN0KTsKPiArCj4gKy8qKgo+ICsgKiBwaW5fbG9uZ3Rlcm1f
cGFnZXNfZmFzdCgpIC0gcGluIHVzZXIgcGFnZXMgaW4gbWVtb3J5IHdpdGhvdXQgdGFraW5nIGxv
Y2tzCj4gKyAqCj4gKyAqIE5lYXJseSB0aGUgc2FtZSBhcyBnZXRfdXNlcl9wYWdlc19mYXN0KCks
IGV4Y2VwdCB0aGF0IEZPTExfUElOIGFuZAo+ICsgKiBGT0xMX0xPTkdURVJNIGFyZSBzZXQuIFNl
ZSBnZXRfdXNlcl9wYWdlc19mYXN0KCkgZm9yIGRvY3VtZW50YXRpb24gb24gdGhlCj4gKyAqIGZ1
bmN0aW9uIGFyZ3VtZW50cywgYmVjYXVzZSB0aGUgYXJndW1lbnRzIGhlcmUgYXJlIGlkZW50aWNh
bC4KPiArICoKPiArICogRk9MTF9QSU4gbWVhbnMgdGhhdCB0aGUgcGFnZXMgbXVzdCBiZSByZWxl
YXNlZCB2aWEgcHV0X3VzZXJfcGFnZSgpLiBQbGVhc2UKPiArICogc2VlIERvY3VtZW50YXRpb24v
dm0vcGluX3VzZXJfcGFnZXMucnN0IGZvciBmdXJ0aGVyIGRldGFpbHMuCj4gKyAqCj4gKyAqIEZP
TExfTE9OR1RFUk0gbWVhbnMgdGhhdCB0aGUgcGFnZXMgYXJlIGJlaW5nIHBpbm5lZCBmb3IgImxv
bmcgdGVybSIgdXNlLAo+ICsgKiB0eXBpY2FsbHkgYnkgYSBub24tQ1BVIGRldmljZSwgYW5kIHdl
IGNhbm5vdCBiZSBzdXJlIHRoYXQgd2FpdGluZyBmb3IgYQo+ICsgKiBwaW5uZWQgcGFnZSB0byBi
ZWNvbWUgdW5waW4gd2lsbCBiZSBlZmZlY3RpdmUuCj4gKyAqCj4gKyAqIFRoaXMgaXMgaW50ZW5k
ZWQgZm9yIENhc2UgMiAoUkRNQTogbG9uZy10ZXJtIHBpbnMpIG9mIHRoZSBGT0xMX1BJTgo+ICsg
KiBkb2N1bWVudGF0aW9uLgo+ICsgKi8KPiAraW50IHBpbl9sb25ndGVybV9wYWdlc19mYXN0KHVu
c2lnbmVkIGxvbmcgc3RhcnQsIGludCBucl9wYWdlcywKPiArCQkJICAgIHVuc2lnbmVkIGludCBn
dXBfZmxhZ3MsIHN0cnVjdCBwYWdlICoqcGFnZXMpCj4gK3sKPiArCS8qIEZPTExfR0VUIGFuZCBG
T0xMX1BJTiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiAqLwo+ICsJaWYgKFdBUk5fT05fT05DRShn
dXBfZmxhZ3MgJiBGT0xMX0dFVCkpCj4gKwkJcmV0dXJuIC1FSU5WQUw7Cj4gKwo+ICsJZ3VwX2Zs
YWdzIHw9IChGT0xMX1BJTiB8IEZPTExfTE9OR1RFUk0pOwo+ICsJcmV0dXJuIGludGVybmFsX2dl
dF91c2VyX3BhZ2VzX2Zhc3Qoc3RhcnQsIG5yX3BhZ2VzLCBndXBfZmxhZ3MsIHBhZ2VzKTsKPiAr
fQo+ICtFWFBPUlRfU1lNQk9MX0dQTChwaW5fbG9uZ3Rlcm1fcGFnZXNfZmFzdCk7Cj4gKwo+ICsv
KioKPiArICogcGluX3VzZXJfcGFnZXNfcmVtb3RlKCkgLSBwaW4gcGFnZXMgZm9yICh0eXBpY2Fs
bHkpIHVzZSBieSBEaXJlY3QgSU8sIGFuZAo+ICsgKiByZXR1cm4gdGhlIHBhZ2VzIHRvIHRoZSB1
c2VyLgo+ICsgKgo+ICsgKiBOZWFybHkgdGhlIHNhbWUgYXMgZ2V0X3VzZXJfcGFnZXNfcmVtb3Rl
KCksIGV4Y2VwdCB0aGF0IEZPTExfUElOIGlzIHNldC4gU2VlCj4gKyAqIGdldF91c2VyX3BhZ2Vz
X3JlbW90ZSgpIGZvciBkb2N1bWVudGF0aW9uIG9uIHRoZSBmdW5jdGlvbiBhcmd1bWVudHMsIGJl
Y2F1c2UKPiArICogdGhlIGFyZ3VtZW50cyBoZXJlIGFyZSBpZGVudGljYWwuCj4gKyAqCj4gKyAq
IEZPTExfUElOIG1lYW5zIHRoYXQgdGhlIHBhZ2VzIG11c3QgYmUgcmVsZWFzZWQgdmlhIHB1dF91
c2VyX3BhZ2UoKS4gUGxlYXNlCj4gKyAqIHNlZSBEb2N1bWVudGF0aW9uL3ZtL3Bpbl91c2VyX3Bh
Z2VzLnJzdCBmb3IgZGV0YWlscy4KPiArICoKPiArICogVGhpcyBpcyBpbnRlbmRlZCBmb3IgQ2Fz
ZSAxIChESU8pIGluIERvY3VtZW50YXRpb24vdm0vcGluX3VzZXJfcGFnZXMucnN0LiBJdAo+ICsg
KiBpcyBOT1QgaW50ZW5kZWQgZm9yIENhc2UgMiAoUkRNQTogbG9uZy10ZXJtIHBpbnMpLgo+ICsg
Ki8KPiArbG9uZyBwaW5fdXNlcl9wYWdlc19yZW1vdGUoc3RydWN0IHRhc2tfc3RydWN0ICp0c2ss
IHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLAo+ICsJCQkgICB1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNp
Z25lZCBsb25nIG5yX3BhZ2VzLAo+ICsJCQkgICB1bnNpZ25lZCBpbnQgZ3VwX2ZsYWdzLCBzdHJ1
Y3QgcGFnZSAqKnBhZ2VzLAo+ICsJCQkgICBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKip2bWFzLCBp
bnQgKmxvY2tlZCkKPiArewo+ICsJLyogRk9MTF9HRVQgYW5kIEZPTExfUElOIGFyZSBtdXR1YWxs
eSBleGNsdXNpdmUuICovCj4gKwlpZiAoV0FSTl9PTl9PTkNFKGd1cF9mbGFncyAmIEZPTExfR0VU
KSkKPiArCQlyZXR1cm4gLUVJTlZBTDsKPiArCj4gKwlndXBfZmxhZ3MgfD0gRk9MTF9UT1VDSCB8
IEZPTExfUkVNT1RFIHwgRk9MTF9QSU47Cj4gKwo+ICsJcmV0dXJuIF9fZ2V0X3VzZXJfcGFnZXNf
bG9ja2VkKHRzaywgbW0sIHN0YXJ0LCBucl9wYWdlcywgcGFnZXMsIHZtYXMsCj4gKwkJCQkgICAg
ICAgbG9ja2VkLCBndXBfZmxhZ3MpOwo+ICt9Cj4gK0VYUE9SVF9TWU1CT0wocGluX3VzZXJfcGFn
ZXNfcmVtb3RlKTsKPiArCj4gKy8qKgo+ICsgKiBwaW5fbG9uZ3Rlcm1fcGFnZXNfcmVtb3RlKCkg
LSBwaW4gcGFnZXMgZm9yICh0eXBpY2FsbHkpIHVzZSBieSBEaXJlY3QgSU8sIGFuZAo+ICsgKiBy
ZXR1cm4gdGhlIHBhZ2VzIHRvIHRoZSB1c2VyLgo+ICsgKgo+ICsgKiBOZWFybHkgdGhlIHNhbWUg
YXMgZ2V0X3VzZXJfcGFnZXNfcmVtb3RlKCksIGJ1dCBub3RlIHRoYXQgRk9MTF9UT1VDSCBpcyBu
b3QKPiArICogc2V0LCBhbmQgRk9MTF9QSU4gYW5kIEZPTExfTE9OR1RFUk0gYXJlIHNldC4gU2Vl
IGdldF91c2VyX3BhZ2VzX3JlbW90ZSgpIGZvcgo+ICsgKiBkb2N1bWVudGF0aW9uIG9uIHRoZSBm
dW5jdGlvbiBhcmd1bWVudHMsIGJlY2F1c2UgdGhlIGFyZ3VtZW50cyBoZXJlIGFyZQo+ICsgKiBp
ZGVudGljYWwuCj4gKyAqCj4gKyAqIEZPTExfUElOIG1lYW5zIHRoYXQgdGhlIHBhZ2VzIG11c3Qg
YmUgcmVsZWFzZWQgdmlhIHB1dF91c2VyX3BhZ2UoKS4gUGxlYXNlCj4gKyAqIHNlZSBEb2N1bWVu
dGF0aW9uL3ZtL3Bpbl91c2VyX3BhZ2VzLnJzdCBmb3IgZnVydGhlciBkZXRhaWxzLgo+ICsgKgo+
ICsgKiBGT0xMX0xPTkdURVJNIG1lYW5zIHRoYXQgdGhlIHBhZ2VzIGFyZSBiZWluZyBwaW5uZWQg
Zm9yICJsb25nIHRlcm0iIHVzZSwKPiArICogdHlwaWNhbGx5IGJ5IGEgbm9uLUNQVSBkZXZpY2Us
IGFuZCB3ZSBjYW5ub3QgYmUgc3VyZSB0aGF0IHdhaXRpbmcgZm9yIGEKPiArICogcGlubmVkIHBh
Z2UgdG8gYmVjb21lIHVucGluIHdpbGwgYmUgZWZmZWN0aXZlLgo+ICsgKgo+ICsgKiBUaGlzIGlz
IGludGVuZGVkIGZvciBDYXNlIDIgKFJETUE6IGxvbmctdGVybSBwaW5zKSBpbgo+ICsgKiBEb2N1
bWVudGF0aW9uL3ZtL3Bpbl91c2VyX3BhZ2VzLnJzdC4KPiArICovCj4gK2xvbmcgcGluX2xvbmd0
ZXJtX3BhZ2VzX3JlbW90ZShzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywgc3RydWN0IG1tX3N0cnVj
dCAqbW0sCj4gKwkJCSAgICAgICB1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIG5y
X3BhZ2VzLAo+ICsJCQkgICAgICAgdW5zaWduZWQgaW50IGd1cF9mbGFncywgc3RydWN0IHBhZ2Ug
KipwYWdlcywKPiArCQkJICAgICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKnZtYXMsIGludCAq
bG9ja2VkKQo+ICt7Cj4gKwkvKiBGT0xMX0dFVCBhbmQgRk9MTF9QSU4gYXJlIG11dHVhbGx5IGV4
Y2x1c2l2ZS4gKi8KPiArCWlmIChXQVJOX09OX09OQ0UoZ3VwX2ZsYWdzICYgRk9MTF9HRVQpKQo+
ICsJCXJldHVybiAtRUlOVkFMOwo+ICsKPiArCS8qCj4gKwkgKiBGSVhNRTogYXMgbm90ZWQgaW4g
dGhlIGdldF91c2VyX3BhZ2VzX3JlbW90ZSgpIGltcGxlbWVudGF0aW9uLCBpdAo+ICsJICogaXMg
bm90IHlldCBwb3NzaWJsZSB0byBzYWZlbHkgc2V0IEZPTExfTE9OR1RFUk0gaGVyZS4gRk9MTF9M
T05HVEVSTQo+ICsJICogbmVlZHMgdG8gYmUgc2V0LCBidXQgZm9yIG5vdyB0aGUgYmVzdCB3ZSBj
YW4gZG8gaXMgYSAiVE9ETyIgaXRlbS4KPiArCSAqLwo+ICsJZ3VwX2ZsYWdzIHw9IEZPTExfUkVN
T1RFIHwgRk9MTF9QSU47Cj4gKwo+ICsJcmV0dXJuIF9fZ2V0X3VzZXJfcGFnZXNfbG9ja2VkKHRz
aywgbW0sIHN0YXJ0LCBucl9wYWdlcywgcGFnZXMsIHZtYXMsCj4gKwkJCQkgICAgICAgbG9ja2Vk
LCBndXBfZmxhZ3MpOwo+ICt9Cj4gK0VYUE9SVF9TWU1CT0wocGluX2xvbmd0ZXJtX3BhZ2VzX3Jl
bW90ZSk7Cj4gKwo+ICsvKioKPiArICogcGluX3VzZXJfcGFnZXMoKSAtIHBpbiB1c2VyIHBhZ2Vz
IGluIG1lbW9yeSBmb3IgdXNlIGJ5IG90aGVyIGRldmljZXMKPiArICoKPiArICogTmVhcmx5IHRo
ZSBzYW1lIGFzIGdldF91c2VyX3BhZ2VzKCksIGV4Y2VwdCB0aGF0IEZPTExfVE9VQ0ggaXMgbm90
IHNldCwgYW5kCj4gKyAqIEZPTExfUElOIGlzIHNldC4KPiArICoKPiArICogRk9MTF9QSU4gbWVh
bnMgdGhhdCB0aGUgcGFnZXMgbXVzdCBiZSByZWxlYXNlZCB2aWEgcHV0X3VzZXJfcGFnZSgpLiBQ
bGVhc2UKPiArICogc2VlIERvY3VtZW50YXRpb24vdm0vcGluX3VzZXJfcGFnZXMucnN0IGZvciBk
ZXRhaWxzLgo+ICsgKgo+ICsgKiBUaGlzIGlzIGludGVuZGVkIGZvciBDYXNlIDEgKERJTykgaW4g
RG9jdW1lbnRhdGlvbi92bS9waW5fdXNlcl9wYWdlcy5yc3QuIEl0Cj4gKyAqIGlzIE5PVCBpbnRl
bmRlZCBmb3IgQ2FzZSAyIChSRE1BOiBsb25nLXRlcm0gcGlucykuCj4gKyAqLwo+ICtsb25nIHBp
bl91c2VyX3BhZ2VzKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbnJfcGFnZXMs
Cj4gKwkJICAgIHVuc2lnbmVkIGludCBndXBfZmxhZ3MsIHN0cnVjdCBwYWdlICoqcGFnZXMsCj4g
KwkJICAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKnZtYXMpCj4gK3sKPiArCS8qIEZPTExfR0VU
IGFuZCBGT0xMX1BJTiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiAqLwo+ICsJaWYgKFdBUk5fT05f
T05DRShndXBfZmxhZ3MgJiBGT0xMX0dFVCkpCj4gKwkJcmV0dXJuIC1FSU5WQUw7Cj4gKwo+ICsJ
Z3VwX2ZsYWdzIHw9IEZPTExfUElOOwo+ICsJcmV0dXJuIF9fZ3VwX2xvbmd0ZXJtX2xvY2tlZChj
dXJyZW50LCBjdXJyZW50LT5tbSwgc3RhcnQsIG5yX3BhZ2VzLAo+ICsJCQkJICAgICBwYWdlcywg
dm1hcywgZ3VwX2ZsYWdzKTsKPiArfQo+ICtFWFBPUlRfU1lNQk9MKHBpbl91c2VyX3BhZ2VzKTsK
PiArCj4gKy8qKgo+ICsgKiBwaW5fbG9uZ3Rlcm1fcGFnZXMoKSAtIHBpbiB1c2VyIHBhZ2VzIGlu
IG1lbW9yeSBmb3IgbG9uZy10ZXJtIHVzZSAoUkRNQSwKPiArICogdHlwaWNhbGx5KQo+ICsgKgo+
ICsgKiBOZWFybHkgdGhlIHNhbWUgYXMgZ2V0X3VzZXJfcGFnZXMoKSwgZXhjZXB0IHRoYXQgRk9M
TF9QSU4gYW5kIEZPTExfTE9OR1RFUk0KPiArICogYXJlIHNldC4gU2VlIGdldF91c2VyX3BhZ2Vz
X2Zhc3QoKSBmb3IgZG9jdW1lbnRhdGlvbiBvbiB0aGUgZnVuY3Rpb24KPiArICogYXJndW1lbnRz
LCBiZWNhdXNlIHRoZSBhcmd1bWVudHMgaGVyZSBhcmUgaWRlbnRpY2FsLgo+ICsgKgo+ICsgKiBG
T0xMX1BJTiBtZWFucyB0aGF0IHRoZSBwYWdlcyBtdXN0IGJlIHJlbGVhc2VkIHZpYSBwdXRfdXNl
cl9wYWdlKCkuIFBsZWFzZQo+ICsgKiBzZWUgRG9jdW1lbnRhdGlvbi92bS9waW5fdXNlcl9wYWdl
cy5yc3QgZm9yIGZ1cnRoZXIgZGV0YWlscy4KPiArICoKPiArICogRk9MTF9MT05HVEVSTSBtZWFu
cyB0aGF0IHRoZSBwYWdlcyBhcmUgYmVpbmcgcGlubmVkIGZvciAibG9uZyB0ZXJtIiB1c2UsCj4g
KyAqIHR5cGljYWxseSBieSBhIG5vbi1DUFUgZGV2aWNlLCBhbmQgd2UgY2Fubm90IGJlIHN1cmUg
dGhhdCB3YWl0aW5nIGZvciBhCj4gKyAqIHBpbm5lZCBwYWdlIHRvIGJlY29tZSB1bnBpbiB3aWxs
IGJlIGVmZmVjdGl2ZS4KPiArICoKPiArICogVGhpcyBpcyBpbnRlbmRlZCBmb3IgQ2FzZSAyIChS
RE1BOiBsb25nLXRlcm0gcGlucykgaW4KPiArICogRG9jdW1lbnRhdGlvbi92bS9waW5fdXNlcl9w
YWdlcy5yc3QuCj4gKyAqLwo+ICtsb25nIHBpbl9sb25ndGVybV9wYWdlcyh1bnNpZ25lZCBsb25n
IHN0YXJ0LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAo+ICsJCQl1bnNpZ25lZCBpbnQgZ3VwX2Zs
YWdzLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAo+ICsJCQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKip2
bWFzKQo+ICt7Cj4gKwkvKiBGT0xMX0dFVCBhbmQgRk9MTF9QSU4gYXJlIG11dHVhbGx5IGV4Y2x1
c2l2ZS4gKi8KPiArCWlmIChXQVJOX09OX09OQ0UoZ3VwX2ZsYWdzICYgRk9MTF9HRVQpKQo+ICsJ
CXJldHVybiAtRUlOVkFMOwo+ICsKPiArCWd1cF9mbGFncyB8PSBGT0xMX1BJTiB8IEZPTExfTE9O
R1RFUk07Cj4gKwlyZXR1cm4gX19ndXBfbG9uZ3Rlcm1fbG9ja2VkKGN1cnJlbnQsIGN1cnJlbnQt
Pm1tLCBzdGFydCwgbnJfcGFnZXMsCj4gKwkJCQkgICAgIHBhZ2VzLCB2bWFzLCBndXBfZmxhZ3Mp
Owo+ICt9Cj4gK0VYUE9SVF9TWU1CT0wocGluX2xvbmd0ZXJtX3BhZ2VzKTsKPiAtLSAKPiAyLjIz
LjAKPiAKPiAKCi0tIApTaW5jZXJlbHkgeW91cnMsCk1pa2UuCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRl
dmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
