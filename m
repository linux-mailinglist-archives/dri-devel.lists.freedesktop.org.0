Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AE5F0B1ACF
	for <lists+dri-devel@lfdr.de>; Fri, 13 Sep 2019 11:32:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 91E5B6EEEC;
	Fri, 13 Sep 2019 09:32:35 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from ste-pvt-msa1.bahnhof.se (ste-pvt-msa1.bahnhof.se
 [213.80.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6CFB96EEED
 for <dri-devel@lists.freedesktop.org>; Fri, 13 Sep 2019 09:32:34 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTP id 919A63F4D8;
 Fri, 13 Sep 2019 11:32:32 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from ste-pvt-msa1.bahnhof.se ([127.0.0.1])
 by localhost (ste-pvt-msa1.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 3cFDeS0zG9lS; Fri, 13 Sep 2019 11:32:31 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTPA id 3D6873F695;
 Fri, 13 Sep 2019 11:32:27 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 5B0A83601AA;
 Fri, 13 Sep 2019 11:32:27 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org
Subject: [RFC PATCH 1/7] mm: Add write-protect and clean utilities for address
 space ranges
Date: Fri, 13 Sep 2019 11:32:07 +0200
Message-Id: <20190913093213.27254-2-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190913093213.27254-1-thomas_os@shipmail.org>
References: <20190913093213.27254-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1568367147; bh=rOMBTW/RhuOcvDQswCQgA5LGb1f8A4ZVULitfsW366Q=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=h5GxOn8sgsWNbg33mXbM2fUZacaPfp26EksW7OQuSW3Tj0yX9w4tcmMLSSHqCrYd8
 6f4WtS5RzEuhtfrIefl1graK9DKj8tVVGkra/EHob3+z86jDDoPag2Itvc+WN5J+ij
 KJSQQUU9dvrqg0GowVzo2jPJVRW/+MkLusE7g2m4=
X-Mailman-Original-Authentication-Results: ste-pvt-msa1.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b=h5GxOn8s; 
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 Ralph Campbell <rcampbell@nvidia.com>, Matthew Wilcox <willy@infradead.org>,
 Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKQWRkIHR3byB1
dGlsaXRpZXMgdG8gYSkgd3JpdGUtcHJvdGVjdCBhbmQgYikgY2xlYW4gYWxsIHB0ZXMgcG9pbnRp
bmcgaW50bwphIHJhbmdlIG9mIGFuIGFkZHJlc3Mgc3BhY2UuClRoZSB1dGlsaXRpZXMgYXJlIGlu
dGVuZGVkIHRvIGFpZCBpbiB0cmFja2luZyBkaXJ0eSBwYWdlcyAoZWl0aGVyCmRyaXZlci1hbGxv
Y2F0ZWQgc3lzdGVtIG1lbW9yeSBvciBwY2kgZGV2aWNlIG1lbW9yeSkuClRoZSB3cml0ZS1wcm90
ZWN0IHV0aWxpdHkgc2hvdWxkIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aApwYWdlX21rd3Jp
dGUoKSBhbmQgcGZuX21rd3JpdGUoKSB0byB0cmlnZ2VyIHdyaXRlIHBhZ2UtZmF1bHRzIG9uIHBh
Z2UKYWNjZXNzZXMuIFR5cGljYWxseSBvbmUgd291bGQgd2FudCB0byB1c2UgdGhpcyBvbiBzcGFy
c2UgYWNjZXNzZXMgaW50bwpsYXJnZSBtZW1vcnkgcmVnaW9ucy4gVGhlIGNsZWFuIHV0aWxpdHkg
c2hvdWxkIGJlIHVzZWQgdG8gdXRpbGl6ZQpoYXJkd2FyZSBkaXJ0eWluZyBmdW5jdGlvbmFsaXR5
IGFuZCBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgcGFnZS1mYXVsdHMsCnR5cGljYWxseSBvbiBsYXJn
ZSBhY2Nlc3NlcyBpbnRvIHNtYWxsIG1lbW9yeSByZWdpb25zLgoKVGhlIGFkZGVkIGZpbGUgImFz
X2RpcnR5X2hlbHBlcnMuYyIgaXMgaW5pdGlhbGx5IGxpc3RlZCBhcyBtYWludGFpbmVkIGJ5ClZN
d2FyZSB1bmRlciBvdXIgRFJNIGRyaXZlci4gSWYgc29tZWJvZHkgd291bGQgbGlrZSBpdCBlbHNl
d2hlcmUsCnRoYXQncyBvZiBjb3Vyc2Ugbm8gcHJvYmxlbS4KCkNjOiBBbmRyZXcgTW9ydG9uIDxh
a3BtQGxpbnV4LWZvdW5kYXRpb24ub3JnPgpDYzogTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJh
ZGVhZC5vcmc+CkNjOiBXaWxsIERlYWNvbiA8d2lsbC5kZWFjb25AYXJtLmNvbT4KQ2M6IFBldGVy
IFppamxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KQ2M6IFJpayB2YW4gUmllbCA8cmllbEBz
dXJyaWVsLmNvbT4KQ2M6IE1pbmNoYW4gS2ltIDxtaW5jaGFuQGtlcm5lbC5vcmc+CkNjOiBNaWNo
YWwgSG9ja28gPG1ob2Nrb0BzdXNlLmNvbT4KQ2M6IEh1YW5nIFlpbmcgPHlpbmcuaHVhbmdAaW50
ZWwuY29tPgpDYzogU291cHRpY2sgSm9hcmRlciA8anJkci5saW51eEBnbWFpbC5jb20+CkNjOiAi
SsOpcsO0bWUgR2xpc3NlIiA8amdsaXNzZUByZWRoYXQuY29tPgpDYzogbGludXgtbW1Aa3ZhY2su
b3JnCkNjOiBsaW51eC1rZXJuZWxAdmdlci5rZXJuZWwub3JnCgpTaWduZWQtb2ZmLWJ5OiBUaG9t
YXMgSGVsbHN0cm9tIDx0aGVsbHN0cm9tQHZtd2FyZS5jb20+ClJldmlld2VkLWJ5OiBSYWxwaCBD
YW1wYmVsbCA8cmNhbXBiZWxsQG52aWRpYS5jb20+ICN2MQotLS0KIE1BSU5UQUlORVJTICAgICAg
ICAgICB8ICAgMSArCiBpbmNsdWRlL2xpbnV4L21tLmggICAgfCAgMTMgKy0KIG1tL0tjb25maWcg
ICAgICAgICAgICB8ICAgMyArCiBtbS9NYWtlZmlsZSAgICAgICAgICAgfCAgIDEgKwogbW0vYXNf
ZGlydHlfaGVscGVycy5jIHwgMzkyICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCA0MDkgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigt
KQogY3JlYXRlIG1vZGUgMTAwNjQ0IG1tL2FzX2RpcnR5X2hlbHBlcnMuYwoKZGlmZiAtLWdpdCBh
L01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggYzJkOTc1ZGE1NjFmLi5iNTk2YzdjZjRh
ODUgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBAIC01Mjg3LDYg
KzUyODcsNyBAQCBUOglnaXQgZ2l0Oi8vcGVvcGxlLmZyZWVkZXNrdG9wLm9yZy9+dGhvbWFzaC9s
aW51eAogUzoJU3VwcG9ydGVkCiBGOglkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4LwogRjoJaW5jbHVk
ZS91YXBpL2RybS92bXdnZnhfZHJtLmgKK0Y6CW1tL2FzX2RpcnR5X2hlbHBlcnMuYwogCiBEUk0g
RFJJVkVSUwogTToJRGF2aWQgQWlybGllIDxhaXJsaWVkQGxpbnV4LmllPgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9tbS5oIGIvaW5jbHVkZS9saW51eC9tbS5oCmluZGV4IDAzMzRjYTk3YzU4
NC4uMjdmZjM0MWVjYmRjIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKKysrIGIvaW5j
bHVkZS9saW51eC9tbS5oCkBAIC0yNjU3LDcgKzI2NTcsNiBAQCB0eXBlZGVmIGludCAoKnB0ZV9m
bl90KShwdGVfdCAqcHRlLCB1bnNpZ25lZCBsb25nIGFkZHIsIHZvaWQgKmRhdGEpOwogZXh0ZXJu
IGludCBhcHBseV90b19wYWdlX3JhbmdlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBs
b25nIGFkZHJlc3MsCiAJCQkgICAgICAgdW5zaWduZWQgbG9uZyBzaXplLCBwdGVfZm5fdCBmbiwg
dm9pZCAqZGF0YSk7CiAKLQogI2lmZGVmIENPTkZJR19QQUdFX1BPSVNPTklORwogZXh0ZXJuIGJv
b2wgcGFnZV9wb2lzb25pbmdfZW5hYmxlZCh2b2lkKTsKIGV4dGVybiB2b2lkIGtlcm5lbF9wb2lz
b25fcGFnZXMoc3RydWN0IHBhZ2UgKnBhZ2UsIGludCBudW1wYWdlcywgaW50IGVuYWJsZSk7CkBA
IC0yODkxLDUgKzI4OTAsMTcgQEAgdm9pZCBfX2luaXQgc2V0dXBfbnJfbm9kZV9pZHModm9pZCk7
CiBzdGF0aWMgaW5saW5lIHZvaWQgc2V0dXBfbnJfbm9kZV9pZHModm9pZCkge30KICNlbmRpZgog
CisjaWZkZWYgQ09ORklHX0FTX0RJUlRZX0hFTFBFUlMKK3Vuc2lnbmVkIGxvbmcgYXBwbHlfYXNf
Y2xlYW4oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgIHBnb2ZmX3QgZmly
c3RfaW5kZXgsIHBnb2ZmX3QgbnIsCisJCQkgICAgIHBnb2ZmX3QgYml0bWFwX3Bnb2ZmLAorCQkJ
ICAgICB1bnNpZ25lZCBsb25nICpiaXRtYXAsCisJCQkgICAgIHBnb2ZmX3QgKnN0YXJ0LAorCQkJ
ICAgICBwZ29mZl90ICplbmQpOworCit1bnNpZ25lZCBsb25nIGFwcGx5X2FzX3dycHJvdGVjdChz
dHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCQkgcGdvZmZfdCBmaXJzdF9pbmRleCwg
cGdvZmZfdCBucik7CisjZW5kaWYKKwogI2VuZGlmIC8qIF9fS0VSTkVMX18gKi8KICNlbmRpZiAv
KiBfTElOVVhfTU1fSCAqLwpkaWZmIC0tZ2l0IGEvbW0vS2NvbmZpZyBiL21tL0tjb25maWcKaW5k
ZXggNTZjZWM2MzZhMWZjLi41OTQzNTBlOWQ3OGUgMTAwNjQ0Ci0tLSBhL21tL0tjb25maWcKKysr
IGIvbW0vS2NvbmZpZwpAQCAtNzM2LDQgKzczNiw3IEBAIGNvbmZpZyBBUkNIX0hBU19QVEVfU1BF
Q0lBTAogY29uZmlnIEFSQ0hfSEFTX0hVR0VQRAogCWJvb2wKIAorY29uZmlnIEFTX0RJUlRZX0hF
TFBFUlMKKyAgICAgICAgYm9vbAorCiBlbmRtZW51CmRpZmYgLS1naXQgYS9tbS9NYWtlZmlsZSBi
L21tL01ha2VmaWxlCmluZGV4IGQwYjI5NWMzYjc2NC4uNDA4NmYxZWVmYmM2IDEwMDY0NAotLS0g
YS9tbS9NYWtlZmlsZQorKysgYi9tbS9NYWtlZmlsZQpAQCAtMTA1LDMgKzEwNSw0IEBAIG9iai0k
KENPTkZJR19QRVJDUFVfU1RBVFMpICs9IHBlcmNwdS1zdGF0cy5vCiBvYmotJChDT05GSUdfWk9O
RV9ERVZJQ0UpICs9IG1lbXJlbWFwLm8KIG9iai0kKENPTkZJR19ITU1fTUlSUk9SKSArPSBobW0u
bwogb2JqLSQoQ09ORklHX01FTUZEX0NSRUFURSkgKz0gbWVtZmQubworb2JqLSQoQ09ORklHX0FT
X0RJUlRZX0hFTFBFUlMpICs9IGFzX2RpcnR5X2hlbHBlcnMubwpkaWZmIC0tZ2l0IGEvbW0vYXNf
ZGlydHlfaGVscGVycy5jIGIvbW0vYXNfZGlydHlfaGVscGVycy5jCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uM2JlMDZmZThmMWQyCi0tLSAvZGV2L251bGwKKysrIGIv
bW0vYXNfZGlydHlfaGVscGVycy5jCkBAIC0wLDAgKzEsMzkyIEBACisvLyBTUERYLUxpY2Vuc2Ut
SWRlbnRpZmllcjogR1BMLTIuMAorI2luY2x1ZGUgPGxpbnV4L21tLmg+CisjaW5jbHVkZSA8bGlu
dXgvbW1fdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9odWdldGxiLmg+CisjaW5jbHVkZSA8bGlu
dXgvYml0b3BzLmg+CisjaW5jbHVkZSA8bGludXgvbW11X25vdGlmaWVyLmg+CisjaW5jbHVkZSA8
YXNtL2NhY2hlZmx1c2guaD4KKyNpbmNsdWRlIDxhc20vdGxiZmx1c2guaD4KKworLyoqCisgKiBz
dHJ1Y3QgYXNfd2FsayAtIEFyZ3VtZW50IHRvIGFzX3B0ZV9mbl90CisgKiBAdm1hOiBQb2ludGVy
IHRvIHRoZSBzdHJ1Y3Qgdm13X2FyZWFfc3RydWN0IGN1cnJlbnRseSBiZWluZyB3YWxrZWQuCisg
KgorICogRW1iZWRkYWJsZSBhcmd1bWVudCB0byBzdHJ1Y3QgYXNfX3B0ZV9mbl90CisgKi8KK3N0
cnVjdCBhc193YWxrIHsKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYTsKK307CisKKy8qKgor
ICogc3RydWN0IGFzX3dhbGtfb3BzIC0gQ2FsbGJhY2tzIGZvciBlbnRyaWVzIG9mIHZhcmlvdXMg
cGFnZSB0YWJsZSBsZXZlbHMuCisgKiBleHRlbmQgZm9yIGFkZGl0aW9uYWwgbGV2ZWwgc3VwcG9y
dC4KKyAqLworc3RydWN0IGFzX3dhbGtfb3BzIHsKKwkvKioKKwkgKiBwdGUtZW50cnk6IENhbGxi
YWNrIGZvciBQVEVzCisJICogQHB0ZTogUG9pbnRlciB0byB0aGUgUFRFLgorCSAqIEBhZGRyOiBW
aXJ0dWFsIGFkZHJlc3MuCisJICogQGFzdzogU3RydWN0IGFzX3dhbGsgYXJndW1lbnQgZm9yIHRo
ZSB3YWxrLiBFbWJlZCBmb3IgYWRkaXRpb25hbAorCSAqIGRhdGEuCisJICovCisJdm9pZCAoKmNv
bnN0IHB0ZV9lbnRyeSkgKHB0ZV90ICpwdGUsIHVuc2lnbmVkIGxvbmcgYWRkciwKKwkJCQkgc3Ry
dWN0IGFzX3dhbGsgKmFzdyk7Cit9OworCisvKiBQYWdlLXdhbGtpbmcgY29kZSAqLworc3RhdGlj
IHZvaWQgd2Fsa19hc19wdGVfcmFuZ2UocG1kX3QgKnBtZCwgdW5zaWduZWQgbG9uZyBhZGRyLCB1
bnNpZ25lZCBsb25nIGVuZCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBhc193YWxrX29wcyAqb3Bz
LAorCQkJICAgICAgc3RydWN0IGFzX3dhbGsgKmFzdykKK3sKKwlzdHJ1Y3QgbW1fc3RydWN0ICpt
bSA9IGFzdy0+dm1hLT52bV9tbTsKKwlwdGVfdCAqcHRlOworCXNwaW5sb2NrX3QgKnB0bDsKKwor
CXB0ZSA9IChtbSA9PSAmaW5pdF9tbSkgPworCQlwdGVfb2Zmc2V0X2tlcm5lbChwbWQsIGFkZHIp
IDoKKwkJcHRlX29mZnNldF9tYXBfbG9jayhtbSwgcG1kLCBhZGRyLCAmcHRsKTsKKworCWFyY2hf
ZW50ZXJfbGF6eV9tbXVfbW9kZSgpOworCisJZG8geworCQlvcHMtPnB0ZV9lbnRyeShwdGUrKywg
YWRkciwgYXN3KTsKKwl9IHdoaWxlIChhZGRyICs9IFBBR0VfU0laRSwgYWRkciAhPSBlbmQpOwor
CisJYXJjaF9sZWF2ZV9sYXp5X21tdV9tb2RlKCk7CisKKwlpZiAobW0gIT0gJmluaXRfbW0pCisJ
CXB0ZV91bm1hcF91bmxvY2socHRlIC0gMSwgcHRsKTsKK30KKworc3RhdGljIHZvaWQgd2Fsa19h
c19wbWRfcmFuZ2UocHVkX3QgKnB1ZCwgdW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25n
IGVuZCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBhc193YWxrX29wcyAqb3BzLAorCQkJICAgICAg
c3RydWN0IGFzX3dhbGsgKmFzdykKK3sKKwlwbWRfdCAqcG1kID0gcG1kX29mZnNldChwdWQsIGFk
ZHIpOworCXVuc2lnbmVkIGxvbmcgbmV4dDsKKworCWRvIHsKKwkJbmV4dCA9IHBtZF9hZGRyX2Vu
ZChhZGRyLCBlbmQpOworCQlpZiAocG1kX25vbmVfb3JfY2xlYXJfYmFkKHBtZCkpCisJCQljb250
aW51ZTsKKwkJaWYgKFdBUk5fT04ocG1kX2h1Z2UoKnBtZCkpKQorCQkJY29udGludWU7CisJCXdh
bGtfYXNfcHRlX3JhbmdlKHBtZCwgYWRkciwgbmV4dCwgb3BzLCBhc3cpOworCX0gd2hpbGUgKHBt
ZCsrLCBhZGRyID0gbmV4dCwgYWRkciAhPSBlbmQpOworfQorCitzdGF0aWMgdm9pZCB3YWxrX2Fz
X3B1ZF9yYW5nZShwNGRfdCAqcDRkLCB1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcg
ZW5kLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzICpvcHMsCisJCQkgICAgICBz
dHJ1Y3QgYXNfd2FsayAqYXN3KQoreworCXB1ZF90ICpwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgYWRk
cik7CisJdW5zaWduZWQgbG9uZyBuZXh0OworCisJZG8geworCQluZXh0ID0gcHVkX2FkZHJfZW5k
KGFkZHIsIGVuZCk7CisJCWlmIChwdWRfbm9uZV9vcl9jbGVhcl9iYWQocHVkKSkKKwkJCWNvbnRp
bnVlOworCQlpZiAoV0FSTl9PTihwdWRfaHVnZSgqcHVkKSkpCisJCQljb250aW51ZTsKKwkJd2Fs
a19hc19wbWRfcmFuZ2UocHVkLCBhZGRyLCBuZXh0LCBvcHMsIGFzdyk7CisJfSB3aGlsZSAocHVk
KyssIGFkZHIgPSBuZXh0LCBhZGRyICE9IGVuZCk7Cit9CisKK3N0YXRpYyB2b2lkIHdhbGtfYXNf
cDRkX3JhbmdlKHBnZF90ICpwZ2QsIHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBl
bmQsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgYXNfd2Fsa19vcHMgKm9wcywKKwkJCSAgICAgIHN0
cnVjdCBhc193YWxrICphc3cpCit7CisJcDRkX3QgKnA0ZCA9IHA0ZF9vZmZzZXQocGdkLCBhZGRy
KTsKKwl1bnNpZ25lZCBsb25nIG5leHQ7CisKKwlkbyB7CisJCW5leHQgPSBwNGRfYWRkcl9lbmQo
YWRkciwgZW5kKTsKKwkJaWYgKHA0ZF9ub25lX29yX2NsZWFyX2JhZChwNGQpKQorCQkJY29udGlu
dWU7CisJCXdhbGtfYXNfcHVkX3JhbmdlKHA0ZCwgYWRkciwgbmV4dCwgb3BzLCBhc3cpOworCX0g
d2hpbGUgKHA0ZCsrLCBhZGRyID0gbmV4dCwgYWRkciAhPSBlbmQpOworfQorCitzdGF0aWMgdm9p
ZCB3YWxrX2FzX3Bmbl9yYW5nZSh1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgZW5k
LAorCQkJICAgICAgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzICpvcHMsCisJCQkgICAgICBzdHJ1
Y3QgYXNfd2FsayAqYXN3KQoreworCXBnZF90ICpwZ2QgPSBwZ2Rfb2Zmc2V0KGFzdy0+dm1hLT52
bV9tbSwgYWRkcik7CisJdW5zaWduZWQgbG9uZyBuZXh0OworCisJZG8geworCQluZXh0ID0gcGdk
X2FkZHJfZW5kKGFkZHIsIGVuZCk7CisJCWlmIChwZ2Rfbm9uZV9vcl9jbGVhcl9iYWQocGdkKSkK
KwkJCWNvbnRpbnVlOworCQl3YWxrX2FzX3A0ZF9yYW5nZShwZ2QsIGFkZHIsIG5leHQsIG9wcywg
YXN3KTsKKwl9IHdoaWxlIChwZ2QrKywgYWRkciA9IG5leHQsIGFkZHIgIT0gZW5kKTsKK30KKwor
CisvKioKKyAqIHN0cnVjdCBhc193YWxrX3JhbmdlIC0gQXJndW1lbnQgZm9yIGFwcGx5X2FzX3Jh
bmdlCisgKiBAYXN3OiBUaGUgc3RydWN0IGFzX3dhbGsgd2UgZW1iZWQgZm9yIHRoZSBwYWdlIHdh
bGsKKyAqIEBzdGFydDogQWRkcmVzcyBvZiBmaXJzdCBtb2RpZmllZCBwdGUKKyAqIEBlbmQ6IEFk
ZHJlc3Mgb2YgbGFzdCBtb2RpZmllZCBwdGUgKyAxCisgKiBAdG90YWw6IFRvdGFsIG51bWJlciBv
ZiBtb2RpZmllZCBwdGVzCisgKi8KK3N0cnVjdCBhc193YWxrX3JhbmdlIHsKKwlzdHJ1Y3QgYXNf
d2FsayBiYXNlOworCXVuc2lnbmVkIGxvbmcgc3RhcnQ7CisJdW5zaWduZWQgbG9uZyBlbmQ7CisJ
dW5zaWduZWQgbG9uZyB0b3RhbDsKK307CisKKyNkZWZpbmUgdG9fYXNfd2Fsa19yYW5nZShfYXN3
KSBjb250YWluZXJfb2YoX2Fzdywgc3RydWN0IGFzX3dhbGtfcmFuZ2UsIGJhc2UpCisKKy8qKgor
ICogYXBwbHlfcHRfd3Jwcm90ZWN0IC0gTGVhZiBwdGUgY2FsbGJhY2sgdG8gd3JpdGUtcHJvdGVj
dCBhIHB0ZQorICogQHB0ZTogUG9pbnRlciB0byB0aGUgcHRlCisgKiBAYWRkcjogVGhlIHZpcnR1
YWwgcGFnZSBhZGRyZXNzCisgKiBAYXN3OiBQb2ludGVyIHRvIGEgc3RydWN0IGFzX3dhbGsgZW1i
ZWRkZWQgaW4gYSBzdHJ1Y3QgYXNfd2Fsa19yYW5nZQorICoKKyAqIFRoZSBmdW5jdGlvbiB3cml0
ZS1wcm90ZWN0cyBhIHB0ZSBhbmQgcmVjb3JkcyB0aGUgcmFuZ2UgaW4KKyAqIHZpcnR1YWwgYWRk
cmVzcyBzcGFjZSBvZiB0b3VjaGVkIHB0ZXMgZm9yIGVmZmljaWVudCByYW5nZSBUTEIgZmx1c2hl
cy4KKyAqLworc3RhdGljIHZvaWQgYXBwbHlfcHRfd3Jwcm90ZWN0KHB0ZV90ICpwdGUsIHVuc2ln
bmVkIGxvbmcgYWRkciwKKwkJCSAgICAgICBzdHJ1Y3QgYXNfd2FsayAqYXN3KQoreworCXN0cnVj
dCBhc193YWxrX3JhbmdlICphd3IgPSB0b19hc193YWxrX3JhbmdlKGFzdyk7CisJcHRlX3QgcHRl
bnQgPSAqcHRlOworCisJaWYgKHB0ZV93cml0ZShwdGVudCkpIHsKKwkJcHRlX3Qgb2xkX3B0ZSA9
IHB0ZXBfbW9kaWZ5X3Byb3Rfc3RhcnQoYXN3LT52bWEsIGFkZHIsIHB0ZSk7CisKKwkJcHRlbnQg
PSBwdGVfd3Jwcm90ZWN0KG9sZF9wdGUpOworCQlwdGVwX21vZGlmeV9wcm90X2NvbW1pdChhc3ct
PnZtYSwgYWRkciwgcHRlLCBvbGRfcHRlLCBwdGVudCk7CisJCWF3ci0+dG90YWwrKzsKKwkJYXdy
LT5zdGFydCA9IG1pbihhd3ItPnN0YXJ0LCBhZGRyKTsKKwkJYXdyLT5lbmQgPSBtYXgoYXdyLT5l
bmQsIGFkZHIgKyBQQUdFX1NJWkUpOworCX0KK30KKworLyoqCisgKiBzdHJ1Y3QgYXNfd2Fsa19j
bGVhbiAtIEFyZ3VtZW50IHN0cnVjdHVyZSBmb3IgYXBwbHlfcHRfY2xlYW4KKyAqIEBiYXNlOiBz
dHJ1Y3QgYXNfd2FsayB3ZSBkZXJpdmUgZnJvbQorICogQGJpdG1hcF9wZ29mZjogQWRkcmVzc19z
cGFjZSBQYWdlIG9mZnNldCBvZiB0aGUgZmlyc3QgYml0IGluIEBiaXRtYXAKKyAqIEBiaXRtYXA6
IEJpdG1hcCB3aXRoIG9uZSBiaXQgZm9yIGVhY2ggcGFnZSBvZmZzZXQgaW4gdGhlIGFkZHJlc3Nf
c3BhY2UgcmFuZ2UKKyAqIGNvdmVyZWQuCisgKiBAc3RhcnQ6IEFkZHJlc3Nfc3BhY2UgcGFnZSBv
ZmZzZXQgb2YgZmlyc3QgbW9kaWZpZWQgcHRlIHJlbGF0aXZlCisgKiB0byBAYml0bWFwX3Bnb2Zm
CisgKiBAZW5kOiBBZGRyZXNzX3NwYWNlIHBhZ2Ugb2Zmc2V0IG9mIGxhc3QgbW9kaWZpZWQgcHRl
IHJlbGF0aXZlCisgKiB0byBAYml0bWFwX3Bnb2ZmCisgKi8KK3N0cnVjdCBhc193YWxrX2NsZWFu
IHsKKwlzdHJ1Y3QgYXNfd2Fsa19yYW5nZSBiYXNlOworCXBnb2ZmX3QgYml0bWFwX3Bnb2ZmOwor
CXVuc2lnbmVkIGxvbmcgKmJpdG1hcDsKKwlwZ29mZl90IHN0YXJ0OworCXBnb2ZmX3QgZW5kOwor
fTsKKworI2RlZmluZSB0b19hc193YWxrX2NsZWFuKF9hd3IpIGNvbnRhaW5lcl9vZihfYXdyLCBz
dHJ1Y3QgYXNfd2Fsa19jbGVhbiwgYmFzZSkKKworLyoqCisgKiBhcHBseV9wdF9jbGVhbiAtIExl
YWYgcHRlIGNhbGxiYWNrIHRvIGNsZWFuIGEgcHRlCisgKiBAcHRlOiBQb2ludGVyIHRvIHRoZSBw
dGUKKyAqIEBhZGRyOiBUaGUgdmlydHVhbCBwYWdlIGFkZHJlc3MKKyAqIEBhc3c6IFBvaW50ZXIg
dG8gYSBzdHJ1Y3QgYXNfd2FsayBlbWJlZGRlZCBpbiBhIHN0cnVjdCBhc193YWxrX2NsZWFuCisg
KgorICogVGhlIGZ1bmN0aW9uIGNsZWFucyBhIHB0ZSBhbmQgcmVjb3JkcyB0aGUgcmFuZ2UgaW4K
KyAqIHZpcnR1YWwgYWRkcmVzcyBzcGFjZSBvZiB0b3VjaGVkIHB0ZXMgZm9yIGVmZmljaWVudCBU
TEIgZmx1c2hlcy4KKyAqIEl0IGFsc28gcmVjb3JkcyBkaXJ0eSBwdGVzIGluIGEgYml0bWFwIHJl
cHJlc2VudGluZyBwYWdlIG9mZnNldHMKKyAqIGluIHRoZSBhZGRyZXNzX3NwYWNlLCBhcyB3ZWxs
IGFzIHRoZSBmaXJzdCBhbmQgbGFzdCBvZiB0aGUgYml0cworICogdG91Y2hlZC4KKyAqLworc3Rh
dGljIHZvaWQgYXBwbHlfcHRfY2xlYW4ocHRlX3QgKnB0ZSwgdW5zaWduZWQgbG9uZyBhZGRyLCBz
dHJ1Y3QgYXNfd2FsayAqYXN3KQoreworCXN0cnVjdCBhc193YWxrX3JhbmdlICphd3IgPSB0b19h
c193YWxrX3JhbmdlKGFzdyk7CisJc3RydWN0IGFzX3dhbGtfY2xlYW4gKmNsZWFuID0gdG9fYXNf
d2Fsa19jbGVhbihhd3IpOworCXB0ZV90IHB0ZW50ID0gKnB0ZTsKKworCWlmIChwdGVfZGlydHko
cHRlbnQpKSB7CisJCXBnb2ZmX3QgcGdvZmYgPSAoKGFkZHIgLSBhc3ctPnZtYS0+dm1fc3RhcnQp
ID4+IFBBR0VfU0hJRlQpICsKKwkJCWFzdy0+dm1hLT52bV9wZ29mZiAtIGNsZWFuLT5iaXRtYXBf
cGdvZmY7CisJCXB0ZV90IG9sZF9wdGUgPSBwdGVwX21vZGlmeV9wcm90X3N0YXJ0KGFzdy0+dm1h
LCBhZGRyLCBwdGUpOworCisJCXB0ZW50ID0gcHRlX21rY2xlYW4ob2xkX3B0ZSk7CisJCXB0ZXBf
bW9kaWZ5X3Byb3RfY29tbWl0KGFzdy0+dm1hLCBhZGRyLCBwdGUsIG9sZF9wdGUsIHB0ZW50KTsK
KworCQlhd3ItPnRvdGFsKys7CisJCWF3ci0+c3RhcnQgPSBtaW4oYXdyLT5zdGFydCwgYWRkcik7
CisJCWF3ci0+ZW5kID0gbWF4KGF3ci0+ZW5kLCBhZGRyICsgUEFHRV9TSVpFKTsKKworCQlfX3Nl
dF9iaXQocGdvZmYsIGNsZWFuLT5iaXRtYXApOworCQljbGVhbi0+c3RhcnQgPSBtaW4oY2xlYW4t
PnN0YXJ0LCBwZ29mZik7CisJCWNsZWFuLT5lbmQgPSBtYXgoY2xlYW4tPmVuZCwgcGdvZmYgKyAx
KTsKKwl9Cit9CisKKy8qKgorICogYXBwbHlfYXNfcmFuZ2UgLSBBcHBseSBhIHB0ZSBjYWxsYmFj
ayB0byBhbGwgUFRFcyBwb2ludGluZyBpbnRvIGEgcmFuZ2UKKyAqIG9mIGFuIGFkZHJlc3Nfc3Bh
Y2UuCisgKiBAbWFwcGluZzogUG9pbnRlciB0byB0aGUgc3RydWN0IGFkZHJlc3Nfc3BhY2UKKyAq
IEBhYXM6IENsb3N1cmUgc3RydWN0dXJlCisgKiBAZmlyc3RfaW5kZXg6IEZpcnN0IHBhZ2Ugb2Zm
c2V0IGluIHRoZSBhZGRyZXNzX3NwYWNlCisgKiBAbnI6IE51bWJlciBvZiBpbmNyZW1lbnRhbCBw
YWdlIG9mZnNldHMgdG8gY292ZXIKKyAqCisgKiBSZXR1cm46IE51bWJlciBvZiBwdGVzIHRvdWNo
ZWQuIE5vdGUgdGhhdCB0aGlzIG51bWJlciBtaWdodCBiZSBsYXJnZXIKKyAqIHRoYW4gQG5yIGlm
IHRoZXJlIGFyZSBvdmVybGFwcGluZyB2bWFzCisgKi8KK3N0YXRpYyB1bnNpZ25lZCBsb25nIGFw
cGx5X2FzX3JhbmdlKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLAorCQkJCSAgICBwZ29m
Zl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5yLAorCQkJCSAgICBjb25zdCBzdHJ1Y3QgYXNfd2Fs
a19vcHMgKm9wcywKKwkJCQkgICAgc3RydWN0IGFzX3dhbGtfcmFuZ2UgKmF3cikKK3sKKwlzdHJ1
Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYTsKKwlwZ29mZl90IHZiYSwgdmVhLCBjYmEsIGNlYTsKKwl1
bnNpZ25lZCBsb25nIHN0YXJ0X2FkZHIsIGVuZF9hZGRyOworCXN0cnVjdCBtbXVfbm90aWZpZXJf
cmFuZ2UgcmFuZ2U7CisKKwlpX21tYXBfbG9ja19yZWFkKG1hcHBpbmcpOworCXZtYV9pbnRlcnZh
bF90cmVlX2ZvcmVhY2godm1hLCAmbWFwcGluZy0+aV9tbWFwLCBmaXJzdF9pbmRleCwKKwkJCQkg
IGZpcnN0X2luZGV4ICsgbnIgLSAxKSB7CisJCXVuc2lnbmVkIGxvbmcgdm1fZmxhZ3MgPSBSRUFE
X09OQ0Uodm1hLT52bV9mbGFncyk7CisKKwkJLyoKKwkJICogV2UgY2FuIG9ubHkgZG8gYWR2aXNv
cnkgZmxhZyB0ZXN0cyBiZWxvdywgc2luY2Ugd2UgY2FuJ3QKKwkJICogcmVxdWlyZSB0aGUgbW0n
cyBtbWFwX3NlbSB0byBiZSBoZWxkIHRvIHByb3RlY3QgdGhlIGZsYWdzLgorCQkgKiBUaGVyZWZv
cmUsIGNhbGxlcnMgdGhhdCBzdHJpY3RseSBkZXBlbmQgb24gc3BlY2lmaWMgdm1fZmxhZ3MKKwkJ
ICogdG8gcmVtYWluIGNvbnN0YW50IHRocm91Z2hvdXQgdGhlIG9wZXJhdGlvbiBtdXN0IGVuc3Vy
ZQorCQkgKiB0aG9zZSBmbGFncyBhcmUgaW1tdXRhYmxlIGZvciBhbGwgcmVsZXZhbnQgdm1hcyBv
ciBjYW4ndCB1c2UKKwkJICogdGhpcyBmdW5jdGlvbi4gRml4aW5nIHRoaXMgcHJvcGVybHkgd291
bGQgcmVxdWlyZSB0aGUKKwkJICogdm1fZmxhZ3MgdG8gYmUgcHJvdGVjdGVkIGJ5IGEgc2VwYXJh
dGUgbG9jayB0YWtlbiBhZnRlciB0aGUKKwkJICogaV9tbWFwX2xvY2sKKwkJICovCisKKwkJLyog
U2tpcCBub24tYXBwbGljYWJsZSBWTUFzICovCisJCWlmICgodm1fZmxhZ3MgJiAoVk1fU0hBUkVE
IHwgVk1fV1JJVEUpKSAhPQorCQkgICAgKFZNX1NIQVJFRCB8IFZNX1dSSVRFKSkKKwkJCWNvbnRp
bnVlOworCisJCS8qIFdhcm4gb24gYW5kIHNraXAgVk1BcyB3aG9zZSBmbGFncyBpbmRpY2F0ZSBp
bGxlZ2FsIHVzYWdlICovCisJCWlmIChXQVJOX09OKCh2bV9mbGFncyAmIChWTV9IVUdFVExCIHwg
Vk1fSU8pKSAhPSBWTV9JTykpCisJCQljb250aW51ZTsKKworCQkvKiBDbGlwIHRvIHRoZSB2bWEg
Ki8KKwkJdmJhID0gdm1hLT52bV9wZ29mZjsKKwkJdmVhID0gdmJhICsgdm1hX3BhZ2VzKHZtYSk7
CisJCWNiYSA9IGZpcnN0X2luZGV4OworCQljYmEgPSBtYXgoY2JhLCB2YmEpOworCQljZWEgPSBm
aXJzdF9pbmRleCArIG5yOworCQljZWEgPSBtaW4oY2VhLCB2ZWEpOworCisJCS8qIFRyYW5zbGF0
ZSB0byB2aXJ0dWFsIGFkZHJlc3MgKi8KKwkJc3RhcnRfYWRkciA9ICgoY2JhIC0gdmJhKSA8PCBQ
QUdFX1NISUZUKSArIHZtYS0+dm1fc3RhcnQ7CisJCWVuZF9hZGRyID0gKChjZWEgLSB2YmEpIDw8
IFBBR0VfU0hJRlQpICsgdm1hLT52bV9zdGFydDsKKwkJaWYgKHN0YXJ0X2FkZHIgPj0gZW5kX2Fk
ZHIpCisJCQljb250aW51ZTsKKworCQlhd3ItPmJhc2Uudm1hID0gdm1hOworCQlhd3ItPnN0YXJ0
ID0gZW5kX2FkZHI7CisJCWF3ci0+ZW5kID0gc3RhcnRfYWRkcjsKKworCQltbXVfbm90aWZpZXJf
cmFuZ2VfaW5pdCgmcmFuZ2UsIE1NVV9OT1RJRllfUFJPVEVDVElPTl9QQUdFLCAwLAorCQkJCQl2
bWEsIHZtYS0+dm1fbW0sIHN0YXJ0X2FkZHIsIGVuZF9hZGRyKTsKKwkJbW11X25vdGlmaWVyX2lu
dmFsaWRhdGVfcmFuZ2Vfc3RhcnQoJnJhbmdlKTsKKworCQkvKiBJcyB0aGlzIG5lZWRlZCB3aGVu
IHdlIG9ubHkgY2hhbmdlIHByb3RlY3Rpb24/ICovCisJCWZsdXNoX2NhY2hlX3JhbmdlKHZtYSwg
c3RhcnRfYWRkciwgZW5kX2FkZHIpOworCisJCS8qCisJCSAqIFdlJ3JlIG5vdCB1c2luZyB0bGJf
Z2F0aGVyX21tdSgpIHNpbmNlIHR5cGljYWxseQorCQkgKiBvbmx5IGEgc21hbGwgc3VicmFuZ2Ug
b2YgUFRFcyBhcmUgYWZmZWN0ZWQsIHdoZXJlYXMKKwkJICogdGxiX2dhdGhlcl9tbXUoKSByZWNv
cmRzIHRoZSBmdWxsIHJhbmdlLgorCQkgKi8KKwkJaW5jX3RsYl9mbHVzaF9wZW5kaW5nKHZtYS0+
dm1fbW0pOworCQl3YWxrX2FzX3Bmbl9yYW5nZShzdGFydF9hZGRyLCBlbmRfYWRkciwgb3BzLCAm
YXdyLT5iYXNlKTsKKwkJaWYgKGF3ci0+ZW5kID4gYXdyLT5zdGFydCkKKwkJCWZsdXNoX3RsYl9y
YW5nZSh2bWEsIGF3ci0+c3RhcnQsIGF3ci0+ZW5kKTsKKworCQltbXVfbm90aWZpZXJfaW52YWxp
ZGF0ZV9yYW5nZV9lbmQoJnJhbmdlKTsKKwkJZGVjX3RsYl9mbHVzaF9wZW5kaW5nKHZtYS0+dm1f
bW0pOworCX0KKwlpX21tYXBfdW5sb2NrX3JlYWQobWFwcGluZyk7CisKKwlyZXR1cm4gYXdyLT50
b3RhbDsKK30KKworLyoqCisgKiBhcHBseV9hc193cnByb3RlY3QgLSBXcml0ZS1wcm90ZWN0IGFs
bCBwdGVzIGluIGFuIGFkZHJlc3Nfc3BhY2UgcmFuZ2UKKyAqIEBtYXBwaW5nOiBUaGUgYWRkcmVz
c19zcGFjZSB3ZSB3YW50IHRvIHdyaXRlIHByb3RlY3QKKyAqIEBmaXJzdF9pbmRleDogVGhlIGZp
cnN0IHBhZ2Ugb2Zmc2V0IGluIHRoZSByYW5nZQorICogQG5yOiBOdW1iZXIgb2YgaW5jcmVtZW50
YWwgcGFnZSBvZmZzZXRzIHRvIGNvdmVyCisgKgorICogV0FSTklORzogVGhpcyBmdW5jdGlvbiBz
aG91bGQgb25seSBiZSB1c2VkIGZvciBhZGRyZXNzIHNwYWNlcyB3aG9zZQorICogdm1hcyBhcmUg
bWFya2VkIFZNX0lPIGFuZCB0aGF0IGRvIG5vdCBjb250YWluIGh1Z2UgcGFnZXMuCisgKiBUbyBh
dm9pZCBpbnRlcmZlcmVuY2Ugd2l0aCBDT1cnZCBwYWdlcywgdm1hcyBub3QgbWFya2VkIFZNX1NI
QVJFRCBhcmUKKyAqIHNpbXBseSBza2lwcGVkLgorICoKKyAqIFJldHVybjogVGhlIG51bWJlciBv
ZiBwdGVzIGFjdHVhbGx5IHdyaXRlLXByb3RlY3RlZC4gTm90ZSB0aGF0CisgKiBhbHJlYWR5IHdy
aXRlLXByb3RlY3RlZCBwdGVzIGFyZSBub3QgY291bnRlZC4KKyAqLwordW5zaWduZWQgbG9uZyBh
cHBseV9hc193cnByb3RlY3Qoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkJIHBn
b2ZmX3QgZmlyc3RfaW5kZXgsIHBnb2ZmX3QgbnIpCit7CisJc3RhdGljIGNvbnN0IHN0cnVjdCBh
c193YWxrX29wcyBvcHMgPSB7CisJCS5wdGVfZW50cnkgPSBhcHBseV9wdF93cnByb3RlY3QKKwl9
OworCXN0cnVjdCBhc193YWxrX3JhbmdlIGF3ciA9IHsgLnRvdGFsID0gMCB9OworCisJcmV0dXJu
IGFwcGx5X2FzX3JhbmdlKG1hcHBpbmcsIGZpcnN0X2luZGV4LCBuciwgJm9wcywgJmF3cik7Cit9
CitFWFBPUlRfU1lNQk9MX0dQTChhcHBseV9hc193cnByb3RlY3QpOworCisvKioKKyAqIGFwcGx5
X2FzX2NsZWFuIC0gQ2xlYW4gYWxsIHB0ZXMgaW4gYW4gYWRkcmVzc19zcGFjZSByYW5nZQorICog
QG1hcHBpbmc6IFRoZSBhZGRyZXNzX3NwYWNlIHdlIHdhbnQgdG8gY2xlYW4KKyAqIEBmaXJzdF9p
bmRleDogVGhlIGZpcnN0IHBhZ2Ugb2Zmc2V0IGluIHRoZSByYW5nZQorICogQG5yOiBOdW1iZXIg
b2YgaW5jcmVtZW50YWwgcGFnZSBvZmZzZXRzIHRvIGNvdmVyCisgKiBAYml0bWFwX3Bnb2ZmOiBU
aGUgcGFnZSBvZmZzZXQgb2YgdGhlIGZpcnN0IGJpdCBpbiBAYml0bWFwCisgKiBAYml0bWFwOiBQ
b2ludGVyIHRvIGEgYml0bWFwIG9mIGF0IGxlYXN0IEBuciBiaXRzLiBUaGUgYml0bWFwIG5lZWRz
IHRvCisgKiBjb3ZlciB0aGUgd2hvbGUgcmFuZ2UgQGZpcnN0X2luZGV4Li5AZmlyc3RfaW5kZXgg
KyBAbnIuCisgKiBAc3RhcnQ6IFBvaW50ZXIgdG8gbnVtYmVyIG9mIHRoZSBmaXJzdCBzZXQgYml0
IGluIEBiaXRtYXAuCisgKiBpcyBtb2RpZmllZCBhcyBuZXcgYml0cyBhcmUgc2V0IGJ5IHRoZSBm
dW5jdGlvbi4KKyAqIEBlbmQ6IFBvaW50ZXIgdG8gdGhlIG51bWJlciBvZiB0aGUgbGFzdCBzZXQg
Yml0IGluIEBiaXRtYXAuCisgKiBub25lIHNldC4gVGhlIHZhbHVlIGlzIG1vZGlmaWVkIGFzIG5l
dyBiaXRzIGFyZSBzZXQgYnkgdGhlIGZ1bmN0aW9uLgorICoKKyAqIE5vdGU6IFdoZW4gdGhpcyBm
dW5jdGlvbiByZXR1cm5zIHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IGEgQ1BVIGhhcworICog
bm90IGFscmVhZHkgZGlydGllZCBuZXcgcHRlcy4gSG93ZXZlciBpdCB3aWxsIG5vdCBjbGVhbiBh
bnkgcHRlcyBub3QKKyAqIHJlcG9ydGVkIGluIHRoZSBiaXRtYXAuCisgKgorICogSWYgYSBjYWxs
ZXIgbmVlZHMgdG8gbWFrZSBzdXJlIGFsbCBkaXJ0eSBwdGVzIGFyZSBwaWNrZWQgdXAgYW5kIG5v
bmUKKyAqIGFkZGl0aW9uYWwgYXJlIGFkZGVkLCBpdCBmaXJzdCBuZWVkcyB0byB3cml0ZS1wcm90
ZWN0IHRoZSBhZGRyZXNzLXNwYWNlCisgKiByYW5nZSBhbmQgbWFrZSBzdXJlIG5ldyB3cml0ZXJz
IGFyZSBibG9ja2VkIGluIHBhZ2VfbWt3cml0ZSgpIG9yCisgKiBwZm5fbWt3cml0ZSgpLiBBbmQg
dGhlbiBhZnRlciBhIFRMQiBmbHVzaCBmb2xsb3dpbmcgdGhlIHdyaXRlLXByb3RlY3Rpb24KKyAq
IHBpY2sgdXAgYWxsIGRpcnR5IGJpdHMuCisgKgorICogV0FSTklORzogVGhpcyBmdW5jdGlvbiBz
aG91bGQgb25seSBiZSB1c2VkIGZvciBhZGRyZXNzIHNwYWNlcyB3aG9zZQorICogdm1hcyBhcmUg
bWFya2VkIFZNX0lPIGFuZCB0aGF0IGRvIG5vdCBjb250YWluIGh1Z2UgcGFnZXMuCisgKiBUbyBh
dm9pZCBpbnRlcmZlcmVuY2Ugd2l0aCBDT1cnZCBwYWdlcywgdm1hcyBub3QgbWFya2VkIFZNX1NI
QVJFRCBhcmUKKyAqIHNpbXBseSBza2lwcGVkLgorICoKKyAqIFJldHVybjogVGhlIG51bWJlciBv
ZiBkaXJ0eSBwdGVzIGFjdHVhbGx5IGNsZWFuZWQuCisgKi8KK3Vuc2lnbmVkIGxvbmcgYXBwbHlf
YXNfY2xlYW4oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgIHBnb2ZmX3Qg
Zmlyc3RfaW5kZXgsIHBnb2ZmX3QgbnIsCisJCQkgICAgIHBnb2ZmX3QgYml0bWFwX3Bnb2ZmLAor
CQkJICAgICB1bnNpZ25lZCBsb25nICpiaXRtYXAsCisJCQkgICAgIHBnb2ZmX3QgKnN0YXJ0LAor
CQkJICAgICBwZ29mZl90ICplbmQpCit7CisJYm9vbCBub25lX3NldCA9ICgqc3RhcnQgPj0gKmVu
ZCk7CisJc3RhdGljIGNvbnN0IHN0cnVjdCBhc193YWxrX29wcyBvcHMgPSB7IC5wdGVfZW50cnkg
PSBhcHBseV9wdF9jbGVhbiB9OworCXN0cnVjdCBhc193YWxrX2NsZWFuIGNsZWFuID0geworCQku
YmFzZSA9IHsgLnRvdGFsID0gMCwgfSwKKwkJLmJpdG1hcF9wZ29mZiA9IGJpdG1hcF9wZ29mZiwK
KwkJLmJpdG1hcCA9IGJpdG1hcCwKKwkJLnN0YXJ0ID0gbm9uZV9zZXQgPyBuciA6ICpzdGFydCwK
KwkJLmVuZCA9IG5vbmVfc2V0ID8gMCA6ICplbmQsCisJfTsKKwl1bnNpZ25lZCBsb25nIHJldCA9
IGFwcGx5X2FzX3JhbmdlKG1hcHBpbmcsIGZpcnN0X2luZGV4LCBuciwgJm9wcywKKwkJCQkJICAg
JmNsZWFuLmJhc2UpOworCSpzdGFydCA9IGNsZWFuLnN0YXJ0OworCSplbmQgPSBjbGVhbi5lbmQ7
CisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKGFwcGx5X2FzX2NsZWFuKTsKLS0g
CjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
ZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
