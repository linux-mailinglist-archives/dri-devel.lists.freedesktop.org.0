Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9A3094B48C
	for <lists+dri-devel@lfdr.de>; Wed, 19 Jun 2019 11:04:49 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 170DF6E32F;
	Wed, 19 Jun 2019 09:04:40 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7D7D56E323
 for <dri-devel@lists.freedesktop.org>; Wed, 19 Jun 2019 09:04:29 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
 [10.5.11.14])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 1EBE230BB551;
 Wed, 19 Jun 2019 09:04:29 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-86.ams2.redhat.com
 [10.36.116.86])
 by smtp.corp.redhat.com (Postfix) with ESMTP id DB3C25DA5B;
 Wed, 19 Jun 2019 09:04:25 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id B53ED1753A; Wed, 19 Jun 2019 11:04:22 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v3 11/12] drm/virtio: switch from ttm to gem shmem helpers
Date: Wed, 19 Jun 2019 11:04:19 +0200
Message-Id: <20190619090420.6667-12-kraxel@redhat.com>
In-Reply-To: <20190619090420.6667-1-kraxel@redhat.com>
References: <20190619090420.6667-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.49]); Wed, 19 Jun 2019 09:04:29 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>,
 "open list:VIRTIO GPU DRIVER" <virtualization@lists.linux-foundation.org>,
 Gerd Hoffmann <kraxel@redhat.com>, open list <linux-kernel@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

dmlydGlvLWdwdSBiYXNpY2FsbHkgbmVlZHMgYSBzZ190YWJsZSBmb3IgdGhlIGJvLCB0byB0ZWxs
IHRoZSBob3N0IHdoZXJlCnRoZSBiYWNraW5nIHBhZ2VzIGZvciB0aGUgb2JqZWN0IGFyZS4gIFNv
IHRoZSBnZW0gc2htZW0gaGVscGVycyBhcmUgYQpwZXJmZWN0IGZpdC4gIFNvbWUgZHJtX2dlbV9v
YmplY3RfZnVuY3MgbmVlZCB0aGluIHdyYXBwZXJzIHRvIHVwZGF0ZSB0aGUKaG9zdCBzdGF0ZSwg
YnV0IG90aGVyd2lzZSB0aGUgaGVscGVycyBoYW5kbGUgZXZlcnl0aGluZyBqdXN0IGZpbmUuCgpP
bmNlIHRoZSBmZW5jaW5nIHdhcyBzb3J0ZWQgdGhlIHN3aXRjaCB3YXMgc3VycHJpc2luZ2x5IGVh
c3kgYW5kIGZvciB0aGUKbW9zdCBwYXJ0IGp1c3QgcmVtb3ZpbmcgdGhlIHR0bSBjb2RlLgoKU2ln
bmVkLW9mZi1ieTogR2VyZCBIb2ZmbWFubiA8a3JheGVsQHJlZGhhdC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oICAgIHwgIDUyICstLS0KIGRyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYyAgICB8ICAyMCArLQogZHJpdmVycy9ncHUvZHJtL3Zp
cnRpby92aXJ0Z3B1X2dlbS5jICAgIHwgIDE2ICstCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3Zp
cnRncHVfaW9jdGwuYyAgfCAgMTkgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9r
bXMuYyAgICB8ICAgOSAtCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMg
fCAxNDggKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUu
YyAgfCAgMzcgLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdHRtLmMgICAgfCAz
MDQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRn
cHVfdnEuYyAgICAgfCAgMjQgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZyAgICAg
ICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZSAgICAgICAgIHwg
ICAyICstCiAxMSBmaWxlcyBjaGFuZ2VkLCA4MiBpbnNlcnRpb25zKCspLCA1NTEgZGVsZXRpb25z
KC0pCiBkZWxldGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0
bS5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oIGIv
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCmluZGV4IDZhM2IwZmVlNzIyNi4u
MDA4N2EwZmM3MDIwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVf
ZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCkBAIC0zNCwx
NCArMzQsMTEgQEAKICNpbmNsdWRlIDxkcm0vZHJtUC5oPgogI2luY2x1ZGUgPGRybS9kcm1fZ2Vt
Lmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9nZW1fYXJyYXlfaGVscGVyLmg+CisjaW5jbHVkZSA8ZHJt
L2RybV9nZW1fc2htZW1faGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9hdG9taWMuaD4KICNp
bmNsdWRlIDxkcm0vZHJtX2VuY29kZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5o
PgogI2luY2x1ZGUgPGRybS9kcm1fcHJvYmVfaGVscGVyLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90
dG1fYm9fYXBpLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fZHJpdmVyLmg+Ci0jaW5jbHVk
ZSA8ZHJtL3R0bS90dG1fcGxhY2VtZW50Lmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fbW9kdWxl
Lmg+CiAKICNkZWZpbmUgRFJJVkVSX05BTUUgInZpcnRpb19ncHUiCiAjZGVmaW5lIERSSVZFUl9E
RVNDICJ2aXJ0aW8gR1BVIgpAQCAtNjksMjEgKzY2LDE2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X29i
amVjdF9wYXJhbXMgewogfTsKIAogc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0IHsKLQlzdHJ1Y3Qg
ZHJtX2dlbV9vYmplY3QgZ2VtX2Jhc2U7CisJc3RydWN0IGRybV9nZW1fc2htZW1fb2JqZWN0IGJh
c2U7CiAJdWludDMyX3QgaHdfcmVzX2hhbmRsZTsKIAogCXN0cnVjdCBzZ190YWJsZSAqcGFnZXM7
CiAJdWludDMyX3QgbWFwcGVkOwotCXZvaWQgKnZtYXA7CiAJYm9vbCBkdW1iOwotCXN0cnVjdCB0
dG1fcGxhY2UgICAgICAgICAgICAgICAgcGxhY2VtZW50X2NvZGU7Ci0Jc3RydWN0IHR0bV9wbGFj
ZW1lbnQJCXBsYWNlbWVudDsKLQlzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QJdGJvOwotCXN0cnVj
dCB0dG1fYm9fa21hcF9vYmoJCWttYXA7CiAJYm9vbCBjcmVhdGVkOwogfTsKICNkZWZpbmUgZ2Vt
X3RvX3ZpcnRpb19ncHVfb2JqKGdvYmopIFwKLQljb250YWluZXJfb2YoKGdvYmopLCBzdHJ1Y3Qg
dmlydGlvX2dwdV9vYmplY3QsIGdlbV9iYXNlKQorCWNvbnRhaW5lcl9vZigoZ29iaiksIHN0cnVj
dCB2aXJ0aW9fZ3B1X29iamVjdCwgYmFzZS5iYXNlKQogCiBzdHJ1Y3QgdmlydGlvX2dwdV92YnVm
ZmVyOwogc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlOwpAQCAtMTQ4LDEwICsxNDAsNiBAQCBzdHJ1
Y3QgdmlydGlvX2dwdV9mcmFtZWJ1ZmZlciB7CiAjZGVmaW5lIHRvX3ZpcnRpb19ncHVfZnJhbWVi
dWZmZXIoeCkgXAogCWNvbnRhaW5lcl9vZih4LCBzdHJ1Y3QgdmlydGlvX2dwdV9mcmFtZWJ1ZmZl
ciwgYmFzZSkKIAotc3RydWN0IHZpcnRpb19ncHVfbW1hbiB7Ci0Jc3RydWN0IHR0bV9ib19kZXZp
Y2UJCWJkZXY7Ci19OwotCiBzdHJ1Y3QgdmlydGlvX2dwdV9xdWV1ZSB7CiAJc3RydWN0IHZpcnRx
dWV1ZSAqdnE7CiAJc3BpbmxvY2tfdCBxbG9jazsKQEAgLTE4MCw4ICsxNjgsNiBAQCBzdHJ1Y3Qg
dmlydGlvX2dwdV9kZXZpY2UgewogCiAJc3RydWN0IHZpcnRpb19kZXZpY2UgKnZkZXY7CiAKLQlz
dHJ1Y3QgdmlydGlvX2dwdV9tbWFuIG1tYW47Ci0KIAlzdHJ1Y3QgdmlydGlvX2dwdV9vdXRwdXQg
b3V0cHV0c1tWSVJUSU9fR1BVX01BWF9TQ0FOT1VUU107CiAJdWludDMyX3QgbnVtX3NjYW5vdXRz
OwogCkBAIC0zNDAsMTEgKzMyNiw2IEBAIHN0cnVjdCBkcm1fcGxhbmUgKnZpcnRpb19ncHVfcGxh
bmVfaW5pdChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCQkJCQllbnVtIGRybV9w
bGFuZV90eXBlIHR5cGUsCiAJCQkJCWludCBpbmRleCk7CiAKLS8qIHZpcnRpb19ncHVfdHRtLmMg
Ki8KLWludCB2aXJ0aW9fZ3B1X3R0bV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdk
ZXYpOwotdm9pZCB2aXJ0aW9fZ3B1X3R0bV9maW5pKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAq
dmdkZXYpOwotaW50IHZpcnRpb19ncHVfbW1hcChzdHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZt
X2FyZWFfc3RydWN0ICp2bWEpOwotCiAvKiB2aXJ0aW9fZ3B1X2ZlbmNlLmMgKi8KIGJvb2wgdmly
dGlvX2ZlbmNlX3NpZ25hbGVkKHN0cnVjdCBkbWFfZmVuY2UgKmYpOwogc3RydWN0IHZpcnRpb19n
cHVfZmVuY2UgKnZpcnRpb19ncHVfZmVuY2VfYWxsb2MoCkBAIC0zNTYsNTggKzMzNyw0NyBAQCB2
b2lkIHZpcnRpb19ncHVfZmVuY2VfZXZlbnRfcHJvY2VzcyhzdHJ1Y3QgdmlydGlvX2dwdV9kZXZp
Y2UgKnZkZXYsCiAJCQkJICAgIHU2NCBsYXN0X3NlcSk7CiAKIC8qIHZpcnRpb19ncHVfb2JqZWN0
ICovCitzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKnZpcnRpb19ncHVfY3JlYXRlX29iamVjdChzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJCQkJc2l6ZV90IHNpemUpOwogaW50IHZpcnRpb19ncHVf
b2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCQkJICAgICBz
dHJ1Y3QgdmlydGlvX2dwdV9vYmplY3RfcGFyYW1zICpwYXJhbXMsCiAJCQkgICAgIHN0cnVjdCB2
aXJ0aW9fZ3B1X29iamVjdCAqKmJvX3B0ciwKIAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfZmVu
Y2UgKmZlbmNlKTsKLXZvaWQgdmlydGlvX2dwdV9vYmplY3Rfa3VubWFwKHN0cnVjdCB2aXJ0aW9f
Z3B1X29iamVjdCAqYm8pOwotaW50IHZpcnRpb19ncHVfb2JqZWN0X2ttYXAoc3RydWN0IHZpcnRp
b19ncHVfb2JqZWN0ICpibyk7Ci1pbnQgdmlydGlvX2dwdV9vYmplY3RfZ2V0X3NnX3RhYmxlKHN0
cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqcWRldiwKLQkJCQkgICBzdHJ1Y3QgdmlydGlvX2dwdV9v
YmplY3QgKmJvKTsKLXZvaWQgdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1Y3Qg
dmlydGlvX2dwdV9vYmplY3QgKmJvKTsKIAogLyogdmlydGdwdV9wcmltZS5jICovCi1zdHJ1Y3Qg
c2dfdGFibGUgKnZpcnRncHVfZ2VtX3ByaW1lX2dldF9zZ190YWJsZShzdHJ1Y3QgZHJtX2dlbV9v
YmplY3QgKm9iaik7CiBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKnZpcnRncHVfZ2VtX3ByaW1lX2lt
cG9ydF9zZ190YWJsZSgKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBzdHJ1Y3QgZG1hX2J1Zl9h
dHRhY2htZW50ICphdHRhY2gsCiAJc3RydWN0IHNnX3RhYmxlICpzZ3QpOwotdm9pZCAqdmlydGdw
dV9nZW1fcHJpbWVfdm1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaik7Ci12b2lkIHZpcnRn
cHVfZ2VtX3ByaW1lX3Z1bm1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgdm9pZCAqdmFk
ZHIpOwotaW50IHZpcnRncHVfZ2VtX3ByaW1lX21tYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpv
YmosCi0JCQkgICBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7CiAKIHN0YXRpYyBpbmxpbmUg
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KgogdmlydGlvX2dwdV9vYmplY3RfcmVmKHN0cnVjdCB2
aXJ0aW9fZ3B1X29iamVjdCAqYm8pCiB7Ci0JdHRtX2JvX2dldCgmYm8tPnRibyk7CisJZHJtX2dl
bV9vYmplY3RfZ2V0KCZiby0+YmFzZS5iYXNlKTsKIAlyZXR1cm4gYm87CiB9CiAKIHN0YXRpYyBp
bmxpbmUgdm9pZCB2aXJ0aW9fZ3B1X29iamVjdF91bnJlZihzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3QgKipibykKIHsKLQlzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKnRibzsKLQogCWlmICgoKmJv
KSA9PSBOVUxMKQogCQlyZXR1cm47Ci0JdGJvID0gJigoKmJvKS0+dGJvKTsKLQl0dG1fYm9fcHV0
KHRibyk7CisJZHJtX2dlbV9vYmplY3RfcHV0KCYoKmJvKS0+YmFzZS5iYXNlKTsKIAkqYm8gPSBO
VUxMOwogfQogCiBzdGF0aWMgaW5saW5lIHU2NCB2aXJ0aW9fZ3B1X29iamVjdF9tbWFwX29mZnNl
dChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQogewotCXJldHVybiBkcm1fdm1hX25vZGVf
b2Zmc2V0X2FkZHIoJmJvLT50Ym8udm1hX25vZGUpOworCXJldHVybiBkcm1fdm1hX25vZGVfb2Zm
c2V0X2FkZHIoJmJvLT5iYXNlLmJhc2Uudm1hX25vZGUpOwogfQogCiBzdGF0aWMgaW5saW5lIGlu
dCB2aXJ0aW9fZ3B1X29iamVjdF9yZXNlcnZlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8p
CiB7CiAJaW50IHI7CiAKLQlyID0gcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2tfaW50ZXJydXB0aWJs
ZShiby0+Z2VtX2Jhc2UucmVzdiwgTlVMTCk7CisJciA9IHJlc2VydmF0aW9uX29iamVjdF9sb2Nr
X2ludGVycnVwdGlibGUoYm8tPmJhc2UuYmFzZS5yZXN2LCBOVUxMKTsKIAlpZiAodW5saWtlbHko
ciAhPSAwKSkgewogCQlpZiAociAhPSAtRVJFU1RBUlRTWVMgJiYgciAhPSAtRUlOVFIpIHsKIAkJ
CXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqcWRldiA9Ci0JCQkJYm8tPmdlbV9iYXNlLmRldi0+
ZGV2X3ByaXZhdGU7CisJCQkJYm8tPmJhc2UuYmFzZS5kZXYtPmRldl9wcml2YXRlOwogCQkJZGV2
X2VycihxZGV2LT5kZXYsICIlcCByZXNlcnZlIGZhaWxlZFxuIiwgYm8pOwogCQl9CiAJCXJldHVy
biByOwpAQCAtNDE3LDcgKzM4Nyw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IHZpcnRpb19ncHVfb2Jq
ZWN0X3Jlc2VydmUoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIAogc3RhdGljIGlubGlu
ZSB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X3VucmVzZXJ2ZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmpl
Y3QgKmJvKQogewotCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYm8tPmdlbV9iYXNlLnJlc3Yp
OworCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYm8tPmJhc2UuYmFzZS5yZXN2KTsKIH0KIAog
LyogdmlyZ2wgZGVidWZzICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3Zp
cnRncHVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMKaW5kZXgg
YzUwODY4NzUzMTMyLi42ZDcwOTIyNTFkMjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVf
ZHJ2LmMKQEAgLTE4MiwxNyArMTgyLDcgQEAgTU9EVUxFX0FVVEhPUigiRGF2ZSBBaXJsaWUgPGFp
cmxpZWRAcmVkaGF0LmNvbT4iKTsKIE1PRFVMRV9BVVRIT1IoIkdlcmQgSG9mZm1hbm4gPGtyYXhl
bEByZWRoYXQuY29tPiIpOwogTU9EVUxFX0FVVEhPUigiQWxvbiBMZXZ5Iik7CiAKLXN0YXRpYyBj
b25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHZpcnRpb19ncHVfZHJpdmVyX2ZvcHMgPSB7Ci0J
Lm93bmVyID0gVEhJU19NT0RVTEUsCi0JLm9wZW4gPSBkcm1fb3BlbiwKLQkubW1hcCA9IHZpcnRp
b19ncHVfbW1hcCwKLQkucG9sbCA9IGRybV9wb2xsLAotCS5yZWFkID0gZHJtX3JlYWQsCi0JLnVu
bG9ja2VkX2lvY3RsCT0gZHJtX2lvY3RsLAotCS5yZWxlYXNlID0gZHJtX3JlbGVhc2UsCi0JLmNv
bXBhdF9pb2N0bCA9IGRybV9jb21wYXRfaW9jdGwsCi0JLmxsc2VlayA9IG5vb3BfbGxzZWVrLAot
fTsKK0RFRklORV9EUk1fR0VNX1NITUVNX0ZPUFModmlydGlvX2dwdV9kcml2ZXJfZm9wcyk7CiAK
IHN0YXRpYyBzdHJ1Y3QgZHJtX2RyaXZlciBkcml2ZXIgPSB7CiAJLmRyaXZlcl9mZWF0dXJlcyA9
IERSSVZFUl9NT0RFU0VUIHwgRFJJVkVSX0dFTSB8IERSSVZFUl9QUklNRSB8IERSSVZFUl9SRU5E
RVIgfCBEUklWRVJfQVRPTUlDLApAQCAtMjA5LDE1ICsxOTksOSBAQCBzdGF0aWMgc3RydWN0IGRy
bV9kcml2ZXIgZHJpdmVyID0gewogCS5wcmltZV9mZF90b19oYW5kbGUgPSBkcm1fZ2VtX3ByaW1l
X2ZkX3RvX2hhbmRsZSwKIAkuZ2VtX3ByaW1lX2V4cG9ydCA9IGRybV9nZW1fcHJpbWVfZXhwb3J0
LAogCS5nZW1fcHJpbWVfaW1wb3J0ID0gZHJtX2dlbV9wcmltZV9pbXBvcnQsCi0JLmdlbV9wcmlt
ZV9nZXRfc2dfdGFibGUgPSB2aXJ0Z3B1X2dlbV9wcmltZV9nZXRfc2dfdGFibGUsCiAJLmdlbV9w
cmltZV9pbXBvcnRfc2dfdGFibGUgPSB2aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUs
Ci0JLmdlbV9wcmltZV92bWFwID0gdmlydGdwdV9nZW1fcHJpbWVfdm1hcCwKLQkuZ2VtX3ByaW1l
X3Z1bm1hcCA9IHZpcnRncHVfZ2VtX3ByaW1lX3Z1bm1hcCwKLQkuZ2VtX3ByaW1lX21tYXAgPSB2
aXJ0Z3B1X2dlbV9wcmltZV9tbWFwLAogCi0JLmdlbV9mcmVlX29iamVjdF91bmxvY2tlZCA9IHZp
cnRpb19ncHVfZ2VtX2ZyZWVfb2JqZWN0LAotCS5nZW1fb3Blbl9vYmplY3QgPSB2aXJ0aW9fZ3B1
X2dlbV9vYmplY3Rfb3BlbiwKLQkuZ2VtX2Nsb3NlX29iamVjdCA9IHZpcnRpb19ncHVfZ2VtX29i
amVjdF9jbG9zZSwKKwkuZ2VtX2NyZWF0ZV9vYmplY3QgPSB2aXJ0aW9fZ3B1X2NyZWF0ZV9vYmpl
Y3QsCiAJLmZvcHMgPSAmdmlydGlvX2dwdV9kcml2ZXJfZm9wcywKIAogCS5pb2N0bHMgPSB2aXJ0
aW9fZ3B1X2lvY3RscywKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdw
dV9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9nZW0uYwppbmRleCA5Yzlh
ZDNiMTQwODAuLjc2MmQ5ODU4N2QzYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRp
by92aXJ0Z3B1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9nZW0u
YwpAQCAtMjYsMTQgKzI2LDYgQEAKICNpbmNsdWRlIDxkcm0vZHJtUC5oPgogI2luY2x1ZGUgInZp
cnRncHVfZHJ2LmgiCiAKLXZvaWQgdmlydGlvX2dwdV9nZW1fZnJlZV9vYmplY3Qoc3RydWN0IGRy
bV9nZW1fb2JqZWN0ICpnZW1fb2JqKQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqb2Jq
ID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKGdlbV9vYmopOwotCi0JaWYgKG9iaikKLQkJdmlydGlv
X2dwdV9vYmplY3RfdW5yZWYoJm9iaik7Ci19Ci0KIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCoK
IHZpcnRpb19ncHVfYWxsb2Nfb2JqZWN0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCQlzdHJ1
Y3QgdmlydGlvX2dwdV9vYmplY3RfcGFyYW1zICpwYXJhbXMsCkBAIC02NCwxNiArNTYsMTYgQEAg
aW50IHZpcnRpb19ncHVfZ2VtX2NyZWF0ZShzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCiAJaWYgKElT
X0VSUihvYmopKQogCQlyZXR1cm4gUFRSX0VSUihvYmopOwogCi0JcmV0ID0gZHJtX2dlbV9oYW5k
bGVfY3JlYXRlKGZpbGUsICZvYmotPmdlbV9iYXNlLCAmaGFuZGxlKTsKKwlyZXQgPSBkcm1fZ2Vt
X2hhbmRsZV9jcmVhdGUoZmlsZSwgJm9iai0+YmFzZS5iYXNlLCAmaGFuZGxlKTsKIAlpZiAocmV0
KSB7Ci0JCWRybV9nZW1fb2JqZWN0X3JlbGVhc2UoJm9iai0+Z2VtX2Jhc2UpOworCQlkcm1fZ2Vt
X29iamVjdF9yZWxlYXNlKCZvYmotPmJhc2UuYmFzZSk7CiAJCXJldHVybiByZXQ7CiAJfQogCi0J
Km9ial9wID0gJm9iai0+Z2VtX2Jhc2U7CisJKm9ial9wID0gJm9iai0+YmFzZS5iYXNlOwogCiAJ
LyogZHJvcCByZWZlcmVuY2UgZnJvbSBhbGxvY2F0ZSAtIGhhbmRsZSBob2xkcyBpdCBub3cgKi8K
LQlkcm1fZ2VtX29iamVjdF9wdXRfdW5sb2NrZWQoJm9iai0+Z2VtX2Jhc2UpOworCWRybV9nZW1f
b2JqZWN0X3B1dF91bmxvY2tlZCgmb2JqLT5iYXNlLmJhc2UpOwogCiAJKmhhbmRsZV9wID0gaGFu
ZGxlOwogCXJldHVybiAwOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0
Z3B1X2lvY3RsLmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYwppbmRl
eCBmZjU2ZjJhOWVlNjIuLjk4ZmI5OTU1MDk3ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L3ZpcnRpby92aXJ0Z3B1X2lvY3RsLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0
Z3B1X2lvY3RsLmMKQEAgLTI3LDcgKzI3LDYgQEAKIAogI2luY2x1ZGUgPGRybS9kcm1QLmg+CiAj
aW5jbHVkZSA8ZHJtL3ZpcnRncHVfZHJtLmg+Ci0jaW5jbHVkZSA8ZHJtL3R0bS90dG1fZXhlY2J1
Zl91dGlsLmg+CiAjaW5jbHVkZSA8bGludXgvc3luY19maWxlLmg+CiAKICNpbmNsdWRlICJ2aXJ0
Z3B1X2Rydi5oIgpAQCAtMjY5LDcgKzI2OCw3IEBAIHN0YXRpYyBpbnQgdmlydGlvX2dwdV9yZXNv
dXJjZV9jcmVhdGVfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAlk
bWFfZmVuY2VfcHV0KCZmZW5jZS0+Zik7CiAJaWYgKElTX0VSUihxb2JqKSkKIAkJcmV0dXJuIFBU
Ul9FUlIocW9iaik7Ci0Jb2JqID0gJnFvYmotPmdlbV9iYXNlOworCW9iaiA9ICZxb2JqLT5iYXNl
LmJhc2U7CiAKIAlyZXQgPSBkcm1fZ2VtX2hhbmRsZV9jcmVhdGUoZmlsZV9wcml2LCBvYmosICZo
YW5kbGUpOwogCWlmIChyZXQpIHsKQEAgLTI5Niw3ICsyOTUsNyBAQCBzdGF0aWMgaW50IHZpcnRp
b19ncHVfcmVzb3VyY2VfaW5mb19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpk
YXRhLAogCiAJcW9iaiA9IGdlbV90b192aXJ0aW9fZ3B1X29iaihnb2JqKTsKIAotCXJpLT5zaXpl
ID0gcW9iai0+Z2VtX2Jhc2Uuc2l6ZTsKKwlyaS0+c2l6ZSA9IHFvYmotPmJhc2UuYmFzZS5zaXpl
OwogCXJpLT5yZXNfaGFuZGxlID0gcW9iai0+aHdfcmVzX2hhbmRsZTsKIAlkcm1fZ2VtX29iamVj
dF9wdXRfdW5sb2NrZWQoZ29iaik7CiAJcmV0dXJuIDA7CkBAIC0zMDksNyArMzA4LDYgQEAgc3Rh
dGljIGludCB2aXJ0aW9fZ3B1X3RyYW5zZmVyX2Zyb21faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LAogCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYgPSBkZXYtPmRldl9w
cml2YXRlOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X2Zwcml2ICp2ZnByaXYgPSBmaWxlLT5kcml2ZXJf
cHJpdjsKIAlzdHJ1Y3QgZHJtX3ZpcnRncHVfM2RfdHJhbnNmZXJfZnJvbV9ob3N0ICphcmdzID0g
ZGF0YTsKLQlzdHJ1Y3QgdHRtX29wZXJhdGlvbl9jdHggY3R4ID0geyB0cnVlLCBmYWxzZSB9Owog
CXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqZ29iaiA9IE5VTEw7CiAJc3RydWN0IHZpcnRpb19ncHVf
b2JqZWN0ICpxb2JqID0gTlVMTDsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqZmVuY2U7CkBA
IC0zMzAsMTAgKzMyOCw2IEBAIHN0YXRpYyBpbnQgdmlydGlvX2dwdV90cmFuc2Zlcl9mcm9tX2hv
c3RfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAlpZiAocmV0KQogCQlnb3RvIG91dDsK
IAotCXJldCA9IHR0bV9ib192YWxpZGF0ZSgmcW9iai0+dGJvLCAmcW9iai0+cGxhY2VtZW50LCAm
Y3R4KTsKLQlpZiAodW5saWtlbHkocmV0KSkKLQkJZ290byBvdXRfdW5yZXM7Ci0KIAljb252ZXJ0
X3RvX2h3X2JveCgmYm94LCAmYXJncy0+Ym94KTsKIAogCWZlbmNlID0gdmlydGlvX2dwdV9mZW5j
ZV9hbGxvYyh2Z2Rldik7CkBAIC0zNDUsNyArMzM5LDcgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1
X3RyYW5zZmVyX2Zyb21faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQkodmdk
ZXYsIHFvYmotPmh3X3Jlc19oYW5kbGUsCiAJCSB2ZnByaXYtPmN0eF9pZCwgb2Zmc2V0LCBhcmdz
LT5sZXZlbCwKIAkJICZib3gsIGZlbmNlKTsKLQlyZXNlcnZhdGlvbl9vYmplY3RfYWRkX2V4Y2xf
ZmVuY2UocW9iai0+dGJvLnJlc3YsCisJcmVzZXJ2YXRpb25fb2JqZWN0X2FkZF9leGNsX2ZlbmNl
KHFvYmotPmJhc2UuYmFzZS5yZXN2LAogCQkJCQkgICZmZW5jZS0+Zik7CiAKIAlkbWFfZmVuY2Vf
cHV0KCZmZW5jZS0+Zik7CkBAIC0zNjIsNyArMzU2LDYgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1
X3RyYW5zZmVyX3RvX2hvc3RfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0
YSwKIAlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsK
IAlzdHJ1Y3QgdmlydGlvX2dwdV9mcHJpdiAqdmZwcml2ID0gZmlsZS0+ZHJpdmVyX3ByaXY7CiAJ
c3RydWN0IGRybV92aXJ0Z3B1XzNkX3RyYW5zZmVyX3RvX2hvc3QgKmFyZ3MgPSBkYXRhOwotCXN0
cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7IHRydWUsIGZhbHNlIH07CiAJc3RydWN0IGRy
bV9nZW1fb2JqZWN0ICpnb2JqID0gTlVMTDsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKnFv
YmogPSBOVUxMOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZTsKQEAgLTM4MCwxMCAr
MzczLDYgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1X3RyYW5zZmVyX3RvX2hvc3RfaW9jdGwoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAlpZiAocmV0KQogCQlnb3RvIG91dDsK
IAotCXJldCA9IHR0bV9ib192YWxpZGF0ZSgmcW9iai0+dGJvLCAmcW9iai0+cGxhY2VtZW50LCAm
Y3R4KTsKLQlpZiAodW5saWtlbHkocmV0KSkKLQkJZ290byBvdXRfdW5yZXM7Ci0KIAljb252ZXJ0
X3RvX2h3X2JveCgmYm94LCAmYXJncy0+Ym94KTsKIAlpZiAoIXZnZGV2LT5oYXNfdmlyZ2xfM2Qp
IHsKIAkJdmlydGlvX2dwdV9jbWRfdHJhbnNmZXJfdG9faG9zdF8yZApAQCAtMzk5LDcgKzM4OCw3
IEBAIHN0YXRpYyBpbnQgdmlydGlvX2dwdV90cmFuc2Zlcl90b19ob3N0X2lvY3RsKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCQkodmdkZXYsIHFvYmosCiAJCQkgdmZwcml2
ID8gdmZwcml2LT5jdHhfaWQgOiAwLCBvZmZzZXQsCiAJCQkgYXJncy0+bGV2ZWwsICZib3gsIGZl
bmNlKTsKLQkJcmVzZXJ2YXRpb25fb2JqZWN0X2FkZF9leGNsX2ZlbmNlKHFvYmotPnRiby5yZXN2
LAorCQlyZXNlcnZhdGlvbl9vYmplY3RfYWRkX2V4Y2xfZmVuY2UocW9iai0+YmFzZS5iYXNlLnJl
c3YsCiAJCQkJCQkgICZmZW5jZS0+Zik7CiAJCWRtYV9mZW5jZV9wdXQoJmZlbmNlLT5mKTsKIAl9
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMgYi9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMKaW5kZXggODRiNmE2YmYwMGM2Li4wYmM2
YWJhZWFmY2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMKQEAgLTE3MSwxMiAr
MTcxLDYgQEAgaW50IHZpcnRpb19ncHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCQln
b3RvIGVycl92YnVmczsKIAl9CiAKLQlyZXQgPSB2aXJ0aW9fZ3B1X3R0bV9pbml0KHZnZGV2KTsK
LQlpZiAocmV0KSB7Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIGluaXQgdHRtICVkXG4iLCByZXQp
OwotCQlnb3RvIGVycl90dG07Ci0JfQotCiAJLyogZ2V0IGRpc3BsYXkgaW5mbyAqLwogCXZpcnRp
b19jcmVhZCh2Z2Rldi0+dmRldiwgc3RydWN0IHZpcnRpb19ncHVfY29uZmlnLAogCQkgICAgIG51
bV9zY2Fub3V0cywgJm51bV9zY2Fub3V0cyk7CkBAIC0yMDgsOCArMjAyLDYgQEAgaW50IHZpcnRp
b19ncHVfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXJldHVybiAwOwogCiBlcnJfc2Nh
bm91dHM6Ci0JdmlydGlvX2dwdV90dG1fZmluaSh2Z2Rldik7Ci1lcnJfdHRtOgogCXZpcnRpb19n
cHVfZnJlZV92YnVmcyh2Z2Rldik7CiBlcnJfdmJ1ZnM6CiAJdmdkZXYtPnZkZXYtPmNvbmZpZy0+
ZGVsX3Zxcyh2Z2Rldi0+dmRldik7CkBAIC0yNDAsNyArMjMyLDYgQEAgdm9pZCB2aXJ0aW9fZ3B1
X2RlaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXZnZGV2LT52ZGV2LT5jb25maWctPmRl
bF92cXModmdkZXYtPnZkZXYpOwogCiAJdmlydGlvX2dwdV9tb2Rlc2V0X2ZpbmkodmdkZXYpOwot
CXZpcnRpb19ncHVfdHRtX2ZpbmkodmdkZXYpOwogCXZpcnRpb19ncHVfZnJlZV92YnVmcyh2Z2Rl
dik7CiAJdmlydGlvX2dwdV9jbGVhbnVwX2NhcF9jYWNoZSh2Z2Rldik7CiAJa2ZyZWUodmdkZXYt
PmNhcHNldHMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X29i
amVjdC5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X29iamVjdC5jCmluZGV4IGNl
MzNmZmE0NTA3Ni4uYTIyNmFhODhjZjIxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmly
dGlvL3ZpcnRncHVfb2JqZWN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1
X29iamVjdC5jCkBAIC0yMyw4ICsyMyw2IEBACiAgKiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUg
VVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KICAqLwogCi0jaW5jbHVkZSA8
ZHJtL3R0bS90dG1fZXhlY2J1Zl91dGlsLmg+Ci0KICNpbmNsdWRlICJ2aXJ0Z3B1X2Rydi5oIgog
CiBzdGF0aWMgaW50IHZpcnRpb19ncHVfcmVzb3VyY2VfaWRfZ2V0KHN0cnVjdCB2aXJ0aW9fZ3B1
X2RldmljZSAqdmdkZXYsCkBAIC01NywzOSArNTUsNDQgQEAgc3RhdGljIHZvaWQgdmlydGlvX2dw
dV9yZXNvdXJjZV9pZF9wdXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwgdWludDMy
X3QKICNlbmRpZgogfQogCi1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3R0bV9ib19kZXN0cm95KHN0
cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqdGJvKQorc3RhdGljIHZvaWQgdmlydGlvX2dwdV9mcmVl
X29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKIHsKLQlzdHJ1Y3QgdmlydGlvX2dw
dV9vYmplY3QgKmJvOwotCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXY7Ci0KLQlibyA9
IGNvbnRhaW5lcl9vZih0Ym8sIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgdGJvKTsKLQl2Z2Rl
diA9IChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKiliby0+Z2VtX2Jhc2UuZGV2LT5kZXZfcHJp
dmF0ZTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvID0gZ2VtX3RvX3ZpcnRpb19ncHVf
b2JqKG9iaik7CisJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9IGJvLT5iYXNlLmJh
c2UuZGV2LT5kZXZfcHJpdmF0ZTsKIAorCWlmIChiby0+cGFnZXMpCisJCXZpcnRpb19ncHVfb2Jq
ZWN0X2RldGFjaCh2Z2RldiwgYm8pOwogCWlmIChiby0+Y3JlYXRlZCkKIAkJdmlydGlvX2dwdV9j
bWRfdW5yZWZfcmVzb3VyY2UodmdkZXYsIGJvLT5od19yZXNfaGFuZGxlKTsKLQlpZiAoYm8tPnBh
Z2VzKQotCQl2aXJ0aW9fZ3B1X29iamVjdF9mcmVlX3NnX3RhYmxlKGJvKTsKLQlpZiAoYm8tPnZt
YXApCi0JCXZpcnRpb19ncHVfb2JqZWN0X2t1bm1hcChibyk7Ci0JZHJtX2dlbV9vYmplY3RfcmVs
ZWFzZSgmYm8tPmdlbV9iYXNlKTsKIAl2aXJ0aW9fZ3B1X3Jlc291cmNlX2lkX3B1dCh2Z2Rldiwg
Ym8tPmh3X3Jlc19oYW5kbGUpOwotCWtmcmVlKGJvKTsKKworCWRybV9nZW1fc2htZW1fZnJlZV9v
YmplY3Qob2JqKTsKIH0KIAotc3RhdGljIHZvaWQgdmlydGlvX2dwdV9pbml0X3R0bV9wbGFjZW1l
bnQoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICp2Z2JvKQorc3RhdGljIGNvbnN0IHN0cnVjdCBk
cm1fZ2VtX29iamVjdF9mdW5jcyB2M2RfZ2VtX2Z1bmNzID0geworCS5mcmVlID0gdmlydGlvX2dw
dV9mcmVlX29iamVjdCwKKwkub3BlbiA9IHZpcnRpb19ncHVfZ2VtX29iamVjdF9vcGVuLAorCS5j
bG9zZSA9IHZpcnRpb19ncHVfZ2VtX29iamVjdF9jbG9zZSwKKworCS5wcmludF9pbmZvID0gZHJt
X2dlbV9zaG1lbV9wcmludF9pbmZvLAorCS5waW4gPSBkcm1fZ2VtX3NobWVtX3BpbiwKKwkudW5w
aW4gPSBkcm1fZ2VtX3NobWVtX3VucGluLAorCS5nZXRfc2dfdGFibGUgPSBkcm1fZ2VtX3NobWVt
X2dldF9zZ190YWJsZSwKKwkudm1hcCA9IGRybV9nZW1fc2htZW1fdm1hcCwKKwkudnVubWFwID0g
ZHJtX2dlbV9zaG1lbV92dW5tYXAsCisJLnZtX29wcyA9ICZkcm1fZ2VtX3NobWVtX3ZtX29wcywK
K307CisKK3N0cnVjdCBkcm1fZ2VtX29iamVjdCAqdmlydGlvX2dwdV9jcmVhdGVfb2JqZWN0KHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJCQlzaXplX3Qgc2l6ZSkKIHsKLQl1MzIgYyA9IDE7
CisJc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibzsKIAotCXZnYm8tPnBsYWNlbWVudC5wbGFj
ZW1lbnQgPSAmdmdiby0+cGxhY2VtZW50X2NvZGU7Ci0Jdmdiby0+cGxhY2VtZW50LmJ1c3lfcGxh
Y2VtZW50ID0gJnZnYm8tPnBsYWNlbWVudF9jb2RlOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmZw
Zm4gPSAwOwotCXZnYm8tPnBsYWNlbWVudF9jb2RlLmxwZm4gPSAwOwotCXZnYm8tPnBsYWNlbWVu
dF9jb2RlLmZsYWdzID0KLQkJVFRNX1BMX01BU0tfQ0FDSElORyB8IFRUTV9QTF9GTEFHX1RUIHwK
LQkJVFRNX1BMX0ZMQUdfTk9fRVZJQ1Q7Ci0Jdmdiby0+cGxhY2VtZW50Lm51bV9wbGFjZW1lbnQg
PSBjOwotCXZnYm8tPnBsYWNlbWVudC5udW1fYnVzeV9wbGFjZW1lbnQgPSBjOworCWJvID0ga3ph
bGxvYyhzaXplb2YoKmJvKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFibykKKwkJcmV0dXJuIE5VTEw7
CiAKKwlyZXR1cm4gJmJvLT5iYXNlLmJhc2U7CiB9CiAKIGludCB2aXJ0aW9fZ3B1X29iamVjdF9j
cmVhdGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKQEAgLTk3LDI5ICsxMDAsMjMg
QEAgaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2Ug
KnZnZGV2LAogCQkJICAgICBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKipib19wdHIsCiAJCQkg
ICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZSkKIHsKKwlzdHJ1Y3QgZHJtX2dlbV9z
aG1lbV9vYmplY3QgKnNobWVtX29iajsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvOwog
CXN0cnVjdCBkcm1fZ2VtX29iamVjdF9hcnJheSAqb2JqcyA9IE5VTEw7Ci0Jc2l6ZV90IGFjY19z
aXplOwogCWludCByZXQ7CiAKIAkqYm9fcHRyID0gTlVMTDsKIAotCWFjY19zaXplID0gdHRtX2Jv
X2RtYV9hY2Nfc2l6ZSgmdmdkZXYtPm1tYW4uYmRldiwgcGFyYW1zLT5zaXplLAotCQkJCSAgICAg
ICBzaXplb2Yoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KSk7CisJcGFyYW1zLT5zaXplID0gcm91
bmR1cChwYXJhbXMtPnNpemUsIFBBR0VfU0laRSk7CisJc2htZW1fb2JqID0gZHJtX2dlbV9zaG1l
bV9jcmVhdGUodmdkZXYtPmRkZXYsIHBhcmFtcy0+c2l6ZSk7CisJaWYgKElTX0VSUihzaG1lbV9v
YmopKQorCQlyZXR1cm4gUFRSX0VSUihzaG1lbV9vYmopOworCWJvID0gZ2VtX3RvX3ZpcnRpb19n
cHVfb2JqKCZzaG1lbV9vYmotPmJhc2UpOworCWJvLT5iYXNlLmJhc2UuZnVuY3MgPSAmdjNkX2dl
bV9mdW5jczsKIAotCWJvID0ga3phbGxvYyhzaXplb2Yoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0
KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKGJvID09IE5VTEwpCi0JCXJldHVybiAtRU5PTUVNOwogCXJl
dCA9IHZpcnRpb19ncHVfcmVzb3VyY2VfaWRfZ2V0KHZnZGV2LCAmYm8tPmh3X3Jlc19oYW5kbGUp
OwogCWlmIChyZXQgPCAwKSB7Ci0JCWtmcmVlKGJvKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JcGFy
YW1zLT5zaXplID0gcm91bmR1cChwYXJhbXMtPnNpemUsIFBBR0VfU0laRSk7Ci0JcmV0ID0gZHJt
X2dlbV9vYmplY3RfaW5pdCh2Z2Rldi0+ZGRldiwgJmJvLT5nZW1fYmFzZSwgcGFyYW1zLT5zaXpl
KTsKLQlpZiAocmV0ICE9IDApIHsKLQkJdmlydGlvX2dwdV9yZXNvdXJjZV9pZF9wdXQodmdkZXYs
IGJvLT5od19yZXNfaGFuZGxlKTsKLQkJa2ZyZWUoYm8pOworCQlkcm1fZ2VtX3NobWVtX2ZyZWVf
b2JqZWN0KCZzaG1lbV9vYmotPmJhc2UpOwogCQlyZXR1cm4gcmV0OwogCX0KIAliby0+ZHVtYiA9
IHBhcmFtcy0+ZHVtYjsKQEAgLTEyOCw3ICsxMjUsNyBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3Rf
Y3JlYXRlKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJCXN0cnVjdCB3d19hY3F1
aXJlX2N0eCB0aWNrZXQ7CiAKIAkJb2JqcyA9IGRybV9nZW1fYXJyYXlfYWxsb2MoMSk7Ci0JCW9i
anMtPm9ianNbMF0gPSAmYm8tPmdlbV9iYXNlOworCQlvYmpzLT5vYmpzWzBdID0gJmJvLT5iYXNl
LmJhc2U7CiAJCWRybV9nZW1fb2JqZWN0X2dldChvYmpzLT5vYmpzWzBdKTsKIAogCQlyZXQgPSBk
cm1fZ2VtX2xvY2tfcmVzZXJ2YXRpb25zKG9ianMtPm9ianMsIG9ianMtPm5lbnRzLApAQCAtMTQ3
LDc1ICsxNDQsMTIgQEAgaW50IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlv
X2dwdV9kZXZpY2UgKnZnZGV2LAogCQkJCQkgICAgICAgZmVuY2UsIG9ianMpOwogCX0KIAotCXZp
cnRpb19ncHVfaW5pdF90dG1fcGxhY2VtZW50KGJvKTsKLQlyZXQgPSB0dG1fYm9faW5pdCgmdmdk
ZXYtPm1tYW4uYmRldiwgJmJvLT50Ym8sIHBhcmFtcy0+c2l6ZSwKLQkJCSAgdHRtX2JvX3R5cGVf
ZGV2aWNlLCAmYm8tPnBsYWNlbWVudCwgMCwKLQkJCSAgdHJ1ZSwgYWNjX3NpemUsIE5VTEwsCi0J
CQkgIGJvLT5nZW1fYmFzZS5yZXN2LAotCQkJICAmdmlydGlvX2dwdV90dG1fYm9fZGVzdHJveSk7
Ci0JLyogdHRtX2JvX2luaXQgZmFpbHVyZSB3aWxsIGNhbGwgdGhlIGRlc3Ryb3kgKi8KLQlpZiAo
cmV0ICE9IDApCisJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfYXR0YWNoKHZnZGV2LCBibywgTlVM
TCk7CisJaWYgKHJldCAhPSAwKSB7CisJCXZpcnRpb19ncHVfZnJlZV9vYmplY3QoJnNobWVtX29i
ai0+YmFzZSk7CiAJCXJldHVybiByZXQ7CisJfQogCiAJKmJvX3B0ciA9IGJvOwogCXJldHVybiAw
OwogfQotCi12b2lkIHZpcnRpb19ncHVfb2JqZWN0X2t1bm1hcChzdHJ1Y3QgdmlydGlvX2dwdV9v
YmplY3QgKmJvKQotewotCWJvLT52bWFwID0gTlVMTDsKLQl0dG1fYm9fa3VubWFwKCZiby0+a21h
cCk7Ci19Ci0KLWludCB2aXJ0aW9fZ3B1X29iamVjdF9rbWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29i
amVjdCAqYm8pCi17Ci0JYm9vbCBpc19pb21lbTsKLQlpbnQgcjsKLQotCVdBUk5fT04oYm8tPnZt
YXApOwotCi0JciA9IHR0bV9ib19rbWFwKCZiby0+dGJvLCAwLCBiby0+dGJvLm51bV9wYWdlcywg
JmJvLT5rbWFwKTsKLQlpZiAocikKLQkJcmV0dXJuIHI7Ci0JYm8tPnZtYXAgPSB0dG1fa21hcF9v
YmpfdmlydHVhbCgmYm8tPmttYXAsICZpc19pb21lbSk7Ci0JcmV0dXJuIDA7Ci19Ci0KLWludCB2
aXJ0aW9fZ3B1X29iamVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpx
ZGV2LAotCQkJCSAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JaW50IHJldDsK
LQlzdHJ1Y3QgcGFnZSAqKnBhZ2VzID0gYm8tPnRiby50dG0tPnBhZ2VzOwotCWludCBucl9wYWdl
cyA9IGJvLT50Ym8ubnVtX3BhZ2VzOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7
Ci0JCS5pbnRlcnJ1cHRpYmxlID0gZmFsc2UsCi0JCS5ub193YWl0X2dwdSA9IGZhbHNlCi0JfTsK
LQotCS8qIHd0ZiBzd2FwcGluZyAqLwotCWlmIChiby0+cGFnZXMpCi0JCXJldHVybiAwOwotCi0J
aWYgKGJvLT50Ym8udHRtLT5zdGF0ZSA9PSB0dF91bnBvcHVsYXRlZCkKLQkJYm8tPnRiby50dG0t
PmJkZXYtPmRyaXZlci0+dHRtX3R0X3BvcHVsYXRlKGJvLT50Ym8udHRtLCAmY3R4KTsKLQliby0+
cGFnZXMgPSBrbWFsbG9jKHNpemVvZihzdHJ1Y3Qgc2dfdGFibGUpLCBHRlBfS0VSTkVMKTsKLQlp
ZiAoIWJvLT5wYWdlcykKLQkJZ290byBvdXQ7Ci0KLQlyZXQgPSBzZ19hbGxvY190YWJsZV9mcm9t
X3BhZ2VzKGJvLT5wYWdlcywgcGFnZXMsIG5yX3BhZ2VzLCAwLAotCQkJCQlucl9wYWdlcyA8PCBQ
QUdFX1NISUZULCBHRlBfS0VSTkVMKTsKLQlpZiAocmV0KQotCQlnb3RvIG91dDsKLQlyZXR1cm4g
MDsKLW91dDoKLQlrZnJlZShiby0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci0JcmV0dXJu
IC1FTk9NRU07Ci19Ci0KLXZvaWQgdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1
Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQotewotCXNnX2ZyZWVfdGFibGUoYm8tPnBhZ2VzKTsK
LQlrZnJlZShiby0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci19CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS92
aXJ0aW8vdmlydGdwdV9wcmltZS5jCmluZGV4IDhmYmY3MWJkMGM1ZS4uMThhMTU1Y2QwOGQ1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYwpAQCAtMjgsNDYgKzI4LDkgQEAK
ICAqIGRldmljZSB0aGF0IG1pZ2h0IHNoYXJlIGJ1ZmZlcnMgd2l0aCB2aXJ0Z3B1CiAgKi8KIAot
c3RydWN0IHNnX3RhYmxlICp2aXJ0Z3B1X2dlbV9wcmltZV9nZXRfc2dfdGFibGUoc3RydWN0IGRy
bV9nZW1fb2JqZWN0ICpvYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdl
bV90b192aXJ0aW9fZ3B1X29iaihvYmopOwotCi0JaWYgKCFiby0+dGJvLnR0bS0+cGFnZXMgfHwg
IWJvLT50Ym8udHRtLT5udW1fcGFnZXMpCi0JCS8qIHNob3VsZCBub3QgaGFwcGVuICovCi0JCXJl
dHVybiBFUlJfUFRSKC1FSU5WQUwpOwotCi0JcmV0dXJuIGRybV9wcmltZV9wYWdlc190b19zZyhi
by0+dGJvLnR0bS0+cGFnZXMsCi0JCQkJICAgICBiby0+dGJvLnR0bS0+bnVtX3BhZ2VzKTsKLX0K
LQogc3RydWN0IGRybV9nZW1fb2JqZWN0ICp2aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFi
bGUoCiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAq
YXR0YWNoLAogCXN0cnVjdCBzZ190YWJsZSAqdGFibGUpCiB7CiAJcmV0dXJuIEVSUl9QVFIoLUVO
T0RFVik7CiB9Ci0KLXZvaWQgKnZpcnRncHVfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRybV9nZW1f
b2JqZWN0ICpvYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192
aXJ0aW9fZ3B1X29iaihvYmopOwotCWludCByZXQ7Ci0KLQlyZXQgPSB2aXJ0aW9fZ3B1X29iamVj
dF9rbWFwKGJvKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gTlVMTDsKLQlyZXR1cm4gYm8tPnZtYXA7
Ci19Ci0KLXZvaWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29iamVj
dCAqb2JqLCB2b2lkICp2YWRkcikKLXsKLQl2aXJ0aW9fZ3B1X29iamVjdF9rdW5tYXAoZ2VtX3Rv
X3ZpcnRpb19ncHVfb2JqKG9iaikpOwotfQotCi1pbnQgdmlydGdwdV9nZW1fcHJpbWVfbW1hcChz
dHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAq
dm1hKQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8gPSBnZW1fdG9fdmlydGlvX2dw
dV9vYmoob2JqKTsKLQotCWJvLT5nZW1fYmFzZS52bWFfbm9kZS52bV9ub2RlLnN0YXJ0ID0gYm8t
PnRiby52bWFfbm9kZS52bV9ub2RlLnN0YXJ0OwotCXJldHVybiBkcm1fZ2VtX3ByaW1lX21tYXAo
b2JqLCB2bWEpOwotfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1
X3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jCmRlbGV0ZWQgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAzMDBlZjNhODM1MzguLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdHRtLmMKKysrIC9kZXYvbnVsbApAQCAtMSwzMDQg
KzAsMCBAQAotLyoKLSAqIENvcHlyaWdodCAoQykgMjAxNSBSZWQgSGF0LCBJbmMuCi0gKiBBbGwg
UmlnaHRzIFJlc2VydmVkLgotICoKLSAqIEF1dGhvcnM6Ci0gKiAgICBEYXZlIEFpcmxpZQotICog
ICAgQWxvbiBMZXZ5Ci0gKgotICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0
d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiks
Ci0gKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRp
bmcgd2l0aG91dCBsaW1pdGF0aW9uCi0gKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5
LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKLSAqIGFuZC9vciBzZWxs
IGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRo
ZQotICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xs
b3dpbmcgY29uZGl0aW9uczoKLSAqCi0gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQg
dGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgotICogYWxsIGNvcGll
cyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCi0gKgotICogVEhFIFNP
RlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQs
IEVYUFJFU1MgT1IKLSAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhF
IFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAotICogRklUTkVTUyBGT1IgQSBQQVJUSUNV
TEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCi0gKiBU
SEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xB
SU0sIERBTUFHRVMgT1IKLSAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04g
T0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAotICogQVJJU0lORyBGUk9NLCBPVVQgT0Yg
T1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCi0gKiBPVEhF
UiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCi0gKi8KLQotI2luY2x1ZGUgPGRybS90dG0vdHRt
X2JvX2FwaS5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2RyaXZlci5oPgotI2luY2x1ZGUg
PGRybS90dG0vdHRtX3BsYWNlbWVudC5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX3BhZ2VfYWxs
b2MuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9tb2R1bGUuaD4KLSNpbmNsdWRlIDxkcm0vZHJt
UC5oPgotI2luY2x1ZGUgPGRybS9kcm0uaD4KLSNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4K
LSNpbmNsdWRlICJ2aXJ0Z3B1X2Rydi5oIgotCi0jaW5jbHVkZSA8bGludXgvZGVsYXkuaD4KLQot
c3RhdGljIHN0cnVjdAotdmlydGlvX2dwdV9kZXZpY2UgKnZpcnRpb19ncHVfZ2V0X3ZnZGV2KHN0
cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2KQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gKm1t
YW47Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldjsKLQotCW1tYW4gPSBjb250YWlu
ZXJfb2YoYmRldiwgc3RydWN0IHZpcnRpb19ncHVfbW1hbiwgYmRldik7Ci0JdmdkZXYgPSBjb250
YWluZXJfb2YobW1hbiwgc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlLCBtbWFuKTsKLQlyZXR1cm4g
dmdkZXY7Ci19Ci0KLWludCB2aXJ0aW9fZ3B1X21tYXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVj
dCB2bV9hcmVhX3N0cnVjdCAqdm1hKQotewotCXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2Owot
CXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXY7Ci0JaW50IHI7Ci0KLQlmaWxlX3ByaXYg
PSBmaWxwLT5wcml2YXRlX2RhdGE7Ci0JdmdkZXYgPSBmaWxlX3ByaXYtPm1pbm9yLT5kZXYtPmRl
dl9wcml2YXRlOwotCWlmICh2Z2RldiA9PSBOVUxMKSB7Ci0JCURSTV9FUlJPUigKLQkJICJmaWxw
LT5wcml2YXRlX2RhdGEtPm1pbm9yLT5kZXYtPmRldl9wcml2YXRlID09IE5VTExcbiIpOwotCQly
ZXR1cm4gLUVJTlZBTDsKLQl9Ci0JciA9IHR0bV9ib19tbWFwKGZpbHAsIHZtYSwgJnZnZGV2LT5t
bWFuLmJkZXYpOwotCi0JcmV0dXJuIHI7Ci19Ci0KLXN0YXRpYyBpbnQgdmlydGlvX2dwdV9pbnZh
bGlkYXRlX2NhY2hlcyhzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJCQkJdWludDMyX3Qg
ZmxhZ3MpCi17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl9nZXRfbm9k
ZShzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCSAgICAgICBzdHJ1Y3QgdHRt
X2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJICAgICAgIGNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBs
YWNlLAotCQkJICAgICAgIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCW1lbS0+bW1fbm9k
ZSA9ICh2b2lkICopMTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9w
dXRfbm9kZShzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCQlzdHJ1Y3QgdHRt
X21lbV9yZWcgKm1lbSkKLXsKLQltZW0tPm1tX25vZGUgPSAodm9pZCAqKU5VTEw7Ci19Ci0KLXN0
YXRpYyBpbnQgdHRtX2JvX21hbl9pbml0KHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFu
LAotCQkJICAgdW5zaWduZWQgbG9uZyBwX3NpemUpCi17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRp
YyBpbnQgdHRtX2JvX21hbl90YWtlZG93bihzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1h
bikKLXsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9kZWJ1ZyhzdHJ1
Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCSAgICAgc3RydWN0IGRybV9wcmludGVy
ICpwcmludGVyKQotewotfQotCi1zdGF0aWMgY29uc3Qgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5h
Z2VyX2Z1bmMgdmlydGlvX2dwdV9ib19tYW5hZ2VyX2Z1bmMgPSB7Ci0JLmluaXQgPSB0dG1fYm9f
bWFuX2luaXQsCi0JLnRha2Vkb3duID0gdHRtX2JvX21hbl90YWtlZG93biwKLQkuZ2V0X25vZGUg
PSB0dG1fYm9fbWFuX2dldF9ub2RlLAotCS5wdXRfbm9kZSA9IHR0bV9ib19tYW5fcHV0X25vZGUs
Ci0JLmRlYnVnID0gdHRtX2JvX21hbl9kZWJ1ZwotfTsKLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1
X2luaXRfbWVtX3R5cGUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsIHVpbnQzMl90IHR5cGUs
Ci0JCQkJICAgIHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuKQotewotCXN3aXRjaCAo
dHlwZSkgewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQkJLyogU3lzdGVtIG1lbW9yeSAqLwotCQlt
YW4tPmZsYWdzID0gVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVf
Y2FjaGluZyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0g
VFRNX1BMX0ZMQUdfQ0FDSEVEOwotCQlicmVhazsKLQljYXNlIFRUTV9QTF9UVDoKLQkJbWFuLT5m
dW5jID0gJnZpcnRpb19ncHVfYm9fbWFuYWdlcl9mdW5jOwotCQltYW4tPmZsYWdzID0gVFRNX01F
TVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9N
QVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVE
OwotCQlicmVhazsKLQlkZWZhdWx0OgotCQlEUk1fRVJST1IoIlVuc3VwcG9ydGVkIG1lbW9yeSB0
eXBlICV1XG4iLCAodW5zaWduZWQgaW50KXR5cGUpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0J
cmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfZXZpY3RfZmxhZ3Moc3RydWN0
IHR0bV9idWZmZXJfb2JqZWN0ICpibywKLQkJCQlzdHJ1Y3QgdHRtX3BsYWNlbWVudCAqcGxhY2Vt
ZW50KQotewotCXN0YXRpYyBjb25zdCBzdHJ1Y3QgdHRtX3BsYWNlIHBsYWNlbWVudHMgPSB7Ci0J
CS5mcGZuICA9IDAsCi0JCS5scGZuICA9IDAsCi0JCS5mbGFncyA9IFRUTV9QTF9NQVNLX0NBQ0hJ
TkcgfCBUVE1fUExfRkxBR19TWVNURU0sCi0JfTsKLQotCXBsYWNlbWVudC0+cGxhY2VtZW50ID0g
JnBsYWNlbWVudHM7Ci0JcGxhY2VtZW50LT5idXN5X3BsYWNlbWVudCA9ICZwbGFjZW1lbnRzOwot
CXBsYWNlbWVudC0+bnVtX3BsYWNlbWVudCA9IDE7Ci0JcGxhY2VtZW50LT5udW1fYnVzeV9wbGFj
ZW1lbnQgPSAxOwotfQotCi1zdGF0aWMgaW50IHZpcnRpb19ncHVfdmVyaWZ5X2FjY2VzcyhzdHJ1
Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJCSAgICBzdHJ1Y3QgZmlsZSAqZmlscCkKLXsK
LQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fcmVzZXJ2
ZShzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJCQkJIHN0cnVjdCB0dG1fbWVtX3JlZyAq
bWVtKQotewotCXN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuID0gJmJkZXYtPm1hbltt
ZW0tPm1lbV90eXBlXTsKLQotCW1lbS0+YnVzLmFkZHIgPSBOVUxMOwotCW1lbS0+YnVzLm9mZnNl
dCA9IDA7Ci0JbWVtLT5idXMuc2l6ZSA9IG1lbS0+bnVtX3BhZ2VzIDw8IFBBR0VfU0hJRlQ7Ci0J
bWVtLT5idXMuYmFzZSA9IDA7Ci0JbWVtLT5idXMuaXNfaW9tZW0gPSBmYWxzZTsKLQlpZiAoISht
YW4tPmZsYWdzICYgVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRSkpCi0JCXJldHVybiAtRUlOVkFM
OwotCXN3aXRjaCAobWVtLT5tZW1fdHlwZSkgewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQljYXNl
IFRUTV9QTF9UVDoKLQkJLyogc3lzdGVtIG1lbW9yeSAqLwotCQlyZXR1cm4gMDsKLQlkZWZhdWx0
OgotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZp
cnRpb19ncHVfdHRtX2lvX21lbV9mcmVlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJ
CSAgICAgICBzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsKLX0KLQotLyoKLSAqIFRUTSBiYWNr
ZW5kIGZ1bmN0aW9ucy4KLSAqLwotc3RydWN0IHZpcnRpb19ncHVfdHRtX3R0IHsKLQlzdHJ1Y3Qg
dHRtX2RtYV90dAkJdHRtOwotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAgICAgICAgKm9iajsK
LX07Ci0KLXN0YXRpYyBpbnQgdmlydGlvX2dwdV90dG1fdHRfYmluZChzdHJ1Y3QgdHRtX3R0ICp0
dG0sCi0JCQkJICBzdHJ1Y3QgdHRtX21lbV9yZWcgKmJvX21lbSkKLXsKLQlzdHJ1Y3QgdmlydGlv
X2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNvbnRhaW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1
X3R0bV90dCwgdHRtLnR0bSk7Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9Ci0J
CXZpcnRpb19ncHVfZ2V0X3ZnZGV2KGd0dC0+b2JqLT50Ym8uYmRldik7Ci0KLQl2aXJ0aW9fZ3B1
X29iamVjdF9hdHRhY2godmdkZXYsIGd0dC0+b2JqLCBOVUxMKTsKLQlyZXR1cm4gMDsKLX0KLQot
c3RhdGljIGludCB2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQoc3RydWN0IHR0bV90dCAqdHRtKQot
ewotCXN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCAqZ3R0ID0KLQkJY29udGFpbmVyX29mKHR0bSwg
c3RydWN0IHZpcnRpb19ncHVfdHRtX3R0LCB0dG0udHRtKTsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9k
ZXZpY2UgKnZnZGV2ID0KLQkJdmlydGlvX2dwdV9nZXRfdmdkZXYoZ3R0LT5vYmotPnRiby5iZGV2
KTsKLQotCXZpcnRpb19ncHVfb2JqZWN0X2RldGFjaCh2Z2RldiwgZ3R0LT5vYmopOwotCXJldHVy
biAwOwotfQotCi1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3R0bV90dF9kZXN0cm95KHN0cnVjdCB0
dG1fdHQgKnR0bSkKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNvbnRh
aW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7Ci0KLQl0dG1f
ZG1hX3R0X2ZpbmkoJmd0dC0+dHRtKTsKLQlrZnJlZShndHQpOwotfQotCi1zdGF0aWMgc3RydWN0
IHR0bV9iYWNrZW5kX2Z1bmMgdmlydGlvX2dwdV90dF9mdW5jID0gewotCS5iaW5kID0gJnZpcnRp
b19ncHVfdHRtX3R0X2JpbmQsCi0JLnVuYmluZCA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQs
Ci0JLmRlc3Ryb3kgPSAmdmlydGlvX2dwdV90dG1fdHRfZGVzdHJveSwKLX07Ci0KLXN0YXRpYyBz
dHJ1Y3QgdHRtX3R0ICp2aXJ0aW9fZ3B1X3R0bV90dF9jcmVhdGUoc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICpibywKLQkJCQkJICAgICAgIHVpbnQzMl90IHBhZ2VfZmxhZ3MpCi17Ci0Jc3RydWN0
IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldjsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0
dDsKLQotCXZnZGV2ID0gdmlydGlvX2dwdV9nZXRfdmdkZXYoYm8tPmJkZXYpOwotCWd0dCA9IGt6
YWxsb2Moc2l6ZW9mKHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCksIEdGUF9LRVJORUwpOwotCWlm
IChndHQgPT0gTlVMTCkKLQkJcmV0dXJuIE5VTEw7Ci0JZ3R0LT50dG0udHRtLmZ1bmMgPSAmdmly
dGlvX2dwdV90dF9mdW5jOwotCWd0dC0+b2JqID0gY29udGFpbmVyX29mKGJvLCBzdHJ1Y3Qgdmly
dGlvX2dwdV9vYmplY3QsIHRibyk7Ci0JaWYgKHR0bV9kbWFfdHRfaW5pdCgmZ3R0LT50dG0sIGJv
LCBwYWdlX2ZsYWdzKSkgewotCQlrZnJlZShndHQpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0JcmV0
dXJuICZndHQtPnR0bS50dG07Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfYm9fc3dhcF9u
b3RpZnkoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICp0Ym8pCi17Ci0Jc3RydWN0IHZpcnRpb19n
cHVfb2JqZWN0ICpibzsKLQotCWJvID0gY29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRpb19n
cHVfb2JqZWN0LCB0Ym8pOwotCi0JaWYgKGJvLT5wYWdlcykKLQkJdmlydGlvX2dwdV9vYmplY3Rf
ZnJlZV9zZ190YWJsZShibyk7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX2JvX2RyaXZlciB2aXJ0
aW9fZ3B1X2JvX2RyaXZlciA9IHsKLQkudHRtX3R0X2NyZWF0ZSA9ICZ2aXJ0aW9fZ3B1X3R0bV90
dF9jcmVhdGUsCi0JLmludmFsaWRhdGVfY2FjaGVzID0gJnZpcnRpb19ncHVfaW52YWxpZGF0ZV9j
YWNoZXMsCi0JLmluaXRfbWVtX3R5cGUgPSAmdmlydGlvX2dwdV9pbml0X21lbV90eXBlLAotCS5l
dmljdGlvbl92YWx1YWJsZSA9IHR0bV9ib19ldmljdGlvbl92YWx1YWJsZSwKLQkuZXZpY3RfZmxh
Z3MgPSAmdmlydGlvX2dwdV9ldmljdF9mbGFncywKLQkudmVyaWZ5X2FjY2VzcyA9ICZ2aXJ0aW9f
Z3B1X3ZlcmlmeV9hY2Nlc3MsCi0JLmlvX21lbV9yZXNlcnZlID0gJnZpcnRpb19ncHVfdHRtX2lv
X21lbV9yZXNlcnZlLAotCS5pb19tZW1fZnJlZSA9ICZ2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fZnJl
ZSwKLQkuc3dhcF9ub3RpZnkgPSAmdmlydGlvX2dwdV9ib19zd2FwX25vdGlmeSwKLX07Ci0KLWlu
dCB2aXJ0aW9fZ3B1X3R0bV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpCi17
Ci0JaW50IHI7Ci0KLQkvKiBObyBvdGhlcnMgdXNlciBvZiBhZGRyZXNzIHNwYWNlIHNvIHNldCBp
dCB0byAwICovCi0JciA9IHR0bV9ib19kZXZpY2VfaW5pdCgmdmdkZXYtPm1tYW4uYmRldiwKLQkJ
CSAgICAgICAmdmlydGlvX2dwdV9ib19kcml2ZXIsCi0JCQkgICAgICAgdmdkZXYtPmRkZXYtPmFu
b25faW5vZGUtPmlfbWFwcGluZywKLQkJCSAgICAgICBmYWxzZSk7Ci0JaWYgKHIpIHsKLQkJRFJN
X0VSUk9SKCJmYWlsZWQgaW5pdGlhbGl6aW5nIGJ1ZmZlciBvYmplY3QgZHJpdmVyKCVkKS5cbiIs
IHIpOwotCQlnb3RvIGVycl9kZXZfaW5pdDsKLQl9Ci0KLQlyID0gdHRtX2JvX2luaXRfbW0oJnZn
ZGV2LT5tbWFuLmJkZXYsIFRUTV9QTF9UVCwgMCk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJG
YWlsZWQgaW5pdGlhbGl6aW5nIEdUVCBoZWFwLlxuIik7Ci0JCWdvdG8gZXJyX21tX2luaXQ7Ci0J
fQotCXJldHVybiAwOwotCi1lcnJfbW1faW5pdDoKLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZn
ZGV2LT5tbWFuLmJkZXYpOwotZXJyX2Rldl9pbml0OgotCXJldHVybiByOwotfQotCi12b2lkIHZp
cnRpb19ncHVfdHRtX2Zpbmkoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldikKLXsKLQl0
dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZnZGV2LT5tbWFuLmJkZXYpOwotCURSTV9JTkZPKCJ2aXJ0
aW9fZ3B1OiB0dG0gZmluYWxpemVkXG4iKTsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vdmlydGdwdV92cS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3Zx
LmMKaW5kZXggZjA2MDliMDdmODU5Li41NjQyMmI1OTEzMjggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV92cS5jCkBAIC05NzQsMTcgKzk3NCwyMSBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3Rf
YXR0YWNoKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJYm9vbCB1c2VfZG1hX2Fw
aSA9ICF2aXJ0aW9faGFzX2lvbW11X3F1aXJrKHZnZGV2LT52ZGV2KTsKIAlzdHJ1Y3QgdmlydGlv
X2dwdV9tZW1fZW50cnkgKmVudHM7CiAJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZzsKLQlpbnQgc2ks
IG5lbnRzOworCWludCBzaSwgbmVudHMsIHJldDsKIAogCWlmIChXQVJOX09OX09OQ0UoIW9iai0+
Y3JlYXRlZCkpCiAJCXJldHVybiAtRUlOVkFMOworCWlmIChXQVJOX09OX09OQ0Uob2JqLT5wYWdl
cykpCisJCXJldHVybiAtRUlOVkFMOwogCi0JaWYgKCFvYmotPnBhZ2VzKSB7Ci0JCWludCByZXQ7
CisJcmV0ID0gZHJtX2dlbV9zaG1lbV9waW4oJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAocmV0IDwg
MCkKKwkJcmV0dXJuIC1FSU5WQUw7CiAKLQkJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfZ2V0X3Nn
X3RhYmxlKHZnZGV2LCBvYmopOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKKwlvYmotPnBh
Z2VzID0gZHJtX2dlbV9zaG1lbV9nZXRfc2dfdGFibGUoJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAo
b2JqLT5wYWdlcyA9PSBOVUxMKSB7CisJCWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5i
YXNlKTsKKwkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCiAJaWYgKHVzZV9kbWFfYXBpKSB7CkBAIC0x
MDIzLDYgKzEwMjcsOSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3Qgdmly
dGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogewogCWJvb2wgdXNlX2RtYV9hcGkgPSAhdmlydGlvX2hh
c19pb21tdV9xdWlyayh2Z2Rldi0+dmRldik7CiAKKwlpZiAoV0FSTl9PTl9PTkNFKCFvYmotPnBh
Z2VzKSkKKwkJcmV0dXJuOworCiAJaWYgKHVzZV9kbWFfYXBpICYmIG9iai0+bWFwcGVkKSB7CiAJ
CXN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZSA9IHZpcnRpb19ncHVfZmVuY2VfYWxsb2Mo
dmdkZXYpOwogCQkvKiBkZXRhY2ggYmFja2luZyBhbmQgd2FpdCBmb3IgdGhlIGhvc3QgcHJvY2Vz
cyBpdCAuLi4gKi8KQEAgLTEwMzgsNiArMTA0NSwxMSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0
X2RldGFjaChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCX0gZWxzZSB7CiAJCXZp
cnRpb19ncHVfY21kX3Jlc291cmNlX2ludmFsX2JhY2tpbmcodmdkZXYsIG9iai0+aHdfcmVzX2hh
bmRsZSwgTlVMTCk7CiAJfQorCisJc2dfZnJlZV90YWJsZShvYmotPnBhZ2VzKTsKKwlvYmotPnBh
Z2VzID0gTlVMTDsKKworCWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKIH0K
IAogdm9pZCB2aXJ0aW9fZ3B1X2N1cnNvcl9waW5nKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAq
dmdkZXYsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcgYi9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcKaW5kZXggYmEzNmU5MzNiYjQ5Li5lZmYzMDQ3MDUy
ZDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZworKysgYi9kcml2
ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcKQEAgLTMsNyArMyw3IEBAIGNvbmZpZyBEUk1fVklS
VElPX0dQVQogCXRyaXN0YXRlICJWaXJ0aW8gR1BVIGRyaXZlciIKIAlkZXBlbmRzIG9uIERSTSAm
JiBWSVJUSU8gJiYgTU1VCiAJc2VsZWN0IERSTV9LTVNfSEVMUEVSCi0Jc2VsZWN0IERSTV9UVE0K
KwlzZWxlY3QgRFJNX0dFTV9TSE1FTV9IRUxQRVIKIAloZWxwCiAJICAgVGhpcyBpcyB0aGUgdmly
dHVhbCBHUFUgZHJpdmVyIGZvciB2aXJ0aW8uICBJdCBjYW4gYmUgdXNlZCB3aXRoCiAJICAgUUVN
VSBiYXNlZCBWTU1zIChsaWtlIEtWTSBvciBYZW4pLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUKaW5k
ZXggNDU4ZTYwNmE5MzZmLi45MmFhMmIzZDM0OWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQpA
QCAtNCw3ICs0LDcgQEAKICMgRGlyZWN0IFJlbmRlcmluZyBJbmZyYXN0cnVjdHVyZSAoRFJJKSBp
biBYRnJlZTg2IDQuMS4wIGFuZCBoaWdoZXIuCiAKIHZpcnRpby1ncHUteSA6PSB2aXJ0Z3B1X2Ry
di5vIHZpcnRncHVfa21zLm8gdmlydGdwdV9nZW0ubyBcCi0JdmlydGdwdV9kaXNwbGF5Lm8gdmly
dGdwdV92cS5vIHZpcnRncHVfdHRtLm8gXAorCXZpcnRncHVfZGlzcGxheS5vIHZpcnRncHVfdnEu
byBcCiAJdmlydGdwdV9mZW5jZS5vIHZpcnRncHVfb2JqZWN0Lm8gdmlydGdwdV9kZWJ1Z2ZzLm8g
dmlydGdwdV9wbGFuZS5vIFwKIAl2aXJ0Z3B1X2lvY3RsLm8gdmlydGdwdV9wcmltZS5vIHZpcnRn
cHVfdHJhY2VfcG9pbnRzLm8KIAotLSAKMi4xOC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9kcmktZGV2ZWw=
