Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6124EF32A3
	for <lists+dri-devel@lfdr.de>; Thu,  7 Nov 2019 16:14:40 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5CF256F6D9;
	Thu,  7 Nov 2019 15:14:37 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from us-smtp-delivery-1.mimecast.com (us-smtp-1.mimecast.com
 [205.139.110.61])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0A97C6F6D9
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 15:14:35 +0000 (UTC)
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-374-7s86bSfPMgmzkpoQVMNIZw-1; Thu, 07 Nov 2019 10:14:30 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
 [10.5.11.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id B77E0107ACC3;
 Thu,  7 Nov 2019 15:14:26 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-12-21.pek2.redhat.com [10.72.12.21])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 08C5E600D1;
 Thu,  7 Nov 2019 15:14:02 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: kvm@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 intel-gfx@lists.freedesktop.org, intel-gvt-dev@lists.freedesktop.org,
 kwankhede@nvidia.com, alex.williamson@redhat.com, mst@redhat.com,
 tiwei.bie@intel.com
Subject: [PATCH V11 6/6] docs: sample driver to demonstrate how to implement
 virtio-mdev framework
Date: Thu,  7 Nov 2019 23:11:09 +0800
Message-Id: <20191107151109.23261-7-jasowang@redhat.com>
In-Reply-To: <20191107151109.23261-1-jasowang@redhat.com>
References: <20191107151109.23261-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-MC-Unique: 7s86bSfPMgmzkpoQVMNIZw-1
X-Mimecast-Spam-Score: 0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=redhat.com; 
 s=mimecast20190719; t=1573139674;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=I+fjq8F2z2+dQ11YdLKz+4+uqeQo1azxEeqDNmmz1pk=;
 b=EbEqdhxlePtnDcq7r4dgzrj/EVgdMzXcWggrNY7DUUZZ/uQon9kmL5DlVgInaOKhG+eHa0
 l4IXHgo9wzWzHbZVpRHmMMLhsK1uOktdcFMu8bSdmx1PXo4iLlnFqOJqJn6omiPSbo1Aep
 XqnhfqfvjcoWctWWh1MSBeqDW4PWzQg=
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: rdunlap@infradead.org, christophe.de.dinechin@gmail.com,
 sebott@linux.ibm.com, airlied@linux.ie, Jason Wang <jasowang@redhat.com>,
 heiko.carstens@de.ibm.com, kevin.tian@intel.com,
 virtualization@lists.linux-foundation.org, rob.miller@broadcom.com,
 lulu@redhat.com, eperezma@redhat.com, pasic@linux.ibm.com,
 borntraeger@de.ibm.com, haotian.wang@sifive.com, zhi.a.wang@intel.com,
 farman@linux.ibm.com, parav@mellanox.com, gor@linux.ibm.com,
 cunming.liang@intel.com, rodrigo.vivi@intel.com, xiao.w.wang@intel.com,
 freude@linux.ibm.com, stefanha@redhat.com, zhihong.wang@intel.com,
 akrowiak@linux.ibm.com, netdev@vger.kernel.org, cohuck@redhat.com,
 oberpar@linux.ibm.com, maxime.coquelin@redhat.com, lingshan.zhu@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBzYW1wbGUgZHJpdmVyIGNyZWF0ZXMgbWRldiBkZXZpY2UgdGhhdCBzaW11bGF0ZSB2aXJ0
aW8gbmV0IGRldmljZQpvdmVyIHZpcnRpbyBtZGV2IHRyYW5zcG9ydC4gVGhlIGRldmljZSBpcyBp
bXBsZW1lbnRlZCB0aHJvdWdoIHZyaW5naAphbmQgd29ya3F1ZXVlLiBBIGRldmljZSBzcGVjaWZp
YyBkbWEgb3BzIGlzIHRvIG1ha2Ugc3VyZSBIVkEgaXMgdXNlZApkaXJlY3RseSBhcyB0aGUgSU9W
QS4gVGhpcyBzaG91bGQgYmUgc3VmZmljaWVudCBmb3Iga2VybmVsIHZpcnRpbwpkcml2ZXIgdG8g
d29yay4KCk9ubHkgJ3ZpcnRpbycgdHlwZSBpcyBzdXBwb3J0ZWQgcmlnaHQgbm93LiBJIHBsYW4g
dG8gYWRkICd2aG9zdCcgdHlwZQpvbiB0b3Agd2hpY2ggcmVxdWlyZXMgc29tZSB2aXJ0dWFsIElP
TU1VIGltcGxlbWVudGVkIGluIHRoaXMgc2FtcGxlCmRyaXZlci4KClNpZ25lZC1vZmYtYnk6IEph
c29uIFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+Ci0tLQogTUFJTlRBSU5FUlMgICAgICAgICAg
ICAgICAgICAgICAgICB8ICAgMSArCiBzYW1wbGVzL0tjb25maWcgICAgICAgICAgICAgICAgICAg
IHwgIDEwICsKIHNhbXBsZXMvdmZpby1tZGV2L01ha2VmaWxlICAgICAgICAgfCAgIDEgKwogc2Ft
cGxlcy92ZmlvLW1kZXYvbXZuZXRfbG9vcGJhY2suYyB8IDY4NyArKysrKysrKysrKysrKysrKysr
KysrKysrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCA2OTkgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IHNhbXBsZXMvdmZpby1tZGV2L212bmV0X2xvb3BiYWNrLmMKCmRpZmYgLS1naXQg
YS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTCmluZGV4IDQ5OTc5NTc0NDNkZi4uNjJjM2VhZmE5
OWIwIDEwMDY0NAotLS0gYS9NQUlOVEFJTkVSUworKysgYi9NQUlOVEFJTkVSUwpAQCAtMTcyNDks
NiArMTcyNDksNyBAQCBGOglpbmNsdWRlL3VhcGkvbGludXgvdmlydGlvXyouaAogRjoJZHJpdmVy
cy9jcnlwdG8vdmlydGlvLwogRjoJbW0vYmFsbG9vbl9jb21wYWN0aW9uLmMKIEY6CWluY2x1ZGUv
bGludXgvbWRldl92aXJ0aW9fb3BzLmgKK0Y6CXNhbXBsZXMvdmZpby1tZGV2L212bmV0X2xvb3Bi
YWNrLmMKIAogVklSVElPIEJMT0NLIEFORCBTQ1NJIERSSVZFUlMKIE06CSJNaWNoYWVsIFMuIFRz
aXJraW4iIDxtc3RAcmVkaGF0LmNvbT4KZGlmZiAtLWdpdCBhL3NhbXBsZXMvS2NvbmZpZyBiL3Nh
bXBsZXMvS2NvbmZpZwppbmRleCBjOGRhY2I0ZGRhODAuLjViMzQ3ZTkwZmQyMCAxMDA2NDQKLS0t
IGEvc2FtcGxlcy9LY29uZmlnCisrKyBiL3NhbXBsZXMvS2NvbmZpZwpAQCAtMTMxLDYgKzEzMSwx
NiBAQCBjb25maWcgU0FNUExFX1ZGSU9fTURFVl9NRFBZCiAJICBtZWRpYXRlZCBkZXZpY2UuICBJ
dCBpcyBhIHNpbXBsZSBmcmFtZWJ1ZmZlciBhbmQgc3VwcG9ydHMKIAkgIHRoZSByZWdpb24gZGlz
cGxheSBpbnRlcmZhY2UgKFZGSU9fR0ZYX1BMQU5FX1RZUEVfUkVHSU9OKS4KIAorY29uZmlnIFNB
TVBMRV9WSVJUSU9fTURFVl9ORVRfTE9PUEJBQ0sKKwl0cmlzdGF0ZSAiQnVpbGQgbG9vcGJhY2sg
VklSVElPIG5ldCBleGFtcGxlIG1lZGlhdGVkIGRldmljZSBzYW1wbGUgY29kZSAtLSBsb2FkYWJs
ZSBtb2R1bGVzIG9ubHkiCisJZGVwZW5kcyBvbiBWSVJUSU9fTURFViAmJiBWSE9TVF9SSU5HICYm
IG0KKwloZWxwCisJICBCdWlsZCBhIG5ldHdvcmtpbmcgc2FtcGxlIGRldmljZSBmb3IgdXNlIGFz
IGEgdmlydGlvCisJICBtZWRpYXRlZCBkZXZpY2UuIFRoZSBkZXZpY2UgY29vcGVyYXRlcyB3aXRo
IHZpcnRpby1tZGV2IGJ1cworCSAgZHJpdmVyIHRvIHByZXNlbnQgYW4gdmlydGlvIGV0aGVybmV0
IGRyaXZlciBmb3IKKwkgIGtlcm5lbC4gSXQgc2ltcGx5IGxvb3BiYWNrcyBhbGwgcGFja2V0cyBm
cm9tIGl0cyBUWAorCSAgdmlydHF1ZXVlIHRvIGl0cyBSWCB2aXJ0cXVldWUuCisKIGNvbmZpZyBT
QU1QTEVfVkZJT19NREVWX01EUFlfRkIKIAl0cmlzdGF0ZSAiQnVpbGQgVkZJTyBtZHB5IGV4YW1w
bGUgZ3Vlc3QgZmJkZXYgZHJpdmVyIC0tIGxvYWRhYmxlIG1vZHVsZSBvbmx5IgogCWRlcGVuZHMg
b24gRkIgJiYgbQpkaWZmIC0tZ2l0IGEvc2FtcGxlcy92ZmlvLW1kZXYvTWFrZWZpbGUgYi9zYW1w
bGVzL3ZmaW8tbWRldi9NYWtlZmlsZQppbmRleCAxMGQxNzljNGZkZWIuLjgxNzYxODU2OTg0OCAx
MDA2NDQKLS0tIGEvc2FtcGxlcy92ZmlvLW1kZXYvTWFrZWZpbGUKKysrIGIvc2FtcGxlcy92Zmlv
LW1kZXYvTWFrZWZpbGUKQEAgLTMsMyArMyw0IEBAIG9iai0kKENPTkZJR19TQU1QTEVfVkZJT19N
REVWX01UVFkpICs9IG10dHkubwogb2JqLSQoQ09ORklHX1NBTVBMRV9WRklPX01ERVZfTURQWSkg
Kz0gbWRweS5vCiBvYmotJChDT05GSUdfU0FNUExFX1ZGSU9fTURFVl9NRFBZX0ZCKSArPSBtZHB5
LWZiLm8KIG9iai0kKENPTkZJR19TQU1QTEVfVkZJT19NREVWX01CT0NIUykgKz0gbWJvY2hzLm8K
K29iai0kKENPTkZJR19TQU1QTEVfVklSVElPX01ERVZfTkVUX0xPT1BCQUNLKSArPSBtdm5ldF9s
b29wYmFjay5vCmRpZmYgLS1naXQgYS9zYW1wbGVzL3ZmaW8tbWRldi9tdm5ldF9sb29wYmFjay5j
IGIvc2FtcGxlcy92ZmlvLW1kZXYvbXZuZXRfbG9vcGJhY2suYwpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwMDAwMDAuLmU3OTAwMDRkZGViOQotLS0gL2Rldi9udWxsCisrKyBiL3Nh
bXBsZXMvdmZpby1tZGV2L212bmV0X2xvb3BiYWNrLmMKQEAgLTAsMCArMSw2ODcgQEAKKy8vIFNQ
RFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKKy8qCisgKiBNZWRpYXRlZCB2aXJ0
dWFsIHZpcnRpby1uZXQgZGV2aWNlIGRyaXZlci4KKyAqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTks
IFJlZCBIYXQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLgorICogICAgIEF1dGhvcjogSmFzb24g
V2FuZyA8amFzb3dhbmdAcmVkaGF0LmNvbT4KKyAqCisgKiBTYW1wbGUgZHJpdmVyIHRoYXQgY3Jl
YXRlcyBtZGV2IGRldmljZSB0aGF0IHNpbXVsYXRlcyBldGhlcm5ldCBsb29wYmFjaworICogZGV2
aWNlLgorICoKKyAqIFVzYWdlOgorICoKKyAqICMgbW9kcHJvYmUgdmlydGlvX21kZXYKKyAqICMg
bW9kcHJvYmUgbXZuZXRfbG9vcGJhY2sKKyAqICMgY2QgL3N5cy9kZXZpY2VzL3ZpcnR1YWwvbXZu
ZXRfbG9vcGJhY2svbXZuZXRfbG9vcGJhY2svIFwKKyAqICAgICAgbWRldl9zdXBwb3J0ZWRfdHlw
ZXMvbXZuZXRfbG9vcGJhY2stdmlydGlvCisgKiAjIGVjaG8gIjgzYjhmNGYyLTUwOWYtMzgyZi0z
YzFlLWU2YmZlMGZhMTAwMSIgPiAuL2NyZWF0ZQorICogIyBjZCBkZXZpY2VzLzgzYjhmNGYyLTUw
OWYtMzgyZi0zYzFlLWU2YmZlMGZhMTAwMQorICogIyBscyAtZCB2aXJ0aW8wCisgKiB2aXJ0aW8w
CisgKi8KKworI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUu
aD4KKyNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4K
KyNpbmNsdWRlIDxsaW51eC9mcy5oPgorI2luY2x1ZGUgPGxpbnV4L3BvbGwuaD4KKyNpbmNsdWRl
IDxsaW51eC9zbGFiLmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQuaD4KKyNpbmNsdWRlIDxsaW51
eC93YWl0Lmg+CisjaW5jbHVkZSA8bGludXgvdXVpZC5oPgorI2luY2x1ZGUgPGxpbnV4L2lvbW11
Lmg+CisjaW5jbHVkZSA8bGludXgvc3lzZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9maWxlLmg+Cisj
aW5jbHVkZSA8bGludXgvZXRoZXJkZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9tZGV2Lmg+Cisj
aW5jbHVkZSA8bGludXgvdnJpbmdoLmg+CisjaW5jbHVkZSA8bGludXgvbWRldl92aXJ0aW9fb3Bz
Lmg+CisjaW5jbHVkZSA8dWFwaS9saW51eC92aXJ0aW9fY29uZmlnLmg+CisjaW5jbHVkZSA8dWFw
aS9saW51eC92aXJ0aW9fbmV0Lmg+CisKKyNkZWZpbmUgVkVSU0lPTl9TVFJJTkcgICIwLjEiCisj
ZGVmaW5lIERSSVZFUl9BVVRIT1IgICAiUmVkIEhhdCBDb3Jwb3JhdGlvbiIKKworI2RlZmluZSBN
Vk5FVF9DTEFTU19OQU1FICJtdm5ldF9sb29wYmFjayIKKyNkZWZpbmUgTVZORVRfTkFNRSAgICAg
ICAibXZuZXRfbG9vcGJhY2siCisKKy8qCisgKiBHbG9iYWwgU3RydWN0dXJlcworICovCisKK3N0
YXRpYyBzdHJ1Y3QgbXZuZXRfZGV2IHsKKwlzdHJ1Y3QgY2xhc3MJKnZkX2NsYXNzOworCXN0cnVj
dCBpZHIJdmRfaWRyOworCXN0cnVjdCBkZXZpY2UJZGV2OworfSBtdm5ldF9kZXY7CisKK3N0cnVj
dCBtdm5ldF92aXJ0cXVldWUgeworCXN0cnVjdCB2cmluZ2ggdnJpbmc7CisJc3RydWN0IHZyaW5n
aF9raW92IGlvdjsKKwl1bnNpZ25lZCBzaG9ydCBoZWFkOworCWJvb2wgcmVhZHk7CisJdTY0IGRl
c2NfYWRkcjsKKwl1NjQgZGV2aWNlX2FkZHI7CisJdTY0IGRyaXZlcl9hZGRyOworCXUzMiBudW07
CisJdm9pZCAqcHJpdmF0ZTsKKwlpcnFyZXR1cm5fdCAoKmNiKSh2b2lkICpkYXRhKTsKK307CisK
KyNkZWZpbmUgTVZORVRfUVVFVUVfQUxJR04gUEFHRV9TSVpFCisjZGVmaW5lIE1WTkVUX1FVRVVF
X01BWCAyNTYKKyNkZWZpbmUgTVZORVRfREVWSUNFX0lEIDB4MQorI2RlZmluZSBNVk5FVF9WRU5E
T1JfSUQgMAorCit1NjQgbXZuZXRfZmVhdHVyZXMgPSAoMVVMTCA8PCBWSVJUSU9fRl9BTllfTEFZ
T1VUKSB8CisJCSAgICAgKDFVTEwgPDwgVklSVElPX0ZfVkVSU0lPTl8xKSB8CisJCSAgICAgKDFV
TEwgPDwgVklSVElPX0ZfSU9NTVVfUExBVEZPUk0pOworCisvKiBTdGF0ZSBvZiBlYWNoIG1kZXYg
ZGV2aWNlICovCitzdHJ1Y3QgbXZuZXRfc3RhdGUgeworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUg
dnFzWzJdOworCXN0cnVjdCB3b3JrX3N0cnVjdCB3b3JrOworCS8qIHNwaW5sb2NrIHRvIHN5bmNo
cm9uaXplIHZpcnRxdWV1ZSBzdGF0ZSAqLworCXNwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgbWRl
dl9kZXZpY2UgKm1kZXY7CisJc3RydWN0IHZpcnRpb19uZXRfY29uZmlnIGNvbmZpZzsKKwl2b2lk
ICpidWZmZXI7CisJdTMyIHN0YXR1czsKKwl1MzIgZ2VuZXJhdGlvbjsKKwl1NjQgZmVhdHVyZXM7
CisJc3RydWN0IGxpc3RfaGVhZCBuZXh0OworfTsKKworc3RhdGljIHN0cnVjdCBtdXRleCBtZGV2
X2xpc3RfbG9jazsKK3N0YXRpYyBzdHJ1Y3QgbGlzdF9oZWFkIG1kZXZfZGV2aWNlc19saXN0Owor
CitzdGF0aWMgdm9pZCBtdm5ldF9xdWV1ZV9yZWFkeShzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0
LCB1bnNpZ25lZCBpbnQgaWR4KQoreworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12
bmV0LT52cXNbaWR4XTsKKwlpbnQgcmV0OworCisJcmV0ID0gdnJpbmdoX2luaXRfa2VybigmdnEt
PnZyaW5nLCBtdm5ldF9mZWF0dXJlcywgTVZORVRfUVVFVUVfTUFYLAorCQkJICAgICAgIGZhbHNl
LCAoc3RydWN0IHZyaW5nX2Rlc2MgKil2cS0+ZGVzY19hZGRyLAorCQkJICAgICAgIChzdHJ1Y3Qg
dnJpbmdfYXZhaWwgKil2cS0+ZHJpdmVyX2FkZHIsCisJCQkgICAgICAgKHN0cnVjdCB2cmluZ191
c2VkICopdnEtPmRldmljZV9hZGRyKTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfdnFfcmVzZXQo
c3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEpCit7CisJdnEtPnJlYWR5ID0gMDsKKwl2cS0+ZGVz
Y19hZGRyID0gMDsKKwl2cS0+ZHJpdmVyX2FkZHIgPSAwOworCXZxLT5kZXZpY2VfYWRkciA9IDA7
CisJdnEtPmNiID0gTlVMTDsKKwl2cS0+cHJpdmF0ZSA9IE5VTEw7CisJdnJpbmdoX2luaXRfa2Vy
bigmdnEtPnZyaW5nLCBtdm5ldF9mZWF0dXJlcywgTVZORVRfUVVFVUVfTUFYLAorCQkJIGZhbHNl
LCAwLCAwLCAwKTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfcmVzZXQoc3RydWN0IG12bmV0X3N0
YXRlICptdm5ldCkKK3sKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCAyOyBpKyspCisJCW12
bmV0X3ZxX3Jlc2V0KCZtdm5ldC0+dnFzW2ldKTsKKworCW12bmV0LT5mZWF0dXJlcyA9IDA7CisJ
bXZuZXQtPnN0YXR1cyA9IDA7CisJKyttdm5ldC0+Z2VuZXJhdGlvbjsKK30KKworc3RhdGljIHZv
aWQgbXZuZXRfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCit7CisJc3RydWN0IG12bmV0
X3N0YXRlICptdm5ldCA9IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3QKKwkJCQkJCSBtdm5ldF9z
dGF0ZSwgd29yayk7CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdHhxID0gJm12bmV0LT52cXNb
MV07CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqcnhxID0gJm12bmV0LT52cXNbMF07CisJc2l6
ZV90IHJlYWQsIHdyaXRlLCB0b3RhbF93cml0ZTsKKwlpbnQgZXJyOworCWludCBwa3RzID0gMDsK
KworCXNwaW5fbG9jaygmbXZuZXQtPmxvY2spOworCisJaWYgKCF0eHEtPnJlYWR5IHx8ICFyeHEt
PnJlYWR5KQorCQlnb3RvIG91dDsKKworCXdoaWxlICh0cnVlKSB7CisJCXRvdGFsX3dyaXRlID0g
MDsKKwkJZXJyID0gdnJpbmdoX2dldGRlc2Nfa2VybigmdHhxLT52cmluZywgJnR4cS0+aW92LCBO
VUxMLAorCQkJCQkgICZ0eHEtPmhlYWQsIEdGUF9BVE9NSUMpOworCQlpZiAoZXJyIDw9IDApCisJ
CQlicmVhazsKKworCQllcnIgPSB2cmluZ2hfZ2V0ZGVzY19rZXJuKCZyeHEtPnZyaW5nLCBOVUxM
LCAmcnhxLT5pb3YsCisJCQkJCSAgJnJ4cS0+aGVhZCwgR0ZQX0FUT01JQyk7CisJCWlmIChlcnIg
PD0gMCkgeworCQkJdnJpbmdoX2NvbXBsZXRlX2tlcm4oJnR4cS0+dnJpbmcsIHR4cS0+aGVhZCwg
MCk7CisJCQlicmVhazsKKwkJfQorCisJCXdoaWxlICh0cnVlKSB7CisJCQlyZWFkID0gdnJpbmdo
X2lvdl9wdWxsX2tlcm4oJnR4cS0+aW92LCBtdm5ldC0+YnVmZmVyLAorCQkJCQkJICAgIFBBR0Vf
U0laRSk7CisJCQlpZiAocmVhZCA8PSAwKQorCQkJCWJyZWFrOworCisJCQl3cml0ZSA9IHZyaW5n
aF9pb3ZfcHVzaF9rZXJuKCZyeHEtPmlvdiwgbXZuZXQtPmJ1ZmZlciwKKwkJCQkJCSAgICAgcmVh
ZCk7CisJCQlpZiAod3JpdGUgPD0gMCkKKwkJCQlicmVhazsKKworCQkJdG90YWxfd3JpdGUgKz0g
d3JpdGU7CisJCX0KKworCQkvKiBNYWtlIHN1cmUgZGF0YSBpcyB3cm90ZSBiZWZvcmUgYWR2YW5j
aW5nIGluZGV4ICovCisJCXNtcF93bWIoKTsKKworCQl2cmluZ2hfY29tcGxldGVfa2VybigmdHhx
LT52cmluZywgdHhxLT5oZWFkLCAwKTsKKwkJdnJpbmdoX2NvbXBsZXRlX2tlcm4oJnJ4cS0+dnJp
bmcsIHJ4cS0+aGVhZCwgdG90YWxfd3JpdGUpOworCisJCS8qIE1ha2Ugc3VyZSB1c2VkIGlzIHZp
c2libGUgYmVmb3JlIHJhc2luZyB0aGUgaW50ZXJydXB0LiAqLworCQlzbXBfd21iKCk7CisKKwkJ
bG9jYWxfYmhfZGlzYWJsZSgpOworCQlpZiAodHhxLT5jYikKKwkJCXR4cS0+Y2IodHhxLT5wcml2
YXRlKTsKKwkJaWYgKHJ4cS0+Y2IpCisJCQlyeHEtPmNiKHJ4cS0+cHJpdmF0ZSk7CisJCWxvY2Fs
X2JoX2VuYWJsZSgpOworCisJCWlmICgrK3BrdHMgPiA0KSB7CisJCQlzY2hlZHVsZV93b3JrKCZt
dm5ldC0+d29yayk7CisJCQlnb3RvIG91dDsKKwkJfQorCX0KKworb3V0OgorCXNwaW5fdW5sb2Nr
KCZtdm5ldC0+bG9jayk7Cit9CisKK3N0YXRpYyBkbWFfYWRkcl90IG12bmV0X21hcF9wYWdlKHN0
cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IHBhZ2UgKnBhZ2UsCisJCQkJIHVuc2lnbmVkIGxvbmcg
b2Zmc2V0LCBzaXplX3Qgc2l6ZSwKKwkJCQkgZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGlyLAor
CQkJCSB1bnNpZ25lZCBsb25nIGF0dHJzKQoreworCS8qIFZyaW5naCBjYW4gb25seSB1c2UgSFZB
ICovCisJcmV0dXJuIChkbWFfYWRkcl90KShwYWdlX2FkZHJlc3MocGFnZSkgKyBvZmZzZXQpOwor
fQorCitzdGF0aWMgdm9pZCBtdm5ldF91bm1hcF9wYWdlKHN0cnVjdCBkZXZpY2UgKmRldiwgZG1h
X2FkZHJfdCBkbWFfYWRkciwKKwkJCSAgICAgc2l6ZV90IHNpemUsIGVudW0gZG1hX2RhdGFfZGly
ZWN0aW9uIGRpciwKKwkJCSAgICAgdW5zaWduZWQgbG9uZyBhdHRycykKK3sKK30KKworc3RhdGlj
IHZvaWQgKm12bmV0X2FsbG9jX2NvaGVyZW50KHN0cnVjdCBkZXZpY2UgKmRldiwgc2l6ZV90IHNp
emUsCisJCQkJICBkbWFfYWRkcl90ICpkbWFfYWRkciwgZ2ZwX3QgZmxhZywKKwkJCQkgIHVuc2ln
bmVkIGxvbmcgYXR0cnMpCit7CisJdm9pZCAqYWRkciA9IGttYWxsb2Moc2l6ZSwgZmxhZyk7CisK
KwlpZiAoIWFkZHIpCisJCSpkbWFfYWRkciA9IERNQV9NQVBQSU5HX0VSUk9SOworCWVsc2UKKwkJ
KmRtYV9hZGRyID0gKGRtYV9hZGRyX3QpYWRkcjsKKworCXJldHVybiBhZGRyOworfQorCitzdGF0
aWMgdm9pZCBtdm5ldF9mcmVlX2NvaGVyZW50KHN0cnVjdCBkZXZpY2UgKmRldiwgc2l6ZV90IHNp
emUsCisJCQkJdm9pZCAqdmFkZHIsIGRtYV9hZGRyX3QgZG1hX2FkZHIsCisJCQkJdW5zaWduZWQg
bG9uZyBhdHRycykKK3sKKwlrZnJlZSgodm9pZCAqKWRtYV9hZGRyKTsKK30KKworc3RhdGljIGNv
bnN0IHN0cnVjdCBkbWFfbWFwX29wcyBtdm5ldF9kbWFfb3BzID0geworCS5tYXBfcGFnZSA9IG12
bmV0X21hcF9wYWdlLAorCS51bm1hcF9wYWdlID0gbXZuZXRfdW5tYXBfcGFnZSwKKwkuYWxsb2Mg
PSBtdm5ldF9hbGxvY19jb2hlcmVudCwKKwkuZnJlZSA9IG12bmV0X2ZyZWVfY29oZXJlbnQsCit9
OworCitzdGF0aWMgY29uc3Qgc3RydWN0IG1kZXZfdmlydGlvX2RldmljZV9vcHMgbWRldl92aXJ0
aW9fb3BzOworCitzdGF0aWMgaW50IG12bmV0X2NyZWF0ZShzdHJ1Y3Qga29iamVjdCAqa29iaiwg
c3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQ7
CisJc3RydWN0IHZpcnRpb19uZXRfY29uZmlnICpjb25maWc7CisJc3RydWN0IGRldmljZSAqZGV2
ID0gbWRldl9kZXYobWRldik7CisKKwlpZiAoIW1kZXYpCisJCXJldHVybiAtRUlOVkFMOworCisJ
bXZuZXQgPSBremFsbG9jKHNpemVvZigqbXZuZXQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIW12bmV0
KQorCQlyZXR1cm4gLUVOT01FTTsKKworCW12bmV0LT5idWZmZXIgPSBrbWFsbG9jKFBBR0VfU0la
RSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFtdm5ldC0+YnVmZmVyKSB7CisJCWtmcmVlKG12bmV0KTsK
KwkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJY29uZmlnID0gJm12bmV0LT5jb25maWc7CisJY29u
ZmlnLT5tdHUgPSAxNTAwOworCWNvbmZpZy0+c3RhdHVzID0gVklSVElPX05FVF9TX0xJTktfVVA7
CisJZXRoX3JhbmRvbV9hZGRyKGNvbmZpZy0+bWFjKTsKKworCUlOSVRfV09SSygmbXZuZXQtPndv
cmssIG12bmV0X3dvcmspOworCisJc3Bpbl9sb2NrX2luaXQoJm12bmV0LT5sb2NrKTsKKwltdm5l
dC0+bWRldiA9IG1kZXY7CisJbWRldl9zZXRfZHJ2ZGF0YShtZGV2LCBtdm5ldCk7CisKKwltdXRl
eF9sb2NrKCZtZGV2X2xpc3RfbG9jayk7CisJbGlzdF9hZGQoJm12bmV0LT5uZXh0LCAmbWRldl9k
ZXZpY2VzX2xpc3QpOworCW11dGV4X3VubG9jaygmbWRldl9saXN0X2xvY2spOworCisJZGV2LT5j
b2hlcmVudF9kbWFfbWFzayA9IERNQV9CSVRfTUFTSyg2NCk7CisJc2V0X2RtYV9vcHMoZGV2LCAm
bXZuZXRfZG1hX29wcyk7CisKKwltZGV2X3NldF92aXJ0aW9fb3BzKG1kZXYsICZtZGV2X3ZpcnRp
b19vcHMpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfcmVtb3ZlKHN0cnVj
dCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm1kcywgKnRtcF9t
ZHM7CisJc3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7
CisJaW50IHJldCA9IC1FSU5WQUw7CisKKwltdXRleF9sb2NrKCZtZGV2X2xpc3RfbG9jayk7CisJ
bGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKG1kcywgdG1wX21kcywgJm1kZXZfZGV2aWNlc19saXN0
LCBuZXh0KSB7CisJCWlmIChtdm5ldCA9PSBtZHMpIHsKKwkJCWxpc3RfZGVsKCZtdm5ldC0+bmV4
dCk7CisJCQltZGV2X3NldF9kcnZkYXRhKG1kZXYsIE5VTEwpOworCQkJa2ZyZWUobXZuZXQtPmJ1
ZmZlcik7CisJCQlrZnJlZShtdm5ldCk7CisJCQlyZXQgPSAwOworCQkJYnJlYWs7CisJCX0KKwl9
CisJbXV0ZXhfdW5sb2NrKCZtZGV2X2xpc3RfbG9jayk7CisKKwlyZXR1cm4gcmV0OworfQorCitz
dGF0aWMgc3NpemVfdAorc2FtcGxlX212bmV0X2Rldl9zaG93KHN0cnVjdCBkZXZpY2UgKmRldiwg
c3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCisJCSAgICAgIGNoYXIgKmJ1ZikKK3sKKwlp
ZiAobWRldl9mcm9tX2RldihkZXYpKQorCQlyZXR1cm4gc3ByaW50ZihidWYsICJUaGlzIGlzIE1E
RVYgJXNcbiIsIGRldl9uYW1lKGRldikpOworCisJcmV0dXJuIHNwcmludGYoYnVmLCAiXG4iKTsK
K30KKworc3RhdGljIERFVklDRV9BVFRSX1JPKHNhbXBsZV9tdm5ldF9kZXYpOworCitzdGF0aWMg
c3RydWN0IGF0dHJpYnV0ZSAqbXZuZXRfZGV2X2F0dHJzW10gPSB7CisJJmRldl9hdHRyX3NhbXBs
ZV9tdm5ldF9kZXYuYXR0ciwKKwlOVUxMLAorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRy
aWJ1dGVfZ3JvdXAgbXZuZXRfZGV2X2dyb3VwID0geworCS5uYW1lICA9ICJtdm5ldF9kZXYiLAor
CS5hdHRycyA9IG12bmV0X2Rldl9hdHRycywKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgYXR0
cmlidXRlX2dyb3VwICptdm5ldF9kZXZfZ3JvdXBzW10gPSB7CisJJm12bmV0X2Rldl9ncm91cCwK
KwlOVUxMLAorfTsKKworc3RhdGljIHNzaXplX3QKK3NhbXBsZV9tZGV2X2Rldl9zaG93KHN0cnVj
dCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCisJCSAgICAgY2hh
ciAqYnVmKQoreworCWlmIChtZGV2X2Zyb21fZGV2KGRldikpCisJCXJldHVybiBzcHJpbnRmKGJ1
ZiwgIlRoaXMgaXMgTURFViAlc1xuIiwgZGV2X25hbWUoZGV2KSk7CisKKwlyZXR1cm4gc3ByaW50
ZihidWYsICJcbiIpOworfQorCitzdGF0aWMgREVWSUNFX0FUVFJfUk8oc2FtcGxlX21kZXZfZGV2
KTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKm1kZXZfZGV2X2F0dHJzW10gPSB7CisJJmRl
dl9hdHRyX3NhbXBsZV9tZGV2X2Rldi5hdHRyLAorCU5VTEwsCit9OworCitzdGF0aWMgY29uc3Qg
c3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X2Rldl9ncm91cCA9IHsKKwkubmFtZSAgPSAidmVu
ZG9yIiwKKwkuYXR0cnMgPSBtZGV2X2Rldl9hdHRycywKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1
Y3QgYXR0cmlidXRlX2dyb3VwICptZGV2X2Rldl9ncm91cHNbXSA9IHsKKwkmbWRldl9kZXZfZ3Jv
dXAsCisJTlVMTCwKK307CisKKyNkZWZpbmUgTVZORVRfU1RSSU5HX0xFTiAxNgorCitzdGF0aWMg
c3NpemVfdAorbmFtZV9zaG93KHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3QgZGV2aWNlICpk
ZXYsIGNoYXIgKmJ1ZikKK3sKKwljaGFyIG5hbWVbTVZORVRfU1RSSU5HX0xFTl07CisJY29uc3Qg
Y2hhciAqbmFtZV9zdHIgPSAidmlydGlvLW5ldCI7CisKKwlzbnByaW50ZihuYW1lLCBNVk5FVF9T
VFJJTkdfTEVOLCAiJXMiLCBkZXZfZHJpdmVyX3N0cmluZyhkZXYpKTsKKwlpZiAoIXN0cmNtcChr
b2JqLT5uYW1lLCBuYW1lKSkKKwkJcmV0dXJuIHNwcmludGYoYnVmLCAiJXNcbiIsIG5hbWVfc3Ry
KTsKKworCXJldHVybiAtRUlOVkFMOworfQorCitzdGF0aWMgTURFVl9UWVBFX0FUVFJfUk8obmFt
ZSk7CisKK3N0YXRpYyBzc2l6ZV90CithdmFpbGFibGVfaW5zdGFuY2VzX3Nob3coc3RydWN0IGtv
YmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwgY2hhciAqYnVmKQoreworCXJldHVybiBz
cHJpbnRmKGJ1ZiwgIiVkXG4iLCBJTlRfTUFYKTsKK30KKworc3RhdGljIE1ERVZfVFlQRV9BVFRS
X1JPKGF2YWlsYWJsZV9pbnN0YW5jZXMpOworCitzdGF0aWMgc3NpemVfdCBkZXZpY2VfYXBpX3No
b3coc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwKKwkJCSAgICAgICBj
aGFyICpidWYpCit7CisJcmV0dXJuIHNwcmludGYoYnVmLCAiJXNcbiIsIFZJUlRJT19NREVWX0RF
VklDRV9BUElfU1RSSU5HKTsKK30KKworc3RhdGljIE1ERVZfVFlQRV9BVFRSX1JPKGRldmljZV9h
cGkpOworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZSAqbWRldl90eXBlc19hdHRyc1tdID0gewor
CSZtZGV2X3R5cGVfYXR0cl9uYW1lLmF0dHIsCisJJm1kZXZfdHlwZV9hdHRyX2RldmljZV9hcGku
YXR0ciwKKwkmbWRldl90eXBlX2F0dHJfYXZhaWxhYmxlX2luc3RhbmNlcy5hdHRyLAorCU5VTEws
Cit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBtZGV2X3R5cGVfZ3JvdXAgPSB7
CisJLm5hbWUgID0gInZpcnRpbyIsCisJLmF0dHJzID0gbWRldl90eXBlc19hdHRycywKK307CisK
Ky8qIFRCRDogInZob3N0IiB0eXBlICovCisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlX2dyb3Vw
ICptZGV2X3R5cGVfZ3JvdXBzW10gPSB7CisJJm1kZXZfdHlwZV9ncm91cCwKKwlOVUxMLAorfTsK
Kworc3RhdGljIGludCBtdm5ldF9zZXRfdnFfYWRkcmVzcyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1k
ZXYsIHUxNiBpZHgsCisJCQkJdTY0IGRlc2NfYXJlYSwgdTY0IGRyaXZlcl9hcmVhLCB1NjQgZGV2
aWNlX2FyZWEpCit7CisJc3RydWN0IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZfZ2V0X2RydmRh
dGEobWRldik7CisJc3RydWN0IG12bmV0X3ZpcnRxdWV1ZSAqdnEgPSAmbXZuZXQtPnZxc1tpZHhd
OworCisJdnEtPmRlc2NfYWRkciA9IGRlc2NfYXJlYTsKKwl2cS0+ZHJpdmVyX2FkZHIgPSBkcml2
ZXJfYXJlYTsKKwl2cS0+ZGV2aWNlX2FkZHIgPSBkZXZpY2VfYXJlYTsKKworCXJldHVybiAwOwor
fQorCitzdGF0aWMgdm9pZCBtdm5ldF9zZXRfdnFfbnVtKHN0cnVjdCBtZGV2X2RldmljZSAqbWRl
diwgdTE2IGlkeCwgdTMyIG51bSkKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRl
dl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZtdm5l
dC0+dnFzW2lkeF07CisKKwl2cS0+bnVtID0gbnVtOworfQorCitzdGF0aWMgdm9pZCBtdm5ldF9r
aWNrX3ZxKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCkKK3sKKwlzdHJ1Y3QgbXZu
ZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRf
dmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwlpZiAodnEtPnJlYWR5KQorCQlz
Y2hlZHVsZV93b3JrKCZtdm5ldC0+d29yayk7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3NldF92
cV9jYihzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIHUxNiBpZHgsCisJCQkgICAgc3RydWN0IHZp
cnRpb19tZGV2X2NhbGxiYWNrICpjYikKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0g
bWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRfdmlydHF1ZXVlICp2cSA9ICZt
dm5ldC0+dnFzW2lkeF07CisKKwl2cS0+Y2IgPSBjYi0+Y2FsbGJhY2s7CisJdnEtPnByaXZhdGUg
PSBjYi0+cHJpdmF0ZTsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfc2V0X3ZxX3JlYWR5KHN0cnVj
dCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgYm9vbCByZWFkeSkKK3sKKwlzdHJ1Y3QgbXZu
ZXRfc3RhdGUgKm12bmV0ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlzdHJ1Y3QgbXZuZXRf
dmlydHF1ZXVlICp2cSA9ICZtdm5ldC0+dnFzW2lkeF07CisKKwlzcGluX2xvY2soJm12bmV0LT5s
b2NrKTsKKwl2cS0+cmVhZHkgPSByZWFkeTsKKwlpZiAodnEtPnJlYWR5KQorCQltdm5ldF9xdWV1
ZV9yZWFkeShtdm5ldCwgaWR4KTsKKwlzcGluX3VubG9jaygmbXZuZXQtPmxvY2spOworfQorCitz
dGF0aWMgYm9vbCBtdm5ldF9nZXRfdnFfcmVhZHkoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1
MTYgaWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRh
KG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsK
KworCXJldHVybiB2cS0+cmVhZHk7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRfc2V0X3ZxX3N0YXRl
KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTE2IGlkeCwgdTY0IHN0YXRlKQoreworCXN0cnVj
dCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBt
dm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0LT52cXNbaWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2
cmggPSAmdnEtPnZyaW5nOworCisJc3Bpbl9sb2NrKCZtdm5ldC0+bG9jayk7CisJdnJoLT5sYXN0
X2F2YWlsX2lkeCA9IHN0YXRlOworCXNwaW5fdW5sb2NrKCZtdm5ldC0+bG9jayk7CisKKwlyZXR1
cm4gMDsKK30KKworc3RhdGljIHU2NCBtdm5ldF9nZXRfdnFfc3RhdGUoc3RydWN0IG1kZXZfZGV2
aWNlICptZGV2LCB1MTYgaWR4KQoreworCXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2
X2dldF9kcnZkYXRhKG1kZXYpOworCXN0cnVjdCBtdm5ldF92aXJ0cXVldWUgKnZxID0gJm12bmV0
LT52cXNbaWR4XTsKKwlzdHJ1Y3QgdnJpbmdoICp2cmggPSAmdnEtPnZyaW5nOworCisJcmV0dXJu
IHZyaC0+bGFzdF9hdmFpbF9pZHg7Cit9CisKK3N0YXRpYyB1MTYgbXZuZXRfZ2V0X3ZxX2FsaWdu
KHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKK3sKKwlyZXR1cm4gTVZORVRfUVVFVUVfQUxJR047
Cit9CisKK3N0YXRpYyB1NjQgbXZuZXRfZ2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2X2RldmljZSAq
bWRldikKK3sKKwlyZXR1cm4gbXZuZXRfZmVhdHVyZXM7Cit9CisKK3N0YXRpYyBpbnQgbXZuZXRf
c2V0X2ZlYXR1cmVzKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdTY0IGZlYXR1cmVzKQorewor
CXN0cnVjdCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCisJ
LyogRE1BIG1hcHBpbmcgbXVzdCBiZSBkb25lIGJ5IGRyaXZlciAqLworCWlmICghKGZlYXR1cmVz
ICYgKDFVTEwgPDwgVklSVElPX0ZfSU9NTVVfUExBVEZPUk0pKSkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKKwltdm5ldC0+ZmVhdHVyZXMgPSBmZWF0dXJlcyAmIG12bmV0X2ZlYXR1cmVzOworCisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIG12bmV0X3NldF9jb25maWdfY2Ioc3RydWN0IG1kZXZf
ZGV2aWNlICptZGV2LAorCQkJCXN0cnVjdCB2aXJ0aW9fbWRldl9jYWxsYmFjayAqY2IpCit7CisJ
LyogV2UgZG9uJ3Qgc3VwcG9ydCBjb25maWcgaW50ZXJydXB0ICovCit9CisKK3N0YXRpYyB1MTYg
bXZuZXRfZ2V0X3ZxX251bV9tYXgoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQoreworCXJldHVy
biBNVk5FVF9RVUVVRV9NQVg7Cit9CisKK3N0YXRpYyB1MzIgbXZuZXRfZ2V0X2RldmljZV9pZChz
dHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJcmV0dXJuIE1WTkVUX0RFVklDRV9JRDsKK30K
Kworc3RhdGljIHUzMiBtdm5ldF9nZXRfdmVuZG9yX2lkKHN0cnVjdCBtZGV2X2RldmljZSAqbWRl
dikKK3sKKwlyZXR1cm4gTVZORVRfVkVORE9SX0lEOworfQorCitzdGF0aWMgdTggbXZuZXRfZ2V0
X3N0YXR1cyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYpCit7CisJc3RydWN0IG12bmV0X3N0YXRl
ICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7CisKKwlyZXR1cm4gbXZuZXQtPnN0YXR1
czsKK30KKworc3RhdGljIHZvaWQgbXZuZXRfc2V0X3N0YXR1cyhzdHJ1Y3QgbWRldl9kZXZpY2Ug
Km1kZXYsIHU4IHN0YXR1cykKK3sKKwlzdHJ1Y3QgbXZuZXRfc3RhdGUgKm12bmV0ID0gbWRldl9n
ZXRfZHJ2ZGF0YShtZGV2KTsKKworCW12bmV0LT5zdGF0dXMgPSBzdGF0dXM7CisKKwlpZiAoc3Rh
dHVzID09IDApIHsKKwkJc3Bpbl9sb2NrKCZtdm5ldC0+bG9jayk7CisJCW12bmV0X3Jlc2V0KG12
bmV0KTsKKwkJc3Bpbl91bmxvY2soJm12bmV0LT5sb2NrKTsKKwl9Cit9CisKK3N0YXRpYyB2b2lk
IG12bmV0X2dldF9jb25maWcoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LCB1bnNpZ25lZCBpbnQg
b2Zmc2V0LAorCQkJICAgICB2b2lkICpidWYsIHVuc2lnbmVkIGludCBsZW4pCit7CisJc3RydWN0
IG12bmV0X3N0YXRlICptdm5ldCA9IG1kZXZfZ2V0X2RydmRhdGEobWRldik7CisKKwlpZiAob2Zm
c2V0ICsgbGVuIDwgc2l6ZW9mKHN0cnVjdCB2aXJ0aW9fbmV0X2NvbmZpZykpCisJCW1lbWNweShi
dWYsICZtdm5ldC0+Y29uZmlnICsgb2Zmc2V0LCBsZW4pOworfQorCitzdGF0aWMgdm9pZCBtdm5l
dF9zZXRfY29uZmlnKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldiwgdW5zaWduZWQgaW50IG9mZnNl
dCwKKwkJCSAgICAgY29uc3Qgdm9pZCAqYnVmLCB1bnNpZ25lZCBpbnQgbGVuKQoreworCS8qIE5v
IHdyaXRhYmxlIGNvbmZpZyBzdXBwb3J0dGVkIGJ5IG12bmV0ICovCit9CisKK3N0YXRpYyB1MzIg
bXZuZXRfZ2V0X2dlbmVyYXRpb24oc3RydWN0IG1kZXZfZGV2aWNlICptZGV2KQoreworCXN0cnVj
dCBtdm5ldF9zdGF0ZSAqbXZuZXQgPSBtZGV2X2dldF9kcnZkYXRhKG1kZXYpOworCisJcmV0dXJu
IG12bmV0LT5nZW5lcmF0aW9uOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IG1kZXZfdmlydGlv
X2RldmljZV9vcHMgbWRldl92aXJ0aW9fb3BzID0geworCS5zZXRfdnFfYWRkcmVzcyAgICAgICAg
ID0gbXZuZXRfc2V0X3ZxX2FkZHJlc3MsCisJLnNldF92cV9udW0gICAgICAgICAgICAgPSBtdm5l
dF9zZXRfdnFfbnVtLAorCS5raWNrX3ZxICAgICAgICAgICAgICAgID0gbXZuZXRfa2lja192cSwK
Kwkuc2V0X3ZxX2NiICAgICAgICAgICAgICA9IG12bmV0X3NldF92cV9jYiwKKwkuc2V0X3ZxX3Jl
YWR5ICAgICAgICAgICA9IG12bmV0X3NldF92cV9yZWFkeSwKKwkuZ2V0X3ZxX3JlYWR5ICAgICAg
ICAgICA9IG12bmV0X2dldF92cV9yZWFkeSwKKwkuc2V0X3ZxX3N0YXRlICAgICAgICAgICA9IG12
bmV0X3NldF92cV9zdGF0ZSwKKwkuZ2V0X3ZxX3N0YXRlICAgICAgICAgICA9IG12bmV0X2dldF92
cV9zdGF0ZSwKKwkuZ2V0X3ZxX2FsaWduICAgICAgICAgICA9IG12bmV0X2dldF92cV9hbGlnbiwK
KwkuZ2V0X2ZlYXR1cmVzICAgICAgICAgICA9IG12bmV0X2dldF9mZWF0dXJlcywKKwkuc2V0X2Zl
YXR1cmVzICAgICAgICAgICA9IG12bmV0X3NldF9mZWF0dXJlcywKKwkuc2V0X2NvbmZpZ19jYiAg
ICAgICAgICA9IG12bmV0X3NldF9jb25maWdfY2IsCisJLmdldF92cV9udW1fbWF4ICAgICAgICAg
PSBtdm5ldF9nZXRfdnFfbnVtX21heCwKKwkuZ2V0X2RldmljZV9pZCAgICAgICAgICA9IG12bmV0
X2dldF9kZXZpY2VfaWQsCisJLmdldF92ZW5kb3JfaWQgICAgICAgICAgPSBtdm5ldF9nZXRfdmVu
ZG9yX2lkLAorCS5nZXRfc3RhdHVzICAgICAgICAgICAgID0gbXZuZXRfZ2V0X3N0YXR1cywKKwku
c2V0X3N0YXR1cyAgICAgICAgICAgICA9IG12bmV0X3NldF9zdGF0dXMsCisJLmdldF9jb25maWcg
ICAgICAgICAgICAgPSBtdm5ldF9nZXRfY29uZmlnLAorCS5zZXRfY29uZmlnICAgICAgICAgICAg
ID0gbXZuZXRfc2V0X2NvbmZpZywKKwkuZ2V0X2dlbmVyYXRpb24gICAgICAgICA9IG12bmV0X2dl
dF9nZW5lcmF0aW9uLAorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCBtZGV2X3BhcmVudF9vcHMg
bWRldl9mb3BzID0geworCS5vd25lciAgICAgICAgICAgICAgICAgID0gVEhJU19NT0RVTEUsCisJ
LmRldl9hdHRyX2dyb3VwcyAgICAgICAgPSBtdm5ldF9kZXZfZ3JvdXBzLAorCS5tZGV2X2F0dHJf
Z3JvdXBzICAgICAgID0gbWRldl9kZXZfZ3JvdXBzLAorCS5zdXBwb3J0ZWRfdHlwZV9ncm91cHMg
ID0gbWRldl90eXBlX2dyb3VwcywKKwkuY3JlYXRlICAgICAgICAgICAgICAgICA9IG12bmV0X2Ny
ZWF0ZSwKKwkucmVtb3ZlCQkJPSBtdm5ldF9yZW1vdmUsCit9OworCitzdGF0aWMgdm9pZCBtdm5l
dF9kZXZpY2VfcmVsZWFzZShzdHJ1Y3QgZGV2aWNlICpkZXYpCit7CisJZGV2X2RiZyhkZXYsICJt
dm5ldDogcmVsZWFzZWRcbiIpOworfQorCitzdGF0aWMgaW50IF9faW5pdCBtdm5ldF9kZXZfaW5p
dCh2b2lkKQoreworCWludCByZXQgPSAwOworCisJcHJfaW5mbygibXZuZXRfZGV2OiAlc1xuIiwg
X19mdW5jX18pOworCisJbWVtc2V0KCZtdm5ldF9kZXYsIDAsIHNpemVvZihtdm5ldF9kZXYpKTsK
KworCWlkcl9pbml0KCZtdm5ldF9kZXYudmRfaWRyKTsKKworCW12bmV0X2Rldi52ZF9jbGFzcyA9
IGNsYXNzX2NyZWF0ZShUSElTX01PRFVMRSwgTVZORVRfQ0xBU1NfTkFNRSk7CisKKwlpZiAoSVNf
RVJSKG12bmV0X2Rldi52ZF9jbGFzcykpIHsKKwkJcHJfZXJyKCJFcnJvcjogZmFpbGVkIHRvIHJl
Z2lzdGVyIG12bmV0X2RldiBjbGFzc1xuIik7CisJCXJldCA9IFBUUl9FUlIobXZuZXRfZGV2LnZk
X2NsYXNzKTsKKwkJZ290byBmYWlsZWQxOworCX0KKworCW12bmV0X2Rldi5kZXYuY2xhc3MgPSBt
dm5ldF9kZXYudmRfY2xhc3M7CisJbXZuZXRfZGV2LmRldi5yZWxlYXNlID0gbXZuZXRfZGV2aWNl
X3JlbGVhc2U7CisJZGV2X3NldF9uYW1lKCZtdm5ldF9kZXYuZGV2LCAiJXMiLCBNVk5FVF9OQU1F
KTsKKworCXJldCA9IGRldmljZV9yZWdpc3RlcigmbXZuZXRfZGV2LmRldik7CisJaWYgKHJldCkK
KwkJZ290byBmYWlsZWQyOworCisJcmV0ID0gbWRldl9yZWdpc3Rlcl9kZXZpY2UoJm12bmV0X2Rl
di5kZXYsICZtZGV2X2ZvcHMpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbGVkMzsKKworCW11dGV4
X2luaXQoJm1kZXZfbGlzdF9sb2NrKTsKKwlJTklUX0xJU1RfSEVBRCgmbWRldl9kZXZpY2VzX2xp
c3QpOworCisJZ290byBhbGxfZG9uZTsKKworZmFpbGVkMzoKKworCWRldmljZV91bnJlZ2lzdGVy
KCZtdm5ldF9kZXYuZGV2KTsKK2ZhaWxlZDI6CisJY2xhc3NfZGVzdHJveShtdm5ldF9kZXYudmRf
Y2xhc3MpOworCitmYWlsZWQxOgorYWxsX2RvbmU6CisJcmV0dXJuIHJldDsKK30KKworc3RhdGlj
IHZvaWQgX19leGl0IG12bmV0X2Rldl9leGl0KHZvaWQpCit7CisJbXZuZXRfZGV2LmRldi5idXMg
PSBOVUxMOworCW1kZXZfdW5yZWdpc3Rlcl9kZXZpY2UoJm12bmV0X2Rldi5kZXYpOworCisJZGV2
aWNlX3VucmVnaXN0ZXIoJm12bmV0X2Rldi5kZXYpOworCWlkcl9kZXN0cm95KCZtdm5ldF9kZXYu
dmRfaWRyKTsKKwljbGFzc19kZXN0cm95KG12bmV0X2Rldi52ZF9jbGFzcyk7CisJbXZuZXRfZGV2
LnZkX2NsYXNzID0gTlVMTDsKKwlwcl9pbmZvKCJtdm5ldF9kZXY6IFVubG9hZGVkIVxuIik7Cit9
CisKK21vZHVsZV9pbml0KG12bmV0X2Rldl9pbml0KQorbW9kdWxlX2V4aXQobXZuZXRfZGV2X2V4
aXQpCisKK01PRFVMRV9MSUNFTlNFKCJHUEwgdjIiKTsKK01PRFVMRV9JTkZPKHN1cHBvcnRlZCwg
IlNpbXVsYXRlIGxvb3BiYWNrIGV0aGVybmV0IGRldmljZSBvdmVyIG1kZXYiKTsKK01PRFVMRV9W
RVJTSU9OKFZFUlNJT05fU1RSSU5HKTsKK01PRFVMRV9BVVRIT1IoRFJJVkVSX0FVVEhPUik7Ci0t
IAoyLjE5LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
