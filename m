Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2CB4C52486
	for <lists+dri-devel@lfdr.de>; Tue, 25 Jun 2019 09:28:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 564CB6E03B;
	Tue, 25 Jun 2019 07:27:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com
 [148.163.156.1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 078D1897FD
 for <dri-devel@lists.freedesktop.org>; Tue, 25 Jun 2019 03:19:35 +0000 (UTC)
Received: from pps.filterd (m0098404.ppops.net [127.0.0.1])
 by mx0a-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x5P36h8p098746
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:34 -0400
Received: from e06smtp03.uk.ibm.com (e06smtp03.uk.ibm.com [195.75.94.99])
 by mx0a-001b2d01.pphosted.com with ESMTP id 2tbagtj7re-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:34 -0400
Received: from localhost
 by e06smtp03.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Tue, 25 Jun 2019 04:19:31 +0100
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
 by e06smtp03.uk.ibm.com (192.168.101.133) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Tue, 25 Jun 2019 04:19:22 +0100
Received: from d06av26.portsmouth.uk.ibm.com (d06av26.portsmouth.uk.ibm.com
 [9.149.105.62])
 by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x5P3JL6J43384890
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Tue, 25 Jun 2019 03:19:21 GMT
Received: from d06av26.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 75F53AE057;
 Tue, 25 Jun 2019 03:19:21 +0000 (GMT)
Received: from d06av26.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 7C43CAE058;
 Tue, 25 Jun 2019 03:19:20 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by d06av26.portsmouth.uk.ibm.com (Postfix) with ESMTP;
 Tue, 25 Jun 2019 03:19:20 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 5E386A02C5;
 Tue, 25 Jun 2019 13:19:19 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v4 4/7] lib/hexdump.c: Replace ascii bool in
 hex_dump_to_buffer with flags
Date: Tue, 25 Jun 2019 13:17:23 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190625031726.12173-1-alastair@au1.ibm.com>
References: <20190625031726.12173-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19062503-0012-0000-0000-0000032C1757
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19062503-0013-0000-0000-000021654AAD
Message-Id: <20190625031726.12173-5-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-06-25_02:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1906250024
X-Mailman-Approved-At: Tue, 25 Jun 2019 07:27:07 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpJbiBvcmRlciB0
byBzdXBwb3J0IGFkZGl0aW9uYWwgZmVhdHVyZXMsIHJlbmFtZSBoZXhfZHVtcF90b19idWZmZXIg
dG8KaGV4X2R1bXBfdG9fYnVmZmVyX2V4dCwgYW5kIHJlcGxhY2UgdGhlIGFzY2lpIGJvb2wgcGFy
YW1ldGVyIHdpdGggZmxhZ3MuCgpBIHdyYXBwZXIgaXMgcHJvdmlkZWQgZm9yIGNhbGxlcnMgdGhh
dCBkbyBub3QgbmVlZCBhbnl0aGluZyBidXQgYSBiYXNpYwpkdW1wLgoKU2lnbmVkLW9mZi1ieTog
QWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMgICAgICAgIHwgIDUgKy0KIGRyaXZlcnMvaXNkbi9o
YXJkd2FyZS9tSVNETi9tSVNETmlzYXIuYyAgICAgICB8IDEwICsrLS0KIGRyaXZlcnMvbWFpbGJv
eC9tYWlsYm94LXRlc3QuYyAgICAgICAgICAgICAgICB8ICA4ICsrLS0KIGRyaXZlcnMvbmV0L2V0
aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMgICAgICB8ICAyICstCiAuLi4vbmV0L2V0aGVybmV0
L3N5bm9wc3lzL2R3Yy14bGdtYWMtY29tbW9uLmMgfCAgMiArLQogZHJpdmVycy9uZXQvd2lyZWxl
c3MvYXRoL2F0aDEway9kZWJ1Zy5jICAgICAgIHwgIDcgKy0tCiAuLi4vbmV0L3dpcmVsZXNzL2lu
dGVsL2l3bGVnYWN5LzM5NDUtbWFjLmMgICAgfCAgNCArLQogZHJpdmVycy9wbGF0Zm9ybS9jaHJv
bWUvd2lsY29fZWMvZGVidWdmcy5jICAgIHwgMTAgKystLQogZHJpdmVycy9zY3NpL3Njc2lfbG9n
Z2luZy5jICAgICAgICAgICAgICAgICAgIHwgIDggKystLQogZHJpdmVycy9zdGFnaW5nL2ZidGZ0
L2ZidGZ0LWNvcmUuYyAgICAgICAgICAgIHwgIDIgKy0KIGZzL3NlcV9maWxlLmMgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICA2ICsrLQogaW5jbHVkZS9saW51eC9wcmludGsuaCAg
ICAgICAgICAgICAgICAgICAgICAgIHwgNDYgKysrKysrKysrKysrKysrKystLQogbGliL2hleGR1
bXAuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMjQgKysrKystLS0tLQogbGli
L3Rlc3RfaGV4ZHVtcC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMTAgKystLQogMTQg
ZmlsZXMgY2hhbmdlZCwgOTQgaW5zZXJ0aW9ucygrKSwgNTAgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCBlZWE5YmVjMDRmMWIuLjY0MTg5YTBl
NWVjOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTEzMzgsOSAr
MTMzOCw4IEBAIHN0YXRpYyB2b2lkIGhleGR1bXAoc3RydWN0IGRybV9wcmludGVyICptLCBjb25z
dCB2b2lkICpidWYsIHNpemVfdCBsZW4pCiAJCX0KIAogCQlXQVJOX09OX09OQ0UoaGV4X2R1bXBf
dG9fYnVmZmVyKGJ1ZiArIHBvcywgbGVuIC0gcG9zLAotCQkJCQkJcm93c2l6ZSwgc2l6ZW9mKHUz
MiksCi0JCQkJCQlsaW5lLCBzaXplb2YobGluZSksCi0JCQkJCQlmYWxzZSkgPj0gc2l6ZW9mKGxp
bmUpKTsKKwkJCQkJCXJvd3NpemUsIHNpemVvZih1MzIpLCBsaW5lLAorCQkJCQkJc2l6ZW9mKGxp
bmUpKSA+PSBzaXplb2YobGluZSkpOwogCQlkcm1fcHJpbnRmKG0sICJbJTA0enhdICVzXG4iLCBw
b3MsIGxpbmUpOwogCiAJCXByZXYgPSBidWYgKyBwb3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lz
ZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMgYi9kcml2ZXJzL2lzZG4vaGFyZHdhcmUvbUlT
RE4vbUlTRE5pc2FyLmMKaW5kZXggZmQ1YzUyZjM3ODAyLi44NDQ1NWI1MjEyNDYgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvaXNkbi9oYXJkd2FyZS9tSVNETi9tSVNETmlzYXIuYworKysgYi9kcml2ZXJz
L2lzZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMKQEAgLTcwLDggKzcwLDkgQEAgc2VuZF9t
Ym94KHN0cnVjdCBpc2FyX2h3ICppc2FyLCB1OCBoaXMsIHU4IGNyZWcsIHU4IGxlbiwgdTggKm1z
ZykKIAkJCWludCBsID0gMDsKIAogCQkJd2hpbGUgKGwgPCAoaW50KWxlbikgewotCQkJCWhleF9k
dW1wX3RvX2J1ZmZlcihtc2cgKyBsLCBsZW4gLSBsLCAzMiwgMSwKLQkJCQkJCSAgIGlzYXItPmxv
ZywgMjU2LCAxKTsKKwkJCQloZXhfZHVtcF90b19idWZmZXJfZXh0KG1zZyArIGwsIGxlbiAtIGws
IDMyLCAxLAorCQkJCQkJICAgICAgIGlzYXItPmxvZywgMjU2LAorCQkJCQkJICAgICAgIEhFWERV
TVBfQVNDSUkpOwogCQkJCXByX2RlYnVnKCIlczogJXMgJTAyeDogJXNcbiIsIGlzYXItPm5hbWUs
CiAJCQkJCSBfX2Z1bmNfXywgbCwgaXNhci0+bG9nKTsKIAkJCQlsICs9IDMyOwpAQCAtOTksOCAr
MTAwLDkgQEAgcmN2X21ib3goc3RydWN0IGlzYXJfaHcgKmlzYXIsIHU4ICptc2cpCiAJCQlpbnQg
bCA9IDA7CiAKIAkJCXdoaWxlIChsIDwgKGludClpc2FyLT5jbHNiKSB7Ci0JCQkJaGV4X2R1bXBf
dG9fYnVmZmVyKG1zZyArIGwsIGlzYXItPmNsc2IgLSBsLCAzMiwKLQkJCQkJCSAgIDEsIGlzYXIt
PmxvZywgMjU2LCAxKTsKKwkJCQloZXhfZHVtcF90b19idWZmZXJfZXh0KG1zZyArIGwsIGlzYXIt
PmNsc2IgLSBsLAorCQkJCQkJICAgICAgIDMyLCAxLCBpc2FyLT5sb2csIDI1NiwKKwkJCQkJCSAg
ICAgICBIRVhEVU1QX0FTQ0lJKTsKIAkJCQlwcl9kZWJ1ZygiJXM6ICVzICUwMng6ICVzXG4iLCBp
c2FyLT5uYW1lLAogCQkJCQkgX19mdW5jX18sIGwsIGlzYXItPmxvZyk7CiAJCQkJbCArPSAzMjsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWFpbGJveC9tYWlsYm94LXRlc3QuYyBiL2RyaXZlcnMvbWFp
bGJveC9tYWlsYm94LXRlc3QuYwppbmRleCA0NTU1ZDY3OGZhZGQuLmNlMzM0Zjg4YTNlZSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9tYWlsYm94L21haWxib3gtdGVzdC5jCisrKyBiL2RyaXZlcnMvbWFp
bGJveC9tYWlsYm94LXRlc3QuYwpAQCAtMjA2LDEwICsyMDYsMTAgQEAgc3RhdGljIHNzaXplX3Qg
bWJveF90ZXN0X21lc3NhZ2VfcmVhZChzdHJ1Y3QgZmlsZSAqZmlscCwgY2hhciBfX3VzZXIgKnVz
ZXJidWYsCiAKIAlwdHIgPSB0ZGV2LT5yeF9idWZmZXI7CiAJd2hpbGUgKGwgPCBNQk9YX0hFWERV
TVBfTUFYX0xFTikgewotCQloZXhfZHVtcF90b19idWZmZXIocHRyLAotCQkJCSAgIE1CT1hfQllU
RVNfUEVSX0xJTkUsCi0JCQkJICAgTUJPWF9CWVRFU19QRVJfTElORSwgMSwgdG91c2VyICsgbCwK
LQkJCQkgICBNQk9YX0hFWERVTVBfTElORV9MRU4sIHRydWUpOworCQloZXhfZHVtcF90b19idWZm
ZXJfZXh0KHB0ciwKKwkJCQkgICAgICAgTUJPWF9CWVRFU19QRVJfTElORSwKKwkJCQkgICAgICAg
TUJPWF9CWVRFU19QRVJfTElORSwgMSwgdG91c2VyICsgbCwKKwkJCQkgICAgICAgTUJPWF9IRVhE
VU1QX0xJTkVfTEVOLCBIRVhEVU1QX0FTQ0lJKTsKIAogCQlwdHIgKz0gTUJPWF9CWVRFU19QRVJf
TElORTsKIAkJbCArPSBNQk9YX0hFWERVTVBfTElORV9MRU47CmRpZmYgLS1naXQgYS9kcml2ZXJz
L25ldC9ldGhlcm5ldC9hbWQveGdiZS94Z2JlLWRydi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQv
YW1kL3hnYmUveGdiZS1kcnYuYwppbmRleCAzZGQwY2VjZGRiYTguLmYwMTE4ZmUzNWM0MSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1kL3hnYmUveGdiZS1kcnYuYworKysgYi9k
cml2ZXJzL25ldC9ldGhlcm5ldC9hbWQveGdiZS94Z2JlLWRydi5jCkBAIC0yOTkyLDcgKzI5OTIs
NyBAQCB2b2lkIHhnYmVfcHJpbnRfcGt0KHN0cnVjdCBuZXRfZGV2aWNlICpuZXRkZXYsIHN0cnVj
dCBza19idWZmICpza2IsIGJvb2wgdHhfcngpCiAJCXVuc2lnbmVkIGludCBsZW4gPSBtaW4oc2ti
LT5sZW4gLSBpLCAzMlUpOwogCiAJCWhleF9kdW1wX3RvX2J1ZmZlcigmc2tiLT5kYXRhW2ldLCBs
ZW4sIDMyLCAxLAotCQkJCSAgIGJ1ZmZlciwgc2l6ZW9mKGJ1ZmZlciksIGZhbHNlKTsKKwkJCQkg
ICBidWZmZXIsIHNpemVvZihidWZmZXIpKTsKIAkJbmV0ZGV2X2RiZyhuZXRkZXYsICIgICUjMDZ4
OiAlc1xuIiwgaSwgYnVmZmVyKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L3N5bm9wc3lzL2R3Yy14bGdtYWMtY29tbW9uLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9z
eW5vcHN5cy9kd2MteGxnbWFjLWNvbW1vbi5jCmluZGV4IGViMWM2YjAzYzMyOS4uNTM5OTFjMTIz
YzRkIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zeW5vcHN5cy9kd2MteGxnbWFj
LWNvbW1vbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L3N5bm9wc3lzL2R3Yy14bGdtYWMt
Y29tbW9uLmMKQEAgLTM0OSw3ICszNDksNyBAQCB2b2lkIHhsZ21hY19wcmludF9wa3Qoc3RydWN0
IG5ldF9kZXZpY2UgKm5ldGRldiwKIAkJdW5zaWduZWQgaW50IGxlbiA9IG1pbihza2ItPmxlbiAt
IGksIDMyVSk7CiAKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKCZza2ItPmRhdGFbaV0sIGxlbiwgMzIs
IDEsCi0JCQkJICAgYnVmZmVyLCBzaXplb2YoYnVmZmVyKSwgZmFsc2UpOworCQkJCSAgIGJ1ZmZl
ciwgc2l6ZW9mKGJ1ZmZlcikpOwogCQluZXRkZXZfZGJnKG5ldGRldiwgIiAgJSMwNng6ICVzXG4i
LCBpLCBidWZmZXIpOwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvd2lyZWxlc3MvYXRo
L2F0aDEway9kZWJ1Zy5jIGIvZHJpdmVycy9uZXQvd2lyZWxlc3MvYXRoL2F0aDEway9kZWJ1Zy5j
CmluZGV4IDMyZDk2N2EzMWM2NS4uOGQ3OWY4ZmM2OTRkIDEwMDY0NAotLS0gYS9kcml2ZXJzL25l
dC93aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMKKysrIGIvZHJpdmVycy9uZXQvd2lyZWxlc3Mv
YXRoL2F0aDEway9kZWJ1Zy5jCkBAIC0yNjYwLDkgKzI2NjAsMTAgQEAgdm9pZCBhdGgxMGtfZGJn
X2R1bXAoc3RydWN0IGF0aDEwayAqYXIsCiAJCQkJCQkiJXMlMDh4OiAiLAogCQkJCQkJKHByZWZp
eCA/IHByZWZpeCA6ICIiKSwKIAkJCQkJCSh1bnNpZ25lZCBpbnQpKHB0ciAtIGJ1ZikpOwotCQkJ
aGV4X2R1bXBfdG9fYnVmZmVyKHB0ciwgbGVuIC0gKHB0ciAtIGJ1ZiksIDE2LCAxLAotCQkJCQkg
ICBsaW5lYnVmICsgbGluZWJ1ZmxlbiwKLQkJCQkJICAgc2l6ZW9mKGxpbmVidWYpIC0gbGluZWJ1
ZmxlbiwgdHJ1ZSk7CisJCQloZXhfZHVtcF90b19idWZmZXJfZXh0KHB0ciwgbGVuIC0gKHB0ciAt
IGJ1ZiksIDE2LCAxLAorCQkJCQkgICAgICAgbGluZWJ1ZiArIGxpbmVidWZsZW4sCisJCQkJCSAg
ICAgICBzaXplb2YobGluZWJ1ZikgLSBsaW5lYnVmbGVuLAorCQkJCQkgICAgICAgSEVYRFVNUF9B
U0NJSSk7CiAJCQlkZXZfcHJpbnRrKEtFUk5fREVCVUcsIGFyLT5kZXYsICIlc1xuIiwgbGluZWJ1
Zik7CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xl
Z2FjeS8zOTQ1LW1hYy5jIGIvZHJpdmVycy9uZXQvd2lyZWxlc3MvaW50ZWwvaXdsZWdhY3kvMzk0
NS1tYWMuYwppbmRleCBiODJkYTc1YTlhZTMuLjkyZDAzMDEwOTM5NSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9uZXQvd2lyZWxlc3MvaW50ZWwvaXdsZWdhY3kvMzk0NS1tYWMuYworKysgYi9kcml2ZXJz
L25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2FjeS8zOTQ1LW1hYy5jCkBAIC0zMjMxLDggKzMyMzEs
OCBAQCBpbDM5NDVfc2hvd19tZWFzdXJlbWVudChzdHJ1Y3QgZGV2aWNlICpkLCBzdHJ1Y3QgZGV2
aWNlX2F0dHJpYnV0ZSAqYXR0ciwKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZpbC0+bG9jaywg
ZmxhZ3MpOwogCiAJd2hpbGUgKHNpemUgJiYgUEFHRV9TSVpFIC0gbGVuKSB7Ci0JCWhleF9kdW1w
X3RvX2J1ZmZlcihkYXRhICsgb2ZzLCBzaXplLCAxNiwgMSwgYnVmICsgbGVuLAotCQkJCSAgIFBB
R0VfU0laRSAtIGxlbiwgdHJ1ZSk7CisJCWhleF9kdW1wX3RvX2J1ZmZlcl9leHQoZGF0YSArIG9m
cywgc2l6ZSwgMTYsIDEsIGJ1ZiArIGxlbiwKKwkJCQkgICAgICAgUEFHRV9TSVpFIC0gbGVuLCBI
RVhEVU1QX0FTQ0lJKTsKIAkJbGVuID0gc3RybGVuKGJ1Zik7CiAJCWlmIChQQUdFX1NJWkUgLSBs
ZW4pCiAJCQlidWZbbGVuKytdID0gJ1xuJzsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcGxhdGZvcm0v
Y2hyb21lL3dpbGNvX2VjL2RlYnVnZnMuYyBiL2RyaXZlcnMvcGxhdGZvcm0vY2hyb21lL3dpbGNv
X2VjL2RlYnVnZnMuYwppbmRleCBmMTYzNDc2ZDA4MGQuLjZjMGE0NDNiZGIxYiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9wbGF0Zm9ybS9jaHJvbWUvd2lsY29fZWMvZGVidWdmcy5jCisrKyBiL2RyaXZl
cnMvcGxhdGZvcm0vY2hyb21lL3dpbGNvX2VjL2RlYnVnZnMuYwpAQCAtMTQ0LDExICsxNDQsMTEg
QEAgc3RhdGljIHNzaXplX3QgcmF3X3JlYWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2Vy
ICp1c2VyX2J1Ziwgc2l6ZV90IGNvdW50LAogCWludCBmbXRfbGVuID0gMDsKIAogCWlmIChkZWJ1
Z19pbmZvLT5yZXNwb25zZV9zaXplKSB7Ci0JCWZtdF9sZW4gPSBoZXhfZHVtcF90b19idWZmZXIo
ZGVidWdfaW5mby0+cmF3X2RhdGEsCi0JCQkJCSAgICAgZGVidWdfaW5mby0+cmVzcG9uc2Vfc2l6
ZSwKLQkJCQkJICAgICAxNiwgMSwgZGVidWdfaW5mby0+Zm9ybWF0dGVkX2RhdGEsCi0JCQkJCSAg
ICAgc2l6ZW9mKGRlYnVnX2luZm8tPmZvcm1hdHRlZF9kYXRhKSwKLQkJCQkJICAgICB0cnVlKTsK
KwkJZm10X2xlbiA9IGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoZGVidWdfaW5mby0+cmF3X2RhdGEs
CisJCQkJCWRlYnVnX2luZm8tPnJlc3BvbnNlX3NpemUsCisJCQkJCTE2LCAxLCBkZWJ1Z19pbmZv
LT5mb3JtYXR0ZWRfZGF0YSwKKwkJCQkJc2l6ZW9mKGRlYnVnX2luZm8tPmZvcm1hdHRlZF9kYXRh
KSwKKwkJCQkJSEVYRFVNUF9BU0NJSSk7CiAJCS8qIE9ubHkgcmV0dXJuIHJlc3BvbnNlIHRoZSBm
aXJzdCB0aW1lIGl0IGlzIHJlYWQgKi8KIAkJZGVidWdfaW5mby0+cmVzcG9uc2Vfc2l6ZSA9IDA7
CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9zY3NpL3Njc2lfbG9nZ2luZy5jIGIvZHJpdmVycy9z
Y3NpL3Njc2lfbG9nZ2luZy5jCmluZGV4IDM5YjhjYzQ1NzRiNC4uYWVhZDI4ZTVjNGNkIDEwMDY0
NAotLS0gYS9kcml2ZXJzL3Njc2kvc2NzaV9sb2dnaW5nLmMKKysrIGIvZHJpdmVycy9zY3NpL3Nj
c2lfbG9nZ2luZy5jCkBAIC0yNjIsNyArMjYyLDcgQEAgdm9pZCBzY3NpX3ByaW50X2NvbW1hbmQo
c3RydWN0IHNjc2lfY21uZCAqY21kKQogCQkJCQkJICJDREJbJTAyeF06ICIsIGspOwogCQkJCWhl
eF9kdW1wX3RvX2J1ZmZlcigmY21kLT5jbW5kW2tdLCBsaW5lbGVuLAogCQkJCQkJICAgMTYsIDEs
IGxvZ2J1ZiArIG9mZiwKLQkJCQkJCSAgIGxvZ2J1Zl9sZW4gLSBvZmYsIGZhbHNlKTsKKwkJCQkJ
CSAgIGxvZ2J1Zl9sZW4gLSBvZmYpOwogCQkJfQogCQkJZGV2X3ByaW50ayhLRVJOX0lORk8sICZj
bWQtPmRldmljZS0+c2Rldl9nZW5kZXYsICIlcyIsCiAJCQkJICAgbG9nYnVmKTsKQEAgLTI3Myw4
ICsyNzMsNyBAQCB2b2lkIHNjc2lfcHJpbnRfY29tbWFuZChzdHJ1Y3Qgc2NzaV9jbW5kICpjbWQp
CiAJaWYgKCFXQVJOX09OKG9mZiA+IGxvZ2J1Zl9sZW4gLSA0OSkpIHsKIAkJb2ZmICs9IHNjbnBy
aW50Zihsb2didWYgKyBvZmYsIGxvZ2J1Zl9sZW4gLSBvZmYsICIgIik7CiAJCWhleF9kdW1wX3Rv
X2J1ZmZlcihjbWQtPmNtbmQsIGNtZC0+Y21kX2xlbiwgMTYsIDEsCi0JCQkJICAgbG9nYnVmICsg
b2ZmLCBsb2didWZfbGVuIC0gb2ZmLAotCQkJCSAgIGZhbHNlKTsKKwkJCQkgICBsb2didWYgKyBv
ZmYsIGxvZ2J1Zl9sZW4gLSBvZmYpOwogCX0KIG91dF9wcmludGs6CiAJZGV2X3ByaW50ayhLRVJO
X0lORk8sICZjbWQtPmRldmljZS0+c2Rldl9nZW5kZXYsICIlcyIsIGxvZ2J1Zik7CkBAIC0zNTMs
OCArMzUyLDcgQEAgc2NzaV9sb2dfZHVtcF9zZW5zZShjb25zdCBzdHJ1Y3Qgc2NzaV9kZXZpY2Ug
KnNkZXYsIGNvbnN0IGNoYXIgKm5hbWUsIGludCB0YWcsCiAJCW9mZiA9IHNkZXZfZm9ybWF0X2hl
YWRlcihsb2didWYsIGxvZ2J1Zl9sZW4sCiAJCQkJCSBuYW1lLCB0YWcpOwogCQloZXhfZHVtcF90
b19idWZmZXIoJnNlbnNlX2J1ZmZlcltpXSwgbGVuLCAxNiwgMSwKLQkJCQkgICBsb2didWYgKyBv
ZmYsIGxvZ2J1Zl9sZW4gLSBvZmYsCi0JCQkJICAgZmFsc2UpOworCQkJCSAgIGxvZ2J1ZiArIG9m
ZiwgbG9nYnVmX2xlbiAtIG9mZik7CiAJCWRldl9wcmludGsoS0VSTl9JTkZPLCAmc2Rldi0+c2Rl
dl9nZW5kZXYsICIlcyIsIGxvZ2J1Zik7CiAJfQogCXNjc2lfbG9nX3JlbGVhc2VfYnVmZmVyKGxv
Z2J1Zik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3N0YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jIGIv
ZHJpdmVycy9zdGFnaW5nL2ZidGZ0L2ZidGZ0LWNvcmUuYwppbmRleCA5YjA3YmFkZjRjNmMuLjk3
NjVhNzk2MmYwYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9zdGFnaW5nL2ZidGZ0L2ZidGZ0LWNvcmUu
YworKysgYi9kcml2ZXJzL3N0YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jCkBAIC02MSw3ICs2MSw3
IEBAIHZvaWQgZmJ0ZnRfZGJnX2hleChjb25zdCBzdHJ1Y3QgZGV2aWNlICpkZXYsIGludCBncm91
cHNpemUsCiAJdmFfZW5kKGFyZ3MpOwogCiAJaGV4X2R1bXBfdG9fYnVmZmVyKGJ1ZiwgbGVuLCAz
MiwgZ3JvdXBzaXplLCB0ZXh0ICsgdGV4dF9sZW4sCi0JCQkgICA1MTIgLSB0ZXh0X2xlbiwgZmFs
c2UpOworCQkJICAgNTEyIC0gdGV4dF9sZW4pOwogCiAJaWYgKGxlbiA+IDMyKQogCQlkZXZfaW5m
byhkZXYsICIlcyAuLi5cbiIsIHRleHQpOwpkaWZmIC0tZ2l0IGEvZnMvc2VxX2ZpbGUuYyBiL2Zz
L3NlcV9maWxlLmMKaW5kZXggYWJlMjdlYzQzMTc2Li41ZjNkNjU2YzVlZDYgMTAwNjQ0Ci0tLSBh
L2ZzL3NlcV9maWxlLmMKKysrIGIvZnMvc2VxX2ZpbGUuYwpAQCAtODczLDggKzg3MywxMCBAQCB2
b2lkIHNlcV9oZXhfZHVtcChzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIGNvbnN0IGNoYXIgKnByZWZpeF9z
dHIsIGludCBwcmVmaXhfdHlwZSwKIAkJfQogCiAJCXNpemUgPSBzZXFfZ2V0X2J1ZihtLCAmYnVm
ZmVyKTsKLQkJcmV0ID0gaGV4X2R1bXBfdG9fYnVmZmVyKHB0ciArIGksIGxpbmVsZW4sIHJvd3Np
emUsIGdyb3Vwc2l6ZSwKLQkJCQkJIGJ1ZmZlciwgc2l6ZSwgYXNjaWkpOworCQlyZXQgPSBoZXhf
ZHVtcF90b19idWZmZXJfZXh0KHB0ciArIGksIGxpbmVsZW4sCisJCQkJCSAgICAgcm93c2l6ZSwg
Z3JvdXBzaXplLAorCQkJCQkgICAgIGJ1ZmZlciwgc2l6ZSwKKwkJCQkJICAgICBhc2NpaSA/IEhF
WERVTVBfQVNDSUkgOiAwKTsKIAkJc2VxX2NvbW1pdChtLCByZXQgPCBzaXplID8gcmV0IDogLTEp
OwogCiAJCXNlcV9wdXRjKG0sICdcbicpOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9wcmlu
dGsuaCBiL2luY2x1ZGUvbGludXgvcHJpbnRrLmgKaW5kZXggYzA0MTZkMGViOWUyLi5mMDc2MWIz
YTJkNWQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcHJpbnRrLmgKKysrIGIvaW5jbHVkZS9s
aW51eC9wcmludGsuaApAQCAtNDgzLDEzICs0ODMsNTEgQEAgZW51bSB7CiAJRFVNUF9QUkVGSVhf
T0ZGU0VUCiB9OwogCi1leHRlcm4gaW50IGhleF9kdW1wX3RvX2J1ZmZlcihjb25zdCB2b2lkICpi
dWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLAotCQkJICAgICAgaW50IGdyb3Vwc2l6ZSwgY2hh
ciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sCi0JCQkgICAgICBib29sIGFzY2lpKTsKLQog
I2RlZmluZSBIRVhEVU1QX0FTQ0lJCQkJQklUKDApCiAjZGVmaW5lIEhFWERVTVBfU1VQUFJFU1Nf
UkVQRUFURUQJQklUKDEpCiAKK2V4dGVybiBpbnQgaGV4X2R1bXBfdG9fYnVmZmVyX2V4dChjb25z
dCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLAorCQkJICAgICAgaW50IGdyb3Vw
c2l6ZSwgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sCisJCQkgICAgICB1MzIgZmxh
Z3MpOworCisvKioKKyAqIGhleF9kdW1wX3RvX2J1ZmZlciAtIGNvbnZlcnQgYSBibG9iIG9mIGRh
dGEgdG8gImhleCBBU0NJSSIgaW4gbWVtb3J5CisgKiBAYnVmOiBkYXRhIGJsb2IgdG8gZHVtcAor
ICogQGxlbjogbnVtYmVyIG9mIGJ5dGVzIGluIHRoZSBAYnVmCisgKiBAcm93c2l6ZTogbnVtYmVy
IG9mIGJ5dGVzIHRvIHByaW50IHBlciBsaW5lOyBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgZ3JvdXBz
aXplCisgKiBAZ3JvdXBzaXplOiBudW1iZXIgb2YgYnl0ZXMgdG8gcHJpbnQgYXQgYSB0aW1lICgx
LCAyLCA0LCA4OyBkZWZhdWx0ID0gMSkKKyAqIEBsaW5lYnVmOiB3aGVyZSB0byBwdXQgdGhlIGNv
bnZlcnRlZCBkYXRhCisgKiBAbGluZWJ1ZmxlbjogdG90YWwgc2l6ZSBvZiBAbGluZWJ1ZiwgaW5j
bHVkaW5nIHNwYWNlIGZvciB0ZXJtaW5hdGluZyBOVUwKKyAqCisgKiBoZXhfZHVtcF90b19idWZm
ZXIoKSB3b3JrcyBvbiBvbmUgImxpbmUiIG9mIG91dHB1dCBhdCBhIHRpbWUsIGNvbnZlcnRpbmcK
KyAqIDxncm91cHNpemU+IGJ5dGVzIG9mIGlucHV0IHRvIGhleGFkZWNpbWFsIChhbmQgb3B0aW9u
YWxseSBwcmludGFibGUgQVNDSUkpCisgKiB1bnRpbCA8cm93c2l6ZT4gYnl0ZXMgaGF2ZSBiZWVu
IGVtaXR0ZWQuCisgKgorICogR2l2ZW4gYSBidWZmZXIgb2YgdTggZGF0YSwgaGV4X2R1bXBfdG9f
YnVmZmVyKCkgY29udmVydHMgdGhlIGlucHV0IGRhdGEKKyAqIHRvIGEgaGV4IGR1bXAgYXQgdGhl
IHN1cHBsaWVkIG1lbW9yeSBsb2NhdGlvbi4KKyAqIFRoZSBjb252ZXJ0ZWQgb3V0cHV0IGlzIGFs
d2F5cyBOVUwtdGVybWluYXRlZC4KKyAqCisgKiBFLmcuOgorICogICBoZXhfZHVtcF90b19idWZm
ZXIoZnJhbWUtPmRhdGEsIGZyYW1lLT5sZW4sIDE2LCAxLAorICoJCQlsaW5lYnVmLCBzaXplb2Yo
bGluZWJ1ZikpOworICoKKyAqIGV4YW1wbGUgb3V0cHV0IGJ1ZmZlcjoKKyAqIDQwIDQxIDQyIDQz
IDQ0IDQ1IDQ2IDQ3IDQ4IDQ5IDRhIDRiIDRjIDRkIDRlIDRmCisgKgorICogUmV0dXJuOgorICog
VGhlIGFtb3VudCBvZiBieXRlcyBwbGFjZWQgaW4gdGhlIGJ1ZmZlciB3aXRob3V0IHRlcm1pbmF0
aW5nIE5VTC4gSWYgdGhlCisgKiBvdXRwdXQgd2FzIHRydW5jYXRlZCwgdGhlbiB0aGUgcmV0dXJu
IHZhbHVlIGlzIHRoZSBudW1iZXIgb2YgYnl0ZXMKKyAqIChleGNsdWRpbmcgdGhlIHRlcm1pbmF0
aW5nIE5VTCkgd2hpY2ggd291bGQgaGF2ZSBiZWVuIHdyaXR0ZW4gdG8gdGhlIGZpbmFsCisgKiBz
dHJpbmcgaWYgZW5vdWdoIHNwYWNlIGhhZCBiZWVuIGF2YWlsYWJsZS4KKyAqLworc3RhdGljIGlu
bGluZSBpbnQgaGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwg
aW50IHJvd3NpemUsCisJCQkgICAgICBpbnQgZ3JvdXBzaXplLCBjaGFyICpsaW5lYnVmLCBzaXpl
X3QgbGluZWJ1ZmxlbikKK3sKKwlyZXR1cm4gaGV4X2R1bXBfdG9fYnVmZmVyX2V4dChidWYsIGxl
biwgcm93c2l6ZSwgZ3JvdXBzaXplLAorCQkJCQlsaW5lYnVmLCBsaW5lYnVmbGVuLCAwKTsKK30K
KworCiAjaWZkZWYgQ09ORklHX1BSSU5USwogZXh0ZXJuIHZvaWQgcHJpbnRfaGV4X2R1bXBfZXh0
KGNvbnN0IGNoYXIgKmxldmVsLCBjb25zdCBjaGFyICpwcmVmaXhfc3RyLAogCQkJICAgaW50IHBy
ZWZpeF90eXBlLCBpbnQgcm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKZGlmZiAtLWdpdCBhL2xpYi9o
ZXhkdW1wLmMgYi9saWIvaGV4ZHVtcC5jCmluZGV4IDYxZGM2MjVjMzJmNS4uMWJmODM4YzFhNTY4
IDEwMDY0NAotLS0gYS9saWIvaGV4ZHVtcC5jCisrKyBiL2xpYi9oZXhkdW1wLmMKQEAgLTg1LDcg
Kzg1LDggQEAgRVhQT1JUX1NZTUJPTChiaW4yaGV4KTsKICAqIEBncm91cHNpemU6IG51bWJlciBv
ZiBieXRlcyB0byBwcmludCBhdCBhIHRpbWUgKDEsIDIsIDQsIDg7IGRlZmF1bHQgPSAxKQogICog
QGxpbmVidWY6IHdoZXJlIHRvIHB1dCB0aGUgY29udmVydGVkIGRhdGEKICAqIEBsaW5lYnVmbGVu
OiB0b3RhbCBzaXplIG9mIEBsaW5lYnVmLCBpbmNsdWRpbmcgc3BhY2UgZm9yIHRlcm1pbmF0aW5n
IE5VTAotICogQGFzY2lpOiBpbmNsdWRlIEFTQ0lJIGFmdGVyIHRoZSBoZXggb3V0cHV0CisgKiBA
ZmxhZ3M6IEEgYml0d2lzZSBPUiBvZiB0aGUgZm9sbG93aW5nIGZsYWdzOgorICoJSEVYRFVNUF9B
U0NJSToJCQlpbmNsdWRlIEFTQ0lJIGFmdGVyIHRoZSBoZXggb3V0cHV0CiAgKgogICogaGV4X2R1
bXBfdG9fYnVmZmVyKCkgd29ya3Mgb24gb25lICJsaW5lIiBvZiBvdXRwdXQgYXQgYSB0aW1lLCBj
b252ZXJ0aW5nCiAgKiA8Z3JvdXBzaXplPiBieXRlcyBvZiBpbnB1dCB0byBoZXhhZGVjaW1hbCAo
YW5kIG9wdGlvbmFsbHkgcHJpbnRhYmxlIEFTQ0lJKQpAQCAtOTYsOCArOTcsOCBAQCBFWFBPUlRf
U1lNQk9MKGJpbjJoZXgpOwogICogVGhlIGNvbnZlcnRlZCBvdXRwdXQgaXMgYWx3YXlzIE5VTC10
ZXJtaW5hdGVkLgogICoKICAqIEUuZy46Ci0gKiAgIGhleF9kdW1wX3RvX2J1ZmZlcihmcmFtZS0+
ZGF0YSwgZnJhbWUtPmxlbiwgMTYsIDEsCi0gKgkJCWxpbmVidWYsIHNpemVvZihsaW5lYnVmKSwg
dHJ1ZSk7CisgKiAgIGhleF9kdW1wX3RvX2J1ZmZlcl9leHQoZnJhbWUtPmRhdGEsIGZyYW1lLT5s
ZW4sIDE2LCAxLAorICoJCQlsaW5lYnVmLCBzaXplb2YobGluZWJ1ZiksIEhFWERVTVBfQVNDSUkp
OwogICoKICAqIGV4YW1wbGUgb3V0cHV0IGJ1ZmZlcjoKICAqIDQwIDQxIDQyIDQzIDQ0IDQ1IDQ2
IDQ3IDQ4IDQ5IDRhIDRiIDRjIDRkIDRlIDRmICBAQUJDREVGR0hJSktMTU5PCkBAIC0xMDgsOCAr
MTA5LDkgQEAgRVhQT1JUX1NZTUJPTChiaW4yaGV4KTsKICAqIChleGNsdWRpbmcgdGhlIHRlcm1p
bmF0aW5nIE5VTCkgd2hpY2ggd291bGQgaGF2ZSBiZWVuIHdyaXR0ZW4gdG8gdGhlIGZpbmFsCiAg
KiBzdHJpbmcgaWYgZW5vdWdoIHNwYWNlIGhhZCBiZWVuIGF2YWlsYWJsZS4KICAqLwotaW50IGhl
eF9kdW1wX3RvX2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dzaXpl
LCBpbnQgZ3JvdXBzaXplLAotCQkgICAgICAgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZs
ZW4sIGJvb2wgYXNjaWkpCitpbnQgaGV4X2R1bXBfdG9fYnVmZmVyX2V4dChjb25zdCB2b2lkICpi
dWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLAorCQkJICAgaW50IGdyb3Vwc2l6ZSwgY2hhciAq
bGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sCisJCQkgICB1MzIgZmxhZ3MpCiB7CiAJY29uc3Qg
dTggKnB0ciA9IGJ1ZjsKIAlpbnQgbmdyb3VwczsKQEAgLTE4Nyw3ICsxODksNyBAQCBpbnQgaGV4
X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUs
IGludCBncm91cHNpemUsCiAJCWlmIChqKQogCQkJbHgtLTsKIAl9Ci0JaWYgKCFhc2NpaSkKKwlp
ZiAoIShmbGFncyAmIEhFWERVTVBfQVNDSUkpKQogCQlnb3RvIG5pbDsKIAogCXdoaWxlIChseCA8
IGFzY2lpX2NvbHVtbikgewpAQCAtMjA3LDkgKzIwOSwxMCBAQCBpbnQgaGV4X2R1bXBfdG9fYnVm
ZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsIGludCBncm91cHNp
emUsCiBvdmVyZmxvdzI6CiAJbGluZWJ1ZltseCsrXSA9ICdcMCc7CiBvdmVyZmxvdzE6Ci0JcmV0
dXJuIGFzY2lpID8gYXNjaWlfY29sdW1uICsgbGVuIDogKGdyb3Vwc2l6ZSAqIDIgKyAxKSAqIG5n
cm91cHMgLSAxOworCXJldHVybiAoZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKSA/IGFzY2lpX2NvbHVt
biArIGxlbiA6CisJCQkJCSAoZ3JvdXBzaXplICogMiArIDEpICogbmdyb3VwcyAtIDE7CiB9Ci1F
WFBPUlRfU1lNQk9MKGhleF9kdW1wX3RvX2J1ZmZlcik7CitFWFBPUlRfU1lNQk9MKGhleF9kdW1w
X3RvX2J1ZmZlcl9leHQpOwogCiAjaWZkZWYgQ09ORklHX1BSSU5USwogCkBAIC0zMzYsOSArMzM5
LDggQEAgdm9pZCBwcmludF9oZXhfZHVtcF9leHQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNo
YXIgKnByZWZpeF9zdHIsCiAJCQlza2lwcGVkID0gMDsKIAkJfQogCi0JCWhleF9kdW1wX3RvX2J1
ZmZlcihwdHIgKyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0JCQkJICAgbGluZWJ1
ZiwgbGluZWJ1Zl9sZW4sCi0JCQkJICAgZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKTsKKwkJaGV4X2R1
bXBfdG9fYnVmZmVyX2V4dChwdHIgKyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCisJ
CQkJICAgbGluZWJ1ZiwgbGluZWJ1Zl9sZW4sIGZsYWdzKTsKIAogCQlzd2l0Y2ggKHByZWZpeF90
eXBlKSB7CiAJCWNhc2UgRFVNUF9QUkVGSVhfQUREUkVTUzoKZGlmZiAtLWdpdCBhL2xpYi90ZXN0
X2hleGR1bXAuYyBiL2xpYi90ZXN0X2hleGR1bXAuYwppbmRleCA1ZTU0NTI1YTkzN2MuLmFkNDMy
MTg0MzdmMSAxMDA2NDQKLS0tIGEvbGliL3Rlc3RfaGV4ZHVtcC5jCisrKyBiL2xpYi90ZXN0X2hl
eGR1bXAuYwpAQCAtMTY1LDggKzE2NSw5IEBAIHN0YXRpYyB2b2lkIF9faW5pdCB0ZXN0X2hleGR1
bXAoc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsIGludCBncm91cHNpemUsCiAJdG90YWxfdGVzdHMr
KzsKIAogCW1lbXNldChyZWFsLCBGSUxMX0NIQVIsIHNpemVvZihyZWFsKSk7Ci0JaGV4X2R1bXBf
dG9fYnVmZmVyKGRhdGFfYiwgbGVuLCByb3dzaXplLCBncm91cHNpemUsIHJlYWwsIHNpemVvZihy
ZWFsKSwKLQkJCSAgIGFzY2lpKTsKKwloZXhfZHVtcF90b19idWZmZXJfZXh0KGRhdGFfYiwgbGVu
LCByb3dzaXplLCBncm91cHNpemUsCisJCQkgICAgICAgcmVhbCwgc2l6ZW9mKHJlYWwpLAorCQkJ
ICAgICAgIGFzY2lpID8gSEVYRFVNUF9BU0NJSSA6IDApOwogCiAJbWVtc2V0KHRlc3QsIEZJTExf
Q0hBUiwgc2l6ZW9mKHRlc3QpKTsKIAl0ZXN0X2hleGR1bXBfcHJlcGFyZV90ZXN0KGxlbiwgcm93
c2l6ZSwgZ3JvdXBzaXplLCB0ZXN0LCBzaXplb2YodGVzdCksCkBAIC0yMDQsOCArMjA1LDkgQEAg
c3RhdGljIHZvaWQgX19pbml0IHRlc3RfaGV4ZHVtcF9vdmVyZmxvdyhzaXplX3QgYnVmbGVuLCBz
aXplX3QgbGVuLAogCiAJbWVtc2V0KGJ1ZiwgRklMTF9DSEFSLCBzaXplb2YoYnVmKSk7CiAKLQly
YyA9IGhleF9kdW1wX3RvX2J1ZmZlcihkYXRhX2IsIGxlbiwgcm93c2l6ZSwgZ3JvdXBzaXplLCBi
dWYsIGJ1ZmxlbiwKLQkJCQlhc2NpaSk7CisJcmMgPSBoZXhfZHVtcF90b19idWZmZXJfZXh0KGRh
dGFfYiwgbGVuLCByb3dzaXplLCBncm91cHNpemUsCisJCQkJICAgIGJ1ZiwgYnVmbGVuLAorCQkJ
CSAgICBhc2NpaSA/IEhFWERVTVBfQVNDSUkgOiAwKTsKIAogCS8qCiAJICogQ2FsbGVyIG11c3Qg
cHJvdmlkZSB0aGUgZGF0YSBsZW5ndGggbXVsdGlwbGUgb2YgZ3JvdXBzaXplLiBUaGUKLS0gCjIu
MjEuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJp
LWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
