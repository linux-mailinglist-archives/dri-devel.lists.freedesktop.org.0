Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A1C088CAE3
	for <lists+dri-devel@lfdr.de>; Wed, 14 Aug 2019 07:52:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 038F76E25A;
	Wed, 14 Aug 2019 05:52:38 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qk1-x74a.google.com (mail-qk1-x74a.google.com
 [IPv6:2607:f8b0:4864:20::74a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2C15D6E258
 for <dri-devel@lists.freedesktop.org>; Wed, 14 Aug 2019 05:52:35 +0000 (UTC)
Received: by mail-qk1-x74a.google.com with SMTP id m2so10298062qkk.10
 for <dri-devel@lists.freedesktop.org>; Tue, 13 Aug 2019 22:52:35 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=rsrYRcQx/K8X9YGPWtjlT8srwhyLecLc+83e4Ejl3i8=;
 b=pqyyEbGtzCDZKgCV7YczmpTS4bNhAvLv9BIgqocUwogx5s8w639mKyaKnGE/tSSI6M
 oviPQ5/R8qk3xSKEIPOT2LEhsLjSndZgek/z3YtUzi6I/TwzAHnZsEvh5ZfDblQFEAGv
 OMd4o5UBVH9S325/uZseqVKeXNoyaarqtoml+kDRVh8+SsP/qjE9uODaZs2QgA8yiFEk
 qzWBNs8w2C+2Pc7/kVC9ovkCSHPq6KrGwxqq4mO+KI2QBdzx9L079ATmISuW5sZZu/oK
 MtkJZbS0eWy7LE0ekLZJ+WhzNrWLfzvsMDF2NaGMjuPK6/YCFGpx6RqCoTzc/0jfKdnF
 7NiQ==
X-Gm-Message-State: APjAAAUBuZhKNMmPGmLd8IN0/6GiZ/fgRgemZY5oxsiZZERWq+v5UtTo
 BBqi8HVm6z+V9l0tm/p9Ogyvg34mMOB57LHCpDNVjA==
X-Google-Smtp-Source: APXvYqxfDEY77WQ0Gx9Lw3q6/CT9YpVmW6ghz55pEk6kNueZ2vS8W3cCZmBnFTQgfSnBkArI46fAJb/bFO9GfLzMqBKzjQ==
X-Received: by 2002:a37:a603:: with SMTP id p3mr36972417qke.297.1565761953810; 
 Tue, 13 Aug 2019 22:52:33 -0700 (PDT)
Date: Tue, 13 Aug 2019 22:50:59 -0700
In-Reply-To: <20190814055108.214253-1-brendanhiggins@google.com>
Message-Id: <20190814055108.214253-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190814055108.214253-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.rc1.153.gdeed80330f-goog
Subject: [PATCH v13 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=rsrYRcQx/K8X9YGPWtjlT8srwhyLecLc+83e4Ejl3i8=;
 b=lARC9aKIq+sQswpBPars7D7uiLJgUo+pnwVp/yeuU3JvBq1Axi7bFfXBQ0ZGAmK5vj
 hGqDrH6457gnHTrVNvo8p0jwCskWBsHJiBtPLsP7AObgQHUje4Ft9gGLW11CeWWeCvw7
 A084AFz68mM+9swCKzXbzpC8Dba8itClFC5nbXoTuZ3XIGPZR0YZDeNhstzhberLZzk7
 LqVncK/Kss8uppdIxT/NfN6CzhVtdwl6F10sUVOuqIYQFp+cOh1jTjLRwoLbynJexBn2
 SAhhoFK7X29836i7VMmCTHwQokxsAO8fhyW2+8dkWNdFyW9mSG0jKE1/aFp9vpWwBSXG
 dIZQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAgMiArCiBpbmNsdWRlL2t1bml0L3RyeS1jYXRj
aC5oIHwgIDc1ICsrKysrKysrKysrKysrKysrKysrKwoga3VuaXQvTWFrZWZpbGUgICAgICAgICAg
ICB8ICAgMyArLQoga3VuaXQvdGVzdC5jICAgICAgICAgICAgICB8IDEzNyArKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKystLS0tLQoga3VuaXQvdHJ5LWNhdGNoLmMgICAgICAgICB8IDEx
OCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCAzMTkg
aW5zZXJ0aW9ucygrKSwgMTYgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVk
ZS9rdW5pdC90cnktY2F0Y2guaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L3RyeS1jYXRjaC5j
CgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3Qu
aAppbmRleCA0YzQxZTZiZGUxNTg4Li5mNTJjN2M2NWVmNjUxIDEwMDY0NAotLS0gYS9pbmNsdWRl
L2t1bml0L3Rlc3QuaAorKysgYi9pbmNsdWRlL2t1bml0L3Rlc3QuaApAQCAtMTAsNiArMTAsNyBA
QAogI2RlZmluZSBfS1VOSVRfVEVTVF9ICiAKICNpbmNsdWRlIDxrdW5pdC9hc3NlcnQuaD4KKyNp
bmNsdWRlIDxrdW5pdC90cnktY2F0Y2guaD4KICNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KICNp
bmNsdWRlIDxsaW51eC9zbGFiLmg+CiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KQEAgLTE2Nyw2
ICsxNjgsNyBAQCBzdHJ1Y3Qga3VuaXQgewogCiAJLyogcHJpdmF0ZTogaW50ZXJuYWwgdXNlIG9u
bHkuICovCiAJY29uc3QgY2hhciAqbmFtZTsgLyogUmVhZCBvbmx5IGFmdGVyIGluaXRpYWxpemF0
aW9uISAqLworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggdHJ5X2NhdGNoOwogCS8qCiAJICogc3Vj
Y2VzcyBzdGFydHMgYXMgdHJ1ZSwgYW5kIG1heSBvbmx5IGJlIHNldCB0byBmYWxzZSBkdXJpbmcg
YSB0ZXN0CiAJICogY2FzZTsgdGh1cywgaXQgaXMgc2FmZSB0byB1cGRhdGUgdGhpcyBhY3Jvc3Mg
bXVsdGlwbGUgdGhyZWFkcyB1c2luZwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90cnktY2F0
Y2guaCBiL2luY2x1ZGUva3VuaXQvdHJ5LWNhdGNoLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMDAwMDAwMC4uNDA0ZjMzNmNiZGM4NQotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1
ZGUva3VuaXQvdHJ5LWNhdGNoLmgKQEAgLTAsMCArMSw3NSBAQAorLyogU1BEWC1MaWNlbnNlLUlk
ZW50aWZpZXI6IEdQTC0yLjAgKi8KKy8qCisgKiBBbiBBUEkgdG8gYWxsb3cgYSBmdW5jdGlvbiwg
dGhhdCBtYXkgZmFpbCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGluIGEKKyAqIGNvbnRy
b2xsZWQgbWFubmVyLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAq
IEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICov
CisKKyNpZm5kZWYgX0tVTklUX1RSWV9DQVRDSF9ICisjZGVmaW5lIF9LVU5JVF9UUllfQ0FUQ0hf
SAorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKwordHlwZWRlZiB2b2lkICgqa3VuaXRfdHJ5
X2NhdGNoX2Z1bmNfdCkodm9pZCAqKTsKKworc3RydWN0IGNvbXBsZXRpb247CitzdHJ1Y3Qga3Vu
aXQ7CisKKy8qKgorICogc3RydWN0IGt1bml0X3RyeV9jYXRjaCAtIHByb3ZpZGVzIGEgZ2VuZXJp
YyB3YXkgdG8gcnVuIGNvZGUgd2hpY2ggbWlnaHQgZmFpbC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBj
YXNlIHRoYXQgaXMgY3VycmVudGx5IGJlaW5nIGV4ZWN1dGVkLgorICogQHRyeV9jb21wbGV0aW9u
OiBDb21wbGV0aW9uIHRoYXQgdGhlIGNvbnRyb2wgdGhyZWFkIHdhaXRzIG9uIHdoaWxlIHRlc3Qg
cnVucy4KKyAqIEB0cnlfcmVzdWx0OiBDb250YWlucyBhbnkgZXJybm8gb2J0YWluZWQgd2hpbGUg
cnVubmluZyB0ZXN0IGNhc2UuCisgKiBAdHJ5OiBUaGUgZnVuY3Rpb24sIHRoZSB0ZXN0IGNhc2Us
IHRvIGF0dGVtcHQgdG8gcnVuLgorICogQGNhdGNoOiBUaGUgZnVuY3Rpb24gY2FsbGVkIGlmIEB0
cnkgYmFpbHMgb3V0LgorICogQGNvbnRleHQ6IHVzZWQgdG8gcGFzcyB1c2VyIGRhdGEgdG8gdGhl
IHRyeSBhbmQgY2F0Y2ggZnVuY3Rpb25zLgorICoKKyAqIGt1bml0X3RyeV9jYXRjaCBwcm92aWRl
cyBhIGdlbmVyaWMsIGFyY2hpdGVjdHVyZSBpbmRlcGVuZGVudCB3YXkgdG8gZXhlY3V0ZQorICog
YW4gYXJiaXRyYXJ5IGZ1bmN0aW9uIG9mIHR5cGUga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB3aGlj
aCBtYXkgYmFpbCBvdXQgYnkKKyAqIGNhbGxpbmcga3VuaXRfdHJ5X2NhdGNoX3Rocm93KCkuIElm
IGt1bml0X3RyeV9jYXRjaF90aHJvdygpIGlzIGNhbGxlZCwgQHRyeQorICogaXMgc3RvcHBlZCBh
dCB0aGUgc2l0ZSBvZiBpbnZvY2F0aW9uIGFuZCBAY2F0Y2ggaXMgY2FsbGVkLgorICoKKyAqIHN0
cnVjdCBrdW5pdF90cnlfY2F0Y2ggcHJvdmlkZXMgYSBnZW5lcmljIGludGVyZmFjZSBmb3IgdGhl
IGZ1bmN0aW9uYWxpdHkKKyAqIG5lZWRlZCB0byBpbXBsZW1lbnQga3VuaXQtPmFib3J0KCkgd2hp
Y2ggaW4gdHVybiBpcyBuZWVkZWQgZm9yIGltcGxlbWVudGluZworICogYXNzZXJ0aW9ucy4gQXNz
ZXJ0aW9ucyBhbGxvdyBzdGF0aW5nIGEgcHJlY29uZGl0aW9uIGZvciBhIHRlc3Qgc2ltcGxpZnlp
bmcKKyAqIGhvdyB0ZXN0IGNhc2VzIGFyZSB3cml0dGVuIGFuZCBwcmVzZW50ZWQuCisgKgorICog
QXNzZXJ0aW9ucyBhcmUgbGlrZSBleHBlY3RhdGlvbnMsIGV4Y2VwdCB0aGV5IGFib3J0IChjYWxs
CisgKiBrdW5pdF90cnlfY2F0Y2hfdGhyb3coKSkgd2hlbiB0aGUgc3BlY2lmaWVkIGNvbmRpdGlv
biBpcyBub3QgbWV0LiBUaGlzIGlzCisgKiB1c2VmdWwgd2hlbiB5b3UgbG9vayBhdCBhIHRlc3Qg
Y2FzZSBhcyBhIGxvZ2ljYWwgc3RhdGVtZW50IGFib3V0IHNvbWUgcGllY2UKKyAqIG9mIGNvZGUs
IHdoZXJlIGFzc2VydGlvbnMgYXJlIHRoZSBwcmVtaXNlcyBmb3IgdGhlIHRlc3QgY2FzZSwgYW5k
IHRoZQorICogY29uY2x1c2lvbiBpcyBhIHNldCBvZiBwcmVkaWNhdGVzLCByYXRoZXIgZXhwZWN0
YXRpb25zLCB0aGF0IG11c3QgYWxsIGJlCisgKiB0cnVlLiBJZiB5b3VyIHByZW1pc2VzIGFyZSB2
aW9sYXRlZCwgaXQgZG9lcyBub3QgbWFrZXMgc2Vuc2UgdG8gY29udGludWUuCisgKi8KK3N0cnVj
dCBrdW5pdF90cnlfY2F0Y2ggeworCS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLwor
CXN0cnVjdCBrdW5pdCAqdGVzdDsKKwlzdHJ1Y3QgY29tcGxldGlvbiAqdHJ5X2NvbXBsZXRpb247
CisJaW50IHRyeV9yZXN1bHQ7CisJa3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB0cnk7CisJa3VuaXRf
dHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaDsKKwl2b2lkICpjb250ZXh0OworfTsKKwordm9pZCBrdW5p
dF90cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsCisJCQkg
IHN0cnVjdCBrdW5pdCAqdGVzdCwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB0cnksCisJ
CQkgIGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgY2F0Y2gpOworCit2b2lkIGt1bml0X3RyeV9jYXRj
aF9ydW4oc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoLCB2b2lkICpjb250ZXh0KTsK
Kwordm9pZCBfX25vcmV0dXJuIGt1bml0X3RyeV9jYXRjaF90aHJvdyhzdHJ1Y3Qga3VuaXRfdHJ5
X2NhdGNoICp0cnlfY2F0Y2gpOworCitzdGF0aWMgaW5saW5lIGludCBrdW5pdF90cnlfY2F0Y2hf
Z2V0X3Jlc3VsdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpCit7CisJcmV0dXJu
IHRyeV9jYXRjaC0+dHJ5X3Jlc3VsdDsKK30KKworLyoKKyAqIEV4cG9zZWQgZm9yIHRlc3Rpbmcg
b25seS4KKyAqLwordm9pZCBrdW5pdF9nZW5lcmljX3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5p
dF90cnlfY2F0Y2ggKnRyeV9jYXRjaCk7CisKKyNlbmRpZiAvKiBfS1VOSVRfVFJZX0NBVENIX0gg
Ki8KZGlmZiAtLWdpdCBhL2t1bml0L01ha2VmaWxlIGIva3VuaXQvTWFrZWZpbGUKaW5kZXggNGU0
NjQ1MGJjYjNhOC4uYzkxNzZjOWM1NzhjNiAxMDA2NDQKLS0tIGEva3VuaXQvTWFrZWZpbGUKKysr
IGIva3VuaXQvTWFrZWZpbGUKQEAgLTEsNiArMSw3IEBACiBvYmotJChDT05GSUdfS1VOSVQpICs9
CQkJdGVzdC5vIFwKIAkJCQkJc3RyaW5nLXN0cmVhbS5vIFwKLQkJCQkJYXNzZXJ0Lm8KKwkJCQkJ
YXNzZXJ0Lm8gXAorCQkJCQl0cnktY2F0Y2gubwogCiBvYmotJChDT05GSUdfS1VOSVRfVEVTVCkg
Kz0JCXN0cmluZy1zdHJlYW0tdGVzdC5vCiAKZGlmZiAtLWdpdCBhL2t1bml0L3Rlc3QuYyBiL2t1
bml0L3Rlc3QuYwppbmRleCAzY2JjZWIzNGIzYjM2Li5kZWQ5ODk1MTQzMjA5IDEwMDY0NAotLS0g
YS9rdW5pdC90ZXN0LmMKKysrIGIva3VuaXQvdGVzdC5jCkBAIC03LDcgKzcsOSBAQAogICovCiAK
ICNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CiAj
aW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQvZGVidWcuaD4K
IAogc3RhdGljIHZvaWQga3VuaXRfc2V0X2ZhaWx1cmUoc3RydWN0IGt1bml0ICp0ZXN0KQogewpA
QCAtMTYyLDYgKzE2NCwxOSBAQCBzdGF0aWMgdm9pZCBrdW5pdF9mYWlsKHN0cnVjdCBrdW5pdCAq
dGVzdCwgc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0KQogCVdBUk5fT04oc3RyaW5nX3N0cmVh
bV9kZXN0cm95KHN0cmVhbSkpOwogfQogCitzdGF0aWMgdm9pZCBfX25vcmV0dXJuIGt1bml0X2Fi
b3J0KHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlrdW5pdF90cnlfY2F0Y2hfdGhyb3coJnRlc3Qt
PnRyeV9jYXRjaCk7IC8qIERvZXMgbm90IHJldHVybi4gKi8KKworCS8qCisJICogVGhyb3cgY291
bGQgbm90IGFib3J0IGZyb20gdGVzdC4KKwkgKgorCSAqIFhYWDogd2Ugc2hvdWxkIG5ldmVyIHJl
YWNoIHRoaXMgbGluZSEgQXMga3VuaXRfdHJ5X2NhdGNoX3Rocm93IGlzCisJICogbWFya2VkIF9f
bm9yZXR1cm4uCisJICovCisJQlVHKCk7Cit9CisKIHZvaWQga3VuaXRfZG9fYXNzZXJ0aW9uKHN0
cnVjdCBrdW5pdCAqdGVzdCwKIAkJCXN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKIAkJCWJv
b2wgcGFzcywKQEAgLTE4MCw2ICsxOTUsOSBAQCB2b2lkIGt1bml0X2RvX2Fzc2VydGlvbihzdHJ1
Y3Qga3VuaXQgKnRlc3QsCiAJa3VuaXRfZmFpbCh0ZXN0LCBhc3NlcnQpOwogCiAJdmFfZW5kKGFy
Z3MpOworCisJaWYgKGFzc2VydC0+dHlwZSA9PSBLVU5JVF9BU1NFUlRJT04pCisJCWt1bml0X2Fi
b3J0KHRlc3QpOwogfQogCiB2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3Qs
IGNvbnN0IGNoYXIgKm5hbWUpCkBAIC0xOTEsMzMgKzIwOSwxMjIgQEAgdm9pZCBrdW5pdF9pbml0
X3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBjb25zdCBjaGFyICpuYW1lKQogfQogCiAvKgotICog
UGVyZm9ybXMgYWxsIGxvZ2ljIHRvIHJ1biBhIHRlc3QgY2FzZS4KKyAqIEluaXRpYWxpemVzIGFu
ZCBydW5zIHRlc3QgY2FzZS4gRG9lcyBub3QgY2xlYW4gdXAgb3IgZG8gcG9zdCB2YWxpZGF0aW9u
cy4KICAqLwotc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X3N1aXRlICpz
dWl0ZSwKLQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCitzdGF0aWMgdm9pZCBr
dW5pdF9ydW5fY2FzZV9pbnRlcm5hbChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgIHN0cnVj
dCBrdW5pdF9zdWl0ZSAqc3VpdGUsCisJCQkJICAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nh
c2UpCiB7Ci0Jc3RydWN0IGt1bml0IHRlc3Q7Ci0KLQlrdW5pdF9pbml0X3Rlc3QoJnRlc3QsIHRl
c3RfY2FzZS0+bmFtZSk7Ci0KIAlpZiAoc3VpdGUtPmluaXQpIHsKIAkJaW50IHJldDsKIAotCQly
ZXQgPSBzdWl0ZS0+aW5pdCgmdGVzdCk7CisJCXJldCA9IHN1aXRlLT5pbml0KHRlc3QpOwogCQlp
ZiAocmV0KSB7Ci0JCQlrdW5pdF9lcnIoJnRlc3QsICJmYWlsZWQgdG8gaW5pdGlhbGl6ZTogJWRc
biIsIHJldCk7Ci0JCQlrdW5pdF9zZXRfZmFpbHVyZSgmdGVzdCk7Ci0JCQl0ZXN0X2Nhc2UtPnN1
Y2Nlc3MgPSB0ZXN0LnN1Y2Nlc3M7CisJCQlrdW5pdF9lcnIodGVzdCwgImZhaWxlZCB0byBpbml0
aWFsaXplOiAlZFxuIiwgcmV0KTsKKwkJCWt1bml0X3NldF9mYWlsdXJlKHRlc3QpOwogCQkJcmV0
dXJuOwogCQl9CiAJfQogCi0JdGVzdF9jYXNlLT5ydW5fY2FzZSgmdGVzdCk7CisJdGVzdF9jYXNl
LT5ydW5fY2FzZSh0ZXN0KTsKK30KIAorc3RhdGljIHZvaWQga3VuaXRfY2FzZV9pbnRlcm5hbF9j
bGVhbnVwKHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlrdW5pdF9jbGVhbnVwKHRlc3QpOworfQor
CisvKgorICogUGVyZm9ybXMgcG9zdCB2YWxpZGF0aW9ucyBhbmQgY2xlYW51cCBhZnRlciBhIHRl
c3QgY2FzZSB3YXMgcnVuLgorICogWFhYOiBTaG91bGQgT05MWSBCRSBDQUxMRUQgQUZURVIga3Vu
aXRfcnVuX2Nhc2VfaW50ZXJuYWwhCisgKi8KK3N0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlX2Ns
ZWFudXAoc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJCSAgIHN0cnVjdCBrdW5pdF9zdWl0ZSAqc3Vp
dGUpCit7CiAJaWYgKHN1aXRlLT5leGl0KQotCQlzdWl0ZS0+ZXhpdCgmdGVzdCk7CisJCXN1aXRl
LT5leGl0KHRlc3QpOworCisJa3VuaXRfY2FzZV9pbnRlcm5hbF9jbGVhbnVwKHRlc3QpOworfQor
CitzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgeworCXN0cnVjdCBrdW5pdCAqdGVzdDsK
KwlzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nh
c2U7Cit9OworCitzdGF0aWMgdm9pZCBrdW5pdF90cnlfcnVuX2Nhc2Uodm9pZCAqZGF0YSkKK3sK
KwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgKmN0eCA9IGRhdGE7CisJc3RydWN0IGt1
bml0ICp0ZXN0ID0gY3R4LT50ZXN0OworCXN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGUgPSBjdHgt
PnN1aXRlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UgPSBjdHgtPnRlc3RfY2FzZTsK
KworCS8qCisJICoga3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwgbWF5IGVuY291bnRlciBhIGZhdGFs
IGVycm9yOyBpZiBpdCBkb2VzLAorCSAqIGFib3J0IHdpbGwgYmUgY2FsbGVkLCB0aGlzIHRocmVh
ZCB3aWxsIGV4aXQsIGFuZCBmaW5hbGx5IHRoZSBwYXJlbnQKKwkgKiB0aHJlYWQgd2lsbCByZXN1
bWUgY29udHJvbCBhbmQgaGFuZGxlIGFueSBuZWNlc3NhcnkgY2xlYW4gdXAuCisJICovCisJa3Vu
aXRfcnVuX2Nhc2VfaW50ZXJuYWwodGVzdCwgc3VpdGUsIHRlc3RfY2FzZSk7CisJLyogVGhpcyBs
aW5lIG1heSBuZXZlciBiZSByZWFjaGVkLiAqLworCWt1bml0X3J1bl9jYXNlX2NsZWFudXAodGVz
dCwgc3VpdGUpOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9jYXRjaF9ydW5fY2FzZSh2b2lkICpk
YXRhKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2hfY29udGV4dCAqY3R4ID0gZGF0YTsKKwlz
dHJ1Y3Qga3VuaXQgKnRlc3QgPSBjdHgtPnRlc3Q7CisJc3RydWN0IGt1bml0X3N1aXRlICpzdWl0
ZSA9IGN0eC0+c3VpdGU7CisJaW50IHRyeV9leGl0X2NvZGUgPSBrdW5pdF90cnlfY2F0Y2hfZ2V0
X3Jlc3VsdCgmdGVzdC0+dHJ5X2NhdGNoKTsKKworCWlmICh0cnlfZXhpdF9jb2RlKSB7CisJCWt1
bml0X3NldF9mYWlsdXJlKHRlc3QpOworCQkvKgorCQkgKiBUZXN0IGNhc2UgY291bGQgbm90IGZp
bmlzaCwgd2UgaGF2ZSBubyBpZGVhIHdoYXQgc3RhdGUgaXQgaXMKKwkJICogaW4sIHNvIGRvbid0
IGRvIGNsZWFuIHVwLgorCQkgKi8KKwkJaWYgKHRyeV9leGl0X2NvZGUgPT0gLUVUSU1FRE9VVCkg
eworCQkJa3VuaXRfZXJyKHRlc3QsICJ0ZXN0IGNhc2UgdGltZWQgb3V0XG4iKTsKKwkJLyoKKwkJ
ICogVW5rbm93biBpbnRlcm5hbCBlcnJvciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBm
cm9tCisJCSAqIHJ1bm5pbmcsIHNvIHRoZXJlIGlzIG5vdGhpbmcgdG8gY2xlYW4gdXAuCisJCSAq
LworCQl9IGVsc2UgeworCQkJa3VuaXRfZXJyKHRlc3QsICJpbnRlcm5hbCBlcnJvciBvY2N1cnJl
ZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBmcm9tIHJ1bm5pbmc6ICVkXG4iLAorCQkJCSAgdHJ5X2V4
aXRfY29kZSk7CisJCX0KKwkJcmV0dXJuOworCX0KKworCS8qCisJICogVGVzdCBjYXNlIHdhcyBy
dW4sIGJ1dCBhYm9ydGVkLiBJdCBpcyB0aGUgdGVzdCBjYXNlJ3MgYnVzaW5lc3MgYXMgdG8KKwkg
KiB3aGV0aGVyIGl0IGZhaWxlZCBvciBub3QsIHdlIGp1c3QgbmVlZCB0byBjbGVhbiB1cC4KKwkg
Ki8KKwlrdW5pdF9ydW5fY2FzZV9jbGVhbnVwKHRlc3QsIHN1aXRlKTsKK30KKworLyoKKyAqIFBl
cmZvcm1zIGFsbCBsb2dpYyB0byBydW4gYSB0ZXN0IGNhc2UuIEl0IGFsc28gY2F0Y2hlcyBtb3N0
IGVycm9ycyB0aGF0CisgKiBvY2N1ciBpbiBhIHRlc3QgY2FzZSBhbmQgcmVwb3J0cyB0aGVtIGFz
IGZhaWx1cmVzLgorICovCitzdGF0aWMgdm9pZCBrdW5pdF9ydW5fY2FzZV9jYXRjaF9lcnJvcnMo
c3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSwKKwkJCQkJc3RydWN0IGt1bml0X2Nhc2UgKnRlc3Rf
Y2FzZSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgY29udGV4dDsKKwlzdHJ1
Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2g7CisJc3RydWN0IGt1bml0IHRlc3Q7CisKKwlr
dW5pdF9pbml0X3Rlc3QoJnRlc3QsIHRlc3RfY2FzZS0+bmFtZSk7CisJdHJ5X2NhdGNoID0gJnRl
c3QudHJ5X2NhdGNoOwogCi0Ja3VuaXRfY2xlYW51cCgmdGVzdCk7CisJa3VuaXRfdHJ5X2NhdGNo
X2luaXQodHJ5X2NhdGNoLAorCQkJICAgICAmdGVzdCwKKwkJCSAgICAga3VuaXRfdHJ5X3J1bl9j
YXNlLAorCQkJICAgICBrdW5pdF9jYXRjaF9ydW5fY2FzZSk7CisJY29udGV4dC50ZXN0ID0gJnRl
c3Q7CisJY29udGV4dC5zdWl0ZSA9IHN1aXRlOworCWNvbnRleHQudGVzdF9jYXNlID0gdGVzdF9j
YXNlOworCWt1bml0X3RyeV9jYXRjaF9ydW4odHJ5X2NhdGNoLCAmY29udGV4dCk7CiAKIAl0ZXN0
X2Nhc2UtPnN1Y2Nlc3MgPSB0ZXN0LnN1Y2Nlc3M7CiB9CkBAIC0yMzAsNyArMzM3LDcgQEAgaW50
IGt1bml0X3J1bl90ZXN0cyhzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlKQogCWt1bml0X3ByaW50
X3N1YnRlc3Rfc3RhcnQoc3VpdGUpOwogCiAJZm9yICh0ZXN0X2Nhc2UgPSBzdWl0ZS0+dGVzdF9j
YXNlczsgdGVzdF9jYXNlLT5ydW5fY2FzZTsgdGVzdF9jYXNlKyspIHsKLQkJa3VuaXRfcnVuX2Nh
c2Uoc3VpdGUsIHRlc3RfY2FzZSk7CisJCWt1bml0X3J1bl9jYXNlX2NhdGNoX2Vycm9ycyhzdWl0
ZSwgdGVzdF9jYXNlKTsKIAkJa3VuaXRfcHJpbnRfdGVzdF9jYXNlX29rX25vdF9vayh0ZXN0X2Nh
c2UsIHRlc3RfY2FzZV9jb3VudCsrKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2t1bml0L3RyeS1jYXRj
aC5jIGIva3VuaXQvdHJ5LWNhdGNoLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMDAwMC4uNTU2ODY4MzllYjYxOQotLS0gL2Rldi9udWxsCisrKyBiL2t1bml0L3RyeS1jYXRj
aC5jCkBAIC0wLDAgKzEsMTE4IEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIu
MAorLyoKKyAqIEFuIEFQSSB0byBhbGxvdyBhIGZ1bmN0aW9uLCB0aGF0IG1heSBmYWlsLCB0byBi
ZSBleGVjdXRlZCwgYW5kIHJlY292ZXIgaW4gYQorICogY29udHJvbGxlZCBtYW5uZXIuCisgKgor
ICogQ29weXJpZ2h0IChDKSAyMDE5LCBHb29nbGUgTExDLgorICogQXV0aG9yOiBCcmVuZGFuIEhp
Z2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+CisgKi8KKworI2luY2x1ZGUgPGt1bml0
L3Rlc3QuaD4KKyNpbmNsdWRlIDxrdW5pdC90cnktY2F0Y2guaD4KKyNpbmNsdWRlIDxsaW51eC9j
b21wbGV0aW9uLmg+CisjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgv
a3RocmVhZC5oPgorI2luY2x1ZGUgPGxpbnV4L3NjaGVkL3N5c2N0bC5oPgorCit2b2lkIF9fbm9y
ZXR1cm4ga3VuaXRfdHJ5X2NhdGNoX3Rocm93KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9j
YXRjaCkKK3sKKwl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAtRUZBVUxUOworCWNvbXBsZXRlX2Fu
ZF9leGl0KHRyeV9jYXRjaC0+dHJ5X2NvbXBsZXRpb24sIC1FRkFVTFQpOworfQorCitzdGF0aWMg
aW50IGt1bml0X2dlbmVyaWNfcnVuX3RocmVhZGZuX2FkYXB0ZXIodm9pZCAqZGF0YSkKK3sKKwlz
dHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2ggPSBkYXRhOworCisJdHJ5X2NhdGNoLT50
cnkodHJ5X2NhdGNoLT5jb250ZXh0KTsKKworCWNvbXBsZXRlX2FuZF9leGl0KHRyeV9jYXRjaC0+
dHJ5X2NvbXBsZXRpb24sIDApOworfQorCitzdGF0aWMgdW5zaWduZWQgbG9uZyBrdW5pdF90ZXN0
X3RpbWVvdXQodm9pZCkKK3sKKwl1bnNpZ25lZCBsb25nIHRpbWVvdXRfbXNlY3M7CisKKwkvKgor
CSAqIFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6IFdlIHNob3VsZCBwcm9iYWJseSBo
YXZlIHNvbWUgdHlwZSBvZgorCSAqIHZhcmlhYmxlIHRpbWVvdXQgaGVyZS4gVGhlIG9ubHkgcXVl
c3Rpb24gaXMgd2hhdCB0aGF0IHRpbWVvdXQgdmFsdWUKKwkgKiBzaG91bGQgYmUuCisJICoKKwkg
KiBUaGUgaW50ZW50aW9uIGhhcyBhbHdheXMgYmVlbiwgYXQgc29tZSBwb2ludCwgdG8gYmUgYWJs
ZSB0byBsYWJlbAorCSAqIHRlc3RzIHdpdGggc29tZSB0eXBlIG9mIHNpemUgYnVja2V0ICh1bml0
L3NtYWxsLCBpbnRlZ3JhdGlvbi9tZWRpdW0sCisJICogbGFyZ2Uvc3lzdGVtL2VuZC10by1lbmQs
IGV0YyksIHdoZXJlIGVhY2ggc2l6ZSBidWNrZXQgd291bGQgZ2V0IGEKKwkgKiBkZWZhdWx0IHRp
bWVvdXQgdmFsdWUga2luZCBvZiBsaWtlIHdoYXQgQmF6ZWwgZG9lczoKKwkgKiBodHRwczovL2Rv
Y3MuYmF6ZWwuYnVpbGQvdmVyc2lvbnMvbWFzdGVyL2JlL2NvbW1vbi1kZWZpbml0aW9ucy5odG1s
I3Rlc3Quc2l6ZQorCSAqIFRoZXJlIGlzIHN0aWxsIHNvbWUgZGViYXRlIHRvIGJlIGhhZCBvbiBl
eGFjdGx5IGhvdyB3ZSBkbyB0aGlzLiAoRm9yCisJICogb25lLCB3ZSBwcm9iYWJseSB3YW50IHRv
IGhhdmUgc29tZSBzb3J0IG9mIHRlc3QgcnVubmVyIGxldmVsCisJICogdGltZW91dC4pCisJICoK
KwkgKiBGb3IgbW9yZSBiYWNrZ3JvdW5kIG9uIHRoaXMgdG9waWMsIHNlZToKKwkgKiBodHRwczov
L21pa2UtYmxhbmQuY29tLzIwMTEvMTEvMDEvc21hbGwtbWVkaXVtLWxhcmdlLmh0bWwKKwkgKi8K
KwlpZiAoc3lzY3RsX2h1bmdfdGFza190aW1lb3V0X3NlY3MpIHsKKwkJLyoKKwkJICogSWYgc3lz
Y3RsX2h1bmdfdGFzayBpcyBhY3RpdmUsIGp1c3Qgc2V0IHRoZSB0aW1lb3V0IHRvIHNvbWUKKwkJ
ICogdmFsdWUgbGVzcyB0aGFuIHRoYXQuCisJCSAqCisJCSAqIEluIHJlZ2FyZHMgdG8gdGhlIGFi
b3ZlIFRPRE8sIGlmIHdlIGRlY2lkZSBvbiB2YXJpYWJsZQorCQkgKiB0aW1lb3V0cywgdGhpcyBs
b2dpYyB3aWxsIGxpa2VseSBuZWVkIHRvIGNoYW5nZS4KKwkJICovCisJCXRpbWVvdXRfbXNlY3Mg
PSAoc3lzY3RsX2h1bmdfdGFza190aW1lb3V0X3NlY3MgLSAxKSAqCisJCQkJTVNFQ19QRVJfU0VD
OworCX0gZWxzZSB7CisJCXRpbWVvdXRfbXNlY3MgPSAzMDAgKiBNU0VDX1BFUl9TRUM7IC8qIDUg
bWluICovCisJfQorCisJcmV0dXJuIHRpbWVvdXRfbXNlY3M7Cit9CisKK3ZvaWQga3VuaXRfdHJ5
X2NhdGNoX3J1bihzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsIHZvaWQgKmNvbnRl
eHQpCit7CisJREVDTEFSRV9DT01QTEVUSU9OX09OU1RBQ0sodHJ5X2NvbXBsZXRpb24pOworCXN0
cnVjdCBrdW5pdCAqdGVzdCA9IHRyeV9jYXRjaC0+dGVzdDsKKwlzdHJ1Y3QgdGFza19zdHJ1Y3Qg
KnRhc2tfc3RydWN0OworCWludCBleGl0X2NvZGUsIHRpbWVfcmVtYWluaW5nOworCisJdHJ5X2Nh
dGNoLT5jb250ZXh0ID0gY29udGV4dDsKKwl0cnlfY2F0Y2gtPnRyeV9jb21wbGV0aW9uID0gJnRy
eV9jb21wbGV0aW9uOworCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IDA7CisJdGFza19zdHJ1Y3Qg
PSBrdGhyZWFkX3J1bihrdW5pdF9nZW5lcmljX3J1bl90aHJlYWRmbl9hZGFwdGVyLAorCQkJCSAg
dHJ5X2NhdGNoLAorCQkJCSAgImt1bml0X3RyeV9jYXRjaF90aHJlYWQiKTsKKwlpZiAoSVNfRVJS
KHRhc2tfc3RydWN0KSkgeworCQl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4dCk7
CisJCXJldHVybjsKKwl9CisKKwl0aW1lX3JlbWFpbmluZyA9IHdhaXRfZm9yX2NvbXBsZXRpb25f
dGltZW91dCgmdHJ5X2NvbXBsZXRpb24sCisJCQkJCQkgICAgIGt1bml0X3Rlc3RfdGltZW91dCgp
KTsKKwlpZiAodGltZV9yZW1haW5pbmcgPT0gMCkgeworCQlrdW5pdF9lcnIodGVzdCwgInRyeSB0
aW1lZCBvdXRcbiIpOworCQl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAtRVRJTUVET1VUOworCX0K
KworCWV4aXRfY29kZSA9IHRyeV9jYXRjaC0+dHJ5X3Jlc3VsdDsKKworCWlmICghZXhpdF9jb2Rl
KQorCQlyZXR1cm47CisKKwlpZiAoZXhpdF9jb2RlID09IC1FRkFVTFQpCisJCXRyeV9jYXRjaC0+
dHJ5X3Jlc3VsdCA9IDA7CisJZWxzZSBpZiAoZXhpdF9jb2RlID09IC1FSU5UUikKKwkJa3VuaXRf
ZXJyKHRlc3QsICJ3YWtlX3VwX3Byb2Nlc3MoKSB3YXMgbmV2ZXIgY2FsbGVkXG4iKTsKKwllbHNl
IGlmIChleGl0X2NvZGUpCisJCWt1bml0X2Vycih0ZXN0LCAiVW5rbm93biBlcnJvcjogJWRcbiIs
IGV4aXRfY29kZSk7CisKKwl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4dCk7Cit9
CisKK3ZvaWQga3VuaXRfdHJ5X2NhdGNoX2luaXQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5
X2NhdGNoLAorCQkJICBzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkgIGt1bml0X3RyeV9jYXRjaF9m
dW5jX3QgdHJ5LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IGNhdGNoKQoreworCXRyeV9j
YXRjaC0+dGVzdCA9IHRlc3Q7CisJdHJ5X2NhdGNoLT50cnkgPSB0cnk7CisJdHJ5X2NhdGNoLT5j
YXRjaCA9IGNhdGNoOworfQotLSAKMi4yMy4wLnJjMS4xNTMuZ2RlZWQ4MDMzMGYtZ29vZwoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1h
aWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
