Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4E6D298397
	for <lists+dri-devel@lfdr.de>; Wed, 21 Aug 2019 20:50:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CD5B26E99A;
	Wed, 21 Aug 2019 18:50:34 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from perceval.ideasonboard.com (perceval.ideasonboard.com
 [213.167.242.64])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 46D506E970
 for <dri-devel@lists.freedesktop.org>; Wed, 21 Aug 2019 18:50:17 +0000 (UTC)
Received: from pendragon.bb.dnainternet.fi
 (dfj612yhrgyx302h3jwwy-3.rev.dnainternet.fi
 [IPv6:2001:14ba:21f5:5b00:ce28:277f:58d7:3ca4])
 by perceval.ideasonboard.com (Postfix) with ESMTPSA id EF060816;
 Wed, 21 Aug 2019 20:50:14 +0200 (CEST)
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH/RFC 2/5] drm/edid: Move functions to avoid forward declaration
Date: Wed, 21 Aug 2019 21:50:02 +0300
Message-Id: <20190821185005.9789-3-laurent.pinchart@ideasonboard.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190821185005.9789-1-laurent.pinchart@ideasonboard.com>
References: <20190821185005.9789-1-laurent.pinchart@ideasonboard.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=ideasonboard.com; s=mail; t=1566413415;
 bh=BrGRKBv/3AMeX3lrW9J2Vq2pVFa3BaqbrJqkulHT7Bg=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=HygFy53sei7w0OCmydPwiKcVepvWDBbTCMPaPaDro8A0+cQw0HcitJT4BoacmdRK+
 eyD7w7MfwALmsU0Z72MrB6Acs9Hbmqs3e/gpluDaH/lUDPHIG5J3oxjwfZvbkXKocj
 BZDGe8/MZOuD428jymNKf8V2XNS0In3Wc9XEnSdE=
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

TW92ZSB0aGUgRURJRCByZXRyaWV2YWwgZnVuY3Rpb25zIHRvIHRoZSBlbmQgb2YgdGhlIGZpbGUg
dG8gYXZvaWQKZm9yd2FyZCBkZWNsYXJhdGlvbnMuIFdoaWxlIGF0IGl0IGZpeCBhIHR5cG8gaW4g
YSBjb21tZW50CihzL2Zpcm1hcmUvZmlybXdhcmUvKS4gTm8gZnVuY3Rpb25hbCBjaGFuZ2UgaXMg
aW5jbHVkZWQuCgpTaWduZWQtb2ZmLWJ5OiBMYXVyZW50IFBpbmNoYXJ0IDxsYXVyZW50LnBpbmNo
YXJ0QGlkZWFzb25ib2FyZC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9lZGlkLmMgfCA2
MzcgKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDMxNyBpbnNlcnRpb25zKCspLCAzMjAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2RybV9lZGlkLmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2VkaWQuYwppbmRleCA3
YzZiYzUxODNiNjAuLmJmY2IyMzJiOTc2MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2Ry
bV9lZGlkLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2RybV9lZGlkLmMKQEAgLTEzNDAsOSArMTM0
MCw2IEBAIG1vZHVsZV9wYXJhbV9uYW1lZChlZGlkX2ZpeHVwLCBlZGlkX2ZpeHVwLCBpbnQsIDA0
MDApOwogTU9EVUxFX1BBUk1fREVTQyhlZGlkX2ZpeHVwLAogCQkgIk1pbmltdW0gbnVtYmVyIG9m
IHZhbGlkIEVESUQgaGVhZGVyIGJ5dGVzICgwLTgsIGRlZmF1bHQgNikiKTsKIAotc3RhdGljIHZv
aWQgZHJtX2dldF9kaXNwbGF5aWQoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKLQkJ
CSAgICAgIHN0cnVjdCBlZGlkICplZGlkKTsKLQogc3RhdGljIGludCBkcm1fZWRpZF9ibG9ja19j
aGVja3N1bShjb25zdCB1OCAqcmF3X2VkaWQpCiB7CiAJaW50IGk7CkBAIC0xNDgxLDMyMyArMTQ3
OCw2IEBAIGJvb2wgZHJtX2VkaWRfaXNfdmFsaWQoc3RydWN0IGVkaWQgKmVkaWQpCiB9CiBFWFBP
UlRfU1lNQk9MKGRybV9lZGlkX2lzX3ZhbGlkKTsKIAotI2RlZmluZSBERENfU0VHTUVOVF9BRERS
IDB4MzAKLS8qKgotICogZHJtX2RvX3Byb2JlX2RkY19lZGlkKCkgLSBnZXQgRURJRCBpbmZvcm1h
dGlvbiB2aWEgSTJDCi0gKiBAZGF0YTogSTJDIGRldmljZSBhZGFwdGVyCi0gKiBAYnVmOiBFRElE
IGRhdGEgYnVmZmVyIHRvIGJlIGZpbGxlZAotICogQGJsb2NrOiAxMjggYnl0ZSBFRElEIGJsb2Nr
IHRvIHN0YXJ0IGZldGNoaW5nIGZyb20KLSAqIEBsZW46IEVESUQgZGF0YSBidWZmZXIgbGVuZ3Ro
IHRvIGZldGNoCi0gKgotICogVHJ5IHRvIGZldGNoIEVESUQgaW5mb3JtYXRpb24gYnkgY2FsbGlu
ZyBJMkMgZHJpdmVyIGZ1bmN0aW9ucy4KLSAqCi0gKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciAt
MSBvbiBmYWlsdXJlLgotICovCi1zdGF0aWMgaW50Ci1kcm1fZG9fcHJvYmVfZGRjX2VkaWQodm9p
ZCAqZGF0YSwgdTggKmJ1ZiwgdW5zaWduZWQgaW50IGJsb2NrLCBzaXplX3QgbGVuKQotewotCXN0
cnVjdCBpMmNfYWRhcHRlciAqYWRhcHRlciA9IGRhdGE7Ci0JdW5zaWduZWQgY2hhciBzdGFydCA9
IGJsb2NrICogRURJRF9MRU5HVEg7Ci0JdW5zaWduZWQgY2hhciBzZWdtZW50ID0gYmxvY2sgPj4g
MTsKLQl1bnNpZ25lZCBjaGFyIHhmZXJzID0gc2VnbWVudCA/IDMgOiAyOwotCWludCByZXQsIHJl
dHJpZXMgPSA1OwotCi0JLyoKLQkgKiBUaGUgY29yZSBJMkMgZHJpdmVyIHdpbGwgYXV0b21hdGlj
YWxseSByZXRyeSB0aGUgdHJhbnNmZXIgaWYgdGhlCi0JICogYWRhcHRlciByZXBvcnRzIEVBR0FJ
Ti4gSG93ZXZlciwgd2UgZmluZCB0aGF0IGJpdC1iYW5naW5nIHRyYW5zZmVycwotCSAqIGFyZSBz
dXNjZXB0aWJsZSB0byBlcnJvcnMgdW5kZXIgYSBoZWF2aWx5IGxvYWRlZCBtYWNoaW5lIGFuZAot
CSAqIGdlbmVyYXRlIHNwdXJpb3VzIE5BS3MgYW5kIHRpbWVvdXRzLiBSZXRyeWluZyB0aGUgdHJh
bnNmZXIKLQkgKiBvZiB0aGUgaW5kaXZpZHVhbCBibG9jayBhIGZldyB0aW1lcyBzZWVtcyB0byBv
dmVyY29tZSB0aGlzLgotCSAqLwotCWRvIHsKLQkJc3RydWN0IGkyY19tc2cgbXNnc1tdID0gewot
CQkJewotCQkJCS5hZGRyCT0gRERDX1NFR01FTlRfQUREUiwKLQkJCQkuZmxhZ3MJPSAwLAotCQkJ
CS5sZW4JPSAxLAotCQkJCS5idWYJPSAmc2VnbWVudCwKLQkJCX0sIHsKLQkJCQkuYWRkcgk9IERE
Q19BRERSLAotCQkJCS5mbGFncwk9IDAsCi0JCQkJLmxlbgk9IDEsCi0JCQkJLmJ1Zgk9ICZzdGFy
dCwKLQkJCX0sIHsKLQkJCQkuYWRkcgk9IEREQ19BRERSLAotCQkJCS5mbGFncwk9IEkyQ19NX1JE
LAotCQkJCS5sZW4JPSBsZW4sCi0JCQkJLmJ1Zgk9IGJ1ZiwKLQkJCX0KLQkJfTsKLQotCQkvKgot
CQkgKiBBdm9pZCBzZW5kaW5nIHRoZSBzZWdtZW50IGFkZHIgdG8gbm90IHVwc2V0IG5vbi1jb21w
bGlhbnQKLQkJICogRERDIG1vbml0b3JzLgotCQkgKi8KLQkJcmV0ID0gaTJjX3RyYW5zZmVyKGFk
YXB0ZXIsICZtc2dzWzMgLSB4ZmVyc10sIHhmZXJzKTsKLQotCQlpZiAocmV0ID09IC1FTlhJTykg
ewotCQkJRFJNX0RFQlVHX0tNUygiZHJtOiBza2lwcGluZyBub24tZXhpc3RlbnQgYWRhcHRlciAl
c1xuIiwKLQkJCQkJYWRhcHRlci0+bmFtZSk7Ci0JCQlicmVhazsKLQkJfQotCX0gd2hpbGUgKHJl
dCAhPSB4ZmVycyAmJiAtLXJldHJpZXMpOwotCi0JcmV0dXJuIHJldCA9PSB4ZmVycyA/IDAgOiAt
MTsKLX0KLQotc3RhdGljIHZvaWQgY29ubmVjdG9yX2JhZF9lZGlkKHN0cnVjdCBkcm1fY29ubmVj
dG9yICpjb25uZWN0b3IsCi0JCQkgICAgICAgdTggKmVkaWQsIGludCBudW1fYmxvY2tzKQotewot
CWludCBpOwotCi0JaWYgKGNvbm5lY3Rvci0+YmFkX2VkaWRfY291bnRlcisrICYmICEoZHJtX2Rl
YnVnICYgRFJNX1VUX0tNUykpCi0JCXJldHVybjsKLQotCWRldl93YXJuKGNvbm5lY3Rvci0+ZGV2
LT5kZXYsCi0JCSAiJXM6IEVESUQgaXMgaW52YWxpZDpcbiIsCi0JCSBjb25uZWN0b3ItPm5hbWUp
OwotCWZvciAoaSA9IDA7IGkgPCBudW1fYmxvY2tzOyBpKyspIHsKLQkJdTggKmJsb2NrID0gZWRp
ZCArIGkgKiBFRElEX0xFTkdUSDsKLQkJY2hhciBwcmVmaXhbMjBdOwotCi0JCWlmIChkcm1fZWRp
ZF9pc196ZXJvKGJsb2NrLCBFRElEX0xFTkdUSCkpCi0JCQlzcHJpbnRmKHByZWZpeCwgIlx0WyUw
MnhdIFpFUk8gIiwgaSk7Ci0JCWVsc2UgaWYgKCFkcm1fZWRpZF9ibG9ja192YWxpZChibG9jaywg
aSwgZmFsc2UsIE5VTEwpKQotCQkJc3ByaW50ZihwcmVmaXgsICJcdFslMDJ4XSBCQUQgICIsIGkp
OwotCQllbHNlCi0JCQlzcHJpbnRmKHByZWZpeCwgIlx0WyUwMnhdIEdPT0QgIiwgaSk7Ci0KLQkJ
cHJpbnRfaGV4X2R1bXAoS0VSTl9XQVJOSU5HLAotCQkJICAgICAgIHByZWZpeCwgRFVNUF9QUkVG
SVhfTk9ORSwgMTYsIDEsCi0JCQkgICAgICAgYmxvY2ssIEVESURfTEVOR1RILCBmYWxzZSk7Ci0J
fQotfQotCi0vKiBHZXQgb3ZlcnJpZGUgb3IgZmlybXdhcmUgRURJRCAqLwotc3RhdGljIHN0cnVj
dCBlZGlkICpkcm1fZ2V0X292ZXJyaWRlX2VkaWQoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvcikKLXsKLQlzdHJ1Y3QgZWRpZCAqb3ZlcnJpZGUgPSBOVUxMOwotCi0JaWYgKGNvbm5lY3Rv
ci0+b3ZlcnJpZGVfZWRpZCkKLQkJb3ZlcnJpZGUgPSBkcm1fZWRpZF9kdXBsaWNhdGUoY29ubmVj
dG9yLT5lZGlkX2Jsb2JfcHRyLT5kYXRhKTsKLQotCWlmICghb3ZlcnJpZGUpCi0JCW92ZXJyaWRl
ID0gZHJtX2xvYWRfZWRpZF9maXJtd2FyZShjb25uZWN0b3IpOwotCi0JcmV0dXJuIElTX0VSUihv
dmVycmlkZSkgPyBOVUxMIDogb3ZlcnJpZGU7Ci19Ci0KLS8qKgotICogZHJtX2FkZF9vdmVycmlk
ZV9lZGlkX21vZGVzIC0gYWRkIG1vZGVzIGZyb20gb3ZlcnJpZGUvZmlybXdhcmUgRURJRAotICog
QGNvbm5lY3RvcjogY29ubmVjdG9yIHdlJ3JlIHByb2JpbmcKLSAqCi0gKiBBZGQgbW9kZXMgZnJv
bSB0aGUgb3ZlcnJpZGUvZmlybXdhcmUgRURJRCwgaWYgYXZhaWxhYmxlLiBPbmx5IHRvIGJlIHVz
ZWQgZnJvbQotICogZHJtX2hlbHBlcl9wcm9iZV9zaW5nbGVfY29ubmVjdG9yX21vZGVzKCkgYXMg
YSBmYWxsYmFjayBmb3Igd2hlbiBEREMgcHJvYmUKLSAqIGZhaWxlZCBkdXJpbmcgZHJtX2dldF9l
ZGlkKCkgYW5kIGNhdXNlZCB0aGUgb3ZlcnJpZGUvZmlybXdhcmUgRURJRCB0byBiZQotICogc2tp
cHBlZC4KLSAqCi0gKiBSZXR1cm46IFRoZSBudW1iZXIgb2YgbW9kZXMgYWRkZWQgb3IgMCBpZiB3
ZSBjb3VsZG4ndCBmaW5kIGFueS4KLSAqLwotaW50IGRybV9hZGRfb3ZlcnJpZGVfZWRpZF9tb2Rl
cyhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQotewotCXN0cnVjdCBlZGlkICpvdmVy
cmlkZTsKLQlpbnQgbnVtX21vZGVzID0gMDsKLQotCW92ZXJyaWRlID0gZHJtX2dldF9vdmVycmlk
ZV9lZGlkKGNvbm5lY3Rvcik7Ci0JaWYgKG92ZXJyaWRlKSB7Ci0JCWRybV9jb25uZWN0b3JfdXBk
YXRlX2VkaWRfcHJvcGVydHkoY29ubmVjdG9yLCBvdmVycmlkZSk7Ci0JCW51bV9tb2RlcyA9IGRy
bV9hZGRfZWRpZF9tb2Rlcyhjb25uZWN0b3IsIG92ZXJyaWRlKTsKLQkJa2ZyZWUob3ZlcnJpZGUp
OwotCi0JCURSTV9ERUJVR19LTVMoIltDT05ORUNUT1I6JWQ6JXNdIGFkZGluZyAlZCBtb2RlcyB2
aWEgZmFsbGJhY2sgb3ZlcnJpZGUvZmlybXdhcmUgRURJRFxuIiwKLQkJCSAgICAgIGNvbm5lY3Rv
ci0+YmFzZS5pZCwgY29ubmVjdG9yLT5uYW1lLCBudW1fbW9kZXMpOwotCX0KLQotCXJldHVybiBu
dW1fbW9kZXM7Ci19Ci1FWFBPUlRfU1lNQk9MKGRybV9hZGRfb3ZlcnJpZGVfZWRpZF9tb2Rlcyk7
Ci0KLS8qKgotICogZHJtX2RvX2dldF9lZGlkIC0gZ2V0IEVESUQgZGF0YSB1c2luZyBhIGN1c3Rv
bSBFRElEIGJsb2NrIHJlYWQgZnVuY3Rpb24KLSAqIEBjb25uZWN0b3I6IGNvbm5lY3RvciB3ZSdy
ZSBwcm9iaW5nCi0gKiBAZ2V0X2VkaWRfYmxvY2s6IEVESUQgYmxvY2sgcmVhZCBmdW5jdGlvbgot
ICogQGRhdGE6IHByaXZhdGUgZGF0YSBwYXNzZWQgdG8gdGhlIGJsb2NrIHJlYWQgZnVuY3Rpb24K
LSAqCi0gKiBXaGVuIHRoZSBJMkMgYWRhcHRlciBjb25uZWN0ZWQgdG8gdGhlIEREQyBidXMgaXMg
aGlkZGVuIGJlaGluZCBhIGRldmljZSB0aGF0Ci0gKiBleHBvc2VzIGEgZGlmZmVyZW50IGludGVy
ZmFjZSB0byByZWFkIEVESUQgYmxvY2tzIHRoaXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQKLSAqIHRv
IGdldCBFRElEIGRhdGEgdXNpbmcgYSBjdXN0b20gYmxvY2sgcmVhZCBmdW5jdGlvbi4KLSAqCi0g
KiBBcyBpbiB0aGUgZ2VuZXJhbCBjYXNlIHRoZSBEREMgYnVzIGlzIGFjY2Vzc2libGUgYnkgdGhl
IGtlcm5lbCBhdCB0aGUgSTJDCi0gKiBsZXZlbCwgZHJpdmVycyBtdXN0IG1ha2UgYWxsIHJlYXNv
bmFibGUgZWZmb3J0cyB0byBleHBvc2UgaXQgYXMgYW4gSTJDCi0gKiBhZGFwdGVyIGFuZCB1c2Ug
ZHJtX2dldF9lZGlkKCkgaW5zdGVhZCBvZiBhYnVzaW5nIHRoaXMgZnVuY3Rpb24uCi0gKgotICog
VGhlIEVESUQgbWF5IGJlIG92ZXJyaWRkZW4gdXNpbmcgZGVidWdmcyBvdmVycmlkZV9lZGlkIG9y
IGZpcm1hcmUgRURJRAotICogKGRybV9sb2FkX2VkaWRfZmlybXdhcmUoKSBhbmQgZHJtLmVkaWRf
ZmlybXdhcmUgcGFyYW1ldGVyKSwgaW4gdGhpcyBwcmlvcml0eQotICogb3JkZXIuIEhhdmluZyBl
aXRoZXIgb2YgdGhlbSBieXBhc3NlcyBhY3R1YWwgRURJRCByZWFkcy4KLSAqCi0gKiBSZXR1cm46
IFBvaW50ZXIgdG8gdmFsaWQgRURJRCBvciBOVUxMIGlmIHdlIGNvdWxkbid0IGZpbmQgYW55Lgot
ICovCi1zdHJ1Y3QgZWRpZCAqZHJtX2RvX2dldF9lZGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpj
b25uZWN0b3IsCi0JaW50ICgqZ2V0X2VkaWRfYmxvY2spKHZvaWQgKmRhdGEsIHU4ICpidWYsIHVu
c2lnbmVkIGludCBibG9jaywKLQkJCSAgICAgIHNpemVfdCBsZW4pLAotCXZvaWQgKmRhdGEpCi17
Ci0JaW50IGksIGogPSAwLCB2YWxpZF9leHRlbnNpb25zID0gMDsKLQl1OCAqZWRpZCwgKm5ldzsK
LQlzdHJ1Y3QgZWRpZCAqb3ZlcnJpZGU7Ci0KLQlvdmVycmlkZSA9IGRybV9nZXRfb3ZlcnJpZGVf
ZWRpZChjb25uZWN0b3IpOwotCWlmIChvdmVycmlkZSkKLQkJcmV0dXJuIG92ZXJyaWRlOwotCi0J
aWYgKChlZGlkID0ga21hbGxvYyhFRElEX0xFTkdUSCwgR0ZQX0tFUk5FTCkpID09IE5VTEwpCi0J
CXJldHVybiBOVUxMOwotCi0JLyogYmFzZSBibG9jayBmZXRjaCAqLwotCWZvciAoaSA9IDA7IGkg
PCA0OyBpKyspIHsKLQkJaWYgKGdldF9lZGlkX2Jsb2NrKGRhdGEsIGVkaWQsIDAsIEVESURfTEVO
R1RIKSkKLQkJCWdvdG8gb3V0OwotCQlpZiAoZHJtX2VkaWRfYmxvY2tfdmFsaWQoZWRpZCwgMCwg
ZmFsc2UsCi0JCQkJCSAmY29ubmVjdG9yLT5lZGlkX2NvcnJ1cHQpKQotCQkJYnJlYWs7Ci0JCWlm
IChpID09IDAgJiYgZHJtX2VkaWRfaXNfemVybyhlZGlkLCBFRElEX0xFTkdUSCkpIHsKLQkJCWNv
bm5lY3Rvci0+bnVsbF9lZGlkX2NvdW50ZXIrKzsKLQkJCWdvdG8gY2FycDsKLQkJfQotCX0KLQlp
ZiAoaSA9PSA0KQotCQlnb3RvIGNhcnA7Ci0KLQkvKiBpZiB0aGVyZSdzIG5vIGV4dGVuc2lvbnMs
IHdlJ3JlIGRvbmUgKi8KLQl2YWxpZF9leHRlbnNpb25zID0gZWRpZFsweDdlXTsKLQlpZiAodmFs
aWRfZXh0ZW5zaW9ucyA9PSAwKQotCQlyZXR1cm4gKHN0cnVjdCBlZGlkICopZWRpZDsKLQotCW5l
dyA9IGtyZWFsbG9jKGVkaWQsICh2YWxpZF9leHRlbnNpb25zICsgMSkgKiBFRElEX0xFTkdUSCwg
R0ZQX0tFUk5FTCk7Ci0JaWYgKCFuZXcpCi0JCWdvdG8gb3V0OwotCWVkaWQgPSBuZXc7Ci0KLQlm
b3IgKGogPSAxOyBqIDw9IGVkaWRbMHg3ZV07IGorKykgewotCQl1OCAqYmxvY2sgPSBlZGlkICsg
aiAqIEVESURfTEVOR1RIOwotCi0JCWZvciAoaSA9IDA7IGkgPCA0OyBpKyspIHsKLQkJCWlmIChn
ZXRfZWRpZF9ibG9jayhkYXRhLCBibG9jaywgaiwgRURJRF9MRU5HVEgpKQotCQkJCWdvdG8gb3V0
OwotCQkJaWYgKGRybV9lZGlkX2Jsb2NrX3ZhbGlkKGJsb2NrLCBqLCBmYWxzZSwgTlVMTCkpCi0J
CQkJYnJlYWs7Ci0JCX0KLQotCQlpZiAoaSA9PSA0KQotCQkJdmFsaWRfZXh0ZW5zaW9ucy0tOwot
CX0KLQotCWlmICh2YWxpZF9leHRlbnNpb25zICE9IGVkaWRbMHg3ZV0pIHsKLQkJdTggKmJhc2U7
Ci0KLQkJY29ubmVjdG9yX2JhZF9lZGlkKGNvbm5lY3RvciwgZWRpZCwgZWRpZFsweDdlXSArIDEp
OwotCi0JCWVkaWRbRURJRF9MRU5HVEgtMV0gKz0gZWRpZFsweDdlXSAtIHZhbGlkX2V4dGVuc2lv
bnM7Ci0JCWVkaWRbMHg3ZV0gPSB2YWxpZF9leHRlbnNpb25zOwotCi0JCW5ldyA9IGttYWxsb2Nf
YXJyYXkodmFsaWRfZXh0ZW5zaW9ucyArIDEsIEVESURfTEVOR1RILAotCQkJCSAgICBHRlBfS0VS
TkVMKTsKLQkJaWYgKCFuZXcpCi0JCQlnb3RvIG91dDsKLQotCQliYXNlID0gbmV3OwotCQlmb3Ig
KGkgPSAwOyBpIDw9IGVkaWRbMHg3ZV07IGkrKykgewotCQkJdTggKmJsb2NrID0gZWRpZCArIGkg
KiBFRElEX0xFTkdUSDsKLQotCQkJaWYgKCFkcm1fZWRpZF9ibG9ja192YWxpZChibG9jaywgaSwg
ZmFsc2UsIE5VTEwpKQotCQkJCWNvbnRpbnVlOwotCi0JCQltZW1jcHkoYmFzZSwgYmxvY2ssIEVE
SURfTEVOR1RIKTsKLQkJCWJhc2UgKz0gRURJRF9MRU5HVEg7Ci0JCX0KLQotCQlrZnJlZShlZGlk
KTsKLQkJZWRpZCA9IG5ldzsKLQl9Ci0KLQlyZXR1cm4gKHN0cnVjdCBlZGlkICopZWRpZDsKLQot
Y2FycDoKLQljb25uZWN0b3JfYmFkX2VkaWQoY29ubmVjdG9yLCBlZGlkLCAxKTsKLW91dDoKLQlr
ZnJlZShlZGlkKTsKLQlyZXR1cm4gTlVMTDsKLX0KLUVYUE9SVF9TWU1CT0xfR1BMKGRybV9kb19n
ZXRfZWRpZCk7Ci0KLS8qKgotICogZHJtX3Byb2JlX2RkYygpIC0gcHJvYmUgRERDIHByZXNlbmNl
Ci0gKiBAYWRhcHRlcjogSTJDIGFkYXB0ZXIgdG8gcHJvYmUKLSAqCi0gKiBSZXR1cm46IFRydWUg
b24gc3VjY2VzcywgZmFsc2Ugb24gZmFpbHVyZS4KLSAqLwotYm9vbAotZHJtX3Byb2JlX2RkYyhz
dHJ1Y3QgaTJjX2FkYXB0ZXIgKmFkYXB0ZXIpCi17Ci0JdW5zaWduZWQgY2hhciBvdXQ7Ci0KLQly
ZXR1cm4gKGRybV9kb19wcm9iZV9kZGNfZWRpZChhZGFwdGVyLCAmb3V0LCAwLCAxKSA9PSAwKTsK
LX0KLUVYUE9SVF9TWU1CT0woZHJtX3Byb2JlX2RkYyk7Ci0KLS8qKgotICogZHJtX2dldF9lZGlk
IC0gZ2V0IEVESUQgZGF0YSwgaWYgYXZhaWxhYmxlCi0gKiBAY29ubmVjdG9yOiBjb25uZWN0b3Ig
d2UncmUgcHJvYmluZwotICogQGFkYXB0ZXI6IEkyQyBhZGFwdGVyIHRvIHVzZSBmb3IgRERDCi0g
KgotICogUG9rZSB0aGUgZ2l2ZW4gSTJDIGNoYW5uZWwgdG8gZ3JhYiBFRElEIGRhdGEgaWYgcG9z
c2libGUuICBJZiBmb3VuZCwKLSAqIGF0dGFjaCBpdCB0byB0aGUgY29ubmVjdG9yLgotICoKLSAq
IFJldHVybjogUG9pbnRlciB0byB2YWxpZCBFRElEIG9yIE5VTEwgaWYgd2UgY291bGRuJ3QgZmlu
ZCBhbnkuCi0gKi8KLXN0cnVjdCBlZGlkICpkcm1fZ2V0X2VkaWQoc3RydWN0IGRybV9jb25uZWN0
b3IgKmNvbm5lY3RvciwKLQkJCSAgc3RydWN0IGkyY19hZGFwdGVyICphZGFwdGVyKQotewotCXN0
cnVjdCBlZGlkICplZGlkOwotCi0JaWYgKGNvbm5lY3Rvci0+Zm9yY2UgPT0gRFJNX0ZPUkNFX09G
RikKLQkJcmV0dXJuIE5VTEw7Ci0KLQlpZiAoY29ubmVjdG9yLT5mb3JjZSA9PSBEUk1fRk9SQ0Vf
VU5TUEVDSUZJRUQgJiYgIWRybV9wcm9iZV9kZGMoYWRhcHRlcikpCi0JCXJldHVybiBOVUxMOwot
Ci0JZWRpZCA9IGRybV9kb19nZXRfZWRpZChjb25uZWN0b3IsIGRybV9kb19wcm9iZV9kZGNfZWRp
ZCwgYWRhcHRlcik7Ci0JaWYgKGVkaWQpCi0JCWRybV9nZXRfZGlzcGxheWlkKGNvbm5lY3Rvciwg
ZWRpZCk7Ci0JcmV0dXJuIGVkaWQ7Ci19Ci1FWFBPUlRfU1lNQk9MKGRybV9nZXRfZWRpZCk7Ci0K
LS8qKgotICogZHJtX2dldF9lZGlkX3N3aXRjaGVyb28gLSBnZXQgRURJRCBkYXRhIGZvciBhIHZn
YV9zd2l0Y2hlcm9vIG91dHB1dAotICogQGNvbm5lY3RvcjogY29ubmVjdG9yIHdlJ3JlIHByb2Jp
bmcKLSAqIEBhZGFwdGVyOiBJMkMgYWRhcHRlciB0byB1c2UgZm9yIEREQwotICoKLSAqIFdyYXBw
ZXIgYXJvdW5kIGRybV9nZXRfZWRpZCgpIGZvciBsYXB0b3BzIHdpdGggZHVhbCBHUFVzIHVzaW5n
IG9uZSBzZXQgb2YKLSAqIG91dHB1dHMuIFRoZSB3cmFwcGVyIGFkZHMgdGhlIHJlcXVpc2l0ZSB2
Z2Ffc3dpdGNoZXJvbyBjYWxscyB0byB0ZW1wb3JhcmlseQotICogc3dpdGNoIEREQyB0byB0aGUg
R1BVIHdoaWNoIGlzIHJldHJpZXZpbmcgRURJRC4KLSAqCi0gKiBSZXR1cm46IFBvaW50ZXIgdG8g
dmFsaWQgRURJRCBvciAlTlVMTCBpZiB3ZSBjb3VsZG4ndCBmaW5kIGFueS4KLSAqLwotc3RydWN0
IGVkaWQgKmRybV9nZXRfZWRpZF9zd2l0Y2hlcm9vKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25u
ZWN0b3IsCi0JCQkJICAgICBzdHJ1Y3QgaTJjX2FkYXB0ZXIgKmFkYXB0ZXIpCi17Ci0Jc3RydWN0
IHBjaV9kZXYgKnBkZXYgPSBjb25uZWN0b3ItPmRldi0+cGRldjsKLQlzdHJ1Y3QgZWRpZCAqZWRp
ZDsKLQotCXZnYV9zd2l0Y2hlcm9vX2xvY2tfZGRjKHBkZXYpOwotCWVkaWQgPSBkcm1fZ2V0X2Vk
aWQoY29ubmVjdG9yLCBhZGFwdGVyKTsKLQl2Z2Ffc3dpdGNoZXJvb191bmxvY2tfZGRjKHBkZXYp
OwotCi0JcmV0dXJuIGVkaWQ7Ci19Ci1FWFBPUlRfU1lNQk9MKGRybV9nZXRfZWRpZF9zd2l0Y2hl
cm9vKTsKLQogLyoqCiAgKiBkcm1fZWRpZF9kdXBsaWNhdGUgLSBkdXBsaWNhdGUgYW4gRURJRCBh
bmQgdGhlIGV4dGVuc2lvbnMKICAqIEBlZGlkOiBFRElEIHRvIGR1cGxpY2F0ZQpAQCAtNTQ5MCwz
ICs1MTcwLDMyMCBAQCBzdGF0aWMgdm9pZCBkcm1fZ2V0X2Rpc3BsYXlpZChzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yLAogCQljb25uZWN0b3ItPnRpbGVfZ3JvdXAgPSBOVUxMOwogCX0K
IH0KKworI2RlZmluZSBERENfU0VHTUVOVF9BRERSIDB4MzAKKy8qKgorICogZHJtX2RvX3Byb2Jl
X2RkY19lZGlkKCkgLSBnZXQgRURJRCBpbmZvcm1hdGlvbiB2aWEgSTJDCisgKiBAZGF0YTogSTJD
IGRldmljZSBhZGFwdGVyCisgKiBAYnVmOiBFRElEIGRhdGEgYnVmZmVyIHRvIGJlIGZpbGxlZAor
ICogQGJsb2NrOiAxMjggYnl0ZSBFRElEIGJsb2NrIHRvIHN0YXJ0IGZldGNoaW5nIGZyb20KKyAq
IEBsZW46IEVESUQgZGF0YSBidWZmZXIgbGVuZ3RoIHRvIGZldGNoCisgKgorICogVHJ5IHRvIGZl
dGNoIEVESUQgaW5mb3JtYXRpb24gYnkgY2FsbGluZyBJMkMgZHJpdmVyIGZ1bmN0aW9ucy4KKyAq
CisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciAtMSBvbiBmYWlsdXJlLgorICovCitzdGF0aWMg
aW50Citkcm1fZG9fcHJvYmVfZGRjX2VkaWQodm9pZCAqZGF0YSwgdTggKmJ1ZiwgdW5zaWduZWQg
aW50IGJsb2NrLCBzaXplX3QgbGVuKQoreworCXN0cnVjdCBpMmNfYWRhcHRlciAqYWRhcHRlciA9
IGRhdGE7CisJdW5zaWduZWQgY2hhciBzdGFydCA9IGJsb2NrICogRURJRF9MRU5HVEg7CisJdW5z
aWduZWQgY2hhciBzZWdtZW50ID0gYmxvY2sgPj4gMTsKKwl1bnNpZ25lZCBjaGFyIHhmZXJzID0g
c2VnbWVudCA/IDMgOiAyOworCWludCByZXQsIHJldHJpZXMgPSA1OworCisJLyoKKwkgKiBUaGUg
Y29yZSBJMkMgZHJpdmVyIHdpbGwgYXV0b21hdGljYWxseSByZXRyeSB0aGUgdHJhbnNmZXIgaWYg
dGhlCisJICogYWRhcHRlciByZXBvcnRzIEVBR0FJTi4gSG93ZXZlciwgd2UgZmluZCB0aGF0IGJp
dC1iYW5naW5nIHRyYW5zZmVycworCSAqIGFyZSBzdXNjZXB0aWJsZSB0byBlcnJvcnMgdW5kZXIg
YSBoZWF2aWx5IGxvYWRlZCBtYWNoaW5lIGFuZAorCSAqIGdlbmVyYXRlIHNwdXJpb3VzIE5BS3Mg
YW5kIHRpbWVvdXRzLiBSZXRyeWluZyB0aGUgdHJhbnNmZXIKKwkgKiBvZiB0aGUgaW5kaXZpZHVh
bCBibG9jayBhIGZldyB0aW1lcyBzZWVtcyB0byBvdmVyY29tZSB0aGlzLgorCSAqLworCWRvIHsK
KwkJc3RydWN0IGkyY19tc2cgbXNnc1tdID0geworCQkJeworCQkJCS5hZGRyCT0gRERDX1NFR01F
TlRfQUREUiwKKwkJCQkuZmxhZ3MJPSAwLAorCQkJCS5sZW4JPSAxLAorCQkJCS5idWYJPSAmc2Vn
bWVudCwKKwkJCX0sIHsKKwkJCQkuYWRkcgk9IEREQ19BRERSLAorCQkJCS5mbGFncwk9IDAsCisJ
CQkJLmxlbgk9IDEsCisJCQkJLmJ1Zgk9ICZzdGFydCwKKwkJCX0sIHsKKwkJCQkuYWRkcgk9IERE
Q19BRERSLAorCQkJCS5mbGFncwk9IEkyQ19NX1JELAorCQkJCS5sZW4JPSBsZW4sCisJCQkJLmJ1
Zgk9IGJ1ZiwKKwkJCX0KKwkJfTsKKworCQkvKgorCQkgKiBBdm9pZCBzZW5kaW5nIHRoZSBzZWdt
ZW50IGFkZHIgdG8gbm90IHVwc2V0IG5vbi1jb21wbGlhbnQKKwkJICogRERDIG1vbml0b3JzLgor
CQkgKi8KKwkJcmV0ID0gaTJjX3RyYW5zZmVyKGFkYXB0ZXIsICZtc2dzWzMgLSB4ZmVyc10sIHhm
ZXJzKTsKKworCQlpZiAocmV0ID09IC1FTlhJTykgeworCQkJRFJNX0RFQlVHX0tNUygiZHJtOiBz
a2lwcGluZyBub24tZXhpc3RlbnQgYWRhcHRlciAlc1xuIiwKKwkJCQkJYWRhcHRlci0+bmFtZSk7
CisJCQlicmVhazsKKwkJfQorCX0gd2hpbGUgKHJldCAhPSB4ZmVycyAmJiAtLXJldHJpZXMpOwor
CisJcmV0dXJuIHJldCA9PSB4ZmVycyA/IDAgOiAtMTsKK30KKworc3RhdGljIHZvaWQgY29ubmVj
dG9yX2JhZF9lZGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCisJCQkgICAgICAg
dTggKmVkaWQsIGludCBudW1fYmxvY2tzKQoreworCWludCBpOworCisJaWYgKGNvbm5lY3Rvci0+
YmFkX2VkaWRfY291bnRlcisrICYmICEoZHJtX2RlYnVnICYgRFJNX1VUX0tNUykpCisJCXJldHVy
bjsKKworCWRldl93YXJuKGNvbm5lY3Rvci0+ZGV2LT5kZXYsCisJCSAiJXM6IEVESUQgaXMgaW52
YWxpZDpcbiIsCisJCSBjb25uZWN0b3ItPm5hbWUpOworCWZvciAoaSA9IDA7IGkgPCBudW1fYmxv
Y2tzOyBpKyspIHsKKwkJdTggKmJsb2NrID0gZWRpZCArIGkgKiBFRElEX0xFTkdUSDsKKwkJY2hh
ciBwcmVmaXhbMjBdOworCisJCWlmIChkcm1fZWRpZF9pc196ZXJvKGJsb2NrLCBFRElEX0xFTkdU
SCkpCisJCQlzcHJpbnRmKHByZWZpeCwgIlx0WyUwMnhdIFpFUk8gIiwgaSk7CisJCWVsc2UgaWYg
KCFkcm1fZWRpZF9ibG9ja192YWxpZChibG9jaywgaSwgZmFsc2UsIE5VTEwpKQorCQkJc3ByaW50
ZihwcmVmaXgsICJcdFslMDJ4XSBCQUQgICIsIGkpOworCQllbHNlCisJCQlzcHJpbnRmKHByZWZp
eCwgIlx0WyUwMnhdIEdPT0QgIiwgaSk7CisKKwkJcHJpbnRfaGV4X2R1bXAoS0VSTl9XQVJOSU5H
LAorCQkJICAgICAgIHByZWZpeCwgRFVNUF9QUkVGSVhfTk9ORSwgMTYsIDEsCisJCQkgICAgICAg
YmxvY2ssIEVESURfTEVOR1RILCBmYWxzZSk7CisJfQorfQorCisvKiBHZXQgb3ZlcnJpZGUgb3Ig
ZmlybXdhcmUgRURJRCAqLworc3RhdGljIHN0cnVjdCBlZGlkICpkcm1fZ2V0X292ZXJyaWRlX2Vk
aWQoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcikKK3sKKwlzdHJ1Y3QgZWRpZCAqb3Zl
cnJpZGUgPSBOVUxMOworCisJaWYgKGNvbm5lY3Rvci0+b3ZlcnJpZGVfZWRpZCkKKwkJb3ZlcnJp
ZGUgPSBkcm1fZWRpZF9kdXBsaWNhdGUoY29ubmVjdG9yLT5lZGlkX2Jsb2JfcHRyLT5kYXRhKTsK
KworCWlmICghb3ZlcnJpZGUpCisJCW92ZXJyaWRlID0gZHJtX2xvYWRfZWRpZF9maXJtd2FyZShj
b25uZWN0b3IpOworCisJcmV0dXJuIElTX0VSUihvdmVycmlkZSkgPyBOVUxMIDogb3ZlcnJpZGU7
Cit9CisKKy8qKgorICogZHJtX2FkZF9vdmVycmlkZV9lZGlkX21vZGVzIC0gYWRkIG1vZGVzIGZy
b20gb3ZlcnJpZGUvZmlybXdhcmUgRURJRAorICogQGNvbm5lY3RvcjogY29ubmVjdG9yIHdlJ3Jl
IHByb2JpbmcKKyAqCisgKiBBZGQgbW9kZXMgZnJvbSB0aGUgb3ZlcnJpZGUvZmlybXdhcmUgRURJ
RCwgaWYgYXZhaWxhYmxlLiBPbmx5IHRvIGJlIHVzZWQgZnJvbQorICogZHJtX2hlbHBlcl9wcm9i
ZV9zaW5nbGVfY29ubmVjdG9yX21vZGVzKCkgYXMgYSBmYWxsYmFjayBmb3Igd2hlbiBEREMgcHJv
YmUKKyAqIGZhaWxlZCBkdXJpbmcgZHJtX2dldF9lZGlkKCkgYW5kIGNhdXNlZCB0aGUgb3ZlcnJp
ZGUvZmlybXdhcmUgRURJRCB0byBiZQorICogc2tpcHBlZC4KKyAqCisgKiBSZXR1cm46IFRoZSBu
dW1iZXIgb2YgbW9kZXMgYWRkZWQgb3IgMCBpZiB3ZSBjb3VsZG4ndCBmaW5kIGFueS4KKyAqLwor
aW50IGRybV9hZGRfb3ZlcnJpZGVfZWRpZF9tb2RlcyhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29u
bmVjdG9yKQoreworCXN0cnVjdCBlZGlkICpvdmVycmlkZTsKKwlpbnQgbnVtX21vZGVzID0gMDsK
KworCW92ZXJyaWRlID0gZHJtX2dldF9vdmVycmlkZV9lZGlkKGNvbm5lY3Rvcik7CisJaWYgKG92
ZXJyaWRlKSB7CisJCWRybV9jb25uZWN0b3JfdXBkYXRlX2VkaWRfcHJvcGVydHkoY29ubmVjdG9y
LCBvdmVycmlkZSk7CisJCW51bV9tb2RlcyA9IGRybV9hZGRfZWRpZF9tb2Rlcyhjb25uZWN0b3Is
IG92ZXJyaWRlKTsKKwkJa2ZyZWUob3ZlcnJpZGUpOworCisJCURSTV9ERUJVR19LTVMoIltDT05O
RUNUT1I6JWQ6JXNdIGFkZGluZyAlZCBtb2RlcyB2aWEgZmFsbGJhY2sgb3ZlcnJpZGUvZmlybXdh
cmUgRURJRFxuIiwKKwkJCSAgICAgIGNvbm5lY3Rvci0+YmFzZS5pZCwgY29ubmVjdG9yLT5uYW1l
LCBudW1fbW9kZXMpOworCX0KKworCXJldHVybiBudW1fbW9kZXM7Cit9CitFWFBPUlRfU1lNQk9M
KGRybV9hZGRfb3ZlcnJpZGVfZWRpZF9tb2Rlcyk7CisKKy8qKgorICogZHJtX2RvX2dldF9lZGlk
IC0gZ2V0IEVESUQgZGF0YSB1c2luZyBhIGN1c3RvbSBFRElEIGJsb2NrIHJlYWQgZnVuY3Rpb24K
KyAqIEBjb25uZWN0b3I6IGNvbm5lY3RvciB3ZSdyZSBwcm9iaW5nCisgKiBAZ2V0X2VkaWRfYmxv
Y2s6IEVESUQgYmxvY2sgcmVhZCBmdW5jdGlvbgorICogQGRhdGE6IHByaXZhdGUgZGF0YSBwYXNz
ZWQgdG8gdGhlIGJsb2NrIHJlYWQgZnVuY3Rpb24KKyAqCisgKiBXaGVuIHRoZSBJMkMgYWRhcHRl
ciBjb25uZWN0ZWQgdG8gdGhlIEREQyBidXMgaXMgaGlkZGVuIGJlaGluZCBhIGRldmljZSB0aGF0
CisgKiBleHBvc2VzIGEgZGlmZmVyZW50IGludGVyZmFjZSB0byByZWFkIEVESUQgYmxvY2tzIHRo
aXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQKKyAqIHRvIGdldCBFRElEIGRhdGEgdXNpbmcgYSBjdXN0
b20gYmxvY2sgcmVhZCBmdW5jdGlvbi4KKyAqCisgKiBBcyBpbiB0aGUgZ2VuZXJhbCBjYXNlIHRo
ZSBEREMgYnVzIGlzIGFjY2Vzc2libGUgYnkgdGhlIGtlcm5lbCBhdCB0aGUgSTJDCisgKiBsZXZl
bCwgZHJpdmVycyBtdXN0IG1ha2UgYWxsIHJlYXNvbmFibGUgZWZmb3J0cyB0byBleHBvc2UgaXQg
YXMgYW4gSTJDCisgKiBhZGFwdGVyIGFuZCB1c2UgZHJtX2dldF9lZGlkKCkgaW5zdGVhZCBvZiBh
YnVzaW5nIHRoaXMgZnVuY3Rpb24uCisgKgorICogVGhlIEVESUQgbWF5IGJlIG92ZXJyaWRkZW4g
dXNpbmcgZGVidWdmcyBvdmVycmlkZV9lZGlkIG9yIGZpcm13YXJlIEVESUQKKyAqIChkcm1fbG9h
ZF9lZGlkX2Zpcm13YXJlKCkgYW5kIGRybS5lZGlkX2Zpcm13YXJlIHBhcmFtZXRlciksIGluIHRo
aXMgcHJpb3JpdHkKKyAqIG9yZGVyLiBIYXZpbmcgZWl0aGVyIG9mIHRoZW0gYnlwYXNzZXMgYWN0
dWFsIEVESUQgcmVhZHMuCisgKgorICogUmV0dXJuOiBQb2ludGVyIHRvIHZhbGlkIEVESUQgb3Ig
TlVMTCBpZiB3ZSBjb3VsZG4ndCBmaW5kIGFueS4KKyAqLworc3RydWN0IGVkaWQgKmRybV9kb19n
ZXRfZWRpZChzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLAorCWludCAoKmdldF9lZGlk
X2Jsb2NrKSh2b2lkICpkYXRhLCB1OCAqYnVmLCB1bnNpZ25lZCBpbnQgYmxvY2ssCisJCQkgICAg
ICBzaXplX3QgbGVuKSwKKwl2b2lkICpkYXRhKQoreworCWludCBpLCBqID0gMCwgdmFsaWRfZXh0
ZW5zaW9ucyA9IDA7CisJdTggKmVkaWQsICpuZXc7CisJc3RydWN0IGVkaWQgKm92ZXJyaWRlOwor
CisJb3ZlcnJpZGUgPSBkcm1fZ2V0X292ZXJyaWRlX2VkaWQoY29ubmVjdG9yKTsKKwlpZiAob3Zl
cnJpZGUpCisJCXJldHVybiBvdmVycmlkZTsKKworCWlmICgoZWRpZCA9IGttYWxsb2MoRURJRF9M
RU5HVEgsIEdGUF9LRVJORUwpKSA9PSBOVUxMKQorCQlyZXR1cm4gTlVMTDsKKworCS8qIGJhc2Ug
YmxvY2sgZmV0Y2ggKi8KKwlmb3IgKGkgPSAwOyBpIDwgNDsgaSsrKSB7CisJCWlmIChnZXRfZWRp
ZF9ibG9jayhkYXRhLCBlZGlkLCAwLCBFRElEX0xFTkdUSCkpCisJCQlnb3RvIG91dDsKKwkJaWYg
KGRybV9lZGlkX2Jsb2NrX3ZhbGlkKGVkaWQsIDAsIGZhbHNlLAorCQkJCQkgJmNvbm5lY3Rvci0+
ZWRpZF9jb3JydXB0KSkKKwkJCWJyZWFrOworCQlpZiAoaSA9PSAwICYmIGRybV9lZGlkX2lzX3pl
cm8oZWRpZCwgRURJRF9MRU5HVEgpKSB7CisJCQljb25uZWN0b3ItPm51bGxfZWRpZF9jb3VudGVy
Kys7CisJCQlnb3RvIGNhcnA7CisJCX0KKwl9CisJaWYgKGkgPT0gNCkKKwkJZ290byBjYXJwOwor
CisJLyogaWYgdGhlcmUncyBubyBleHRlbnNpb25zLCB3ZSdyZSBkb25lICovCisJdmFsaWRfZXh0
ZW5zaW9ucyA9IGVkaWRbMHg3ZV07CisJaWYgKHZhbGlkX2V4dGVuc2lvbnMgPT0gMCkKKwkJcmV0
dXJuIChzdHJ1Y3QgZWRpZCAqKWVkaWQ7CisKKwluZXcgPSBrcmVhbGxvYyhlZGlkLCAodmFsaWRf
ZXh0ZW5zaW9ucyArIDEpICogRURJRF9MRU5HVEgsIEdGUF9LRVJORUwpOworCWlmICghbmV3KQor
CQlnb3RvIG91dDsKKwllZGlkID0gbmV3OworCisJZm9yIChqID0gMTsgaiA8PSBlZGlkWzB4N2Vd
OyBqKyspIHsKKwkJdTggKmJsb2NrID0gZWRpZCArIGogKiBFRElEX0xFTkdUSDsKKworCQlmb3Ig
KGkgPSAwOyBpIDwgNDsgaSsrKSB7CisJCQlpZiAoZ2V0X2VkaWRfYmxvY2soZGF0YSwgYmxvY2ss
IGosIEVESURfTEVOR1RIKSkKKwkJCQlnb3RvIG91dDsKKwkJCWlmIChkcm1fZWRpZF9ibG9ja192
YWxpZChibG9jaywgaiwgZmFsc2UsIE5VTEwpKQorCQkJCWJyZWFrOworCQl9CisKKwkJaWYgKGkg
PT0gNCkKKwkJCXZhbGlkX2V4dGVuc2lvbnMtLTsKKwl9CisKKwlpZiAodmFsaWRfZXh0ZW5zaW9u
cyAhPSBlZGlkWzB4N2VdKSB7CisJCXU4ICpiYXNlOworCisJCWNvbm5lY3Rvcl9iYWRfZWRpZChj
b25uZWN0b3IsIGVkaWQsIGVkaWRbMHg3ZV0gKyAxKTsKKworCQllZGlkW0VESURfTEVOR1RILTFd
ICs9IGVkaWRbMHg3ZV0gLSB2YWxpZF9leHRlbnNpb25zOworCQllZGlkWzB4N2VdID0gdmFsaWRf
ZXh0ZW5zaW9uczsKKworCQluZXcgPSBrbWFsbG9jX2FycmF5KHZhbGlkX2V4dGVuc2lvbnMgKyAx
LCBFRElEX0xFTkdUSCwKKwkJCQkgICAgR0ZQX0tFUk5FTCk7CisJCWlmICghbmV3KQorCQkJZ290
byBvdXQ7CisKKwkJYmFzZSA9IG5ldzsKKwkJZm9yIChpID0gMDsgaSA8PSBlZGlkWzB4N2VdOyBp
KyspIHsKKwkJCXU4ICpibG9jayA9IGVkaWQgKyBpICogRURJRF9MRU5HVEg7CisKKwkJCWlmICgh
ZHJtX2VkaWRfYmxvY2tfdmFsaWQoYmxvY2ssIGksIGZhbHNlLCBOVUxMKSkKKwkJCQljb250aW51
ZTsKKworCQkJbWVtY3B5KGJhc2UsIGJsb2NrLCBFRElEX0xFTkdUSCk7CisJCQliYXNlICs9IEVE
SURfTEVOR1RIOworCQl9CisKKwkJa2ZyZWUoZWRpZCk7CisJCWVkaWQgPSBuZXc7CisJfQorCisJ
cmV0dXJuIChzdHJ1Y3QgZWRpZCAqKWVkaWQ7CisKK2NhcnA6CisJY29ubmVjdG9yX2JhZF9lZGlk
KGNvbm5lY3RvciwgZWRpZCwgMSk7CitvdXQ6CisJa2ZyZWUoZWRpZCk7CisJcmV0dXJuIE5VTEw7
Cit9CitFWFBPUlRfU1lNQk9MX0dQTChkcm1fZG9fZ2V0X2VkaWQpOworCisvKioKKyAqIGRybV9w
cm9iZV9kZGMoKSAtIHByb2JlIEREQyBwcmVzZW5jZQorICogQGFkYXB0ZXI6IEkyQyBhZGFwdGVy
IHRvIHByb2JlCisgKgorICogUmV0dXJuOiBUcnVlIG9uIHN1Y2Nlc3MsIGZhbHNlIG9uIGZhaWx1
cmUuCisgKi8KK2Jvb2wKK2RybV9wcm9iZV9kZGMoc3RydWN0IGkyY19hZGFwdGVyICphZGFwdGVy
KQoreworCXVuc2lnbmVkIGNoYXIgb3V0OworCisJcmV0dXJuIChkcm1fZG9fcHJvYmVfZGRjX2Vk
aWQoYWRhcHRlciwgJm91dCwgMCwgMSkgPT0gMCk7Cit9CitFWFBPUlRfU1lNQk9MKGRybV9wcm9i
ZV9kZGMpOworCisvKioKKyAqIGRybV9nZXRfZWRpZCAtIGdldCBFRElEIGRhdGEsIGlmIGF2YWls
YWJsZQorICogQGNvbm5lY3RvcjogY29ubmVjdG9yIHdlJ3JlIHByb2JpbmcKKyAqIEBhZGFwdGVy
OiBJMkMgYWRhcHRlciB0byB1c2UgZm9yIEREQworICoKKyAqIFBva2UgdGhlIGdpdmVuIEkyQyBj
aGFubmVsIHRvIGdyYWIgRURJRCBkYXRhIGlmIHBvc3NpYmxlLiAgSWYgZm91bmQsCisgKiBhdHRh
Y2ggaXQgdG8gdGhlIGNvbm5lY3Rvci4KKyAqCisgKiBSZXR1cm46IFBvaW50ZXIgdG8gdmFsaWQg
RURJRCBvciBOVUxMIGlmIHdlIGNvdWxkbid0IGZpbmQgYW55LgorICovCitzdHJ1Y3QgZWRpZCAq
ZHJtX2dldF9lZGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCisJCQkgIHN0cnVj
dCBpMmNfYWRhcHRlciAqYWRhcHRlcikKK3sKKwlzdHJ1Y3QgZWRpZCAqZWRpZDsKKworCWlmIChj
b25uZWN0b3ItPmZvcmNlID09IERSTV9GT1JDRV9PRkYpCisJCXJldHVybiBOVUxMOworCisJaWYg
KGNvbm5lY3Rvci0+Zm9yY2UgPT0gRFJNX0ZPUkNFX1VOU1BFQ0lGSUVEICYmICFkcm1fcHJvYmVf
ZGRjKGFkYXB0ZXIpKQorCQlyZXR1cm4gTlVMTDsKKworCWVkaWQgPSBkcm1fZG9fZ2V0X2VkaWQo
Y29ubmVjdG9yLCBkcm1fZG9fcHJvYmVfZGRjX2VkaWQsIGFkYXB0ZXIpOworCWlmIChlZGlkKQor
CQlkcm1fZ2V0X2Rpc3BsYXlpZChjb25uZWN0b3IsIGVkaWQpOworCXJldHVybiBlZGlkOworfQor
RVhQT1JUX1NZTUJPTChkcm1fZ2V0X2VkaWQpOworCisvKioKKyAqIGRybV9nZXRfZWRpZF9zd2l0
Y2hlcm9vIC0gZ2V0IEVESUQgZGF0YSBmb3IgYSB2Z2Ffc3dpdGNoZXJvbyBvdXRwdXQKKyAqIEBj
b25uZWN0b3I6IGNvbm5lY3RvciB3ZSdyZSBwcm9iaW5nCisgKiBAYWRhcHRlcjogSTJDIGFkYXB0
ZXIgdG8gdXNlIGZvciBEREMKKyAqCisgKiBXcmFwcGVyIGFyb3VuZCBkcm1fZ2V0X2VkaWQoKSBm
b3IgbGFwdG9wcyB3aXRoIGR1YWwgR1BVcyB1c2luZyBvbmUgc2V0IG9mCisgKiBvdXRwdXRzLiBU
aGUgd3JhcHBlciBhZGRzIHRoZSByZXF1aXNpdGUgdmdhX3N3aXRjaGVyb28gY2FsbHMgdG8gdGVt
cG9yYXJpbHkKKyAqIHN3aXRjaCBEREMgdG8gdGhlIEdQVSB3aGljaCBpcyByZXRyaWV2aW5nIEVE
SUQuCisgKgorICogUmV0dXJuOiBQb2ludGVyIHRvIHZhbGlkIEVESUQgb3IgJU5VTEwgaWYgd2Ug
Y291bGRuJ3QgZmluZCBhbnkuCisgKi8KK3N0cnVjdCBlZGlkICpkcm1fZ2V0X2VkaWRfc3dpdGNo
ZXJvbyhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLAorCQkJCSAgICAgc3RydWN0IGky
Y19hZGFwdGVyICphZGFwdGVyKQoreworCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gY29ubmVjdG9y
LT5kZXYtPnBkZXY7CisJc3RydWN0IGVkaWQgKmVkaWQ7CisKKwl2Z2Ffc3dpdGNoZXJvb19sb2Nr
X2RkYyhwZGV2KTsKKwllZGlkID0gZHJtX2dldF9lZGlkKGNvbm5lY3RvciwgYWRhcHRlcik7CisJ
dmdhX3N3aXRjaGVyb29fdW5sb2NrX2RkYyhwZGV2KTsKKworCXJldHVybiBlZGlkOworfQorRVhQ
T1JUX1NZTUJPTChkcm1fZ2V0X2VkaWRfc3dpdGNoZXJvbyk7Ci0tIApSZWdhcmRzLAoKTGF1cmVu
dCBQaW5jaGFydAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
Cmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
