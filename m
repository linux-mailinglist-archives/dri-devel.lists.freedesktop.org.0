Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 060B48DCEA
	for <lists+dri-devel@lfdr.de>; Wed, 14 Aug 2019 20:24:14 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DB3416E7C0;
	Wed, 14 Aug 2019 18:24:10 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 463436E7B5;
 Wed, 14 Aug 2019 18:24:09 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18112664-1500050 
 for multiple; Wed, 14 Aug 2019 19:24:02 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH] dma-buf: Restore seqlock around dma_resv updates
Date: Wed, 14 Aug 2019 19:24:01 +0100
Message-Id: <20190814182401.25009-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Daniel Vetter <daniel.vetter@ffwll.ch>, intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyByZXZlcnRzCjY3Yzk3ZmI3OWE3ZiAoImRtYS1idWY6IGFkZCByZXNlcnZhdGlvbl9vYmpl
Y3RfZmVuY2VzIGhlbHBlciIpCmRkN2E3ZDFmZjJmMSAoImRybS9pOTE1OiB1c2UgbmV3IHJlc2Vy
dmF0aW9uX29iamVjdF9mZW5jZXMgaGVscGVyIikKMGUxZDgwODNiZGRiICgiZG1hLWJ1ZjogZnVy
dGhlciByZWxheCByZXNlcnZhdGlvbl9vYmplY3RfYWRkX3NoYXJlZF9mZW5jZSIpCjVkMzQ0ZjU4
ZGE3NiAoImRtYS1idWY6IG51a2UgcmVzZXJ2YXRpb25fb2JqZWN0IHNlcSBudW1iZXIiKQoKVGhl
IHNjZW5hcmlvIHRoYXQgZGVmZWF0cyBzaW1wbHkgZ3JhYmJpbmcgYSBzZXQgb2Ygc2hhcmVkL2V4
Y2x1c2l2ZQpmZW5jZXMgYW5kIHVzaW5nIHRoZW0gYmxpc3NmdWxseSB1bmRlciBSQ1UgaXMgdGhh
dCBhbnkgb2YgdGhvc2UgZmVuY2VzCm1heSBiZSByZWFsbG9jYXRlZCBieSBhIFNMQUJfVFlQRVNB
RkVfQllfUkNVIGZlbmNlIHNsYWIgY2FjaGUuIEluIHRoaXMKc2NlbmFyaW8sIHdoaWxlIGtlZXBp
bmcgdGhlIHJjdV9yZWFkX2xvY2sgd2UgbmVlZCB0byBlc3RhYmxpc2ggdGhhdCBubwpmZW5jZSB3
YXMgY2hhbmdlZCBpbiB0aGUgZG1hX3Jlc3YgYWZ0ZXIgYSByZWFkIChvciBmdWxsKSBtZW1vcnkg
YmFycmllci4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29u
LmNvLnVrPgpDYzogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBE
YW5pZWwgVmV0dGVyIDxkYW5pZWwudmV0dGVyQGZmd2xsLmNoPgotLS0KIGRyaXZlcnMvZG1hLWJ1
Zi9kbWEtYnVmLmMgICAgICAgICAgICAgICAgICAgICB8ICAzMSArKysrLQogZHJpdmVycy9kbWEt
YnVmL2RtYS1yZXN2LmMgICAgICAgICAgICAgICAgICAgIHwgMTA5ICsrKysrKysrKysrKy0tLS0t
CiAuLi4vZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYyAgfCAgIDcgKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5LmMgICAgICB8ICAyNCArKy0t
CiBpbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmggICAgICAgICAgICAgICAgICAgICAgfCAxMTMgKysr
KysrKystLS0tLS0tLS0tCiA1IGZpbGVzIGNoYW5nZWQsIDE3NSBpbnNlcnRpb25zKCspLCAxMDkg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1idWYuYyBiL2Ry
aXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKaW5kZXggYjM0MDBkNjUyNGFiLi40MzNkOTFkNzEwZTQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKKysrIGIvZHJpdmVycy9kbWEt
YnVmL2RtYS1idWYuYwpAQCAtMTk5LDcgKzE5OSw3IEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFfYnVm
X3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKnBvbGwpCiAJc3RydWN0IGRtYV9y
ZXN2X2xpc3QgKmZvYmo7CiAJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2VfZXhjbDsKIAlfX3BvbGxf
dCBldmVudHM7Ci0JdW5zaWduZWQgc2hhcmVkX2NvdW50OworCXVuc2lnbmVkIHNoYXJlZF9jb3Vu
dCwgc2VxOwogCiAJZG1hYnVmID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwogCWlmICghZG1hYnVmIHx8
ICFkbWFidWYtPnJlc3YpCkBAIC0yMTMsOCArMjEzLDIxIEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFf
YnVmX3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKnBvbGwpCiAJaWYgKCFldmVu
dHMpCiAJCXJldHVybiAwOwogCityZXRyeToKKwlzZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZy
ZXN2LT5zZXEpOwogCXJjdV9yZWFkX2xvY2soKTsKLQlkbWFfcmVzdl9mZW5jZXMocmVzdiwgJmZl
bmNlX2V4Y2wsICZmb2JqLCAmc2hhcmVkX2NvdW50KTsKKworCWZvYmogPSByY3VfZGVyZWZlcmVu
Y2UocmVzdi0+ZmVuY2UpOworCWlmIChmb2JqKQorCQlzaGFyZWRfY291bnQgPSBmb2JqLT5zaGFy
ZWRfY291bnQ7CisJZWxzZQorCQlzaGFyZWRfY291bnQgPSAwOworCWZlbmNlX2V4Y2wgPSByY3Vf
ZGVyZWZlcmVuY2UocmVzdi0+ZmVuY2VfZXhjbCk7CisJaWYgKHJlYWRfc2VxY291bnRfcmV0cnko
JnJlc3YtPnNlcSwgc2VxKSkgeworCQlyY3VfcmVhZF91bmxvY2soKTsKKwkJZ290byByZXRyeTsK
Kwl9CisKIAlpZiAoZmVuY2VfZXhjbCAmJiAoIShldmVudHMgJiBFUE9MTE9VVCkgfHwgc2hhcmVk
X2NvdW50ID09IDApKSB7CiAJCXN0cnVjdCBkbWFfYnVmX3BvbGxfY2JfdCAqZGNiID0gJmRtYWJ1
Zi0+Y2JfZXhjbDsKIAkJX19wb2xsX3QgcGV2ZW50cyA9IEVQT0xMSU47CkBAIC0xMTQ0LDYgKzEx
NTcsNyBAQCBzdGF0aWMgaW50IGRtYV9idWZfZGVidWdfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKnMs
IHZvaWQgKnVudXNlZCkKIAlzdHJ1Y3QgZG1hX3Jlc3YgKnJvYmo7CiAJc3RydWN0IGRtYV9yZXN2
X2xpc3QgKmZvYmo7CiAJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7CisJdW5zaWduZWQgc2VxOwog
CWludCBjb3VudCA9IDAsIGF0dGFjaF9jb3VudCwgc2hhcmVkX2NvdW50LCBpOwogCXNpemVfdCBz
aXplID0gMDsKIApAQCAtMTE3NCw5ICsxMTg4LDE2IEBAIHN0YXRpYyBpbnQgZG1hX2J1Zl9kZWJ1
Z19zaG93KHN0cnVjdCBzZXFfZmlsZSAqcywgdm9pZCAqdW51c2VkKQogCQkJCWJ1Zl9vYmotPm5h
bWUgPzogIiIpOwogCiAJCXJvYmogPSBidWZfb2JqLT5yZXN2OwotCQlyY3VfcmVhZF9sb2NrKCk7
Ci0JCWRtYV9yZXN2X2ZlbmNlcyhyb2JqLCAmZmVuY2UsICZmb2JqLCAmc2hhcmVkX2NvdW50KTsK
LQkJcmN1X3JlYWRfdW5sb2NrKCk7CisJCXdoaWxlICh0cnVlKSB7CisJCQlzZXEgPSByZWFkX3Nl
cWNvdW50X2JlZ2luKCZyb2JqLT5zZXEpOworCQkJcmN1X3JlYWRfbG9jaygpOworCQkJZm9iaiA9
IHJjdV9kZXJlZmVyZW5jZShyb2JqLT5mZW5jZSk7CisJCQlzaGFyZWRfY291bnQgPSBmb2JqID8g
Zm9iai0+c2hhcmVkX2NvdW50IDogMDsKKwkJCWZlbmNlID0gcmN1X2RlcmVmZXJlbmNlKHJvYmot
PmZlbmNlX2V4Y2wpOworCQkJaWYgKCFyZWFkX3NlcWNvdW50X3JldHJ5KCZyb2JqLT5zZXEsIHNl
cSkpCisJCQkJYnJlYWs7CisJCQlyY3VfcmVhZF91bmxvY2soKTsKKwkJfQogCiAJCWlmIChmZW5j
ZSkKIAkJCXNlcV9wcmludGYocywgIlx0RXhjbHVzaXZlIGZlbmNlOiAlcyAlcyAlc3NpZ25hbGxl
ZFxuIiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtcmVzdi5jIGIvZHJpdmVycy9k
bWEtYnVmL2RtYS1yZXN2LmMKaW5kZXggZjUxNDI2ODNjODUxLi40MmE4ZjNmMTE2ODEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtcmVzdi5jCisrKyBiL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtcmVzdi5jCkBAIC00OSw2ICs0OSwxMiBAQAogREVGSU5FX1dEX0NMQVNTKHJlc2VydmF0aW9u
X3d3X2NsYXNzKTsKIEVYUE9SVF9TWU1CT0wocmVzZXJ2YXRpb25fd3dfY2xhc3MpOwogCitzdHJ1
Y3QgbG9ja19jbGFzc19rZXkgcmVzZXJ2YXRpb25fc2VxY291bnRfY2xhc3M7CitFWFBPUlRfU1lN
Qk9MKHJlc2VydmF0aW9uX3NlcWNvdW50X2NsYXNzKTsKKworY29uc3QgY2hhciByZXNlcnZhdGlv
bl9zZXFjb3VudF9zdHJpbmdbXSA9ICJyZXNlcnZhdGlvbl9zZXFjb3VudCI7CitFWFBPUlRfU1lN
Qk9MKHJlc2VydmF0aW9uX3NlcWNvdW50X3N0cmluZyk7CisKIC8qKgogICogZG1hX3Jlc3ZfbGlz
dF9hbGxvYyAtIGFsbG9jYXRlIGZlbmNlIGxpc3QKICAqIEBzaGFyZWRfbWF4OiBudW1iZXIgb2Yg
ZmVuY2VzIHdlIG5lZWQgc3BhY2UgZm9yCkBAIC05Niw2ICsxMDIsOSBAQCBzdGF0aWMgdm9pZCBk
bWFfcmVzdl9saXN0X2ZyZWUoc3RydWN0IGRtYV9yZXN2X2xpc3QgKmxpc3QpCiB2b2lkIGRtYV9y
ZXN2X2luaXQoc3RydWN0IGRtYV9yZXN2ICpvYmopCiB7CiAJd3dfbXV0ZXhfaW5pdCgmb2JqLT5s
b2NrLCAmcmVzZXJ2YXRpb25fd3dfY2xhc3MpOworCisJX19zZXFjb3VudF9pbml0KCZvYmotPnNl
cSwgcmVzZXJ2YXRpb25fc2VxY291bnRfc3RyaW5nLAorCQkJJnJlc2VydmF0aW9uX3NlcWNvdW50
X2NsYXNzKTsKIAlSQ1VfSU5JVF9QT0lOVEVSKG9iai0+ZmVuY2UsIE5VTEwpOwogCVJDVV9JTklU
X1BPSU5URVIob2JqLT5mZW5jZV9leGNsLCBOVUxMKTsKIH0KQEAgLTIyNSw2ICsyMzQsOSBAQCB2
b2lkIGRtYV9yZXN2X2FkZF9zaGFyZWRfZmVuY2Uoc3RydWN0IGRtYV9yZXN2ICpvYmosIHN0cnVj
dCBkbWFfZmVuY2UgKmZlbmNlKQogCWZvYmogPSBkbWFfcmVzdl9nZXRfbGlzdChvYmopOwogCWNv
dW50ID0gZm9iai0+c2hhcmVkX2NvdW50OwogCisJcHJlZW1wdF9kaXNhYmxlKCk7CisJd3JpdGVf
c2VxY291bnRfYmVnaW4oJm9iai0+c2VxKTsKKwogCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgKytp
KSB7CiAKIAkJb2xkID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChmb2JqLT5zaGFyZWRbaV0s
CkBAIC0yNDIsNiArMjU0LDkgQEAgdm9pZCBkbWFfcmVzdl9hZGRfc2hhcmVkX2ZlbmNlKHN0cnVj
dCBkbWFfcmVzdiAqb2JqLCBzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAlSQ1VfSU5JVF9QT0lO
VEVSKGZvYmotPnNoYXJlZFtpXSwgZmVuY2UpOwogCS8qIHBvaW50ZXIgdXBkYXRlIG11c3QgYmUg
dmlzaWJsZSBiZWZvcmUgd2UgZXh0ZW5kIHRoZSBzaGFyZWRfY291bnQgKi8KIAlzbXBfc3RvcmVf
bWIoZm9iai0+c2hhcmVkX2NvdW50LCBjb3VudCk7CisKKwl3cml0ZV9zZXFjb3VudF9lbmQoJm9i
ai0+c2VxKTsKKwlwcmVlbXB0X2VuYWJsZSgpOwogCWRtYV9mZW5jZV9wdXQob2xkKTsKIH0KIEVY
UE9SVF9TWU1CT0woZG1hX3Jlc3ZfYWRkX3NoYXJlZF9mZW5jZSk7CkBAIC0yNjksMTAgKzI4NCwx
MiBAQCB2b2lkIGRtYV9yZXN2X2FkZF9leGNsX2ZlbmNlKHN0cnVjdCBkbWFfcmVzdiAqb2JqLCBz
dHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAkJZG1hX2ZlbmNlX2dldChmZW5jZSk7CiAKIAlwcmVl
bXB0X2Rpc2FibGUoKTsKLQlyY3VfYXNzaWduX3BvaW50ZXIob2JqLT5mZW5jZV9leGNsLCBmZW5j
ZSk7Ci0JLyogcG9pbnRlciB1cGRhdGUgbXVzdCBiZSB2aXNpYmxlIGJlZm9yZSB3ZSBtb2RpZnkg
dGhlIHNoYXJlZF9jb3VudCAqLworCXdyaXRlX3NlcWNvdW50X2JlZ2luKCZvYmotPnNlcSk7CisJ
Lyogd3JpdGVfc2VxY291bnRfYmVnaW4gcHJvdmlkZXMgdGhlIG5lY2Vzc2FyeSBtZW1vcnkgYmFy
cmllciAqLworCVJDVV9JTklUX1BPSU5URVIob2JqLT5mZW5jZV9leGNsLCBmZW5jZSk7CiAJaWYg
KG9sZCkKLQkJc21wX3N0b3JlX21iKG9sZC0+c2hhcmVkX2NvdW50LCAwKTsKKwkJb2xkLT5zaGFy
ZWRfY291bnQgPSAwOworCXdyaXRlX3NlcWNvdW50X2VuZCgmb2JqLT5zZXEpOwogCXByZWVtcHRf
ZW5hYmxlKCk7CiAKIAkvKiBpbnBsYWNlIHVwZGF0ZSwgbm8gc2hhcmVkIGZlbmNlcyAqLwpAQCAt
Mjk1LDE1ICszMTIsMTcgQEAgaW50IGRtYV9yZXN2X2NvcHlfZmVuY2VzKHN0cnVjdCBkbWFfcmVz
diAqZHN0LCBzdHJ1Y3QgZG1hX3Jlc3YgKnNyYykKIHsKIAlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAq
c3JjX2xpc3QsICpkc3RfbGlzdDsKIAlzdHJ1Y3QgZG1hX2ZlbmNlICpvbGQsICpuZXc7Ci0JdW5z
aWduZWQgaW50IGksIHNoYXJlZF9jb3VudDsKKwl1bnNpZ25lZCBpOwogCiAJZG1hX3Jlc3ZfYXNz
ZXJ0X2hlbGQoZHN0KTsKIAogCXJjdV9yZWFkX2xvY2soKTsKKwlzcmNfbGlzdCA9IHJjdV9kZXJl
ZmVyZW5jZShzcmMtPmZlbmNlKTsKIAogcmV0cnk6Ci0JZG1hX3Jlc3ZfZmVuY2VzKHNyYywgJm5l
dywgJnNyY19saXN0LCAmc2hhcmVkX2NvdW50KTsKLQlpZiAoc2hhcmVkX2NvdW50KSB7CisJaWYg
KHNyY19saXN0KSB7CisJCXVuc2lnbmVkIHNoYXJlZF9jb3VudCA9IHNyY19saXN0LT5zaGFyZWRf
Y291bnQ7CisKIAkJcmN1X3JlYWRfdW5sb2NrKCk7CiAKIAkJZHN0X2xpc3QgPSBkbWFfcmVzdl9s
aXN0X2FsbG9jKHNoYXJlZF9jb3VudCk7CkBAIC0zMTEsMTQgKzMzMCwxNCBAQCBpbnQgZG1hX3Jl
c3ZfY29weV9mZW5jZXMoc3RydWN0IGRtYV9yZXN2ICpkc3QsIHN0cnVjdCBkbWFfcmVzdiAqc3Jj
KQogCQkJcmV0dXJuIC1FTk9NRU07CiAKIAkJcmN1X3JlYWRfbG9jaygpOwotCQlkbWFfcmVzdl9m
ZW5jZXMoc3JjLCAmbmV3LCAmc3JjX2xpc3QsICZzaGFyZWRfY291bnQpOwotCQlpZiAoIXNyY19s
aXN0IHx8IHNoYXJlZF9jb3VudCA+IGRzdF9saXN0LT5zaGFyZWRfbWF4KSB7CisJCXNyY19saXN0
ID0gcmN1X2RlcmVmZXJlbmNlKHNyYy0+ZmVuY2UpOworCQlpZiAoIXNyY19saXN0IHx8IHNyY19s
aXN0LT5zaGFyZWRfY291bnQgPiBzaGFyZWRfY291bnQpIHsKIAkJCWtmcmVlKGRzdF9saXN0KTsK
IAkJCWdvdG8gcmV0cnk7CiAJCX0KIAogCQlkc3RfbGlzdC0+c2hhcmVkX2NvdW50ID0gMDsKLQkJ
Zm9yIChpID0gMDsgaSA8IHNoYXJlZF9jb3VudDsgKytpKSB7CisJCWZvciAoaSA9IDA7IGkgPCBz
cmNfbGlzdC0+c2hhcmVkX2NvdW50OyArK2kpIHsKIAkJCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNl
OwogCiAJCQlmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZShzcmNfbGlzdC0+c2hhcmVkW2ldKTsKQEAg
LTMyOCw2ICszNDcsNyBAQCBpbnQgZG1hX3Jlc3ZfY29weV9mZW5jZXMoc3RydWN0IGRtYV9yZXN2
ICpkc3QsIHN0cnVjdCBkbWFfcmVzdiAqc3JjKQogCiAJCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1
KGZlbmNlKSkgewogCQkJCWRtYV9yZXN2X2xpc3RfZnJlZShkc3RfbGlzdCk7CisJCQkJc3JjX2xp
c3QgPSByY3VfZGVyZWZlcmVuY2Uoc3JjLT5mZW5jZSk7CiAJCQkJZ290byByZXRyeTsKIAkJCX0K
IApAQCAtMzQyLDE4ICszNjIsMTggQEAgaW50IGRtYV9yZXN2X2NvcHlfZmVuY2VzKHN0cnVjdCBk
bWFfcmVzdiAqZHN0LCBzdHJ1Y3QgZG1hX3Jlc3YgKnNyYykKIAkJZHN0X2xpc3QgPSBOVUxMOwog
CX0KIAotCWlmIChuZXcgJiYgIWRtYV9mZW5jZV9nZXRfcmN1KG5ldykpIHsKLQkJZG1hX3Jlc3Zf
bGlzdF9mcmVlKGRzdF9saXN0KTsKLQkJZ290byByZXRyeTsKLQl9CisJbmV3ID0gZG1hX2ZlbmNl
X2dldF9yY3Vfc2FmZSgmc3JjLT5mZW5jZV9leGNsKTsKIAlyY3VfcmVhZF91bmxvY2soKTsKIAog
CXNyY19saXN0ID0gZG1hX3Jlc3ZfZ2V0X2xpc3QoZHN0KTsKIAlvbGQgPSBkbWFfcmVzdl9nZXRf
ZXhjbChkc3QpOwogCiAJcHJlZW1wdF9kaXNhYmxlKCk7Ci0JcmN1X2Fzc2lnbl9wb2ludGVyKGRz
dC0+ZmVuY2VfZXhjbCwgbmV3KTsKLQlyY3VfYXNzaWduX3BvaW50ZXIoZHN0LT5mZW5jZSwgZHN0
X2xpc3QpOworCXdyaXRlX3NlcWNvdW50X2JlZ2luKCZkc3QtPnNlcSk7CisJLyogd3JpdGVfc2Vx
Y291bnRfYmVnaW4gcHJvdmlkZXMgdGhlIG5lY2Vzc2FyeSBtZW1vcnkgYmFycmllciAqLworCVJD
VV9JTklUX1BPSU5URVIoZHN0LT5mZW5jZV9leGNsLCBuZXcpOworCVJDVV9JTklUX1BPSU5URVIo
ZHN0LT5mZW5jZSwgZHN0X2xpc3QpOworCXdyaXRlX3NlcWNvdW50X2VuZCgmZHN0LT5zZXEpOwog
CXByZWVtcHRfZW5hYmxlKCk7CiAKIAlkbWFfcmVzdl9saXN0X2ZyZWUoc3JjX2xpc3QpOwpAQCAt
Mzg4LDE4ICs0MDgsMTkgQEAgaW50IGRtYV9yZXN2X2dldF9mZW5jZXNfcmN1KHN0cnVjdCBkbWFf
cmVzdiAqb2JqLAogCiAJZG8gewogCQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKLQkJdW5z
aWduZWQgaW50IGk7CisJCXVuc2lnbmVkIGludCBpLCBzZXE7CiAJCXNpemVfdCBzeiA9IDA7CiAK
LQkJaSA9IDA7CisJCXNoYXJlZF9jb3VudCA9IGkgPSAwOwogCiAJCXJjdV9yZWFkX2xvY2soKTsK
LQkJZG1hX3Jlc3ZfZmVuY2VzKG9iaiwgJmZlbmNlX2V4Y2wsICZmb2JqLAotCQkJCQkgICZzaGFy
ZWRfY291bnQpOworCQlzZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZvYmotPnNlcSk7CiAKKwkJ
ZmVuY2VfZXhjbCA9IHJjdV9kZXJlZmVyZW5jZShvYmotPmZlbmNlX2V4Y2wpOwogCQlpZiAoZmVu
Y2VfZXhjbCAmJiAhZG1hX2ZlbmNlX2dldF9yY3UoZmVuY2VfZXhjbCkpCiAJCQlnb3RvIHVubG9j
azsKIAorCQlmb2JqID0gcmN1X2RlcmVmZXJlbmNlKG9iai0+ZmVuY2UpOwogCQlpZiAoZm9iaikK
IAkJCXN6ICs9IHNpemVvZigqc2hhcmVkKSAqIGZvYmotPnNoYXJlZF9tYXg7CiAKQEAgLTQyNyw2
ICs0NDgsNyBAQCBpbnQgZG1hX3Jlc3ZfZ2V0X2ZlbmNlc19yY3Uoc3RydWN0IGRtYV9yZXN2ICpv
YmosCiAJCQkJYnJlYWs7CiAJCQl9CiAJCQlzaGFyZWQgPSBuc2hhcmVkOworCQkJc2hhcmVkX2Nv
dW50ID0gZm9iaiA/IGZvYmotPnNoYXJlZF9jb3VudCA6IDA7CiAJCQlmb3IgKGkgPSAwOyBpIDwg
c2hhcmVkX2NvdW50OyArK2kpIHsKIAkJCQlzaGFyZWRbaV0gPSByY3VfZGVyZWZlcmVuY2UoZm9i
ai0+c2hhcmVkW2ldKTsKIAkJCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1KHNoYXJlZFtpXSkpCkBA
IC00MzQsNyArNDU2LDcgQEAgaW50IGRtYV9yZXN2X2dldF9mZW5jZXNfcmN1KHN0cnVjdCBkbWFf
cmVzdiAqb2JqLAogCQkJfQogCQl9CiAKLQkJaWYgKGkgIT0gc2hhcmVkX2NvdW50KSB7CisJCWlm
IChpICE9IHNoYXJlZF9jb3VudCB8fCByZWFkX3NlcWNvdW50X3JldHJ5KCZvYmotPnNlcSwgc2Vx
KSkgewogCQkJd2hpbGUgKGktLSkKIAkJCQlkbWFfZmVuY2VfcHV0KHNoYXJlZFtpXSk7CiAJCQlk
bWFfZmVuY2VfcHV0KGZlbmNlX2V4Y2wpOwpAQCAtNDc4LDE3ICs1MDAsMTggQEAgbG9uZyBkbWFf
cmVzdl93YWl0X3RpbWVvdXRfcmN1KHN0cnVjdCBkbWFfcmVzdiAqb2JqLAogCQkJICAgICAgIGJv
b2wgd2FpdF9hbGwsIGJvb2wgaW50ciwKIAkJCSAgICAgICB1bnNpZ25lZCBsb25nIHRpbWVvdXQp
CiB7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKmZvYmo7CiAJc3RydWN0IGRtYV9mZW5jZSAqZmVu
Y2U7Ci0JdW5zaWduZWQgc2hhcmVkX2NvdW50OworCXVuc2lnbmVkIHNlcSwgc2hhcmVkX2NvdW50
OwogCWxvbmcgcmV0ID0gdGltZW91dCA/IHRpbWVvdXQgOiAxOwogCWludCBpOwogCiByZXRyeToK
KwlzaGFyZWRfY291bnQgPSAwOworCXNlcSA9IHJlYWRfc2VxY291bnRfYmVnaW4oJm9iai0+c2Vx
KTsKIAlyY3VfcmVhZF9sb2NrKCk7CiAJaSA9IC0xOwogCi0JZG1hX3Jlc3ZfZmVuY2VzKG9iaiwg
JmZlbmNlLCAmZm9iaiwgJnNoYXJlZF9jb3VudCk7CisJZmVuY2UgPSByY3VfZGVyZWZlcmVuY2Uo
b2JqLT5mZW5jZV9leGNsKTsKIAlpZiAoZmVuY2UgJiYgIXRlc3RfYml0KERNQV9GRU5DRV9GTEFH
X1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFncykpIHsKIAkJaWYgKCFkbWFfZmVuY2VfZ2V0X3Jj
dShmZW5jZSkpCiAJCQlnb3RvIHVubG9ja19yZXRyeTsKQEAgLTUwMyw2ICs1MjYsMTEgQEAgbG9u
ZyBkbWFfcmVzdl93YWl0X3RpbWVvdXRfcmN1KHN0cnVjdCBkbWFfcmVzdiAqb2JqLAogCX0KIAog
CWlmICh3YWl0X2FsbCkgeworCQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iaiA9IHJjdV9kZXJl
ZmVyZW5jZShvYmotPmZlbmNlKTsKKworCQlpZiAoZm9iaikKKwkJCXNoYXJlZF9jb3VudCA9IGZv
YmotPnNoYXJlZF9jb3VudDsKKwogCQlmb3IgKGkgPSAwOyAhZmVuY2UgJiYgaSA8IHNoYXJlZF9j
b3VudDsgKytpKSB7CiAJCQlzdHJ1Y3QgZG1hX2ZlbmNlICpsZmVuY2UgPSByY3VfZGVyZWZlcmVu
Y2UoZm9iai0+c2hhcmVkW2ldKTsKIApAQCAtNTI1LDYgKzU1MywxMSBAQCBsb25nIGRtYV9yZXN2
X3dhaXRfdGltZW91dF9yY3Uoc3RydWN0IGRtYV9yZXN2ICpvYmosCiAKIAlyY3VfcmVhZF91bmxv
Y2soKTsKIAlpZiAoZmVuY2UpIHsKKwkJaWYgKHJlYWRfc2VxY291bnRfcmV0cnkoJm9iai0+c2Vx
LCBzZXEpKSB7CisJCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKKwkJCWdvdG8gcmV0cnk7CisJCX0K
KwogCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdF90aW1lb3V0KGZlbmNlLCBpbnRyLCByZXQpOwogCQlk
bWFfZmVuY2VfcHV0KGZlbmNlKTsKIAkJaWYgKHJldCA+IDAgJiYgd2FpdF9hbGwgJiYgKGkgKyAx
IDwgc2hhcmVkX2NvdW50KSkKQEAgLTU2NywxOSArNjAwLDIzIEBAIHN0YXRpYyBpbmxpbmUgaW50
IGRtYV9yZXN2X3Rlc3Rfc2lnbmFsZWRfc2luZ2xlKHN0cnVjdCBkbWFfZmVuY2UgKnBhc3NlZF9m
ZW5jZSkKICAqLwogYm9vbCBkbWFfcmVzdl90ZXN0X3NpZ25hbGVkX3JjdShzdHJ1Y3QgZG1hX3Jl
c3YgKm9iaiwgYm9vbCB0ZXN0X2FsbCkKIHsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsK
LQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZV9leGNsOwotCXVuc2lnbmVkIHNoYXJlZF9jb3VudDsK
Kwl1bnNpZ25lZCBzZXEsIHNoYXJlZF9jb3VudDsKIAlpbnQgcmV0OwogCiAJcmN1X3JlYWRfbG9j
aygpOwogcmV0cnk6CiAJcmV0ID0gdHJ1ZTsKKwlzaGFyZWRfY291bnQgPSAwOworCXNlcSA9IHJl
YWRfc2VxY291bnRfYmVnaW4oJm9iai0+c2VxKTsKIAotCWRtYV9yZXN2X2ZlbmNlcyhvYmosICZm
ZW5jZV9leGNsLCAmZm9iaiwgJnNoYXJlZF9jb3VudCk7CiAJaWYgKHRlc3RfYWxsKSB7CiAJCXVu
c2lnbmVkIGk7CiAKKwkJc3RydWN0IGRtYV9yZXN2X2xpc3QgKmZvYmogPSByY3VfZGVyZWZlcmVu
Y2Uob2JqLT5mZW5jZSk7CisKKwkJaWYgKGZvYmopCisJCQlzaGFyZWRfY291bnQgPSBmb2JqLT5z
aGFyZWRfY291bnQ7CisKIAkJZm9yIChpID0gMDsgaSA8IHNoYXJlZF9jb3VudDsgKytpKSB7CiAJ
CQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZShmb2JqLT5zaGFyZWRb
aV0pOwogCkBAIC01ODksMTQgKzYyNiwyNCBAQCBib29sIGRtYV9yZXN2X3Rlc3Rfc2lnbmFsZWRf
cmN1KHN0cnVjdCBkbWFfcmVzdiAqb2JqLCBib29sIHRlc3RfYWxsKQogCQkJZWxzZSBpZiAoIXJl
dCkKIAkJCQlicmVhazsKIAkJfQotCX0KIAotCWlmICghc2hhcmVkX2NvdW50ICYmIGZlbmNlX2V4
Y2wpIHsKLQkJcmV0ID0gZG1hX3Jlc3ZfdGVzdF9zaWduYWxlZF9zaW5nbGUoZmVuY2VfZXhjbCk7
Ci0JCWlmIChyZXQgPCAwKQorCQlpZiAocmVhZF9zZXFjb3VudF9yZXRyeSgmb2JqLT5zZXEsIHNl
cSkpCiAJCQlnb3RvIHJldHJ5OwogCX0KIAorCWlmICghc2hhcmVkX2NvdW50KSB7CisJCXN0cnVj
dCBkbWFfZmVuY2UgKmZlbmNlX2V4Y2wgPSByY3VfZGVyZWZlcmVuY2Uob2JqLT5mZW5jZV9leGNs
KTsKKworCQlpZiAoZmVuY2VfZXhjbCkgeworCQkJcmV0ID0gZG1hX3Jlc3ZfdGVzdF9zaWduYWxl
ZF9zaW5nbGUoZmVuY2VfZXhjbCk7CisJCQlpZiAocmV0IDwgMCkKKwkJCQlnb3RvIHJldHJ5Owor
CisJCQlpZiAocmVhZF9zZXFjb3VudF9yZXRyeSgmb2JqLT5zZXEsIHNlcSkpCisJCQkJZ290byBy
ZXRyeTsKKwkJfQorCX0KKwogCXJjdV9yZWFkX3VubG9jaygpOwogCXJldHVybiByZXQ7CiB9CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMKaW5k
ZXggYmM0ZWM2YjIwYTg3Li43NmUzNTE2NDg0ZTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMKQEAgLTI1MSw3ICsyNTEsMTIgQEAgc3Rh
dGljIGludCBhbWRncHVfYW1ka2ZkX3JlbW92ZV9ldmljdGlvbl9mZW5jZShzdHJ1Y3QgYW1kZ3B1
X2JvICpibywKIAluZXctPnNoYXJlZF9tYXggPSBvbGQtPnNoYXJlZF9tYXg7CiAJbmV3LT5zaGFy
ZWRfY291bnQgPSBrOwogCi0JcmN1X2Fzc2lnbl9wb2ludGVyKHJlc3YtPmZlbmNlLCBuZXcpOwor
CS8qIEluc3RhbGwgdGhlIG5ldyBmZW5jZSBsaXN0LCBzZXFjb3VudCBwcm92aWRlcyB0aGUgYmFy
cmllcnMgKi8KKwlwcmVlbXB0X2Rpc2FibGUoKTsKKwl3cml0ZV9zZXFjb3VudF9iZWdpbigmcmVz
di0+c2VxKTsKKwlSQ1VfSU5JVF9QT0lOVEVSKHJlc3YtPmZlbmNlLCBuZXcpOworCXdyaXRlX3Nl
cWNvdW50X2VuZCgmcmVzdi0+c2VxKTsKKwlwcmVlbXB0X2VuYWJsZSgpOwogCiAJLyogRHJvcCB0
aGUgcmVmZXJlbmNlcyB0byB0aGUgcmVtb3ZlZCBmZW5jZXMgb3IgbW92ZSB0aGVtIHRvIGVmX2xp
c3QgKi8KIAlmb3IgKGkgPSBqLCBrID0gMDsgaSA8IG9sZC0+c2hhcmVkX2NvdW50OyArK2kpIHsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fYnVzeS5jCmluZGV4IGEyYWZmMWQ4Mjkw
ZS4uM2Q0ZjU3NzVhNGJhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fYnVzeS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5
LmMKQEAgLTgzLDggKzgzLDcgQEAgaTkxNV9nZW1fYnVzeV9pb2N0bChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB2b2lkICpkYXRhLAogCXN0cnVjdCBkcm1faTkxNV9nZW1fYnVzeSAqYXJncyA9IGRh
dGE7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKIAlzdHJ1Y3QgZG1hX3Jlc3Zf
bGlzdCAqbGlzdDsKLQl1bnNpZ25lZCBpbnQgaSwgc2hhcmVkX2NvdW50OwotCXN0cnVjdCBkbWFf
ZmVuY2UgKmV4Y2w7CisJdW5zaWduZWQgaW50IHNlcTsKIAlpbnQgZXJyOwogCiAJZXJyID0gLUVO
T0VOVDsKQEAgLTExMCwxOCArMTA5LDI5IEBAIGk5MTVfZ2VtX2J1c3lfaW9jdGwoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkgKiB0byByZXBvcnQgdGhlIG92ZXJhbGwgYnVz
eW5lc3MuIFRoaXMgaXMgd2hhdCB0aGUgd2FpdC1pb2N0bCBkb2VzLgogCSAqCiAJICovCi0JZG1h
X3Jlc3ZfZmVuY2VzKG9iai0+YmFzZS5yZXN2LCAmZXhjbCwgJmxpc3QsICZzaGFyZWRfY291bnQp
OworcmV0cnk6CisJc2VxID0gcmF3X3JlYWRfc2VxY291bnQoJm9iai0+YmFzZS5yZXN2LT5zZXEp
OwogCiAJLyogVHJhbnNsYXRlIHRoZSBleGNsdXNpdmUgZmVuY2UgdG8gdGhlIFJFQUQgKmFuZCog
V1JJVEUgZW5naW5lICovCi0JYXJncy0+YnVzeSA9IGJ1c3lfY2hlY2tfd3JpdGVyKGV4Y2wpOwor
CWFyZ3MtPmJ1c3kgPQorCQlidXN5X2NoZWNrX3dyaXRlcihyY3VfZGVyZWZlcmVuY2Uob2JqLT5i
YXNlLnJlc3YtPmZlbmNlX2V4Y2wpKTsKIAogCS8qIFRyYW5zbGF0ZSBzaGFyZWQgZmVuY2VzIHRv
IFJFQUQgc2V0IG9mIGVuZ2luZXMgKi8KLQlmb3IgKGkgPSAwOyBpIDwgc2hhcmVkX2NvdW50OyAr
K2kpIHsKLQkJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UgPSByY3VfZGVyZWZlcmVuY2UobGlzdC0+
c2hhcmVkW2ldKTsKKwlsaXN0ID0gcmN1X2RlcmVmZXJlbmNlKG9iai0+YmFzZS5yZXN2LT5mZW5j
ZSk7CisJaWYgKGxpc3QpIHsKKwkJdW5zaWduZWQgaW50IHNoYXJlZF9jb3VudCA9IGxpc3QtPnNo
YXJlZF9jb3VudCwgaTsKIAotCQlhcmdzLT5idXN5IHw9IGJ1c3lfY2hlY2tfcmVhZGVyKGZlbmNl
KTsKKwkJZm9yIChpID0gMDsgaSA8IHNoYXJlZF9jb3VudDsgKytpKSB7CisJCQlzdHJ1Y3QgZG1h
X2ZlbmNlICpmZW5jZSA9CisJCQkJcmN1X2RlcmVmZXJlbmNlKGxpc3QtPnNoYXJlZFtpXSk7CisK
KwkJCWFyZ3MtPmJ1c3kgfD0gYnVzeV9jaGVja19yZWFkZXIoZmVuY2UpOworCQl9CiAJfQogCisJ
aWYgKGFyZ3MtPmJ1c3kgJiYgcmVhZF9zZXFjb3VudF9yZXRyeSgmb2JqLT5iYXNlLnJlc3YtPnNl
cSwgc2VxKSkKKwkJZ290byByZXRyeTsKKwogCWVyciA9IDA7CiBvdXQ6CiAJcmN1X3JlYWRfdW5s
b2NrKCk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmggYi9pbmNsdWRlL2xp
bnV4L2RtYS1yZXN2LmgKaW5kZXggMzhmMjgwMmFmYWJiLi5lZTUwZDEwZjA1MmIgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvbGludXgvZG1hLXJlc3YuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1yZXN2
LmgKQEAgLTQ2LDYgKzQ2LDggQEAKICNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPgogCiBleHRl
cm4gc3RydWN0IHd3X2NsYXNzIHJlc2VydmF0aW9uX3d3X2NsYXNzOworZXh0ZXJuIHN0cnVjdCBs
b2NrX2NsYXNzX2tleSByZXNlcnZhdGlvbl9zZXFjb3VudF9jbGFzczsKK2V4dGVybiBjb25zdCBj
aGFyIHJlc2VydmF0aW9uX3NlcWNvdW50X3N0cmluZ1tdOwogCiAvKioKICAqIHN0cnVjdCBkbWFf
cmVzdl9saXN0IC0gYSBsaXN0IG9mIHNoYXJlZCBmZW5jZXMKQEAgLTY5LDYgKzcxLDcgQEAgc3Ry
dWN0IGRtYV9yZXN2X2xpc3QgewogICovCiBzdHJ1Y3QgZG1hX3Jlc3YgewogCXN0cnVjdCB3d19t
dXRleCBsb2NrOworCXNlcWNvdW50X3Qgc2VxOwogCiAJc3RydWN0IGRtYV9mZW5jZSBfX3JjdSAq
ZmVuY2VfZXhjbDsKIAlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCBfX3JjdSAqZmVuY2U7CkBAIC03Nywy
NCArODAsNiBAQCBzdHJ1Y3QgZG1hX3Jlc3YgewogI2RlZmluZSBkbWFfcmVzdl9oZWxkKG9iaikg
bG9ja2RlcF9pc19oZWxkKCYob2JqKS0+bG9jay5iYXNlKQogI2RlZmluZSBkbWFfcmVzdl9hc3Nl
cnRfaGVsZChvYmopIGxvY2tkZXBfYXNzZXJ0X2hlbGQoJihvYmopLT5sb2NrLmJhc2UpCiAKLS8q
KgotICogZG1hX3Jlc3ZfZ2V0X2V4Y2wgLSBnZXQgdGhlIHJlc2VydmF0aW9uIG9iamVjdCdzCi0g
KiBleGNsdXNpdmUgZmVuY2UsIHdpdGggdXBkYXRlLXNpZGUgbG9jayBoZWxkCi0gKiBAb2JqOiB0
aGUgcmVzZXJ2YXRpb24gb2JqZWN0Ci0gKgotICogUmV0dXJucyB0aGUgZXhjbHVzaXZlIGZlbmNl
IChpZiBhbnkpLiAgRG9lcyBOT1QgdGFrZSBhCi0gKiByZWZlcmVuY2UuIFdyaXRlcnMgbXVzdCBo
b2xkIG9iai0+bG9jaywgcmVhZGVycyBtYXkgb25seQotICogaG9sZCBhIFJDVSByZWFkIHNpZGUg
bG9jay4KLSAqCi0gKiBSRVRVUk5TCi0gKiBUaGUgZXhjbHVzaXZlIGZlbmNlIG9yIE5VTEwKLSAq
Lwotc3RhdGljIGlubGluZSBzdHJ1Y3QgZG1hX2ZlbmNlICpkbWFfcmVzdl9nZXRfZXhjbChzdHJ1
Y3QgZG1hX3Jlc3YgKm9iaikKLXsKLQlyZXR1cm4gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChv
YmotPmZlbmNlX2V4Y2wsCi0JCQkJCSBkbWFfcmVzdl9oZWxkKG9iaikpOwotfQotCiAvKioKICAq
IGRtYV9yZXN2X2dldF9saXN0IC0gZ2V0IHRoZSByZXNlcnZhdGlvbiBvYmplY3QncwogICogc2hh
cmVkIGZlbmNlIGxpc3QsIHdpdGggdXBkYXRlLXNpZGUgbG9jayBoZWxkCkBAIC0xMDksNTMgKzk0
LDYgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZG1hX3Jlc3ZfZ2V0X2xp
c3Qoc3RydWN0IGRtYV9yZXN2ICpvYmopCiAJCQkJCSBkbWFfcmVzdl9oZWxkKG9iaikpOwogfQog
Ci0vKioKLSAqIGRtYV9yZXN2X2ZlbmNlcyAtIHJlYWQgY29uc2lzdGVudCBmZW5jZSBwb2ludGVy
cwotICogQG9iajogcmVzZXJ2YXRpb24gb2JqZWN0IHdoZXJlIHdlIGdldCB0aGUgZmVuY2VzIGZy
b20KLSAqIEBleGNsOiBwb2ludGVyIGZvciB0aGUgZXhjbHVzaXZlIGZlbmNlCi0gKiBAbGlzdDog
cG9pbnRlciBmb3IgdGhlIHNoYXJlZCBmZW5jZSBsaXN0Ci0gKgotICogTWFrZSBzdXJlIHdlIGhh
dmUgYSBjb25zaXN0ZW4gZXhjbHVzaXZlIGZlbmNlIGFuZCBzaGFyZWQgZmVuY2UgbGlzdC4KLSAq
IE11c3QgYmUgY2FsbGVkIHdpdGggcmN1IHJlYWQgc2lkZSBsb2NrIGhlbGQuCi0gKi8KLXN0YXRp
YyBpbmxpbmUgdm9pZCBkbWFfcmVzdl9mZW5jZXMoc3RydWN0IGRtYV9yZXN2ICpvYmosCi0JCQkJ
ICAgc3RydWN0IGRtYV9mZW5jZSAqKmV4Y2wsCi0JCQkJICAgc3RydWN0IGRtYV9yZXN2X2xpc3Qg
KipsaXN0LAotCQkJCSAgIHUzMiAqc2hhcmVkX2NvdW50KQotewotCWRvIHsKLQkJKmV4Y2wgPSBy
Y3VfZGVyZWZlcmVuY2Uob2JqLT5mZW5jZV9leGNsKTsKLQkJKmxpc3QgPSByY3VfZGVyZWZlcmVu
Y2Uob2JqLT5mZW5jZSk7Ci0JCSpzaGFyZWRfY291bnQgPSAqbGlzdCA/ICgqbGlzdCktPnNoYXJl
ZF9jb3VudCA6IDA7Ci0JCXNtcF9ybWIoKTsgLyogU2VlIGRtYV9yZXN2X2FkZF9leGNsX2ZlbmNl
ICovCi0JfSB3aGlsZSAocmN1X2FjY2Vzc19wb2ludGVyKG9iai0+ZmVuY2VfZXhjbCkgIT0gKmV4
Y2wpOwotfQotCi0vKioKLSAqIGRtYV9yZXN2X2dldF9leGNsX3JjdSAtIGdldCB0aGUgcmVzZXJ2
YXRpb24gb2JqZWN0J3MKLSAqIGV4Y2x1c2l2ZSBmZW5jZSwgd2l0aG91dCBsb2NrIGhlbGQuCi0g
KiBAb2JqOiB0aGUgcmVzZXJ2YXRpb24gb2JqZWN0Ci0gKgotICogSWYgdGhlcmUgaXMgYW4gZXhj
bHVzaXZlIGZlbmNlLCB0aGlzIGF0b21pY2FsbHkgaW5jcmVtZW50cyBpdCdzCi0gKiByZWZlcmVu
Y2UgY291bnQgYW5kIHJldHVybnMgaXQuCi0gKgotICogUkVUVVJOUwotICogVGhlIGV4Y2x1c2l2
ZSBmZW5jZSBvciBOVUxMIGlmIG5vbmUKLSAqLwotc3RhdGljIGlubGluZSBzdHJ1Y3QgZG1hX2Zl
bmNlICpkbWFfcmVzdl9nZXRfZXhjbF9yY3Uoc3RydWN0IGRtYV9yZXN2ICpvYmopCi17Ci0Jc3Ry
dWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0KLQlpZiAoIXJjdV9hY2Nlc3NfcG9pbnRlcihvYmotPmZl
bmNlX2V4Y2wpKQotCQlyZXR1cm4gTlVMTDsKLQotCXJjdV9yZWFkX2xvY2soKTsKLQlmZW5jZSA9
IGRtYV9mZW5jZV9nZXRfcmN1X3NhZmUoJm9iai0+ZmVuY2VfZXhjbCk7Ci0JcmN1X3JlYWRfdW5s
b2NrKCk7Ci0KLQlyZXR1cm4gZmVuY2U7Ci19Ci0KIC8qKgogICogZG1hX3Jlc3ZfbG9jayAtIGxv
Y2sgdGhlIHJlc2VydmF0aW9uIG9iamVjdAogICogQG9iajogdGhlIHJlc2VydmF0aW9uIG9iamVj
dApAQCAtMjkwLDYgKzIyOCw1MSBAQCBzdGF0aWMgaW5saW5lIHZvaWQgZG1hX3Jlc3ZfdW5sb2Nr
KHN0cnVjdCBkbWFfcmVzdiAqb2JqKQogCXd3X211dGV4X3VubG9jaygmb2JqLT5sb2NrKTsKIH0K
IAorLyoqCisgKiBkbWFfcmVzdl9nZXRfZXhjbCAtIGdldCB0aGUgcmVzZXJ2YXRpb24gb2JqZWN0
J3MKKyAqIGV4Y2x1c2l2ZSBmZW5jZSwgd2l0aCB1cGRhdGUtc2lkZSBsb2NrIGhlbGQKKyAqIEBv
Ymo6IHRoZSByZXNlcnZhdGlvbiBvYmplY3QKKyAqCisgKiBSZXR1cm5zIHRoZSBleGNsdXNpdmUg
ZmVuY2UgKGlmIGFueSkuICBEb2VzIE5PVCB0YWtlIGEKKyAqIHJlZmVyZW5jZS4gV3JpdGVycyBt
dXN0IGhvbGQgb2JqLT5sb2NrLCByZWFkZXJzIG1heSBvbmx5CisgKiBob2xkIGEgUkNVIHJlYWQg
c2lkZSBsb2NrLgorICoKKyAqIFJFVFVSTlMKKyAqIFRoZSBleGNsdXNpdmUgZmVuY2Ugb3IgTlVM
TAorICovCitzdGF0aWMgaW5saW5lIHN0cnVjdCBkbWFfZmVuY2UgKgorZG1hX3Jlc3ZfZ2V0X2V4
Y2woc3RydWN0IGRtYV9yZXN2ICpvYmopCit7CisJcmV0dXJuIHJjdV9kZXJlZmVyZW5jZV9wcm90
ZWN0ZWQob2JqLT5mZW5jZV9leGNsLAorCQkJCQkgZG1hX3Jlc3ZfaGVsZChvYmopKTsKK30KKwor
LyoqCisgKiBkbWFfcmVzdl9nZXRfZXhjbF9yY3UgLSBnZXQgdGhlIHJlc2VydmF0aW9uIG9iamVj
dCdzCisgKiBleGNsdXNpdmUgZmVuY2UsIHdpdGhvdXQgbG9jayBoZWxkLgorICogQG9iajogdGhl
IHJlc2VydmF0aW9uIG9iamVjdAorICoKKyAqIElmIHRoZXJlIGlzIGFuIGV4Y2x1c2l2ZSBmZW5j
ZSwgdGhpcyBhdG9taWNhbGx5IGluY3JlbWVudHMgaXQncworICogcmVmZXJlbmNlIGNvdW50IGFu
ZCByZXR1cm5zIGl0LgorICoKKyAqIFJFVFVSTlMKKyAqIFRoZSBleGNsdXNpdmUgZmVuY2Ugb3Ig
TlVMTCBpZiBub25lCisgKi8KK3N0YXRpYyBpbmxpbmUgc3RydWN0IGRtYV9mZW5jZSAqCitkbWFf
cmVzdl9nZXRfZXhjbF9yY3Uoc3RydWN0IGRtYV9yZXN2ICpvYmopCit7CisJc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2U7CisKKwlpZiAoIXJjdV9hY2Nlc3NfcG9pbnRlcihvYmotPmZlbmNlX2V4Y2wp
KQorCQlyZXR1cm4gTlVMTDsKKworCXJjdV9yZWFkX2xvY2soKTsKKwlmZW5jZSA9IGRtYV9mZW5j
ZV9nZXRfcmN1X3NhZmUoJm9iai0+ZmVuY2VfZXhjbCk7CisJcmN1X3JlYWRfdW5sb2NrKCk7CisK
KwlyZXR1cm4gZmVuY2U7Cit9CisKIHZvaWQgZG1hX3Jlc3ZfaW5pdChzdHJ1Y3QgZG1hX3Jlc3Yg
Km9iaik7CiB2b2lkIGRtYV9yZXN2X2Zpbmkoc3RydWN0IGRtYV9yZXN2ICpvYmopOwogaW50IGRt
YV9yZXN2X3Jlc2VydmVfc2hhcmVkKHN0cnVjdCBkbWFfcmVzdiAqb2JqLCB1bnNpZ25lZCBpbnQg
bnVtX2ZlbmNlcyk7Ci0tIAoyLjIzLjAucmMxCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
