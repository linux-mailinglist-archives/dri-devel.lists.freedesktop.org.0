Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 81BDF2D986
	for <lists+dri-devel@lfdr.de>; Wed, 29 May 2019 11:53:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D73EA89826;
	Wed, 29 May 2019 09:53:00 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from bhuna.collabora.co.uk (bhuna.collabora.co.uk [46.235.227.227])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9F8D789807
 for <dri-devel@lists.freedesktop.org>; Wed, 29 May 2019 09:52:57 +0000 (UTC)
Received: from localhost.localdomain (unknown
 [IPv6:2a01:e0a:2c:6930:5cf4:84a1:2763:fe0d])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested) (Authenticated sender: bbrezillon)
 by bhuna.collabora.co.uk (Postfix) with ESMTPSA id 0ACB12807AA;
 Wed, 29 May 2019 10:52:56 +0100 (BST)
From: Boris Brezillon <boris.brezillon@collabora.com>
To: Rob Herring <robh+dt@kernel.org>,
	Tomeu Vizoso <tomeu@tomeuvizoso.net>
Subject: [PATCH v3 4/4] drm/panfrost: Expose performance counters through
 unstable ioctls
Date: Wed, 29 May 2019 11:52:33 +0200
Message-Id: <20190529095233.26277-5-boris.brezillon@collabora.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190529095233.26277-1-boris.brezillon@collabora.com>
References: <20190529095233.26277-1-boris.brezillon@collabora.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: dri-devel@lists.freedesktop.org, Steven Price <steven.price@arm.com>,
 Boris Brezillon <boris.brezillon@collabora.com>, kernel@collabora.com,
 Alyssa Rosenzweig <alyssa@rosenzweig.io>,
 Emil Velikov <emil.velikov@collabora.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RXhwb3NlIHBlcmZvcm1hbmNlIGNvdW50ZXJzIHRocm91Z2ggMiBkcml2ZXIgc3BlY2lmaWMgaW9j
dGxzOiBvbmUgdG8KZW5hYmxlL2Rpc2FibGUgdGhlIHBlcmZjbnQgYmxvY2ssIGFuZCBvbmUgdG8g
ZHVtcCB0aGUgY291bnRlciB2YWx1ZXMuCgpUaGVyZSBhcmUgZGlzY3Vzc2lvbnMgdG8gZXhwb3Nl
IGdsb2JhbCBwZXJmb3JtYW5jZSBtb25pdG9ycyAodGhvc2UKY291bnRlcnMgdGhhdCBjYW4ndCBi
ZSByZXRyaWV2ZWQgb24gYSBwZXItam9iIGJhc2lzKSBpbiBhIGNvbnNpc3RlbnQKd2F5LCBidXQg
dGhpcyBpcyBsaWtlbHkgdG8gdGFrZSB0aW1lIHRvIHNldHRsZSBvbiBzb21ldGhpbmcgdGhhdCB3
b3Jrcwpmb3IgdmFyaW91cyBIVy91c2Vycy4KVGhlIGlvY3RscyBhcmUgbWFya2VkIHVuc3RhYmxl
IHNvIHdlIGNhbiBnZXQgcmlkIG9mIHRoZW0gd2hlbiB0aGUgdGltZQpjb21lcy4gV2UgaW5pdGFs
bHkgd2VudCBmb3IgYSBkZWJ1Z2ZzLWJhc2VkIGludGVyZmFjZSwgYnV0IHRoaXMgd2FzCm1ha2lu
ZyB0aGUgdHJhbnNpdGlvbiB0byBwZXItRkQgYWRkcmVzcyBzcGFjZSBtb3JlIGNvbXBsaWNhdGVk
ICh3ZSBuZWVkCnRvIHNwZWNpZnkgdGhlIG5hbWVzcGFjZSB0aGUgR1BVIGhhcyB0byB1c2Ugd2hl
biBkdW1waW5nIHRoZSBwZXJmCmNvdW50ZXJzKSwgaGVuY2UgdGhlIGRlY2lzaW9uIHRvIHN3aXRj
aCBiYWNrIHRvIGRyaXZlciBzcGVjaWZpYyBpb2N0bHMKd2hpY2ggYXJlIHBhc3NlZCB0aGUgRkQg
dGhleSBvcGVyYXRlIG9uIGFuZCB0aHVzIHdpbGwgaGF2ZSBhIGRlZGljYXRlZAphZGRyZXNzIHNw
YWNlIGF0dGFjaGVkIHRvIHRoZW0uCgpPdGhlciB0aGFuIHRoYXQsIHRoZSBpbXBsZW1lbnRhdGlv
biBpcyBwcmV0dHkgc2ltcGxlOiBpdCBiYXNpY2FsbHkgZHVtcHMKYWxsIGNvdW50ZXJzIGFuZCBj
b3B5IHRoZSB2YWx1ZXMgdG8gYSB1c2Vyc3BhY2UgYnVmZmVyLiBUaGUgcGFyc2luZyBpcwpsZWZ0
IHRvIHVzZXJzcGFjZSB3aGljaCBoYXMgdG8ga25vdyB0aGUgc3BlY2lmaWMgbGF5b3V0IHRoYXQn
cyB1c2VkCmJ5IHRoZSBHUFUgKGxheW91dCBkaWZmZXJzIG9uIGEgcGVyLXJldmlzaW9uIGJhc2lz
KS4KClNpZ25lZC1vZmYtYnk6IEJvcmlzIEJyZXppbGxvbiA8Ym9yaXMuYnJlemlsbG9uQGNvbGxh
Ym9yYS5jb20+Ci0tLQpDaGFuZ2VzIGluIHYzOgoqIEV4cG9zZSB0aGluZ3MgdGhyb3VnaCBpb2N0
bHMgaW5zdGVhZCBvZiBkZWJ1Z3MgKHN1Z2dlc3RlZCBieSBSb2IpCiogRml4IHRoZSBCTyBzaXpl
IGNhbGN1bGF0aW9uIChyZXBvcnRlZCBieSBTdGV2ZW4pCiogRHJvcCBwZXJmY250IHN1c3BlbmQv
cmVzdW1lIGxvZ2ljIChydW50aW1lIHN1c3BlbmQgaXMgcHJldmVudGVkIHdoZW4KICBwZXJmY250
IGlzIGVuYWJsZWQpCiogRGlzYWJsZSB0aGUgcGVyZmNudCBibG9jayBpbiB0aGUgX2ZpbmkoKSBw
YXRoIChzdWdnZXN0ZWQgYnkgUm9iKQoqIERvIG5vdCBtZXNzIHdpdGggdGhlIElOVCByZWcgaW4g
X2luaXQoKSAoc3VnZ2VzdGVkIGJ5IFJvYikKKiBQcm92aWRlIGEgd2F5IHRvIHNlbGVjdCBib3Ro
IHNldCBvZiBjb3VudGVycyBvbiBCaWZyb3N0IEdQVXMKICAoc3VnZ2VzdGVkIGJ5IFN0ZXZlbikK
CkNoYW5nZXMgaW4gdjI6CiogQ29tcGxldGUgcmV3cml0ZSB0byBleHBvc2UgdGhpbmdzIHRocm91
Z2ggZGVidWdmcyBpbiBhIHNpbXBsZSB3YXkKICAobm8gY291bnRlciBsYXlvdXQgYWJzdHJhY3Rp
b24gYW5kIG5vIHBlci1qb2IgY291bnRlciB0cmFja2luZyB0bwogICBhdm9pZCB0aGUgcGVyZiBw
ZW5hbHR5IGluY3VycmVkIGJ5IHRoZSBleHRyYSBzZXJpYWxpemF0aW9uIGZlbmNlKQotLS0KIGRy
aXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9NYWtlZmlsZSAgICAgICAgICAgfCAgIDMgKy0KIGRyaXZl
cnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9kZXZpY2UuYyAgfCAgIDggKwogZHJpdmVycy9n
cHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X2RldmljZS5oICB8ICAgMyArCiBkcml2ZXJzL2dwdS9k
cm0vcGFuZnJvc3QvcGFuZnJvc3RfZHJ2LmMgICAgIHwgICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9w
YW5mcm9zdC9wYW5mcm9zdF9ncHUuYyAgICAgfCAgIDcgKwogZHJpdmVycy9ncHUvZHJtL3BhbmZy
b3N0L3BhbmZyb3N0X3BlcmZjbnQuYyB8IDMyOSArKysrKysrKysrKysrKysrKysrKwogZHJpdmVy
cy9ncHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X3BlcmZjbnQuaCB8ICAxOCArKwogZHJpdmVycy9n
cHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X3JlZ3MuaCAgICB8ICAxOSArKwogaW5jbHVkZS91YXBp
L2RybS9wYW5mcm9zdF9kcm0uaCAgICAgICAgICAgICB8ICAyNCArKwogOSBmaWxlcyBjaGFuZ2Vk
LCA0MTQgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRy
aXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9wZXJmY250LmMKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBkcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfcGVyZmNudC5oCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL3BhbmZyb3N0L01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJt
L3BhbmZyb3N0L01ha2VmaWxlCmluZGV4IDZkZTcyZDEzYzU4Zi4uZWNmMDg2NGNiNTE1IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9n
cHUvZHJtL3BhbmZyb3N0L01ha2VmaWxlCkBAIC03LDYgKzcsNyBAQCBwYW5mcm9zdC15IDo9IFwK
IAlwYW5mcm9zdF9nZW0ubyBcCiAJcGFuZnJvc3RfZ3B1Lm8gXAogCXBhbmZyb3N0X2pvYi5vIFwK
LQlwYW5mcm9zdF9tbXUubworCXBhbmZyb3N0X21tdS5vIFwKKwlwYW5mcm9zdF9wZXJmY250Lm8K
IAogb2JqLSQoQ09ORklHX0RSTV9QQU5GUk9TVCkgKz0gcGFuZnJvc3QubwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X2RldmljZS5jIGIvZHJpdmVycy9ncHUv
ZHJtL3BhbmZyb3N0L3BhbmZyb3N0X2RldmljZS5jCmluZGV4IGNjYjhlYjJhNTE4Yy4uOGExMTFk
N2MwMjAwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZGV2
aWNlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X2RldmljZS5jCkBA
IC0xNCw2ICsxNCw3IEBACiAjaW5jbHVkZSAicGFuZnJvc3RfZ3B1LmgiCiAjaW5jbHVkZSAicGFu
ZnJvc3Rfam9iLmgiCiAjaW5jbHVkZSAicGFuZnJvc3RfbW11LmgiCisjaW5jbHVkZSAicGFuZnJv
c3RfcGVyZmNudC5oIgogCiBzdGF0aWMgaW50IHBhbmZyb3N0X3Jlc2V0X2luaXQoc3RydWN0IHBh
bmZyb3N0X2RldmljZSAqcGZkZXYpCiB7CkBAIC0xNzEsNyArMTcyLDEzIEBAIGludCBwYW5mcm9z
dF9kZXZpY2VfaW5pdChzdHJ1Y3QgcGFuZnJvc3RfZGV2aWNlICpwZmRldikKIAlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KHBmZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5k
KHBmZGV2LT5kZXYpOwogCisJZXJyID0gcGFuZnJvc3RfcGVyZmNudF9pbml0KHBmZGV2KTsKKwlp
ZiAoZXJyKQorCQlnb3RvIGVycl9vdXQ1OworCiAJcmV0dXJuIDA7CitlcnJfb3V0NToKKwlwYW5m
cm9zdF9qb2JfZmluaShwZmRldik7CiBlcnJfb3V0NDoKIAlwYW5mcm9zdF9tbXVfZmluaShwZmRl
dik7CiBlcnJfb3V0MzoKQEAgLTE4Nyw2ICsxOTQsNyBAQCBpbnQgcGFuZnJvc3RfZGV2aWNlX2lu
aXQoc3RydWN0IHBhbmZyb3N0X2RldmljZSAqcGZkZXYpCiAKIHZvaWQgcGFuZnJvc3RfZGV2aWNl
X2Zpbmkoc3RydWN0IHBhbmZyb3N0X2RldmljZSAqcGZkZXYpCiB7CisJcGFuZnJvc3RfcGVyZmNu
dF9maW5pKHBmZGV2KTsKIAlwYW5mcm9zdF9qb2JfZmluaShwZmRldik7CiAJcGFuZnJvc3RfbW11
X2ZpbmkocGZkZXYpOwogCXBhbmZyb3N0X2dwdV9maW5pKHBmZGV2KTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9kZXZpY2UuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9wYW5mcm9zdC9wYW5mcm9zdF9kZXZpY2UuaAppbmRleCBlODY1ODFjNGFmN2IuLjgzY2MwMWNh
ZmRlMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X2Rldmlj
ZS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9kZXZpY2UuaApAQCAt
MTQsNiArMTQsNyBAQCBzdHJ1Y3QgcGFuZnJvc3RfZGV2aWNlOwogc3RydWN0IHBhbmZyb3N0X21t
dTsKIHN0cnVjdCBwYW5mcm9zdF9qb2Jfc2xvdDsKIHN0cnVjdCBwYW5mcm9zdF9qb2I7CitzdHJ1
Y3QgcGFuZnJvc3RfcGVyZmNudDsKIAogI2RlZmluZSBOVU1fSk9CX1NMT1RTIDMKIApAQCAtNzgs
NiArNzksOCBAQCBzdHJ1Y3QgcGFuZnJvc3RfZGV2aWNlIHsKIAlzdHJ1Y3QgcGFuZnJvc3Rfam9i
ICpqb2JzW05VTV9KT0JfU0xPVFNdOwogCXN0cnVjdCBsaXN0X2hlYWQgc2NoZWR1bGVkX2pvYnM7
CiAKKwlzdHJ1Y3QgcGFuZnJvc3RfcGVyZmNudCAqcGVyZmNudDsKKwogCXN0cnVjdCBtdXRleCBz
Y2hlZF9sb2NrOwogCXN0cnVjdCBtdXRleCByZXNldF9sb2NrOwogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vcGFu
ZnJvc3QvcGFuZnJvc3RfZHJ2LmMKaW5kZXggNzU0ODgxZWNlOGQ3Li5lMzRlODZhNzM3OGEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9kcnYuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZHJ2LmMKQEAgLTE5LDYgKzE5LDcgQEAK
ICNpbmNsdWRlICJwYW5mcm9zdF9tbXUuaCIKICNpbmNsdWRlICJwYW5mcm9zdF9qb2IuaCIKICNp
bmNsdWRlICJwYW5mcm9zdF9ncHUuaCIKKyNpbmNsdWRlICJwYW5mcm9zdF9wZXJmY250LmgiCiAK
IHN0YXRpYyBib29sIHVuc3RhYmxlX2lvY3RsczsKIG1vZHVsZV9wYXJhbV91bnNhZmUodW5zdGFi
bGVfaW9jdGxzLCBib29sLCAwNjAwKTsKQEAgLTMyOSw2ICszMzAsNyBAQCBwYW5mcm9zdF9wb3N0
Y2xvc2Uoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRybV9maWxlICpmaWxlKQogewog
CXN0cnVjdCBwYW5mcm9zdF9maWxlX3ByaXYgKnBhbmZyb3N0X3ByaXYgPSBmaWxlLT5kcml2ZXJf
cHJpdjsKIAorCXBhbmZyb3N0X3BlcmZjbnRfY2xvc2UocGFuZnJvc3RfcHJpdik7CiAJcGFuZnJv
c3Rfam9iX2Nsb3NlKHBhbmZyb3N0X3ByaXYpOwogCiAJa2ZyZWUocGFuZnJvc3RfcHJpdik7CkBA
IC0zNDgsNiArMzUwLDggQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1faW9jdGxfZGVzYyBwYW5m
cm9zdF9kcm1fZHJpdmVyX2lvY3Rsc1tdID0gewogCVBBTkZST1NUX0lPQ1RMKE1NQVBfQk8sCQlt
bWFwX2JvLAlEUk1fUkVOREVSX0FMTE9XKSwKIAlQQU5GUk9TVF9JT0NUTChHRVRfUEFSQU0sCWdl
dF9wYXJhbSwJRFJNX1JFTkRFUl9BTExPVyksCiAJUEFORlJPU1RfSU9DVEwoR0VUX0JPX09GRlNF
VCwJZ2V0X2JvX29mZnNldCwJRFJNX1JFTkRFUl9BTExPVyksCisJUEFORlJPU1RfSU9DVEwoUEVS
RkNOVF9FTkFCTEUsCXBlcmZjbnRfZW5hYmxlLAlEUk1fUkVOREVSX0FMTE9XKSwKKwlQQU5GUk9T
VF9JT0NUTChQRVJGQ05UX0RVTVAsCXBlcmZjbnRfZHVtcCwJRFJNX1JFTkRFUl9BTExPVyksCiB9
OwogCiBERUZJTkVfRFJNX0dFTV9TSE1FTV9GT1BTKHBhbmZyb3N0X2RybV9kcml2ZXJfZm9wcyk7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZ3B1LmMgYi9k
cml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZ3B1LmMKaW5kZXggNmU2OGExMDAyOTFj
Li4yMGFiMzMzZmM5MjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5m
cm9zdF9ncHUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfZ3B1LmMK
QEAgLTE1LDYgKzE1LDcgQEAKICNpbmNsdWRlICJwYW5mcm9zdF9mZWF0dXJlcy5oIgogI2luY2x1
ZGUgInBhbmZyb3N0X2lzc3Vlcy5oIgogI2luY2x1ZGUgInBhbmZyb3N0X2dwdS5oIgorI2luY2x1
ZGUgInBhbmZyb3N0X3BlcmZjbnQuaCIKICNpbmNsdWRlICJwYW5mcm9zdF9yZWdzLmgiCiAKIHN0
YXRpYyBpcnFyZXR1cm5fdCBwYW5mcm9zdF9ncHVfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAq
ZGF0YSkKQEAgLTQwLDYgKzQxLDEyIEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBwYW5mcm9zdF9ncHVf
aXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqZGF0YSkKIAkJZ3B1X3dyaXRlKHBmZGV2LCBHUFVf
SU5UX01BU0ssIDApOwogCX0KIAorCWlmIChzdGF0ZSAmIEdQVV9JUlFfUEVSRkNOVF9TQU1QTEVf
Q09NUExFVEVEKQorCQlwYW5mcm9zdF9wZXJmY250X3NhbXBsZV9kb25lKHBmZGV2KTsKKworCWlm
IChzdGF0ZSAmIEdQVV9JUlFfQ0xFQU5fQ0FDSEVTX0NPTVBMRVRFRCkKKwkJcGFuZnJvc3RfcGVy
ZmNudF9jbGVhbl9jYWNoZV9kb25lKHBmZGV2KTsKKwogCWdwdV93cml0ZShwZmRldiwgR1BVX0lO
VF9DTEVBUiwgc3RhdGUpOwogCiAJcmV0dXJuIElSUV9IQU5ETEVEOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL3BhbmZyb3N0L3BhbmZyb3N0X3BlcmZjbnQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9wYW5mcm9zdC9wYW5mcm9zdF9wZXJmY250LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMDAwMDAwLi5mMDE1MDhhMjAxNDYKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfcGVyZmNudC5jCkBAIC0wLDAgKzEsMzI5IEBACisvLyBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorLyogQ29weXJpZ2h0IDIwMTkgQ29sbGFi
b3JhIEx0ZCAqLworCisjaW5jbHVkZSA8ZHJtL2RybV9maWxlLmg+CisjaW5jbHVkZSA8ZHJtL2Ry
bV9nZW1fc2htZW1faGVscGVyLmg+CisjaW5jbHVkZSA8ZHJtL3BhbmZyb3N0X2RybS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L2NvbXBsZXRpb24uaD4KKyNpbmNsdWRlIDxsaW51eC9pb3BvbGwuaD4KKyNp
bmNsdWRlIDxsaW51eC9wbV9ydW50aW1lLmg+CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4KKworI2luY2x1ZGUgInBhbmZyb3N0X2RldmljZS5oIgor
I2luY2x1ZGUgInBhbmZyb3N0X2ZlYXR1cmVzLmgiCisjaW5jbHVkZSAicGFuZnJvc3RfZ2VtLmgi
CisjaW5jbHVkZSAicGFuZnJvc3RfaXNzdWVzLmgiCisjaW5jbHVkZSAicGFuZnJvc3Rfam9iLmgi
CisjaW5jbHVkZSAicGFuZnJvc3RfbW11LmgiCisjaW5jbHVkZSAicGFuZnJvc3RfcmVncy5oIgor
CisjZGVmaW5lIENPVU5URVJTX1BFUl9CTE9DSwkJNjQKKyNkZWZpbmUgQllURVNfUEVSX0NPVU5U
RVIJCTQKKyNkZWZpbmUgQkxPQ0tTX1BFUl9DT1JFR1JPVVAJCTgKKyNkZWZpbmUgVjRfU0hBREVS
U19QRVJfQ09SRUdST1VQCTQKKworc3RydWN0IHBhbmZyb3N0X3BlcmZjbnQgeworCXN0cnVjdCBw
YW5mcm9zdF9nZW1fb2JqZWN0ICpibzsKKwlzaXplX3QgYm9zaXplOworCXZvaWQgKmJ1ZjsKKwlz
dHJ1Y3QgcGFuZnJvc3RfZmlsZV9wcml2ICp1c2VyOworCXN0cnVjdCBtdXRleCBsb2NrOworCXN0
cnVjdCBjb21wbGV0aW9uIGR1bXBfY29tcDsKK307CisKK3ZvaWQgcGFuZnJvc3RfcGVyZmNudF9j
bGVhbl9jYWNoZV9kb25lKHN0cnVjdCBwYW5mcm9zdF9kZXZpY2UgKnBmZGV2KQoreworCWNvbXBs
ZXRlKCZwZmRldi0+cGVyZmNudC0+ZHVtcF9jb21wKTsKK30KKwordm9pZCBwYW5mcm9zdF9wZXJm
Y250X3NhbXBsZV9kb25lKHN0cnVjdCBwYW5mcm9zdF9kZXZpY2UgKnBmZGV2KQoreworCWdwdV93
cml0ZShwZmRldiwgR1BVX0NNRCwgR1BVX0NNRF9DTEVBTl9DQUNIRVMpOworfQorCitzdGF0aWMg
aW50IHBhbmZyb3N0X3BlcmZjbnRfZHVtcF9sb2NrZWQoc3RydWN0IHBhbmZyb3N0X2RldmljZSAq
cGZkZXYpCit7CisJdTY0IGdwdXZhOworCWludCByZXQ7CisKKwlyZWluaXRfY29tcGxldGlvbigm
cGZkZXYtPnBlcmZjbnQtPmR1bXBfY29tcCk7CisJZ3B1dmEgPSBwZmRldi0+cGVyZmNudC0+Ym8t
Pm5vZGUuc3RhcnQgPDwgUEFHRV9TSElGVDsKKwlncHVfd3JpdGUocGZkZXYsIEdQVV9QRVJGQ05U
X0JBU0VfTE8sIGdwdXZhKTsKKwlncHVfd3JpdGUocGZkZXYsIEdQVV9QRVJGQ05UX0JBU0VfSEks
IGdwdXZhID4+IDMyKTsKKwlncHVfd3JpdGUocGZkZXYsIEdQVV9JTlRfQ0xFQVIsCisJCSAgR1BV
X0lSUV9DTEVBTl9DQUNIRVNfQ09NUExFVEVEIHwKKwkJICBHUFVfSVJRX1BFUkZDTlRfU0FNUExF
X0NPTVBMRVRFRCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfQ01ELCBHUFVfQ01EX1BFUkZDTlRf
U0FNUExFKTsKKwlyZXQgPSB3YWl0X2Zvcl9jb21wbGV0aW9uX2ludGVycnVwdGlibGVfdGltZW91
dCgmcGZkZXYtPnBlcmZjbnQtPmR1bXBfY29tcCwKKwkJCQkJCQltc2Vjc190b19qaWZmaWVzKDEw
MDApKTsKKwlpZiAoIXJldCkKKwkJcmV0ID0gLUVUSU1FRE9VVDsKKwllbHNlIGlmIChyZXQgPiAw
KQorCQlyZXQgPSAwOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBwYW5mcm9zdF9w
ZXJmY250X2VuYWJsZV9sb2NrZWQoc3RydWN0IHBhbmZyb3N0X2RldmljZSAqcGZkZXYsCisJCQkJ
CSAgc3RydWN0IHBhbmZyb3N0X2ZpbGVfcHJpdiAqdXNlciwKKwkJCQkJICB1bnNpZ25lZCBpbnQg
Y291bnRlcnNldCkKK3sKKwlzdHJ1Y3QgcGFuZnJvc3RfcGVyZmNudCAqcGVyZmNudCA9IHBmZGV2
LT5wZXJmY250OworCXN0cnVjdCBkcm1fZ2VtX3NobWVtX29iamVjdCAqYm87CisJdTMyIGNmZzsK
KwlpbnQgcmV0OworCisJaWYgKHVzZXIgPT0gcGVyZmNudC0+dXNlcikKKwkJcmV0dXJuIDA7CisJ
ZWxzZSBpZiAocGVyZmNudC0+dXNlcikKKwkJcmV0dXJuIC1FQlVTWTsKKworCXJldCA9IHBtX3J1
bnRpbWVfZ2V0X3N5bmMocGZkZXYtPmRldik7CisJaWYgKHJldCA8IDApCisJCXJldHVybiByZXQ7
CisKKwlibyA9IGRybV9nZW1fc2htZW1fY3JlYXRlKHBmZGV2LT5kZGV2LCBwZXJmY250LT5ib3Np
emUpOworCWlmIChJU19FUlIoYm8pKQorCQlyZXR1cm4gUFRSX0VSUihibyk7CisKKwlwZXJmY250
LT5ibyA9IHRvX3BhbmZyb3N0X2JvKCZiby0+YmFzZSk7CisKKwkvKiBNYXAgdGhlIHBlcmZjbnQg
YnVmIGluIHRoZSBhZGRyZXNzIHNwYWNlIGF0dGFjaGVkIHRvIGZpbGVfcHJpdi4gKi8KKwlyZXQg
PSBwYW5mcm9zdF9tbXVfbWFwKHBlcmZjbnQtPmJvKTsKKwlpZiAocmV0KQorCQlnb3RvIGVycl9w
dXRfYm87CisKKwlwZXJmY250LT5idWYgPSBkcm1fZ2VtX3ZtYXAoJmJvLT5iYXNlKTsKKwlpZiAo
SVNfRVJSKHBlcmZjbnQtPmJ1ZikpIHsKKwkJcmV0ID0gUFRSX0VSUihwZXJmY250LT5idWYpOwor
CQlnb3RvIGVycl9wdXRfYm87CisJfQorCisJLyoKKwkgKiBJbnZhbGlkYXRlIHRoZSBjYWNoZSBh
bmQgY2xlYXIgdGhlIGNvdW50ZXJzIHRvIHN0YXJ0IGZyb20gYSBmcmVzaAorCSAqIHN0YXRlLgor
CSAqLworCXJlaW5pdF9jb21wbGV0aW9uKCZwZmRldi0+cGVyZmNudC0+ZHVtcF9jb21wKTsKKwln
cHVfd3JpdGUocGZkZXYsIEdQVV9JTlRfQ0xFQVIsCisJCSAgR1BVX0lSUV9DTEVBTl9DQUNIRVNf
Q09NUExFVEVEIHwKKwkJICBHUFVfSVJRX1BFUkZDTlRfU0FNUExFX0NPTVBMRVRFRCk7CisJZ3B1
X3dyaXRlKHBmZGV2LCBHUFVfQ01ELCBHUFVfQ01EX1BFUkZDTlRfQ0xFQVIpOworCWdwdV93cml0
ZShwZmRldiwgR1BVX0NNRCwgR1BVX0NNRF9DTEVBTl9JTlZfQ0FDSEVTKTsKKwlyZXQgPSB3YWl0
X2Zvcl9jb21wbGV0aW9uX3RpbWVvdXQoJnBmZGV2LT5wZXJmY250LT5kdW1wX2NvbXAsCisJCQkJ
CSAgbXNlY3NfdG9famlmZmllcygxMDAwKSk7CisJaWYgKCFyZXQpIHsKKwkJcmV0ID0gLUVUSU1F
RE9VVDsKKwkJZ290byBlcnJfdnVubWFwOworCX0KKworCXBlcmZjbnQtPnVzZXIgPSB1c2VyOwor
CisJLyoKKwkgKiBBbHdheXMgdXNlIGFkZHJlc3Mgc3BhY2UgMCBmb3Igbm93LgorCSAqIEZJWE1F
OiB0aGlzIG5lZWRzIHRvIGJlIHVwZGF0ZWQgd2hlbiB3ZSBzdGFydCB1c2luZyBkaWZmZXJlbnQK
KwkgKiBhZGRyZXNzIHNwYWNlLgorCSAqLworCWNmZyA9IEdQVV9QRVJGQ05UX0NGR19BUygwKSB8
CisJICAgICAgR1BVX1BFUkZDTlRfQ0ZHX01PREUoR1BVX1BFUkZDTlRfQ0ZHX01PREVfTUFOVUFM
KTsKKworCS8qCisJICogQmlmcm9zdCBHUFVzIGhhdmUgMiBzZXQgb2YgY291bnRlcnMsIGJ1dCB3
ZSdyZSBvbmx5IGludGVyZXN0ZWQgYnkKKwkgKiB0aGUgZmlyc3Qgb25lIGZvciBub3cuCisJICov
CisJaWYgKHBhbmZyb3N0X21vZGVsX2lzX2JpZnJvc3QocGZkZXYpKQorCQljZmcgfD0gR1BVX1BF
UkZDTlRfQ0ZHX1NFVFNFTChjb3VudGVyc2V0KTsKKworCWdwdV93cml0ZShwZmRldiwgR1BVX1BS
RkNOVF9KTV9FTiwgMHhmZmZmZmZmZik7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX1NI
QURFUl9FTiwgMHhmZmZmZmZmZik7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX01NVV9M
Ml9FTiwgMHhmZmZmZmZmZik7CisKKwkvKgorCSAqIER1ZSB0byBQUkxBTS04MTg2IHdlIG5lZWQg
dG8gZGlzYWJsZSB0aGUgVGlsZXIgYmVmb3JlIHdlIGVuYWJsZSBIVworCSAqIGNvdW50ZXJzLgor
CSAqLworCWlmIChwYW5mcm9zdF9oYXNfaHdfaXNzdWUocGZkZXYsIEhXX0lTU1VFXzgxODYpKQor
CQlncHVfd3JpdGUocGZkZXYsIEdQVV9QUkZDTlRfVElMRVJfRU4sIDApOworCWVsc2UKKwkJZ3B1
X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX1RJTEVSX0VOLCAweGZmZmZmZmZmKTsKKworCWdwdV93
cml0ZShwZmRldiwgR1BVX1BFUkZDTlRfQ0ZHLCBjZmcpOworCisJaWYgKHBhbmZyb3N0X2hhc19o
d19pc3N1ZShwZmRldiwgSFdfSVNTVUVfODE4NikpCisJCWdwdV93cml0ZShwZmRldiwgR1BVX1BS
RkNOVF9USUxFUl9FTiwgMHhmZmZmZmZmZik7CisKKwlyZXR1cm4gMDsKKworZXJyX3Z1bm1hcDoK
Kwlkcm1fZ2VtX3Z1bm1hcCgmcGVyZmNudC0+Ym8tPmJhc2UuYmFzZSwgcGVyZmNudC0+YnVmKTsK
K2Vycl9wdXRfYm86CisJZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZiby0+YmFzZSk7CisJ
cmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBwYW5mcm9zdF9wZXJmY250X2Rpc2FibGVfbG9j
a2VkKHN0cnVjdCBwYW5mcm9zdF9kZXZpY2UgKnBmZGV2LAorCQkJCQkgICBzdHJ1Y3QgcGFuZnJv
c3RfZmlsZV9wcml2ICp1c2VyKQoreworCXN0cnVjdCBwYW5mcm9zdF9wZXJmY250ICpwZXJmY250
ID0gcGZkZXYtPnBlcmZjbnQ7CisKKwlpZiAodXNlciAhPSBwZXJmY250LT51c2VyKQorCQlyZXR1
cm4gLUVJTlZBTDsKKworCWdwdV93cml0ZShwZmRldiwgR1BVX1BSRkNOVF9KTV9FTiwgMHgwKTsK
KwlncHVfd3JpdGUocGZkZXYsIEdQVV9QUkZDTlRfU0hBREVSX0VOLCAweDApOworCWdwdV93cml0
ZShwZmRldiwgR1BVX1BSRkNOVF9NTVVfTDJfRU4sIDB4MCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBH
UFVfUFJGQ05UX1RJTEVSX0VOLCAwKTsKKwlncHVfd3JpdGUocGZkZXYsIEdQVV9QRVJGQ05UX0NG
RywKKwkJICBHUFVfUEVSRkNOVF9DRkdfTU9ERShHUFVfUEVSRkNOVF9DRkdfTU9ERV9PRkYpKTsK
KworCXBlcmZjbnQtPnVzZXIgPSBOVUxMOworCWRybV9nZW1fdnVubWFwKCZwZXJmY250LT5iby0+
YmFzZS5iYXNlLCBwZXJmY250LT5idWYpOworCXBlcmZjbnQtPmJ1ZiA9IE5VTEw7CisJZHJtX2dl
bV9vYmplY3RfcHV0X3VubG9ja2VkKCZwZXJmY250LT5iby0+YmFzZS5iYXNlKTsKKwlwZXJmY250
LT5ibyA9IE5VTEw7CisJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShwZmRldi0+ZGV2KTsKKwlw
bV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChwZmRldi0+ZGV2KTsKKworCXJldHVybiAwOworfQor
CitpbnQgcGFuZnJvc3RfaW9jdGxfcGVyZmNudF9lbmFibGUoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgdm9pZCAqZGF0YSwKKwkJCQkgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2KQoreworCXN0
cnVjdCBwYW5mcm9zdF9maWxlX3ByaXYgKnBmaWxlID0gZmlsZV9wcml2LT5kcml2ZXJfcHJpdjsK
KwlzdHJ1Y3QgcGFuZnJvc3RfZGV2aWNlICpwZmRldiA9IGRldi0+ZGV2X3ByaXZhdGU7CisJc3Ry
dWN0IHBhbmZyb3N0X3BlcmZjbnQgKnBlcmZjbnQgPSBwZmRldi0+cGVyZmNudDsKKwlzdHJ1Y3Qg
ZHJtX3BhbmZyb3N0X3BlcmZjbnRfZW5hYmxlICpyZXEgPSBkYXRhOworCWludCByZXQ7CisKKwly
ZXQgPSBwYW5mcm9zdF91bnN0YWJsZV9pb2N0bF9jaGVjaygpOworCWlmIChyZXQpCisJCXJldHVy
biByZXQ7CisKKwkvKiBPbmx5IEJpZnJvc3QgR1BVcyBoYXZlIDIgc2V0IG9mIGNvdW50ZXJzLiAq
LworCWlmIChyZXEtPmNvdW50ZXJzZXQgPiAocGFuZnJvc3RfbW9kZWxfaXNfYmlmcm9zdChwZmRl
dikgPyAxIDogMCkpCisJCXJldHVybiAtRUlOVkFMOworCisJbXV0ZXhfbG9jaygmcGVyZmNudC0+
bG9jayk7CisJaWYgKHJlcS0+ZW5hYmxlKQorCQlyZXQgPSBwYW5mcm9zdF9wZXJmY250X2VuYWJs
ZV9sb2NrZWQocGZkZXYsIHBmaWxlLAorCQkJCQkJICAgICByZXEtPmNvdW50ZXJzZXQpOworCWVs
c2UKKwkJcmV0ID0gcGFuZnJvc3RfcGVyZmNudF9kaXNhYmxlX2xvY2tlZChwZmRldiwgcGZpbGUp
OworCW11dGV4X3VubG9jaygmcGVyZmNudC0+bG9jayk7CisKKwlyZXR1cm4gcmV0OworfQorCitp
bnQgcGFuZnJvc3RfaW9jdGxfcGVyZmNudF9kdW1wKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZv
aWQgKmRhdGEsCisJCQkJc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYpCit7CisJc3RydWN0IHBh
bmZyb3N0X2RldmljZSAqcGZkZXYgPSBkZXYtPmRldl9wcml2YXRlOworCXN0cnVjdCBwYW5mcm9z
dF9wZXJmY250ICpwZXJmY250ID0gcGZkZXYtPnBlcmZjbnQ7CisJc3RydWN0IGRybV9wYW5mcm9z
dF9wZXJmY250X2R1bXAgKnJlcSA9IGRhdGE7CisJdm9pZCBfX3VzZXIgKnVzZXJfcHRyID0gKHZv
aWQgX191c2VyICopcmVxLT5idWZfcHRyOworCWludCByZXQ7CisKKwlyZXQgPSBwYW5mcm9zdF91
bnN0YWJsZV9pb2N0bF9jaGVjaygpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwltdXRl
eF9sb2NrKCZwZXJmY250LT5sb2NrKTsKKwlpZiAocGVyZmNudC0+dXNlciAhPSBmaWxlX3ByaXYt
PmRyaXZlcl9wcml2KSB7CisJCXJldCA9IC1FSU5WQUw7CisJCWdvdG8gb3V0OworCX0KKworCXJl
dCA9IHBhbmZyb3N0X3BlcmZjbnRfZHVtcF9sb2NrZWQocGZkZXYpOworCWlmIChyZXQpCisJCWdv
dG8gb3V0OworCisJaWYgKGNvcHlfdG9fdXNlcih1c2VyX3B0ciwgcGVyZmNudC0+YnVmLCBwZXJm
Y250LT5ib3NpemUpKQorCQlyZXQgPSAtRUZBVUxUOworCitvdXQ6CisJbXV0ZXhfdW5sb2NrKCZw
ZXJmY250LT5sb2NrKTsKKworCXJldHVybiByZXQ7Cit9CisKK3ZvaWQgcGFuZnJvc3RfcGVyZmNu
dF9jbG9zZShzdHJ1Y3QgcGFuZnJvc3RfZmlsZV9wcml2ICpwZmlsZSkKK3sKKwlzdHJ1Y3QgcGFu
ZnJvc3RfZGV2aWNlICpwZmRldiA9IHBmaWxlLT5wZmRldjsKKwlzdHJ1Y3QgcGFuZnJvc3RfcGVy
ZmNudCAqcGVyZmNudCA9IHBmZGV2LT5wZXJmY250OworCisJcG1fcnVudGltZV9nZXRfc3luYyhw
ZmRldi0+ZGV2KTsKKwltdXRleF9sb2NrKCZwZXJmY250LT5sb2NrKTsKKwlpZiAocGVyZmNudC0+
dXNlciA9PSBwZmlsZSkKKwkJcGFuZnJvc3RfcGVyZmNudF9kaXNhYmxlX2xvY2tlZChwZmRldiwg
cGZpbGUpOworCW11dGV4X3VubG9jaygmcGVyZmNudC0+bG9jayk7CisJcG1fcnVudGltZV9tYXJr
X2xhc3RfYnVzeShwZmRldi0+ZGV2KTsKKwlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChwZmRl
di0+ZGV2KTsKK30KKworaW50IHBhbmZyb3N0X3BlcmZjbnRfaW5pdChzdHJ1Y3QgcGFuZnJvc3Rf
ZGV2aWNlICpwZmRldikKK3sKKwlzdHJ1Y3QgcGFuZnJvc3RfcGVyZmNudCAqcGVyZmNudDsKKwlz
aXplX3Qgc2l6ZTsKKworCWlmIChwYW5mcm9zdF9oYXNfaHdfZmVhdHVyZShwZmRldiwgSFdfRkVB
VFVSRV9WNCkpIHsKKwkJdW5zaWduZWQgaW50IG5jb3JlZ3JvdXBzOworCisJCW5jb3JlZ3JvdXBz
ID0gaHdlaWdodDY0KHBmZGV2LT5mZWF0dXJlcy5sMl9wcmVzZW50KTsKKwkJc2l6ZSA9IG5jb3Jl
Z3JvdXBzICogQkxPQ0tTX1BFUl9DT1JFR1JPVVAgKgorCQkgICAgICAgQ09VTlRFUlNfUEVSX0JM
T0NLICogQllURVNfUEVSX0NPVU5URVI7CisJfSBlbHNlIHsKKwkJdW5zaWduZWQgaW50IG5sMmMs
IG5jb3JlczsKKworCQkvKgorCQkgKiBUT0RPOiBkZWZpbmUgYSBtYWNybyB0byBleHRyYWN0IHRo
ZSBudW1iZXIgb2YgbDIgY2FjaGVzIGZyb20KKwkJICogbWVtX2ZlYXR1cmVzLgorCQkgKi8KKwkJ
bmwyYyA9ICgocGZkZXYtPmZlYXR1cmVzLm1lbV9mZWF0dXJlcyA+PiA4KSAmIEdFTk1BU0soMywg
MCkpICsgMTsKKworCQkvKgorCQkgKiBzaGFkZXJfcHJlc2VudCBtaWdodCBiZSBzcGFyc2UsIGJ1
dCB0aGUgY291bnRlcnMgbGF5b3V0CisJCSAqIGZvcmNlcyB0byBkdW1wIHVudXNlZCByZWdpb25z
IHRvbywgaGVuY2UgdGhlIGZsczY0KCkgY2FsbAorCQkgKiBpbnN0ZWFkIG9mIGh3ZWlnaHQ2NCgp
LgorCQkgKi8KKwkJbmNvcmVzID0gZmxzNjQocGZkZXYtPmZlYXR1cmVzLnNoYWRlcl9wcmVzZW50
KTsKKworCQkvKgorCQkgKiBUaGVyZSdzIGFsd2F5cyBvbmUgSk0gYW5kIG9uZSBUaWxlciBibG9j
aywgaGVuY2UgdGhlICcrIDInCisJCSAqIGhlcmUuCisJCSAqLworCQlzaXplID0gKG5sMmMgKyBu
Y29yZXMgKyAyKSAqCisJCSAgICAgICBDT1VOVEVSU19QRVJfQkxPQ0sgKiBCWVRFU19QRVJfQ09V
TlRFUjsKKwl9CisKKwlwZXJmY250ID0gZGV2bV9remFsbG9jKHBmZGV2LT5kZXYsIHNpemVvZigq
cGVyZmNudCksIEdGUF9LRVJORUwpOworCWlmICghcGVyZmNudCkKKwkJcmV0dXJuIC1FTk9NRU07
CisKKwlwZXJmY250LT5ib3NpemUgPSBzaXplOworCisJLyogU3RhcnQgd2l0aCBldmVyeXRoaW5n
IGRpc2FibGVkLiAqLworCWdwdV93cml0ZShwZmRldiwgR1BVX1BFUkZDTlRfQ0ZHLAorCQkgIEdQ
VV9QRVJGQ05UX0NGR19NT0RFKEdQVV9QRVJGQ05UX0NGR19NT0RFX09GRikpOworCWdwdV93cml0
ZShwZmRldiwgR1BVX1BSRkNOVF9KTV9FTiwgMCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJG
Q05UX1NIQURFUl9FTiwgMCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX01NVV9MMl9F
TiwgMCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX1RJTEVSX0VOLCAwKTsKKworCWlu
aXRfY29tcGxldGlvbigmcGVyZmNudC0+ZHVtcF9jb21wKTsKKwltdXRleF9pbml0KCZwZXJmY250
LT5sb2NrKTsKKwlwZmRldi0+cGVyZmNudCA9IHBlcmZjbnQ7CisKKwlyZXR1cm4gMDsKK30KKwor
dm9pZCBwYW5mcm9zdF9wZXJmY250X2Zpbmkoc3RydWN0IHBhbmZyb3N0X2RldmljZSAqcGZkZXYp
Cit7CisJLyogRGlzYWJsZSBldmVyeXRoaW5nIGJlZm9yZSBsZWF2aW5nLiAqLworCWdwdV93cml0
ZShwZmRldiwgR1BVX1BFUkZDTlRfQ0ZHLAorCQkgIEdQVV9QRVJGQ05UX0NGR19NT0RFKEdQVV9Q
RVJGQ05UX0NGR19NT0RFX09GRikpOworCWdwdV93cml0ZShwZmRldiwgR1BVX1BSRkNOVF9KTV9F
TiwgMCk7CisJZ3B1X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX1NIQURFUl9FTiwgMCk7CisJZ3B1
X3dyaXRlKHBmZGV2LCBHUFVfUFJGQ05UX01NVV9MMl9FTiwgMCk7CisJZ3B1X3dyaXRlKHBmZGV2
LCBHUFVfUFJGQ05UX1RJTEVSX0VOLCAwKTsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9wYW5mcm9zdC9wYW5mcm9zdF9wZXJmY250LmggYi9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3Qv
cGFuZnJvc3RfcGVyZmNudC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAw
MC4uMTNiOGZkYWExYjQzCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL3BhbmZy
b3N0L3BhbmZyb3N0X3BlcmZjbnQuaApAQCAtMCwwICsxLDE4IEBACisvKiBTUERYLUxpY2Vuc2Ut
SWRlbnRpZmllcjogR1BMLTIuMCAqLworLyogQ29weXJpZ2h0IDIwMTkgQ29sbGFib3JhIEx0ZCAq
LworI2lmbmRlZiBfX1BBTkZST1NUX1BFUkZDTlRfSF9fCisjZGVmaW5lIF9fUEFORlJPU1RfUEVS
RkNOVF9IX18KKworI2luY2x1ZGUgInBhbmZyb3N0X2RldmljZS5oIgorCit2b2lkIHBhbmZyb3N0
X3BlcmZjbnRfc2FtcGxlX2RvbmUoc3RydWN0IHBhbmZyb3N0X2RldmljZSAqcGZkZXYpOwordm9p
ZCBwYW5mcm9zdF9wZXJmY250X2NsZWFuX2NhY2hlX2RvbmUoc3RydWN0IHBhbmZyb3N0X2Rldmlj
ZSAqcGZkZXYpOworaW50IHBhbmZyb3N0X3BlcmZjbnRfaW5pdChzdHJ1Y3QgcGFuZnJvc3RfZGV2
aWNlICpwZmRldik7Cit2b2lkIHBhbmZyb3N0X3BlcmZjbnRfZmluaShzdHJ1Y3QgcGFuZnJvc3Rf
ZGV2aWNlICpwZmRldik7Cit2b2lkIHBhbmZyb3N0X3BlcmZjbnRfY2xvc2Uoc3RydWN0IHBhbmZy
b3N0X2ZpbGVfcHJpdiAqcGZpbGUpOworaW50IHBhbmZyb3N0X2lvY3RsX3BlcmZjbnRfZW5hYmxl
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCisJCQkJICBzdHJ1Y3QgZHJtX2Zp
bGUgKmZpbGVfcHJpdik7CitpbnQgcGFuZnJvc3RfaW9jdGxfcGVyZmNudF9kdW1wKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCisJCQkJc3RydWN0IGRybV9maWxlICpmaWxlX3By
aXYpOworCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9wYW5m
cm9zdF9yZWdzLmggYi9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3RfcmVncy5oCmlu
ZGV4IDQyZDA4ODYwZmQ3Ni4uZWEzOGFjNjA1ODFjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vcGFuZnJvc3QvcGFuZnJvc3RfcmVncy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9wYW5mcm9z
dC9wYW5mcm9zdF9yZWdzLmgKQEAgLTQ0LDEyICs0NCwzMSBAQAogCSBHUFVfSVJRX01VTFRJUExF
X0ZBVUxUKQogI2RlZmluZSBHUFVfQ01ECQkJCTB4MzAKICNkZWZpbmUgICBHUFVfQ01EX1NPRlRf
UkVTRVQJCTB4MDEKKyNkZWZpbmUgICBHUFVfQ01EX1BFUkZDTlRfQ0xFQVIJCTB4MDMKKyNkZWZp
bmUgICBHUFVfQ01EX1BFUkZDTlRfU0FNUExFCTB4MDQKKyNkZWZpbmUgICBHUFVfQ01EX0NMRUFO
X0NBQ0hFUwkJMHgwNworI2RlZmluZSAgIEdQVV9DTURfQ0xFQU5fSU5WX0NBQ0hFUwkweDA4CiAj
ZGVmaW5lIEdQVV9TVEFUVVMJCQkweDM0CisjZGVmaW5lICAgR1BVX1NUQVRVU19QUkZDTlRfQUNU
SVZFCUJJVCgyKQogI2RlZmluZSBHUFVfTEFURVNUX0ZMVVNIX0lECQkweDM4CiAjZGVmaW5lIEdQ
VV9GQVVMVF9TVEFUVVMJCTB4M0MKICNkZWZpbmUgR1BVX0ZBVUxUX0FERFJFU1NfTE8JCTB4NDAK
ICNkZWZpbmUgR1BVX0ZBVUxUX0FERFJFU1NfSEkJCTB4NDQKIAorI2RlZmluZSBHUFVfUEVSRkNO
VF9CQVNFX0xPCQkweDYwCisjZGVmaW5lIEdQVV9QRVJGQ05UX0JBU0VfSEkJCTB4NjQKKyNkZWZp
bmUgR1BVX1BFUkZDTlRfQ0ZHCQkJMHg2OAorI2RlZmluZSAgIEdQVV9QRVJGQ05UX0NGR19NT0RF
KHgpCSh4KQorI2RlZmluZSAgIEdQVV9QRVJGQ05UX0NGR19NT0RFX09GRgkwCisjZGVmaW5lICAg
R1BVX1BFUkZDTlRfQ0ZHX01PREVfTUFOVUFMCTEKKyNkZWZpbmUgICBHUFVfUEVSRkNOVF9DRkdf
TU9ERV9USUxFCTIKKyNkZWZpbmUgICBHUFVfUEVSRkNOVF9DRkdfQVMoeCkJCSgoeCkgPDwgNCkK
KyNkZWZpbmUgICBHUFVfUEVSRkNOVF9DRkdfU0VUU0VMKHgpCSgoeCkgPDwgOCkKKyNkZWZpbmUg
R1BVX1BSRkNOVF9KTV9FTgkJMHg2YworI2RlZmluZSBHUFVfUFJGQ05UX1NIQURFUl9FTgkJMHg3
MAorI2RlZmluZSBHUFVfUFJGQ05UX1RJTEVSX0VOCQkweDc0CisjZGVmaW5lIEdQVV9QUkZDTlRf
TU1VX0wyX0VOCQkweDdjCisKICNkZWZpbmUgR1BVX1RIUkVBRF9NQVhfVEhSRUFEUwkJMHgwQTAJ
LyogKFJPKSBNYXhpbXVtIG51bWJlciBvZiB0aHJlYWRzIHBlciBjb3JlICovCiAjZGVmaW5lIEdQ
VV9USFJFQURfTUFYX1dPUktHUk9VUF9TSVpFCTB4MEE0CS8qIChSTykgTWF4aW11bSB3b3JrZ3Jv
dXAgc2l6ZSAqLwogI2RlZmluZSBHUFVfVEhSRUFEX01BWF9CQVJSSUVSX1NJWkUJMHgwQTgJLyog
KFJPKSBNYXhpbXVtIHRocmVhZHMgd2FpdGluZyBhdCBhIGJhcnJpZXIgKi8KZGlmZiAtLWdpdCBh
L2luY2x1ZGUvdWFwaS9kcm0vcGFuZnJvc3RfZHJtLmggYi9pbmNsdWRlL3VhcGkvZHJtL3BhbmZy
b3N0X2RybS5oCmluZGV4IGE1MmUwMjgzYjkwZC4uYjVkMzcwNjM4ODQ2IDEwMDY0NAotLS0gYS9p
bmNsdWRlL3VhcGkvZHJtL3BhbmZyb3N0X2RybS5oCisrKyBiL2luY2x1ZGUvdWFwaS9kcm0vcGFu
ZnJvc3RfZHJtLmgKQEAgLTE4LDYgKzE4LDggQEAgZXh0ZXJuICJDIiB7CiAjZGVmaW5lIERSTV9Q
QU5GUk9TVF9NTUFQX0JPCQkJMHgwMwogI2RlZmluZSBEUk1fUEFORlJPU1RfR0VUX1BBUkFNCQkJ
MHgwNAogI2RlZmluZSBEUk1fUEFORlJPU1RfR0VUX0JPX09GRlNFVAkJMHgwNQorI2RlZmluZSBE
Uk1fUEFORlJPU1RfUEVSRkNOVF9FTkFCTEUJCTB4MDYKKyNkZWZpbmUgRFJNX1BBTkZST1NUX1BF
UkZDTlRfRFVNUAkJMHgwNwogCiAjZGVmaW5lIERSTV9JT0NUTF9QQU5GUk9TVF9TVUJNSVQJCURS
TV9JT1coRFJNX0NPTU1BTkRfQkFTRSArIERSTV9QQU5GUk9TVF9TVUJNSVQsIHN0cnVjdCBkcm1f
cGFuZnJvc3Rfc3VibWl0KQogI2RlZmluZSBEUk1fSU9DVExfUEFORlJPU1RfV0FJVF9CTwkJRFJN
X0lPVyhEUk1fQ09NTUFORF9CQVNFICsgRFJNX1BBTkZST1NUX1dBSVRfQk8sIHN0cnVjdCBkcm1f
cGFuZnJvc3Rfd2FpdF9ibykKQEAgLTI2LDYgKzI4LDE1IEBAIGV4dGVybiAiQyIgewogI2RlZmlu
ZSBEUk1fSU9DVExfUEFORlJPU1RfR0VUX1BBUkFNCQlEUk1fSU9XUihEUk1fQ09NTUFORF9CQVNF
ICsgRFJNX1BBTkZST1NUX0dFVF9QQVJBTSwgc3RydWN0IGRybV9wYW5mcm9zdF9nZXRfcGFyYW0p
CiAjZGVmaW5lIERSTV9JT0NUTF9QQU5GUk9TVF9HRVRfQk9fT0ZGU0VUCURSTV9JT1dSKERSTV9D
T01NQU5EX0JBU0UgKyBEUk1fUEFORlJPU1RfR0VUX0JPX09GRlNFVCwgc3RydWN0IGRybV9wYW5m
cm9zdF9nZXRfYm9fb2Zmc2V0KQogCisvKgorICogVW5zdGFibGUgaW9jdGwocyk6IG9ubHkgZXhw
b3NlZCB3aGVuIHRoZSB1bnNhZmUgdW5zdGFibGVfaW9jdGxzIG1vZHVsZQorICogcGFyYW0gaXMg
c2V0IHRvIHRydWUuCisgKiBBbGwgdGhlc2UgaW9jdGwocykgYXJlIHN1YmplY3QgdG8gZGVwcmVj
YXRpb24sIHNvIHBsZWFzZSBkb24ndCByZWx5IG9uCisgKiB0aGVtIGZvciBhbnl0aGluZyBidXQg
ZGVidWdnaW5nIHB1cnBvc2UuCisgKi8KKyNkZWZpbmUgRFJNX0lPQ1RMX1BBTkZST1NUX1BFUkZD
TlRfRU5BQkxFCURSTV9JT1coRFJNX0NPTU1BTkRfQkFTRSArIERSTV9QQU5GUk9TVF9QRVJGQ05U
X0VOQUJMRSwgc3RydWN0IGRybV9wYW5mcm9zdF9wZXJmY250X2VuYWJsZSkKKyNkZWZpbmUgRFJN
X0lPQ1RMX1BBTkZST1NUX1BFUkZDTlRfRFVNUAkJRFJNX0lPVyhEUk1fQ09NTUFORF9CQVNFICsg
RFJNX1BBTkZST1NUX1BFUkZDTlRfRFVNUCwgc3RydWN0IGRybV9wYW5mcm9zdF9wZXJmY250X2R1
bXApCisKICNkZWZpbmUgUEFORlJPU1RfSkRfUkVRX0ZTICgxIDw8IDApCiAvKioKICAqIHN0cnVj
dCBkcm1fcGFuZnJvc3Rfc3VibWl0IC0gaW9jdGwgYXJndW1lbnQgZm9yIHN1Ym1pdHRpbmcgY29t
bWFuZHMgdG8gdGhlIDNECkBAIC0xMzUsNiArMTQ2LDE5IEBAIHN0cnVjdCBkcm1fcGFuZnJvc3Rf
Z2V0X2JvX29mZnNldCB7CiAJX191NjQgb2Zmc2V0OwogfTsKIAorc3RydWN0IGRybV9wYW5mcm9z
dF9wZXJmY250X2VuYWJsZSB7CisJX191MzIgZW5hYmxlOworCS8qCisJICogT24gYmlmcm9zdCB3
ZSBoYXZlIDIgc2V0cyBvZiBjb3VudGVycywgdGhpcyBwYXJhbWV0ZXIgZGVmaW5lcyB0aGUKKwkg
KiBvbmUgdG8gdHJhY2suCisJICovCisJX191MzIgY291bnRlcnNldDsKK307CisKK3N0cnVjdCBk
cm1fcGFuZnJvc3RfcGVyZmNudF9kdW1wIHsKKwlfX3U2NCBidWZfcHRyOworfTsKKwogI2lmIGRl
ZmluZWQoX19jcGx1c3BsdXMpCiB9CiAjZW5kaWYKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApk
cmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
