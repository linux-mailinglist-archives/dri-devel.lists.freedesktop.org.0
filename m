Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1EDB1160507
	for <lists+dri-devel@lfdr.de>; Sun, 16 Feb 2020 18:27:23 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 53C9B6E46B;
	Sun, 16 Feb 2020 17:27:06 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from asav22.altibox.net (asav22.altibox.net [109.247.116.9])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BDE4D6E452
 for <dri-devel@lists.freedesktop.org>; Sun, 16 Feb 2020 17:27:00 +0000 (UTC)
Received: from localhost.localdomain (unknown [81.166.168.211])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: noralf.tronnes@ebnett.no)
 by asav22.altibox.net (Postfix) with ESMTPSA id B3E83200EC;
 Sun, 16 Feb 2020 18:21:39 +0100 (CET)
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: broonie@kernel.org,
	balbi@kernel.org,
	lee.jones@linaro.org
Subject: [RFC 3/9] usb: gadget: function: Add Multifunction USB Device support
Date: Sun, 16 Feb 2020 18:21:11 +0100
Message-Id: <20200216172117.49832-4-noralf@tronnes.org>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20200216172117.49832-1-noralf@tronnes.org>
References: <20200216172117.49832-1-noralf@tronnes.org>
MIME-Version: 1.0
X-CMAE-Score: 0
X-CMAE-Analysis: v=2.3 cv=ZvHD1ezG c=1 sm=1 tr=0
 a=OYZzhG0JTxDrWp/F2OJbnw==:117 a=OYZzhG0JTxDrWp/F2OJbnw==:17
 a=jpOVt7BSZ2e4Z31A5e1TngXxSK0=:19 a=IkcTkHD0fZMA:10 a=M51BFTxLslgA:10
 a=SJz97ENfAAAA:8 a=9iXY35lkYcQ8TEz7kwIA:9 a=S4O_JTp8qcaCKkJR:21
 a=v5tXeCps66gWD8CS:21 a=QEXdDO2ut3YA:10 a=vFet0B0WnEQeilDPIY6i:22
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-usb@vger.kernel.org, dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBpcyB0aGUgZ2FkZ2V0IHNpZGUgb2YgdGhlIG1mZCBob3N0IGRyaXZlci4gSXQgcHJvdmlk
ZXMgYSBVU0IKZnVuY3Rpb24gdGhhdCBkcml2ZXJzIGNhbiBob29rIGludG8gcHJvdmlkaW5nIGZ1
bmN0aW9ucyBsaWtlIGdwaW8gYW5kCmRpc3BsYXkgYXMgcmVnbWFwcyB0byB0aGUgaG9zdC4gVGhl
c2UgZHJpdmVycyBhcmUgY29uZmlndXJlZCB0aHJvdWdoCmNvbmZpZ2ZzLgoKU2lnbmVkLW9mZi1i
eTogTm9yYWxmIFRyw7hubmVzIDxub3JhbGZAdHJvbm5lcy5vcmc+Ci0tLQogZHJpdmVycy91c2Iv
Z2FkZ2V0L0tjb25maWcgICAgICAgICAgICAgICB8ICAxMCArCiBkcml2ZXJzL3VzYi9nYWRnZXQv
ZnVuY3Rpb24vTWFrZWZpbGUgICAgIHwgICAyICsKIGRyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlv
bi9mX211ZC5jICAgICAgfCA5MTMgKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy91c2Iv
Z2FkZ2V0L2Z1bmN0aW9uL2ZfbXVkLmggICAgICB8IDIxMCArKysrKwogZHJpdmVycy91c2IvZ2Fk
Z2V0L2Z1bmN0aW9uL211ZF9yZWdtYXAuYyB8IDkzNiArKysrKysrKysrKysrKysrKysrKysrKwog
NSBmaWxlcyBjaGFuZ2VkLCAyMDcxIGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBk
cml2ZXJzL3VzYi9nYWRnZXQvZnVuY3Rpb24vZl9tdWQuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRy
aXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9mX211ZC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJp
dmVycy91c2IvZ2FkZ2V0L2Z1bmN0aW9uL211ZF9yZWdtYXAuYwoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvdXNiL2dhZGdldC9LY29uZmlnIGIvZHJpdmVycy91c2IvZ2FkZ2V0L0tjb25maWcKaW5kZXgg
MDJmZjg1MDI3OGIxLi45NTUxODc2ZmZlMDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdXNiL2dhZGdl
dC9LY29uZmlnCisrKyBiL2RyaXZlcnMvdXNiL2dhZGdldC9LY29uZmlnCkBAIC0yMTYsNiArMjE2
LDkgQEAgY29uZmlnIFVTQl9GX1BSSU5URVIKIGNvbmZpZyBVU0JfRl9UQ00KIAl0cmlzdGF0ZQog
Citjb25maWcgVVNCX0ZfTVVECisJdHJpc3RhdGUKKwogIyB0aGlzIGZpcnN0IHNldCBvZiBkcml2
ZXJzIGFsbCBkZXBlbmQgb24gYnVsay1jYXBhYmxlIGhhcmR3YXJlLgogCiBjb25maWcgVVNCX0NP
TkZJR0ZTCkBAIC00ODMsNiArNDg2LDEzIEBAIGNvbmZpZyBVU0JfQ09ORklHRlNfRl9UQ00KIAkg
IEJvdGggcHJvdG9jb2xzIGNhbiB3b3JrIG9uIFVTQjIuMCBhbmQgVVNCMy4wLgogCSAgVUFTIHV0
aWxpemVzIHRoZSBVU0IgMy4wIGZlYXR1cmUgY2FsbGVkIHN0cmVhbXMgc3VwcG9ydC4KIAorbWVu
dWNvbmZpZyBVU0JfQ09ORklHRlNfRl9NVUQKKwlib29sICJNdWx0aWZ1bmN0aW9uIFVTQiBEZXZp
Y2UiCisJZGVwZW5kcyBvbiBVU0JfQ09ORklHRlMKKwlzZWxlY3QgVVNCX0ZfTVVECisJaGVscAor
CSAgQ29yZSBzdXBwb3J0IGZvciB0aGUgTXVsdGlmdW5jdGlvbiBVU0IgRGV2aWNlLgorCiBjaG9p
Y2UKIAl0cmlzdGF0ZSAiVVNCIEdhZGdldCBwcmVjb21wb3NlZCBjb25maWd1cmF0aW9ucyIKIAlk
ZWZhdWx0IFVTQl9FVEgKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9N
YWtlZmlsZSBiL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9NYWtlZmlsZQppbmRleCA1ZDNh
NmNmMDIyMTguLmI2ZTMxYjUxMTUyMSAxMDA2NDQKLS0tIGEvZHJpdmVycy91c2IvZ2FkZ2V0L2Z1
bmN0aW9uL01ha2VmaWxlCisrKyBiL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9NYWtlZmls
ZQpAQCAtNTAsMyArNTAsNSBAQCB1c2JfZl9wcmludGVyLXkJCQk6PSBmX3ByaW50ZXIubwogb2Jq
LSQoQ09ORklHX1VTQl9GX1BSSU5URVIpCSs9IHVzYl9mX3ByaW50ZXIubwogdXNiX2ZfdGNtLXkJ
CQk6PSBmX3RjbS5vCiBvYmotJChDT05GSUdfVVNCX0ZfVENNKQkJKz0gdXNiX2ZfdGNtLm8KK3Vz
Yl9mX211ZC15CQkJOj0gZl9tdWQubyBtdWRfcmVnbWFwLm8KK29iai0kKENPTkZJR19VU0JfRl9N
VUQpCQkrPSB1c2JfZl9tdWQubwpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2IvZ2FkZ2V0L2Z1bmN0
aW9uL2ZfbXVkLmMgYi9kcml2ZXJzL3VzYi9nYWRnZXQvZnVuY3Rpb24vZl9tdWQuYwpuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmIxNWE1NzFkMmU1ZAotLS0gL2Rldi9u
dWxsCisrKyBiL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9mX211ZC5jCkBAIC0wLDAgKzEs
OTEzIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgorLyoK
KyAqIENvcHlyaWdodCAoQykgMjAyMCBOb3JhbGYgVHLDuG5uZXMKKyAqLworCisjaW5jbHVkZSA8
bGludXgvY29uZmlnZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KKyNpbmNsdWRlIDxs
aW51eC9rZXJuZWwuaD4KKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5jbHVkZSA8bGludXgv
bW9kdWxlLmg+CisjaW5jbHVkZSA8bGludXgvbXV0ZXguaD4KKyNpbmNsdWRlIDxsaW51eC9yZWdt
YXAuaD4KKyNpbmNsdWRlIDxsaW51eC9yZWdtYXBfdXNiLmg+CisjaW5jbHVkZSA8bGludXgvc2xh
Yi5oPgorI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8bGludXgvdXNiL2Nv
bXBvc2l0ZS5oPgorI2luY2x1ZGUgPGxpbnV4L3VzYi9nYWRnZXQuaD4KKworI2luY2x1ZGUgImZf
bXVkLmgiCisKKy8qKgorICogRE9DOiBvdmVydmlldworICoKKyAqIGZfbXVkIGlzIHRoZSBkZXZp
Y2Ugc2lkZSBjb3VudGVycGFydCB0byBkcml2ZXJzL21mZC9tdWQuCisgKiBJdCBjb21iaW5lcyB0
aGUgcmVnbWFwIGFuZCBtZmQgY2VsbCBhYnN0cmFjdGlvbiBvbiB0aGUgaG9zdCBzaWRlIGludG8g
b25lIGNlbGwKKyAqIGRyaXZlciBvbiB0aGUgZGV2aWNlIHNpZGU6IEBmX211ZF9jZWxsX29wcy4g
VGhlIHJlYXNvbiBmb3Igbm90IHVzaW5nIHRoZQorICogcmVnbWFwIGxpYnJhcnkgaGVyZSBpcyBz
byBkcml2ZXJzIGNhbiBkbyBjb21wcmVzc2lvbiBkaXJlY3RseSB3aXRoIHRoZWlyIG93bgorICog
YnVmZmVycyB3aXRob3V0IGdvaW5nIHRocm91Z2ggYSB0ZW1wb3JhcnkgYnVmZmVyLgorICovCisK
Ky8qIFRlbXBvcmFyeSBkZWJ1Z2dpbmcgYWlkICovCitzdGF0aWMgdW5zaWduZWQgaW50IGRlYnVn
ID0gODsKKworI2RlZmluZSBmbWRlYnVnKGxldmVsLCBmbXQsIC4uLikJCVwKK2RvIHsJCQkJCQlc
CisJaWYgKChsZXZlbCkgPD0gZGVidWcpCQkJXAorCQlwcl9kZWJ1ZyhmbXQsICMjX19WQV9BUkdT
X18pOwlcCit9IHdoaWxlICgwKQorCitzdHJ1Y3QgZl9tdWQgeworCXN0cnVjdCB1c2JfZnVuY3Rp
b24gZnVuYzsKKwl1OCBpbnRlcmZhY2VfaWQ7CisJc3RydWN0IG11ZF9yZWdtYXAgKm1yZWc7CisK
KwlzdHJ1Y3QgZl9tdWRfY2VsbCAqKmNlbGxzOworCXVuc2lnbmVkIGludCBudW1fY2VsbHM7CisK
KwlpbnQgaW50ZXJydXB0X2ludGVydmFsX21zOworCisJc3BpbmxvY2tfdCBpcnFfbG9jazsKKwli
b29sIGlycV9lbmFibGVkOworCXN0cnVjdCB1c2JfZXAgKmlycV9lcDsKKwlzdHJ1Y3QgdXNiX3Jl
cXVlc3QgKmlycV9yZXE7CisJdTE2IGludF90YWc7CisJdW5zaWduZWQgbG9uZyAqaXJxX3N0YXR1
czsKKwlib29sIGlycV9xdWV1ZWQ7Cit9OworCitzdGF0aWMgaW5saW5lIHN0cnVjdCBmX211ZCAq
ZnVuY190b19mX211ZChzdHJ1Y3QgdXNiX2Z1bmN0aW9uICpmKQoreworCXJldHVybiBjb250YWlu
ZXJfb2YoZiwgc3RydWN0IGZfbXVkLCBmdW5jKTsKK30KKworc3RydWN0IGZfbXVkX29wdHMgewor
CXN0cnVjdCB1c2JfZnVuY3Rpb25faW5zdGFuY2UgZnVuY19pbnN0OworCXN0cnVjdCBtdXRleCBs
b2NrOworCWludCByZWZjbnQ7CisKKwlpbnQgaW50ZXJydXB0X2ludGVydmFsX21zOworCisJc3Ry
dWN0IGxpc3RfaGVhZCBjZWxsczsKK307CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGZfbXVkX29w
dHMgKmNpX3RvX2ZfbXVkX29wdHMoc3RydWN0IGNvbmZpZ19pdGVtICppdGVtKQoreworCXJldHVy
biBjb250YWluZXJfb2YodG9fY29uZmlnX2dyb3VwKGl0ZW0pLCBzdHJ1Y3QgZl9tdWRfb3B0cywK
KwkJCSAgICBmdW5jX2luc3QuZ3JvdXApOworfQorCitzdGF0aWMgREVGSU5FX01VVEVYKGZfbXVk
X2NlbGxfb3BzX2xpc3RfbXV0ZXgpOworc3RhdGljIExJU1RfSEVBRChmX211ZF9jZWxsX29wc19s
aXN0KTsKKworc3RydWN0IGZfbXVkX2NlbGxfb3BzX2xpc3RfaXRlbSB7CisJc3RydWN0IGxpc3Rf
aGVhZCBsaXN0OworCWNvbnN0IHN0cnVjdCBmX211ZF9jZWxsX29wcyAqb3BzOworCXVuc2lnbmVk
IGludCByZWZjbnQ7Cit9OworCitzdGF0aWMgc3RydWN0IGZfbXVkX2NlbGxfb3BzX2xpc3RfaXRl
bSAqZl9tdWRfY2VsbF9pdGVtX2xvb2t1cChjb25zdCBjaGFyICpuYW1lKQoreworCXN0cnVjdCBm
X211ZF9jZWxsX29wc19saXN0X2l0ZW0gKml0ZW07CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGl0
ZW0sICZmX211ZF9jZWxsX29wc19saXN0LCBsaXN0KSB7CisJCWlmICghc3RyY21wKG5hbWUsIGl0
ZW0tPm9wcy0+bmFtZSkpCisJCQlyZXR1cm4gaXRlbTsKKwl9CisKKwlyZXR1cm4gTlVMTDsKK30K
KworLyoqCisgKiBmX211ZF9jZWxsX3JlZ2lzdGVyKCkgLSBSZWdpc3RlciBhIGNlbGwgZHJpdmVy
CisgKiBAb3BzOiBDZWxsIG9wZXJhdGlvbnMgc3RydWN0dXJlCisgKgorICogVGhpcyBmdW5jdGlv
biByZWdpc3RlcnMgYSBjZWxsIGRyaXZlciBmb3IgdXNlIGluIGEgZ2FkZ2V0LgorICoKKyAqIFJl
dHVybnM6CisgKiBaZXJvIG9uIHN1Y2Nlc3MsIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVy
ZS4KKyAqLworaW50IGZfbXVkX2NlbGxfcmVnaXN0ZXIoY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxf
b3BzICpvcHMpCit7CisJc3RydWN0IGZfbXVkX2NlbGxfb3BzX2xpc3RfaXRlbSAqaXRlbTsKKwlp
bnQgcmV0ID0gMDsKKworCWZtZGVidWcoMSwgIiVzOiBuYW1lPSVzXG4iLCBfX2Z1bmNfXywgb3Bz
LT5uYW1lKTsKKworCW11dGV4X2xvY2soJmZfbXVkX2NlbGxfb3BzX2xpc3RfbXV0ZXgpOworCisJ
aXRlbSA9IGZfbXVkX2NlbGxfaXRlbV9sb29rdXAob3BzLT5uYW1lKTsKKwlpZiAoaXRlbSkgewor
CQlwcl9lcnIoIiVzOiAnJXMnIGlzIGFscmVhZHkgcmVnaXN0ZXJlZFxuIiwgX19mdW5jX18sIG9w
cy0+bmFtZSk7CisJCXJldCA9IC1FRVhJU1Q7CisJCWdvdG8gb3V0OworCX0KKworCWl0ZW0gPSBr
emFsbG9jKHNpemVvZigqaXRlbSksIEdGUF9LRVJORUwpOworCWlmICghaXRlbSkgeworCQlyZXQg
PSAtRU5PTUVNOworCQlnb3RvIG91dDsKKwl9CisKKwlpdGVtLT5vcHMgPSBvcHM7CisJSU5JVF9M
SVNUX0hFQUQoJml0ZW0tPmxpc3QpOworCWxpc3RfYWRkKCZpdGVtLT5saXN0LCAmZl9tdWRfY2Vs
bF9vcHNfbGlzdCk7CitvdXQ6CisJbXV0ZXhfdW5sb2NrKCZmX211ZF9jZWxsX29wc19saXN0X211
dGV4KTsKKworCWZtZGVidWcoMSwgIiVzOiByZXQ9JWRcbiIsIF9fZnVuY19fLCByZXQpOworCisJ
cmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0woZl9tdWRfY2VsbF9yZWdpc3Rlcik7CisKKy8q
KgorICogZl9tdWRfY2VsbF91bnJlZ2lzdGVyKCkgLSBVbnJlZ2lzdGVyIGEgY2VsbCBkcml2ZXIK
KyAqIEBvcHM6IENlbGwgb3BlcmF0aW9ucyBzdHJ1Y3R1cmUKKyAqCisgKiBUaGlzIGZ1bmN0aW9u
IHVucmVnaXN0ZXJzIGEgY2VsbCBkcml2ZXIuCisgKi8KK3ZvaWQgZl9tdWRfY2VsbF91bnJlZ2lz
dGVyKGNvbnN0IHN0cnVjdCBmX211ZF9jZWxsX29wcyAqb3BzKQoreworCXN0cnVjdCBmX211ZF9j
ZWxsX29wc19saXN0X2l0ZW0gKml0ZW07CisKKwlmbWRlYnVnKDEsICIlczogbmFtZT0lc1xuIiwg
X19mdW5jX18sIG9wcy0+bmFtZSk7CisKKwltdXRleF9sb2NrKCZmX211ZF9jZWxsX29wc19saXN0
X211dGV4KTsKKworCWl0ZW0gPSBmX211ZF9jZWxsX2l0ZW1fbG9va3VwKG9wcy0+bmFtZSk7CisJ
aWYgKGl0ZW0pIHsKKwkJbGlzdF9kZWwoJml0ZW0tPmxpc3QpOworCQlpZiAoaXRlbS0+cmVmY250
KQorCQkJa2ZyZWUoaXRlbSk7CisJCWVsc2UKKwkJCXByX2VycigiJXM6IENhbid0IHVucmVnaXN0
ZXIgJyVzJyAocmVmY250PSV1KVxuIiwgX19mdW5jX18sIG9wcy0+bmFtZSwgaXRlbS0+cmVmY250
KTsKKwl9IGVsc2UgeworCQlwcl9lcnIoIiVzOiBEaWRuJ3QgZmluZCAnJXMnXG4iLCBfX2Z1bmNf
Xywgb3BzLT5uYW1lKTsKKwl9CisKKwltdXRleF91bmxvY2soJmZfbXVkX2NlbGxfb3BzX2xpc3Rf
bXV0ZXgpOworfQorRVhQT1JUX1NZTUJPTChmX211ZF9jZWxsX3VucmVnaXN0ZXIpOworCitzdGF0
aWMgY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxfb3BzICpmX211ZF9jZWxsX2dldChjb25zdCBjaGFy
ICpuYW1lKQoreworCWNvbnN0IHN0cnVjdCBmX211ZF9jZWxsX29wcyAqb3BzID0gTlVMTDsKKwlz
dHJ1Y3QgZl9tdWRfY2VsbF9vcHNfbGlzdF9pdGVtICppdGVtOworCWNoYXIgbW9kdWxlX25hbWVb
TU9EVUxFX05BTUVfTEVOXTsKKwlib29sIHJldHJpZWQgPSBmYWxzZTsKKworCWZtZGVidWcoMSwg
IiVzOiBuYW1lPSVzXG4iLCBfX2Z1bmNfXywgbmFtZSk7CityZXRyeToKKwltdXRleF9sb2NrKCZm
X211ZF9jZWxsX29wc19saXN0X211dGV4KTsKKwlpdGVtID0gZl9tdWRfY2VsbF9pdGVtX2xvb2t1
cChuYW1lKTsKKwlmbWRlYnVnKDEsICIlczogaXRlbT0lcHhcbiIsIF9fZnVuY19fLCBpdGVtKTsK
KwlpZiAoIWl0ZW0pIHsKKwkJbXV0ZXhfdW5sb2NrKCZmX211ZF9jZWxsX29wc19saXN0X211dGV4
KTsKKwkJaWYgKHJldHJpZWQpCisJCQlyZXR1cm4gTlVMTDsKKworCQlyZXRyaWVkID0gdHJ1ZTsK
KwkJc25wcmludGYobW9kdWxlX25hbWUsIE1PRFVMRV9OQU1FX0xFTiwgInVzYl9mXyVzIiwgbmFt
ZSk7CisJCXN0cnJlcGxhY2UobW9kdWxlX25hbWUsICctJywgJ18nKTsKKwkJaWYgKHJlcXVlc3Rf
bW9kdWxlKG1vZHVsZV9uYW1lKSkKKwkJCXJldHVybiBOVUxMOworCisJCWdvdG8gcmV0cnk7CisJ
fQorCisJaWYgKGl0ZW0gJiYgdHJ5X21vZHVsZV9nZXQoaXRlbS0+b3BzLT5vd25lcikpIHsKKwkJ
b3BzID0gaXRlbS0+b3BzOworCQlpdGVtLT5yZWZjbnQrKzsKKwl9CisKKwltdXRleF91bmxvY2so
JmZfbXVkX2NlbGxfb3BzX2xpc3RfbXV0ZXgpOworCisJcmV0dXJuIG9wczsKK30KKworc3RhdGlj
IHZvaWQgZl9tdWRfY2VsbF9wdXQoY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxfb3BzICpvcHMpCit7
CisJc3RydWN0IGZfbXVkX2NlbGxfb3BzX2xpc3RfaXRlbSAqaXRlbTsKKworCWZtZGVidWcoMSwg
IiVzOiBuYW1lPSVzXG4iLCBfX2Z1bmNfXywgb3BzLT5uYW1lKTsKKworCW11dGV4X2xvY2soJmZf
bXVkX2NlbGxfb3BzX2xpc3RfbXV0ZXgpOworCWl0ZW0gPSBmX211ZF9jZWxsX2l0ZW1fbG9va3Vw
KG9wcy0+bmFtZSk7CisJV0FSTl9PTighaXRlbSB8fCAhaXRlbS0+cmVmY250KTsKKwlpZiAoaXRl
bSAmJiBpdGVtLT5yZWZjbnQpIHsKKwkJbW9kdWxlX3B1dChpdGVtLT5vcHMtPm93bmVyKTsKKwkJ
aXRlbS0+cmVmY250LS07CisJfQorCW11dGV4X3VubG9jaygmZl9tdWRfY2VsbF9vcHNfbGlzdF9t
dXRleCk7Cit9CisKKyNkZWZpbmUgRl9NVURfREVGSU5FX0JVTEtfRU5EUE9JTlRfREVTQ1JJUFRP
UihuYW1lLCBhZGRyLCBzaXplKQlcCisJc3RhdGljIHN0cnVjdCB1c2JfZW5kcG9pbnRfZGVzY3Jp
cHRvciBuYW1lID0gewkJXAorCQkuYkxlbmd0aCA9CQlVU0JfRFRfRU5EUE9JTlRfU0laRSwJXAor
CQkuYkRlc2NyaXB0b3JUeXBlID0JVVNCX0RUX0VORFBPSU5ULAlcCisJCS5iRW5kcG9pbnRBZGRy
ZXNzID0JYWRkciwJCQlcCisJCS5ibUF0dHJpYnV0ZXMgPQkJVVNCX0VORFBPSU5UX1hGRVJfQlVM
SywJXAorCQkud01heFBhY2tldFNpemUgPQljcHVfdG9fbGUxNihzaXplKSwJXAorCX0KKworI2Rl
ZmluZSBGX01VRF9ERUZJTkVfSU5UX0VORFBPSU5UX0RFU0NSSVBUT1IobmFtZSkJCVwKKwlzdGF0
aWMgc3RydWN0IHVzYl9lbmRwb2ludF9kZXNjcmlwdG9yIG5hbWUgPSB7CQlcCisJCS5iTGVuZ3Ro
ID0JCVVTQl9EVF9FTkRQT0lOVF9TSVpFLAlcCisJCS5iRGVzY3JpcHRvclR5cGUgPQlVU0JfRFRf
RU5EUE9JTlQsCVwKKwkJLmJFbmRwb2ludEFkZHJlc3MgPQlVU0JfRElSX0lOLAkJXAorCQkuYm1B
dHRyaWJ1dGVzID0JCVVTQl9FTkRQT0lOVF9YRkVSX0lOVCwJXAorCX0KKworc3RhdGljIHN0cnVj
dCB1c2JfaW50ZXJmYWNlX2Rlc2NyaXB0b3IgZl9tdWRfaW50ZiA9IHsKKwkuYkxlbmd0aCA9CQlV
U0JfRFRfSU5URVJGQUNFX1NJWkUsCisJLmJEZXNjcmlwdG9yVHlwZSA9CVVTQl9EVF9JTlRFUkZB
Q0UsCisJLyouYk51bUVuZHBvaW50cyA9CTIgb3IgMywgKi8KKwkuYkludGVyZmFjZUNsYXNzID0J
VVNCX0NMQVNTX1ZFTkRPUl9TUEVDLAorfTsKKworRl9NVURfREVGSU5FX0JVTEtfRU5EUE9JTlRf
REVTQ1JJUFRPUihmX211ZF9mc19pbl9kZXNjLCBVU0JfRElSX0lOLCAwKTsKK0ZfTVVEX0RFRklO
RV9CVUxLX0VORFBPSU5UX0RFU0NSSVBUT1IoZl9tdWRfZnNfb3V0X2Rlc2MsIFVTQl9ESVJfT1VU
LCAwKTsKK0ZfTVVEX0RFRklORV9JTlRfRU5EUE9JTlRfREVTQ1JJUFRPUihmX211ZF9mc19pbnRf
ZGVzYyk7CisKK3N0YXRpYyBzdHJ1Y3QgdXNiX2Rlc2NyaXB0b3JfaGVhZGVyICpmX211ZF9mc19m
dW5jdGlvbltdID0geworCShzdHJ1Y3QgdXNiX2Rlc2NyaXB0b3JfaGVhZGVyICopJmZfbXVkX2lu
dGYsCisJKHN0cnVjdCB1c2JfZGVzY3JpcHRvcl9oZWFkZXIgKikmZl9tdWRfZnNfaW5fZGVzYywK
Kwkoc3RydWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqKSZmX211ZF9mc19vdXRfZGVzYywKKwlO
VUxMLCAvKiBSb29tIGZvciBvcHRpb25hbCBpbnRlcnJ1cHQgZW5kcG9pbnQgKi8KKwlOVUxMLAor
fTsKKworRl9NVURfREVGSU5FX0JVTEtfRU5EUE9JTlRfREVTQ1JJUFRPUihmX211ZF9oc19pbl9k
ZXNjLCBVU0JfRElSX0lOLCA1MTIpOworRl9NVURfREVGSU5FX0JVTEtfRU5EUE9JTlRfREVTQ1JJ
UFRPUihmX211ZF9oc19vdXRfZGVzYywgVVNCX0RJUl9PVVQsIDUxMik7CitGX01VRF9ERUZJTkVf
SU5UX0VORFBPSU5UX0RFU0NSSVBUT1IoZl9tdWRfaHNfaW50X2Rlc2MpOworCitzdGF0aWMgc3Ry
dWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqZl9tdWRfaHNfZnVuY3Rpb25bXSA9IHsKKwkoc3Ry
dWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqKSZmX211ZF9pbnRmLAorCShzdHJ1Y3QgdXNiX2Rl
c2NyaXB0b3JfaGVhZGVyICopJmZfbXVkX2hzX2luX2Rlc2MsCisJKHN0cnVjdCB1c2JfZGVzY3Jp
cHRvcl9oZWFkZXIgKikmZl9tdWRfaHNfb3V0X2Rlc2MsCisJTlVMTCwgLyogUm9vbSBmb3Igb3B0
aW9uYWwgaW50ZXJydXB0IGVuZHBvaW50ICovCisJTlVMTCwKK307CisKK0ZfTVVEX0RFRklORV9C
VUxLX0VORFBPSU5UX0RFU0NSSVBUT1IoZl9tdWRfc3NfaW5fZGVzYywgVVNCX0RJUl9JTiwgMTAy
NCk7CitGX01VRF9ERUZJTkVfQlVMS19FTkRQT0lOVF9ERVNDUklQVE9SKGZfbXVkX3NzX291dF9k
ZXNjLCBVU0JfRElSX09VVCwgMTAyNCk7CitGX01VRF9ERUZJTkVfSU5UX0VORFBPSU5UX0RFU0NS
SVBUT1IoZl9tdWRfc3NfaW50X2Rlc2MpOworCitzdGF0aWMgc3RydWN0IHVzYl9zc19lcF9jb21w
X2Rlc2NyaXB0b3IgZl9tdWRfc3NfYnVsa19jb21wX2Rlc2MgPSB7CisJLmJMZW5ndGggPQkJVVNC
X0RUX1NTX0VQX0NPTVBfU0laRSwKKwkuYkRlc2NyaXB0b3JUeXBlID0JVVNCX0RUX1NTX0VORFBP
SU5UX0NPTVAsCit9OworCitzdGF0aWMgc3RydWN0IHVzYl9zc19lcF9jb21wX2Rlc2NyaXB0b3Ig
Zl9tdWRfc3NfaW50X2NvbXBfZGVzYyA9IHsKKwkuYkxlbmd0aCA9CQlVU0JfRFRfU1NfRVBfQ09N
UF9TSVpFLAorCS5iRGVzY3JpcHRvclR5cGUgPQlVU0JfRFRfU1NfRU5EUE9JTlRfQ09NUCwKK307
CisKK3N0YXRpYyBzdHJ1Y3QgdXNiX2Rlc2NyaXB0b3JfaGVhZGVyICpmX211ZF9zc19mdW5jdGlv
bltdID0geworCShzdHJ1Y3QgdXNiX2Rlc2NyaXB0b3JfaGVhZGVyICopJmZfbXVkX2ludGYsCisJ
KHN0cnVjdCB1c2JfZGVzY3JpcHRvcl9oZWFkZXIgKikmZl9tdWRfc3NfaW5fZGVzYywKKwkoc3Ry
dWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqKSZmX211ZF9zc19idWxrX2NvbXBfZGVzYywKKwko
c3RydWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqKSZmX211ZF9zc19vdXRfZGVzYywKKwkoc3Ry
dWN0IHVzYl9kZXNjcmlwdG9yX2hlYWRlciAqKSZmX211ZF9zc19idWxrX2NvbXBfZGVzYywKKwlO
VUxMLCAvKiBSb29tIGZvciBvcHRpb25hbCBpbnRlcnJ1cHQgZW5kcG9pbnQsIG90aGVyd2lzZSB0
ZXJtaW5hdG9yICovCisJKHN0cnVjdCB1c2JfZGVzY3JpcHRvcl9oZWFkZXIgKikmZl9tdWRfc3Nf
aW50X2NvbXBfZGVzYywKKwlOVUxMLAorfTsKKworc3RhdGljIHN0cnVjdCB1c2Jfc3RyaW5nIGZf
bXVkX3N0cmluZ19kZWZzW10gPSB7CisJWzBdLnMgPSAiTXVsdGlmdW5jdGlvbiBVU0IgZGV2aWNl
IiwKKwl7ICB9IC8qIGVuZCBvZiBsaXN0ICovCit9OworCitzdGF0aWMgc3RydWN0IHVzYl9nYWRn
ZXRfc3RyaW5ncyBmX211ZF9zdHJpbmdfdGFibGUgPSB7CisJLmxhbmd1YWdlID0JMHgwNDA5LAkv
KiBlbi11cyAqLworCS5zdHJpbmdzID0JZl9tdWRfc3RyaW5nX2RlZnMsCit9OworCitzdGF0aWMg
c3RydWN0IHVzYl9nYWRnZXRfc3RyaW5ncyAqZl9tdWRfc3RyaW5nc1tdID0geworCSZmX211ZF9z
dHJpbmdfdGFibGUsCisJTlVMTCwKK307CisKK3N0YXRpYyB2b2lkIGZtdWRfaXJxX3JlcV9xdWV1
ZShzdHJ1Y3QgZl9tdWQgKmZtdWQpCit7CisJdW5zaWduZWQgaW50IG5sb25ncyA9IERJVl9ST1VO
RF9VUChmbXVkLT5udW1fY2VsbHMsIEJJVFNfUEVSX0xPTkcpOworCXVuc2lnbmVkIGludCBuYnl0
ZXMgPSBESVZfUk9VTkRfVVAoZm11ZC0+bnVtX2NlbGxzLCBCSVRTX1BFUl9CWVRFKTsKKwl1bnNp
Z25lZCBpbnQgaSwgaWxvbmcsIGlidWYgPSAwOworCWludCByZXQ7CisJX19sZTE2ICp0YWcgPSBm
bXVkLT5pcnFfcmVxLT5idWY7CisJdTggKmJ1ZiA9IGZtdWQtPmlycV9yZXEtPmJ1ZiArIHNpemVv
Zih1MTYpOworCisJZm1kZWJ1ZygzLCAiJXM6IGlycV9zdGF0dXM6ICUqcGJcbiIsIF9fZnVuY19f
LCBmbXVkLT5udW1fY2VsbHMsIGZtdWQtPmlycV9zdGF0dXMpOworCisJKnRhZyA9IGNwdV90b19s
ZTE2KCsrZm11ZC0+aW50X3RhZyk7CisKKwlmb3IgKGlsb25nID0gMDsgaWxvbmcgPCBubG9uZ3M7
IGlsb25nKyspIHsKKwkJdW5zaWduZWQgbG9uZyB2YWwgPSBmbXVkLT5pcnFfc3RhdHVzW2lsb25n
XTsKKworCQlmbXVkLT5pcnFfc3RhdHVzW2lsb25nXSA9IDA7CisKKwkJZm9yIChpID0gMDsgaSA8
IChCSVRTX1BFUl9MT05HIC8gQklUU19QRVJfQllURSkgJiYgaWJ1ZiA8IG5ieXRlczsgaSsrLCBp
YnVmKyspIHsKKwkJCWJ1ZltpYnVmXSA9IHZhbCAmIDB4ZmY7CisJCQl2YWwgPj49IDg7CisJCX0K
Kwl9CisKKwlmbWRlYnVnKDMsICIlczogcmVxLT5idWY6ICUqcGhcbiIsIF9fZnVuY19fLCBmbXVk
LT5pcnFfcmVxLT5sZW5ndGgsIGZtdWQtPmlycV9yZXEtPmJ1Zik7CisKKwlyZXQgPSB1c2JfZXBf
cXVldWUoZm11ZC0+aXJxX2VwLCBmbXVkLT5pcnFfcmVxLCBHRlBfQVRPTUlDKTsKKwlpZiAoIXJl
dCkKKwkJZm11ZC0+aXJxX3F1ZXVlZCA9IHRydWU7CisJZWxzZQorCQlwcl9lcnIoIiVzOiBGYWls
ZWQgdG8gcXVldWUgaXJxIHJlcSwgZXJyb3I9JWRcbiIsIF9fZnVuY19fLCByZXQpOworfQorCitz
dGF0aWMgdm9pZCBmbXVkX2lycV9yZXFfY29tcGxldGUoc3RydWN0IHVzYl9lcCAqZXAsIHN0cnVj
dCB1c2JfcmVxdWVzdCAqcmVxKQoreworCXN0cnVjdCBmX211ZCAqZm11ZCA9IHJlcS0+Y29udGV4
dDsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJc3dpdGNoIChyZXEtPnN0YXR1cykgeworCWNh
c2UgMDoKKwkJYnJlYWs7CisJY2FzZSAtRUNPTk5BQk9SVEVEOgkJLyogaGFyZHdhcmUgZm9yY2Vk
IGVwIHJlc2V0ICovCisJY2FzZSAtRUNPTk5SRVNFVDoJCS8qIHJlcXVlc3QgZGVxdWV1ZWQgKi8K
KwljYXNlIC1FU0hVVERPV046CQkvKiBkaXNjb25uZWN0IGZyb20gaG9zdCAqLworCQlmbWRlYnVn
KDEsICIlczogYWJvcnQsIHN0YXR1cz0lZFxuIiwgX19mdW5jX18sIHJlcS0+c3RhdHVzKTsKKwkJ
cmV0dXJuOworCWRlZmF1bHQ6CisJCXByX2VycigiJXM6IGlycSByZXF1ZXN0IGZhaWxlZCwgZXJy
b3I9JWRcbiIsIF9fZnVuY19fLCByZXEtPnN0YXR1cyk7CisJCWJyZWFrOworCX0KKworCXNwaW5f
bG9ja19pcnFzYXZlKCZmbXVkLT5pcnFfbG9jaywgZmxhZ3MpOworCisJZm11ZC0+aXJxX3F1ZXVl
ZCA9IGZhbHNlOworCisJaWYgKCFiaXRtYXBfZW1wdHkoZm11ZC0+aXJxX3N0YXR1cywgZm11ZC0+
bnVtX2NlbGxzKSkKKwkJZm11ZF9pcnFfcmVxX3F1ZXVlKGZtdWQpOworCisJc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmZm11ZC0+aXJxX2xvY2ssIGZsYWdzKTsKK30KKworLyoqCisgKiBmX211ZF9p
cnEoKSAtIFNlbmQgYW4gaW50ZXJydXB0CisgKiBAY2VsbDogQ2VsbAorICoKKyAqIFRoaXMgZnVu
Y3Rpb24gcXVldWVzIGFuIGludGVycnVwdCB0byBiZSBzZW50IHRvIHRoZSBob3N0LgorICoKKyAq
IFJldHVybnM6CisgKiBUcnVlIGlmIHRoZXJlJ3MgYSBwZW5kaW5nIGludGVycnVwdCB0aGF0IGhh
cyBub3QgYmVlbiBzZW50IHlldCwgb3RoZXJ3aXNlIGZhbHNlLgorICovCitib29sIGZfbXVkX2ly
cShzdHJ1Y3QgZl9tdWRfY2VsbCAqY2VsbCkKK3sKKwlzdHJ1Y3QgZl9tdWQgKmZtdWQgPSBjZWxs
LT5mbXVkOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9vbCByZXQ7CisKKwlpZiAoV0FSTl9P
Tl9PTkNFKCFmbXVkIHx8ICFmbXVkLT5pcnFfZW5hYmxlZCkpCisJCXJldHVybiBmYWxzZTsKKwor
CXNwaW5fbG9ja19pcnFzYXZlKCZmbXVkLT5pcnFfbG9jaywgZmxhZ3MpOworCisJcmV0ID0gdGVz
dF9hbmRfc2V0X2JpdChjZWxsLT5pbmRleCwgZm11ZC0+aXJxX3N0YXR1cyk7CisKKwlpZiAoIWZt
dWQtPmlycV9xdWV1ZWQpCisJCWZtdWRfaXJxX3JlcV9xdWV1ZShmbXVkKTsKKworCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmZtdWQtPmlycV9sb2NrLCBmbGFncyk7CisKKwlmbWRlYnVnKDEsICIl
czogY2VsbC0+aW5kZXg9JXUgd2FzX3NldD0ldVxuIiwgX19mdW5jX18sIGNlbGwtPmluZGV4LCBy
ZXQpOworCisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0woZl9tdWRfaXJxKTsKKworc3Rh
dGljIGludCBmX211ZF9zZXRfYWx0KHN0cnVjdCB1c2JfZnVuY3Rpb24gKmYsIHVuc2lnbmVkIGlu
dCBpbnRmLCB1bnNpZ25lZCBpbnQgYWx0KQoreworCXN0cnVjdCBmX211ZCAqZm11ZCA9IGZ1bmNf
dG9fZl9tdWQoZik7CisKKwlmbWRlYnVnKDEsICIlczogaW50Zj0ldSwgYWx0PSV1XG4iLCBfX2Z1
bmNfXywgaW50ZiwgYWx0KTsKKworCWlmIChhbHQgfHwgaW50ZiAhPSBmbXVkLT5pbnRlcmZhY2Vf
aWQpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKGZtdWQtPmlycV9lcCkgeworCQlzdHJ1Y3Qg
dXNiX2NvbXBvc2l0ZV9kZXYgKmNkZXYgPSBmLT5jb25maWctPmNkZXY7CisKKwkJaWYgKCFmbXVk
LT5pcnFfZXAtPmRlc2MpIHsKKwkJCWlmIChjb25maWdfZXBfYnlfc3BlZWQoY2Rldi0+Z2FkZ2V0
LCBmLCBmbXVkLT5pcnFfZXApKSB7CisJCQkJZm11ZC0+aXJxX2VwLT5kZXNjID0gTlVMTDsKKwkJ
CQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0KKwkJfQorCisJCXVzYl9lcF9kaXNhYmxlKGZtdWQtPmly
cV9lcCk7CisJCXVzYl9lcF9lbmFibGUoZm11ZC0+aXJxX2VwKTsKKwkJZm11ZC0+aXJxX2VuYWJs
ZWQgPSB0cnVlOworCX0KKworCXJldHVybiBtdWRfcmVnbWFwX3NldF9hbHQoZm11ZC0+bXJlZywg
Zik7Cit9CisKK3N0YXRpYyBpbnQgZl9tdWRfc2V0dXAoc3RydWN0IHVzYl9mdW5jdGlvbiAqZiwg
Y29uc3Qgc3RydWN0IHVzYl9jdHJscmVxdWVzdCAqY3RybCkKK3sKKwlzdHJ1Y3QgZl9tdWQgKmZt
dWQgPSBmdW5jX3RvX2ZfbXVkKGYpOworCisJcmV0dXJuIG11ZF9yZWdtYXBfc2V0dXAoZm11ZC0+
bXJlZywgZiwgY3RybCk7Cit9CisKK3N0YXRpYyB2b2lkIGZfbXVkX2Rpc2FibGUoc3RydWN0IHVz
Yl9mdW5jdGlvbiAqZikKK3sKKwlzdHJ1Y3QgZl9tdWQgKmZtdWQgPSBmdW5jX3RvX2ZfbXVkKGYp
OworCisJZm1kZWJ1ZygxLCAiJXNcbiIsIF9fZnVuY19fKTsKKworCWlmIChmbXVkLT5pcnFfZXAp
IHsKKwkJZm11ZC0+aW50X3RhZyA9IDA7CisJCWZtdWQtPmlycV9lbmFibGVkID0gZmFsc2U7CisJ
CXVzYl9lcF9kaXNhYmxlKGZtdWQtPmlycV9lcCk7CisJfQorCisJbXVkX3JlZ21hcF9zdG9wKGZt
dWQtPm1yZWcpOworfQorCitzdGF0aWMgdm9pZCBmX211ZF91bmJpbmQoc3RydWN0IHVzYl9jb25m
aWd1cmF0aW9uICpjLCBzdHJ1Y3QgdXNiX2Z1bmN0aW9uICpmKQoreworCXN0cnVjdCBmX211ZCAq
Zm11ZCA9IGZ1bmNfdG9fZl9tdWQoZik7CisJc3RydWN0IGZfbXVkX2NlbGwgKmNlbGw7CisJdW5z
aWduZWQgaW50IGk7CisKKwlmbWRlYnVnKDEsICIlc1xuIiwgX19mdW5jX18pOworCisJZm9yIChp
ID0gMDsgaSA8IGZtdWQtPm51bV9jZWxsczsgaSsrKSB7CisJCWNlbGwgPSBmbXVkLT5jZWxsc1tp
XTsKKwkJY2VsbC0+b3BzLT51bmJpbmQoY2VsbCk7CisJfQorCW11ZF9yZWdtYXBfY2xlYW51cChm
bXVkLT5tcmVnKTsKKwlmbXVkLT5tcmVnID0gTlVMTDsKKwl1c2JfZnJlZV9hbGxfZGVzY3JpcHRv
cnMoZik7CisJaWYgKGZtdWQtPmlycV9yZXEpIHsKKwkJa2ZyZWUoZm11ZC0+aXJxX3JlcS0+YnVm
KTsKKwkJdXNiX2VwX2ZyZWVfcmVxdWVzdChmbXVkLT5pcnFfZXAsIGZtdWQtPmlycV9yZXEpOwor
CQlmbXVkLT5pcnFfcmVxID0gTlVMTDsKKwkJYml0bWFwX2ZyZWUoZm11ZC0+aXJxX3N0YXR1cyk7
CisJCWZtdWQtPmlycV9zdGF0dXMgPSBOVUxMOworCX0KK30KKworc3RhdGljIGludCBmX211ZF9i
aW5kKHN0cnVjdCB1c2JfY29uZmlndXJhdGlvbiAqYywgc3RydWN0IHVzYl9mdW5jdGlvbiAqZikK
K3sKKwlzdHJ1Y3QgdXNiX2NvbXBvc2l0ZV9kZXYgKmNkZXYgPSBjLT5jZGV2OworCXN0cnVjdCBm
X211ZCAqZm11ZCA9IGZ1bmNfdG9fZl9tdWQoZik7CisJc3RydWN0IHVzYl9lcCAqaW5fZXAsICpv
dXRfZXA7CisJdW5zaWduZWQgaW50IG1heF9pbmRleCA9IDA7CisJc3RydWN0IHVzYl9zdHJpbmcg
KnVzOworCXN0cnVjdCBtdWRfcmVnbWFwICptcmVnOworCWludCBpLCByZXQ7CisKKwlmbWRlYnVn
KDEsICIlc1xuIiwgX19mdW5jX18pOworCisJZm9yIChpID0gMDsgaSA8IGZtdWQtPm51bV9jZWxs
czsgaSsrKQorCQltYXhfaW5kZXggPSBtYXgoZm11ZC0+Y2VsbHNbaV0tPmluZGV4LCBtYXhfaW5k
ZXgpOworCisJaWYgKGZtdWQtPm51bV9jZWxscyAhPSBtYXhfaW5kZXggKyAxKSB7CisJCXByX2Vy
cigiQ2VsbCBpbmRpY2VzIGFyZSBub3QgY29udGludW91c1xuIik7CisJCXJldHVybiAtRUlOVkFM
OworCX0KKworCXVzID0gdXNiX2dzdHJpbmdzX2F0dGFjaChjZGV2LCBmX211ZF9zdHJpbmdzLAor
CQkJCSBBUlJBWV9TSVpFKGZfbXVkX3N0cmluZ19kZWZzKSk7CisJaWYgKElTX0VSUih1cykpCisJ
CXJldHVybiBQVFJfRVJSKHVzKTsKKworCWZfbXVkX2ludGYuaUludGVyZmFjZSA9IHVzWzBdLmlk
OworCisJcmV0ID0gdXNiX2ludGVyZmFjZV9pZChjLCBmKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0
dXJuIHJldDsKKworCWZtdWQtPmludGVyZmFjZV9pZCA9IHJldDsKKwlmX211ZF9pbnRmLmJJbnRl
cmZhY2VOdW1iZXIgPSBmbXVkLT5pbnRlcmZhY2VfaWQ7CisKKwlpbl9lcCA9IHVzYl9lcF9hdXRv
Y29uZmlnKGNkZXYtPmdhZGdldCwgJmZfbXVkX2ZzX2luX2Rlc2MpOworCW91dF9lcCA9IHVzYl9l
cF9hdXRvY29uZmlnKGNkZXYtPmdhZGdldCwgJmZfbXVkX2ZzX291dF9kZXNjKTsKKwlpZiAoIWlu
X2VwIHx8ICFvdXRfZXApCisJCXJldHVybiAtRU5PREVWOworCisJZl9tdWRfaHNfaW5fZGVzYy5i
RW5kcG9pbnRBZGRyZXNzID0gZl9tdWRfZnNfaW5fZGVzYy5iRW5kcG9pbnRBZGRyZXNzOworCWZf
bXVkX2hzX291dF9kZXNjLmJFbmRwb2ludEFkZHJlc3MgPSBmX211ZF9mc19vdXRfZGVzYy5iRW5k
cG9pbnRBZGRyZXNzOworCisJZl9tdWRfc3NfaW5fZGVzYy5iRW5kcG9pbnRBZGRyZXNzID0gZl9t
dWRfZnNfaW5fZGVzYy5iRW5kcG9pbnRBZGRyZXNzOworCWZfbXVkX3NzX291dF9kZXNjLmJFbmRw
b2ludEFkZHJlc3MgPSBmX211ZF9mc19vdXRfZGVzYy5iRW5kcG9pbnRBZGRyZXNzOworCisJaWYg
KGZtdWQtPmludGVycnVwdF9pbnRlcnZhbF9tcykgeworCQl1bnNpZ25lZCBpbnQgYnVmbGVuID0g
c2l6ZW9mKHUxNikgKyBESVZfUk9VTkRfVVAoZm11ZC0+bnVtX2NlbGxzLCA4KTsKKwkJdW5zaWdu
ZWQgaW50IGludGVydmFsX21zID0gZm11ZC0+aW50ZXJydXB0X2ludGVydmFsX21zOworCQl1bnNp
Z25lZCBpbnQgaW50ZXJ2YWxfaHNfc3M7CisKKwkJaW50ZXJ2YWxfaHNfc3MgPSByb3VuZHVwX3Bv
d19vZl90d28oaW50ZXJ2YWxfbXMgKiA4KTsgLyogMTI1dXMgZnJhbWVzICovCisJCWludGVydmFs
X2hzX3NzID0gaWxvZzIoaW50ZXJ2YWxfaHNfc3MpICsgMTsgLyogMl4oYkludGVydmFsLTEpIGVu
Y29kaW5nICovCisJCWludGVydmFsX2hzX3NzID0gbWluX3QodW5zaWduZWQgaW50LCBpbnRlcnZh
bF9oc19zcywgMTYpOyAvKiBtYXggNDA5Nm1zICovCisKKwkJZl9tdWRfZnNfaW50X2Rlc2MuYklu
dGVydmFsID0gbWluX3QodW5zaWduZWQgaW50LCBpbnRlcnZhbF9tcywgMjU1KTsKKwkJZl9tdWRf
ZnNfaW50X2Rlc2Mud01heFBhY2tldFNpemUgPSBjcHVfdG9fbGUxNihidWZsZW4pOworCQlmX211
ZF9oc19pbnRfZGVzYy5iSW50ZXJ2YWwgPSBpbnRlcnZhbF9oc19zczsKKwkJZl9tdWRfaHNfaW50
X2Rlc2Mud01heFBhY2tldFNpemUgPSBjcHVfdG9fbGUxNihidWZsZW4pOworCQlmX211ZF9zc19p
bnRfZGVzYy5iSW50ZXJ2YWwgPSBpbnRlcnZhbF9oc19zczsKKwkJZl9tdWRfc3NfaW50X2Rlc2Mu
d01heFBhY2tldFNpemUgPSBjcHVfdG9fbGUxNihidWZsZW4pOworCQlmX211ZF9zc19pbnRfY29t
cF9kZXNjLndCeXRlc1BlckludGVydmFsID0gY3B1X3RvX2xlMTYoYnVmbGVuKTsKKworCQlmbXVk
LT5pcnFfZXAgPSB1c2JfZXBfYXV0b2NvbmZpZyhjZGV2LT5nYWRnZXQsICZmX211ZF9mc19pbnRf
ZGVzYyk7CisJCWlmICghZm11ZC0+aXJxX2VwKQorCQkJcmV0dXJuIC1FTk9ERVY7CisKKwkJZl9t
dWRfaHNfaW50X2Rlc2MuYkVuZHBvaW50QWRkcmVzcyA9IGZfbXVkX2ZzX2ludF9kZXNjLmJFbmRw
b2ludEFkZHJlc3M7CisJCWZfbXVkX3NzX2ludF9kZXNjLmJFbmRwb2ludEFkZHJlc3MgPSBmX211
ZF9mc19pbnRfZGVzYy5iRW5kcG9pbnRBZGRyZXNzOworCisJCWZtdWQtPmlycV9yZXEgPSB1c2Jf
ZXBfYWxsb2NfcmVxdWVzdChmbXVkLT5pcnFfZXAsIEdGUF9LRVJORUwpOworCQlpZiAoIWZtdWQt
PmlycV9yZXEpIHsKKwkJCXJldCA9IC1FTk9NRU07CisJCQlnb3RvIGZhaWxfZnJlZV9pcnE7CisJ
CX0KKworCQlmbXVkLT5pcnFfcmVxLT5jb21wbGV0ZSA9IGZtdWRfaXJxX3JlcV9jb21wbGV0ZTsK
KwkJZm11ZC0+aXJxX3JlcS0+bGVuZ3RoID0gYnVmbGVuOworCQlmbXVkLT5pcnFfcmVxLT5jb250
ZXh0ID0gZm11ZDsKKwkJZm11ZC0+aXJxX3JlcS0+YnVmID0ga21hbGxvYyhidWZsZW4sIEdGUF9L
RVJORUwpOworCQlpZiAoIWZtdWQtPmlycV9yZXEtPmJ1ZikgeworCQkJcmV0ID0gLUVOT01FTTsK
KwkJCWdvdG8gZmFpbF9mcmVlX2lycTsKKwkJfQorCisJCWZtdWQtPmlycV9zdGF0dXMgPSBiaXRt
YXBfemFsbG9jKGZtdWQtPm51bV9jZWxscywgR0ZQX0tFUk5FTCk7CisJCWlmICghZm11ZC0+aXJx
X3N0YXR1cykgeworCQkJcmV0ID0gLUVOT01FTTsKKwkJCWdvdG8gZmFpbF9mcmVlX2lycTsKKwkJ
fQorCisJCWZfbXVkX2ludGYuYk51bUVuZHBvaW50cyA9IDM7CisJCWZfbXVkX2ZzX2Z1bmN0aW9u
WzNdID0gKHN0cnVjdCB1c2JfZGVzY3JpcHRvcl9oZWFkZXIgKikmZl9tdWRfZnNfaW50X2Rlc2M7
CisJCWZfbXVkX2hzX2Z1bmN0aW9uWzNdID0gKHN0cnVjdCB1c2JfZGVzY3JpcHRvcl9oZWFkZXIg
KikmZl9tdWRfaHNfaW50X2Rlc2M7CisJCWZfbXVkX3NzX2Z1bmN0aW9uWzVdID0gKHN0cnVjdCB1
c2JfZGVzY3JpcHRvcl9oZWFkZXIgKikmZl9tdWRfc3NfaW50X2Rlc2M7CisJfSBlbHNlIHsKKwkJ
Zl9tdWRfaW50Zi5iTnVtRW5kcG9pbnRzID0gMjsKKwkJZl9tdWRfZnNfZnVuY3Rpb25bM10gPSBO
VUxMOworCQlmX211ZF9oc19mdW5jdGlvblszXSA9IE5VTEw7CisJCWZfbXVkX3NzX2Z1bmN0aW9u
WzVdID0gTlVMTDsKKwl9CisKKwlyZXQgPSB1c2JfYXNzaWduX2Rlc2NyaXB0b3JzKGYsIGZfbXVk
X2ZzX2Z1bmN0aW9uLCBmX211ZF9oc19mdW5jdGlvbiwKKwkJCQkgICAgIGZfbXVkX3NzX2Z1bmN0
aW9uLCBOVUxMKTsKKwlpZiAocmV0KQorCQlnb3RvIGZhaWxfZnJlZV9pcnE7CisKKwlmb3IgKGkg
PSAwOyBpIDwgZm11ZC0+bnVtX2NlbGxzOyBpKyspIHsKKwkJc3RydWN0IGZfbXVkX2NlbGwgKmNl
bGwgPSBmbXVkLT5jZWxsc1tpXTsKKworCQlyZXQgPSBjZWxsLT5vcHMtPmJpbmQoY2VsbCk7CisJ
CWlmIChyZXQpIHsKKwkJCXByX2VycigiJXM6IEZhaWxlZCB0byBiaW5kIGNlbGwgJyVzJyByZXQ9
JWQiLAorCQkJICAgICAgIF9fZnVuY19fLCBjZWxsLT5vcHMtPm5hbWUsIHJldCk7CisJCQlnb3Rv
IGZhaWxfdW5iaW5kOworCQl9CisJfQorCisJbXJlZyA9IG11ZF9yZWdtYXBfaW5pdChjZGV2LCBp
bl9lcCwgb3V0X2VwLCBmbXVkLT5jZWxscywgZm11ZC0+bnVtX2NlbGxzKTsKKwlpZiAoSVNfRVJS
KG1yZWcpKSB7CisJCXJldCA9IFBUUl9FUlIobXJlZyk7CisJCWdvdG8gZmFpbF91bmJpbmQ7CisJ
fQorCisJZm11ZC0+bXJlZyA9IG1yZWc7CisKKwlwcl9pbmZvKCIlczogJXMgc3BlZWQgSU4vJXMg
T1VULyVzXG4iLCBfX2Z1bmNfXywKKwkJZ2FkZ2V0X2lzX3N1cGVyc3BlZWQoYy0+Y2Rldi0+Z2Fk
Z2V0KSA/ICJzdXBlciIgOgorCQlnYWRnZXRfaXNfZHVhbHNwZWVkKGMtPmNkZXYtPmdhZGdldCkg
PyAiZHVhbCIgOiAiZnVsbCIsCisJCWluX2VwLT5uYW1lLCBvdXRfZXAtPm5hbWUpOworCisJcmV0
dXJuIDA7CisKK2ZhaWxfdW5iaW5kOgorCXdoaWxlICgtLWkgPj0gMCkgeworCQlzdHJ1Y3QgZl9t
dWRfY2VsbCAqY2VsbCA9IGZtdWQtPmNlbGxzW2ldOworCisJCWNlbGwtPm9wcy0+dW5iaW5kKGNl
bGwpOworCX0KKwl1c2JfZnJlZV9hbGxfZGVzY3JpcHRvcnMoZik7CitmYWlsX2ZyZWVfaXJxOgor
CWlmIChmbXVkLT5pcnFfcmVxKSB7CisJCWtmcmVlKGZtdWQtPmlycV9yZXEtPmJ1Zik7CisJCXVz
Yl9lcF9mcmVlX3JlcXVlc3QoZm11ZC0+aXJxX2VwLCBmbXVkLT5pcnFfcmVxKTsKKwkJZm11ZC0+
aXJxX3JlcSA9IE5VTEw7CisJCWJpdG1hcF9mcmVlKGZtdWQtPmlycV9zdGF0dXMpOworCQlmbXVk
LT5pcnFfc3RhdHVzID0gTlVMTDsKKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgdm9p
ZCBmX211ZF9mcmVlX2Z1bmMoc3RydWN0IHVzYl9mdW5jdGlvbiAqZikKK3sKKwlzdHJ1Y3QgZl9t
dWRfb3B0cyAqb3B0cyA9IGNvbnRhaW5lcl9vZihmLT5maSwgc3RydWN0IGZfbXVkX29wdHMsIGZ1
bmNfaW5zdCk7CisJc3RydWN0IGZfbXVkICpmbXVkID0gZnVuY190b19mX211ZChmKTsKKwl1bnNp
Z25lZCBpbnQgaTsKKworCWZtZGVidWcoMSwgIiVzXG4iLCBfX2Z1bmNfXyk7CisKKwltdXRleF9s
b2NrKCZvcHRzLT5sb2NrKTsKKwlvcHRzLT5yZWZjbnQtLTsKKwlmb3IgKGkgPSAwOyBpIDwgZm11
ZC0+bnVtX2NlbGxzOyBpKyspIHsKKwkJY29uZmlnZnNfdW5kZXBlbmRfaXRlbSgmZm11ZC0+Y2Vs
bHNbaV0tPmdyb3VwLmNnX2l0ZW0pOworCQlmbXVkLT5jZWxsc1tpXS0+Zm11ZCA9IE5VTEw7CisJ
fQorCW11dGV4X3VubG9jaygmb3B0cy0+bG9jayk7CisKKwlrZnJlZShmbXVkLT5jZWxscyk7CisJ
a2ZyZWUoZm11ZCk7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgdXNiX2Z1bmN0aW9uICpmX211ZF9hbGxv
Y19mdW5jKHN0cnVjdCB1c2JfZnVuY3Rpb25faW5zdGFuY2UgKmZpKQoreworCXN0cnVjdCBmX211
ZF9vcHRzICpvcHRzID0gY29udGFpbmVyX29mKGZpLCBzdHJ1Y3QgZl9tdWRfb3B0cywgZnVuY19p
bnN0KTsKKwl1bnNpZ25lZCBpbnQgbWF4X2luZGV4ID0gMCwgaW50ZXJydXB0X2ludGVydmFsX21z
ID0gVUlOVF9NQVg7CisJc3RydWN0IHVzYl9mdW5jdGlvbiAqZnVuYzsKKwlzdHJ1Y3QgZl9tdWRf
Y2VsbCAqY2VsbDsKKwlzdHJ1Y3QgZl9tdWQgKmZtdWQ7CisJaW50IHJldCA9IDA7CisKKwlmbWRl
YnVnKDEsICIlc1xuIiwgX19mdW5jX18pOworCisJZm11ZCA9IGt6YWxsb2Moc2l6ZW9mKCpmbXVk
KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFmbXVkKQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsK
KworCXNwaW5fbG9ja19pbml0KCZmbXVkLT5pcnFfbG9jayk7CisKKwltdXRleF9sb2NrKCZvcHRz
LT5sb2NrKTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnkoY2VsbCwgJm9wdHMtPmNlbGxzLCBub2Rl
KSB7CisJCW1heF9pbmRleCA9IG1heChtYXhfaW5kZXgsIGNlbGwtPmluZGV4KTsKKwkJZm11ZC0+
bnVtX2NlbGxzKys7CisJfQorCisJaWYgKCFmbXVkLT5udW1fY2VsbHMpIHsKKwkJcmV0ID0gLUVO
T0VOVDsKKwkJZ290byB1bmxvY2s7CisJfQorCisJaWYgKGZtdWQtPm51bV9jZWxscyAhPSBtYXhf
aW5kZXggKyAxKSB7CisJCXByX2VycigiQ2VsbCBpbmRpY2VzIGFyZSBub3QgY29udGludW91c1xu
Iik7CisJCXJldCA9IC1FSU5WQUw7CisJCWdvdG8gdW5sb2NrOworCX0KKworCWZtdWQtPmNlbGxz
ID0ga2NhbGxvYyhmbXVkLT5udW1fY2VsbHMsIHNpemVvZigqZm11ZC0+Y2VsbHMpLCBHRlBfS0VS
TkVMKTsKKwlpZiAoIWZtdWQtPmNlbGxzKSB7CisJCXJldCA9IC1FTk9NRU07CisJCWdvdG8gdW5s
b2NrOworCX0KKworCWxpc3RfZm9yX2VhY2hfZW50cnkoY2VsbCwgJm9wdHMtPmNlbGxzLCBub2Rl
KSB7CisJCS8qIFByZXZlbnQgdGhlIGNlbGwgZGlyIGZyb20gYmVpbmcgZGVsZXRlZCAqLworCQly
ZXQgPSBjb25maWdmc19kZXBlbmRfaXRlbShjZWxsLT5ncm91cC5jZ19zdWJzeXMsICZjZWxsLT5n
cm91cC5jZ19pdGVtKTsKKwkJaWYgKHJldCkKKwkJCWdvdG8gdW5sb2NrOworCisJCWZtdWQtPmNl
bGxzW2NlbGwtPmluZGV4XSA9IGNlbGw7CisJCWNlbGwtPmZtdWQgPSBmbXVkOworCQlpZiAoY2Vs
bC0+b3BzLT5pbnRlcnJ1cHRfaW50ZXJ2YWxfbXMpCisJCQlpbnRlcnJ1cHRfaW50ZXJ2YWxfbXMg
PSBtaW4oY2VsbC0+b3BzLT5pbnRlcnJ1cHRfaW50ZXJ2YWxfbXMsCisJCQkJCQkgICAgaW50ZXJy
dXB0X2ludGVydmFsX21zKTsKKwl9CisKKwlpZiAoaW50ZXJydXB0X2ludGVydmFsX21zICE9IFVJ
TlRfTUFYKSB7CisJCWlmIChvcHRzLT5pbnRlcnJ1cHRfaW50ZXJ2YWxfbXMgPT0gLTEpCisJCQlm
bXVkLT5pbnRlcnJ1cHRfaW50ZXJ2YWxfbXMgPSBpbnRlcnJ1cHRfaW50ZXJ2YWxfbXM7CisJCWVs
c2UKKwkJCWZtdWQtPmludGVycnVwdF9pbnRlcnZhbF9tcyA9IG9wdHMtPmludGVycnVwdF9pbnRl
cnZhbF9tczsKKwl9CisKKwlmbWRlYnVnKDEsICIgICAgaW50ZXJydXB0X2ludGVydmFsX21zPSVk
XG4iLCBmbXVkLT5pbnRlcnJ1cHRfaW50ZXJ2YWxfbXMpOworCisJb3B0cy0+cmVmY250Kys7Cit1
bmxvY2s6CisJbXV0ZXhfdW5sb2NrKCZvcHRzLT5sb2NrKTsKKworCWlmIChyZXQpCisJCWdvdG8g
ZXJyb3I7CisKKwlmdW5jID0gJmZtdWQtPmZ1bmM7CisJZnVuYy0+bmFtZSA9ICJmX211ZCI7CisJ
ZnVuYy0+YmluZCA9IGZfbXVkX2JpbmQ7CisJZnVuYy0+dW5iaW5kID0gZl9tdWRfdW5iaW5kOwor
CWZ1bmMtPnNldF9hbHQgPSBmX211ZF9zZXRfYWx0OworCWZ1bmMtPnNldHVwID0gZl9tdWRfc2V0
dXA7CisJZnVuYy0+ZGlzYWJsZSA9IGZfbXVkX2Rpc2FibGU7CisJZnVuYy0+ZnJlZV9mdW5jID0g
Zl9tdWRfZnJlZV9mdW5jOworCisJcmV0dXJuIGZ1bmM7CisKK2Vycm9yOgorCWlmIChmbXVkLT5j
ZWxscykgeworCQl1bnNpZ25lZCBpbnQgaTsKKworCQlmb3IgKGkgPSAwOyBpIDwgZm11ZC0+bnVt
X2NlbGxzOyBpKyspIHsKKwkJCWNlbGwgPSBmbXVkLT5jZWxsc1tpXTsKKwkJCWlmIChjZWxsKQor
CQkJCWNvbmZpZ2ZzX3VuZGVwZW5kX2l0ZW0oJmNlbGwtPmdyb3VwLmNnX2l0ZW0pOworCQl9CisJ
CWtmcmVlKGZtdWQtPmNlbGxzKTsKKwl9CisJa2ZyZWUoZm11ZCk7CisKKwlyZXR1cm4gRVJSX1BU
UihyZXQpOworfQorCitGX01VRF9PUFRfSU5UKGZfbXVkX29wdHMsIGludGVycnVwdF9pbnRlcnZh
bF9tcywgLTEsIElOVF9NQVgpOworCitzdGF0aWMgc3RydWN0IGNvbmZpZ2ZzX2F0dHJpYnV0ZSAq
Zl9tdWRfYXR0cnNbXSA9IHsKKwkmZl9tdWRfb3B0c19hdHRyX2ludGVycnVwdF9pbnRlcnZhbF9t
cywKKwlOVUxMLAorfTsKKworc3RhdGljIHN0cnVjdCBjb25maWdfZ3JvdXAgKmZfbXVkX2NlbGxf
bWFrZV9ncm91cChzdHJ1Y3QgY29uZmlnX2dyb3VwICpncm91cCwKKwkJCQkJCSAgY29uc3QgY2hh
ciAqbmFtZSkKK3sKKwlzdHJ1Y3QgZl9tdWRfb3B0cyAqb3B0cyA9IGNpX3RvX2ZfbXVkX29wdHMo
Jmdyb3VwLT5jZ19pdGVtKTsKKwljaGFyICpjZWxsX25hbWUsICpjZWxsX2luZGV4X3N0ciwgKmJ1
ZiA9IE5VTEw7CisJY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxfb3BzICpvcHM7CisJc3RydWN0IGZf
bXVkX2NlbGwgKmNlbGw7CisJaW50IHJldCA9IDA7CisJdTggaW5kZXg7CisKKwlmbWRlYnVnKDEs
ICIlczogbmFtZT0lc1xuIiwgX19mdW5jX18sIG5hbWUpOworCisJbXV0ZXhfbG9jaygmb3B0cy0+
bG9jayk7CisJaWYgKG9wdHMtPnJlZmNudCkgeworCQlyZXQgPSAtRUJVU1k7CisJCWdvdG8gb3V0
X3VubG9jazsKKwl9CisKKwlidWYgPSBrc3RyZHVwKG5hbWUsIEdGUF9LRVJORUwpOworCWlmICgh
YnVmKSB7CisJCXJldCA9IC1FTk9NRU07CisJCWdvdG8gb3V0X3VubG9jazsKKwl9CisKKwljZWxs
X2luZGV4X3N0ciA9IGJ1ZjsKKwljZWxsX25hbWUgPSBzdHJzZXAoJmNlbGxfaW5kZXhfc3RyLCAi
LiIpOworCWlmICghY2VsbF9pbmRleF9zdHIgfHwgIXN0cmxlbihjZWxsX2luZGV4X3N0cikpIHsK
KwkJcHJfZXJyKCJVbmFibGUgdG8gcGFyc2UgQ0VMTC5JTkRFWCBmb3IgJyVzJ1xuIiwgbmFtZSk7
CisJCXJldCA9IC1FSU5WQUw7CisJCWdvdG8gb3V0X3VubG9jazsKKwl9CisKKwlyZXQgPSBrc3Ry
dG91OChjZWxsX2luZGV4X3N0ciwgMTAsICZpbmRleCk7CisJaWYgKHJldCkKKwkJZ290byBvdXRf
dW5sb2NrOworCisJaWYgKGluZGV4ID49IFJFR01BUF9VU0JfTUFYX01BUFMpIHsKKwkJcHJfZXJy
KCJDZWxsIGluZGV4IG91dCBvZiByYW5nZSBmb3IgJyVzJ1xuIiwgbmFtZSk7CisJCXJldCA9IC1F
SU5WQUw7CisJCWdvdG8gb3V0X3VubG9jazsKKwl9CisKKwlvcHMgPSBmX211ZF9jZWxsX2dldChj
ZWxsX25hbWUpOworCWlmICghb3BzKSB7CisJCXJldCA9IC1FTk9FTlQ7CisJCWdvdG8gb3V0X3Vu
bG9jazsKKwl9CisKKwljZWxsID0gb3BzLT5hbGxvYygpOworCWlmIChJU19FUlIoY2VsbCkpIHsK
KwkJZl9tdWRfY2VsbF9wdXQob3BzKTsKKwkJcmV0ID0gUFRSX0VSUihjZWxsKTsKKwkJZ290byBv
dXRfdW5sb2NrOworCX0KKworCWNlbGwtPm9wcyA9IG9wczsKKwljZWxsLT5pbmRleCA9IGluZGV4
OworCWxpc3RfYWRkKCZjZWxsLT5ub2RlLCAmb3B0cy0+Y2VsbHMpOworb3V0X3VubG9jazoKKwlt
dXRleF91bmxvY2soJm9wdHMtPmxvY2spOworCisJa2ZyZWUoYnVmKTsKKworCXJldHVybiByZXQg
PyBFUlJfUFRSKHJldCkgOiAmY2VsbC0+Z3JvdXA7Cit9CisKKy8qKgorICogZl9tdWRfY2VsbF9p
dGVtX3JlbGVhc2UoKSAtIENlbGwgY29uZmlnZnMgaXRlbSByZWxlYXNlCisgKiBAaXRlbTogQ29u
ZmlnZnMgaXRlbQorICoKKyAqIERyaXZlcnMgc2hvdWxkIHVzZSB0aGlzIGFzIHRoZWlyICZjb25m
aWdmc19pdGVtX29wZXJhdGlvbnMucmVsZWFzZSBjYWxsYmFjaworICogaW4gdGhlaXIgJmNvbmZp
Z19pdGVtX3R5cGUgb24gdGhlIGNlbGxzICZjb25maWdfZ3JvdXAuCisgKi8KK3ZvaWQgZl9tdWRf
Y2VsbF9pdGVtX3JlbGVhc2Uoc3RydWN0IGNvbmZpZ19pdGVtICppdGVtKQoreworCXN0cnVjdCBm
X211ZF9jZWxsICpjZWxsID0gY2lfdG9fZl9tdWRfY2VsbChpdGVtKTsKKwljb25zdCBzdHJ1Y3Qg
Zl9tdWRfY2VsbF9vcHMgKm9wcyA9IGNlbGwtPm9wczsKKworCWZtZGVidWcoMSwgIiVzOiBjZWxs
PSVweFxuIiwgX19mdW5jX18sIGNlbGwpOworCisJb3BzLT5mcmVlKGNlbGwpOworCWZfbXVkX2Nl
bGxfcHV0KG9wcyk7Cit9CitFWFBPUlRfU1lNQk9MKGZfbXVkX2NlbGxfaXRlbV9yZWxlYXNlKTsK
Kworc3RhdGljIHZvaWQgZl9tdWRfY2VsbF9kcm9wX2l0ZW0oc3RydWN0IGNvbmZpZ19ncm91cCAq
Z3JvdXAsIHN0cnVjdCBjb25maWdfaXRlbSAqaXRlbSkKK3sKKwlzdHJ1Y3QgZl9tdWRfb3B0cyAq
b3B0cyA9IGNpX3RvX2ZfbXVkX29wdHMoJmdyb3VwLT5jZ19pdGVtKTsKKwlzdHJ1Y3QgZl9tdWRf
Y2VsbCAqY2VsbCA9IGNpX3RvX2ZfbXVkX2NlbGwoaXRlbSk7CisKKwlmbWRlYnVnKDEsICIlczog
Y2VsbD0lcHhcbiIsIF9fZnVuY19fLCBjZWxsKTsKKworCW11dGV4X2xvY2soJm9wdHMtPmxvY2sp
OworCWxpc3RfZGVsKCZjZWxsLT5ub2RlKTsKKwltdXRleF91bmxvY2soJm9wdHMtPmxvY2spOwor
CisJY29uZmlnX2l0ZW1fcHV0KGl0ZW0pOworfQorCitzdGF0aWMgc3RydWN0IGNvbmZpZ2ZzX2dy
b3VwX29wZXJhdGlvbnMgZl9tdWRfY2VsbF9ncm91cF9vcHMgPSB7CisJLm1ha2VfZ3JvdXAJPSBm
X211ZF9jZWxsX21ha2VfZ3JvdXAsCisJLmRyb3BfaXRlbQk9IGZfbXVkX2NlbGxfZHJvcF9pdGVt
LAorfTsKKworc3RhdGljIHZvaWQgZl9tdWRfYXR0cl9yZWxlYXNlKHN0cnVjdCBjb25maWdfaXRl
bSAqaXRlbSkKK3sKKwlzdHJ1Y3QgZl9tdWRfb3B0cyAqb3B0cyA9IGNpX3RvX2ZfbXVkX29wdHMo
aXRlbSk7CisKKwlmbWRlYnVnKDEsICIlc1xuIiwgX19mdW5jX18pOworCisJdXNiX3B1dF9mdW5j
dGlvbl9pbnN0YW5jZSgmb3B0cy0+ZnVuY19pbnN0KTsKK30KKworc3RhdGljIHN0cnVjdCBjb25m
aWdmc19pdGVtX29wZXJhdGlvbnMgZl9tdWRfaXRlbV9vcHMgPSB7CisJLnJlbGVhc2UJPSBmX211
ZF9hdHRyX3JlbGVhc2UsCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGNvbmZpZ19pdGVtX3R5
cGUgZl9tdWRfZnVuY190eXBlID0geworCS5jdF9pdGVtX29wcwk9ICZmX211ZF9pdGVtX29wcywK
KwkuY3RfZ3JvdXBfb3BzCT0gJmZfbXVkX2NlbGxfZ3JvdXBfb3BzLAorCS5jdF9hdHRycwk9IGZf
bXVkX2F0dHJzLAorCS5jdF9vd25lcgk9IFRISVNfTU9EVUxFLAorfTsKKworc3RhdGljIHZvaWQg
Zl9tdWRfZnJlZV9mdW5jX2luc3Qoc3RydWN0IHVzYl9mdW5jdGlvbl9pbnN0YW5jZSAqZikKK3sK
KwlzdHJ1Y3QgZl9tdWRfb3B0cyAqb3B0cyA9IGNvbnRhaW5lcl9vZihmLCBzdHJ1Y3QgZl9tdWRf
b3B0cywgZnVuY19pbnN0KTsKKworCWZtZGVidWcoMSwgIiVzXG4iLCBfX2Z1bmNfXyk7CisKKwlt
dXRleF9kZXN0cm95KCZvcHRzLT5sb2NrKTsKKwlrZnJlZShvcHRzKTsKK30KKworc3RhdGljIHN0
cnVjdCB1c2JfZnVuY3Rpb25faW5zdGFuY2UgKmZfbXVkX2FsbG9jX2Z1bmNfaW5zdCh2b2lkKQor
eworCXN0cnVjdCBmX211ZF9vcHRzICpvcHRzOworCisJZm1kZWJ1ZygxLCAiJXNcbiIsIF9fZnVu
Y19fKTsKKworCW9wdHMgPSBremFsbG9jKHNpemVvZigqb3B0cyksIEdGUF9LRVJORUwpOworCWlm
ICghb3B0cykKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisKKwltdXRleF9pbml0KCZvcHRz
LT5sb2NrKTsKKwlJTklUX0xJU1RfSEVBRCgmb3B0cy0+Y2VsbHMpOworCW9wdHMtPmZ1bmNfaW5z
dC5mcmVlX2Z1bmNfaW5zdCA9IGZfbXVkX2ZyZWVfZnVuY19pbnN0OworCW9wdHMtPmludGVycnVw
dF9pbnRlcnZhbF9tcyA9IC0xOworCisJY29uZmlnX2dyb3VwX2luaXRfdHlwZV9uYW1lKCZvcHRz
LT5mdW5jX2luc3QuZ3JvdXAsICIiLCAmZl9tdWRfZnVuY190eXBlKTsKKworCXJldHVybiAmb3B0
cy0+ZnVuY19pbnN0OworfQorCitERUNMQVJFX1VTQl9GVU5DVElPTl9JTklUKGZfbXVkLCBmX211
ZF9hbGxvY19mdW5jX2luc3QsIGZfbXVkX2FsbG9jX2Z1bmMpOworCitNT0RVTEVfREVTQ1JJUFRJ
T04oIk11bHRpZnVuY3Rpb24gVVNCIERldmljZSIpOworTU9EVUxFX0FVVEhPUigiTm9yYWxmIFRy
w7hubmVzIik7CitNT0RVTEVfTElDRU5TRSgiR1BMIik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3Vz
Yi9nYWRnZXQvZnVuY3Rpb24vZl9tdWQuaCBiL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9m
X211ZC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uY2UzODMzNTMw
YTFhCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy91c2IvZ2FkZ2V0L2Z1bmN0aW9uL2ZfbXVk
LmgKQEAgLTAsMCArMSwyMTAgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4w
LW9yLWxhdGVyICovCisKKyNpZm5kZWYgX19MSU5VWF9GX01VRF9ICisjZGVmaW5lIF9fTElOVVhf
Rl9NVURfSAorCisjaW5jbHVkZSA8bGludXgvY29uZmlnZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9s
aXN0Lmg+CisjaW5jbHVkZSA8bGludXgvbXV0ZXguaD4KKworc3RydWN0IG1vZHVsZTsKKworc3Ry
dWN0IGZfbXVkOworc3RydWN0IGZfbXVkX2NlbGw7CisKKy8qKgorICogc3RydWN0IGZfbXVkX2Nl
bGxfb3BzIC0gQ2VsbCBkcml2ZXIgb3BlcmF0aW9ucworICogQG5hbWU6IE5hbWUsIHBhc3NlZCBv
biB0byB0aGUgaG9zdCBhcyB0aGUgcmVnbWFwIG5hbWUKKyAqIEBvd25lcjogT3duZXIgbW9kdWxl
CisgKiBAcmVndmFsX2J5dGVzOiBOdW1iZXIgb2YgYnl0ZXMgaW4gdGhlIHJlZ2lzdGVyIHZhbHVl
ICgxLCAyIG9yIDQpCisgKiBAbWF4X3RyYW5zZmVyX3NpemU6IE1heGltdW0gc2l6ZSBvZiBvbmUg
dHJhbnNmZXIKKyAqIEBjb21wcmVzc2lvbjogU3VwcG9ydGVkIGNvbXByZXNzaW9uIGJpdCBtYXNr
CisgKiBAaW50ZXJydXB0X2ludGVydmFsX21zOiBJbnRlcnJ1cHQgaW50ZXJ2YWwgaW4gbWlsbGlz
ZWNvbmRzIChvcHRpb25hbCkKKyAqICAgICAgICAgICAgICAgICAgICAgICAgIFNldHRpbmcgdGhp
cyBhZGRzIGFuIGludGVycnVwdCBlbmRwb2ludCB0byB0aGUgaW50ZXJmYWNlLgorICogICAgICAg
ICAgICAgICAgICAgICAgICAgSWYgbW9yZSB0aGFuIG9uZSBjZWxsIHNldHMgdGhpcyB0aGVuIHRo
ZSBzbWFsbGVzdCB2YWx1ZSBpcyB1c2VkLgorICogQGFsbG9jOiBDYWxsYmFjayB0aGF0IGFsbG9j
YXRlcyBhbmQgcmV0dXJucyBhbiAmZl9tdWRfY2VsbAorICogQGZyZWU6IEZyZWVzIHRoZSBhbGxv
Y2F0ZWQgY2VsbAorICogQGJpbmQ6IENhbGxlZCB3aGVuIHRoZSBnYWRnZXQgaXMgYm91bmQgdG8g
dGhlIGNvbnRyb2xsZXIKKyAqIEB1bmJpbmQ6IENhbGxlZCB3aGVuIHRoZSBnYWRnZXQgaXMgdW5i
b3VuZCBmcm9tIHRoZSBjb250cm9sbGVyCisgKiBAZW5hYmxlOiBDYWxsZWQgd2hlbiB0aGUgVVNC
IGNhYmxlIGlzIHBsdWdnZWQgaW4gKG9wdGlvbmFsKQorICogQGRpc2FibGU6IENhbGxlZCB3aGVu
IHRoZSBVU0IgY2FibGUgaXMgdW5wbHVnZ2VkIChvcHRpb25hbCkKKyAqIEByZWFkcmVnOiBDYWxs
ZWQgd2hlbiB0aGUgaG9zdCBpcyB3cml0aW5nIHRvIGEgcmVnaXN0ZXIuIElmIHRoZSBob3N0IGFz
a3MgZm9yCisgKiAgICAgICAgICAgY29tcHJlc3Npb24sIHRoZSBjZWxsIGlzIGZyZWUgdG8gaWdu
b3JlIGl0LiBJZiBpdCBkb2VzIGNvbXByZXNzLAorICogICAgICAgICAgIHRoZW4gdGhlIGxlbiBh
cmd1bWVudCBtdXN0IGJlIHVwZGF0ZWQgdG8gcmVmbGVjdCB0aGUgYWN0dWFsIGJ1ZmZlciBzaXpl
LgorICogQHdyaXRlcmVnOiBDYWxsZWQgd2hlbiB0aGUgaG9zdCBpcyByZWFkaW5nIGZyb20gYSBy
ZWdpc3RlcgorICoKKyAqIEFsbCBjYWxsYmFja3MgcnVuIGluIHByb2Nlc3MgY29udGV4dC4KKyAq
Lworc3RydWN0IGZfbXVkX2NlbGxfb3BzIHsKKwljb25zdCBjaGFyICpuYW1lOworCXN0cnVjdCBt
b2R1bGUgKm93bmVyOworCisJdW5zaWduZWQgaW50IHJlZ3ZhbF9ieXRlczsKKwl1bnNpZ25lZCBp
bnQgbWF4X3RyYW5zZmVyX3NpemU7CisJdTggY29tcHJlc3Npb247CisJdW5zaWduZWQgaW50IGlu
dGVycnVwdF9pbnRlcnZhbF9tczsKKworCXN0cnVjdCBmX211ZF9jZWxsICooKmFsbG9jKSh2b2lk
KTsKKwl2b2lkICgqZnJlZSkoc3RydWN0IGZfbXVkX2NlbGwgKmNlbGwpOworCisJaW50ICgqYmlu
ZCkoc3RydWN0IGZfbXVkX2NlbGwgKmNlbGwpOworCXZvaWQgKCp1bmJpbmQpKHN0cnVjdCBmX211
ZF9jZWxsICpjZWxsKTsKKworCXZvaWQgKCplbmFibGUpKHN0cnVjdCBmX211ZF9jZWxsICpjZWxs
KTsKKwl2b2lkICgqZGlzYWJsZSkoc3RydWN0IGZfbXVkX2NlbGwgKmNlbGwpOworCisJaW50ICgq
cmVhZHJlZykoc3RydWN0IGZfbXVkX2NlbGwgKmNlbGwsIHVuc2lnbmVkIGludCByZWduciwKKwkJ
ICAgICAgIHZvaWQgKmJ1Ziwgc2l6ZV90ICpsZW4sIHU4IGNvbXByZXNzaW9uKTsKKwlpbnQgKCp3
cml0ZXJlZykoc3RydWN0IGZfbXVkX2NlbGwgKmNlbGwsIHVuc2lnbmVkIGludCByZWduciwKKwkJ
CWNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgdTggY29tcHJlc3Npb24pOworfTsKKworLyoq
CisgKiBzdHJ1Y3QgZl9tdWRfY2VsbCAtIENlbGwKKyAqIEBub2RlOiBMaXN0IG5vZGUgaW4gdGhl
IGNvbmZpZ2ZzIGVudHJ5IGxpc3QKKyAqIEBpbmRleDogQ2VsbCBpbmRleCBmcm9tIGNvbmZpZ2Zz
IGVudHJ5CisgKiBAb3BzOiBDZWxsIG9wZXJhdGlvbnMKKyAqIEBmbXVkOiBQYXJlbnQgc3RydWN0
dXJlCisgKiBAZ3JvdXA6IENvbmZpZ2ZzIGdyb3VwCisgKi8KK3N0cnVjdCBmX211ZF9jZWxsIHsK
KwlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7CisJdW5zaWduZWQgaW50IGluZGV4OworCWNvbnN0IHN0
cnVjdCBmX211ZF9jZWxsX29wcyAqb3BzOworCXN0cnVjdCBmX211ZCAqZm11ZDsKKwlzdHJ1Y3Qg
Y29uZmlnX2dyb3VwIGdyb3VwOworfTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3QgZl9tdWRfY2Vs
bCAqY2lfdG9fZl9tdWRfY2VsbChzdHJ1Y3QgY29uZmlnX2l0ZW0gKml0ZW0pCit7CisJcmV0dXJu
IGNvbnRhaW5lcl9vZih0b19jb25maWdfZ3JvdXAoaXRlbSksIHN0cnVjdCBmX211ZF9jZWxsLCBn
cm91cCk7Cit9CisKK2Jvb2wgZl9tdWRfaXJxKHN0cnVjdCBmX211ZF9jZWxsICpjZWxsKTsKK3Zv
aWQgZl9tdWRfY2VsbF9pdGVtX3JlbGVhc2Uoc3RydWN0IGNvbmZpZ19pdGVtICppdGVtKTsKKwor
aW50IGZfbXVkX2NlbGxfcmVnaXN0ZXIoY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxfb3BzICpvcHMp
Owordm9pZCBmX211ZF9jZWxsX3VucmVnaXN0ZXIoY29uc3Qgc3RydWN0IGZfbXVkX2NlbGxfb3Bz
ICpvcHMpOworCisjZGVmaW5lIERFQ0xBUkVfRl9NVURfQ0VMTF9JTklUKF9vcHMpCQkJXAorCXN0
YXRpYyBpbnQgX19pbml0IF9vcHMgIyMgX21vZF9pbml0KHZvaWQpCVwKKwl7CQkJCQkJXAorCQly
ZXR1cm4gZl9tdWRfY2VsbF9yZWdpc3RlcigmX29wcyk7CVwKKwl9CQkJCQkJXAorCW1vZHVsZV9p
bml0KF9vcHMgIyMgX21vZF9pbml0KTsJCQlcCisJc3RhdGljIHZvaWQgX19leGl0IF9vcHMgIyMg
X21vZF9leGl0KHZvaWQpCVwKKwl7CQkJCQkJXAorCQlmX211ZF9jZWxsX3VucmVnaXN0ZXIoJl9v
cHMpOwkJXAorCX0JCQkJCQlcCisJbW9kdWxlX2V4aXQoX29wcyAjIyBfbW9kX2V4aXQpCisKKyNk
ZWZpbmUgRl9NVURfT1BUX0lOVChfdHlwLCBfbmFtZSwgX21pbiwgX21heCkJCQkJXAorc3RhdGlj
IHNzaXplX3QgX3R5cCAjIyBfICMjIF9uYW1lICMjIF9zaG93KHN0cnVjdCBjb25maWdfaXRlbSAq
aXRlbSwJXAorCQkJCQkgICBjaGFyICpwYWdlKQkJCVwKK3sJCQkJCQkJCQlcCisJc3RydWN0IF90
eXAgKm9wdHMgPSBjaV90b18gIyMgX3R5cChpdGVtKTsJCQlcCisJc3NpemVfdCByZXQ7CQkJCQkJ
CVwKKwkJCQkJCQkJCVwKKwltdXRleF9sb2NrKCZvcHRzLT5sb2NrKTsJCQkJCVwKKwlyZXQgPSBz
cHJpbnRmKHBhZ2UsICIlZFxuIiwgb3B0cy0+X25hbWUpOwkJCVwKKwltdXRleF91bmxvY2soJm9w
dHMtPmxvY2spOwkJCQkJXAorCQkJCQkJCQkJXAorCXJldHVybiByZXQ7CQkJCQkJCVwKK30JCQkJ
CQkJCQlcCisJCQkJCQkJCQlcCitzdGF0aWMgc3NpemVfdCBfdHlwICMjIF8gIyMgX25hbWUgIyMg
X3N0b3JlKHN0cnVjdCBjb25maWdfaXRlbSAqaXRlbSwJXAorCQkJCQljb25zdCBjaGFyICpwYWdl
LCBzaXplX3QgbGVuKQlcCit7CQkJCQkJCQkJXAorCXN0cnVjdCBfdHlwICpvcHRzID0gY2lfdG9f
ICMjIF90eXAoaXRlbSk7CQkJXAorCWludCByZXQsIG51bTsJCQkJCQkJXAorCQkJCQkJCQkJXAor
CW11dGV4X2xvY2soJm9wdHMtPmxvY2spOwkJCQkJXAorCWlmIChvcHRzLT5yZWZjbnQpIHsJCQkJ
CQlcCisJCXJldCA9IC1FQlVTWTsJCQkJCQlcCisJCWdvdG8gb3V0X3VubG9jazsJCQkJCVwKKwl9
CQkJCQkJCQlcCisJCQkJCQkJCQlcCisJcmV0ID0ga3N0cnRvaW50KHBhZ2UsIDAsICZudW0pOwkJ
CQkJXAorCWlmIChyZXQpCQkJCQkJCVwKKwkJZ290byBvdXRfdW5sb2NrOwkJCQkJXAorCQkJCQkJ
CQkJXAorCWlmIChudW0gPj0gKF9taW4pIHx8IG51bSA8PSAoX21heCkpCQkJCVwKKwkJb3B0cy0+
X25hbWUgPSBudW07CQkJCQlcCisJZWxzZQkJCQkJCQkJXAorCQlyZXQgPSAtRUlOVkFMOwkJCQkJ
CVwKK291dF91bmxvY2s6CQkJCQkJCQlcCisJbXV0ZXhfdW5sb2NrKCZvcHRzLT5sb2NrKTsJCQkJ
CVwKKwkJCQkJCQkJCVwKKwlyZXR1cm4gcmV0ID8gcmV0IDogbGVuOwkJCQkJCVwKK30JCQkJCQkJ
CQlcCisJCQkJCQkJCQlcCitDT05GSUdGU19BVFRSKF90eXAgIyMgXywgX25hbWUpCisKKyNkZWZp
bmUgRl9NVURfT1BUX1NUUihfdHlwLCBfbmFtZSkJCQkJCVwKK3N0YXRpYyBzc2l6ZV90IF90eXAg
IyMgXyAjIyBfbmFtZSAjIyBfc2hvdyhzdHJ1Y3QgY29uZmlnX2l0ZW0gKml0ZW0sCVwKKwkJCQkJ
ICAgY2hhciAqcGFnZSkJCQlcCit7CQkJCQkJCQkJXAorCXN0cnVjdCBfdHlwICpvcHRzID0gY2lf
dG9fICMjIF90eXAoaXRlbSk7CQkJXAorCXNzaXplX3QgcmV0OwkJCQkJCQlcCisJCQkJCQkJCQlc
CisJbXV0ZXhfbG9jaygmb3B0cy0+bG9jayk7CQkJCQlcCisJCQkJCQkJCQlcCisJaWYgKG9wdHMt
Pl9uYW1lKSB7CQkJCQkJXAorCQlyZXQgPSBzdHJzY3B5KHBhZ2UsIG9wdHMtPl9uYW1lLCBQQUdF
X1NJWkUpOwkJXAorCX0gZWxzZSB7CQkJCQkJCVwKKwkJcGFnZVswXSA9ICdcMCc7CQkJCQkJXAor
CQlyZXQgPSAwOwkJCQkJCVwKKwl9CQkJCQkJCQlcCisJCQkJCQkJCQlcCisJbXV0ZXhfdW5sb2Nr
KCZvcHRzLT5sb2NrKTsJCQkJCVwKKwkJCQkJCQkJCVwKKwlyZXR1cm4gcmV0OwkJCQkJCQlcCit9
CQkJCQkJCQkJXAorCQkJCQkJCQkJXAorc3RhdGljIHNzaXplX3QgX3R5cCAjIyBfICMjIF9uYW1l
ICMjIF9zdG9yZShzdHJ1Y3QgY29uZmlnX2l0ZW0gKml0ZW0sCVwKKwkJCQkJY29uc3QgY2hhciAq
cGFnZSwgc2l6ZV90IGxlbikJXAorewkJCQkJCQkJCVwKKwlzdHJ1Y3QgX3R5cCAqb3B0cyA9IGNp
X3RvXyAjIyBfdHlwKGl0ZW0pOwkJCVwKKwlzc2l6ZV90IHJldCA9IDA7CQkJCQkJXAorCWNoYXIg
KmJ1ZjsJCQkJCQkJXAorCQkJCQkJCQkJXAorCW11dGV4X2xvY2soJm9wdHMtPmxvY2spOwkJCQkJ
XAorCWlmIChvcHRzLT5yZWZjbnQpIHsJCQkJCQlcCisJCXJldCA9IC1FQlVTWTsJCQkJCQlcCisJ
CWdvdG8gb3V0X3VubG9jazsJCQkJCVwKKwl9CQkJCQkJCQlcCisJCQkJCQkJCQlcCisJYnVmID0g
a3N0cm5kdXAocGFnZSwgbGVuLCBHRlBfS0VSTkVMKTsJCQkJXAorCWlmICghYnVmKSB7CQkJCQkJ
CVwKKwkJcmV0ID0gLUVOT01FTTsJCQkJCQlcCisJCWdvdG8gb3V0X3VubG9jazsJCQkJCVwKKwl9
CQkJCQkJCQlcCisJCQkJCQkJCQlcCisJa2ZyZWUob3B0cy0+X25hbWUpOwkJCQkJCVwKKwlvcHRz
LT5fbmFtZSA9IGJ1ZjsJCQkJCQlcCitvdXRfdW5sb2NrOgkJCQkJCQkJXAorCW11dGV4X3VubG9j
aygmb3B0cy0+bG9jayk7CQkJCQlcCisJCQkJCQkJCQlcCisJcmV0dXJuIHJldCA/IHJldCA6IGxl
bjsJCQkJCQlcCit9CQkJCQkJCQkJXAorCQkJCQkJCQkJXAorQ09ORklHRlNfQVRUUihfdHlwICMj
IF8sIF9uYW1lKQorCisvKiBtdWRfcmVnbWFwLmMgKi8KK3N0cnVjdCBtdWRfcmVnbWFwOworc3Ry
dWN0IHVzYl9jb21wb3NpdGVfZGV2Oworc3RydWN0IHVzYl9jdHJscmVxdWVzdDsKK3N0cnVjdCB1
c2JfZXA7CitzdHJ1Y3QgdXNiX2Z1bmN0aW9uOworCit2b2lkIG11ZF9yZWdtYXBfc3RvcChzdHJ1
Y3QgbXVkX3JlZ21hcCAqbXJlZyk7CitpbnQgbXVkX3JlZ21hcF9zZXR1cChzdHJ1Y3QgbXVkX3Jl
Z21hcCAqbXJlZywgc3RydWN0IHVzYl9mdW5jdGlvbiAqZiwKKwkJICAgICBjb25zdCBzdHJ1Y3Qg
dXNiX2N0cmxyZXF1ZXN0ICpjdHJsKTsKK2ludCBtdWRfcmVnbWFwX3NldF9hbHQoc3RydWN0IG11
ZF9yZWdtYXAgKm1yZWcsIHN0cnVjdCB1c2JfZnVuY3Rpb24gKmYpOworCitzdHJ1Y3QgbXVkX3Jl
Z21hcCAqbXVkX3JlZ21hcF9pbml0KHN0cnVjdCB1c2JfY29tcG9zaXRlX2RldiAqY2RldiwKKwkJ
CQkgICBzdHJ1Y3QgdXNiX2VwICppbl9lcCwgc3RydWN0IHVzYl9lcCAqb3V0X2VwLAorCQkJCSAg
IHN0cnVjdCBmX211ZF9jZWxsICoqY2VsbHMsIHVuc2lnbmVkIGludCBudW1fY2VsbHMpOwordm9p
ZCBtdWRfcmVnbWFwX2NsZWFudXAoc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcpOworCisjZW5kaWYK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL2dhZGdldC9mdW5jdGlvbi9tdWRfcmVnbWFwLmMgYi9k
cml2ZXJzL3VzYi9nYWRnZXQvZnVuY3Rpb24vbXVkX3JlZ21hcC5jCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZDVmZDVkMmQ5NmE3Ci0tLSAvZGV2L251bGwKKysrIGIv
ZHJpdmVycy91c2IvZ2FkZ2V0L2Z1bmN0aW9uL211ZF9yZWdtYXAuYwpAQCAtMCwwICsxLDkzNiBA
QAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKKy8qCisgKiBD
b3B5cmlnaHQgMjAyMCBOb3JhbGYgVHLDuG5uZXMKKyAqLworCisjaW5jbHVkZSA8bGludXgvZGVs
YXkuaD4KKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5jbHVkZSA8bGludXgvbG9nMi5oPgor
I2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNsdWRlIDxsaW51eC9zdHJpbmcuaD4KKyNpbmNs
dWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3JlZ21hcC5oPgorI2luY2x1
ZGUgPGxpbnV4L3JlZ21hcF91c2IuaD4KKyNpbmNsdWRlIDxsaW51eC91c2IvY29tcG9zaXRlLmg+
CisjaW5jbHVkZSA8bGludXgvdXNiL2dhZGdldC5oPgorI2luY2x1ZGUgPGxpbnV4L3dhaXQuaD4K
KyNpbmNsdWRlIDxsaW51eC93b3JrcXVldWUuaD4KKworI2luY2x1ZGUgImZfbXVkLmgiCisKK3N0
cnVjdCBtdWRfcmVnbWFwX3RyYW5zZmVyIHsKKwlzdHJ1Y3QgbXVkX3JlZ21hcCAqbXJlZzsKKwor
CXNwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7CisKKwlzdHJ1Y3QgdXNi
X3JlcXVlc3QgKmhlYWRlcl9yZXE7CisJc3RydWN0IHVzYl9yZXF1ZXN0ICpidWZfb3V0X3JlcTsK
KwlzdHJ1Y3QgdXNiX3JlcXVlc3QgKmJ1Zl9pbl9yZXE7CisJc3RydWN0IHVzYl9yZXF1ZXN0ICpz
dGF0dXNfcmVxOworCisJc3RydWN0IHVzYl9yZXF1ZXN0ICpjdXJyZW50X3JlcTsKKworCXUzMiB0
YWc7CisJYm9vbCBpbjsKKwl1bnNpZ25lZCBpbnQgaW5kZXg7CisJdW5zaWduZWQgaW50IHJlZ25y
OworCXUzMiBmbGFnczsKK307CisKK3N0cnVjdCBtdWRfcmVnbWFwIHsKKwlzdHJ1Y3QgdXNiX2Vw
ICppbl9lcDsKKwlzdHJ1Y3QgdXNiX2VwICpvdXRfZXA7CisJc3RydWN0IHVzYl9jb21wb3NpdGVf
ZGV2ICpjZGV2OworCisJc3RydWN0IGZfbXVkX2NlbGwgKipjZWxsczsKKwl1bnNpZ25lZCBpbnQg
bnVtX2NlbGxzOworCisJdW5zaWduZWQgaW50IG1heF90cmFuc2Zlcl9zaXplOworCXN0cnVjdCBt
dWRfcmVnbWFwX3RyYW5zZmVyICp0cmFuc2ZlcnNbMl07CisKKwlzcGlubG9ja190IGxvY2s7CisK
KwlzdHJ1Y3QgbGlzdF9oZWFkIGZyZWVfdHJhbnNmZXJzOworCXN0cnVjdCBsaXN0X2hlYWQgcGVu
ZGluZ190cmFuc2ZlcnM7CisKKwlzdHJ1Y3Qgd29ya3F1ZXVlX3N0cnVjdAkqd29ya3E7CisJc3Ry
dWN0IHdvcmtfc3RydWN0IHdvcms7CisJd2FpdF9xdWV1ZV9oZWFkX3Qgd2FpdHE7CisKKwlib29s
IHBlbmRpbmdfcHJvdG9jb2xfcmVzZXQ7CisJYm9vbCBwZW5kaW5nX3N0YWxsOworCWJvb2wgc3Rh
bGxlZDsKKwlib29sIHJ1bjsKKworCWJvb2wgaGVhZGVyX3F1ZXVlZDsKKwl1OCBlcnJubzsKK307
CisKKy8qIFRlbXBvcmFyeSBkZWJ1Z2dpbmcgYWlkICovCitzdGF0aWMgdW5zaWduZWQgaW50IGRl
YnVnID0gMDsKKworI2RlZmluZSB1ZGVidWcobGV2ZWwsIGZtdCwgLi4uKQkJCQlcCitkbyB7CQkJ
CQkJCVwKKwlpZiAoKGxldmVsKSA8PSBkZWJ1ZykJCQkJXAorCQlwcmludGsoS0VSTl9ERUJVRyBm
bXQsICMjX19WQV9BUkdTX18pOwlcCit9IHdoaWxlICgwKQorCisjdW5kZWYgREJHCisjZGVmaW5l
IERCRyBJTkZPCisKK3N0YXRpYyBpbnQgbXVkX3JlZ21hcF91c2JfZXBfc2V0X2hhbHQoc3RydWN0
IHVzYl9lcCAqZXApCit7CisJaW50IHJldHJpZXMgPSAxMCwgcmV0OworCisJd2hpbGUgKHJldHJp
ZXMtLSA+IDApIHsKKwkJcmV0ID0gdXNiX2VwX3NldF9oYWx0KGVwKTsKKwkJaWYgKHJldCAhPSAt
RUFHQUlOKQorCQkJYnJlYWs7CisJCW1zbGVlcCgxMDApOworCX0KKworCXJldHVybiByZXQ7Cit9
CisKK3N0YXRpYyB2b2lkIG11ZF9yZWdtYXBfc3RhbGwoc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcp
Cit7CisJc3RydWN0IHVzYl9yZXF1ZXN0ICpjdXJyZW50X3JlcVsyXSA9IHsgTlVMTCwgTlVMTCB9
OworCXN0cnVjdCBtdWRfcmVnbWFwX3RyYW5zZmVyICp0cmFuc2ZlcjsKKwlpbnQgcmV0X2luLCBy
ZXRfb3V0LCB0aW1lb3V0OworCXVuc2lnbmVkIGludCBpOworCisJdWRlYnVnKDAsICIlczpcbiIs
IF9fZnVuY19fKTsKKworCWZvciAoaSA9IDA7IGkgPCAyOyBpKyspIHsKKwkJdHJhbnNmZXIgPSBt
cmVnLT50cmFuc2ZlcnNbaV07CisJCXNwaW5fbG9ja19pcnEoJnRyYW5zZmVyLT5sb2NrKTsKKwkJ
Y3VycmVudF9yZXFbaV0gPSB0cmFuc2Zlci0+Y3VycmVudF9yZXE7CisJCXNwaW5fdW5sb2NrX2ly
cSgmdHJhbnNmZXItPmxvY2spOworCQlpZiAoY3VycmVudF9yZXFbaV0pIHsKKwkJCWlmIChjdXJy
ZW50X3JlcVtpXSA9PSB0cmFuc2Zlci0+aGVhZGVyX3JlcSB8fAorCQkJICAgIGN1cnJlbnRfcmVx
W2ldID09IHRyYW5zZmVyLT5idWZfb3V0X3JlcSkKKwkJCQl1c2JfZXBfZGVxdWV1ZShtcmVnLT5v
dXRfZXAsIGN1cnJlbnRfcmVxW2ldKTsKKwkJCWVsc2UKKwkJCQl1c2JfZXBfZGVxdWV1ZShtcmVn
LT5pbl9lcCwgY3VycmVudF9yZXFbaV0pOworCQl9CisJfQorCisJZm9yICh0aW1lb3V0ID0gMjA7
IHRpbWVvdXQgPiAwOyB0aW1lb3V0LS0pIHsKKwkJZm9yIChpID0gMDsgaSA8IDI7IGkrKykgewor
CQkJdHJhbnNmZXIgPSBtcmVnLT50cmFuc2ZlcnNbaV07CisJCQlzcGluX2xvY2tfaXJxKCZ0cmFu
c2Zlci0+bG9jayk7CisJCQljdXJyZW50X3JlcVtpXSA9IHRyYW5zZmVyLT5jdXJyZW50X3JlcTsK
KwkJCXNwaW5fdW5sb2NrX2lycSgmdHJhbnNmZXItPmxvY2spOworCQl9CisJCWlmICghY3VycmVu
dF9yZXFbMF0gJiYgIWN1cnJlbnRfcmVxWzFdKQorCQkJYnJlYWs7CisJCW1zbGVlcCgxMDApOwor
CX0KKworCWlmICghdGltZW91dCkKKwkJcHJfd2FybigiJXM6IHRpbWVvdXQgd2FpdGluZyBmb3Ig
dHJhbnNmZXJzIHRvIGNvbXBsZXRlOiB0cjA9JXUsIHRyMT0ldVxuIiwKKwkJCV9fZnVuY19fLCAh
IWN1cnJlbnRfcmVxWzBdLCAhIWN1cnJlbnRfcmVxWzFdKTsKKworCXJldF9pbiA9IG11ZF9yZWdt
YXBfdXNiX2VwX3NldF9oYWx0KG1yZWctPmluX2VwKTsKKwlyZXRfb3V0ID0gbXVkX3JlZ21hcF91
c2JfZXBfc2V0X2hhbHQobXJlZy0+b3V0X2VwKTsKKwlpZiAocmV0X2luIHx8IHJldF9vdXQpCisJ
CXByX2VycigiJXM6IEZhaWxlZCB0byBoYWx0IGVuZHBvaW50KHMpIHJldF9pbj0lZCwgcmV0X291
dD0lZFxuIiwKKwkJICAgICAgIF9fZnVuY19fLCByZXRfaW4sIHJldF9vdXQpOworCisJc3Bpbl9s
b2NrX2lycSgmbXJlZy0+bG9jayk7CisJbXJlZy0+cGVuZGluZ19zdGFsbCA9IGZhbHNlOworCW1y
ZWctPnN0YWxsZWQgPSB0cnVlOworCXNwaW5fdW5sb2NrX2lycSgmbXJlZy0+bG9jayk7Cit9CisK
K3N0YXRpYyB2b2lkIG11ZF9yZWdtYXBfcXVldWVfc3RhbGwoc3RydWN0IG11ZF9yZWdtYXAgKm1y
ZWcsIGludCBlcnJvcikKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJdWRlYnVnKDAsICIl
czogZXJyb3I9JWRcbiIsIF9fZnVuY19fLCBlcnJvcik7CisKKwlpZiAoZXJyb3IgPCAtMjU1IHx8
IGVycm9yID4gMCkKKwkJZXJyb3IgPSAtRVJFTU9URUlPOworCisJc3Bpbl9sb2NrX2lycXNhdmUo
Jm1yZWctPmxvY2ssIGZsYWdzKTsKKwlpZiAoIW1yZWctPnBlbmRpbmdfc3RhbGwpIHsKKwkJbXJl
Zy0+ZXJybm8gPSAtZXJyb3I7CisJCW1yZWctPnBlbmRpbmdfc3RhbGwgPSB0cnVlOworCQl3YWtl
X3VwKCZtcmVnLT53YWl0cSk7CisJfQorCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJm1yZWctPmxv
Y2ssIGZsYWdzKTsKK30KKworc3RhdGljIGludCBtdWRfcmVnbWFwX3F1ZXVlX2hlYWRlcihzdHJ1
Y3QgbXVkX3JlZ21hcCAqbXJlZykKK3sKKwlzdHJ1Y3QgbXVkX3JlZ21hcF90cmFuc2ZlciAqdHJh
bnNmZXIgPSBOVUxMOworCWJvb2wgaGVhZGVyX3F1ZXVlZCwgcnVuOworCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CisJaW50IHJldDsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZtcmVnLT5sb2NrLCBmbGFn
cyk7CisJaGVhZGVyX3F1ZXVlZCA9IG1yZWctPmhlYWRlcl9xdWV1ZWQ7CisJcnVuID0gbXJlZy0+
cnVuOworCWlmICghaGVhZGVyX3F1ZXVlZCAmJiBydW4pIHsKKwkJdHJhbnNmZXIgPSBsaXN0X2Zp
cnN0X2VudHJ5X29yX251bGwoJm1yZWctPmZyZWVfdHJhbnNmZXJzLCBzdHJ1Y3QgbXVkX3JlZ21h
cF90cmFuc2Zlciwgbm9kZSk7CisJCWlmICh0cmFuc2ZlcikgeworCQkJbXJlZy0+aGVhZGVyX3F1
ZXVlZCA9IHRydWU7CisJCQlsaXN0X2RlbF9pbml0KCZ0cmFuc2Zlci0+bm9kZSk7CisJCX0KKwl9
CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmbXJlZy0+bG9jaywgZmxhZ3MpOworCisJdWRlYnVn
KDQsICIlczogaGVhZGVyX3F1ZXVlZD0ldSwgdHJhbnNmZXI9JXB4XG4iLCBfX2Z1bmNfXywKKwkg
ICAgICAgaGVhZGVyX3F1ZXVlZCwgdHJhbnNmZXIpOworCisJaWYgKGhlYWRlcl9xdWV1ZWQgfHwg
IXJ1bikKKwkJcmV0dXJuIDA7CisKKwlpZiAoIXRyYW5zZmVyKSB7CisJCXVkZWJ1Zyg0LCAiUnVu
IG91dCBvZiB0cmFuc2ZlcnNcbiIpOworCQlyZXR1cm4gMDsKKwl9CisKKwlzcGluX2xvY2tfaXJx
c2F2ZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKwlyZXQgPSB1c2JfZXBfcXVldWUobXJlZy0+
b3V0X2VwLCB0cmFuc2Zlci0+aGVhZGVyX3JlcSwgR0ZQX0FUT01JQyk7CisJaWYgKCFyZXQpCisJ
CXRyYW5zZmVyLT5jdXJyZW50X3JlcSA9IHRyYW5zZmVyLT5oZWFkZXJfcmVxOworCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJnRyYW5zZmVyLT5sb2NrLCBmbGFncyk7CisJaWYgKHJldCkgeworCQlw
cl93YXJuKCJRdWV1ZWluZyBoZWFkZXIgZmFpbGVkLCByZXQ9JWRcbiIsIHJldCk7CisJCW11ZF9y
ZWdtYXBfcXVldWVfc3RhbGwobXJlZywgcmV0KTsKKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitz
dGF0aWMgdm9pZCBtdWRfcmVnbWFwX3F1ZXVlX3N0YXR1cyhzdHJ1Y3QgbXVkX3JlZ21hcF90cmFu
c2ZlciAqdHJhbnNmZXIsIGludCBlcnJvcikKK3sKKwlzdHJ1Y3QgcmVnbWFwX3VzYl9zdGF0dXMg
KnN0YXR1cyA9IHRyYW5zZmVyLT5zdGF0dXNfcmVxLT5idWY7CisJdW5zaWduZWQgbG9uZyBmbGFn
czsKKwlpbnQgcmV0OworCisJdWRlYnVnKDQsICIlczogdGFnPSV1LCBlcnJvcj0lZFxuIiwgX19m
dW5jX18sIHRyYW5zZmVyLT50YWcsIGVycm9yKTsKKworCWlmIChlcnJvciA8IC0yNTUgfHwgZXJy
b3IgPiAwKQorCQllcnJvciA9IC1FUkVNT1RFSU87CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmdHJh
bnNmZXItPmxvY2ssIGZsYWdzKTsKKwlzdGF0dXMtPnRhZyA9IGNwdV90b19sZTE2KHRyYW5zZmVy
LT50YWcpOworCXN0YXR1cy0+c3RhdHVzID0gLWVycm9yOworCXJldCA9IHVzYl9lcF9xdWV1ZSh0
cmFuc2Zlci0+bXJlZy0+aW5fZXAsIHRyYW5zZmVyLT5zdGF0dXNfcmVxLCBHRlBfQVRPTUlDKTsK
KwlpZiAoIXJldCkKKwkJdHJhbnNmZXItPmN1cnJlbnRfcmVxID0gdHJhbnNmZXItPnN0YXR1c19y
ZXE7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKwlp
ZiAocmV0KSB7CisJCXByX3dhcm4oIlF1ZXVlaW5nIHN0YXR1cyBmYWlsZWQsIHJldD0lZFxuIiwg
cmV0KTsKKwkJbXVkX3JlZ21hcF9xdWV1ZV9zdGFsbCh0cmFuc2Zlci0+bXJlZywgcmV0KTsKKwl9
Cit9CisKK3N0YXRpYyB2b2lkIG11ZF9yZWdtYXBfcXVldWVfZm9yX3Byb2Nlc3Npbmcoc3RydWN0
IG11ZF9yZWdtYXBfdHJhbnNmZXIgKnRyYW5zZmVyKQoreworCXN0cnVjdCBtdWRfcmVnbWFwICpt
cmVnID0gdHJhbnNmZXItPm1yZWc7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCXNwaW5fbG9j
a19pcnFzYXZlKCZtcmVnLT5sb2NrLCBmbGFncyk7CisJbGlzdF9hZGRfdGFpbCgmdHJhbnNmZXIt
Pm5vZGUsICZtcmVnLT5wZW5kaW5nX3RyYW5zZmVycyk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmbXJlZy0+bG9jaywgZmxhZ3MpOworCisJd2FrZV91cCgmbXJlZy0+d2FpdHEpOworfQorCitz
dGF0aWMgYm9vbCBtdWRfcmVnbWFwX2NoZWNrX3JlcV9zdGF0dXMoc3RydWN0IHVzYl9yZXF1ZXN0
ICpyZXEpCit7CisJc3dpdGNoIChyZXEtPnN0YXR1cykgeworCWNhc2UgLUVDT05OQUJPUlRFRDoJ
CS8qIGhhcmR3YXJlIGZvcmNlZCBlcCByZXNldCAqLworCWNhc2UgLUVDT05OUkVTRVQ6CQkvKiBy
ZXF1ZXN0IGRlcXVldWVkICovCisJY2FzZSAtRVNIVVRET1dOOgkJLyogZGlzY29ubmVjdCBmcm9t
IGhvc3QgKi8KKwljYXNlIC1FT1ZFUkZMT1c6CQkvKiBidWZmZXIgb3ZlcnJ1biBvbiByZWFkIG1l
YW5zIHRoYXQKKwkJCQkJICogd2UgZGlkbid0IHByb3ZpZGUgYSBiaWcgZW5vdWdoCisJCQkJCSAq
IGJ1ZmZlci4KKwkJCQkJICovCisJY2FzZSAtRVJFTU9URUlPOgkJLyogc2hvcnQgcmVhZCAqLwor
CQl1ZGVidWcoMCwgIiVzOiBiYWlsIG91dCwgc3RhdHVzPSVkXG4iLCBfX2Z1bmNfXywgcmVxLT5z
dGF0dXMpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRp
YyB2b2lkIG11ZF9yZWdtYXBfaGVhZGVyX3JlcV9jb21wbGV0ZShzdHJ1Y3QgdXNiX2VwICplcCwg
c3RydWN0IHVzYl9yZXF1ZXN0ICpyZXEpCit7CisJc3RydWN0IG11ZF9yZWdtYXBfdHJhbnNmZXIg
KnRyYW5zZmVyID0gcmVxLT5jb250ZXh0OworCXN0cnVjdCBtdWRfcmVnbWFwICptcmVnID0gdHJh
bnNmZXItPm1yZWc7CisJc3RydWN0IHJlZ21hcF91c2JfaGVhZGVyICpoZWFkZXIgPSByZXEtPmJ1
ZjsKKwl1bnNpZ25lZCBpbnQgaW5kZXggPSBsZTE2X3RvX2NwdShoZWFkZXItPmluZGV4KTsKKwl1
MzIgaGZsYWdzID0gbGUzMl90b19jcHUoaGVhZGVyLT5mbGFncyk7CisJYm9vbCBpbiA9IGhmbGFn
cyAmIFJFR01BUF9VU0JfSEVBREVSX0ZMQUdfSU47CisJdTMyIGxlbmd0aCA9IGxlMzJfdG9fY3B1
KGhlYWRlci0+bGVuZ3RoKTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWJvb2wgcnVuOworCWlu
dCByZXQ7CisKKwl1ZGVidWcoNCwgIiVzOiBzdGF0dXM9JWQsIGFjdHVhbD0ldSwgbGVuZ3RoPSV1
XG4iLCBfX2Z1bmNfXywgcmVxLT5zdGF0dXMsIHJlcS0+YWN0dWFsLCByZXEtPmxlbmd0aCk7CisJ
dWRlYnVnKDQsICIgICAgIHNpZ25hdHVyZT0weCV4LCBpbmRleD0ldSwgdGFnPSV1LCBmbGFncz0w
eCV4LCByZWducj0weCV4LCBsZW5ndGg9JXUsIGluPSV1XG4iLAorCSAgICAgICBsZTMyX3RvX2Nw
dShoZWFkZXItPnNpZ25hdHVyZSksIGxlMTZfdG9fY3B1KGhlYWRlci0+aW5kZXgpLCBsZTE2X3Rv
X2NwdShoZWFkZXItPnRhZyksCisJICAgICAgIGxlMzJfdG9fY3B1KGhlYWRlci0+ZmxhZ3MpLCBs
ZTMyX3RvX2NwdShoZWFkZXItPnJlZ25yKSwgbGUzMl90b19jcHUoaGVhZGVyLT5sZW5ndGgpLCBp
bik7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKwl0cmFu
c2Zlci0+Y3VycmVudF9yZXEgPSBOVUxMOworCXRyYW5zZmVyLT5pbiA9IGluOworCXRyYW5zZmVy
LT5pbmRleCA9IGluZGV4OworCXRyYW5zZmVyLT50YWcgPSBsZTE2X3RvX2NwdShoZWFkZXItPnRh
Zyk7CisJdHJhbnNmZXItPmZsYWdzID0gaGZsYWdzOworCXRyYW5zZmVyLT5yZWduciA9IGxlMzJf
dG9fY3B1KGhlYWRlci0+cmVnbnIpOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnRyYW5zZmVy
LT5sb2NrLCBmbGFncyk7CisKKwlpZiAoIW11ZF9yZWdtYXBfY2hlY2tfcmVxX3N0YXR1cyhyZXEp
KQorCQlyZXR1cm47CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmbXJlZy0+bG9jaywgZmxhZ3MpOwor
CW1yZWctPmhlYWRlcl9xdWV1ZWQgPSBmYWxzZTsKKwlydW4gPSBtcmVnLT5ydW47CisJc3Bpbl91
bmxvY2tfaXJxcmVzdG9yZSgmbXJlZy0+bG9jaywgZmxhZ3MpOworCisJaWYgKCFydW4pCisJCXJl
dHVybjsKKworCWlmIChyZXEtPnN0YXR1cykgeworCQl1ZGVidWcoMCwgIiVzOiBGYWlsZWQsIHN0
YXR1cz0lZFxuIiwgX19mdW5jX18sIHJlcS0+c3RhdHVzKTsKKwkJcmV0ID0gcmVxLT5zdGF0dXM7
CisJCWdvdG8gZXJyb3I7CisJfQorCisJaWYgKHJlcS0+YWN0dWFsICE9IHJlcS0+bGVuZ3RoKSB7
CisJCXVkZWJ1ZygwLCAiJXM6IFdyb25nIGxlbmd0aFxuIiwgX19mdW5jX18pOworCQlyZXQgPSAt
RVJFTU9URUlPOworCQlnb3RvIGVycm9yOworCX0KKworCWlmIChsZTMyX3RvX2NwdShoZWFkZXIt
PnNpZ25hdHVyZSkgIT0gUkVHTUFQX1VTQl9IRUFERVJfU0lHTkFUVVJFKSB7CisJCXVkZWJ1Zygw
LCAiJXM6IFdyb25nIHNpZ25hdHVyZVxuIiwgX19mdW5jX18pOworCQlyZXQgPSAtRUlOVkFMOwor
CQlnb3RvIGVycm9yOworCX0KKworCWlmIChpbmRleCA+PSBtcmVnLT5udW1fY2VsbHMpIHsKKwkJ
dWRlYnVnKDAsICIlczogTm8gc3VjaCBpbmRleCAldVxuIiwgX19mdW5jX18sIGluZGV4KTsKKwkJ
cmV0ID0gLUVOT0VOVDsKKwkJZ290byBlcnJvcjsKKwl9CisKKwkvKiBGSVhNRTogVGVtcG9yYXJ5
IHRlc3QgY29kZSAqLworCWlmIChpbmRleCA9PSAyICYmICFzdHJjbXAobXJlZy0+Y2VsbHNbaW5k
ZXhdLT5vcHMtPm5hbWUsICJtdWQtdGVzdCIpKSB7CisJCXVkZWJ1ZygwLCAiJXM6IFRlc3Qgc3Rh
bGwgKyByZXNldFxuIiwgX19mdW5jX18pOworCQlyZXQgPSAtRU5PRU5UOworCQlnb3RvIGVycm9y
OworCX0KKworCWlmIChsZW5ndGggPiBtcmVnLT5tYXhfdHJhbnNmZXJfc2l6ZSkgeworCQl1ZGVi
dWcoMCwgIiVzOiBMZW5ndGggb3ZlcmZsb3cgJXVcbiIsIF9fZnVuY19fLCBsZW5ndGgpOworCQly
ZXQgPSAtRU9WRVJGTE9XOworCQlnb3RvIGVycm9yOworCX0KKworCWlmIChpbikgeworCQl0cmFu
c2Zlci0+YnVmX2luX3JlcS0+bGVuZ3RoID0gbGVuZ3RoOworCQltdWRfcmVnbWFwX3F1ZXVlX2Zv
cl9wcm9jZXNzaW5nKHRyYW5zZmVyKTsKKwkJbXVkX3JlZ21hcF9xdWV1ZV9oZWFkZXIobXJlZyk7
CisJfSBlbHNlIHsKKwkJdHJhbnNmZXItPmJ1Zl9vdXRfcmVxLT5sZW5ndGggPSBsZW5ndGg7CisK
KwkJc3Bpbl9sb2NrX2lycXNhdmUoJnRyYW5zZmVyLT5sb2NrLCBmbGFncyk7CisJCXJldCA9IHVz
Yl9lcF9xdWV1ZShtcmVnLT5vdXRfZXAsIHRyYW5zZmVyLT5idWZfb3V0X3JlcSwgR0ZQX0FUT01J
Qyk7CisJCWlmICghcmV0KQorCQkJdHJhbnNmZXItPmN1cnJlbnRfcmVxID0gdHJhbnNmZXItPmJ1
Zl9vdXRfcmVxOworCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0cmFuc2Zlci0+bG9jaywgZmxh
Z3MpOworCQlpZiAocmV0KSB7CisJCQlwcl93YXJuKCJRdWV1ZWluZyBidWYgb3V0IGZhaWxlZCwg
cmV0PSVkXG4iLCByZXQpOworCQkJZ290byBlcnJvcjsKKwkJfQorCX0KKworCXJldHVybjsKKwor
ZXJyb3I6CisJbXVkX3JlZ21hcF9xdWV1ZV9zdGFsbChtcmVnLCByZXQpOworfQorCitzdGF0aWMg
dm9pZCBtdWRfcmVnbWFwX2J1Zl9vdXRfcmVxX2NvbXBsZXRlKHN0cnVjdCB1c2JfZXAgKmVwLCBz
dHJ1Y3QgdXNiX3JlcXVlc3QgKnJlcSkKK3sKKwlzdHJ1Y3QgbXVkX3JlZ21hcF90cmFuc2ZlciAq
dHJhbnNmZXIgPSByZXEtPmNvbnRleHQ7CisJc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcgPSB0cmFu
c2Zlci0+bXJlZzsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWJvb2wgcnVuOworCWludCByZXQ7
CisKKwl1ZGVidWcoNCwgIiVzOiBzdGF0dXM9JWQsIGFjdHVhbD0ldSwgbGVuZ3RoPSV1LCB0YWc9
JXVcbiIsIF9fZnVuY19fLAorCSAgICAgICByZXEtPnN0YXR1cywgcmVxLT5hY3R1YWwsIHJlcS0+
bGVuZ3RoLCB0cmFuc2Zlci0+dGFnKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ0cmFuc2Zlci0+
bG9jaywgZmxhZ3MpOworCXRyYW5zZmVyLT5jdXJyZW50X3JlcSA9IE5VTEw7CisJc3Bpbl91bmxv
Y2tfaXJxcmVzdG9yZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKworCWlmICghbXVkX3JlZ21h
cF9jaGVja19yZXFfc3RhdHVzKHJlcSkpCisJCXJldHVybjsKKworCXNwaW5fbG9ja19pcnFzYXZl
KCZtcmVnLT5sb2NrLCBmbGFncyk7CisJcnVuID0gbXJlZy0+cnVuOworCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJm1yZWctPmxvY2ssIGZsYWdzKTsKKworCWlmICghcnVuKQorCQlyZXR1cm47CisK
KwlpZiAocmVxLT5zdGF0dXMpIHsKKwkJdWRlYnVnKDAsICIlczogRmFpbGVkLCBzdGF0dXM9JWRc
biIsIF9fZnVuY19fLCByZXEtPnN0YXR1cyk7CisJCXJldCA9IHJlcS0+c3RhdHVzOworCQlnb3Rv
IGVycm9yOworCX0KKworCWlmIChyZXEtPmFjdHVhbCAhPSByZXEtPmxlbmd0aCkgeworCQl1ZGVi
dWcoMCwgIiVzOiBXcm9uZyBsZW5ndGhcbiIsIF9fZnVuY19fKTsKKwkJcmV0ID0gLUVSRU1PVEVJ
TzsKKwkJZ290byBlcnJvcjsKKwl9CisKKwltdWRfcmVnbWFwX3F1ZXVlX2Zvcl9wcm9jZXNzaW5n
KHRyYW5zZmVyKTsKKwltdWRfcmVnbWFwX3F1ZXVlX2hlYWRlcihtcmVnKTsKKworCXJldHVybjsK
KworZXJyb3I6CisJbXVkX3JlZ21hcF9xdWV1ZV9zdGFsbChtcmVnLCByZXQpOworfQorCitzdGF0
aWMgdm9pZCBtdWRfcmVnbWFwX2J1Zl9pbl9yZXFfY29tcGxldGUoc3RydWN0IHVzYl9lcCAqZXAs
IHN0cnVjdCB1c2JfcmVxdWVzdCAqcmVxKQoreworCXN0cnVjdCBtdWRfcmVnbWFwX3RyYW5zZmVy
ICp0cmFuc2ZlciA9IHJlcS0+Y29udGV4dDsKKwlzdHJ1Y3QgbXVkX3JlZ21hcCAqbXJlZyA9IHRy
YW5zZmVyLT5tcmVnOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9vbCBydW47CisKKwl1ZGVi
dWcoNCwgIiVzOiBzdGF0dXM9JWQsIGFjdHVhbD0ldSwgbGVuZ3RoPSV1LCB0YWc9JXVcbiIsIF9f
ZnVuY19fLAorCSAgICAgICByZXEtPnN0YXR1cywgcmVxLT5hY3R1YWwsIHJlcS0+bGVuZ3RoLCB0
cmFuc2Zlci0+dGFnKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ0cmFuc2Zlci0+bG9jaywgZmxh
Z3MpOworCXRyYW5zZmVyLT5jdXJyZW50X3JlcSA9IE5VTEw7CisJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKworCWlmICghbXVkX3JlZ21hcF9jaGVja19y
ZXFfc3RhdHVzKHJlcSkpCisJCXJldHVybjsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZtcmVnLT5s
b2NrLCBmbGFncyk7CisJcnVuID0gbXJlZy0+cnVuOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUo
Jm1yZWctPmxvY2ssIGZsYWdzKTsKKworCWlmICghcnVuKQorCQlyZXR1cm47CisKKwlpZiAocmVx
LT5hY3R1YWwgIT0gcmVxLT5sZW5ndGgpIHsKKwkJdWRlYnVnKDAsICIlczogV3JvbmcgbGVuZ3Ro
XG4iLCBfX2Z1bmNfXyk7CisJCW11ZF9yZWdtYXBfcXVldWVfc3RhbGwobXJlZywgLUVSRU1PVEVJ
Tyk7CisJfQorfQorCitzdGF0aWMgdm9pZCBtdWRfcmVnbWFwX3N0YXR1c19yZXFfY29tcGxldGUo
c3RydWN0IHVzYl9lcCAqZXAsIHN0cnVjdCB1c2JfcmVxdWVzdCAqcmVxKQoreworCXN0cnVjdCBt
dWRfcmVnbWFwX3RyYW5zZmVyICp0cmFuc2ZlciA9IHJlcS0+Y29udGV4dDsKKwlzdHJ1Y3QgbXVk
X3JlZ21hcCAqbXJlZyA9IHRyYW5zZmVyLT5tcmVnOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJ
Ym9vbCBydW47CisKKwl1ZGVidWcoNCwgIiVzOiBzdGF0dXM9JWQsIGFjdHVhbD0ldSwgbGVuZ3Ro
PSV1LCB0YWc9JXVcbiIsIF9fZnVuY19fLAorCSAgICAgICByZXEtPnN0YXR1cywgcmVxLT5hY3R1
YWwsIHJlcS0+bGVuZ3RoLCB0cmFuc2Zlci0+dGFnKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ0
cmFuc2Zlci0+bG9jaywgZmxhZ3MpOworCXRyYW5zZmVyLT5jdXJyZW50X3JlcSA9IE5VTEw7CisJ
c3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdHJhbnNmZXItPmxvY2ssIGZsYWdzKTsKKworCWlmICgh
bXVkX3JlZ21hcF9jaGVja19yZXFfc3RhdHVzKHJlcSkpCisJCXJldHVybjsKKworCXNwaW5fbG9j
a19pcnFzYXZlKCZtcmVnLT5sb2NrLCBmbGFncyk7CisJcnVuID0gbXJlZy0+cnVuOworCWxpc3Rf
YWRkX3RhaWwoJnRyYW5zZmVyLT5ub2RlLCAmbXJlZy0+ZnJlZV90cmFuc2ZlcnMpOworCXNwaW5f
dW5sb2NrX2lycXJlc3RvcmUoJm1yZWctPmxvY2ssIGZsYWdzKTsKKworCWlmICghcnVuKQorCQly
ZXR1cm47CisKKwlpZiAocmVxLT5hY3R1YWwgIT0gcmVxLT5sZW5ndGgpIHsKKwkJdWRlYnVnKDAs
ICIlczogV3JvbmcgbGVuZ3RoXG4iLCBfX2Z1bmNfXyk7CisJCW11ZF9yZWdtYXBfcXVldWVfc3Rh
bGwobXJlZywgLUVSRU1PVEVJTyk7CisJCXJldHVybjsKKwl9CisKKwkvKiBNYWtlIHN1cmUgaXQn
cyBxdWV1ZWQgKi8KKwltdWRfcmVnbWFwX3F1ZXVlX2hlYWRlcihtcmVnKTsKK30KKworc3RhdGlj
IHZvaWQgbXVkX3JlZ21hcF9mcmVlX3RyYW5zZmVyKHN0cnVjdCBtdWRfcmVnbWFwX3RyYW5zZmVy
ICp0cmFuc2ZlcikKK3sKKwlpZiAoIXRyYW5zZmVyKQorCQlyZXR1cm47CisKKwlrZnJlZSh0cmFu
c2Zlci0+c3RhdHVzX3JlcS0+YnVmKTsKKwl1c2JfZXBfZnJlZV9yZXF1ZXN0KHRyYW5zZmVyLT5t
cmVnLT5pbl9lcCwgdHJhbnNmZXItPnN0YXR1c19yZXEpOworCisJdXNiX2VwX2ZyZWVfcmVxdWVz
dCh0cmFuc2Zlci0+bXJlZy0+aW5fZXAsIHRyYW5zZmVyLT5idWZfaW5fcmVxKTsKKworCWtmcmVl
KHRyYW5zZmVyLT5idWZfb3V0X3JlcS0+YnVmKTsKKwl1c2JfZXBfZnJlZV9yZXF1ZXN0KHRyYW5z
ZmVyLT5tcmVnLT5vdXRfZXAsIHRyYW5zZmVyLT5idWZfb3V0X3JlcSk7CisKKwlrZnJlZSh0cmFu
c2Zlci0+aGVhZGVyX3JlcS0+YnVmKTsKKwl1c2JfZXBfZnJlZV9yZXF1ZXN0KHRyYW5zZmVyLT5t
cmVnLT5vdXRfZXAsIHRyYW5zZmVyLT5oZWFkZXJfcmVxKTsKKworCWtmcmVlKHRyYW5zZmVyKTsK
K30KKworc3RhdGljIHN0cnVjdCBtdWRfcmVnbWFwX3RyYW5zZmVyICptdWRfcmVnbWFwX2FsbG9j
X3RyYW5zZmVyKHN0cnVjdCBtdWRfcmVnbWFwICptcmVnKQoreworCXN0cnVjdCBtdWRfcmVnbWFw
X3RyYW5zZmVyICp0cmFuc2ZlcjsKKwlzdHJ1Y3QgcmVnbWFwX3VzYl9oZWFkZXIgKmhlYWRlcjsK
KwlzdHJ1Y3QgcmVnbWFwX3VzYl9zdGF0dXMgKnN0YXR1czsKKwl2b2lkICpidWY7CisKKwl0cmFu
c2ZlciA9IGt6YWxsb2Moc2l6ZW9mKCp0cmFuc2ZlciksIEdGUF9LRVJORUwpOworCWhlYWRlciA9
IGt6YWxsb2Moc2l6ZW9mKCpoZWFkZXIpLCBHRlBfS0VSTkVMKTsKKwlzdGF0dXMgPSBremFsbG9j
KHNpemVvZigqc3RhdHVzKSwgR0ZQX0tFUk5FTCk7CisJYnVmID0ga21hbGxvYyhtcmVnLT5tYXhf
dHJhbnNmZXJfc2l6ZSwgR0ZQX0tFUk5FTCk7CisJaWYgKCF0cmFuc2ZlciB8fCAhaGVhZGVyIHx8
ICFzdGF0dXMgfHwgIWJ1ZikKKwkJZ290byBmcmVlOworCisJc3Bpbl9sb2NrX2luaXQoJnRyYW5z
ZmVyLT5sb2NrKTsKKwl0cmFuc2Zlci0+bXJlZyA9IG1yZWc7CisKKwl0cmFuc2Zlci0+aGVhZGVy
X3JlcSA9IHVzYl9lcF9hbGxvY19yZXF1ZXN0KG1yZWctPm91dF9lcCwgR0ZQX0tFUk5FTCk7CisJ
aWYgKCF0cmFuc2Zlci0+aGVhZGVyX3JlcSkKKwkJZ290byBmcmVlOworCisJdHJhbnNmZXItPmhl
YWRlcl9yZXEtPmNvbnRleHQgPSB0cmFuc2ZlcjsKKwl0cmFuc2Zlci0+aGVhZGVyX3JlcS0+Y29t
cGxldGUgPSBtdWRfcmVnbWFwX2hlYWRlcl9yZXFfY29tcGxldGU7CisJdHJhbnNmZXItPmhlYWRl
cl9yZXEtPmJ1ZiA9IGhlYWRlcjsKKwl0cmFuc2Zlci0+aGVhZGVyX3JlcS0+bGVuZ3RoID0gc2l6
ZW9mKCpoZWFkZXIpOworCisJdHJhbnNmZXItPmJ1Zl9vdXRfcmVxID0gdXNiX2VwX2FsbG9jX3Jl
cXVlc3QobXJlZy0+b3V0X2VwLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXRyYW5zZmVyLT5idWZfb3V0
X3JlcSkKKwkJZ290byBmcmVlOworCisJdHJhbnNmZXItPmJ1Zl9vdXRfcmVxLT5jb250ZXh0ID0g
dHJhbnNmZXI7CisJdHJhbnNmZXItPmJ1Zl9vdXRfcmVxLT5jb21wbGV0ZSA9IG11ZF9yZWdtYXBf
YnVmX291dF9yZXFfY29tcGxldGU7CisJdHJhbnNmZXItPmJ1Zl9vdXRfcmVxLT5idWYgPSBidWY7
CisKKwl0cmFuc2Zlci0+YnVmX2luX3JlcSA9IHVzYl9lcF9hbGxvY19yZXF1ZXN0KG1yZWctPmlu
X2VwLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXRyYW5zZmVyLT5idWZfaW5fcmVxKQorCQlnb3RvIGZy
ZWU7CisKKwl0cmFuc2Zlci0+YnVmX2luX3JlcS0+Y29udGV4dCA9IHRyYW5zZmVyOworCXRyYW5z
ZmVyLT5idWZfaW5fcmVxLT5jb21wbGV0ZSA9IG11ZF9yZWdtYXBfYnVmX2luX3JlcV9jb21wbGV0
ZTsKKwl0cmFuc2Zlci0+YnVmX2luX3JlcS0+YnVmID0gYnVmOworCisJdHJhbnNmZXItPnN0YXR1
c19yZXEgPSB1c2JfZXBfYWxsb2NfcmVxdWVzdChtcmVnLT5pbl9lcCwgR0ZQX0tFUk5FTCk7CisJ
aWYgKCF0cmFuc2Zlci0+c3RhdHVzX3JlcSkKKwkJZ290byBmcmVlOworCisJdHJhbnNmZXItPnN0
YXR1c19yZXEtPmNvbnRleHQgPSB0cmFuc2ZlcjsKKwl0cmFuc2Zlci0+c3RhdHVzX3JlcS0+Y29t
cGxldGUgPSBtdWRfcmVnbWFwX3N0YXR1c19yZXFfY29tcGxldGU7CisJdHJhbnNmZXItPnN0YXR1
c19yZXEtPmJ1ZiA9IHN0YXR1czsKKwl0cmFuc2Zlci0+c3RhdHVzX3JlcS0+bGVuZ3RoID0gc2l6
ZW9mKCpzdGF0dXMpOworCXN0YXR1cy0+c2lnbmF0dXJlID0gY3B1X3RvX2xlMzIoUkVHTUFQX1VT
Ql9TVEFUVVNfU0lHTkFUVVJFKTsKKworCXJldHVybiB0cmFuc2ZlcjsKKworZnJlZToKKwlpZiAo
dHJhbnNmZXItPnN0YXR1c19yZXEpCisJCXVzYl9lcF9mcmVlX3JlcXVlc3QobXJlZy0+aW5fZXAs
IHRyYW5zZmVyLT5zdGF0dXNfcmVxKTsKKwlpZiAodHJhbnNmZXItPmJ1Zl9pbl9yZXEpCisJCXVz
Yl9lcF9mcmVlX3JlcXVlc3QobXJlZy0+aW5fZXAsIHRyYW5zZmVyLT5idWZfaW5fcmVxKTsKKwlp
ZiAodHJhbnNmZXItPmJ1Zl9vdXRfcmVxKQorCQl1c2JfZXBfZnJlZV9yZXF1ZXN0KG1yZWctPm91
dF9lcCwgdHJhbnNmZXItPmJ1Zl9vdXRfcmVxKTsKKwlpZiAodHJhbnNmZXItPmhlYWRlcl9yZXEp
CisJCXVzYl9lcF9mcmVlX3JlcXVlc3QobXJlZy0+b3V0X2VwLCB0cmFuc2Zlci0+aGVhZGVyX3Jl
cSk7CisJa2ZyZWUoYnVmKTsKKwlrZnJlZShzdGF0dXMpOworCWtmcmVlKGhlYWRlcik7CisJa2Zy
ZWUodHJhbnNmZXIpOworCisJcmV0dXJuIE5VTEw7Cit9CisKK3N0YXRpYyB2b2lkIG11ZF9yZWdt
YXBfZnJlZV90cmFuc2ZlcnMoc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcpCit7CisJbXVkX3JlZ21h
cF9mcmVlX3RyYW5zZmVyKG1yZWctPnRyYW5zZmVyc1swXSk7CisJbXVkX3JlZ21hcF9mcmVlX3Ry
YW5zZmVyKG1yZWctPnRyYW5zZmVyc1sxXSk7Cit9CisKK3N0YXRpYyBpbnQgbXVkX3JlZ21hcF9h
bGxvY190cmFuc2ZlcnMoc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcpCit7CityZXRyeToKKwl1ZGVi
dWcoMSwgIiVzOiBtYXhfdHJhbnNmZXJfc2l6ZT0ldVxuIiwgX19mdW5jX18sCisJICAgICAgIG1y
ZWctPm1heF90cmFuc2Zlcl9zaXplKTsKKworCW1yZWctPnRyYW5zZmVyc1swXSA9IG11ZF9yZWdt
YXBfYWxsb2NfdHJhbnNmZXIobXJlZyk7CisJbXJlZy0+dHJhbnNmZXJzWzFdID0gbXVkX3JlZ21h
cF9hbGxvY190cmFuc2ZlcihtcmVnKTsKKwlpZiAoIW1yZWctPnRyYW5zZmVyc1swXSB8fCAhbXJl
Zy0+dHJhbnNmZXJzWzFdKSB7CisJCW11ZF9yZWdtYXBfZnJlZV90cmFuc2ZlcnMobXJlZyk7CisJ
CWlmIChtcmVnLT5tYXhfdHJhbnNmZXJfc2l6ZSA8IDUxMikKKwkJCXJldHVybiAtRU5PTUVNOyAv
KiBObyBwb2ludCBpbiByZXRyeWluZyB3ZSdsbCBmYWlsIGxhdGVyIGFueXdheSAqLworCisJCW1y
ZWctPm1heF90cmFuc2Zlcl9zaXplIC89IDI7CisJCWdvdG8gcmV0cnk7CisJfQorCisJbGlzdF9h
ZGRfdGFpbCgmbXJlZy0+dHJhbnNmZXJzWzBdLT5ub2RlLCAmbXJlZy0+ZnJlZV90cmFuc2ZlcnMp
OworCWxpc3RfYWRkX3RhaWwoJm1yZWctPnRyYW5zZmVyc1sxXS0+bm9kZSwgJm1yZWctPmZyZWVf
dHJhbnNmZXJzKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBtdWRfcmVnbWFwX3Jl
c2V0X3N0YXRlKHN0cnVjdCBtdWRfcmVnbWFwICptcmVnKQoreworCXVuc2lnbmVkIGxvbmcgZmxh
Z3M7CisKKwl1ZGVidWcoNSwgIiVzOlxuIiwgX19mdW5jX18pOworCisJc3Bpbl9sb2NrX2lycXNh
dmUoJm1yZWctPmxvY2ssIGZsYWdzKTsKKworCW1yZWctPnBlbmRpbmdfcHJvdG9jb2xfcmVzZXQg
PSBmYWxzZTsKKwltcmVnLT5wZW5kaW5nX3N0YWxsID0gZmFsc2U7CisJbXJlZy0+c3RhbGxlZCA9
IGZhbHNlOworCW1yZWctPmhlYWRlcl9xdWV1ZWQgPSBmYWxzZTsKKwltcmVnLT5lcnJubyA9IDA7
CisKKwlJTklUX0xJU1RfSEVBRCgmbXJlZy0+ZnJlZV90cmFuc2ZlcnMpOworCUlOSVRfTElTVF9I
RUFEKCZtcmVnLT5wZW5kaW5nX3RyYW5zZmVycyk7CisKKwlJTklUX0xJU1RfSEVBRCgmbXJlZy0+
dHJhbnNmZXJzWzBdLT5ub2RlKTsKKwlsaXN0X2FkZF90YWlsKCZtcmVnLT50cmFuc2ZlcnNbMF0t
Pm5vZGUsICZtcmVnLT5mcmVlX3RyYW5zZmVycyk7CisJSU5JVF9MSVNUX0hFQUQoJm1yZWctPnRy
YW5zZmVyc1sxXS0+bm9kZSk7CisJbGlzdF9hZGRfdGFpbCgmbXJlZy0+dHJhbnNmZXJzWzFdLT5u
b2RlLCAmbXJlZy0+ZnJlZV90cmFuc2ZlcnMpOworCisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
bXJlZy0+bG9jaywgZmxhZ3MpOworfQorCitzdGF0aWMgdm9pZCBtdWRfcmVnbWFwX3Byb3RvY29s
X3Jlc2V0KHN0cnVjdCBtdWRfcmVnbWFwICptcmVnKQoreworCXN0cnVjdCB1c2JfY29tcG9zaXRl
X2RldiAqY2RldiA9IG1yZWctPmNkZXY7CisJaW50IHJldDsKKworCXVkZWJ1ZygwLCAiJXM6IElO
XG4iLCBfX2Z1bmNfXyk7CisKKwltdWRfcmVnbWFwX3Jlc2V0X3N0YXRlKG1yZWcpOworCisJLyog
Q29tcGxldGUgdGhlIHJlc2V0IHJlcXVlc3QgYW5kIHJldHVybiB0aGUgZXJyb3IgKi8KKwlyZXQg
PSB1c2JfZXBfcXVldWUoY2Rldi0+Z2FkZ2V0LT5lcDAsIGNkZXYtPnJlcSwgR0ZQX0FUT01JQyk7
CisJaWYgKHJldCA8IDApCisJCS8qIEZJWE1FOiBTaG91bGQgd2Ugc3RhbGwgKGFnYWluKSBhbmQg
bGV0IHRoZSBob3N0IHJldHJ5PyAqLworCQlFUlJPUihjZGV2LCAidXNiX2VwX3F1ZXVlIGVycm9y
IG9uIGVwMCAlZFxuIiwgcmV0KTsKKworCW11ZF9yZWdtYXBfcXVldWVfaGVhZGVyKG1yZWcpOwor
CisJdWRlYnVnKDAsICIlczogT1VUXG4iLCBfX2Z1bmNfXyk7Cit9CisKK3N0YXRpYyB2b2lkIG11
ZF9yZWdtYXBfd29ya2VyKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKK3sKKwlzdHJ1Y3QgbXVk
X3JlZ21hcCAqbXJlZyA9IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3QgbXVkX3JlZ21hcCwgd29y
ayk7CisJc3RydWN0IG11ZF9yZWdtYXBfdHJhbnNmZXIgKnRyYW5zZmVyOworCXVuc2lnbmVkIGlu
dCBpbmRleCwgcmVnbnI7CisJc3RydWN0IGZfbXVkX2NlbGwgKmNlbGw7CisJYm9vbCBpbiwgc3Rh
bGxlZDsKKwlpbnQgcmV0LCBlcnJvcjsKKwlzaXplX3QgbGVuOworCXUzMiBmbGFnczsKKworCWZv
ciAoaW5kZXggPSAwOyBpbmRleCA8IG1yZWctPm51bV9jZWxsczsgaW5kZXgrKykgeworCQljZWxs
ID0gbXJlZy0+Y2VsbHNbaW5kZXhdOworCQlpZiAoY2VsbC0+b3BzLT5lbmFibGUpCisJCQljZWxs
LT5vcHMtPmVuYWJsZShjZWxsKTsKKwl9CisKKwl3aGlsZSAobXJlZy0+cnVuKSB7CisJCXNwaW5f
bG9ja19pcnEoJm1yZWctPmxvY2spOworCQlzdGFsbGVkID0gbXJlZy0+c3RhbGxlZDsKKwkJdHJh
bnNmZXIgPSBsaXN0X2ZpcnN0X2VudHJ5X29yX251bGwoJm1yZWctPnBlbmRpbmdfdHJhbnNmZXJz
LCBzdHJ1Y3QgbXVkX3JlZ21hcF90cmFuc2Zlciwgbm9kZSk7CisJCWlmICh0cmFuc2ZlcikKKwkJ
CWxpc3RfZGVsX2luaXQoJnRyYW5zZmVyLT5ub2RlKTsKKwkJc3Bpbl91bmxvY2tfaXJxKCZtcmVn
LT5sb2NrKTsKKworCQlpZiAobXJlZy0+cGVuZGluZ19wcm90b2NvbF9yZXNldCkgeworCQkJbXVk
X3JlZ21hcF9wcm90b2NvbF9yZXNldChtcmVnKTsKKwkJCWNvbnRpbnVlOworCQl9CisKKwkJaWYg
KG1yZWctPnBlbmRpbmdfc3RhbGwpIHsKKwkJCW11ZF9yZWdtYXBfc3RhbGwobXJlZyk7CisJCQlj
b250aW51ZTsKKwkJfQorCisJCWlmIChzdGFsbGVkIHx8ICF0cmFuc2ZlcikgeworCQkJLyogVXNl
IF9pbnRlcnJ1cHRpYmxlIHRvIGF2b2lkIHRyaWdnZXJpbmcgaHVuZyB0YXNrIHdhcm5pbmdzICov
CisJCQl3YWl0X2V2ZW50X2ludGVycnVwdGlibGUobXJlZy0+d2FpdHEsICFtcmVnLT5ydW4gfHwK
KwkJCQkJCSBtcmVnLT5wZW5kaW5nX3N0YWxsIHx8CisJCQkJCQkgbXJlZy0+cGVuZGluZ19wcm90
b2NvbF9yZXNldCB8fAorCQkJCQkJICFsaXN0X2VtcHR5KCZtcmVnLT5wZW5kaW5nX3RyYW5zZmVy
cykpOworCQkJY29udGludWU7CisJCX0KKworCQlzcGluX2xvY2tfaXJxKCZ0cmFuc2Zlci0+bG9j
ayk7CisJCWluZGV4ID0gdHJhbnNmZXItPmluZGV4OworCQlpbiA9IHRyYW5zZmVyLT5pbjsKKwkJ
cmVnbnIgPSB0cmFuc2Zlci0+cmVnbnI7CisJCWZsYWdzID0gdHJhbnNmZXItPmZsYWdzOworCQlp
ZiAoaW4pCisJCQlsZW4gPSB0cmFuc2Zlci0+YnVmX2luX3JlcS0+bGVuZ3RoOworCQllbHNlCisJ
CQlsZW4gPSB0cmFuc2Zlci0+YnVmX291dF9yZXEtPmxlbmd0aDsKKwkJc3Bpbl91bmxvY2tfaXJx
KCZ0cmFuc2Zlci0+bG9jayk7CisKKwkJLy8gRklYTUU6IGNoZWNrIGxlbj8KKworCQljZWxsID0g
bXJlZy0+Y2VsbHNbaW5kZXhdOworCisJCWlmIChpbikgeworCQkJdWRlYnVnKDIsICJjZWxsLT5v
cHMtPnJlYWRyZWcocmVnbnI9MHglMDJ4LCBsZW49JXp1KVxuIiwgcmVnbnIsIGxlbik7CisKKwkJ
CWVycm9yID0gY2VsbC0+b3BzLT5yZWFkcmVnKGNlbGwsIHJlZ25yLAorCQkJCQkJICAgdHJhbnNm
ZXItPmJ1Zl9pbl9yZXEtPmJ1ZiwgJmxlbiwKKwkJCQkJCSAgIGZsYWdzICYgUkVHTUFQX1VTQl9I
RUFERVJfRkxBR19DT01QUkVTU0lPTl9NQVNLKTsKKwkJCWlmIChlcnJvcikgeworCQkJCXVkZWJ1
ZygyLCAiICAgIGVycm9yPSVkXG4iLCBlcnJvcik7CisJCQkJLy8gRklYTUU6IFN0YWxsIG9yIHJ1
biBpdHMgY291cnNlIHRvIHN0YXR1cyBzdGFnZT8gU3RhbGxpbmcgdGFrZXMgdGltZS4uLgorCQkJ
fQorCisJCQkvKiBJbiBjYXNlIHRoZSBidWZmZXIgd2FzIGNvbXByZXNzZWQgKi8KKwkJCXRyYW5z
ZmVyLT5idWZfaW5fcmVxLT5sZW5ndGggPSBsZW47CisKKwkJCXJldCA9IHVzYl9lcF9xdWV1ZSht
cmVnLT5pbl9lcCwgdHJhbnNmZXItPmJ1Zl9pbl9yZXEsIEdGUF9LRVJORUwpOworCQkJaWYgKHJl
dCkgeworCQkJCXByX3dhcm4oIkZhaWxlZCB0byBxdWV1ZSBidWZfaW5fcmVxIHJldD0lZFxuIiwg
cmV0KTsKKwkJCQltdWRfcmVnbWFwX3F1ZXVlX3N0YWxsKHRyYW5zZmVyLT5tcmVnLCByZXQpOwor
CQkJCWNvbnRpbnVlOworCQkJfQorCisJCQltdWRfcmVnbWFwX3F1ZXVlX3N0YXR1cyh0cmFuc2Zl
ciwgZXJyb3IpOworCQl9IGVsc2UgeworCQkJdWRlYnVnKDIsICJjZWxsLT5vcHMtPndyaXRlcmVn
KHJlZ25yPTB4JTAyeCwgbGVuPSV6dSlcbiIsIHJlZ25yLCBsZW4pOworCisJCQllcnJvciA9IGNl
bGwtPm9wcy0+d3JpdGVyZWcoY2VsbCwgcmVnbnIsCisJCQkJCQkgICAgdHJhbnNmZXItPmJ1Zl9v
dXRfcmVxLT5idWYsIGxlbiwKKwkJCQkJCSAgICBmbGFncyAmIFJFR01BUF9VU0JfSEVBREVSX0ZM
QUdfQ09NUFJFU1NJT05fTUFTSyk7CisJCQlpZiAoZXJyb3IpCisJCQkJdWRlYnVnKDIsICIgICAg
ZXJyb3I9JWRcbiIsIGVycm9yKTsKKworCQkJbXVkX3JlZ21hcF9xdWV1ZV9zdGF0dXModHJhbnNm
ZXIsIGVycm9yKTsKKwkJfQorCX0KKworCWZvciAoaW5kZXggPSAwOyBpbmRleCA8IG1yZWctPm51
bV9jZWxsczsgaW5kZXgrKykgeworCQljZWxsID0gbXJlZy0+Y2VsbHNbaW5kZXhdOworCQlpZiAo
Y2VsbC0+b3BzLT5kaXNhYmxlKQorCQkJY2VsbC0+b3BzLT5kaXNhYmxlKGNlbGwpOworCX0KK30K
Kworc3RhdGljIGludCBtdWRfcmVnbWFwX3N0YXJ0KHN0cnVjdCBtdWRfcmVnbWFwICptcmVnKQor
eworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwl1ZGVidWcoMSwgIiVzOlxuIiwgX19mdW5jX18p
OworCisJbXVkX3JlZ21hcF9yZXNldF9zdGF0ZShtcmVnKTsKKworCXVzYl9lcF9lbmFibGUobXJl
Zy0+aW5fZXApOworCXVzYl9lcF9lbmFibGUobXJlZy0+b3V0X2VwKTsKKworCXNwaW5fbG9ja19p
cnFzYXZlKCZtcmVnLT5sb2NrLCBmbGFncyk7CisJbXJlZy0+cnVuID0gdHJ1ZTsKKwlzcGluX3Vu
bG9ja19pcnFyZXN0b3JlKCZtcmVnLT5sb2NrLCBmbGFncyk7CisKKwlxdWV1ZV93b3JrKG1yZWct
PndvcmtxLCAmbXJlZy0+d29yayk7CisKKwlyZXR1cm4gbXVkX3JlZ21hcF9xdWV1ZV9oZWFkZXIo
bXJlZyk7Cit9CisKK3ZvaWQgbXVkX3JlZ21hcF9zdG9wKHN0cnVjdCBtdWRfcmVnbWFwICptcmVn
KQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwl1ZGVidWcoMSwgIiVzOlxuIiwgX19mdW5j
X18pOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJm1yZWctPmxvY2ssIGZsYWdzKTsKKwltcmVnLT5y
dW4gPSBmYWxzZTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZtcmVnLT5sb2NrLCBmbGFncyk7
CisKKwl3YWtlX3VwKCZtcmVnLT53YWl0cSk7CisKKwl1c2JfZXBfZGlzYWJsZShtcmVnLT5pbl9l
cCk7CisJdXNiX2VwX2Rpc2FibGUobXJlZy0+b3V0X2VwKTsKK30KKworaW50IG11ZF9yZWdtYXBf
c2V0dXAoc3RydWN0IG11ZF9yZWdtYXAgKm1yZWcsIHN0cnVjdCB1c2JfZnVuY3Rpb24gKmYsCisJ
CSAgICAgY29uc3Qgc3RydWN0IHVzYl9jdHJscmVxdWVzdCAqY3RybCkKK3sKKwlzdHJ1Y3QgdXNi
X2NvbXBvc2l0ZV9kZXYgKmNkZXYgPSBmLT5jb25maWctPmNkZXY7CisJdTE2IGxlbmd0aCA9IGxl
MTZfdG9fY3B1KGN0cmwtPndMZW5ndGgpOworCXN0cnVjdCB1c2JfcmVxdWVzdCAqcmVxICA9IGNk
ZXYtPnJlcTsKKwlpbnQgcmV0OworCisJdWRlYnVnKDEsICIlczogYlJlcXVlc3Q9MHgleCwgbGVu
Z3RoPSV1XG4iLCBfX2Z1bmNfXywgY3RybC0+YlJlcXVlc3QsIGxlbmd0aCk7CisKKwlpZiAoY3Ry
bC0+YlJlcXVlc3RUeXBlICE9IChVU0JfRElSX0lOIHwgVVNCX1RZUEVfVkVORE9SIHwgVVNCX1JF
Q0lQX0lOVEVSRkFDRSkpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKGN0cmwtPmJSZXF1ZXN0
ID09IFVTQl9SRVFfR0VUX0RFU0NSSVBUT1IpIHsKKwkJdTggdHlwZSA9IGxlMTZfdG9fY3B1KGN0
cmwtPndWYWx1ZSkgPj4gODsKKwkJdTggaW5kZXggPSBsZTE2X3RvX2NwdShjdHJsLT53VmFsdWUp
ICYgMHhmZjsKKworCQl1ZGVidWcoMSwgIiAgICBVU0JfUkVRX0dFVF9ERVNDUklQVE9SOiB0eXBl
PSV1IGluZGV4PSV1XG4iLCB0eXBlLCBpbmRleCk7CisKKwkJaWYgKHR5cGUgPT0gUkVHTUFQX1VT
Ql9EVF9JTlRFUkZBQ0UgJiYgaW5kZXggPT0gMCkgeworCQkJc3RydWN0IHJlZ21hcF91c2JfaW50
ZXJmYWNlX2Rlc2NyaXB0b3IgKmRlc2MgPSByZXEtPmJ1ZjsKKworCQkJZGVzYy0+Ykxlbmd0aCA9
IHNpemVvZigqZGVzYyk7CisJCQlkZXNjLT5iRGVzY3JpcHRvclR5cGUgPSBSRUdNQVBfVVNCX0RU
X0lOVEVSRkFDRTsKKwkJCWRlc2MtPmJOdW1SZWdtYXBzID0gbXJlZy0+bnVtX2NlbGxzOworCQkJ
cmVxLT56ZXJvID0gMDsKKwkJCXJlcS0+bGVuZ3RoID0gbWluX3QodW5zaWduZWQgaW50LCBsZW5n
dGgsIHNpemVvZigqZGVzYykpOworCQl9IGVsc2UgaWYgKHR5cGUgPT0gUkVHTUFQX1VTQl9EVF9N
QVApIHsKKwkJCXN0cnVjdCByZWdtYXBfdXNiX21hcF9kZXNjcmlwdG9yICpkZXNjID0gcmVxLT5i
dWY7CisJCQl1bnNpZ25lZCBpbnQgbWF4X3RyYW5zZmVyX3NpemU7CisJCQlzdHJ1Y3QgZl9tdWRf
Y2VsbCAqY2VsbDsKKworCQkJaWYgKGluZGV4ID49IG1yZWctPm51bV9jZWxscykKKwkJCQlyZXR1
cm4gLUVOT0VOVDsKKworCQkJY2VsbCA9IG1yZWctPmNlbGxzW2luZGV4XTsKKworCQkJZGVzYy0+
Ykxlbmd0aCA9IHNpemVvZigqZGVzYyk7CisJCQlkZXNjLT5iRGVzY3JpcHRvclR5cGUgPSBSRUdN
QVBfVVNCX0RUX01BUDsKKwkJCWlmIChzdHJzY3B5X3BhZChkZXNjLT5uYW1lLCBjZWxsLT5vcHMt
Pm5hbWUsIDMyKSA8IDApCisJCQkJcmV0dXJuIC1FSU5WQUw7CisJCQlkZXNjLT5iUmVnaXN0ZXJW
YWx1ZUJpdHMgPSBjZWxsLT5vcHMtPnJlZ3ZhbF9ieXRlcyAqIDg7CisJCQlkZXNjLT5iQ29tcHJl
c3Npb24gPSBjZWxsLT5vcHMtPmNvbXByZXNzaW9uOworCQkJbWF4X3RyYW5zZmVyX3NpemUgPSBt
aW4obXJlZy0+bWF4X3RyYW5zZmVyX3NpemUsCisJCQkJCQljZWxsLT5vcHMtPm1heF90cmFuc2Zl
cl9zaXplKTsKKwkJCWRlc2MtPmJNYXhUcmFuc2ZlclNpemVPcmRlciA9IGlsb2cyKG1heF90cmFu
c2Zlcl9zaXplKTsKKwkJCXJlcS0+emVybyA9IDA7CisJCQlyZXEtPmxlbmd0aCA9IG1pbl90KHVu
c2lnbmVkIGludCwgbGVuZ3RoLCBzaXplb2YoKmRlc2MpKTsKKwkJfSBlbHNlIHsKKwkJCXJldHVy
biAtRUlOVkFMOworCQl9CisJfSBlbHNlIGlmIChjdHJsLT5iUmVxdWVzdCA9PSBSRUdNQVBfVVNC
X1JFUV9QUk9UT0NPTF9SRVNFVCAmJiBsZW5ndGggPT0gMSkgeworCQl1bnNpZ25lZCBsb25nIGZs
YWdzOworCisJCURCRyhjZGV2LCAiUHJvdG9jb2wgcmVzZXQgcmVxdWVzdDogZXJybm89JXVcbiIs
IG1yZWctPmVycm5vKTsKKworCQlzcGluX2xvY2tfaXJxc2F2ZSgmbXJlZy0+bG9jaywgZmxhZ3Mp
OworCQltcmVnLT5wZW5kaW5nX3Byb3RvY29sX3Jlc2V0ID0gdHJ1ZTsKKwkJKih1OCAqKXJlcS0+
YnVmID0gbXJlZy0+ZXJybm87CisJCW1yZWctPmVycm5vID0gMDsKKwkJc3Bpbl91bmxvY2tfaXJx
cmVzdG9yZSgmbXJlZy0+bG9jaywgZmxhZ3MpOworCisJCXJlcS0+emVybyA9IDA7CisJCXJlcS0+
bGVuZ3RoID0gbGVuZ3RoOworCisJCXdha2VfdXAoJm1yZWctPndhaXRxKTsKKworCQlyZXR1cm4g
VVNCX0dBREdFVF9ERUxBWUVEX1NUQVRVUzsKKwl9IGVsc2UgeworCQlyZXR1cm4gLUVJTlZBTDsK
Kwl9CisKKwlyZXQgPSB1c2JfZXBfcXVldWUoY2Rldi0+Z2FkZ2V0LT5lcDAsIHJlcSwgR0ZQX0FU
T01JQyk7CisJaWYgKHJldCA8IDApCisJCUVSUk9SKGNkZXYsICJ1c2JfZXBfcXVldWUgZXJyb3Ig
b24gZXAwICVkXG4iLCByZXQpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IG11ZF9yZWdtYXBf
c2V0X2FsdChzdHJ1Y3QgbXVkX3JlZ21hcCAqbXJlZywgc3RydWN0IHVzYl9mdW5jdGlvbiAqZikK
K3sKKwlzdHJ1Y3QgdXNiX2NvbXBvc2l0ZV9kZXYgKmNkZXYgPSBmLT5jb25maWctPmNkZXY7CisK
KwlEQkcoY2RldiwgIiVzOiByZXNldFxuIiwgX19mdW5jX18pOworCisJaWYgKCFtcmVnLT5pbl9l
cC0+ZGVzYyB8fCAhbXJlZy0+b3V0X2VwLT5kZXNjKSB7CisJCURCRyhjZGV2LCAiJXM6IGluaXRc
biIsIF9fZnVuY19fKTsKKwkJaWYgKGNvbmZpZ19lcF9ieV9zcGVlZChjZGV2LT5nYWRnZXQsIGYs
IG1yZWctPmluX2VwKSB8fAorCQkgICAgY29uZmlnX2VwX2J5X3NwZWVkKGNkZXYtPmdhZGdldCwg
ZiwgbXJlZy0+b3V0X2VwKSkgeworCQkJbXJlZy0+aW5fZXAtPmRlc2MgPSBOVUxMOworCQkJbXJl
Zy0+b3V0X2VwLT5kZXNjID0gTlVMTDsKKwkJCXJldHVybiAtRUlOVkFMOworCQl9CisJfQorCisJ
bXVkX3JlZ21hcF9zdG9wKG1yZWcpOworCisJcmV0dXJuIG11ZF9yZWdtYXBfc3RhcnQobXJlZyk7
Cit9CisKK3N0cnVjdCBtdWRfcmVnbWFwICptdWRfcmVnbWFwX2luaXQoc3RydWN0IHVzYl9jb21w
b3NpdGVfZGV2ICpjZGV2LAorCQkJCSAgIHN0cnVjdCB1c2JfZXAgKmluX2VwLCBzdHJ1Y3QgdXNi
X2VwICpvdXRfZXAsCisJCQkJICAgc3RydWN0IGZfbXVkX2NlbGwgKipjZWxscywgdW5zaWduZWQg
aW50IG51bV9jZWxscykKK3sKKwlzaXplX3QgbWF4X3RyYW5zZmVyX3NpemUgPSAwOworCXN0cnVj
dCBtdWRfcmVnbWFwICptcmVnOworCXVuc2lnbmVkIGludCBpOworCWludCByZXQ7CisKKwlmb3Ig
KGkgPSAwOyBpIDwgbnVtX2NlbGxzOyBpKyspIHsKKwkJc2l6ZV90IGNlbGxfbWF4ID0gY2VsbHNb
aV0tPm9wcy0+bWF4X3RyYW5zZmVyX3NpemU7CisKKwkJaWYgKCFpc19wb3dlcl9vZl8yKGNlbGxf
bWF4KSkgeworCQkJcHJfZXJyKCIlczogTWF4IHRyYW5zZmVyIHNpemUgbXVzdCBiZSBhIHBvd2Vy
IG9mIHR3bzogJXVcbiIsCisJCQkgICAgICAgX19mdW5jX18sIGNlbGxfbWF4KTsKKwkJCXJldHVy
biBFUlJfUFRSKC1FSU5WQUwpOworCQl9CisJCW1heF90cmFuc2Zlcl9zaXplID0gbWF4KG1heF90
cmFuc2Zlcl9zaXplLCBjZWxsX21heCk7CisJfQorCisJbXJlZyA9IGt6YWxsb2Moc2l6ZW9mKCpt
cmVnKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFtcmVnKQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVN
KTsKKworCW1yZWctPmNkZXYgPSBjZGV2OworCW1yZWctPmluX2VwID0gaW5fZXA7CisJbXJlZy0+
b3V0X2VwID0gb3V0X2VwOworCW1yZWctPmNlbGxzID0gY2VsbHM7CisJbXJlZy0+bnVtX2NlbGxz
ID0gbnVtX2NlbGxzOworCW1yZWctPm1heF90cmFuc2Zlcl9zaXplID0gbWF4X3RyYW5zZmVyX3Np
emU7CisKKwlzcGluX2xvY2tfaW5pdCgmbXJlZy0+bG9jayk7CisKKwlJTklUX0xJU1RfSEVBRCgm
bXJlZy0+ZnJlZV90cmFuc2ZlcnMpOworCUlOSVRfTElTVF9IRUFEKCZtcmVnLT5wZW5kaW5nX3Ry
YW5zZmVycyk7CisKKwlJTklUX1dPUksoJm1yZWctPndvcmssIG11ZF9yZWdtYXBfd29ya2VyKTsK
Kwlpbml0X3dhaXRxdWV1ZV9oZWFkKCZtcmVnLT53YWl0cSk7CisKKwltcmVnLT53b3JrcSA9IGFs
bG9jX3dvcmtxdWV1ZSgibXVkX3JlZ21hcCIsIDAsIDApOworCWlmICghbXJlZy0+d29ya3EpIHsK
KwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBmYWlsOworCX0KKworCXJldCA9IG11ZF9yZWdtYXBf
YWxsb2NfdHJhbnNmZXJzKG1yZWcpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbDsKKworCXJldHVy
biBtcmVnOworZmFpbDoKKwltdWRfcmVnbWFwX2NsZWFudXAobXJlZyk7CisKKwlyZXR1cm4gRVJS
X1BUUihyZXQpOworfQorCit2b2lkIG11ZF9yZWdtYXBfY2xlYW51cChzdHJ1Y3QgbXVkX3JlZ21h
cCAqbXJlZykKK3sKKwljYW5jZWxfd29ya19zeW5jKCZtcmVnLT53b3JrKTsKKwlpZiAobXJlZy0+
d29ya3EpCisJCWRlc3Ryb3lfd29ya3F1ZXVlKG1yZWctPndvcmtxKTsKKwltdWRfcmVnbWFwX2Zy
ZWVfdHJhbnNmZXJzKG1yZWcpOworCWtmcmVlKG1yZWcpOworfQotLSAKMi4yMy4wCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGlu
ZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
