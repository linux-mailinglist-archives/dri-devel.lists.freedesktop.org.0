Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AD5ED278662
	for <lists+dri-devel@lfdr.de>; Fri, 25 Sep 2020 13:56:15 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4F09B6EC9F;
	Fri, 25 Sep 2020 11:56:08 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2BC506EC9B;
 Fri, 25 Sep 2020 11:56:07 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 9BA80AF27;
 Fri, 25 Sep 2020 11:56:05 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: sumit.semwal@linaro.org, christian.koenig@amd.com, afd@ti.com,
 corbet@lwn.net, benjamin.gaignard@linaro.org, lmark@codeaurora.org,
 labbott@redhat.com, Brian.Starkey@arm.com, john.stultz@linaro.org,
 maarten.lankhorst@linux.intel.com, mripard@kernel.org, airlied@linux.ie,
 daniel@ffwll.ch, l.stach@pengutronix.de, linux+etnaviv@armlinux.org.uk,
 christian.gmeiner@gmail.com, jani.nikula@linux.intel.com,
 joonas.lahtinen@linux.intel.com, rodrigo.vivi@intel.com,
 thierry.reding@gmail.com, jonathanh@nvidia.com, pawel@osciak.com,
 m.szyprowski@samsung.com, kyungmin.park@samsung.com, tfiga@chromium.org,
 mchehab@kernel.org, matthew.auld@intel.com, robin.murphy@arm.com,
 thomas.hellstrom@intel.com, sam@ravnborg.org, kraxel@redhat.com,
 arnd@arndb.de, gregkh@linuxfoundation.org
Subject: [PATCH v3 2/4] dma-buf: Use struct dma_buf_map in dma_buf_vmap()
 interfaces
Date: Fri, 25 Sep 2020 13:55:59 +0200
Message-Id: <20200925115601.23955-3-tzimmermann@suse.de>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20200925115601.23955-1-tzimmermann@suse.de>
References: <20200925115601.23955-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-doc@vger.kernel.org, Daniel Vetter <daniel.vetter@ffwll.ch>,
 intel-gfx@lists.freedesktop.org, etnaviv@lists.freedesktop.org,
 dri-devel@lists.freedesktop.org, linaro-mm-sig@lists.linaro.org,
 Thomas Zimmermann <tzimmermann@suse.de>, linux-tegra@vger.kernel.org,
 linux-media@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBwYXRjaCB1cGRhdGVzIGRtYV9idWZfdm1hcCgpIGFuZCBkbWEtYnVmJ3Mgdm1hcCBjYWxs
YmFjayB0byB1c2UKc3RydWN0IGRtYV9idWZfbWFwLgoKVGhlIGludGVyZmFjZXMgdXNlZCB0byBy
ZXR1cm4gYSBidWZmZXIgYWRkcmVzcy4gVGhpcyBhZGRyZXNzIG5vdyBnZXRzCnN0b3JlZCBpbiBh
biBpbnN0YW5jZSBvZiB0aGUgc3RydWN0dXJlIHRoYXQgaXMgZ2l2ZW4gYXMgYW4gYWRkaXRpb25h
bAphcmd1bWVudC4gVGhlIGZ1bmN0aW9ucyByZXR1cm4gYW4gZXJybm8gY29kZSBvbiBlcnJvcnMu
CgpVc2VycyBvZiB0aGUgZnVuY3Rpb25zIGFyZSB1cGRhdGVkIGFjY29yZGluZ2x5LiBUaGlzIGlz
IG9ubHkgYW4gaW50ZXJmYWNlCmNoYW5nZS4gSXQgaXMgY3VycmVudGx5IGV4cGVjdGVkIHRoYXQg
ZG1hLWJ1ZiBtZW1vcnkgY2FuIGJlIGFjY2Vzc2VkIHdpdGgKc3lzdGVtIG1lbW9yeSBsb2FkL3N0
b3JlIG9wZXJhdGlvbnMuCgp2MzoKCSogdXBkYXRlIGZhc3RycGMgZHJpdmVyIChrZXJuZWwgdGVz
dCByb2JvdCkKdjI6CgkqIGFsd2F5cyBjbGVhciBtYXAgcGFyYW1ldGVyIGluIGRtYV9idWZfdm1h
cCgpIChEYW5pZWwpCgkqIGluY2x1ZGUgZG1hLWJ1Zi1oZWFwcyBhbmQgaTkxNSBzZWxmdGVzdHMg
KGtlcm5lbCB0ZXN0IHJvYm90KQoKU2lnbmVkLW9mZi1ieTogVGhvbWFzIFppbW1lcm1hbm4gPHR6
aW1tZXJtYW5uQHN1c2UuZGU+CkFja2VkLWJ5OiBTdW1pdCBTZW13YWwgPHN1bWl0LnNlbXdhbEBs
aW5hcm8ub3JnPgpBY2tlZC1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0Bh
bWQuY29tPgpBY2tlZC1ieTogRGFuaWVsIFZldHRlciA8ZGFuaWVsLnZldHRlckBmZndsbC5jaD4K
LS0tCiBkcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jICAgICAgICAgICAgICAgICAgICAgfCAyOCAr
KysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2RtYS1idWYvaGVhcHMvaGVhcC1oZWxwZXJzLmMg
ICAgICAgICAgfCAgOCArKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX2NtYV9oZWxwZXIu
YyAgICAgICAgICB8IDEzICsrKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9nZW1fc2htZW1f
aGVscGVyLmMgICAgICAgIHwgMTQgKysrKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9wcmlt
ZS5jICAgICAgICAgICAgICAgICAgIHwgIDkgKysrKy0tCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZp
di9ldG5hdml2X2dlbV9wcmltZS5jICAgfCAgOCArKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9kbWFidWYuYyAgICB8IDExICsrKysrKy0tCiAuLi4vZHJtL2k5MTUvZ2Vt
L3NlbGZ0ZXN0cy9pOTE1X2dlbV9kbWFidWYuYyAgfCAxMiArKysrKystLQogLi4uL2dwdS9kcm0v
aTkxNS9nZW0vc2VsZnRlc3RzL21vY2tfZG1hYnVmLmMgIHwgMTAgKysrKystLQogZHJpdmVycy9n
cHUvZHJtL3RlZ3JhL2dlbS5jICAgICAgICAgICAgICAgICAgIHwgMTggKysrKysrKystLS0tCiAu
Li4vY29tbW9uL3ZpZGVvYnVmMi92aWRlb2J1ZjItZG1hLWNvbnRpZy5jICAgfCAxNCArKysrKysr
LS0tCiAuLi4vbWVkaWEvY29tbW9uL3ZpZGVvYnVmMi92aWRlb2J1ZjItZG1hLXNnLmMgfCAxNiAr
KysrKysrLS0tLQogLi4uL2NvbW1vbi92aWRlb2J1ZjIvdmlkZW9idWYyLXZtYWxsb2MuYyAgICAg
IHwgMTUgKysrKysrKy0tLQogZHJpdmVycy9taXNjL2Zhc3RycGMuYyAgICAgICAgICAgICAgICAg
ICAgICAgIHwgIDYgKystLQogaW5jbHVkZS9kcm0vZHJtX3ByaW1lLmggICAgICAgICAgICAgICAg
ICAgICAgIHwgIDMgKy0KIGluY2x1ZGUvbGludXgvZG1hLWJ1Zi1tYXAuaCAgICAgICAgICAgICAg
ICAgICB8IDEzICsrKysrKysrKwogaW5jbHVkZS9saW51eC9kbWEtYnVmLmggICAgICAgICAgICAg
ICAgICAgICAgIHwgIDYgKystLQogMTcgZmlsZXMgY2hhbmdlZCwgMTQzIGluc2VydGlvbnMoKyks
IDYxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMg
Yi9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jCmluZGV4IDVlODQ5Y2EyNDFhMC4uNjFiZDI0ZDIx
YjM4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jCisrKyBiL2RyaXZlcnMv
ZG1hLWJ1Zi9kbWEtYnVmLmMKQEAgLTExODYsNDYgKzExODYsNTAgQEAgRVhQT1JUX1NZTUJPTF9H
UEwoZG1hX2J1Zl9tbWFwKTsKICAqIGRtYV9idWZfdm1hcCAtIENyZWF0ZSB2aXJ0dWFsIG1hcHBp
bmcgZm9yIHRoZSBidWZmZXIgb2JqZWN0IGludG8ga2VybmVsCiAgKiBhZGRyZXNzIHNwYWNlLiBT
YW1lIHJlc3RyaWN0aW9ucyBhcyBmb3Igdm1hcCBhbmQgZnJpZW5kcyBhcHBseS4KICAqIEBkbWFi
dWY6CVtpbl0JYnVmZmVyIHRvIHZtYXAKKyAqIEBtYXA6CVtvdXRdCXJldHVybnMgdGhlIHZtYXAg
cG9pbnRlcgogICoKICAqIFRoaXMgY2FsbCBtYXkgZmFpbCBkdWUgdG8gbGFjayBvZiB2aXJ0dWFs
IG1hcHBpbmcgYWRkcmVzcyBzcGFjZS4KICAqIFRoZXNlIGNhbGxzIGFyZSBvcHRpb25hbCBpbiBk
cml2ZXJzLiBUaGUgaW50ZW5kZWQgdXNlIGZvciB0aGVtCiAgKiBpcyBmb3IgbWFwcGluZyBvYmpl
Y3RzIGxpbmVhciBpbiBrZXJuZWwgc3BhY2UgZm9yIGhpZ2ggdXNlIG9iamVjdHMuCiAgKiBQbGVh
c2UgYXR0ZW1wdCB0byB1c2Uga21hcC9rdW5tYXAgYmVmb3JlIHRoaW5raW5nIGFib3V0IHRoZXNl
IGludGVyZmFjZXMuCiAgKgotICogUmV0dXJucyBOVUxMIG9uIGVycm9yLgorICogUmV0dXJucyAw
IG9uIHN1Y2Nlc3MsIG9yIGEgbmVnYXRpdmUgZXJybm8gY29kZSBvdGhlcndpc2UuCiAgKi8KLXZv
aWQgKmRtYV9idWZfdm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmKQoraW50IGRtYV9idWZfdm1h
cChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCkKIHsKLQl2
b2lkICpwdHI7CisJc3RydWN0IGRtYV9idWZfbWFwIHB0cjsKKwlpbnQgcmV0ID0gMDsKKworCWRt
YV9idWZfbWFwX2NsZWFyKG1hcCk7CiAKIAlpZiAoV0FSTl9PTighZG1hYnVmKSkKLQkJcmV0dXJu
IE5VTEw7CisJCXJldHVybiAtRUlOVkFMOwogCiAJaWYgKCFkbWFidWYtPm9wcy0+dm1hcCkKLQkJ
cmV0dXJuIE5VTEw7CisJCXJldHVybiAtRUlOVkFMOwogCiAJbXV0ZXhfbG9jaygmZG1hYnVmLT5s
b2NrKTsKIAlpZiAoZG1hYnVmLT52bWFwcGluZ19jb3VudGVyKSB7CiAJCWRtYWJ1Zi0+dm1hcHBp
bmdfY291bnRlcisrOwogCQlCVUdfT04oZG1hX2J1Zl9tYXBfaXNfbnVsbCgmZG1hYnVmLT52bWFw
X3B0cikpOwotCQlwdHIgPSBkbWFidWYtPnZtYXBfcHRyLnZhZGRyOworCQkqbWFwID0gZG1hYnVm
LT52bWFwX3B0cjsKIAkJZ290byBvdXRfdW5sb2NrOwogCX0KIAogCUJVR19PTihkbWFfYnVmX21h
cF9pc19zZXQoJmRtYWJ1Zi0+dm1hcF9wdHIpKTsKIAotCXB0ciA9IGRtYWJ1Zi0+b3BzLT52bWFw
KGRtYWJ1Zik7Ci0JaWYgKFdBUk5fT05fT05DRShJU19FUlIocHRyKSkpCi0JCXB0ciA9IE5VTEw7
Ci0JaWYgKCFwdHIpCisJcmV0ID0gZG1hYnVmLT5vcHMtPnZtYXAoZG1hYnVmLCAmcHRyKTsKKwlp
ZiAoV0FSTl9PTl9PTkNFKHJldCkpCiAJCWdvdG8gb3V0X3VubG9jazsKIAotCWRtYWJ1Zi0+dm1h
cF9wdHIudmFkZHIgPSBwdHI7CisJZG1hYnVmLT52bWFwX3B0ciA9IHB0cjsKIAlkbWFidWYtPnZt
YXBwaW5nX2NvdW50ZXIgPSAxOwogCisJKm1hcCA9IGRtYWJ1Zi0+dm1hcF9wdHI7CisKIG91dF91
bmxvY2s6CiAJbXV0ZXhfdW5sb2NrKCZkbWFidWYtPmxvY2spOwotCXJldHVybiBwdHI7CisJcmV0
dXJuIHJldDsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfdm1hcCk7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZG1hLWJ1Zi9oZWFwcy9oZWFwLWhlbHBlcnMuYyBiL2RyaXZlcnMvZG1hLWJ1
Zi9oZWFwcy9oZWFwLWhlbHBlcnMuYwppbmRleCBkMDY5NmNmOTM3YWYuLmFlYjllMTAwZjMzOSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9kbWEtYnVmL2hlYXBzL2hlYXAtaGVscGVycy5jCisrKyBiL2Ry
aXZlcnMvZG1hLWJ1Zi9oZWFwcy9oZWFwLWhlbHBlcnMuYwpAQCAtMjM1LDcgKzIzNSw3IEBAIHN0
YXRpYyBpbnQgZG1hX2hlYXBfZG1hX2J1Zl9lbmRfY3B1X2FjY2VzcyhzdHJ1Y3QgZG1hX2J1ZiAq
ZG1hYnVmLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCAqZG1hX2hlYXBfZG1hX2J1Zl92
bWFwKHN0cnVjdCBkbWFfYnVmICpkbWFidWYpCitzdGF0aWMgaW50IGRtYV9oZWFwX2RtYV9idWZf
dm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCkKIHsK
IAlzdHJ1Y3QgaGVhcF9oZWxwZXJfYnVmZmVyICpidWZmZXIgPSBkbWFidWYtPnByaXY7CiAJdm9p
ZCAqdmFkZHI7CkBAIC0yNDQsNyArMjQ0LDExIEBAIHN0YXRpYyB2b2lkICpkbWFfaGVhcF9kbWFf
YnVmX3ZtYXAoc3RydWN0IGRtYV9idWYgKmRtYWJ1ZikKIAl2YWRkciA9IGRtYV9oZWFwX2J1ZmZl
cl92bWFwX2dldChidWZmZXIpOwogCW11dGV4X3VubG9jaygmYnVmZmVyLT5sb2NrKTsKIAotCXJl
dHVybiB2YWRkcjsKKwlpZiAoIXZhZGRyKQorCQlyZXR1cm4gLUVOT01FTTsKKwlkbWFfYnVmX21h
cF9zZXRfdmFkZHIobWFwLCB2YWRkcik7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIHZvaWQg
ZG1hX2hlYXBfZG1hX2J1Zl92dW5tYXAoc3RydWN0IGRtYV9idWYgKmRtYWJ1Ziwgdm9pZCAqdmFk
ZHIpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2dlbV9jbWFfaGVscGVyLmMgYi9k
cml2ZXJzL2dwdS9kcm0vZHJtX2dlbV9jbWFfaGVscGVyLmMKaW5kZXggODI0N2I5NmJhYmU0Li4x
OTY3MGIwNWVhZDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX2NtYV9oZWxw
ZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2dlbV9jbWFfaGVscGVyLmMKQEAgLTYxNywy
MiArNjE3LDIzIEBAIGRybV9nZW1fY21hX3ByaW1lX2ltcG9ydF9zZ190YWJsZV92bWFwKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiB7CiAJc3RydWN0IGRybV9nZW1fY21hX29iamVjdCAqY21hX29i
ajsKIAlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iajsKLQl2b2lkICp2YWRkcjsKKwlzdHJ1Y3Qg
ZG1hX2J1Zl9tYXAgbWFwOworCWludCByZXQ7CiAKLQl2YWRkciA9IGRtYV9idWZfdm1hcChhdHRh
Y2gtPmRtYWJ1Zik7Ci0JaWYgKCF2YWRkcikgeworCXJldCA9IGRtYV9idWZfdm1hcChhdHRhY2gt
PmRtYWJ1ZiwgJm1hcCk7CisJaWYgKHJldCkgewogCQlEUk1fRVJST1IoIkZhaWxlZCB0byB2bWFw
IFBSSU1FIGJ1ZmZlclxuIik7Ci0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOworCQlyZXR1cm4g
RVJSX1BUUihyZXQpOwogCX0KIAogCW9iaiA9IGRybV9nZW1fY21hX3ByaW1lX2ltcG9ydF9zZ190
YWJsZShkZXYsIGF0dGFjaCwgc2d0KTsKIAlpZiAoSVNfRVJSKG9iaikpIHsKLQkJZG1hX2J1Zl92
dW5tYXAoYXR0YWNoLT5kbWFidWYsIHZhZGRyKTsKKwkJZG1hX2J1Zl92dW5tYXAoYXR0YWNoLT5k
bWFidWYsIG1hcC52YWRkcik7CiAJCXJldHVybiBvYmo7CiAJfQogCiAJY21hX29iaiA9IHRvX2Ry
bV9nZW1fY21hX29iaihvYmopOwotCWNtYV9vYmotPnZhZGRyID0gdmFkZHI7CisJY21hX29iai0+
dmFkZHIgPSBtYXAudmFkZHI7CiAKIAlyZXR1cm4gb2JqOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2dl
bV9zaG1lbV9oZWxwZXIuYwppbmRleCBkNzdjOWY4ZmYyNmMuLjYzMjhjZmJiODI4ZSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmMKQEAgLTI2MSwxMyArMjYxLDE2IEBAIEVY
UE9SVF9TWU1CT0woZHJtX2dlbV9zaG1lbV91bnBpbik7CiBzdGF0aWMgdm9pZCAqZHJtX2dlbV9z
aG1lbV92bWFwX2xvY2tlZChzdHJ1Y3QgZHJtX2dlbV9zaG1lbV9vYmplY3QgKnNobWVtKQogewog
CXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqID0gJnNobWVtLT5iYXNlOwotCWludCByZXQ7CisJ
c3RydWN0IGRtYV9idWZfbWFwIG1hcDsKKwlpbnQgcmV0ID0gMDsKIAogCWlmIChzaG1lbS0+dm1h
cF91c2VfY291bnQrKyA+IDApCiAJCXJldHVybiBzaG1lbS0+dmFkZHI7CiAKIAlpZiAob2JqLT5p
bXBvcnRfYXR0YWNoKSB7Ci0JCXNobWVtLT52YWRkciA9IGRtYV9idWZfdm1hcChvYmotPmltcG9y
dF9hdHRhY2gtPmRtYWJ1Zik7CisJCXJldCA9IGRtYV9idWZfdm1hcChvYmotPmltcG9ydF9hdHRh
Y2gtPmRtYWJ1ZiwgJm1hcCk7CisJCWlmICghcmV0KQorCQkJc2htZW0tPnZhZGRyID0gbWFwLnZh
ZGRyOwogCX0gZWxzZSB7CiAJCXBncHJvdF90IHByb3QgPSBQQUdFX0tFUk5FTDsKIApAQCAtMjc5
LDExICsyODIsMTIgQEAgc3RhdGljIHZvaWQgKmRybV9nZW1fc2htZW1fdm1hcF9sb2NrZWQoc3Ry
dWN0IGRybV9nZW1fc2htZW1fb2JqZWN0ICpzaG1lbSkKIAkJCXByb3QgPSBwZ3Byb3Rfd3JpdGVj
b21iaW5lKHByb3QpOwogCQlzaG1lbS0+dmFkZHIgPSB2bWFwKHNobWVtLT5wYWdlcywgb2JqLT5z
aXplID4+IFBBR0VfU0hJRlQsCiAJCQkJICAgIFZNX01BUCwgcHJvdCk7CisJCWlmICghc2htZW0t
PnZhZGRyKQorCQkJcmV0ID0gLUVOT01FTTsKIAl9CiAKLQlpZiAoIXNobWVtLT52YWRkcikgewot
CQlEUk1fREVCVUdfS01TKCJGYWlsZWQgdG8gdm1hcCBwYWdlc1xuIik7Ci0JCXJldCA9IC1FTk9N
RU07CisJaWYgKHJldCkgeworCQlEUk1fREVCVUdfS01TKCJGYWlsZWQgdG8gdm1hcCBwYWdlcywg
ZXJyb3IgJWRcbiIsIHJldCk7CiAJCWdvdG8gZXJyX3B1dF9wYWdlczsKIAl9CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fcHJp
bWUuYwppbmRleCBjMDQ1NWFkMDlmM2QuLjQyZDA4MWM0M2JjOCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2RybV9wcmltZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fcHJpbWUuYwpA
QCAtNjYzLDIyICs2NjMsMjUgQEAgRVhQT1JUX1NZTUJPTChkcm1fZ2VtX3VubWFwX2RtYV9idWYp
OwogLyoqCiAgKiBkcm1fZ2VtX2RtYWJ1Zl92bWFwIC0gZG1hX2J1ZiB2bWFwIGltcGxlbWVudGF0
aW9uIGZvciBHRU0KICAqIEBkbWFfYnVmOiBidWZmZXIgdG8gYmUgbWFwcGVkCisgKiBAbWFwOiB0
aGUgdmlydHVhbCBhZGRyZXNzIG9mIHRoZSBidWZmZXIKICAqCiAgKiBTZXRzIHVwIGEga2VybmVs
IHZpcnR1YWwgbWFwcGluZy4gVGhpcyBjYW4gYmUgdXNlZCBhcyB0aGUgJmRtYV9idWZfb3BzLnZt
YXAKICAqIGNhbGxiYWNrLiBDYWxscyBpbnRvICZkcm1fZ2VtX29iamVjdF9mdW5jcy52bWFwIGZv
ciBkZXZpY2Ugc3BlY2lmaWMgaGFuZGxpbmcuCiAgKgogICogUmV0dXJucyB0aGUga2VybmVsIHZp
cnR1YWwgYWRkcmVzcyBvciBOVUxMIG9uIGZhaWx1cmUuCiAgKi8KLXZvaWQgKmRybV9nZW1fZG1h
YnVmX3ZtYXAoc3RydWN0IGRtYV9idWYgKmRtYV9idWYpCitpbnQgZHJtX2dlbV9kbWFidWZfdm1h
cChzdHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1Ziwgc3RydWN0IGRtYV9idWZfbWFwICptYXApCiB7CiAJ
c3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmogPSBkbWFfYnVmLT5wcml2OwogCXZvaWQgKnZhZGRy
OwogCiAJdmFkZHIgPSBkcm1fZ2VtX3ZtYXAob2JqKTsKIAlpZiAoSVNfRVJSKHZhZGRyKSkKLQkJ
dmFkZHIgPSBOVUxMOworCQlyZXR1cm4gUFRSX0VSUih2YWRkcik7CiAKLQlyZXR1cm4gdmFkZHI7
CisJZG1hX2J1Zl9tYXBfc2V0X3ZhZGRyKG1hcCwgdmFkZHIpOworCisJcmV0dXJuIDA7CiB9CiBF
WFBPUlRfU1lNQk9MKGRybV9nZW1fZG1hYnVmX3ZtYXApOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbV9wcmltZS5jIGIvZHJpdmVycy9ncHUvZHJtL2V0
bmF2aXYvZXRuYXZpdl9nZW1fcHJpbWUuYwppbmRleCA0YWEzNDI2YTliYTQuLjgwYTlmYzE0M2Ji
YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW1fcHJpbWUu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2dlbV9wcmltZS5jCkBAIC04
NSw5ICs4NSwxNSBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dlbV9wcmltZV9yZWxlYXNlKHN0cnVj
dCBldG5hdml2X2dlbV9vYmplY3QgKmV0bmF2aXZfb2JqKQogCiBzdGF0aWMgdm9pZCAqZXRuYXZp
dl9nZW1fcHJpbWVfdm1hcF9pbXBsKHN0cnVjdCBldG5hdml2X2dlbV9vYmplY3QgKmV0bmF2aXZf
b2JqKQogeworCXN0cnVjdCBkbWFfYnVmX21hcCBtYXA7CisJaW50IHJldDsKKwogCWxvY2tkZXBf
YXNzZXJ0X2hlbGQoJmV0bmF2aXZfb2JqLT5sb2NrKTsKIAotCXJldHVybiBkbWFfYnVmX3ZtYXAo
ZXRuYXZpdl9vYmotPmJhc2UuaW1wb3J0X2F0dGFjaC0+ZG1hYnVmKTsKKwlyZXQgPSBkbWFfYnVm
X3ZtYXAoZXRuYXZpdl9vYmotPmJhc2UuaW1wb3J0X2F0dGFjaC0+ZG1hYnVmLCAmbWFwKTsKKwlp
ZiAocmV0KQorCQlyZXR1cm4gTlVMTDsKKwlyZXR1cm4gbWFwLnZhZGRyOwogfQogCiBzdGF0aWMg
aW50IGV0bmF2aXZfZ2VtX3ByaW1lX21tYXBfb2JqKHN0cnVjdCBldG5hdml2X2dlbV9vYmplY3Qg
KmV0bmF2aXZfb2JqLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX2RtYWJ1Zi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2RtYWJ1Zi5j
CmluZGV4IDhkZDI5NWRiZTI0MS4uNmVlOGYyY2ZkOGMxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZG1hYnVmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2RtYWJ1Zi5jCkBAIC03NywxMSArNzcsMTggQEAgc3RhdGljIHZvaWQg
aTkxNV9nZW1fdW5tYXBfZG1hX2J1ZihzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2ht
ZW50LAogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmopOwogfQogCi1zdGF0aWMgdm9p
ZCAqaTkxNV9nZW1fZG1hYnVmX3ZtYXAoc3RydWN0IGRtYV9idWYgKmRtYV9idWYpCitzdGF0aWMg
aW50IGk5MTVfZ2VtX2RtYWJ1Zl92bWFwKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmLCBzdHJ1Y3Qg
ZG1hX2J1Zl9tYXAgKm1hcCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0g
ZG1hX2J1Zl90b19vYmooZG1hX2J1Zik7CisJdm9pZCAqdmFkZHI7CiAKLQlyZXR1cm4gaTkxNV9n
ZW1fb2JqZWN0X3Bpbl9tYXAob2JqLCBJOTE1X01BUF9XQik7CisJdmFkZHIgPSBpOTE1X2dlbV9v
YmplY3RfcGluX21hcChvYmosIEk5MTVfTUFQX1dCKTsKKwlpZiAoSVNfRVJSKHZhZGRyKSkKKwkJ
cmV0dXJuIFBUUl9FUlIodmFkZHIpOworCisJZG1hX2J1Zl9tYXBfc2V0X3ZhZGRyKG1hcCwgdmFk
ZHIpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyB2b2lkIGk5MTVfZ2VtX2RtYWJ1Zl92dW5t
YXAoc3RydWN0IGRtYV9idWYgKmRtYV9idWYsIHZvaWQgKnZhZGRyKQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9kbWFidWYuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fZG1hYnVmLmMKaW5kZXggMmE1
MmI5MjU4NmI5Li5mNzllYmM1MzI5YjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fZG1hYnVmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9kbWFidWYuYwpAQCAtODIsNiArODIsNyBAQCBzdGF0
aWMgaW50IGlndF9kbWFidWZfaW1wb3J0KHZvaWQgKmFyZykKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqOwogCXN0cnVjdCBkbWFfYnVmICpkbWFidWY7CiAJdm9pZCAqb2JqX21hcCwg
KmRtYV9tYXA7CisJc3RydWN0IGRtYV9idWZfbWFwIG1hcDsKIAl1MzIgcGF0dGVybltdID0geyAw
LCAweGFhLCAweGNjLCAweDU1LCAweGZmIH07CiAJaW50IGVyciwgaTsKIApAQCAtMTEwLDcgKzEx
MSw4IEBAIHN0YXRpYyBpbnQgaWd0X2RtYWJ1Zl9pbXBvcnQodm9pZCAqYXJnKQogCQlnb3RvIG91
dF9vYmo7CiAJfQogCi0JZG1hX21hcCA9IGRtYV9idWZfdm1hcChkbWFidWYpOworCWVyciA9IGRt
YV9idWZfdm1hcChkbWFidWYsICZtYXApOworCWRtYV9tYXAgPSBlcnIgPyBOVUxMIDogbWFwLnZh
ZGRyOwogCWlmICghZG1hX21hcCkgewogCQlwcl9lcnIoImRtYV9idWZfdm1hcCBmYWlsZWRcbiIp
OwogCQllcnIgPSAtRU5PTUVNOwpAQCAtMTYzLDYgKzE2NSw3IEBAIHN0YXRpYyBpbnQgaWd0X2Rt
YWJ1Zl9pbXBvcnRfb3duZXJzaGlwKHZvaWQgKmFyZykKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSA9IGFyZzsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwogCXN0cnVj
dCBkbWFfYnVmICpkbWFidWY7CisJc3RydWN0IGRtYV9idWZfbWFwIG1hcDsKIAl2b2lkICpwdHI7
CiAJaW50IGVycjsKIApAQCAtMTcwLDcgKzE3Myw4IEBAIHN0YXRpYyBpbnQgaWd0X2RtYWJ1Zl9p
bXBvcnRfb3duZXJzaGlwKHZvaWQgKmFyZykKIAlpZiAoSVNfRVJSKGRtYWJ1ZikpCiAJCXJldHVy
biBQVFJfRVJSKGRtYWJ1Zik7CiAKLQlwdHIgPSBkbWFfYnVmX3ZtYXAoZG1hYnVmKTsKKwllcnIg
PSBkbWFfYnVmX3ZtYXAoZG1hYnVmLCAmbWFwKTsKKwlwdHIgPSBlcnIgPyBOVUxMIDogbWFwLnZh
ZGRyOwogCWlmICghcHRyKSB7CiAJCXByX2VycigiZG1hX2J1Zl92bWFwIGZhaWxlZFxuIik7CiAJ
CWVyciA9IC1FTk9NRU07CkBAIC0yMTIsNiArMjE2LDcgQEAgc3RhdGljIGludCBpZ3RfZG1hYnVm
X2V4cG9ydF92bWFwKHZvaWQgKmFyZykKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
IGFyZzsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwogCXN0cnVjdCBkbWFfYnVm
ICpkbWFidWY7CisJc3RydWN0IGRtYV9idWZfbWFwIG1hcDsKIAl2b2lkICpwdHI7CiAJaW50IGVy
cjsKIApAQCAtMjI4LDcgKzIzMyw4IEBAIHN0YXRpYyBpbnQgaWd0X2RtYWJ1Zl9leHBvcnRfdm1h
cCh2b2lkICphcmcpCiAJfQogCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKIAotCXB0ciA9IGRt
YV9idWZfdm1hcChkbWFidWYpOworCWVyciA9IGRtYV9idWZfdm1hcChkbWFidWYsICZtYXApOwor
CXB0ciA9IGVyciA/IE5VTEwgOiBtYXAudmFkZHI7CiAJaWYgKCFwdHIpIHsKIAkJcHJfZXJyKCJk
bWFfYnVmX3ZtYXAgZmFpbGVkXG4iKTsKIAkJZXJyID0gLUVOT01FTTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19kbWFidWYuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19kbWFidWYuYwppbmRleCBiZTMwYjI3ZTI5
MjYuLmJlY2Q5ZmI5NWQ1OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3Nl
bGZ0ZXN0cy9tb2NrX2RtYWJ1Zi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxm
dGVzdHMvbW9ja19kbWFidWYuYwpAQCAtNjEsMTEgKzYxLDE3IEBAIHN0YXRpYyB2b2lkIG1vY2tf
ZG1hYnVmX3JlbGVhc2Uoc3RydWN0IGRtYV9idWYgKmRtYV9idWYpCiAJa2ZyZWUobW9jayk7CiB9
CiAKLXN0YXRpYyB2b2lkICptb2NrX2RtYWJ1Zl92bWFwKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVm
KQorc3RhdGljIGludCBtb2NrX2RtYWJ1Zl92bWFwKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmLCBz
dHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCkKIHsKIAlzdHJ1Y3QgbW9ja19kbWFidWYgKm1vY2sgPSB0
b19tb2NrKGRtYV9idWYpOworCXZvaWQgKnZhZGRyOwogCi0JcmV0dXJuIHZtX21hcF9yYW0obW9j
ay0+cGFnZXMsIG1vY2stPm5wYWdlcywgMCk7CisJdmFkZHIgPSB2bV9tYXBfcmFtKG1vY2stPnBh
Z2VzLCBtb2NrLT5ucGFnZXMsIDApOworCWlmICghdmFkZHIpCisJCXJldHVybiAtRU5PTUVNOwor
CWRtYV9idWZfbWFwX3NldF92YWRkcihtYXAsIHZhZGRyKTsKKworCXJldHVybiAwOwogfQogCiBz
dGF0aWMgdm9pZCBtb2NrX2RtYWJ1Zl92dW5tYXAoc3RydWN0IGRtYV9idWYgKmRtYV9idWYsIHZv
aWQgKnZhZGRyKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3RlZ3JhL2dlbS5jIGIvZHJp
dmVycy9ncHUvZHJtL3RlZ3JhL2dlbS5jCmluZGV4IDc5NGVjMjQ1NjkzNC4uY2Q0OTdlZGFkODUw
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdGVncmEvZ2VtLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL3RlZ3JhL2dlbS5jCkBAIC0xMzIsMTQgKzEzMiwxOCBAQCBzdGF0aWMgdm9pZCB0ZWdy
YV9ib191bnBpbihzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBzZ190YWJsZSAqc2d0KQogc3Rh
dGljIHZvaWQgKnRlZ3JhX2JvX21tYXAoc3RydWN0IGhvc3QxeF9ibyAqYm8pCiB7CiAJc3RydWN0
IHRlZ3JhX2JvICpvYmogPSBob3N0MXhfdG9fdGVncmFfYm8oYm8pOworCXN0cnVjdCBkbWFfYnVm
X21hcCBtYXA7CisJaW50IHJldDsKIAotCWlmIChvYmotPnZhZGRyKQorCWlmIChvYmotPnZhZGRy
KSB7CiAJCXJldHVybiBvYmotPnZhZGRyOwotCWVsc2UgaWYgKG9iai0+Z2VtLmltcG9ydF9hdHRh
Y2gpCi0JCXJldHVybiBkbWFfYnVmX3ZtYXAob2JqLT5nZW0uaW1wb3J0X2F0dGFjaC0+ZG1hYnVm
KTsKLQllbHNlCisJfSBlbHNlIGlmIChvYmotPmdlbS5pbXBvcnRfYXR0YWNoKSB7CisJCXJldCA9
IGRtYV9idWZfdm1hcChvYmotPmdlbS5pbXBvcnRfYXR0YWNoLT5kbWFidWYsICZtYXApOworCQly
ZXR1cm4gcmV0ID8gTlVMTCA6IG1hcC52YWRkcjsKKwl9IGVsc2UgewogCQlyZXR1cm4gdm1hcChv
YmotPnBhZ2VzLCBvYmotPm51bV9wYWdlcywgVk1fTUFQLAogCQkJICAgIHBncHJvdF93cml0ZWNv
bWJpbmUoUEFHRV9LRVJORUwpKTsKKwl9CiB9CiAKIHN0YXRpYyB2b2lkIHRlZ3JhX2JvX211bm1h
cChzdHJ1Y3QgaG9zdDF4X2JvICpibywgdm9pZCAqYWRkcikKQEAgLTY0MiwxMiArNjQ2LDE0IEBA
IHN0YXRpYyBpbnQgdGVncmFfZ2VtX3ByaW1lX21tYXAoc3RydWN0IGRtYV9idWYgKmJ1Ziwgc3Ry
dWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCiAJcmV0dXJuIF9fdGVncmFfZ2VtX21tYXAoZ2VtLCB2
bWEpOwogfQogCi1zdGF0aWMgdm9pZCAqdGVncmFfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRtYV9i
dWYgKmJ1ZikKK3N0YXRpYyBpbnQgdGVncmFfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRtYV9idWYg
KmJ1Ziwgc3RydWN0IGRtYV9idWZfbWFwICptYXApCiB7CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0
ICpnZW0gPSBidWYtPnByaXY7CiAJc3RydWN0IHRlZ3JhX2JvICpibyA9IHRvX3RlZ3JhX2JvKGdl
bSk7CiAKLQlyZXR1cm4gYm8tPnZhZGRyOworCWRtYV9idWZfbWFwX3NldF92YWRkcihtYXAsIGJv
LT52YWRkcik7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIHZvaWQgdGVncmFfZ2VtX3ByaW1l
X3Z1bm1hcChzdHJ1Y3QgZG1hX2J1ZiAqYnVmLCB2b2lkICp2YWRkcikKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvbWVkaWEvY29tbW9uL3ZpZGVvYnVmMi92aWRlb2J1ZjItZG1hLWNvbnRpZy5jIGIvZHJp
dmVycy9tZWRpYS9jb21tb24vdmlkZW9idWYyL3ZpZGVvYnVmMi1kbWEtY29udGlnLmMKaW5kZXgg
ZWMzNDQ2Y2M0NWI4Li4xMTQyODI4N2JkZjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbWVkaWEvY29t
bW9uL3ZpZGVvYnVmMi92aWRlb2J1ZjItZG1hLWNvbnRpZy5jCisrKyBiL2RyaXZlcnMvbWVkaWEv
Y29tbW9uL3ZpZGVvYnVmMi92aWRlb2J1ZjItZG1hLWNvbnRpZy5jCkBAIC04MSw5ICs4MSwxMyBA
QCBzdGF0aWMgdm9pZCAqdmIyX2RjX2Nvb2tpZSh2b2lkICpidWZfcHJpdikKIHN0YXRpYyB2b2lk
ICp2YjJfZGNfdmFkZHIodm9pZCAqYnVmX3ByaXYpCiB7CiAJc3RydWN0IHZiMl9kY19idWYgKmJ1
ZiA9IGJ1Zl9wcml2OworCXN0cnVjdCBkbWFfYnVmX21hcCBtYXA7CisJaW50IHJldDsKIAotCWlm
ICghYnVmLT52YWRkciAmJiBidWYtPmRiX2F0dGFjaCkKLQkJYnVmLT52YWRkciA9IGRtYV9idWZf
dm1hcChidWYtPmRiX2F0dGFjaC0+ZG1hYnVmKTsKKwlpZiAoIWJ1Zi0+dmFkZHIgJiYgYnVmLT5k
Yl9hdHRhY2gpIHsKKwkJcmV0ID0gZG1hX2J1Zl92bWFwKGJ1Zi0+ZGJfYXR0YWNoLT5kbWFidWYs
ICZtYXApOworCQlidWYtPnZhZGRyID0gcmV0ID8gTlVMTCA6IG1hcC52YWRkcjsKKwl9CiAKIAly
ZXR1cm4gYnVmLT52YWRkcjsKIH0KQEAgLTM2NSwxMSArMzY5LDEzIEBAIHZiMl9kY19kbWFidWZf
b3BzX2VuZF9jcHVfYWNjZXNzKHN0cnVjdCBkbWFfYnVmICpkYnVmLAogCXJldHVybiAwOwogfQog
Ci1zdGF0aWMgdm9pZCAqdmIyX2RjX2RtYWJ1Zl9vcHNfdm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZGJ1
ZikKK3N0YXRpYyBpbnQgdmIyX2RjX2RtYWJ1Zl9vcHNfdm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZGJ1
Ziwgc3RydWN0IGRtYV9idWZfbWFwICptYXApCiB7CiAJc3RydWN0IHZiMl9kY19idWYgKmJ1ZiA9
IGRidWYtPnByaXY7CiAKLQlyZXR1cm4gYnVmLT52YWRkcjsKKwlkbWFfYnVmX21hcF9zZXRfdmFk
ZHIobWFwLCBidWYtPnZhZGRyKTsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IHZiMl9k
Y19kbWFidWZfb3BzX21tYXAoc3RydWN0IGRtYV9idWYgKmRidWYsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL21lZGlhL2NvbW1vbi92aWRlb2J1ZjIvdmlkZW9idWYyLWRtYS1zZy5jIGIvZHJpdmVycy9t
ZWRpYS9jb21tb24vdmlkZW9idWYyL3ZpZGVvYnVmMi1kbWEtc2cuYwppbmRleCAwYTQwZTAwZjBk
N2UuLmM1MTE3MGU5YzFiOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9tZWRpYS9jb21tb24vdmlkZW9i
dWYyL3ZpZGVvYnVmMi1kbWEtc2cuYworKysgYi9kcml2ZXJzL21lZGlhL2NvbW1vbi92aWRlb2J1
ZjIvdmlkZW9idWYyLWRtYS1zZy5jCkBAIC0zMDAsMTQgKzMwMCwxOCBAQCBzdGF0aWMgdm9pZCB2
YjJfZG1hX3NnX3B1dF91c2VycHRyKHZvaWQgKmJ1Zl9wcml2KQogc3RhdGljIHZvaWQgKnZiMl9k
bWFfc2dfdmFkZHIodm9pZCAqYnVmX3ByaXYpCiB7CiAJc3RydWN0IHZiMl9kbWFfc2dfYnVmICpi
dWYgPSBidWZfcHJpdjsKKwlzdHJ1Y3QgZG1hX2J1Zl9tYXAgbWFwOworCWludCByZXQ7CiAKIAlC
VUdfT04oIWJ1Zik7CiAKIAlpZiAoIWJ1Zi0+dmFkZHIpIHsKLQkJaWYgKGJ1Zi0+ZGJfYXR0YWNo
KQotCQkJYnVmLT52YWRkciA9IGRtYV9idWZfdm1hcChidWYtPmRiX2F0dGFjaC0+ZG1hYnVmKTsK
LQkJZWxzZQorCQlpZiAoYnVmLT5kYl9hdHRhY2gpIHsKKwkJCXJldCA9IGRtYV9idWZfdm1hcChi
dWYtPmRiX2F0dGFjaC0+ZG1hYnVmLCAmbWFwKTsKKwkJCWJ1Zi0+dmFkZHIgPSByZXQgPyBOVUxM
IDogbWFwLnZhZGRyOworCQl9IGVsc2UgewogCQkJYnVmLT52YWRkciA9IHZtX21hcF9yYW0oYnVm
LT5wYWdlcywgYnVmLT5udW1fcGFnZXMsIC0xKTsKKwkJfQogCX0KIAogCS8qIGFkZCBvZmZzZXQg
aW4gY2FzZSB1c2VycHRyIGlzIG5vdCBwYWdlLWFsaWduZWQgKi8KQEAgLTQ4OSwxMSArNDkzLDEz
IEBAIHZiMl9kbWFfc2dfZG1hYnVmX29wc19lbmRfY3B1X2FjY2VzcyhzdHJ1Y3QgZG1hX2J1ZiAq
ZGJ1ZiwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgKnZiMl9kbWFfc2dfZG1hYnVmX29w
c192bWFwKHN0cnVjdCBkbWFfYnVmICpkYnVmKQorc3RhdGljIGludCB2YjJfZG1hX3NnX2RtYWJ1
Zl9vcHNfdm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZGJ1Ziwgc3RydWN0IGRtYV9idWZfbWFwICptYXAp
CiB7CiAJc3RydWN0IHZiMl9kbWFfc2dfYnVmICpidWYgPSBkYnVmLT5wcml2OwogCi0JcmV0dXJu
IHZiMl9kbWFfc2dfdmFkZHIoYnVmKTsKKwlkbWFfYnVmX21hcF9zZXRfdmFkZHIobWFwLCBidWYt
PnZhZGRyKTsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IHZiMl9kbWFfc2dfZG1hYnVm
X29wc19tbWFwKHN0cnVjdCBkbWFfYnVmICpkYnVmLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9tZWRp
YS9jb21tb24vdmlkZW9idWYyL3ZpZGVvYnVmMi12bWFsbG9jLmMgYi9kcml2ZXJzL21lZGlhL2Nv
bW1vbi92aWRlb2J1ZjIvdmlkZW9idWYyLXZtYWxsb2MuYwppbmRleCBjNjZmZGE0YTY1ZTQuLjdi
NjhlMjM3OWM2NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9tZWRpYS9jb21tb24vdmlkZW9idWYyL3Zp
ZGVvYnVmMi12bWFsbG9jLmMKKysrIGIvZHJpdmVycy9tZWRpYS9jb21tb24vdmlkZW9idWYyL3Zp
ZGVvYnVmMi12bWFsbG9jLmMKQEAgLTMxOCwxMSArMzE4LDEzIEBAIHN0YXRpYyB2b2lkIHZiMl92
bWFsbG9jX2RtYWJ1Zl9vcHNfcmVsZWFzZShzdHJ1Y3QgZG1hX2J1ZiAqZGJ1ZikKIAl2YjJfdm1h
bGxvY19wdXQoZGJ1Zi0+cHJpdik7CiB9CiAKLXN0YXRpYyB2b2lkICp2YjJfdm1hbGxvY19kbWFi
dWZfb3BzX3ZtYXAoc3RydWN0IGRtYV9idWYgKmRidWYpCitzdGF0aWMgaW50IHZiMl92bWFsbG9j
X2RtYWJ1Zl9vcHNfdm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZGJ1Ziwgc3RydWN0IGRtYV9idWZfbWFw
ICptYXApCiB7CiAJc3RydWN0IHZiMl92bWFsbG9jX2J1ZiAqYnVmID0gZGJ1Zi0+cHJpdjsKIAot
CXJldHVybiBidWYtPnZhZGRyOworCWRtYV9idWZfbWFwX3NldF92YWRkcihtYXAsIGJ1Zi0+dmFk
ZHIpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgdmIyX3ZtYWxsb2NfZG1hYnVmX29w
c19tbWFwKHN0cnVjdCBkbWFfYnVmICpkYnVmLApAQCAtMzc0LDEwICszNzYsMTUgQEAgc3RhdGlj
IHN0cnVjdCBkbWFfYnVmICp2YjJfdm1hbGxvY19nZXRfZG1hYnVmKHZvaWQgKmJ1Zl9wcml2LCB1
bnNpZ25lZCBsb25nIGZsYWcKIHN0YXRpYyBpbnQgdmIyX3ZtYWxsb2NfbWFwX2RtYWJ1Zih2b2lk
ICptZW1fcHJpdikKIHsKIAlzdHJ1Y3QgdmIyX3ZtYWxsb2NfYnVmICpidWYgPSBtZW1fcHJpdjsK
KwlzdHJ1Y3QgZG1hX2J1Zl9tYXAgbWFwOworCWludCByZXQ7CiAKLQlidWYtPnZhZGRyID0gZG1h
X2J1Zl92bWFwKGJ1Zi0+ZGJ1Zik7CisJcmV0ID0gZG1hX2J1Zl92bWFwKGJ1Zi0+ZGJ1ZiwgJm1h
cCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIC1FRkFVTFQ7CisJYnVmLT52YWRkciA9IG1hcC52YWRk
cjsKIAotCXJldHVybiBidWYtPnZhZGRyID8gMCA6IC1FRkFVTFQ7CisJcmV0dXJuIDA7CiB9CiAK
IHN0YXRpYyB2b2lkIHZiMl92bWFsbG9jX3VubWFwX2RtYWJ1Zih2b2lkICptZW1fcHJpdikKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvbWlzYy9mYXN0cnBjLmMgYi9kcml2ZXJzL21pc2MvZmFzdHJwYy5j
CmluZGV4IDc5MzljNTVkYWNlYi4uYjM5ZTE5ODUzM2YwIDEwMDY0NAotLS0gYS9kcml2ZXJzL21p
c2MvZmFzdHJwYy5jCisrKyBiL2RyaXZlcnMvbWlzYy9mYXN0cnBjLmMKQEAgLTU4MSwxMSArNTgx
LDEzIEBAIHN0YXRpYyB2b2lkIGZhc3RycGNfZG1hX2J1Zl9kZXRhdGNoKHN0cnVjdCBkbWFfYnVm
ICpkbWFidWYsCiAJa2ZyZWUoYSk7CiB9CiAKLXN0YXRpYyB2b2lkICpmYXN0cnBjX3ZtYXAoc3Ry
dWN0IGRtYV9idWYgKmRtYWJ1ZikKK3N0YXRpYyBpbnQgZmFzdHJwY192bWFwKHN0cnVjdCBkbWFf
YnVmICpkbWFidWYsIHN0cnVjdCBkbWFfYnVmX21hcCAqbWFwKQogewogCXN0cnVjdCBmYXN0cnBj
X2J1ZiAqYnVmID0gZG1hYnVmLT5wcml2OwogCi0JcmV0dXJuIGJ1Zi0+dmlydDsKKwlkbWFfYnVm
X21hcF9zZXRfdmFkZHIobWFwLCBidWYtPnZpcnQpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRp
YyBpbnQgZmFzdHJwY19tbWFwKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2RybS9kcm1fcHJpbWUuaCBiL2luY2x1ZGUvZHJtL2RybV9wcmltZS5oCmluZGV4IDBm
NjlmOWZiZjEyYy4uNTEyNWY4NGMyOGY2IDEwMDY0NAotLS0gYS9pbmNsdWRlL2RybS9kcm1fcHJp
bWUuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fcHJpbWUuaApAQCAtNTQsNiArNTQsNyBAQCBzdHJ1
Y3QgZGV2aWNlOwogc3RydWN0IGRtYV9idWZfZXhwb3J0X2luZm87CiBzdHJ1Y3QgZG1hX2J1ZjsK
IHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQ7CitzdHJ1Y3QgZG1hX2J1Zl9tYXA7CiAKIGVudW0g
ZG1hX2RhdGFfZGlyZWN0aW9uOwogCkBAIC04Miw3ICs4Myw3IEBAIHN0cnVjdCBzZ190YWJsZSAq
ZHJtX2dlbV9tYXBfZG1hX2J1ZihzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsCiB2
b2lkIGRybV9nZW1fdW5tYXBfZG1hX2J1ZihzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRh
Y2gsCiAJCQkgICBzdHJ1Y3Qgc2dfdGFibGUgKnNndCwKIAkJCSAgIGVudW0gZG1hX2RhdGFfZGly
ZWN0aW9uIGRpcik7Ci12b2lkICpkcm1fZ2VtX2RtYWJ1Zl92bWFwKHN0cnVjdCBkbWFfYnVmICpk
bWFfYnVmKTsKK2ludCBkcm1fZ2VtX2RtYWJ1Zl92bWFwKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVm
LCBzdHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCk7CiB2b2lkIGRybV9nZW1fZG1hYnVmX3Z1bm1hcChz
dHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1Ziwgdm9pZCAqdmFkZHIpOwogCiBpbnQgZHJtX2dlbV9wcmlt
ZV9tbWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3Qg
KnZtYSk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYtbWFwLmggYi9pbmNsdWRl
L2xpbnV4L2RtYS1idWYtbWFwLmgKaW5kZXggMDAxNDNjODhmZWI2Li41YWU3MzJkMzczZWIgMTAw
NjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvZG1hLWJ1Zi1tYXAuaAorKysgYi9pbmNsdWRlL2xpbnV4
L2RtYS1idWYtbWFwLmgKQEAgLTIzLDYgKzIzLDE5IEBAIHN0cnVjdCBkbWFfYnVmX21hcCB7CiAJ
Ym9vbCBpc19pb21lbTsKIH07CiAKKy8qKgorICogZG1hX2J1Zl9tYXBfc2V0X3ZhZGRyIC0gU2V0
cyBhIGRtYS1idWYgbWFwcGluZyBzdHJ1Y3R1cmUgdG8gYW4gYWRkcmVzcyBpbiBzeXN0ZW0gbWVt
b3J5CisgKiBAbWFwOglUaGUgZG1hLWJ1ZiBtYXBwaW5nIHN0cnVjdHVyZQorICogQHZhZGRyOglB
IHN5c3RlbS1tZW1vcnkgYWRkcmVzcworICoKKyAqIFNldHMgdGhlIGFkZHJlc3MgYW5kIGNsZWFy
cyB0aGUgSS9PLW1lbW9yeSBmbGFnLgorICovCitzdGF0aWMgaW5saW5lIHZvaWQgZG1hX2J1Zl9t
YXBfc2V0X3ZhZGRyKHN0cnVjdCBkbWFfYnVmX21hcCAqbWFwLCB2b2lkICp2YWRkcikKK3sKKwlt
YXAtPnZhZGRyID0gdmFkZHI7CisJbWFwLT5pc19pb21lbSA9IGZhbHNlOworfQorCiAvKiBBUEkg
dHJhbnNpdGlvbiBoZWxwZXIgKi8KIHN0YXRpYyBpbmxpbmUgYm9vbCBkbWFfYnVmX21hcF9pc192
YWRkcihjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCwgY29uc3Qgdm9pZCAqdmFkZHIpCiB7
CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaCBiL2luY2x1ZGUvbGludXgvZG1h
LWJ1Zi5oCmluZGV4IGZjYzJkZGZiNmQxOC4uNzIzNzk5N2NmYTM4IDEwMDY0NAotLS0gYS9pbmNs
dWRlL2xpbnV4L2RtYS1idWYuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaApAQCAtMjY2
LDcgKzI2Niw3IEBAIHN0cnVjdCBkbWFfYnVmX29wcyB7CiAJICovCiAJaW50ICgqbW1hcCkoc3Ry
dWN0IGRtYV9idWYgKiwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpOwogCi0Jdm9pZCAqKCp2
bWFwKShzdHJ1Y3QgZG1hX2J1ZiAqKTsKKwlpbnQgKCp2bWFwKShzdHJ1Y3QgZG1hX2J1ZiAqZG1h
YnVmLCBzdHJ1Y3QgZG1hX2J1Zl9tYXAgKm1hcCk7CiAJdm9pZCAoKnZ1bm1hcCkoc3RydWN0IGRt
YV9idWYgKiwgdm9pZCAqdmFkZHIpOwogfTsKIApAQCAtNTAzLDYgKzUwMyw2IEBAIGludCBkbWFf
YnVmX2VuZF9jcHVfYWNjZXNzKHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmLAogCiBpbnQgZG1hX2J1
Zl9tbWFwKHN0cnVjdCBkbWFfYnVmICosIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqLAogCQkgdW5z
aWduZWQgbG9uZyk7Ci12b2lkICpkbWFfYnVmX3ZtYXAoc3RydWN0IGRtYV9idWYgKik7Ci12b2lk
IGRtYV9idWZfdnVubWFwKHN0cnVjdCBkbWFfYnVmICosIHZvaWQgKnZhZGRyKTsKK2ludCBkbWFf
YnVmX3ZtYXAoc3RydWN0IGRtYV9idWYgKmRtYWJ1Ziwgc3RydWN0IGRtYV9idWZfbWFwICptYXAp
Owordm9pZCBkbWFfYnVmX3Z1bm1hcChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCB2b2lkICp2YWRk
cik7CiAjZW5kaWYgLyogX19ETUFfQlVGX0hfXyAqLwotLSAKMi4yOC4wCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0
CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
