Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4D79420C3CD
	for <lists+dri-devel@lfdr.de>; Sat, 27 Jun 2020 21:47:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A81506E241;
	Sat, 27 Jun 2020 19:47:20 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from us-smtp-1.mimecast.com (us-smtp-delivery-1.mimecast.com
 [205.139.110.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4C56B6E1E9
 for <dri-devel@lists.freedesktop.org>; Sat, 27 Jun 2020 19:47:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1593287236;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=5iqK6rpMWwHMywaQ2T2LKtEGsHj5cqueTjCdUTh3Lic=;
 b=hO9SVbUQlkzcfRVVrStqfwLbzWka19jSwa920rb0IdW0UwlOO9NMfRETBNSH7gFkihtrQi
 FX9LvvORuK1NJb9xQzeeyvylEWn6w05Fy0cwhZROeS0raljBJCmeGNAKqBgDsARMxOyiAE
 mUPkoQE3m3vsmsC8o4gIqz1kfFSkaXw=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-268-jGbLf37iPRCWoMTfuAIHdQ-1; Sat, 27 Jun 2020 15:47:11 -0400
X-MC-Unique: jGbLf37iPRCWoMTfuAIHdQ-1
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
 [10.5.11.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id B8B6410059A5;
 Sat, 27 Jun 2020 19:47:09 +0000 (UTC)
Received: from Whitewolf.redhat.com (ovpn-112-223.rdu2.redhat.com
 [10.10.112.223])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 329657F4F9;
 Sat, 27 Jun 2020 19:47:08 +0000 (UTC)
From: Lyude Paul <lyude@redhat.com>
To: dri-devel@lists.freedesktop.org,
	nouveau@lists.freedesktop.org
Subject: [RFC v8 3/9] drm/vblank: Add vblank works
Date: Sat, 27 Jun 2020 15:46:51 -0400
Message-Id: <20200627194657.156514-4-lyude@redhat.com>
In-Reply-To: <20200627194657.156514-1-lyude@redhat.com>
References: <20200627194657.156514-1-lyude@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Jonathan Corbet <corbet@lwn.net>, David Airlie <airlied@linux.ie>,
 Daniel Vetter <daniel.vetter@ffwll.ch>,
 "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
 open list <linux-kernel@vger.kernel.org>,
 Thomas Zimmermann <tzimmermann@suse.de>, Tejun Heo <tj@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHNvbWUga2luZCBvZiB2Ymxhbmsgd29ya2Vycy4gVGhlIGludGVyZmFjZSBpcyBzaW1pbGFy
IHRvIHJlZ3VsYXIKZGVsYXllZCB3b3JrcywgYW5kIGlzIG1vc3RseSBiYXNlZCBvZmYga3RocmVh
ZF93b3JrLiBJdCBhbGxvd3MgZm9yCnNjaGVkdWxpbmcgZGVsYXllZCB3b3JrcyB0aGF0IGV4ZWN1
dGUgb25jZSBhIHBhcnRpY3VsYXIgdmJsYW5rIHNlcXVlbmNlCmhhcyBwYXNzZWQuIEl0IGFsc28g
YWxsb3dzIGZvciBhY2N1cmF0ZSBmbHVzaGluZyBvZiBzY2hlZHVsZWQgdmJsYW5rCndvcmtzIC0g
aW4gdGhhdCBmbHVzaGluZyB3YWl0cyBmb3IgYm90aCB0aGUgdmJsYW5rIHNlcXVlbmNlIGFuZCBq
b2IKZXhlY3V0aW9uIHRvIGNvbXBsZXRlLCBvciBmb3IgdGhlIHdvcmsgdG8gZ2V0IGNhbmNlbGxl
ZCAtIHdoaWNoZXZlcgpjb21lcyBmaXJzdC4KCldoYXRldmVyIGhhcmR3YXJlIHByb2dyYW1taW5n
IHdlIGRvIGluIHRoZSB3b3JrIG11c3QgYmUgZmFzdCAobXVzdCBhdApsZWFzdCBjb21wbGV0ZSBk
dXJpbmcgdGhlIHZibGFuayBvciBzY2Fub3V0IHBlcmlvZCwgc29tZXRpbWVzIGR1cmluZyB0aGUK
Zmlyc3QgZmV3IHNjYW5saW5lcyBvZiB0aGUgdmJsYW5rKS4gQXMgc3VjaCB3ZSB1c2UgYSBoaWdo
LXByaW9yaXR5CnBlci1DUlRDIHRocmVhZCB0byBhY2NvbXBsaXNoIHRoaXMuCgpDaGFuZ2VzIHNp
bmNlIHY3OgoqIFN0dWZmIGRybV92YmxhbmtfaW50ZXJuYWwuaCBhbmQgZHJtX3ZibGFua193b3Jr
X2ludGVybmFsLmggY29udGVudHMKICBpbnRvIGRybV9pbnRlcm5hbC5oCiogR2V0IHJpZCBvZiB1
bm5lY2Vzc2FyeSBzcGlubG9jayBpbiBkcm1fY3J0Y192Ymxhbmtfb24oKQoqIFJlbW92ZSAhdmJs
YW5rLT53b3JrZXIgY2hlY2sKKiBHcmFiIHZibF9sb2NrIGluIGRybV92Ymxhbmtfd29ya19zY2hl
ZHVsZSgpCiogTWVudGlvbiBzZWxmLXJlYXJtaW5nIHdvcmsgaXRlbXMgaW4gZHJtX3ZibGFua193
b3JrX3NjaGVkdWxlKCkga2RvY3MKKiBSZXR1cm4gMSBmcm9tIGRybV92Ymxhbmtfd29ya19zY2hl
ZHVsZSgpIGlmIHRoZSB3b3JrIHdhcyBzY2hlZHVsZWQKICBzdWNjZXNzZnVsbHksIDAgb3IgZXJy
b3IgY29kZSBvdGhlcndpc2UKKiBVc2UgZHJtX2RiZ19jb3JlKCkgaW5zdGVhZCBvZiBEUk1fREVW
X0VSUk9SKCkgaW4KICBkcm1fdmJsYW5rX3dvcmtfc2NoZWR1bGUoKQoqIFJlbW92ZSB2Ymxhbmst
PndvcmtlciBjaGVja3MgaW4gZHJtX3ZibGFua19kZXN0cm95X3dvcmtlcigpIGFuZAogIGRybV92
YmxhbmtfZmx1c2hfd29ya2VyKCkKQ2hhbmdlcyBzaW5jZSB2NjoKKiBHZXQgcmlkIG9mIC0+cGVu
ZGluZyBhbmQgc2VxY291bnRzLCBhbmQgaW1wbGVtZW50IGZsdXNoaW5nIHRocm91Z2gKICBzaW1w
bGVyIG1lYW5zIC0gZGFudmV0CiogR2V0IHJpZCBvZiB3b3JrX2xvY2ssIGp1c3QgdXNlIGRybV9k
ZXZpY2UtPmV2ZW50X2xvY2sKKiBNb3ZlIGRybV92Ymxhbmtfd29yayBpdGVtIGNsZWFudXAgaW50
byBkcm1fY3J0Y192Ymxhbmtfb2ZmKCkgc28gdGhhdAogIHdlIGVuc3VyZSB0aGF0IGFsbCB2Ymxh
bmsgd29yayBoYXMgZmluaXNoZWQgYmVmb3JlIGRpc2FibGluZyB2YmxhbmtzCiogQWRkIGNoZWNr
cyBpbnRvIGRybV9jcnRjX3ZibGFua19yZXNldCgpIHNvIHdlIHllbGwgaWYgaXQgZ2V0cyBjYWxs
ZWQKICB3aGlsZSB0aGVyZSdzIHZibGFuayB3b3JrZXJzIGFjdGl2ZQoqIEdyYWIgZXZlbnRfbG9j
ayBpbiBib3RoIGRybV9jcnRjX3ZibGFua19vbigpL2RybV9jcnRjX3ZibGFua19vZmYoKSwKICB0
aGUgbWFpbiByZWFzb24gZm9yIHRoaXMgaXMgc28gdGhhdCBvdGhlciB0aHJlYWRzIGNhbGxpbmcK
ICBkcm1fdmJsYW5rX3dvcmtfc2NoZWR1bGUoKSBhcmUgYmxvY2tlZCBmcm9tIGF0dGVtcHRpbmcg
dG8gc2NoZWR1bGUKICB3aGlsZSB3ZSdyZSBpbiB0aGUgbWlkZGxlIG9mIGVuYWJsaW5nL2Rpc2Fi
bGluZyB2YmxhbmtzLgoqIE1vdmUgZHJtX2hhbmRsZV92Ymxhbmtfd29ya3MoKSBjYWxsIGJlbG93
IGRybV9oYW5kbGVfdmJsYW5rX2V2ZW50cygpCiogU2ltcGxpZnkgZHJtX3ZibGFua193b3JrX2Nh
bmNlbF9zeW5jKCkKKiBGaXggZHJtX3ZibGFua193b3JrX2NhbmNlbF9zeW5jKCkgZG9jdW1lbnRh
dGlvbgoqIE1vdmUgd2FrZV91cF9hbGwoKSBjYWxscyBvdXQgb2Ygc3BpbmxvY2sgd2hlcmUgd2Ug
Y2FuLiBUaGUgb25seSBvbmUgSQogIGxlZnQgd2FzIHRoZSBjYWxsIHRvIHdha2VfdXBfYWxsKCkg
aW4gZHJtX3ZibGFua19oYW5kbGVfd29ya3MoKSBhcwogIHRoaXMgc2VlbWVkIGxpa2UgaXQgbWFk
ZSBtb3JlIHNlbnNlIGp1c3QgbGl2aW5nIGluIHRoYXQgZnVuY3Rpb24KICAod2hpY2ggaXMgYWxs
IHRlY2huaWNhbGx5IHVuZGVyIGxvY2spCiogTW92ZSBkcm1fdmJsYW5rX3dvcmsgcmVsYXRlZCBm
dW5jdGlvbnMgaW50byB0aGVpciBvd24gc291cmNlIGZpbGVzCiogQWRkIGRybV92YmxhbmtfaW50
ZXJuYWwuaCBzbyB3ZSBjYW4gZXhwb3J0IHNvbWUgZnVuY3Rpb25zIHdlIGRvbid0CiAgd2FudCBk
cml2ZXJzIHVzaW5nLCBidXQgdGhhdCB3ZSBkbyBuZWVkIHRvIHVzZSBpbiBkcm1fdmJsYW5rX3dv
cmsuYwoqIEFkZCBhIGJ1bmNoIG9mIGRvY3VtZW50YXRpb24KQ2hhbmdlcyBzaW5jZSB2NDoKKiBH
ZXQgcmlkIG9mIGt0aHJlYWQgaW50ZXJmYWNlcyB3ZSB0cmllZCBhZGRpbmcgYW5kIG1vdmUgYWxs
IG9mIHRoZQogIGxvY2tpbmcgaW50byBkcm1fdmJsYW5rLmMuIEZvciBpbXBsZW1lbnRpbmcgZHJt
X3ZibGFua193b3JrX2ZsdXNoKCksCiAgd2Ugbm93IHVzZSBhIHdhaXRfcXVldWUgYW5kIHNlcXVl
bmNlIGNvdW50ZXJzIGluIG9yZGVyIHRvCiAgZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIG11bHRpcGxl
IHdvcmsgaXRlbSBleGVjdXRpb25zLgoqIEdldCByaWQgb2YgZHJtX3ZibGFua193b3JrX2NhbmNl
bCgpIC0gdGhpcyB3b3VsZCBoYXZlIGJlZW4gcHJldHR5CiAgZGlmZmljdWx0IHRvIGFjdHVhbGx5
IHJlaW1wbGVtZW50IGFuZCBpdCBvY2N1cnJlZCB0byBtZSB0aGF0IG5laXRoZXIKICBub3V2ZWF1
IG9yIGk5MTUgYXJlIGV2ZW4gcGxhbm5pbmcgdG8gdXNlIHRoaXMgZnVuY3Rpb24uIFNpbmNlIHRo
ZXJlJ3MKICBhbHNvIG5vIGFzeW5jIGNhbmNlbCBmdW5jdGlvbiBmb3IgbW9zdCBvZiB0aGUgd29y
ayBpbnRlcmZhY2VzIGluIHRoZQogIGtlcm5lbCwgaXQgc2VlbXMgYSBiaXQgdW5uZWNlc3Nhcnkg
YW55d2F5LgoqIEdldCByaWQgb2YgdG9fZHJtX3ZibGFua193b3JrKCkgc2luY2Ugd2Ugbm93IGFy
ZSBhbHNvIGFibGUgdG8ganVzdAogIHBhc3MgdGhlIHN0cnVjdCBkcm1fdmJsYW5rX3dvcmsgdG8g
d29yayBpdGVtIGNhbGxiYWNrcyBhbnl3YXkKQ2hhbmdlcyBzaW5jZSB2MzoKKiBVc2Ugb3VyIG93
biBzcGlubG9ja3MsIGRvbid0IGludGVncmF0ZSBzbyB0aWdodGx5IHdpdGgga3RocmVhZF93b3Jr
cwpDaGFuZ2VzIHNpbmNlIHYyOgoqIFVzZSBrdGhyZWFkX3dvcmtlcnMgaW5zdGVhZCBvZiByZWlu
dmVudGluZyB0aGUgd2hlZWwuCgpDYzogVGVqdW4gSGVvIDx0akBrZXJuZWwub3JnPgpDYzogZHJp
LWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpDYzogbm91dmVhdUBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKUmV2aWV3ZWQtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAZmZ3bGwuY2g+
CkNvLWRldmVsb3BlZC1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4Lmlu
dGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTHl1ZGUgUGF1bCA8bHl1ZGVAcmVkaGF0LmNvbT4KLS0t
CiBEb2N1bWVudGF0aW9uL2dwdS9kcm0ta21zLnJzdCAgICAgfCAgMTUgKysKIGRyaXZlcnMvZ3B1
L2RybS9NYWtlZmlsZSAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL2RybV9pbnRl
cm5hbC5oICAgIHwgIDI3ICsrKwogZHJpdmVycy9ncHUvZHJtL2RybV92YmxhbmsuYyAgICAgIHwg
IDQ0ICsrKy0tCiBkcml2ZXJzL2dwdS9kcm0vZHJtX3ZibGFua193b3JrLmMgfCAyNjcgKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2RybS9kcm1fdmJsYW5rLmggICAgICAg
ICAgfCAgMjAgKysrCiBpbmNsdWRlL2RybS9kcm1fdmJsYW5rX3dvcmsuaCAgICAgfCAgNzEgKysr
KysrKysKIDcgZmlsZXMgY2hhbmdlZCwgNDMwIGluc2VydGlvbnMoKyksIDE2IGRlbGV0aW9ucygt
KQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9kcm1fdmJsYW5rX3dvcmsuYwog
Y3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvZHJtL2RybV92Ymxhbmtfd29yay5oCgpkaWZmIC0t
Z2l0IGEvRG9jdW1lbnRhdGlvbi9ncHUvZHJtLWttcy5yc3QgYi9Eb2N1bWVudGF0aW9uL2dwdS9k
cm0ta21zLnJzdAppbmRleCA5NzVjZmViOGEzNTMyLi4zYzVhZTRmNmRmZDIzIDEwMDY0NAotLS0g
YS9Eb2N1bWVudGF0aW9uL2dwdS9kcm0ta21zLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2dwdS9k
cm0ta21zLnJzdApAQCAtNTQzLDMgKzU0MywxOCBAQCBWZXJ0aWNhbCBCbGFua2luZyBhbmQgSW50
ZXJydXB0IEhhbmRsaW5nIEZ1bmN0aW9ucyBSZWZlcmVuY2UKIAogLi4ga2VybmVsLWRvYzo6IGRy
aXZlcnMvZ3B1L2RybS9kcm1fdmJsYW5rLmMKICAgIDpleHBvcnQ6CisKK1ZlcnRpY2FsIEJsYW5r
IFdvcmsKKz09PT09PT09PT09PT09PT09PT0KKworLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1
L2RybS9kcm1fdmJsYW5rX3dvcmsuYworICAgOmRvYzogdmJsYW5rIHdvcmtzCisKK1ZlcnRpY2Fs
IEJsYW5rIFdvcmsgRnVuY3Rpb25zIFJlZmVyZW5jZQorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tCisKKy4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL2RybS9kcm1fdmJsYW5r
X3dvcmsuaAorICAgOmludGVybmFsOgorCisuLiBrZXJuZWwtZG9jOjogZHJpdmVycy9ncHUvZHJt
L2RybV92Ymxhbmtfd29yay5jCisgICA6ZXhwb3J0OgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJtL01ha2VmaWxlCmluZGV4IDJjMGU1YTdlNTk1
MzYuLjAyZWU1ZmFmMWE5MjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZQor
KysgYi9kcml2ZXJzL2dwdS9kcm0vTWFrZWZpbGUKQEAgLTE4LDcgKzE4LDcgQEAgZHJtLXkgICAg
ICAgOj0JZHJtX2F1dGgubyBkcm1fY2FjaGUubyBcCiAJCWRybV9kdW1iX2J1ZmZlcnMubyBkcm1f
bW9kZV9jb25maWcubyBkcm1fdmJsYW5rLm8gXAogCQlkcm1fc3luY29iai5vIGRybV9sZWFzZS5v
IGRybV93cml0ZWJhY2subyBkcm1fY2xpZW50Lm8gXAogCQlkcm1fY2xpZW50X21vZGVzZXQubyBk
cm1fYXRvbWljX3VhcGkubyBkcm1faGRjcC5vIFwKLQkJZHJtX21hbmFnZWQubworCQlkcm1fbWFu
YWdlZC5vIGRybV92Ymxhbmtfd29yay5vCiAKIGRybS0kKENPTkZJR19EUk1fTEVHQUNZKSArPSBk
cm1fbGVnYWN5X21pc2MubyBkcm1fYnVmcy5vIGRybV9jb250ZXh0Lm8gZHJtX2RtYS5vIGRybV9z
Y2F0dGVyLm8gZHJtX2xvY2subwogZHJtLSQoQ09ORklHX0RSTV9MSUJfUkFORE9NKSArPSBsaWIv
ZHJtX3JhbmRvbS5vCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2ludGVybmFsLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vZHJtX2ludGVybmFsLmgKaW5kZXggMjQ3MGEzNTI3MzBiNS4uOGUw
MWNhYWY5NWNjNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV9pbnRlcm5hbC5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1faW50ZXJuYWwuaApAQCAtMjEsNyArMjEsMTAgQEAKICAq
IE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KICAqLwogCisjaW5jbHVkZSA8bGludXgv
a3RocmVhZC5oPgorCiAjaW5jbHVkZSA8ZHJtL2RybV9pb2N0bC5oPgorI2luY2x1ZGUgPGRybS9k
cm1fdmJsYW5rLmg+CiAKICNkZWZpbmUgRFJNX0lGX01BSk9SIDEKICNkZWZpbmUgRFJNX0lGX01J
Tk9SIDQKQEAgLTM4LDYgKzQxLDcgQEAgc3RydWN0IGRybV9tYXN0ZXI7CiBzdHJ1Y3QgZHJtX21p
bm9yOwogc3RydWN0IGRybV9wcmltZV9maWxlX3ByaXZhdGU7CiBzdHJ1Y3QgZHJtX3ByaW50ZXI7
CitzdHJ1Y3QgZHJtX3ZibGFua19jcnRjOwogCiAvKiBkcm1fZmlsZS5jICovCiBleHRlcm4gc3Ry
dWN0IG11dGV4IGRybV9nbG9iYWxfbXV0ZXg7CkBAIC05Myw3ICs5NywzMCBAQCB2b2lkIGRybV9t
aW5vcl9yZWxlYXNlKHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKTsKIHZvaWQgZHJtX21hbmFnZWRf
cmVsZWFzZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KTsKIAogLyogZHJtX3ZibGFuay5jICovCitz
dGF0aWMgaW5saW5lIGJvb2wgZHJtX3ZibGFua19wYXNzZWQodTY0IHNlcSwgdTY0IHJlZikKK3sK
KwlyZXR1cm4gKHNlcSAtIHJlZikgPD0gKDEgPDwgMjMpOworfQorCiB2b2lkIGRybV92Ymxhbmtf
ZGlzYWJsZV9hbmRfc2F2ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlw
ZSk7CitpbnQgZHJtX3ZibGFua19nZXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdW5zaWduZWQg
aW50IHBpcGUpOwordm9pZCBkcm1fdmJsYW5rX3B1dChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1
bnNpZ25lZCBpbnQgcGlwZSk7Cit1NjQgZHJtX3ZibGFua19jb3VudChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZSk7CisKKy8qIGRybV92Ymxhbmtfd29yay5jICovCitz
dGF0aWMgaW5saW5lIHZvaWQgZHJtX3ZibGFua19mbHVzaF93b3JrZXIoc3RydWN0IGRybV92Ymxh
bmtfY3J0YyAqdmJsYW5rKQoreworCWt0aHJlYWRfZmx1c2hfd29ya2VyKHZibGFuay0+d29ya2Vy
KTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGRybV92YmxhbmtfZGVzdHJveV93b3JrZXIoc3Ry
dWN0IGRybV92YmxhbmtfY3J0YyAqdmJsYW5rKQoreworCWt0aHJlYWRfZGVzdHJveV93b3JrZXIo
dmJsYW5rLT53b3JrZXIpOworfQorCitpbnQgZHJtX3ZibGFua193b3JrZXJfaW5pdChzdHJ1Y3Qg
ZHJtX3ZibGFua19jcnRjICp2YmxhbmspOwordm9pZCBkcm1fdmJsYW5rX2NhbmNlbF9wZW5kaW5n
X3dvcmtzKHN0cnVjdCBkcm1fdmJsYW5rX2NydGMgKnZibGFuayk7Cit2b2lkIGRybV9oYW5kbGVf
dmJsYW5rX3dvcmtzKHN0cnVjdCBkcm1fdmJsYW5rX2NydGMgKnZibGFuayk7CiAKIC8qIElPQ1RM
UyAqLwogaW50IGRybV93YWl0X3ZibGFua19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2
b2lkICpkYXRhLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV92YmxhbmsuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9kcm1fdmJsYW5rLmMKaW5kZXggZTg5NWY1MzMxZmRiNC4uMTZkMWI1MTMy
YjhmOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2RybV92YmxhbmsuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX3ZibGFuay5jCkBAIC0yNSw2ICsyNSw3IEBACiAgKi8KIAogI2luY2x1
ZGUgPGxpbnV4L2V4cG9ydC5oPgorI2luY2x1ZGUgPGxpbnV4L2t0aHJlYWQuaD4KICNpbmNsdWRl
IDxsaW51eC9tb2R1bGVwYXJhbS5oPgogCiAjaW5jbHVkZSA8ZHJtL2RybV9jcnRjLmg+CkBAIC0z
NjMsNyArMzY0LDcgQEAgc3RhdGljIHZvaWQgZHJtX3VwZGF0ZV92YmxhbmtfY291bnQoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwgdW5zaWduZWQgaW50IHBpcGUsCiAJc3RvcmVfdmJsYW5rKGRldiwg
cGlwZSwgZGlmZiwgdF92YmxhbmssIGN1cl92YmxhbmspOwogfQogCi1zdGF0aWMgdTY0IGRybV92
YmxhbmtfY291bnQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdW5zaWduZWQgaW50IHBpcGUpCit1
NjQgZHJtX3ZibGFua19jb3VudChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQg
cGlwZSkKIHsKIAlzdHJ1Y3QgZHJtX3ZibGFua19jcnRjICp2YmxhbmsgPSAmZGV2LT52Ymxhbmtb
cGlwZV07CiAJdTY0IGNvdW50OwpAQCAtNDk3LDYgKzQ5OCw3IEBAIHN0YXRpYyB2b2lkIGRybV92
YmxhbmtfaW5pdF9yZWxlYXNlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKnB0cikKIAlk
cm1fV0FSTl9PTihkZXYsIFJFQURfT05DRSh2YmxhbmstPmVuYWJsZWQpICYmCiAJCSAgICBkcm1f
Y29yZV9jaGVja19mZWF0dXJlKGRldiwgRFJJVkVSX01PREVTRVQpKTsKIAorCWRybV92Ymxhbmtf
ZGVzdHJveV93b3JrZXIodmJsYW5rKTsKIAlkZWxfdGltZXJfc3luYygmdmJsYW5rLT5kaXNhYmxl
X3RpbWVyKTsKIH0KIApAQCAtNTM5LDYgKzU0MSwxMCBAQCBpbnQgZHJtX3ZibGFua19pbml0KHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsIHVuc2lnbmVkIGludCBudW1fY3J0Y3MpCiAJCQkJCSAgICAg
ICB2YmxhbmspOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKKworCQlyZXQgPSBkcm1fdmJs
YW5rX3dvcmtlcl9pbml0KHZibGFuayk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OwogCX0K
IAogCXJldHVybiAwOwpAQCAtMTEzNSw3ICsxMTQxLDcgQEAgc3RhdGljIGludCBkcm1fdmJsYW5r
X2VuYWJsZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZSkKIAlyZXR1
cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IGRybV92YmxhbmtfZ2V0KHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHVuc2lnbmVkIGludCBwaXBlKQoraW50IGRybV92YmxhbmtfZ2V0KHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsIHVuc2lnbmVkIGludCBwaXBlKQogewogCXN0cnVjdCBkcm1fdmJsYW5rX2Ny
dGMgKnZibGFuayA9ICZkZXYtPnZibGFua1twaXBlXTsKIAl1bnNpZ25lZCBsb25nIGlycWZsYWdz
OwpAQCAtMTE3OCw3ICsxMTg0LDcgQEAgaW50IGRybV9jcnRjX3ZibGFua19nZXQoc3RydWN0IGRy
bV9jcnRjICpjcnRjKQogfQogRVhQT1JUX1NZTUJPTChkcm1fY3J0Y192YmxhbmtfZ2V0KTsKIAot
c3RhdGljIHZvaWQgZHJtX3ZibGFua19wdXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdW5zaWdu
ZWQgaW50IHBpcGUpCit2b2lkIGRybV92YmxhbmtfcHV0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
IHVuc2lnbmVkIGludCBwaXBlKQogewogCXN0cnVjdCBkcm1fdmJsYW5rX2NydGMgKnZibGFuayA9
ICZkZXYtPnZibGFua1twaXBlXTsKIApAQCAtMTI4MSwxMyArMTI4NywxNiBAQCB2b2lkIGRybV9j
cnRjX3ZibGFua19vZmYoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCXVuc2lnbmVkIGludCBwaXBl
ID0gZHJtX2NydGNfaW5kZXgoY3J0Yyk7CiAJc3RydWN0IGRybV92YmxhbmtfY3J0YyAqdmJsYW5r
ID0gJmRldi0+dmJsYW5rW3BpcGVdOwogCXN0cnVjdCBkcm1fcGVuZGluZ192YmxhbmtfZXZlbnQg
KmUsICp0OwotCiAJa3RpbWVfdCBub3c7CiAJdTY0IHNlcTsKIAogCWlmIChkcm1fV0FSTl9PTihk
ZXYsIHBpcGUgPj0gZGV2LT5udW1fY3J0Y3MpKQogCQlyZXR1cm47CiAKKwkvKgorCSAqIEdyYWIg
ZXZlbnRfbG9jayBlYXJseSB0byBwcmV2ZW50IHZibGFuayB3b3JrIGZyb20gYmVpbmcgc2NoZWR1
bGVkCisJICogd2hpbGUgd2UncmUgaW4gdGhlIG1pZGRsZSBvZiBzaHV0dGluZyBkb3duIHZibGFu
ayBpbnRlcnJ1cHRzCisJICovCiAJc3Bpbl9sb2NrX2lycSgmZGV2LT5ldmVudF9sb2NrKTsKIAog
CXNwaW5fbG9jaygmZGV2LT52YmxfbG9jayk7CkBAIC0xMzI0LDExICsxMzMzLDE4IEBAIHZvaWQg
ZHJtX2NydGNfdmJsYW5rX29mZihzdHJ1Y3QgZHJtX2NydGMgKmNydGMpCiAJCWRybV92Ymxhbmtf
cHV0KGRldiwgcGlwZSk7CiAJCXNlbmRfdmJsYW5rX2V2ZW50KGRldiwgZSwgc2VxLCBub3cpOwog
CX0KKworCS8qIENhbmNlbCBhbnkgbGVmdG92ZXIgcGVuZGluZyB2Ymxhbmsgd29yayAqLworCWRy
bV92YmxhbmtfY2FuY2VsX3BlbmRpbmdfd29ya3ModmJsYW5rKTsKKwogCXNwaW5fdW5sb2NrX2ly
cSgmZGV2LT5ldmVudF9sb2NrKTsKIAogCS8qIFdpbGwgYmUgcmVzZXQgYnkgdGhlIG1vZGVzZXQg
aGVscGVycyB3aGVuIHJlLWVuYWJsaW5nIHRoZSBjcnRjIGJ5CiAJICogY2FsbGluZyBkcm1fY2Fs
Y190aW1lc3RhbXBpbmdfY29uc3RhbnRzKCkuICovCiAJdmJsYW5rLT5od21vZGUuY3J0Y19jbG9j
ayA9IDA7CisKKwkvKiBXYWl0IGZvciBhbnkgdmJsYW5rIHdvcmsgdGhhdCdzIHN0aWxsIGV4ZWN1
dGluZyB0byBmaW5pc2ggKi8KKwlkcm1fdmJsYW5rX2ZsdXNoX3dvcmtlcih2YmxhbmspOwogfQog
RVhQT1JUX1NZTUJPTChkcm1fY3J0Y192Ymxhbmtfb2ZmKTsKIApAQCAtMTM2Myw2ICsxMzc5LDcg
QEAgdm9pZCBkcm1fY3J0Y192YmxhbmtfcmVzZXQoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmRldi0+dmJsX2xvY2ssIGlycWZsYWdzKTsKIAogCWRybV9X
QVJOX09OKGRldiwgIWxpc3RfZW1wdHkoJmRldi0+dmJsYW5rX2V2ZW50X2xpc3QpKTsKKwlkcm1f
V0FSTl9PTihkZXYsICFsaXN0X2VtcHR5KCZ2YmxhbmstPnBlbmRpbmdfd29yaykpOwogfQogRVhQ
T1JUX1NZTUJPTChkcm1fY3J0Y192YmxhbmtfcmVzZXQpOwogCkBAIC0xNTg5LDExICsxNjA2LDYg
QEAgaW50IGRybV9sZWdhY3lfbW9kZXNldF9jdGxfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgdm9pZCAqZGF0YSwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGlubGluZSBib29sIHZibGFu
a19wYXNzZWQodTY0IHNlcSwgdTY0IHJlZikKLXsKLQlyZXR1cm4gKHNlcSAtIHJlZikgPD0gKDEg
PDwgMjMpOwotfQotCiBzdGF0aWMgaW50IGRybV9xdWV1ZV92YmxhbmtfZXZlbnQoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwgdW5zaWduZWQgaW50IHBpcGUsCiAJCQkJICB1NjQgcmVxX3NlcSwKIAkJ
CQkgIHVuaW9uIGRybV93YWl0X3ZibGFuayAqdmJsd2FpdCwKQEAgLTE2NTAsNyArMTY2Miw3IEBA
IHN0YXRpYyBpbnQgZHJtX3F1ZXVlX3ZibGFua19ldmVudChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB1bnNpZ25lZCBpbnQgcGlwZSwKIAl0cmFjZV9kcm1fdmJsYW5rX2V2ZW50X3F1ZXVlZChmaWxl
X3ByaXYsIHBpcGUsIHJlcV9zZXEpOwogCiAJZS0+c2VxdWVuY2UgPSByZXFfc2VxOwotCWlmICh2
YmxhbmtfcGFzc2VkKHNlcSwgcmVxX3NlcSkpIHsKKwlpZiAoZHJtX3ZibGFua19wYXNzZWQoc2Vx
LCByZXFfc2VxKSkgewogCQlkcm1fdmJsYW5rX3B1dChkZXYsIHBpcGUpOwogCQlzZW5kX3ZibGFu
a19ldmVudChkZXYsIGUsIHNlcSwgbm93KTsKIAkJdmJsd2FpdC0+cmVwbHkuc2VxdWVuY2UgPSBz
ZXE7CkBAIC0xODA1LDcgKzE4MTcsNyBAQCBpbnQgZHJtX3dhaXRfdmJsYW5rX2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJfQogCiAJaWYgKChmbGFncyAmIF9EUk1f
VkJMQU5LX05FWFRPTk1JU1MpICYmCi0JICAgIHZibGFua19wYXNzZWQoc2VxLCByZXFfc2VxKSkg
eworCSAgICBkcm1fdmJsYW5rX3Bhc3NlZChzZXEsIHJlcV9zZXEpKSB7CiAJCXJlcV9zZXEgPSBz
ZXEgKyAxOwogCQl2Ymx3YWl0LT5yZXF1ZXN0LnR5cGUgJj0gfl9EUk1fVkJMQU5LX05FWFRPTk1J
U1M7CiAJCXZibHdhaXQtPnJlcXVlc3Quc2VxdWVuY2UgPSByZXFfc2VxOwpAQCAtMTgyNCw3ICsx
ODM2LDcgQEAgaW50IGRybV93YWl0X3ZibGFua19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB2b2lkICpkYXRhLAogCQlkcm1fZGJnX2NvcmUoZGV2LCAid2FpdGluZyBvbiB2YmxhbmsgY291
bnQgJWxsdSwgY3J0YyAldVxuIiwKIAkJCSAgICAgcmVxX3NlcSwgcGlwZSk7CiAJCXdhaXQgPSB3
YWl0X2V2ZW50X2ludGVycnVwdGlibGVfdGltZW91dCh2YmxhbmstPnF1ZXVlLAotCQkJdmJsYW5r
X3Bhc3NlZChkcm1fdmJsYW5rX2NvdW50KGRldiwgcGlwZSksIHJlcV9zZXEpIHx8CisJCQlkcm1f
dmJsYW5rX3Bhc3NlZChkcm1fdmJsYW5rX2NvdW50KGRldiwgcGlwZSksIHJlcV9zZXEpIHx8CiAJ
CQkJICAgICAgIVJFQURfT05DRSh2YmxhbmstPmVuYWJsZWQpLAogCQkJbXNlY3NfdG9famlmZmll
cygzMDAwKSk7CiAKQEAgLTE4NzMsNyArMTg4NSw3IEBAIHN0YXRpYyB2b2lkIGRybV9oYW5kbGVf
dmJsYW5rX2V2ZW50cyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZSkK
IAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoZSwgdCwgJmRldi0+dmJsYW5rX2V2ZW50X2xpc3Qs
IGJhc2UubGluaykgewogCQlpZiAoZS0+cGlwZSAhPSBwaXBlKQogCQkJY29udGludWU7Ci0JCWlm
ICghdmJsYW5rX3Bhc3NlZChzZXEsIGUtPnNlcXVlbmNlKSkKKwkJaWYgKCFkcm1fdmJsYW5rX3Bh
c3NlZChzZXEsIGUtPnNlcXVlbmNlKSkKIAkJCWNvbnRpbnVlOwogCiAJCWRybV9kYmdfY29yZShk
ZXYsICJ2YmxhbmsgZXZlbnQgb24gJWxsdSwgY3VycmVudCAlbGx1XG4iLApAQCAtMTk0Myw2ICsx
OTU1LDcgQEAgYm9vbCBkcm1faGFuZGxlX3ZibGFuayhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1
bnNpZ25lZCBpbnQgcGlwZSkKIAkJICAgICAgICFhdG9taWNfcmVhZCgmdmJsYW5rLT5yZWZjb3Vu
dCkpOwogCiAJZHJtX2hhbmRsZV92YmxhbmtfZXZlbnRzKGRldiwgcGlwZSk7CisJZHJtX2hhbmRs
ZV92Ymxhbmtfd29ya3ModmJsYW5rKTsKIAogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmRldi0+
ZXZlbnRfbG9jaywgaXJxZmxhZ3MpOwogCkBAIC0yMDk2LDcgKzIxMDksNyBAQCBpbnQgZHJtX2Ny
dGNfcXVldWVfc2VxdWVuY2VfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0
YSwKIAlpZiAoZmxhZ3MgJiBEUk1fQ1JUQ19TRVFVRU5DRV9SRUxBVElWRSkKIAkJcmVxX3NlcSAr
PSBzZXE7CiAKLQlpZiAoKGZsYWdzICYgRFJNX0NSVENfU0VRVUVOQ0VfTkVYVF9PTl9NSVNTKSAm
JiB2YmxhbmtfcGFzc2VkKHNlcSwgcmVxX3NlcSkpCisJaWYgKChmbGFncyAmIERSTV9DUlRDX1NF
UVVFTkNFX05FWFRfT05fTUlTUykgJiYgZHJtX3ZibGFua19wYXNzZWQoc2VxLCByZXFfc2VxKSkK
IAkJcmVxX3NlcSA9IHNlcSArIDE7CiAKIAllLT5waXBlID0gcGlwZTsKQEAgLTIxMjUsNyArMjEz
OCw3IEBAIGludCBkcm1fY3J0Y19xdWV1ZV9zZXF1ZW5jZV9pb2N0bChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB2b2lkICpkYXRhLAogCiAJZS0+c2VxdWVuY2UgPSByZXFfc2VxOwogCi0JaWYgKHZi
bGFua19wYXNzZWQoc2VxLCByZXFfc2VxKSkgeworCWlmIChkcm1fdmJsYW5rX3Bhc3NlZChzZXEs
IHJlcV9zZXEpKSB7CiAJCWRybV9jcnRjX3ZibGFua19wdXQoY3J0Yyk7CiAJCXNlbmRfdmJsYW5r
X2V2ZW50KGRldiwgZSwgc2VxLCBub3cpOwogCQlxdWV1ZV9zZXEtPnNlcXVlbmNlID0gc2VxOwpA
QCAtMjE0NSwzICsyMTU4LDQgQEAgaW50IGRybV9jcnRjX3F1ZXVlX3NlcXVlbmNlX2lvY3RsKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJa2ZyZWUoZSk7CiAJcmV0dXJuIHJl
dDsKIH0KKwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV92Ymxhbmtfd29yay5jIGIv
ZHJpdmVycy9ncHUvZHJtL2RybV92Ymxhbmtfd29yay5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAwMDAuLjdhYzBmYzBhOTQxNWQKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX3ZibGFua193b3JrLmMKQEAgLTAsMCArMSwyNjcgQEAKKy8vIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKworI2luY2x1ZGUgPHVhcGkvbGludXgvc2NoZWQvdHlw
ZXMuaD4KKworI2luY2x1ZGUgPGRybS9kcm1fcHJpbnQuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX3Zi
bGFuay5oPgorI2luY2x1ZGUgPGRybS9kcm1fdmJsYW5rX3dvcmsuaD4KKyNpbmNsdWRlIDxkcm0v
ZHJtX2NydGMuaD4KKworI2luY2x1ZGUgImRybV9pbnRlcm5hbC5oIgorCisvKioKKyAqIERPQzog
dmJsYW5rIHdvcmtzCisgKgorICogTWFueSBEUk0gZHJpdmVycyBuZWVkIHRvIHByb2dyYW0gaGFy
ZHdhcmUgaW4gYSB0aW1lLXNlbnNpdGl2ZSBtYW5uZXIsIG1hbnkKKyAqIHRpbWVzIHdpdGggYSBk
ZWFkbGluZSBvZiBzdGFydGluZyBhbmQgZmluaXNoaW5nIHdpdGhpbiBhIGNlcnRhaW4gcmVnaW9u
IG9mCisgKiB0aGUgc2Nhbm91dC4gTW9zdCBvZiB0aGUgdGltZSB0aGUgc2FmZXN0IHdheSB0byBh
Y2NvbXBsaXNoIHRoaXMgaXMgdG8KKyAqIHNpbXBseSBkbyBzYWlkIHRpbWUtc2Vuc2l0aXZlIHBy
b2dyYW1taW5nIGluIHRoZSBkcml2ZXIncyBJUlEgaGFuZGxlciwKKyAqIHdoaWNoIGFsbG93cyBk
cml2ZXJzIHRvIGF2b2lkIGJlaW5nIHByZWVtcHRlZCBkdXJpbmcgdGhlc2UgY3JpdGljYWwKKyAq
IHJlZ2lvbnMuIE9yIGV2ZW4gYmV0dGVyLCB0aGUgaGFyZHdhcmUgbWF5IGV2ZW4gaGFuZGxlIGFw
cGx5aW5nIHN1Y2gKKyAqIHRpbWUtY3JpdGljYWwgcHJvZ3JhbW1pbmcgaW5kZXBlbmRlbnRseSBv
ZiB0aGUgQ1BVLgorICoKKyAqIFdoaWxlIHRoZXJlJ3MgYSBkZWNlbnQgYW1vdW50IG9mIGhhcmR3
YXJlIHRoYXQncyBkZXNpZ25lZCBzbyB0aGF0IHRoZSBDUFUKKyAqIGRvZXNuJ3QgbmVlZCB0byBi
ZSBjb25jZXJuZWQgd2l0aCBleHRyZW1lbHkgdGltZS1zZW5zaXRpdmUgcHJvZ3JhbW1pbmcsCisg
KiB0aGVyZSdzIGEgZmV3IHNpdHVhdGlvbnMgd2hlcmUgaXQgY2FuJ3QgYmUgaGVscGVkLiBTb21l
IHVuZm9yZ2l2aW5nCisgKiBoYXJkd2FyZSBtYXkgcmVxdWlyZSB0aGF0IGNlcnRhaW4gdGltZS1z
ZW5zaXRpdmUgcHJvZ3JhbW1pbmcgYmUgaGFuZGxlZAorICogY29tcGxldGVseSBieSB0aGUgQ1BV
LCBhbmQgc2FpZCBwcm9ncmFtbWluZyBtYXkgZXZlbiB0YWtlIHRvbyBsb25nIHRvCisgKiBoYW5k
bGUgaW4gYW4gSVJRIGhhbmRsZXIuIEFub3RoZXIgc3VjaCBzaXR1YXRpb24gd291bGQgYmUgd2hl
cmUgdGhlIGRyaXZlcgorICogbmVlZHMgdG8gcGVyZm9ybSBhIHRhc2sgdGhhdCBuZWVkcyB0byBj
b21wbGV0ZSB3aXRoaW4gYSBzcGVjaWZpYyBzY2Fub3V0CisgKiBwZXJpb2QsIGJ1dCBtaWdodCBw
b3NzaWJseSBibG9jayBhbmQgdGh1cyBjYW5ub3QgYmUgaGFuZGxlZCBpbiBhbiBJUlEKKyAqIGNv
bnRleHQuIEJvdGggb2YgdGhlc2Ugc2l0dWF0aW9ucyBjYW4ndCBiZSBzb2x2ZWQgcGVyZmVjdGx5
IGluIExpbnV4IHNpbmNlCisgKiB3ZSdyZSBub3QgYSByZWFsdGltZSBrZXJuZWwsIGFuZCB0aHVz
IHRoZSBzY2hlZHVsZXIgbWF5IGNhdXNlIHVzIHRvIG1pc3MKKyAqIG91ciBkZWFkbGluZSBpZiBp
dCBkZWNpZGVzIHRvIHByZWVtcHQgdXMuIEJ1dCBmb3Igc29tZSBkcml2ZXJzLCBpdCdzIGdvb2QK
KyAqIGVub3VnaCBpZiB3ZSBjYW4gbG93ZXIgb3VyIGNoYW5jZSBvZiBiZWluZyBwcmVlbXB0ZWQg
dG8gYW4gYWJzb2x1dGUKKyAqIG1pbmltdW0uCisgKgorICogVGhpcyBpcyB3aGVyZSAmZHJtX3Zi
bGFua193b3JrIGNvbWVzIGluLiAmZHJtX3ZibGFua193b3JrIHByb3ZpZGVzIGEgc2ltcGxlCisg
KiBnZW5lcmljIGRlbGF5ZWQgd29yayBpbXBsZW1lbnRhdGlvbiB3aGljaCBkZWxheXMgd29yayBl
eGVjdXRpb24gdW50aWwgYQorICogcGFydGljdWxhciB2YmxhbmsgaGFzIHBhc3NlZCwgYW5kIHRo
ZW4gZXhlY3V0ZXMgdGhlIHdvcmsgYXQgcmVhbHRpbWUKKyAqIHByaW9yaXR5LiBUaGlzIHByb3Zp
ZGVzIHRoZSBiZXN0IHBvc3NpYmxlIGNoYW5jZSBhdCBwZXJmb3JtaW5nCisgKiB0aW1lLXNlbnNp
dGl2ZSBoYXJkd2FyZSBwcm9ncmFtbWluZyBvbiB0aW1lLCBldmVuIHdoZW4gdGhlIHN5c3RlbSBp
cyB1bmRlcgorICogaGVhdnkgbG9hZC4gJmRybV92Ymxhbmtfd29yayBhbHNvIHN1cHBvcnRzIHJl
c2NoZWR1bGluZywgc28gdGhhdCBzZWxmCisgKiByZS1hcm1pbmcgd29yayBpdGVtcyBjYW4gYmUg
ZWFzaWx5IGltcGxlbWVudGVkLgorICovCisKK3ZvaWQgZHJtX2hhbmRsZV92Ymxhbmtfd29ya3Mo
c3RydWN0IGRybV92YmxhbmtfY3J0YyAqdmJsYW5rKQoreworCXN0cnVjdCBkcm1fdmJsYW5rX3dv
cmsgKndvcmssICpuZXh0OworCXU2NCBjb3VudCA9IGF0b21pYzY0X3JlYWQoJnZibGFuay0+Y291
bnQpOworCWJvb2wgd2FrZSA9IGZhbHNlOworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCZ2Ymxhbmst
PmRldi0+ZXZlbnRfbG9jayk7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUod29yaywgbmV4
dCwgJnZibGFuay0+cGVuZGluZ193b3JrLCBub2RlKSB7CisJCWlmICghZHJtX3ZibGFua19wYXNz
ZWQoY291bnQsIHdvcmstPmNvdW50KSkKKwkJCWNvbnRpbnVlOworCisJCWxpc3RfZGVsX2luaXQo
JndvcmstPm5vZGUpOworCQlkcm1fdmJsYW5rX3B1dCh2YmxhbmstPmRldiwgdmJsYW5rLT5waXBl
KTsKKwkJa3RocmVhZF9xdWV1ZV93b3JrKHZibGFuay0+d29ya2VyLCAmd29yay0+YmFzZSk7CisJ
CXdha2UgPSB0cnVlOworCX0KKwlpZiAod2FrZSkKKwkJd2FrZV91cF9hbGwoJnZibGFuay0+d29y
a193YWl0X3F1ZXVlKTsKK30KKworLyogSGFuZGxlIGNhbmNlbGxpbmcgYW55IHBlbmRpbmcgdmJs
YW5rIHdvcmsgaXRlbXMgYW5kIGRyb3AgcmVzcGVjdGl2ZSB2YmxhbmsKKyAqIHJlZmVyZW5jZXMg
aW4gcmVzcG9uc2UgdG8gdmJsYW5rIGludGVycnVwdHMgYmVpbmcgZGlzYWJsZWQuCisgKi8KK3Zv
aWQgZHJtX3ZibGFua19jYW5jZWxfcGVuZGluZ193b3JrcyhzdHJ1Y3QgZHJtX3ZibGFua19jcnRj
ICp2YmxhbmspCit7CisJc3RydWN0IGRybV92Ymxhbmtfd29yayAqd29yaywgKm5leHQ7CisKKwlh
c3NlcnRfc3Bpbl9sb2NrZWQoJnZibGFuay0+ZGV2LT5ldmVudF9sb2NrKTsKKworCWxpc3RfZm9y
X2VhY2hfZW50cnlfc2FmZSh3b3JrLCBuZXh0LCAmdmJsYW5rLT5wZW5kaW5nX3dvcmssIG5vZGUp
IHsKKwkJbGlzdF9kZWxfaW5pdCgmd29yay0+bm9kZSk7CisJCWRybV92YmxhbmtfcHV0KHZibGFu
ay0+ZGV2LCB2YmxhbmstPnBpcGUpOworCX0KKworCXdha2VfdXBfYWxsKCZ2YmxhbmstPndvcmtf
d2FpdF9xdWV1ZSk7Cit9CisKKy8qKgorICogZHJtX3ZibGFua193b3JrX3NjaGVkdWxlIC0gc2No
ZWR1bGUgYSB2Ymxhbmsgd29yaworICogQHdvcms6IHZibGFuayB3b3JrIHRvIHNjaGVkdWxlCisg
KiBAY291bnQ6IHRhcmdldCB2YmxhbmsgY291bnQKKyAqIEBuZXh0b25taXNzOiBkZWZlciB1bnRp
bCB0aGUgbmV4dCB2YmxhbmsgaWYgdGFyZ2V0IHZibGFuayB3YXMgbWlzc2VkCisgKgorICogU2No
ZWR1bGUgQHdvcmsgZm9yIGV4ZWN1dGlvbiBvbmNlIHRoZSBjcnRjIHZibGFuayBjb3VudCByZWFj
aGVzIEBjb3VudC4KKyAqCisgKiBJZiB0aGUgY3J0YyB2YmxhbmsgY291bnQgaGFzIGFscmVhZHkg
cmVhY2hlZCBAY291bnQgYW5kIEBuZXh0b25taXNzIGlzCisgKiAlZmFsc2UgdGhlIHdvcmsgc3Rh
cnRzIHRvIGV4ZWN1dGUgaW1tZWRpYXRlbHkuCisgKgorICogSWYgdGhlIGNydGMgdmJsYW5rIGNv
dW50IGhhcyBhbHJlYWR5IHJlYWNoZWQgQGNvdW50IGFuZCBAbmV4dG9ubWlzcyBpcworICogJXRy
dWUgdGhlIHdvcmsgaXMgZGVmZXJyZWQgdW50aWwgdGhlIG5leHQgdmJsYW5rIChhcyBpZiBAY291
bnQgaGFzIGJlZW4KKyAqIHNwZWNpZmllZCBhcyBjcnRjIHZibGFuayBjb3VudCArIDEpLgorICoK
KyAqIElmIEB3b3JrIGlzIGFscmVhZHkgc2NoZWR1bGVkLCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmVz
Y2hlZHVsZSBzYWlkIHdvcmsKKyAqIHVzaW5nIHRoZSBuZXcgQGNvdW50LiBUaGlzIGNhbiBiZSB1
c2VkIGZvciBzZWxmLXJlYXJtaW5nIHdvcmsgaXRlbXMuCisgKgorICogUmV0dXJuczoKKyAqICUx
IGlmIEB3b3JrIHdhcyBzdWNjZXNzZnVsbHkgKHJlKXNjaGVkdWxlZCwgJTAgaWYgaXQgd2FzIGVp
dGhlciBhbHJlYWR5CisgKiBzY2hlZHVsZWQgb3IgY2FuY2VsbGVkLCBvciBhIG5lZ2F0aXZlIGVy
cm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IGRybV92Ymxhbmtfd29ya19zY2hlZHVsZShz
dHJ1Y3QgZHJtX3ZibGFua193b3JrICp3b3JrLAorCQkJICAgICB1NjQgY291bnQsIGJvb2wgbmV4
dG9ubWlzcykKK3sKKwlzdHJ1Y3QgZHJtX3ZibGFua19jcnRjICp2YmxhbmsgPSB3b3JrLT52Ymxh
bms7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHZibGFuay0+ZGV2OworCXU2NCBjdXJfdmJs
OworCXVuc2lnbmVkIGxvbmcgaXJxZmxhZ3M7CisJYm9vbCBwYXNzZWQsIGlubW9kZXNldCwgcmVz
Y2hlZHVsaW5nID0gZmFsc2UsIHdha2UgPSBmYWxzZTsKKwlpbnQgcmV0ID0gMDsKKworCXNwaW5f
bG9ja19pcnFzYXZlKCZkZXYtPmV2ZW50X2xvY2ssIGlycWZsYWdzKTsKKwlpZiAod29yay0+Y2Fu
Y2VsbGluZykKKwkJZ290byBvdXQ7CisKKwlzcGluX2xvY2soJmRldi0+dmJsX2xvY2spOworCWlu
bW9kZXNldCA9IHZibGFuay0+aW5tb2Rlc2V0OworCXNwaW5fdW5sb2NrKCZkZXYtPnZibF9sb2Nr
KTsKKwlpZiAoaW5tb2Rlc2V0KQorCQlnb3RvIG91dDsKKworCWlmIChsaXN0X2VtcHR5KCZ3b3Jr
LT5ub2RlKSkgeworCQlyZXQgPSBkcm1fdmJsYW5rX2dldChkZXYsIHZibGFuay0+cGlwZSk7CisJ
CWlmIChyZXQgPCAwKQorCQkJZ290byBvdXQ7CisJfSBlbHNlIGlmICh3b3JrLT5jb3VudCA9PSBj
b3VudCkgeworCQkvKiBBbHJlYWR5IHNjaGVkdWxlZCB3LyBzYW1lIHZibCBjb3VudCAqLworCQln
b3RvIG91dDsKKwl9IGVsc2UgeworCQlyZXNjaGVkdWxpbmcgPSB0cnVlOworCX0KKworCXdvcmst
PmNvdW50ID0gY291bnQ7CisJY3VyX3ZibCA9IGRybV92YmxhbmtfY291bnQoZGV2LCB2Ymxhbmst
PnBpcGUpOworCXBhc3NlZCA9IGRybV92YmxhbmtfcGFzc2VkKGN1cl92YmwsIGNvdW50KTsKKwlp
ZiAocGFzc2VkKQorCQlkcm1fZGJnX2NvcmUoZGV2LAorCQkJICAgICAiY3J0YyAlZCB2Ymxhbmsg
JWxsdSBhbHJlYWR5IHBhc3NlZCAoY3VycmVudCAlbGx1KVxuIiwKKwkJCSAgICAgdmJsYW5rLT5w
aXBlLCBjb3VudCwgY3VyX3ZibCk7CisKKwlpZiAoIW5leHRvbm1pc3MgJiYgcGFzc2VkKSB7CisJ
CWRybV92YmxhbmtfcHV0KGRldiwgdmJsYW5rLT5waXBlKTsKKwkJcmV0ID0ga3RocmVhZF9xdWV1
ZV93b3JrKHZibGFuay0+d29ya2VyLCAmd29yay0+YmFzZSk7CisKKwkJaWYgKHJlc2NoZWR1bGlu
ZykgeworCQkJbGlzdF9kZWxfaW5pdCgmd29yay0+bm9kZSk7CisJCQl3YWtlID0gdHJ1ZTsKKwkJ
fQorCX0gZWxzZSB7CisJCWlmICghcmVzY2hlZHVsaW5nKQorCQkJbGlzdF9hZGRfdGFpbCgmd29y
ay0+bm9kZSwgJnZibGFuay0+cGVuZGluZ193b3JrKTsKKwkJcmV0ID0gdHJ1ZTsKKwl9CisKK291
dDoKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZkZXYtPmV2ZW50X2xvY2ssIGlycWZsYWdzKTsK
KwlpZiAod2FrZSkKKwkJd2FrZV91cF9hbGwoJnZibGFuay0+d29ya193YWl0X3F1ZXVlKTsKKwly
ZXR1cm4gcmV0OworfQorRVhQT1JUX1NZTUJPTChkcm1fdmJsYW5rX3dvcmtfc2NoZWR1bGUpOwor
CisvKioKKyAqIGRybV92Ymxhbmtfd29ya19jYW5jZWxfc3luYyAtIGNhbmNlbCBhIHZibGFuayB3
b3JrIGFuZCB3YWl0IGZvciBpdCB0bworICogZmluaXNoIGV4ZWN1dGluZworICogQHdvcms6IHZi
bGFuayB3b3JrIHRvIGNhbmNlbAorICoKKyAqIENhbmNlbCBhbiBhbHJlYWR5IHNjaGVkdWxlZCB2
Ymxhbmsgd29yayBhbmQgd2FpdCBmb3IgaXRzCisgKiBleGVjdXRpb24gdG8gZmluaXNoLgorICoK
KyAqIE9uIHJldHVybiwgQHdvcmsgaXMgZ3VhcmFudGVlZCB0byBubyBsb25nZXIgYmUgc2NoZWR1
bGVkIG9yIHJ1bm5pbmcsIGV2ZW4KKyAqIGlmIGl0J3Mgc2VsZi1hcm1pbmcuCisgKgorICogUmV0
dXJuczoKKyAqICVUcnVlIGlmIHRoZSB3b3JrIHdhcyBjYW5jZWxsZWQgYmVmb3JlIGl0IHN0YXJ0
ZWQgdG8gZXhlY3V0ZSwgJWZhbHNlCisgKiBvdGhlcndpc2UuCisgKi8KK2Jvb2wgZHJtX3ZibGFu
a193b3JrX2NhbmNlbF9zeW5jKHN0cnVjdCBkcm1fdmJsYW5rX3dvcmsgKndvcmspCit7CisJc3Ry
dWN0IGRybV92YmxhbmtfY3J0YyAqdmJsYW5rID0gd29yay0+dmJsYW5rOworCXN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYgPSB2YmxhbmstPmRldjsKKwlib29sIHJldCA9IGZhbHNlOworCisJc3Bpbl9s
b2NrX2lycSgmZGV2LT5ldmVudF9sb2NrKTsKKwlpZiAoIWxpc3RfZW1wdHkoJndvcmstPm5vZGUp
KSB7CisJCWxpc3RfZGVsX2luaXQoJndvcmstPm5vZGUpOworCQlkcm1fdmJsYW5rX3B1dCh2Ymxh
bmstPmRldiwgdmJsYW5rLT5waXBlKTsKKwkJcmV0ID0gdHJ1ZTsKKwl9CisKKwl3b3JrLT5jYW5j
ZWxsaW5nKys7CisJc3Bpbl91bmxvY2tfaXJxKCZkZXYtPmV2ZW50X2xvY2spOworCisJd2FrZV91
cF9hbGwoJnZibGFuay0+d29ya193YWl0X3F1ZXVlKTsKKworCWlmIChrdGhyZWFkX2NhbmNlbF93
b3JrX3N5bmMoJndvcmstPmJhc2UpKQorCQlyZXQgPSB0cnVlOworCisJc3Bpbl9sb2NrX2lycSgm
ZGV2LT5ldmVudF9sb2NrKTsKKwl3b3JrLT5jYW5jZWxsaW5nLS07CisJc3Bpbl91bmxvY2tfaXJx
KCZkZXYtPmV2ZW50X2xvY2spOworCisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0woZHJt
X3ZibGFua193b3JrX2NhbmNlbF9zeW5jKTsKKworLyoqCisgKiBkcm1fdmJsYW5rX3dvcmtfZmx1
c2ggLSB3YWl0IGZvciBhIHNjaGVkdWxlZCB2Ymxhbmsgd29yayB0byBmaW5pc2gKKyAqIGV4ZWN1
dGluZworICogQHdvcms6IHZibGFuayB3b3JrIHRvIGZsdXNoCisgKgorICogV2FpdCB1bnRpbCBA
d29yayBoYXMgZmluaXNoZWQgZXhlY3V0aW5nIG9uY2UuCisgKi8KK3ZvaWQgZHJtX3ZibGFua193
b3JrX2ZsdXNoKHN0cnVjdCBkcm1fdmJsYW5rX3dvcmsgKndvcmspCit7CisJc3RydWN0IGRybV92
YmxhbmtfY3J0YyAqdmJsYW5rID0gd29yay0+dmJsYW5rOworCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYgPSB2YmxhbmstPmRldjsKKworCXNwaW5fbG9ja19pcnEoJmRldi0+ZXZlbnRfbG9jayk7CisJ
d2FpdF9ldmVudF9sb2NrX2lycSh2YmxhbmstPndvcmtfd2FpdF9xdWV1ZSwgbGlzdF9lbXB0eSgm
d29yay0+bm9kZSksCisJCQkgICAgZGV2LT5ldmVudF9sb2NrKTsKKwlzcGluX3VubG9ja19pcnEo
JmRldi0+ZXZlbnRfbG9jayk7CisKKwlrdGhyZWFkX2ZsdXNoX3dvcmsoJndvcmstPmJhc2UpOwor
fQorRVhQT1JUX1NZTUJPTChkcm1fdmJsYW5rX3dvcmtfZmx1c2gpOworCisvKioKKyAqIGRybV92
Ymxhbmtfd29ya19pbml0IC0gaW5pdGlhbGl6ZSBhIHZibGFuayB3b3JrIGl0ZW0KKyAqIEB3b3Jr
OiB2Ymxhbmsgd29yayBpdGVtCisgKiBAY3J0YzogQ1JUQyB3aG9zZSB2Ymxhbmsgd2lsbCB0cmln
Z2VyIHRoZSB3b3JrIGV4ZWN1dGlvbgorICogQGZ1bmM6IHdvcmsgZnVuY3Rpb24gdG8gYmUgZXhl
Y3V0ZWQKKyAqCisgKiBJbml0aWFsaXplIGEgdmJsYW5rIHdvcmsgaXRlbSBmb3IgYSBzcGVjaWZp
YyBjcnRjLgorICovCit2b2lkIGRybV92Ymxhbmtfd29ya19pbml0KHN0cnVjdCBkcm1fdmJsYW5r
X3dvcmsgKndvcmssIHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKKwkJCSAgdm9pZCAoKmZ1bmMpKHN0
cnVjdCBrdGhyZWFkX3dvcmsgKndvcmspKQoreworCWt0aHJlYWRfaW5pdF93b3JrKCZ3b3JrLT5i
YXNlLCBmdW5jKTsKKwlJTklUX0xJU1RfSEVBRCgmd29yay0+bm9kZSk7CisJd29yay0+dmJsYW5r
ID0gJmNydGMtPmRldi0+dmJsYW5rW2RybV9jcnRjX2luZGV4KGNydGMpXTsKK30KK0VYUE9SVF9T
WU1CT0woZHJtX3ZibGFua193b3JrX2luaXQpOworCitpbnQgZHJtX3ZibGFua193b3JrZXJfaW5p
dChzdHJ1Y3QgZHJtX3ZibGFua19jcnRjICp2YmxhbmspCit7CisJc3RydWN0IHNjaGVkX3BhcmFt
IHBhcmFtID0geworCQkuc2NoZWRfcHJpb3JpdHkgPSBNQVhfUlRfUFJJTyAtIDEsCisJfTsKKwlz
dHJ1Y3Qga3RocmVhZF93b3JrZXIgKndvcmtlcjsKKworCUlOSVRfTElTVF9IRUFEKCZ2Ymxhbmst
PnBlbmRpbmdfd29yayk7CisJaW5pdF93YWl0cXVldWVfaGVhZCgmdmJsYW5rLT53b3JrX3dhaXRf
cXVldWUpOworCXdvcmtlciA9IGt0aHJlYWRfY3JlYXRlX3dvcmtlcigwLCAiY2FyZCVkLWNydGMl
ZCIsCisJCQkJICAgICAgIHZibGFuay0+ZGV2LT5wcmltYXJ5LT5pbmRleCwKKwkJCQkgICAgICAg
dmJsYW5rLT5waXBlKTsKKwlpZiAoSVNfRVJSKHdvcmtlcikpCisJCXJldHVybiBQVFJfRVJSKHdv
cmtlcik7CisKKwl2YmxhbmstPndvcmtlciA9IHdvcmtlcjsKKworCXJldHVybiBzY2hlZF9zZXRz
Y2hlZHVsZXIodmJsYW5rLT53b3JrZXItPnRhc2ssIFNDSEVEX0ZJRk8sICZwYXJhbSk7Cit9CmRp
ZmYgLS1naXQgYS9pbmNsdWRlL2RybS9kcm1fdmJsYW5rLmggYi9pbmNsdWRlL2RybS9kcm1fdmJs
YW5rLmgKaW5kZXggZGQ5ZjViOWU1NmU0ZS4uZGQxMjVmOGM3NjZjZiAxMDA2NDQKLS0tIGEvaW5j
bHVkZS9kcm0vZHJtX3ZibGFuay5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV92YmxhbmsuaApAQCAt
MjcsMTIgKzI3LDE0IEBACiAjaW5jbHVkZSA8bGludXgvc2VxbG9jay5oPgogI2luY2x1ZGUgPGxp
bnV4L2lkci5oPgogI2luY2x1ZGUgPGxpbnV4L3BvbGwuaD4KKyNpbmNsdWRlIDxsaW51eC9rdGhy
ZWFkLmg+CiAKICNpbmNsdWRlIDxkcm0vZHJtX2ZpbGUuaD4KICNpbmNsdWRlIDxkcm0vZHJtX21v
ZGVzLmg+CiAKIHN0cnVjdCBkcm1fZGV2aWNlOwogc3RydWN0IGRybV9jcnRjOworc3RydWN0IGRy
bV92Ymxhbmtfd29yazsKIAogLyoqCiAgKiBzdHJ1Y3QgZHJtX3BlbmRpbmdfdmJsYW5rX2V2ZW50
IC0gcGVuZGluZyB2YmxhbmsgZXZlbnQgdHJhY2tpbmcKQEAgLTIwMyw2ICsyMDUsMjQgQEAgc3Ry
dWN0IGRybV92YmxhbmtfY3J0YyB7CiAJICogZGlzYWJsaW5nIGZ1bmN0aW9ucyBtdWx0aXBsZSB0
aW1lcy4KIAkgKi8KIAlib29sIGVuYWJsZWQ7CisKKwkvKioKKwkgKiBAd29ya2VyOiBUaGUgJmt0
aHJlYWRfd29ya2VyIHVzZWQgZm9yIGV4ZWN1dGluZyB2Ymxhbmsgd29ya3MuCisJICovCisJc3Ry
dWN0IGt0aHJlYWRfd29ya2VyICp3b3JrZXI7CisKKwkvKioKKwkgKiBAcGVuZGluZ193b3JrOiBB
IGxpc3Qgb2Ygc2NoZWR1bGVkICZkcm1fdmJsYW5rX3dvcmsgaXRlbXMgdGhhdCBhcmUKKwkgKiB3
YWl0aW5nIGZvciBhIGZ1dHVyZSB2YmxhbmsuCisJICovCisJc3RydWN0IGxpc3RfaGVhZCBwZW5k
aW5nX3dvcms7CisKKwkvKioKKwkgKiBAd29ya193YWl0X3F1ZXVlOiBUaGUgd2FpdCBxdWV1ZSB1
c2VkIGZvciBzaWduYWxpbmcgdGhhdCBhCisJICogJmRybV92Ymxhbmtfd29yayBpdGVtIGhhcyBl
aXRoZXIgZmluaXNoZWQgZXhlY3V0aW5nLCBvciB3YXMKKwkgKiBjYW5jZWxsZWQuCisJICovCisJ
d2FpdF9xdWV1ZV9oZWFkX3Qgd29ya193YWl0X3F1ZXVlOwogfTsKIAogaW50IGRybV92Ymxhbmtf
aW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgbnVtX2NydGNzKTsKZGlm
ZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV92Ymxhbmtfd29yay5oIGIvaW5jbHVkZS9kcm0vZHJt
X3ZibGFua193b3JrLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4u
ZjA0MzljMDM5ZjdjZQotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvZHJtL2RybV92Ymxhbmtf
d29yay5oCkBAIC0wLDAgKzEsNzEgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQK
KworI2lmbmRlZiBfRFJNX1ZCTEFOS19XT1JLX0hfCisjZGVmaW5lIF9EUk1fVkJMQU5LX1dPUktf
SF8KKworI2luY2x1ZGUgPGxpbnV4L2t0aHJlYWQuaD4KKworc3RydWN0IGRybV9jcnRjOworCisv
KioKKyAqIHN0cnVjdCBkcm1fdmJsYW5rX3dvcmsgLSBBIGRlbGF5ZWQgd29yayBpdGVtIHdoaWNo
IGRlbGF5cyB1bnRpbCBhIHRhcmdldAorICogdmJsYW5rIHBhc3NlcywgYW5kIHRoZW4gZXhlY3V0
ZXMgYXQgcmVhbHRpbWUgcHJpb3JpdHkgb3V0c2lkZSBvZiBJUlEKKyAqIGNvbnRleHQuCisgKgor
ICogU2VlIGFsc286CisgKiBkcm1fdmJsYW5rX3dvcmtfc2NoZWR1bGUoKQorICogZHJtX3ZibGFu
a193b3JrX2luaXQoKQorICogZHJtX3ZibGFua193b3JrX2NhbmNlbF9zeW5jKCkKKyAqIGRybV92
Ymxhbmtfd29ya19mbHVzaCgpCisgKi8KK3N0cnVjdCBkcm1fdmJsYW5rX3dvcmsgeworCS8qKgor
CSAqIEBiYXNlOiBUaGUgYmFzZSAma3RocmVhZF93b3JrIGl0ZW0gd2hpY2ggd2lsbCBiZSBleGVj
dXRlZCBieQorCSAqICZkcm1fdmJsYW5rX2NydGMud29ya2VyLiBEcml2ZXJzIHNob3VsZCBub3Qg
aW50ZXJhY3Qgd2l0aCB0aGlzCisJICogZGlyZWN0bHksIGFuZCBpbnN0ZWFkIHJlbHkgb24gZHJt
X3ZibGFua193b3JrX2luaXQoKSB0byBpbml0aWFsaXplCisJICogdGhpcy4KKwkgKi8KKwlzdHJ1
Y3Qga3RocmVhZF93b3JrIGJhc2U7CisKKwkvKioKKwkgKiBAdmJsYW5rOiBBIHBvaW50ZXIgdG8g
JmRybV92YmxhbmtfY3J0YyB0aGlzIHdvcmsgaXRlbSBiZWxvbmdzIHRvLgorCSAqLworCXN0cnVj
dCBkcm1fdmJsYW5rX2NydGMgKnZibGFuazsKKworCS8qKgorCSAqIEBjb3VudDogVGhlIHRhcmdl
dCB2YmxhbmsgdGhpcyB3b3JrIHdpbGwgZXhlY3V0ZSBvbi4gRHJpdmVycyBzaG91bGQKKwkgKiBu
b3QgbW9kaWZ5IHRoaXMgdmFsdWUgZGlyZWN0bHksIGFuZCBpbnN0ZWFkIHVzZQorCSAqIGRybV92
Ymxhbmtfd29ya19zY2hlZHVsZSgpCisJICovCisJdTY0IGNvdW50OworCisJLyoqCisJICogQGNh
bmNlbGxpbmc6IFRoZSBudW1iZXIgb2YgZHJtX3ZibGFua193b3JrX2NhbmNlbF9zeW5jKCkgY2Fs
bHMgdGhhdAorCSAqIGFyZSBjdXJyZW50bHkgcnVubmluZy4gQSB3b3JrIGl0ZW0gY2Fubm90IGJl
IHJlc2NoZWR1bGVkIHVudGlsIGFsbAorCSAqIGNhbGxzIGhhdmUgZmluaXNoZWQuCisJICovCisJ
aW50IGNhbmNlbGxpbmc7CisKKwkvKioKKwkgKiBAbm9kZTogVGhlIHBvc2l0aW9uIG9mIHRoaXMg
d29yayBpdGVtIGluCisJICogJmRybV92YmxhbmtfY3J0Yy5wZW5kaW5nX3dvcmsuCisJICovCisJ
c3RydWN0IGxpc3RfaGVhZCBub2RlOworfTsKKworLyoqCisgKiB0b19kcm1fdmJsYW5rX3dvcmsg
LSBSZXRyaWV2ZSB0aGUgcmVzcGVjdGl2ZSAmZHJtX3ZibGFua193b3JrIGl0ZW0gZnJvbSBhCisg
KiAma3RocmVhZF93b3JrCisgKiBAX3dvcms6IFRoZSAma3RocmVhZF93b3JrIGVtYmVkZGVkIGlu
c2lkZSBhICZkcm1fdmJsYW5rX3dvcmsKKyAqLworI2RlZmluZSB0b19kcm1fdmJsYW5rX3dvcmso
X3dvcmspIFwKKwljb250YWluZXJfb2YoKF93b3JrKSwgc3RydWN0IGRybV92Ymxhbmtfd29yaywg
YmFzZSkKKworaW50IGRybV92Ymxhbmtfd29ya19zY2hlZHVsZShzdHJ1Y3QgZHJtX3ZibGFua193
b3JrICp3b3JrLAorCQkJICAgICB1NjQgY291bnQsIGJvb2wgbmV4dG9ubWlzcyk7Cit2b2lkIGRy
bV92Ymxhbmtfd29ya19pbml0KHN0cnVjdCBkcm1fdmJsYW5rX3dvcmsgKndvcmssIHN0cnVjdCBk
cm1fY3J0YyAqY3J0YywKKwkJCSAgdm9pZCAoKmZ1bmMpKHN0cnVjdCBrdGhyZWFkX3dvcmsgKndv
cmspKTsKK2Jvb2wgZHJtX3ZibGFua193b3JrX2NhbmNlbF9zeW5jKHN0cnVjdCBkcm1fdmJsYW5r
X3dvcmsgKndvcmspOwordm9pZCBkcm1fdmJsYW5rX3dvcmtfZmx1c2goc3RydWN0IGRybV92Ymxh
bmtfd29yayAqd29yayk7CisKKyNlbmRpZiAvKiAhX0RSTV9WQkxBTktfV09SS19IXyAqLwotLSAK
Mi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpk
cmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
