Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D8BB36C166
	for <lists+dri-devel@lfdr.de>; Wed, 17 Jul 2019 21:21:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D147D6E29F;
	Wed, 17 Jul 2019 19:21:42 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from bhuna.collabora.co.uk (bhuna.collabora.co.uk
 [IPv6:2a00:1098:0:82:1000:25:2eeb:e3e3])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D890C6E29F;
 Wed, 17 Jul 2019 19:21:40 +0000 (UTC)
Received: from [127.0.0.1] (localhost [127.0.0.1])
 (Authenticated sender: koike) with ESMTPSA id E354728A8A3
From: Helen Koike <helen.koike@collabora.com>
To: dri-devel@lists.freedesktop.org,
	intel-gfx@lists.freedesktop.org
Subject: [PATCH v10 2/2] drm/i915: update cursors asynchronously through atomic
Date: Wed, 17 Jul 2019 16:21:13 -0300
Message-Id: <20190717192114.21855-2-helen.koike@collabora.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190717192114.21855-1-helen.koike@collabora.com>
References: <20190717192114.21855-1-helen.koike@collabora.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: mcasas@google.com, zhenyu.z.wang@intel.com, airlied@linux.ie,
 daniel.vetter@ffwll.ch, tina.zhang@intel.com, linux-kernel@vger.kernel.org,
 tfiga@chromium.org, gustavo.padovan@collabora.com,
 Helen Koike <helen.koike@collabora.com>, rodrigo.vivi@intel.com,
 enric.balletbo@collabora.com, kernel@collabora.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogR3VzdGF2byBQYWRvdmFuIDxndXN0YXZvLnBhZG92YW5AY29sbGFib3JhLmNvbT4KClJl
cGxhY2UgdGhlIGxlZ2FjeSBjdXJzb3IgaW1wbGVtZW50YXRpb24gYnkgdGhlIGFzeW5jIGNhbGxi
YWNrcwoKU2lnbmVkLW9mZi1ieTogR3VzdGF2byBQYWRvdmFuIDxndXN0YXZvLnBhZG92YW5AY29s
bGFib3JhLmNvbT4KU2lnbmVkLW9mZi1ieTogRW5yaWMgQmFsbGV0Ym8gaSBTZXJyYSA8ZW5yaWMu
YmFsbGV0Ym9AY29sbGFib3JhLmNvbT4KU2lnbmVkLW9mZi1ieTogSGVsZW4gS29pa2UgPGhlbGVu
LmtvaWtlQGNvbGxhYm9yYS5jb20+CgotLS0KCkNoYW5nZXMgaW4gdjEwOiBOb25lCkNoYW5nZXMg
aW4gdjk6CiAtIHY4OiBodHRwczovL3BhdGNod29yay5rZXJuZWwub3JnL3BhdGNoLzEwODQzMzk3
LwogLSByZWJhc2VkIGFuZCBmaXhlZCBjb25mbGljdHMgb24gdG9wIG9mIGRybS10aXAKCkNoYW5n
ZXMgaW4gdjg6CiAtIHY3OiBodHRwczovL2xrbWwub3JnL2xrbWwvMjAxOC82LzgvMTY4CiAtIHY3
IHdhcyBzcGxpdGVkIGluIHR3bywgb25lIHRoYXQgYWRkcyB0aGUgYXN5bmMgY2FsbGJhY2tzIGFu
ZCBhbm90aGVyCiB0aGF0IHVwZGF0ZXMgdGhlIGN1cnNvci4KIC0gVXBkYXRlIGNvbW1lbnQgaW4g
aW50ZWxfcG0uYyB0aGF0IHdhcyByZWZlcmVuY2luZwogaW50ZWxfcGxhbmVfYXRvbWljX2FzeW5j
X3VwZGF0ZSgpCgpDaGFuZ2VzIGluIHY3OiBOb25lCkNoYW5nZXMgaW4gdjY6IE5vbmUKQ2hhbmdl
cyBpbiB2NTogTm9uZQpDaGFuZ2VzIGluIHY0OiBOb25lCkNoYW5nZXMgaW4gdjM6IE5vbmUKCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyB8IDE2NSArLS0tLS0t
LS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAg
ICB8ICAgMiArLQogMiBmaWxlcyBjaGFuZ2VkLCA2IGluc2VydGlvbnMoKyksIDE2MSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmlu
ZGV4IGFjZmI5Yjc5MzllMi4uNjE5OTE2ZjYzYzRmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTM2NjIsNiArMTM2NjIsMTAgQEAgc3RhdGlj
IGludCBpbnRlbF9hdG9taWNfY2hlY2soc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAlpZiAocmV0
KQogCQlnb3RvIGZhaWw7CiAKKwlpZiAoX3N0YXRlLT5sZWdhY3lfY3Vyc29yX3VwZGF0ZSkKKwkJ
X3N0YXRlLT5hc3luY191cGRhdGUgPSAhZHJtX2F0b21pY19oZWxwZXJfYXN5bmNfY2hlY2soZGV2
LAorCQkJCQkJCQkgICAgIF9zdGF0ZSk7CisKIAlpbnRlbF9mYmNfY2hvb3NlX2NydGMoZGV2X3By
aXYsIHN0YXRlKTsKIAlyZXQgPSBjYWxjX3dhdGVybWFya19kYXRhKHN0YXRlKTsKIAlpZiAocmV0
KQpAQCAtMTQxNTgsMzQgKzE0MTYyLDYgQEAgc3RhdGljIGludCBpbnRlbF9hdG9taWNfY29tbWl0
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAKIAlkcm1fYXRvbWljX3N0YXRlX2dldCgmc3RhdGUt
PmJhc2UpOwogCi0JLyoKLQkgKiBUaGUgaW50ZWxfbGVnYWN5X2N1cnNvcl91cGRhdGUoKSBmYXN0
IHBhdGggdGFrZXMgY2FyZQotCSAqIG9mIGF2b2lkaW5nIHRoZSB2Ymxhbmsgd2FpdHMgZm9yIHNp
bXBsZSBjdXJzb3IKLQkgKiBtb3ZlbWVudCBhbmQgZmxpcHMuIEZvciBjdXJzb3Igb24vb2ZmIGFu
ZCBzaXplIGNoYW5nZXMsCi0JICogd2Ugd2FudCB0byBwZXJmb3JtIHRoZSB2Ymxhbmsgd2FpdHMg
c28gdGhhdCB3YXRlcm1hcmsKLQkgKiB1cGRhdGVzIGhhcHBlbiBkdXJpbmcgdGhlIGNvcnJlY3Qg
ZnJhbWVzLiBHZW45KyBoYXZlCi0JICogZG91YmxlIGJ1ZmZlcmVkIHdhdGVybWFya3MgYW5kIHNv
IHNob3VsZG4ndCBuZWVkIHRoaXMuCi0JICoKLQkgKiBVbnNldCBzdGF0ZS0+bGVnYWN5X2N1cnNv
cl91cGRhdGUgYmVmb3JlIHRoZSBjYWxsIHRvCi0JICogZHJtX2F0b21pY19oZWxwZXJfc2V0dXBf
Y29tbWl0KCkgYmVjYXVzZSBvdGhlcndpc2UKLQkgKiBkcm1fYXRvbWljX2hlbHBlcl93YWl0X2Zv
cl9mbGlwX2RvbmUoKSBpcyBhIG5vb3AgYW5kCi0JICogd2UgZ2V0IEZJRk8gdW5kZXJydW5zIGJl
Y2F1c2Ugd2UgZGlkbid0IHdhaXQKLQkgKiBmb3IgdmJsYW5rLgotCSAqCi0JICogRklYTUUgZG9p
bmcgd2F0ZXJtYXJrcyBhbmQgZmIgY2xlYW51cCBmcm9tIGEgdmJsYW5rIHdvcmtlcgotCSAqIChh
c3N1bWluZyB3ZSBoYWQgYW55KSB3b3VsZCBzb2x2ZSB0aGVzZSBwcm9ibGVtcy4KLQkgKi8KLQlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDkgJiYgc3RhdGUtPmJhc2UubGVnYWN5X2N1cnNvcl91
cGRhdGUpIHsKLQkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlOwotCQlz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKLQkJaW50IGk7Ci0KLQkJZm9yX2VhY2hfbmV3X2ludGVs
X2NydGNfaW5fc3RhdGUoc3RhdGUsIGNydGMsIG5ld19jcnRjX3N0YXRlLCBpKQotCQkJaWYgKG5l
d19jcnRjX3N0YXRlLT53bS5uZWVkX3Bvc3R2YmxfdXBkYXRlIHx8Ci0JCQkgICAgbmV3X2NydGNf
c3RhdGUtPnVwZGF0ZV93bV9wb3N0KQotCQkJCXN0YXRlLT5iYXNlLmxlZ2FjeV9jdXJzb3JfdXBk
YXRlID0gZmFsc2U7Ci0JfQotCiAJcmV0ID0gaW50ZWxfYXRvbWljX3ByZXBhcmVfY29tbWl0KHN0
YXRlKTsKIAlpZiAocmV0KSB7CiAJCURSTV9ERUJVR19BVE9NSUMoIlByZXBhcmluZyBzdGF0ZSBm
YWlsZWQgd2l0aCAlaVxuIiwgcmV0KTsKQEAgLTE0Njc3LDEzOSArMTQ2NTMsOCBAQCBzdGF0aWMg
Y29uc3Qgc3RydWN0IGRybV9wbGFuZV9mdW5jcyBpOHh4X3BsYW5lX2Z1bmNzID0gewogCS5mb3Jt
YXRfbW9kX3N1cHBvcnRlZCA9IGk4eHhfcGxhbmVfZm9ybWF0X21vZF9zdXBwb3J0ZWQsCiB9Owog
Ci1zdGF0aWMgaW50Ci1pbnRlbF9sZWdhY3lfY3Vyc29yX3VwZGF0ZShzdHJ1Y3QgZHJtX3BsYW5l
ICpwbGFuZSwKLQkJCSAgIHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKLQkJCSAgIHN0cnVjdCBkcm1f
ZnJhbWVidWZmZXIgKmZiLAotCQkJICAgaW50IGNydGNfeCwgaW50IGNydGNfeSwKLQkJCSAgIHVu
c2lnbmVkIGludCBjcnRjX3csIHVuc2lnbmVkIGludCBjcnRjX2gsCi0JCQkgICB1MzIgc3JjX3gs
IHUzMiBzcmNfeSwKLQkJCSAgIHUzMiBzcmNfdywgdTMyIHNyY19oLAotCQkJICAgc3RydWN0IGRy
bV9tb2Rlc2V0X2FjcXVpcmVfY3R4ICpjdHgpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwotCWludCByZXQ7Ci0Jc3RydWN0IGRybV9w
bGFuZV9zdGF0ZSAqb2xkX3BsYW5lX3N0YXRlLCAqbmV3X3BsYW5lX3N0YXRlOwotCXN0cnVjdCBp
bnRlbF9wbGFuZSAqaW50ZWxfcGxhbmUgPSB0b19pbnRlbF9wbGFuZShwbGFuZSk7Ci0Jc3RydWN0
IGRybV9mcmFtZWJ1ZmZlciAqb2xkX2ZiOwotCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlID0KLQkJdG9faW50ZWxfY3J0Y19zdGF0ZShjcnRjLT5zdGF0ZSk7Ci0Jc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlOwotCi0JLyoKLQkgKiBXaGVuIGNydGMgaXMg
aW5hY3RpdmUgb3IgdGhlcmUgaXMgYSBtb2Rlc2V0IHBlbmRpbmcsCi0JICogd2FpdCBmb3IgaXQg
dG8gY29tcGxldGUgaW4gdGhlIHNsb3dwYXRoCi0JICovCi0JaWYgKCFjcnRjX3N0YXRlLT5iYXNl
LmFjdGl2ZSB8fCBuZWVkc19tb2Rlc2V0KGNydGNfc3RhdGUpIHx8Ci0JICAgIGNydGNfc3RhdGUt
PnVwZGF0ZV9waXBlKQotCQlnb3RvIHNsb3c7Ci0KLQlvbGRfcGxhbmVfc3RhdGUgPSBwbGFuZS0+
c3RhdGU7Ci0JLyoKLQkgKiBEb24ndCBkbyBhbiBhc3luYyB1cGRhdGUgaWYgdGhlcmUgaXMgYW4g
b3V0c3RhbmRpbmcgY29tbWl0IG1vZGlmeWluZwotCSAqIHRoZSBwbGFuZS4gIFRoaXMgcHJldmVu
dHMgb3VyIGFzeW5jIHVwZGF0ZSdzIGNoYW5nZXMgZnJvbSBnZXR0aW5nCi0JICogb3ZlcnJpZGRl
biBieSBhIHByZXZpb3VzIHN5bmNocm9ub3VzIHVwZGF0ZSdzIHN0YXRlLgotCSAqLwotCWlmIChv
bGRfcGxhbmVfc3RhdGUtPmNvbW1pdCAmJgotCSAgICAhdHJ5X3dhaXRfZm9yX2NvbXBsZXRpb24o
Jm9sZF9wbGFuZV9zdGF0ZS0+Y29tbWl0LT5od19kb25lKSkKLQkJZ290byBzbG93OwotCi0JLyoK
LQkgKiBJZiBhbnkgcGFyYW1ldGVycyBjaGFuZ2UgdGhhdCBtYXkgYWZmZWN0IHdhdGVybWFya3Ms
Ci0JICogdGFrZSB0aGUgc2xvd3BhdGguIE9ubHkgY2hhbmdpbmcgZmIgb3IgcG9zaXRpb24gc2hv
dWxkIGJlCi0JICogaW4gdGhlIGZhc3RwYXRoLgotCSAqLwotCWlmIChvbGRfcGxhbmVfc3RhdGUt
PmNydGMgIT0gY3J0YyB8fAotCSAgICBvbGRfcGxhbmVfc3RhdGUtPnNyY193ICE9IHNyY193IHx8
Ci0JICAgIG9sZF9wbGFuZV9zdGF0ZS0+c3JjX2ggIT0gc3JjX2ggfHwKLQkgICAgb2xkX3BsYW5l
X3N0YXRlLT5jcnRjX3cgIT0gY3J0Y193IHx8Ci0JICAgIG9sZF9wbGFuZV9zdGF0ZS0+Y3J0Y19o
ICE9IGNydGNfaCB8fAotCSAgICAhb2xkX3BsYW5lX3N0YXRlLT5mYiAhPSAhZmIpCi0JCWdvdG8g
c2xvdzsKLQotCW5ld19wbGFuZV9zdGF0ZSA9IGludGVsX3BsYW5lX2R1cGxpY2F0ZV9zdGF0ZShw
bGFuZSk7Ci0JaWYgKCFuZXdfcGxhbmVfc3RhdGUpCi0JCXJldHVybiAtRU5PTUVNOwotCi0JbmV3
X2NydGNfc3RhdGUgPSB0b19pbnRlbF9jcnRjX3N0YXRlKGludGVsX2NydGNfZHVwbGljYXRlX3N0
YXRlKGNydGMpKTsKLQlpZiAoIW5ld19jcnRjX3N0YXRlKSB7Ci0JCXJldCA9IC1FTk9NRU07Ci0J
CWdvdG8gb3V0X2ZyZWU7Ci0JfQotCi0JZHJtX2F0b21pY19zZXRfZmJfZm9yX3BsYW5lKG5ld19w
bGFuZV9zdGF0ZSwgZmIpOwotCi0JbmV3X3BsYW5lX3N0YXRlLT5zcmNfeCA9IHNyY194OwotCW5l
d19wbGFuZV9zdGF0ZS0+c3JjX3kgPSBzcmNfeTsKLQluZXdfcGxhbmVfc3RhdGUtPnNyY193ID0g
c3JjX3c7Ci0JbmV3X3BsYW5lX3N0YXRlLT5zcmNfaCA9IHNyY19oOwotCW5ld19wbGFuZV9zdGF0
ZS0+Y3J0Y194ID0gY3J0Y194OwotCW5ld19wbGFuZV9zdGF0ZS0+Y3J0Y195ID0gY3J0Y195Owot
CW5ld19wbGFuZV9zdGF0ZS0+Y3J0Y193ID0gY3J0Y193OwotCW5ld19wbGFuZV9zdGF0ZS0+Y3J0
Y19oID0gY3J0Y19oOwotCi0JcmV0ID0gaW50ZWxfcGxhbmVfYXRvbWljX2NoZWNrX3dpdGhfc3Rh
dGUoY3J0Y19zdGF0ZSwgbmV3X2NydGNfc3RhdGUsCi0JCQkJCQkgIHRvX2ludGVsX3BsYW5lX3N0
YXRlKG9sZF9wbGFuZV9zdGF0ZSksCi0JCQkJCQkgIHRvX2ludGVsX3BsYW5lX3N0YXRlKG5ld19w
bGFuZV9zdGF0ZSkpOwotCWlmIChyZXQpCi0JCWdvdG8gb3V0X2ZyZWU7Ci0KLQlyZXQgPSBtdXRl
eF9sb2NrX2ludGVycnVwdGlibGUoJmRldl9wcml2LT5kcm0uc3RydWN0X211dGV4KTsKLQlpZiAo
cmV0KQotCQlnb3RvIG91dF9mcmVlOwotCi0JcmV0ID0gaW50ZWxfcGxhbmVfcGluX2ZiKHRvX2lu
dGVsX3BsYW5lX3N0YXRlKG5ld19wbGFuZV9zdGF0ZSkpOwotCWlmIChyZXQpCi0JCWdvdG8gb3V0
X3VubG9jazsKLQotCWludGVsX2ZiX29ial9mbHVzaChpbnRlbF9mYl9vYmooZmIpLCBPUklHSU5f
RkxJUCk7Ci0KLQlvbGRfZmIgPSBvbGRfcGxhbmVfc3RhdGUtPmZiOwotCWk5MTVfZ2VtX3RyYWNr
X2ZiKGludGVsX2ZiX29iaihvbGRfZmIpLCBpbnRlbF9mYl9vYmooZmIpLAotCQkJICBpbnRlbF9w
bGFuZS0+ZnJvbnRidWZmZXJfYml0KTsKLQotCS8qIFN3YXAgcGxhbmUgc3RhdGUgKi8KLQlwbGFu
ZS0+c3RhdGUgPSBuZXdfcGxhbmVfc3RhdGU7Ci0KLQkvKgotCSAqIFdlIGNhbm5vdCBzd2FwIGNy
dGNfc3RhdGUgYXMgaXQgbWF5IGJlIGluIHVzZSBieSBhbiBhdG9taWMgY29tbWl0IG9yCi0JICog
cGFnZSBmbGlwIHRoYXQncyBydW5uaW5nIHNpbXVsdGFuZW91c2x5LiBJZiB3ZSBzd2FwIGNydGNf
c3RhdGUgYW5kCi0JICogZGVzdHJveSB0aGUgb2xkIHN0YXRlLCB3ZSB3aWxsIGNhdXNlIGEgdXNl
LWFmdGVyLWZyZWUgdGhlcmUuCi0JICoKLQkgKiBPbmx5IHVwZGF0ZSBhY3RpdmVfcGxhbmVzLCB3
aGljaCBpcyBuZWVkZWQgZm9yIG91ciBpbnRlcm5hbAotCSAqIGJvb2trZWVwaW5nLiBFaXRoZXIg
dmFsdWUgd2lsbCBkbyB0aGUgcmlnaHQgdGhpbmcgd2hlbiB1cGRhdGluZwotCSAqIHBsYW5lcyBh
dG9taWNhbGx5LiBJZiB0aGUgY3Vyc29yIHdhcyBwYXJ0IG9mIHRoZSBhdG9taWMgdXBkYXRlIHRo
ZW4KLQkgKiB3ZSB3b3VsZCBoYXZlIHRha2VuIHRoZSBzbG93cGF0aC4KLQkgKi8KLQljcnRjX3N0
YXRlLT5hY3RpdmVfcGxhbmVzID0gbmV3X2NydGNfc3RhdGUtPmFjdGl2ZV9wbGFuZXM7Ci0KLQlp
ZiAocGxhbmUtPnN0YXRlLT52aXNpYmxlKQotCQlpbnRlbF91cGRhdGVfcGxhbmUoaW50ZWxfcGxh
bmUsIGNydGNfc3RhdGUsCi0JCQkJICAgdG9faW50ZWxfcGxhbmVfc3RhdGUocGxhbmUtPnN0YXRl
KSk7Ci0JZWxzZQotCQlpbnRlbF9kaXNhYmxlX3BsYW5lKGludGVsX3BsYW5lLCBjcnRjX3N0YXRl
KTsKLQotCWludGVsX3BsYW5lX3VucGluX2ZiKHRvX2ludGVsX3BsYW5lX3N0YXRlKG9sZF9wbGFu
ZV9zdGF0ZSkpOwotCi1vdXRfdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5z
dHJ1Y3RfbXV0ZXgpOwotb3V0X2ZyZWU6Ci0JaWYgKG5ld19jcnRjX3N0YXRlKQotCQlpbnRlbF9j
cnRjX2Rlc3Ryb3lfc3RhdGUoY3J0YywgJm5ld19jcnRjX3N0YXRlLT5iYXNlKTsKLQlpZiAocmV0
KQotCQlpbnRlbF9wbGFuZV9kZXN0cm95X3N0YXRlKHBsYW5lLCBuZXdfcGxhbmVfc3RhdGUpOwot
CWVsc2UKLQkJaW50ZWxfcGxhbmVfZGVzdHJveV9zdGF0ZShwbGFuZSwgb2xkX3BsYW5lX3N0YXRl
KTsKLQlyZXR1cm4gcmV0OwotCi1zbG93OgotCXJldHVybiBkcm1fYXRvbWljX2hlbHBlcl91cGRh
dGVfcGxhbmUocGxhbmUsIGNydGMsIGZiLAotCQkJCQkgICAgICBjcnRjX3gsIGNydGNfeSwgY3J0
Y193LCBjcnRjX2gsCi0JCQkJCSAgICAgIHNyY194LCBzcmNfeSwgc3JjX3csIHNyY19oLCBjdHgp
OwotfQotCiBzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9wbGFuZV9mdW5jcyBpbnRlbF9jdXJzb3Jf
cGxhbmVfZnVuY3MgPSB7Ci0JLnVwZGF0ZV9wbGFuZSA9IGludGVsX2xlZ2FjeV9jdXJzb3JfdXBk
YXRlLAorCS51cGRhdGVfcGxhbmUgPSBkcm1fYXRvbWljX2hlbHBlcl91cGRhdGVfcGxhbmUsCiAJ
LmRpc2FibGVfcGxhbmUgPSBkcm1fYXRvbWljX2hlbHBlcl9kaXNhYmxlX3BsYW5lLAogCS5kZXN0
cm95ID0gaW50ZWxfcGxhbmVfZGVzdHJveSwKIAkuYXRvbWljX2R1cGxpY2F0ZV9zdGF0ZSA9IGlu
dGVsX3BsYW5lX2R1cGxpY2F0ZV9zdGF0ZSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4IDIy
NDcyZjJiZDMxYi4uZDhmN2JhMGY4ZDg0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAgLTgy
NSw3ICs4MjUsNyBAQCBzdGF0aWMgYm9vbCBpbnRlbF93bV9wbGFuZV92aXNpYmxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCSAqIGNhbiBoYXBwZW4gZmFzdGVy
IHRoYW4gdGhlIHZyZWZyZXNoIHJhdGUsIGFuZCB0aGUgY3VycmVudAogCSAqIHdhdGVybWFyayBj
b2RlIGRvZXNuJ3QgaGFuZGxlIHRoYXQgY29ycmVjdGx5LiBDdXJzb3IgdXBkYXRlcwogCSAqIHdo
aWNoIHNldC9jbGVhciB0aGUgZmIgb3IgY2hhbmdlIHRoZSBjdXJzb3Igc2l6ZSBhcmUgZ29pbmcK
LQkgKiB0byBnZXQgdGhyb3R0bGVkIGJ5IGludGVsX2xlZ2FjeV9jdXJzb3JfdXBkYXRlKCkgdG8g
d29yaworCSAqIHRvIGdldCB0aHJvdHRsZWQgYnkgaW50ZWxfcGxhbmVfYXRvbWljX2FzeW5jX3Vw
ZGF0ZSgpIHRvIHdvcmsKIAkgKiBhcm91bmQgdGhpcyBwcm9ibGVtIHdpdGggdGhlIHdhdGVybWFy
ayBjb2RlLgogCSAqLwogCWlmIChwbGFuZS0+aWQgPT0gUExBTkVfQ1VSU09SKQotLSAKMi4yMi4w
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2
ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
