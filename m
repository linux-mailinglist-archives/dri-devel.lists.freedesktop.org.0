Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6104E1E4A1
	for <lists+dri-devel@lfdr.de>; Wed, 15 May 2019 00:19:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 50C0C8935B;
	Tue, 14 May 2019 22:19:08 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qk1-x749.google.com (mail-qk1-x749.google.com
 [IPv6:2607:f8b0:4864:20::749])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 147DB8935B
 for <dri-devel@lists.freedesktop.org>; Tue, 14 May 2019 22:19:07 +0000 (UTC)
Received: by mail-qk1-x749.google.com with SMTP id o64so625794qka.16
 for <dri-devel@lists.freedesktop.org>; Tue, 14 May 2019 15:19:07 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=oNew2qQwIacvg7YiU8OPdsMST7ZAzTGShnDOi/ul43A=;
 b=nwqLGnomj2gLdg51zH/5srjmJ6WGesUIzqyXHJlsrBTErZBh8MEKNx4al9gXChfUyG
 MJfA0Z4FgwL8SvLFbqTkkbKluvQdNHP2Z3dLHC39YdPzQUHYKTrwlSz2C2ERgTObfuQi
 zPu4E0HoeziO7v2NRO8ZIIF2tH3P8Y5UwGAA9nwUxlZoFt91sS85RmpuPNQmEIhSIcDg
 YN3CXxWvKgUeb7jw9YplEWbWBy4jVPdsqYM7IfsmQG3XjC4GPPhCPLipcvqXgAVzNfb7
 uks3QQiM8siSd8S9nilDyJiK+mACLp3KXF2QjxvroCHyxiWVw8IcCtjB/dXO6PHQ3kTQ
 57xw==
X-Gm-Message-State: APjAAAUgsxfMgDOIkkSCELZgwZz4diKS5I/ZIcw+E1FkbXp7fEiS8pN+
 9G0P/kMDSIsqv7yLJTh0XfXp3YxFWzv99UMmXI7z+w==
X-Google-Smtp-Source: APXvYqxTwpPWQ8wioNUk9CdWKA3zzBHS1G+8z6hwEUoXJQ7/tZpELDdhbGJGPNSjmaiWVdMf5YN5Rwx+e7XeEgn0B9rJzg==
X-Received: by 2002:a37:2e05:: with SMTP id u5mr31509681qkh.124.1557872346143; 
 Tue, 14 May 2019 15:19:06 -0700 (PDT)
Date: Tue, 14 May 2019 15:17:02 -0700
In-Reply-To: <20190514221711.248228-1-brendanhiggins@google.com>
Message-Id: <20190514221711.248228-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190514221711.248228-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.21.0.1020.gf2820cf01a-goog
Subject: [PATCH v4 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=oNew2qQwIacvg7YiU8OPdsMST7ZAzTGShnDOi/ul43A=;
 b=JVQPnf1MsEz0paByI/mnjnbe8rusFYPGJ+ilYVnA3ECpH7UNRnkp6FUgS73VjonbRr
 ReT+PybJJBfA2xRkS0524ryS/7hDoC71s1x84o6d8H1ZCMLgxaabVNgiDSRbDXJ8yErJ
 q+9yOoTJyyGQdBoqzK73SzMzDEhReecSDuQaICV2SM4ZGMp2ScDgSCvPOGGlwyaUFPMZ
 iN/g6Tyez9kTW7R+Kx7SvMdJR/103SAYn5xLYY7iat/xWSrwoMwNrrRJEwjnqQ73MzC2
 8h0F7DTYdfDk1Ecnszo8UKwp7DV3EBbt6V1OKrLzBmtZVbgcvXyZYdKaaWWofKgzEoDy
 MAqQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAxNCArKysrCiBpbmNsdWRlL2t1bml0L3RyeS1j
YXRjaC5oIHwgIDY5ICsrKysrKysrKysrKysrKysrKysKIGt1bml0L01ha2VmaWxlICAgICAgICAg
ICAgfCAgIDMgKy0KIGt1bml0L3Rlc3QuYyAgICAgICAgICAgICAgfCAxMzYgKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrLS0KIGt1bml0L3RyeS1jYXRjaC5jICAgICAgICAgfCAg
OTUgKysrKysrKysrKysrKysrKysrKysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgMzA5IGluc2Vy
dGlvbnMoKyksIDggZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5p
dC90cnktY2F0Y2guaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L3RyeS1jYXRjaC5jCgpkaWZm
IC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3QuaAppbmRl
eCA4NjE4N2JhMDY5YTVkLi5hZmY1NWI1NjEwZTdkIDEwMDY0NAotLS0gYS9pbmNsdWRlL2t1bml0
L3Rlc3QuaAorKysgYi9pbmNsdWRlL2t1bml0L3Rlc3QuaApAQCAtMTIsNiArMTIsNyBAQAogI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgogI2luY2x1ZGUg
PGt1bml0L2t1bml0LXN0cmVhbS5oPgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgogCiBz
dHJ1Y3Qga3VuaXRfcmVzb3VyY2U7CiAKQEAgLTE2NiwxNSArMTY3LDI4IEBAIHN0cnVjdCBrdW5p
dCB7CiAKIAkvKiBwcml2YXRlOiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KIAljb25zdCBjaGFyICpu
YW1lOyAvKiBSZWFkIG9ubHkgYWZ0ZXIgaW5pdGlhbGl6YXRpb24hICovCisJc3RydWN0IGt1bml0
X3RyeV9jYXRjaCB0cnlfY2F0Y2g7CiAJc3BpbmxvY2tfdCBsb2NrOyAvKiBHYXVyZHMgYWxsIG11
dGFibGUgdGVzdCBzdGF0ZS4gKi8KIAlib29sIHN1Y2Nlc3M7IC8qIFByb3RlY3RlZCBieSBsb2Nr
LiAqLworCWJvb2wgZGVhdGhfdGVzdDsgLyogUHJvdGVjdGVkIGJ5IGxvY2suICovCiAJc3RydWN0
IGxpc3RfaGVhZCByZXNvdXJjZXM7IC8qIFByb3RlY3RlZCBieSBsb2NrLiAqLwogfTsKIAorc3Rh
dGljIGlubGluZSB2b2lkIGt1bml0X3NldF9kZWF0aF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCwg
Ym9vbCBkZWF0aF90ZXN0KQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tf
aXJxc2F2ZSgmdGVzdC0+bG9jaywgZmxhZ3MpOworCXRlc3QtPmRlYXRoX3Rlc3QgPSBkZWF0aF90
ZXN0OworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnRlc3QtPmxvY2ssIGZsYWdzKTsKK30KKwog
dm9pZCBrdW5pdF9pbml0X3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBjb25zdCBjaGFyICpuYW1l
KTsKIAogdm9pZCBrdW5pdF9mYWlsKHN0cnVjdCBrdW5pdCAqdGVzdCwgc3RydWN0IGt1bml0X3N0
cmVhbSAqc3RyZWFtKTsKIAordm9pZCBrdW5pdF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRlc3QpOwor
CiBpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSk7CiAKIC8q
KgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5pdC90cnktY2F0Y2guaCBiL2luY2x1ZGUva3VuaXQv
dHJ5LWNhdGNoLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uOGE0
MTRhOWFmMGI2NAotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdHJ5LWNhdGNoLmgK
QEAgLTAsMCArMSw2OSBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8K
Ky8qCisgKiBBbiBBUEkgdG8gYWxsb3cgYSBmdW5jdGlvbiwgdGhhdCBtYXkgZmFpbCwgdG8gYmUg
ZXhlY3V0ZWQsIGFuZCByZWNvdmVyIGluIGEKKyAqIGNvbnRyb2xsZWQgbWFubmVyLgorICoKKyAq
IENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdn
aW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorICovCisKKyNpZm5kZWYgX0tVTklUX1RS
WV9DQVRDSF9ICisjZGVmaW5lIF9LVU5JVF9UUllfQ0FUQ0hfSAorCisjaW5jbHVkZSA8bGludXgv
dHlwZXMuaD4KKwordHlwZWRlZiB2b2lkICgqa3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCkodm9pZCAq
KTsKKworc3RydWN0IGt1bml0OworCisvKgorICogc3RydWN0IGt1bml0X3RyeV9jYXRjaCAtIHBy
b3ZpZGVzIGEgZ2VuZXJpYyB3YXkgdG8gcnVuIGNvZGUgd2hpY2ggbWlnaHQgZmFpbC4KKyAqIEBj
b250ZXh0OiB1c2VkIHRvIHBhc3MgdXNlciBkYXRhIHRvIHRoZSB0cnkgYW5kIGNhdGNoIGZ1bmN0
aW9ucy4KKyAqCisgKiBrdW5pdF90cnlfY2F0Y2ggcHJvdmlkZXMgYSBnZW5lcmljLCBhcmNoaXRl
Y3R1cmUgaW5kZXBlbmRlbnQgd2F5IHRvIGV4ZWN1dGUKKyAqIGFuIGFyYml0cmFyeSBmdW5jdGlv
biBvZiB0eXBlIGt1bml0X3RyeV9jYXRjaF9mdW5jX3Qgd2hpY2ggbWF5IGJhaWwgb3V0IGJ5Cisg
KiBjYWxsaW5nIGt1bml0X3RyeV9jYXRjaF90aHJvdygpLiBJZiBrdW5pdF90cnlfY2F0Y2hfdGhy
b3coKSBpcyBjYWxsZWQsIEB0cnkKKyAqIGlzIHN0b3BwZWQgYXQgdGhlIHNpdGUgb2YgaW52b2Nh
dGlvbiBhbmQgQGNhdGNoIGlzIGNhdGNoIGlzIGNhbGxlZC4KKyAqCisgKiBzdHJ1Y3Qga3VuaXRf
dHJ5X2NhdGNoIHByb3ZpZGVzIGEgZ2VuZXJpYyBpbnRlcmZhY2UgZm9yIHRoZSBmdW5jdGlvbmFs
aXR5CisgKiBuZWVkZWQgdG8gaW1wbGVtZW50IGt1bml0LT5hYm9ydCgpIHdoaWNoIGluIHR1cm4g
aXMgbmVlZGVkIGZvciBpbXBsZW1lbnRpbmcKKyAqIGFzc2VydGlvbnMuIEFzc2VydGlvbnMgYWxs
b3cgc3RhdGluZyBhIHByZWNvbmRpdGlvbiBmb3IgYSB0ZXN0IHNpbXBsaWZ5aW5nCisgKiBob3cg
dGVzdCBjYXNlcyBhcmUgd3JpdHRlbiBhbmQgcHJlc2VudGVkLgorICoKKyAqIEFzc2VydGlvbnMg
YXJlIGxpa2UgZXhwZWN0YXRpb25zLCBleGNlcHQgdGhleSBhYm9ydCAoY2FsbAorICoga3VuaXRf
dHJ5X2NhdGNoX3Rocm93KCkpIHdoZW4gdGhlIHNwZWNpZmllZCBjb25kaXRpb24gaXMgbm90IG1l
dC4gVGhpcyBpcworICogdXNlZnVsIHdoZW4geW91IGxvb2sgYXQgYSB0ZXN0IGNhc2UgYXMgYSBs
b2dpY2FsIHN0YXRlbWVudCBhYm91dCBzb21lIHBpZWNlCisgKiBvZiBjb2RlLCB3aGVyZSBhc3Nl
cnRpb25zIGFyZSB0aGUgcHJlbWlzZXMgZm9yIHRoZSB0ZXN0IGNhc2UsIGFuZCB0aGUKKyAqIGNv
bmNsdXNpb24gaXMgYSBzZXQgb2YgcHJlZGljYXRlcywgcmF0aGVyIGV4cGVjdGF0aW9ucywgdGhh
dCBtdXN0IGFsbCBiZQorICogdHJ1ZS4gSWYgeW91ciBwcmVtaXNlcyBhcmUgdmlvbGF0ZWQsIGl0
IGRvZXMgbm90IG1ha2VzIHNlbnNlIHRvIGNvbnRpbnVlLgorICovCitzdHJ1Y3Qga3VuaXRfdHJ5
X2NhdGNoIHsKKwkvKiBwcml2YXRlOiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KKwlzdHJ1Y3Qga3Vu
aXQgKnRlc3Q7CisJc3RydWN0IGNvbXBsZXRpb24gKnRyeV9jb21wbGV0aW9uOworCWludCB0cnlf
cmVzdWx0OworCWt1bml0X3RyeV9jYXRjaF9mdW5jX3QgdHJ5OworCWt1bml0X3RyeV9jYXRjaF9m
dW5jX3QgY2F0Y2g7CisJdm9pZCAqY29udGV4dDsKK307CisKK3ZvaWQga3VuaXRfdHJ5X2NhdGNo
X2luaXQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoLAorCQkJICBzdHJ1Y3Qga3Vu
aXQgKnRlc3QsCisJCQkgIGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgdHJ5LAorCQkJICBrdW5pdF90
cnlfY2F0Y2hfZnVuY190IGNhdGNoKTsKKwordm9pZCBrdW5pdF90cnlfY2F0Y2hfcnVuKHN0cnVj
dCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwgdm9pZCAqY29udGV4dCk7CisKK3ZvaWQgX19u
b3JldHVybiBrdW5pdF90cnlfY2F0Y2hfdGhyb3coc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5
X2NhdGNoKTsKKworc3RhdGljIGlubGluZSBpbnQga3VuaXRfdHJ5X2NhdGNoX2dldF9yZXN1bHQo
c3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKQoreworCXJldHVybiB0cnlfY2F0Y2gt
PnRyeV9yZXN1bHQ7Cit9CisKKy8qCisgKiBFeHBvc2VkIGZvciB0ZXN0aW5nIG9ubHkuCisgKi8K
K3ZvaWQga3VuaXRfZ2VuZXJpY190cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNo
ICp0cnlfY2F0Y2gpOworCisjZW5kaWYgLyogX0tVTklUX1RSWV9DQVRDSF9IICovCmRpZmYgLS1n
aXQgYS9rdW5pdC9NYWtlZmlsZSBiL2t1bml0L01ha2VmaWxlCmluZGV4IDYwYTllYTZjYjQ2OTcu
LjFmNzY4MGNmYTExYWQgMTAwNjQ0Ci0tLSBhL2t1bml0L01ha2VmaWxlCisrKyBiL2t1bml0L01h
a2VmaWxlCkBAIC0xLDYgKzEsNyBAQAogb2JqLSQoQ09ORklHX0tVTklUKSArPQkJCXRlc3QubyBc
CiAJCQkJCXN0cmluZy1zdHJlYW0ubyBcCi0JCQkJCWt1bml0LXN0cmVhbS5vCisJCQkJCWt1bml0
LXN0cmVhbS5vIFwKKwkJCQkJdHJ5LWNhdGNoLm8KIAogb2JqLSQoQ09ORklHX0tVTklUX1RFU1Qp
ICs9CQlzdHJpbmctc3RyZWFtLXRlc3QubwogCmRpZmYgLS1naXQgYS9rdW5pdC90ZXN0LmMgYi9r
dW5pdC90ZXN0LmMKaW5kZXggZTA3MjdhZmI1ZDhhOS4uMzRjZWNjNWM4MDVlOCAxMDA2NDQKLS0t
IGEva3VuaXQvdGVzdC5jCisrKyBiL2t1bml0L3Rlc3QuYwpAQCAtNiw5ICs2LDkgQEAKICAqIEF1
dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgogICovCiAK
LSNpbmNsdWRlIDxsaW51eC9zY2hlZC5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL2RlYnVnLmg+
CiAjaW5jbHVkZSA8a3VuaXQvdGVzdC5oPgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgog
CiBzdGF0aWMgYm9vbCBrdW5pdF9nZXRfc3VjY2VzcyhzdHJ1Y3Qga3VuaXQgKnRlc3QpCiB7CkBA
IC0zMSw2ICszMSwxOCBAQCBzdGF0aWMgdm9pZCBrdW5pdF9zZXRfc3VjY2VzcyhzdHJ1Y3Qga3Vu
aXQgKnRlc3QsIGJvb2wgc3VjY2VzcykKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0ZXN0LT5s
b2NrLCBmbGFncyk7CiB9CiAKK3N0YXRpYyBib29sIGt1bml0X2dldF9kZWF0aF90ZXN0KHN0cnVj
dCBrdW5pdCAqdGVzdCkKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWJvb2wgZGVhdGhfdGVz
dDsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ0ZXN0LT5sb2NrLCBmbGFncyk7CisJZGVhdGhfdGVz
dCA9IHRlc3QtPmRlYXRoX3Rlc3Q7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdGVzdC0+bG9j
aywgZmxhZ3MpOworCisJcmV0dXJuIGRlYXRoX3Rlc3Q7Cit9CisKIHN0YXRpYyBpbnQga3VuaXRf
dnByaW50a19lbWl0KGludCBsZXZlbCwgY29uc3QgY2hhciAqZm10LCB2YV9saXN0IGFyZ3MpCiB7
CiAJcmV0dXJuIHZwcmludGtfZW1pdCgwLCBsZXZlbCwgTlVMTCwgMCwgZm10LCBhcmdzKTsKQEAg
LTE0NSw2ICsxNTcsMjEgQEAgdm9pZCBrdW5pdF9mYWlsKHN0cnVjdCBrdW5pdCAqdGVzdCwgc3Ry
dWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtKQogCWt1bml0X3N0cmVhbV9jb21taXQoc3RyZWFtKTsK
IH0KIAordm9pZCBfX25vcmV0dXJuIGt1bml0X2Fib3J0KHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sK
KwlrdW5pdF9zZXRfZGVhdGhfdGVzdCh0ZXN0LCB0cnVlKTsKKworCWt1bml0X3RyeV9jYXRjaF90
aHJvdygmdGVzdC0+dHJ5X2NhdGNoKTsKKworCS8qCisJICogVGhyb3cgY291bGQgbm90IGFib3J0
IGZyb20gdGVzdC4KKwkgKgorCSAqIFhYWDogd2Ugc2hvdWxkIG5ldmVyIHJlYWNoIHRoaXMgbGlu
ZSEgQXMga3VuaXRfdHJ5X2NhdGNoX3Rocm93IGlzCisJICogbWFya2VkIF9fbm9yZXR1cm4uCisJ
ICovCisJV0FSTl9PTkNFKHRydWUsICJUaHJvdyBjb3VsZCBub3QgYWJvcnQgZnJvbSB0ZXN0IVxu
Iik7Cit9CisKIHZvaWQga3VuaXRfaW5pdF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCwgY29uc3Qg
Y2hhciAqbmFtZSkKIHsKIAlzcGluX2xvY2tfaW5pdCgmdGVzdC0+bG9jayk7CkBAIC0xOTMsMTgg
KzIyMCwxMTMgQEAgc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2VfY2xlYW51cChzdHJ1Y3Qga3Vu
aXQgKnRlc3QsCiB9CiAKIC8qCi0gKiBQZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEgdGVzdCBj
YXNlLgorICogSGFuZGxlcyBhbiB1bmV4cGVjdGVkIGNyYXNoIGluIGEgdGVzdCBjYXNlLgorICov
CitzdGF0aWMgdm9pZCBrdW5pdF9oYW5kbGVfdGVzdF9jcmFzaChzdHJ1Y3Qga3VuaXQgKnRlc3Qs
CisJCQkJICAgc3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlLAorCQkJCSAgIHN0cnVjdCBrdW5p
dF9jYXNlICp0ZXN0X2Nhc2UpCit7CisJa3VuaXRfZXJyKHRlc3QsICJrdW5pdCB0ZXN0IGNhc2Ug
Y3Jhc2hlZCEiKTsKKwkvKgorCSAqIFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6IFRo
aXMgcHJpbnRzIHRoZSBzdGFjayB0cmFjZSB1cAorCSAqIHRocm91Z2ggdGhpcyBmcmFtZSwgbm90
IHVwIHRvIHRoZSBmcmFtZSB0aGF0IGNhdXNlZCB0aGUgY3Jhc2guCisJICovCisJc2hvd19zdGFj
ayhOVUxMLCBOVUxMKTsKKworCWt1bml0X2Nhc2VfaW50ZXJuYWxfY2xlYW51cCh0ZXN0KTsKK30K
Kworc3RydWN0IGt1bml0X3RyeV9jYXRjaF9jb250ZXh0IHsKKwlzdHJ1Y3Qga3VuaXQgKnRlc3Q7
CisJc3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0
X2Nhc2U7Cit9OworCitzdGF0aWMgdm9pZCBrdW5pdF90cnlfcnVuX2Nhc2Uodm9pZCAqZGF0YSkK
K3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgKmN0eCA9IGRhdGE7CisJc3RydWN0
IGt1bml0ICp0ZXN0ID0gY3R4LT50ZXN0OworCXN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSA9
IGN0eC0+bW9kdWxlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UgPSBjdHgtPnRlc3Rf
Y2FzZTsKKworCS8qCisJICoga3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwgbWF5IGVuY291bnRlciBh
IGZhdGFsIGVycm9yOyBpZiBpdCBkb2VzLAorCSAqIGFib3J0IHdpbGwgYmUgY2FsbGVkLCB0aGlz
IHRocmVhZCB3aWxsIGV4aXQsIGFuZCBmaW5hbGx5IHRoZSBwYXJlbnQKKwkgKiB0aHJlYWQgd2ls
bCByZXN1bWUgY29udHJvbCBhbmQgaGFuZGxlIGFueSBuZWNlc3NhcnkgY2xlYW4gdXAuCisJICov
CisJa3VuaXRfcnVuX2Nhc2VfaW50ZXJuYWwodGVzdCwgbW9kdWxlLCB0ZXN0X2Nhc2UpOworCS8q
IFRoaXMgbGluZSBtYXkgbmV2ZXIgYmUgcmVhY2hlZC4gKi8KKwlrdW5pdF9ydW5fY2FzZV9jbGVh
bnVwKHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfY2F0
Y2hfcnVuX2Nhc2Uodm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRl
eHQgKmN0eCA9IGRhdGE7CisJc3RydWN0IGt1bml0ICp0ZXN0ID0gY3R4LT50ZXN0OworCXN0cnVj
dCBrdW5pdF9tb2R1bGUgKm1vZHVsZSA9IGN0eC0+bW9kdWxlOworCXN0cnVjdCBrdW5pdF9jYXNl
ICp0ZXN0X2Nhc2UgPSBjdHgtPnRlc3RfY2FzZTsKKwlpbnQgdHJ5X2V4aXRfY29kZSA9IGt1bml0
X3RyeV9jYXRjaF9nZXRfcmVzdWx0KCZ0ZXN0LT50cnlfY2F0Y2gpOworCisJaWYgKHRyeV9leGl0
X2NvZGUpIHsKKwkJa3VuaXRfc2V0X3N1Y2Nlc3ModGVzdCwgZmFsc2UpOworCQkvKgorCQkgKiBU
ZXN0IGNhc2UgY291bGQgbm90IGZpbmlzaCwgd2UgaGF2ZSBubyBpZGVhIHdoYXQgc3RhdGUgaXQg
aXMKKwkJICogaW4sIHNvIGRvbid0IGRvIGNsZWFuIHVwLgorCQkgKi8KKwkJaWYgKHRyeV9leGl0
X2NvZGUgPT0gLUVUSU1FRE9VVCkKKwkJCWt1bml0X2Vycih0ZXN0LCAidGVzdCBjYXNlIHRpbWVk
IG91dFxuIik7CisJCS8qCisJCSAqIFVua25vd24gaW50ZXJuYWwgZXJyb3Igb2NjdXJyZWQgcHJl
dmVudGluZyB0ZXN0IGNhc2UgZnJvbQorCQkgKiBydW5uaW5nLCBzbyB0aGVyZSBpcyBub3RoaW5n
IHRvIGNsZWFuIHVwLgorCQkgKi8KKwkJZWxzZQorCQkJa3VuaXRfZXJyKHRlc3QsICJpbnRlcm5h
bCBlcnJvciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRlc3QgY2FzZSBmcm9tIHJ1bm5pbmc6ICVkXG4i
LAorCQkJCSAgdHJ5X2V4aXRfY29kZSk7CisJCXJldHVybjsKKwl9CisKKwlpZiAoa3VuaXRfZ2V0
X2RlYXRoX3Rlc3QodGVzdCkpIHsKKwkJLyoKKwkJICogRVhQRUNURUQgREVBVEg6IGt1bml0X3J1
bl9jYXNlX2ludGVybmFsIGVuY291bnRlcmVkCisJCSAqIGFudGljaXBhdGVkIGZhdGFsIGVycm9y
LiBFdmVyeXRoaW5nIHNob3VsZCBiZSBpbiBhIHNhZmUKKwkJICogc3RhdGUuCisJCSAqLworCQlr
dW5pdF9ydW5fY2FzZV9jbGVhbnVwKHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKKwl9IGVsc2Ug
eworCQkvKgorCQkgKiBVTkVYUEVDVEVEIERFQVRIOiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCBl
bmNvdW50ZXJlZCBhbgorCQkgKiB1bmFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBXZSBoYXZlIG5v
IGlkZWEgd2hhdCB0aGUgc3RhdGUgb2YKKwkJICogdGhlIHRlc3QgY2FzZSBpcyBpbi4KKwkJICov
CisJCWt1bml0X2hhbmRsZV90ZXN0X2NyYXNoKHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKKwkJ
a3VuaXRfc2V0X3N1Y2Nlc3ModGVzdCwgZmFsc2UpOworCX0KK30KKworLyoKKyAqIFBlcmZvcm1z
IGFsbCBsb2dpYyB0byBydW4gYSB0ZXN0IGNhc2UuIEl0IGFsc28gY2F0Y2hlcyBtb3N0IGVycm9y
cyB0aGF0CisgKiBvY2N1cnMgaW4gYSB0ZXN0IGNhc2UgYW5kIHJlcG9ydHMgdGhlbSBhcyBmYWls
dXJlcy4KICAqLwotc3RhdGljIHZvaWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X21vZHVs
ZSAqbW9kdWxlLAotCQkJICAgc3RydWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSkKK3N0YXRpYyB2
b2lkIGt1bml0X3J1bl9jYXNlX2NhdGNoX2Vycm9ycyhzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1
bGUsCisJCQkJCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCiB7CisJc3RydWN0IGt1bml0
X3RyeV9jYXRjaF9jb250ZXh0IGNvbnRleHQ7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5
X2NhdGNoOwogCXN0cnVjdCBrdW5pdCB0ZXN0OwogCiAJa3VuaXRfaW5pdF90ZXN0KCZ0ZXN0LCB0
ZXN0X2Nhc2UtPm5hbWUpOworCXRyeV9jYXRjaCA9ICZ0ZXN0LnRyeV9jYXRjaDsKIAlrdW5pdF9z
ZXRfc3VjY2VzcygmdGVzdCwgdHJ1ZSk7CisJa3VuaXRfc2V0X2RlYXRoX3Rlc3QoJnRlc3QsIGZh
bHNlKTsKIAotCWt1bml0X3J1bl9jYXNlX2ludGVybmFsKCZ0ZXN0LCBtb2R1bGUsIHRlc3RfY2Fz
ZSk7Ci0Ja3VuaXRfcnVuX2Nhc2VfY2xlYW51cCgmdGVzdCwgbW9kdWxlLCB0ZXN0X2Nhc2UpOwor
CWt1bml0X3RyeV9jYXRjaF9pbml0KHRyeV9jYXRjaCwKKwkJCSAgICAgJnRlc3QsCisJCQkgICAg
IGt1bml0X3RyeV9ydW5fY2FzZSwKKwkJCSAgICAga3VuaXRfY2F0Y2hfcnVuX2Nhc2UpOworCWNv
bnRleHQudGVzdCA9ICZ0ZXN0OworCWNvbnRleHQubW9kdWxlID0gbW9kdWxlOworCWNvbnRleHQu
dGVzdF9jYXNlID0gdGVzdF9jYXNlOworCWt1bml0X3RyeV9jYXRjaF9ydW4odHJ5X2NhdGNoLCAm
Y29udGV4dCk7CiAKIAl0ZXN0X2Nhc2UtPnN1Y2Nlc3MgPSBrdW5pdF9nZXRfc3VjY2VzcygmdGVz
dCk7CiB9CkBAIC0yMTcsNyArMzM5LDcgQEAgaW50IGt1bml0X3J1bl90ZXN0cyhzdHJ1Y3Qga3Vu
aXRfbW9kdWxlICptb2R1bGUpCiAJa3VuaXRfcHJpbnRfc3VidGVzdF9zdGFydChtb2R1bGUpOwog
CiAJZm9yICh0ZXN0X2Nhc2UgPSBtb2R1bGUtPnRlc3RfY2FzZXM7IHRlc3RfY2FzZS0+cnVuX2Nh
c2U7IHRlc3RfY2FzZSsrKSB7Ci0JCWt1bml0X3J1bl9jYXNlKG1vZHVsZSwgdGVzdF9jYXNlKTsK
KwkJa3VuaXRfcnVuX2Nhc2VfY2F0Y2hfZXJyb3JzKG1vZHVsZSwgdGVzdF9jYXNlKTsKIAkJa3Vu
aXRfcHJpbnRfdGVzdF9jYXNlX29rX25vdF9vayh0ZXN0X2Nhc2UsIHRlc3RfY2FzZV9jb3VudCsr
KTsKIAl9CiAKZGlmZiAtLWdpdCBhL2t1bml0L3RyeS1jYXRjaC5jIGIva3VuaXQvdHJ5LWNhdGNo
LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uZGU1ODBmMDc0Mzg3
YgotLS0gL2Rldi9udWxsCisrKyBiL2t1bml0L3RyeS1jYXRjaC5jCkBAIC0wLDAgKzEsOTUgQEAK
Ky8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICogQW4gQVBJIHRvIGFs
bG93IGEgZnVuY3Rpb24sIHRoYXQgbWF5IGZhaWwsIHRvIGJlIGV4ZWN1dGVkLCBhbmQgcmVjb3Zl
ciBpbiBhCisgKiBjb250cm9sbGVkIG1hbm5lci4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTks
IEdvb2dsZSBMTEMuCisgKiBBdXRob3I6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNA
Z29vZ2xlLmNvbT4KKyAqLworCisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CisjaW5jbHVk
ZSA8a3VuaXQvdGVzdC5oPgorI2luY2x1ZGUgPGxpbnV4L2NvbXBsZXRpb24uaD4KKyNpbmNsdWRl
IDxsaW51eC9rdGhyZWFkLmg+CisKK3ZvaWQgX19ub3JldHVybiBrdW5pdF90cnlfY2F0Y2hfdGhy
b3coc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKQoreworCXRyeV9jYXRjaC0+dHJ5
X3Jlc3VsdCA9IC1FRkFVTFQ7CisJY29tcGxldGVfYW5kX2V4aXQodHJ5X2NhdGNoLT50cnlfY29t
cGxldGlvbiwgLUVGQVVMVCk7Cit9CisKK3N0YXRpYyBpbnQga3VuaXRfZ2VuZXJpY19ydW5fdGhy
ZWFkZm5fYWRhcHRlcih2b2lkICpkYXRhKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRy
eV9jYXRjaCA9IGRhdGE7CisKKwl0cnlfY2F0Y2gtPnRyeSh0cnlfY2F0Y2gtPmNvbnRleHQpOwor
CisJY29tcGxldGVfYW5kX2V4aXQodHJ5X2NhdGNoLT50cnlfY29tcGxldGlvbiwgMCk7Cit9CisK
K3ZvaWQga3VuaXRfdHJ5X2NhdGNoX3J1bihzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0
Y2gsIHZvaWQgKmNvbnRleHQpCit7CisJREVDTEFSRV9DT01QTEVUSU9OX09OU1RBQ0sodHJ5X2Nv
bXBsZXRpb24pOworCXN0cnVjdCBrdW5pdCAqdGVzdCA9IHRyeV9jYXRjaC0+dGVzdDsKKwlzdHJ1
Y3QgdGFza19zdHJ1Y3QgKnRhc2tfc3RydWN0OworCWludCBleGl0X2NvZGUsIHN0YXR1czsKKwor
CXRyeV9jYXRjaC0+Y29udGV4dCA9IGNvbnRleHQ7CisJdHJ5X2NhdGNoLT50cnlfY29tcGxldGlv
biA9ICZ0cnlfY29tcGxldGlvbjsKKwl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAwOworCXRhc2tf
c3RydWN0ID0ga3RocmVhZF9ydW4oa3VuaXRfZ2VuZXJpY19ydW5fdGhyZWFkZm5fYWRhcHRlciwK
KwkJCQkgIHRyeV9jYXRjaCwKKwkJCQkgICJrdW5pdF90cnlfY2F0Y2hfdGhyZWFkIik7CisJaWYg
KElTX0VSUih0YXNrX3N0cnVjdCkpIHsKKwkJdHJ5X2NhdGNoLT5jYXRjaCh0cnlfY2F0Y2gtPmNv
bnRleHQpOworCQlyZXR1cm47CisJfQorCisJLyoKKwkgKiBUT0RPKGJyZW5kYW5oaWdnaW5zQGdv
b2dsZS5jb20pOiBXZSBzaG91bGQgcHJvYmFibHkgaGF2ZSBzb21lIHR5cGUgb2YKKwkgKiB2YXJp
YWJsZSB0aW1lb3V0IGhlcmUuIFRoZSBvbmx5IHF1ZXN0aW9uIGlzIHdoYXQgdGhhdCB0aW1lb3V0
IHZhbHVlCisJICogc2hvdWxkIGJlLgorCSAqCisJICogVGhlIGludGVudGlvbiBoYXMgYWx3YXlz
IGJlZW4sIGF0IHNvbWUgcG9pbnQsIHRvIGJlIGFibGUgdG8gbGFiZWwKKwkgKiB0ZXN0cyB3aXRo
IHNvbWUgdHlwZSBvZiBzaXplIGJ1Y2tldCAodW5pdC9zbWFsbCwgaW50ZWdyYXRpb24vbWVkaXVt
LAorCSAqIGxhcmdlL3N5c3RlbS9lbmQtdG8tZW5kLCBldGMpLCB3aGVyZSBlYWNoIHNpemUgYnVj
a2V0IHdvdWxkIGdldCBhCisJICogZGVmYXVsdCB0aW1lb3V0IHZhbHVlIGtpbmQgb2YgbGlrZSB3
aGF0IEJhemVsIGRvZXM6CisJICogaHR0cHM6Ly9kb2NzLmJhemVsLmJ1aWxkL3ZlcnNpb25zL21h
c3Rlci9iZS9jb21tb24tZGVmaW5pdGlvbnMuaHRtbCN0ZXN0LnNpemUKKwkgKiBUaGVyZSBpcyBz
dGlsbCBzb21lIGRlYmF0ZSB0byBiZSBoYWQgb24gZXhhY3RseSBob3cgd2UgZG8gdGhpcy4gKEZv
cgorCSAqIG9uZSwgd2UgcHJvYmFibHkgd2FudCB0byBoYXZlIHNvbWUgc29ydCBvZiB0ZXN0IHJ1
bm5lciBsZXZlbAorCSAqIHRpbWVvdXQuKQorCSAqCisJICogRm9yIG1vcmUgYmFja2dyb3VuZCBv
biB0aGlzIHRvcGljLCBzZWU6CisJICogaHR0cHM6Ly9taWtlLWJsYW5kLmNvbS8yMDExLzExLzAx
L3NtYWxsLW1lZGl1bS1sYXJnZS5odG1sCisJICovCisJc3RhdHVzID0gd2FpdF9mb3JfY29tcGxl
dGlvbl90aW1lb3V0KCZ0cnlfY29tcGxldGlvbiwKKwkJCQkJICAgICAzMDAgKiBNU0VDX1BFUl9T
RUMpOyAvKiA1IG1pbiAqLworCWlmIChzdGF0dXMgPCAwKSB7CisJCWt1bml0X2Vycih0ZXN0LCAi
dHJ5IHRpbWVkIG91dFxuIik7CisJCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IC1FVElNRURPVVQ7
CisJfQorCisJZXhpdF9jb2RlID0gdHJ5X2NhdGNoLT50cnlfcmVzdWx0OworCisJaWYgKCFleGl0
X2NvZGUpCisJCXJldHVybjsKKworCWlmIChleGl0X2NvZGUgPT0gLUVGQVVMVCkKKwkJdHJ5X2Nh
dGNoLT50cnlfcmVzdWx0ID0gMDsKKwllbHNlIGlmIChleGl0X2NvZGUgPT0gLUVJTlRSKQorCQlr
dW5pdF9lcnIodGVzdCwgIndha2VfdXBfcHJvY2VzcygpIHdhcyBuZXZlciBjYWxsZWRcbiIpOwor
CWVsc2UgaWYgKGV4aXRfY29kZSkKKwkJa3VuaXRfZXJyKHRlc3QsICJVbmtub3duIGVycm9yOiAl
ZFxuIiwgZXhpdF9jb2RlKTsKKworCXRyeV9jYXRjaC0+Y2F0Y2godHJ5X2NhdGNoLT5jb250ZXh0
KTsKK30KKwordm9pZCBrdW5pdF90cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNo
ICp0cnlfY2F0Y2gsCisJCQkgIHN0cnVjdCBrdW5pdCAqdGVzdCwKKwkJCSAga3VuaXRfdHJ5X2Nh
dGNoX2Z1bmNfdCB0cnksCisJCQkgIGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgY2F0Y2gpCit7CisJ
dHJ5X2NhdGNoLT50ZXN0ID0gdGVzdDsKKwl0cnlfY2F0Y2gtPnRyeSA9IHRyeTsKKwl0cnlfY2F0
Y2gtPmNhdGNoID0gY2F0Y2g7Cit9Ci0tIAoyLjIxLjAuMTAyMC5nZjI4MjBjZjAxYS1nb29nCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwg
bWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
