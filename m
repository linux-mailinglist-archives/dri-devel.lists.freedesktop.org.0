Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CCAF396D13
	for <lists+dri-devel@lfdr.de>; Wed, 21 Aug 2019 01:21:08 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5D2396E8D4;
	Tue, 20 Aug 2019 23:21:06 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qk1-x749.google.com (mail-qk1-x749.google.com
 [IPv6:2607:f8b0:4864:20::749])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8F95C6E8D4
 for <dri-devel@lists.freedesktop.org>; Tue, 20 Aug 2019 23:21:05 +0000 (UTC)
Received: by mail-qk1-x749.google.com with SMTP id k5so204527qke.15
 for <dri-devel@lists.freedesktop.org>; Tue, 20 Aug 2019 16:21:05 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=c9HdQNUc/QzKY3rRahJT8eukla0s2Ua8md5qT18TEw8=;
 b=LkndURFaQOGwGNXBu4X5NDWrSdi93hFV79LD01g2INxAgTpERhGK3TLSIwjDuuPI2y
 TEmCJVDz2Ia2dRx5XbpTpo9lY2B22lneQ4TLQMZ/Tq5QGpisC5YibAARSIQ+tQzRDxs8
 sxWeeLSHiQq+UBQcXgiXkUQx/zEqNziovz4VqYqRjMb/5rf2NGl9sN9va1eLQzkYMQqt
 pRyNtdiKT+tRg2oHTunJcJ8m9Ga3uok8O1vR4Nt/TDeET3xsWciaAhaTqhZKx2D1LNIA
 8Lv1AuvsnCXOwVe8QpywNkic7IfhNp329U7wLFc1mUGluDDxXK7mu4poq5IqeURiTs1S
 37gg==
X-Gm-Message-State: APjAAAWmjNH7hZrhQJ67+CODsQraDb5lizsfQBntySEIUYnQJnhSHvfB
 az9Y2GS2zx2Yy8IMr/S1Vy5RH98v9psOU7aR2bi9rw==
X-Google-Smtp-Source: APXvYqzBHxIcBEiyT+HofRZcI7e0MuYL/laRg9A6ztqwB5ks+hQZSzrybTPqFvglN0Gm3Gu1AG5srI/36+a+gCb7lM7L+w==
X-Received: by 2002:ac8:2652:: with SMTP id v18mr29344021qtv.40.1566343264275; 
 Tue, 20 Aug 2019 16:21:04 -0700 (PDT)
Date: Tue, 20 Aug 2019 16:20:32 -0700
In-Reply-To: <20190820232046.50175-1-brendanhiggins@google.com>
Message-Id: <20190820232046.50175-5-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190820232046.50175-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.rc1.153.gdeed80330f-goog
Subject: [PATCH v14 04/18] kunit: test: add assertion printing library
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=c9HdQNUc/QzKY3rRahJT8eukla0s2Ua8md5qT18TEw8=;
 b=aN3R/qnXc/0pj36/saeVCbeAUbnDIx2m8Qy0DeWUUduruJXH6TSk0RnqY2nWBJ1cSL
 QIybCG4vjwr8diZlITiBdxeUeiYIdiz6lbVyk55eKAoD19tRUoEAGc/2CdjI9nzFB3Uo
 Pius5KJuotTYxbiV+vVaN3f9IQay412dPe24fhQMjEIHi351/xmBpyCuKKv+c91hBhVk
 X/YwWCpHP4R8OivMPR4Z7XN20P7mlkdM+TVF48pDj3YcPGHnLGkb3ywYSZGdkqkrrIlt
 1VjqAUPM5NEp+W4aNO8HV8HBLRlbptyNtM7Da9gnOq0SN6QlrDCPFDJiW8zeVIGAlkQQ
 u8tg==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIGBzdHJ1Y3Qga3VuaXRfYXNzZXJ0YCBhbmQgZnJpZW5kcyB3aGljaCBwcm92aWRlIGEgc3Ry
dWN0dXJlZCB3YXkgdG8KY2FwdHVyZSBkYXRhIGZyb20gYW4gZXhwZWN0YXRpb24gb3IgYW4gYXNz
ZXJ0aW9uIChpbnRyb2R1Y2VkIGxhdGVyIGluCnRoZSBzZXJpZXMpIHNvIHRoYXQgaXQgbWF5IGJl
IHByaW50ZWQgb3V0IGluIHRoZSBldmVudCBvZiBhIGZhaWx1cmUuCgpTaWduZWQtb2ZmLWJ5OiBC
cmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBT
dGVwaGVuIEJveWQgPHNib3lkQGtlcm5lbC5vcmc+Ci0tLQogaW5jbHVkZS9rdW5pdC9hc3NlcnQu
aCB8IDM1NiArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwoga3VuaXQv
TWFrZWZpbGUgICAgICAgICB8ICAgMyArLQoga3VuaXQvYXNzZXJ0LmMgICAgICAgICB8IDE0MSAr
KysrKysrKysrKysrKysrCiAzIGZpbGVzIGNoYW5nZWQsIDQ5OSBpbnNlcnRpb25zKCspLCAxIGRl
bGV0aW9uKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5pdC9hc3NlcnQuaAogY3Jl
YXRlIG1vZGUgMTAwNjQ0IGt1bml0L2Fzc2VydC5jCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5p
dC9hc3NlcnQuaCBiL2luY2x1ZGUva3VuaXQvYXNzZXJ0LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwMDAwMC4uZGI2YTBmY2EwOWI0OQotLS0gL2Rldi9udWxsCisrKyBiL2lu
Y2x1ZGUva3VuaXQvYXNzZXJ0LmgKQEAgLTAsMCArMSwzNTYgQEAKKy8qIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBHUEwtMi4wICovCisvKgorICogQXNzZXJ0aW9uIGFuZCBleHBlY3RhdGlvbiBz
ZXJpYWxpemF0aW9uIEFQSS4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBMTEMu
CisgKiBBdXRob3I6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4K
KyAqLworCisjaWZuZGVmIF9LVU5JVF9BU1NFUlRfSAorI2RlZmluZSBfS1VOSVRfQVNTRVJUX0gK
KworI2luY2x1ZGUgPGt1bml0L3N0cmluZy1zdHJlYW0uaD4KKyNpbmNsdWRlIDxsaW51eC9lcnIu
aD4KKworc3RydWN0IGt1bml0OworCisvKioKKyAqIGVudW0ga3VuaXRfYXNzZXJ0X3R5cGUgLSBU
eXBlIG9mIGV4cGVjdGF0aW9uL2Fzc2VydGlvbi4KKyAqIEBLVU5JVF9BU1NFUlRJT046IFVzZWQg
dG8gZGVub3RlIHRoYXQgYSBrdW5pdF9hc3NlcnQgcmVwcmVzZW50cyBhbiBhc3NlcnRpb24uCisg
KiBAS1VOSVRfRVhQRUNUQVRJT046IERlbm90ZXMgdGhhdCBhIGt1bml0X2Fzc2VydCByZXByZXNl
bnRzIGFuIGV4cGVjdGF0aW9uLgorICoKKyAqIFVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBhICZz
dHJ1Y3Qga3VuaXRfYXNzZXJ0IHRvIGRlbm90ZSB3aGV0aGVyIGl0CisgKiByZXByZXNlbnRzIGFu
IGV4cGVjdGF0aW9uIG9yIGFuIGFzc2VydGlvbi4KKyAqLworZW51bSBrdW5pdF9hc3NlcnRfdHlw
ZSB7CisJS1VOSVRfQVNTRVJUSU9OLAorCUtVTklUX0VYUEVDVEFUSU9OLAorfTsKKworLyoqCisg
KiBzdHJ1Y3Qga3VuaXRfYXNzZXJ0IC0gRGF0YSBmb3IgcHJpbnRpbmcgYSBmYWlsZWQgYXNzZXJ0
aW9uIG9yIGV4cGVjdGF0aW9uLgorICogQHRlc3Q6IHRoZSB0ZXN0IGNhc2UgdGhpcyBleHBlY3Rh
dGlvbi9hc3NlcnRpb24gaXMgYXNzb2NpYXRlZCB3aXRoLgorICogQHR5cGU6IHRoZSB0eXBlIChl
aXRoZXIgYW4gZXhwZWN0YXRpb24gb3IgYW4gYXNzZXJ0aW9uKSBvZiB0aGlzIGt1bml0X2Fzc2Vy
dC4KKyAqIEBsaW5lOiB0aGUgc291cmNlIGNvZGUgbGluZSBudW1iZXIgdGhhdCB0aGUgZXhwZWN0
YXRpb24vYXNzZXJ0aW9uIGlzIGF0LgorICogQGZpbGU6IHRoZSBmaWxlIHBhdGggb2YgdGhlIHNv
dXJjZSBmaWxlIHRoYXQgdGhlIGV4cGVjdGF0aW9uL2Fzc2VydGlvbiBpcyBpbi4KKyAqIEBtZXNz
YWdlOiBhbiBvcHRpb25hbCBtZXNzYWdlIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBjb250ZXh0Lgor
ICogQGZvcm1hdDogYSBmdW5jdGlvbiB3aGljaCBmb3JtYXRzIHRoZSBkYXRhIGluIHRoaXMga3Vu
aXRfYXNzZXJ0IHRvIGEgc3RyaW5nLgorICoKKyAqIFJlcHJlc2VudHMgYSBmYWlsZWQgZXhwZWN0
YXRpb24vYXNzZXJ0aW9uLiBDb250YWlucyBhbGwgdGhlIGRhdGEgbmVjZXNzYXJ5IHRvCisgKiBm
b3JtYXQgYSBzdHJpbmcgdG8gYSB1c2VyIHJlcG9ydGluZyB0aGUgZmFpbHVyZS4KKyAqLworc3Ry
dWN0IGt1bml0X2Fzc2VydCB7CisJc3RydWN0IGt1bml0ICp0ZXN0OworCWVudW0ga3VuaXRfYXNz
ZXJ0X3R5cGUgdHlwZTsKKwlpbnQgbGluZTsKKwljb25zdCBjaGFyICpmaWxlOworCXN0cnVjdCB2
YV9mb3JtYXQgbWVzc2FnZTsKKwl2b2lkICgqZm9ybWF0KShjb25zdCBzdHJ1Y3Qga3VuaXRfYXNz
ZXJ0ICphc3NlcnQsCisJCSAgICAgICBzdHJ1Y3Qgc3RyaW5nX3N0cmVhbSAqc3RyZWFtKTsKK307
CisKKy8qKgorICogS1VOSVRfSU5JVF9WQV9GTVRfTlVMTCAtIERlZmF1bHQgaW5pdGlhbGl6ZXIg
Zm9yIHN0cnVjdCB2YV9mb3JtYXQuCisgKgorICogVXNlZCBpbnNpZGUgYSBzdHJ1Y3QgaW5pdGlh
bGl6YXRpb24gYmxvY2sgdG8gaW5pdGlhbGl6ZSBzdHJ1Y3QgdmFfZm9ybWF0IHRvCisgKiBkZWZh
dWx0IHZhbHVlcyB3aGVyZSBmbXQgYW5kIHZhIGFyZSBudWxsLgorICovCisjZGVmaW5lIEtVTklU
X0lOSVRfVkFfRk1UX05VTEwgeyAuZm10ID0gTlVMTCwgLnZhID0gTlVMTCB9CisKKy8qKgorICog
S1VOSVRfSU5JVF9BU1NFUlRfU1RSVUNUKCkgLSBJbml0aWFsaXplciBmb3IgYSAmc3RydWN0IGt1
bml0X2Fzc2VydC4KKyAqIEBrdW5pdDogVGhlIHRlc3QgY2FzZSB0aGF0IHRoaXMgZXhwZWN0YXRp
b24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEBhc3NlcnRfdHlwZTogVGhlIHR5
cGUgKGFzc2VydGlvbiBvciBleHBlY3RhdGlvbikgb2YgdGhpcyBrdW5pdF9hc3NlcnQuCisgKiBA
Zm10OiBUaGUgZm9ybWF0dGluZyBmdW5jdGlvbiB3aGljaCBidWlsZHMgYSBzdHJpbmcgb3V0IG9m
IHRoaXMga3VuaXRfYXNzZXJ0LgorICoKKyAqIFRoZSBiYXNlIGluaXRpYWxpemVyIGZvciBhICZz
dHJ1Y3Qga3VuaXRfYXNzZXJ0LgorICovCisjZGVmaW5lIEtVTklUX0lOSVRfQVNTRVJUX1NUUlVD
VChrdW5pdCwgYXNzZXJ0X3R5cGUsIGZtdCkgewkJICAgICAgIFwKKwkudGVzdCA9IGt1bml0LAkJ
CQkJCQkgICAgICAgXAorCS50eXBlID0gYXNzZXJ0X3R5cGUsCQkJCQkJICAgICAgIFwKKwkuZmls
ZSA9IF9fRklMRV9fLAkJCQkJCSAgICAgICBcCisJLmxpbmUgPSBfX0xJTkVfXywJCQkJCQkgICAg
ICAgXAorCS5tZXNzYWdlID0gS1VOSVRfSU5JVF9WQV9GTVRfTlVMTCwJCQkJICAgICAgIFwKKwku
Zm9ybWF0ID0gZm10CQkJCQkJCSAgICAgICBcCit9CisKK3ZvaWQga3VuaXRfYmFzZV9hc3NlcnRf
Zm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVj
dCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pOworCit2b2lkIGt1bml0X2Fzc2VydF9wcmludF9tc2co
Y29uc3Qgc3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJICAgIHN0cnVjdCBzdHJpbmdf
c3RyZWFtICpzdHJlYW0pOworCisvKioKKyAqIHN0cnVjdCBrdW5pdF9mYWlsX2Fzc2VydCAtIFJl
cHJlc2VudHMgYSBwbGFpbiBmYWlsIGV4cGVjdGF0aW9uL2Fzc2VydGlvbi4KKyAqIEBhc3NlcnQ6
IFRoZSBwYXJlbnQgb2YgdGhpcyB0eXBlLgorICoKKyAqIFJlcHJlc2VudHMgYSBzaW1wbGUgS1VO
SVRfRkFJTC9LVU5JVF9BU1NFUlRfRkFJTFVSRSB0aGF0IGFsd2F5cyBmYWlscy4KKyAqLworc3Ry
dWN0IGt1bml0X2ZhaWxfYXNzZXJ0IHsKKwlzdHJ1Y3Qga3VuaXRfYXNzZXJ0IGFzc2VydDsKK307
CisKK3ZvaWQga3VuaXRfZmFpbF9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3Nl
cnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pOworCisv
KioKKyAqIEtVTklUX0lOSVRfRkFJTF9BU1NFUlRfU1RSVUNUKCkgLSBJbml0aWFsaXplciBmb3Ig
JnN0cnVjdCBrdW5pdF9mYWlsX2Fzc2VydC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjYXNlIHRoYXQg
dGhpcyBleHBlY3RhdGlvbi9hc3NlcnRpb24gaXMgYXNzb2NpYXRlZCB3aXRoLgorICogQHR5cGU6
IFRoZSB0eXBlIChhc3NlcnRpb24gb3IgZXhwZWN0YXRpb24pIG9mIHRoaXMga3VuaXRfYXNzZXJ0
LgorICoKKyAqIEluaXRpYWxpemVzIGEgJnN0cnVjdCBrdW5pdF9mYWlsX2Fzc2VydC4gSW50ZW5k
ZWQgdG8gYmUgdXNlZCBpbgorICogS1VOSVRfRVhQRUNUXyogYW5kIEtVTklUX0FTU0VSVF8qIG1h
Y3Jvcy4KKyAqLworI2RlZmluZSBLVU5JVF9JTklUX0ZBSUxfQVNTRVJUX1NUUlVDVCh0ZXN0LCB0
eXBlKSB7CQkJICAgICAgIFwKKwkuYXNzZXJ0ID0gS1VOSVRfSU5JVF9BU1NFUlRfU1RSVUNUKHRl
c3QsCQkJICAgICAgIFwKKwkJCQkJICAgdHlwZSwJCQkgICAgICAgXAorCQkJCQkgICBrdW5pdF9m
YWlsX2Fzc2VydF9mb3JtYXQpCSAgICAgICBcCit9CisKKy8qKgorICogc3RydWN0IGt1bml0X3Vu
YXJ5X2Fzc2VydCAtIFJlcHJlc2VudHMgYSBLVU5JVF97RVhQRUNUfEFTU0VSVH1fe1RSVUV8RkFM
U0V9CisgKiBAYXNzZXJ0OiBUaGUgcGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqIEBjb25kaXRpb246
IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgY29uZGl0aW9uYWwgZXhwcmVzc2lvbi4KKyAq
IEBleHBlY3RlZF90cnVlOiBUcnVlIGlmIG9mIHR5cGUgS1VOSVRfe0VYUEVDVHxBU1NFUlR9X1RS
VUUsIGZhbHNlIG90aGVyd2lzZS4KKyAqCisgKiBSZXByZXNlbnRzIGEgc2ltcGxlIGV4cGVjdGF0
aW9uIG9yIGFzc2VydGlvbiB0aGF0IHNpbXBseSBhc3NlcnRzIHNvbWV0aGluZyBpcworICogdHJ1
ZSBvciBmYWxzZS4gSW4gb3RoZXIgd29yZHMsIHJlcHJlc2VudHMgdGhlIGV4cGVjdGF0aW9uczoK
KyAqIEtVTklUX3tFWFBFQ1R8QVNTRVJUfV97VFJVRXxGQUxTRX0KKyAqLworc3RydWN0IGt1bml0
X3VuYXJ5X2Fzc2VydCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hh
ciAqY29uZGl0aW9uOworCWJvb2wgZXhwZWN0ZWRfdHJ1ZTsKK307CisKK3ZvaWQga3VuaXRfdW5h
cnlfYXNzZXJ0X2Zvcm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkg
ICAgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSk7CisKKy8qKgorICogS1VOSVRfSU5J
VF9VTkFSWV9BU1NFUlRfU1RSVUNUKCkgLSBJbml0aWFsaXplcyAmc3RydWN0IGt1bml0X3VuYXJ5
X2Fzc2VydC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjYXNlIHRoYXQgdGhpcyBleHBlY3RhdGlvbi9h
c3NlcnRpb24gaXMgYXNzb2NpYXRlZCB3aXRoLgorICogQHR5cGU6IFRoZSB0eXBlIChhc3NlcnRp
b24gb3IgZXhwZWN0YXRpb24pIG9mIHRoaXMga3VuaXRfYXNzZXJ0LgorICogQGNvbmQ6IEEgc3Ry
aW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGFzc2VydGVkIHRydWUgb3IgZmFs
c2UuCisgKiBAZXhwZWN0X3RydWU6IFRydWUgaWYgb2YgdHlwZSBLVU5JVF97RVhQRUNUfEFTU0VS
VH1fVFJVRSwgZmFsc2Ugb3RoZXJ3aXNlLgorICoKKyAqIEluaXRpYWxpemVzIGEgJnN0cnVjdCBr
dW5pdF91bmFyeV9hc3NlcnQuIEludGVuZGVkIHRvIGJlIHVzZWQgaW4KKyAqIEtVTklUX0VYUEVD
VF8qIGFuZCBLVU5JVF9BU1NFUlRfKiBtYWNyb3MuCisgKi8KKyNkZWZpbmUgS1VOSVRfSU5JVF9V
TkFSWV9BU1NFUlRfU1RSVUNUKHRlc3QsIHR5cGUsIGNvbmQsIGV4cGVjdF90cnVlKSB7CSAgICAg
ICBcCisJLmFzc2VydCA9IEtVTklUX0lOSVRfQVNTRVJUX1NUUlVDVCh0ZXN0LAkJCSAgICAgICBc
CisJCQkJCSAgIHR5cGUsCQkJICAgICAgIFwKKwkJCQkJICAga3VuaXRfdW5hcnlfYXNzZXJ0X2Zv
cm1hdCksCSAgICAgICBcCisJLmNvbmRpdGlvbiA9IGNvbmQsCQkJCQkJICAgICAgIFwKKwkuZXhw
ZWN0ZWRfdHJ1ZSA9IGV4cGVjdF90cnVlCQkJCQkgICAgICAgXAorfQorCisvKioKKyAqIHN0cnVj
dCBrdW5pdF9wdHJfbm90X2Vycl9hc3NlcnQgLSBBbiBleHBlY3RhdGlvbi9hc3NlcnRpb24gdGhh
dCBhIHBvaW50ZXIgaXMKKyAqCW5vdCBOVUxMIGFuZCBub3QgYSAtZXJybm8uCisgKiBAYXNzZXJ0
OiBUaGUgcGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqIEB0ZXh0OiBBIHN0cmluZyByZXByZXNlbnRh
dGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBwYXNzZWQgdG8gdGhlIGV4cGVjdGF0aW9uLgorICogQHZh
bHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCBwb2ludGVyIHZhbHVlIG9mIHRoZSBleHByZXNzaW9u
LgorICoKKyAqIFJlcHJlc2VudHMgYW4gZXhwZWN0YXRpb24vYXNzZXJ0aW9uIHRoYXQgYSBwb2lu
dGVyIGlzIG5vdCBudWxsIGFuZCBpcyBkb2VzCisgKiBub3QgY29udGFpbiBhIC1lcnJuby4gKFNl
ZSBJU19FUlJfT1JfTlVMTCgpLikKKyAqLworc3RydWN0IGt1bml0X3B0cl9ub3RfZXJyX2Fzc2Vy
dCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7CisJY29uc3QgY2hhciAqdGV4dDsKKwlj
b25zdCB2b2lkICp2YWx1ZTsKK307CisKK3ZvaWQga3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0X2Zv
cm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgICBzdHJ1Y3Qg
c3RyaW5nX3N0cmVhbSAqc3RyZWFtKTsKKworLyoqCisgKiBLVU5JVF9JTklUX1BUUl9OT1RfRVJS
X0FTU0VSVF9TVFJVQ1QoKSAtIEluaXRpYWxpemVzIGEKKyAqCSZzdHJ1Y3Qga3VuaXRfcHRyX25v
dF9lcnJfYXNzZXJ0LgorICogQHRlc3Q6IFRoZSB0ZXN0IGNhc2UgdGhhdCB0aGlzIGV4cGVjdGF0
aW9uL2Fzc2VydGlvbiBpcyBhc3NvY2lhdGVkIHdpdGguCisgKiBAdHlwZTogVGhlIHR5cGUgKGFz
c2VydGlvbiBvciBleHBlY3RhdGlvbikgb2YgdGhpcyBrdW5pdF9hc3NlcnQuCisgKiBAdHh0OiBB
IHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBwYXNzZWQgdG8gdGhlIGV4
cGVjdGF0aW9uLgorICogQHZhbDogVGhlIGFjdHVhbCBldmFsdWF0ZWQgcG9pbnRlciB2YWx1ZSBv
ZiB0aGUgZXhwcmVzc2lvbi4KKyAqCisgKiBJbml0aWFsaXplcyBhICZzdHJ1Y3Qga3VuaXRfcHRy
X25vdF9lcnJfYXNzZXJ0LiBJbnRlbmRlZCB0byBiZSB1c2VkIGluCisgKiBLVU5JVF9FWFBFQ1Rf
KiBhbmQgS1VOSVRfQVNTRVJUXyogbWFjcm9zLgorICovCisjZGVmaW5lIEtVTklUX0lOSVRfUFRS
X05PVF9FUlJfU1RSVUNUKHRlc3QsIHR5cGUsIHR4dCwgdmFsKSB7CQkgICAgICAgXAorCS5hc3Nl
cnQgPSBLVU5JVF9JTklUX0FTU0VSVF9TVFJVQ1QodGVzdCwJCQkgICAgICAgXAorCQkJCQkgICB0
eXBlLAkJCSAgICAgICBcCisJCQkJCSAgIGt1bml0X3B0cl9ub3RfZXJyX2Fzc2VydF9mb3JtYXQp
LCAgIFwKKwkudGV4dCA9IHR4dCwJCQkJCQkJICAgICAgIFwKKwkudmFsdWUgPSB2YWwJCQkJCQkJ
ICAgICAgIFwKK30KKworLyoqCisgKiBzdHJ1Y3Qga3VuaXRfYmluYXJ5X2Fzc2VydCAtIEFuIGV4
cGVjdGF0aW9uL2Fzc2VydGlvbiB0aGF0IGNvbXBhcmVzIHR3bworICoJbm9uLXBvaW50ZXIgdmFs
dWVzIChmb3IgZXhhbXBsZSwgS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDEgKyAxLCAyKSkuCisgKiBA
YXNzZXJ0OiBUaGUgcGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqIEBvcGVyYXRpb246IEEgc3RyaW5n
IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIChlLmcuICI9PSIpLgor
ICogQGxlZnRfdGV4dDogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Npb24g
aW4gdGhlIGxlZnQgc2xvdC4KKyAqIEBsZWZ0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2
YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90LgorICogQHJpZ2h0X3RleHQ6
IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSByaWdodCBz
bG90LgorICogQHJpZ2h0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUg
ZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqCisgKiBSZXByZXNlbnRzIGFuIGV4cGVj
dGF0aW9uL2Fzc2VydGlvbiB0aGF0IGNvbXBhcmVzIHR3byBub24tcG9pbnRlciB2YWx1ZXMuIEZv
cgorICogZXhhbXBsZSwgdG8gZXhwZWN0IHRoYXQgMSArIDEgPT0gMiwgeW91IGNhbiB1c2UgdGhl
IGV4cGVjdGF0aW9uCisgKiBLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMSArIDEsIDIpOworICovCitz
dHJ1Y3Qga3VuaXRfYmluYXJ5X2Fzc2VydCB7CisJc3RydWN0IGt1bml0X2Fzc2VydCBhc3NlcnQ7
CisJY29uc3QgY2hhciAqb3BlcmF0aW9uOworCWNvbnN0IGNoYXIgKmxlZnRfdGV4dDsKKwlsb25n
IGxvbmcgbGVmdF92YWx1ZTsKKwljb25zdCBjaGFyICpyaWdodF90ZXh0OworCWxvbmcgbG9uZyBy
aWdodF92YWx1ZTsKK307CisKK3ZvaWQga3VuaXRfYmluYXJ5X2Fzc2VydF9mb3JtYXQoY29uc3Qg
c3RydWN0IGt1bml0X2Fzc2VydCAqYXNzZXJ0LAorCQkJCXN0cnVjdCBzdHJpbmdfc3RyZWFtICpz
dHJlYW0pOworCisvKioKKyAqIEtVTklUX0lOSVRfQklOQVJZX0FTU0VSVF9TVFJVQ1QoKSAtIElu
aXRpYWxpemVzIGEKKyAqCSZzdHJ1Y3Qga3VuaXRfYmluYXJ5X2Fzc2VydC4KKyAqIEB0ZXN0OiBU
aGUgdGVzdCBjYXNlIHRoYXQgdGhpcyBleHBlY3RhdGlvbi9hc3NlcnRpb24gaXMgYXNzb2NpYXRl
ZCB3aXRoLgorICogQHR5cGU6IFRoZSB0eXBlIChhc3NlcnRpb24gb3IgZXhwZWN0YXRpb24pIG9m
IHRoaXMga3VuaXRfYXNzZXJ0LgorICogQG9wX3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24g
b2YgdGhlIGNvbXBhcmlzb24gb3BlcmF0b3IgKGUuZy4gIj09IikuCisgKiBAbGVmdF9zdHI6IEEg
c3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSBsZWZ0IHNsb3Qu
CisgKiBAbGVmdF92YWw6IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHZhbHVlIG9mIHRoZSBleHByZXNz
aW9uIGluIHRoZSBsZWZ0IHNsb3QuCisgKiBAcmlnaHRfc3RyOiBBIHN0cmluZyByZXByZXNlbnRh
dGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqIEByaWdodF92YWw6
IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSByaWdo
dCBzbG90LgorICoKKyAqIEluaXRpYWxpemVzIGEgJnN0cnVjdCBrdW5pdF9iaW5hcnlfYXNzZXJ0
LiBJbnRlbmRlZCB0byBiZSB1c2VkIGluCisgKiBLVU5JVF9FWFBFQ1RfKiBhbmQgS1VOSVRfQVNT
RVJUXyogbWFjcm9zLgorICovCisjZGVmaW5lIEtVTklUX0lOSVRfQklOQVJZX0FTU0VSVF9TVFJV
Q1QodGVzdCwJCQkJICAgICAgIFwKKwkJCQkJdHlwZSwJCQkJICAgICAgIFwKKwkJCQkJb3Bfc3Ry
LAkJCQkgICAgICAgXAorCQkJCQlsZWZ0X3N0ciwJCQkgICAgICAgXAorCQkJCQlsZWZ0X3ZhbCwJ
CQkgICAgICAgXAorCQkJCQlyaWdodF9zdHIsCQkJICAgICAgIFwKKwkJCQkJcmlnaHRfdmFsKSB7
CQkJICAgICAgIFwKKwkuYXNzZXJ0ID0gS1VOSVRfSU5JVF9BU1NFUlRfU1RSVUNUKHRlc3QsCQkJ
ICAgICAgIFwKKwkJCQkJICAgdHlwZSwJCQkgICAgICAgXAorCQkJCQkgICBrdW5pdF9iaW5hcnlf
YXNzZXJ0X2Zvcm1hdCksCSAgICAgICBcCisJLm9wZXJhdGlvbiA9IG9wX3N0ciwJCQkJCQkgICAg
ICAgXAorCS5sZWZ0X3RleHQgPSBsZWZ0X3N0ciwJCQkJCQkgICAgICAgXAorCS5sZWZ0X3ZhbHVl
ID0gbGVmdF92YWwsCQkJCQkJICAgICAgIFwKKwkucmlnaHRfdGV4dCA9IHJpZ2h0X3N0ciwJCQkJ
CSAgICAgICBcCisJLnJpZ2h0X3ZhbHVlID0gcmlnaHRfdmFsCQkJCQkgICAgICAgXAorfQorCisv
KioKKyAqIHN0cnVjdCBrdW5pdF9iaW5hcnlfcHRyX2Fzc2VydCAtIEFuIGV4cGVjdGF0aW9uL2Fz
c2VydGlvbiB0aGF0IGNvbXBhcmVzIHR3bworICoJcG9pbnRlciB2YWx1ZXMgKGZvciBleGFtcGxl
LCBLVU5JVF9FWFBFQ1RfUFRSX0VRKHRlc3QsIGZvbywgYmFyKSkuCisgKiBAYXNzZXJ0OiBUaGUg
cGFyZW50IG9mIHRoaXMgdHlwZS4KKyAqIEBvcGVyYXRpb246IEEgc3RyaW5nIHJlcHJlc2VudGF0
aW9uIG9mIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIChlLmcuICI9PSIpLgorICogQGxlZnRfdGV4
dDogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIGxlZnQg
c2xvdC4KKyAqIEBsZWZ0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUg
ZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90LgorICogQHJpZ2h0X3RleHQ6IEEgc3RyaW5nIHJl
cHJlc2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSByaWdodCBzbG90LgorICogQHJp
Z2h0X3ZhbHVlOiBUaGUgYWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBp
biB0aGUgcmlnaHQgc2xvdC4KKyAqCisgKiBSZXByZXNlbnRzIGFuIGV4cGVjdGF0aW9uL2Fzc2Vy
dGlvbiB0aGF0IGNvbXBhcmVzIHR3byBwb2ludGVyIHZhbHVlcy4gRm9yCisgKiBleGFtcGxlLCB0
byBleHBlY3QgdGhhdCBmb28gYW5kIGJhciBwb2ludCB0byB0aGUgc2FtZSB0aGluZywgeW91IGNh
biB1c2UgdGhlCisgKiBleHBlY3RhdGlvbiBLVU5JVF9FWFBFQ1RfUFRSX0VRKHRlc3QsIGZvbywg
YmFyKTsKKyAqLworc3RydWN0IGt1bml0X2JpbmFyeV9wdHJfYXNzZXJ0IHsKKwlzdHJ1Y3Qga3Vu
aXRfYXNzZXJ0IGFzc2VydDsKKwljb25zdCBjaGFyICpvcGVyYXRpb247CisJY29uc3QgY2hhciAq
bGVmdF90ZXh0OworCWNvbnN0IHZvaWQgKmxlZnRfdmFsdWU7CisJY29uc3QgY2hhciAqcmlnaHRf
dGV4dDsKKwljb25zdCB2b2lkICpyaWdodF92YWx1ZTsKK307CisKK3ZvaWQga3VuaXRfYmluYXJ5
X3B0cl9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJ
CQkgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSk7CisKKy8qKgorICogS1VOSVRfSU5J
VF9CSU5BUllfUFRSX0FTU0VSVF9TVFJVQ1QoKSAtIEluaXRpYWxpemVzIGEKKyAqCSZzdHJ1Y3Qg
a3VuaXRfYmluYXJ5X3B0cl9hc3NlcnQuCisgKiBAdGVzdDogVGhlIHRlc3QgY2FzZSB0aGF0IHRo
aXMgZXhwZWN0YXRpb24vYXNzZXJ0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC4KKyAqIEB0eXBlOiBU
aGUgdHlwZSAoYXNzZXJ0aW9uIG9yIGV4cGVjdGF0aW9uKSBvZiB0aGlzIGt1bml0X2Fzc2VydC4K
KyAqIEBvcF9zdHI6IEEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBjb21wYXJpc29uIG9w
ZXJhdG9yIChlLmcuICI9PSIpLgorICogQGxlZnRfc3RyOiBBIHN0cmluZyByZXByZXNlbnRhdGlv
biBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90LgorICogQGxlZnRfdmFsOiBUaGUg
YWN0dWFsIGV2YWx1YXRlZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgbGVmdCBzbG90
LgorICogQHJpZ2h0X3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Np
b24gaW4gdGhlIHJpZ2h0IHNsb3QuCisgKiBAcmlnaHRfdmFsOiBUaGUgYWN0dWFsIGV2YWx1YXRl
ZCB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqCisgKiBJbml0
aWFsaXplcyBhICZzdHJ1Y3Qga3VuaXRfYmluYXJ5X3B0cl9hc3NlcnQuIEludGVuZGVkIHRvIGJl
IHVzZWQgaW4KKyAqIEtVTklUX0VYUEVDVF8qIGFuZCBLVU5JVF9BU1NFUlRfKiBtYWNyb3MuCisg
Ki8KKyNkZWZpbmUgS1VOSVRfSU5JVF9CSU5BUllfUFRSX0FTU0VSVF9TVFJVQ1QodGVzdCwJCQkg
ICAgICAgXAorCQkJCQkgICAgdHlwZSwJCQkgICAgICAgXAorCQkJCQkgICAgb3Bfc3RyLAkJCSAg
ICAgICBcCisJCQkJCSAgICBsZWZ0X3N0ciwJCQkgICAgICAgXAorCQkJCQkgICAgbGVmdF92YWws
CQkJICAgICAgIFwKKwkJCQkJICAgIHJpZ2h0X3N0ciwJCQkgICAgICAgXAorCQkJCQkgICAgcmln
aHRfdmFsKSB7CQkgICAgICAgXAorCS5hc3NlcnQgPSBLVU5JVF9JTklUX0FTU0VSVF9TVFJVQ1Qo
dGVzdCwJCQkgICAgICAgXAorCQkJCQkgICB0eXBlLAkJCSAgICAgICBcCisJCQkJCSAgIGt1bml0
X2JpbmFyeV9wdHJfYXNzZXJ0X2Zvcm1hdCksICAgIFwKKwkub3BlcmF0aW9uID0gb3Bfc3RyLAkJ
CQkJCSAgICAgICBcCisJLmxlZnRfdGV4dCA9IGxlZnRfc3RyLAkJCQkJCSAgICAgICBcCisJLmxl
ZnRfdmFsdWUgPSBsZWZ0X3ZhbCwJCQkJCQkgICAgICAgXAorCS5yaWdodF90ZXh0ID0gcmlnaHRf
c3RyLAkJCQkJICAgICAgIFwKKwkucmlnaHRfdmFsdWUgPSByaWdodF92YWwJCQkJCSAgICAgICBc
Cit9CisKKy8qKgorICogc3RydWN0IGt1bml0X2JpbmFyeV9zdHJfYXNzZXJ0IC0gQW4gZXhwZWN0
YXRpb24vYXNzZXJ0aW9uIHRoYXQgY29tcGFyZXMgdHdvCisgKglzdHJpbmcgdmFsdWVzIChmb3Ig
ZXhhbXBsZSwgS1VOSVRfRVhQRUNUX1NUUkVRKHRlc3QsIGZvbywgImJhciIpKS4KKyAqIEBhc3Nl
cnQ6IFRoZSBwYXJlbnQgb2YgdGhpcyB0eXBlLgorICogQG9wZXJhdGlvbjogQSBzdHJpbmcgcmVw
cmVzZW50YXRpb24gb2YgdGhlIGNvbXBhcmlzb24gb3BlcmF0b3IgKGUuZy4gIj09IikuCisgKiBA
bGVmdF90ZXh0OiBBIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbiB0
aGUgbGVmdCBzbG90LgorICogQGxlZnRfdmFsdWU6IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHZhbHVl
IG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSBsZWZ0IHNsb3QuCisgKiBAcmlnaHRfdGV4dDogQSBz
dHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGV4cHJlc3Npb24gaW4gdGhlIHJpZ2h0IHNsb3Qu
CisgKiBAcmlnaHRfdmFsdWU6IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHZhbHVlIG9mIHRoZSBleHBy
ZXNzaW9uIGluIHRoZSByaWdodCBzbG90LgorICoKKyAqIFJlcHJlc2VudHMgYW4gZXhwZWN0YXRp
b24vYXNzZXJ0aW9uIHRoYXQgY29tcGFyZXMgdHdvIHN0cmluZyB2YWx1ZXMuIEZvcgorICogZXhh
bXBsZSwgdG8gZXhwZWN0IHRoYXQgdGhlIHN0cmluZyBpbiBmb28gaXMgZXF1YWwgdG8gImJhciIs
IHlvdSBjYW4gdXNlIHRoZQorICogZXhwZWN0YXRpb24gS1VOSVRfRVhQRUNUX1NUUkVRKHRlc3Qs
IGZvbywgImJhciIpOworICovCitzdHJ1Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQgeworCXN0
cnVjdCBrdW5pdF9hc3NlcnQgYXNzZXJ0OworCWNvbnN0IGNoYXIgKm9wZXJhdGlvbjsKKwljb25z
dCBjaGFyICpsZWZ0X3RleHQ7CisJY29uc3QgY2hhciAqbGVmdF92YWx1ZTsKKwljb25zdCBjaGFy
ICpyaWdodF90ZXh0OworCWNvbnN0IGNoYXIgKnJpZ2h0X3ZhbHVlOworfTsKKwordm9pZCBrdW5p
dF9iaW5hcnlfc3RyX2Fzc2VydF9mb3JtYXQoY29uc3Qgc3RydWN0IGt1bml0X2Fzc2VydCAqYXNz
ZXJ0LAorCQkJCSAgICBzdHJ1Y3Qgc3RyaW5nX3N0cmVhbSAqc3RyZWFtKTsKKworLyoqCisgKiBL
VU5JVF9JTklUX0JJTkFSWV9TVFJfQVNTRVJUX1NUUlVDVCgpIC0gSW5pdGlhbGl6ZXMgYQorICoJ
JnN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjYXNl
IHRoYXQgdGhpcyBleHBlY3RhdGlvbi9hc3NlcnRpb24gaXMgYXNzb2NpYXRlZCB3aXRoLgorICog
QHR5cGU6IFRoZSB0eXBlIChhc3NlcnRpb24gb3IgZXhwZWN0YXRpb24pIG9mIHRoaXMga3VuaXRf
YXNzZXJ0LgorICogQG9wX3N0cjogQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGNvbXBh
cmlzb24gb3BlcmF0b3IgKGUuZy4gIj09IikuCisgKiBAbGVmdF9zdHI6IEEgc3RyaW5nIHJlcHJl
c2VudGF0aW9uIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSBsZWZ0IHNsb3QuCisgKiBAbGVmdF92
YWw6IFRoZSBhY3R1YWwgZXZhbHVhdGVkIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSBs
ZWZ0IHNsb3QuCisgKiBAcmlnaHRfc3RyOiBBIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUg
ZXhwcmVzc2lvbiBpbiB0aGUgcmlnaHQgc2xvdC4KKyAqIEByaWdodF92YWw6IFRoZSBhY3R1YWwg
ZXZhbHVhdGVkIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGluIHRoZSByaWdodCBzbG90LgorICoK
KyAqIEluaXRpYWxpemVzIGEgJnN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydC4gSW50ZW5k
ZWQgdG8gYmUgdXNlZCBpbgorICogS1VOSVRfRVhQRUNUXyogYW5kIEtVTklUX0FTU0VSVF8qIG1h
Y3Jvcy4KKyAqLworI2RlZmluZSBLVU5JVF9JTklUX0JJTkFSWV9TVFJfQVNTRVJUX1NUUlVDVCh0
ZXN0LAkJCSAgICAgICBcCisJCQkJCSAgICB0eXBlLAkJCSAgICAgICBcCisJCQkJCSAgICBvcF9z
dHIsCQkJICAgICAgIFwKKwkJCQkJICAgIGxlZnRfc3RyLAkJCSAgICAgICBcCisJCQkJCSAgICBs
ZWZ0X3ZhbCwJCQkgICAgICAgXAorCQkJCQkgICAgcmlnaHRfc3RyLAkJCSAgICAgICBcCisJCQkJ
CSAgICByaWdodF92YWwpIHsJCSAgICAgICBcCisJLmFzc2VydCA9IEtVTklUX0lOSVRfQVNTRVJU
X1NUUlVDVCh0ZXN0LAkJCSAgICAgICBcCisJCQkJCSAgIHR5cGUsCQkJICAgICAgIFwKKwkJCQkJ
ICAga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnRfZm9ybWF0KSwgICAgXAorCS5vcGVyYXRpb24gPSBv
cF9zdHIsCQkJCQkJICAgICAgIFwKKwkubGVmdF90ZXh0ID0gbGVmdF9zdHIsCQkJCQkJICAgICAg
IFwKKwkubGVmdF92YWx1ZSA9IGxlZnRfdmFsLAkJCQkJCSAgICAgICBcCisJLnJpZ2h0X3RleHQg
PSByaWdodF9zdHIsCQkJCQkgICAgICAgXAorCS5yaWdodF92YWx1ZSA9IHJpZ2h0X3ZhbAkJCQkJ
ICAgICAgIFwKK30KKworI2VuZGlmIC8qICBfS1VOSVRfQVNTRVJUX0ggKi8KZGlmZiAtLWdpdCBh
L2t1bml0L01ha2VmaWxlIGIva3VuaXQvTWFrZWZpbGUKaW5kZXggMjc1YjU2NWEwZTgxZi4uNmRj
YmUzMDkwMzZiOCAxMDA2NDQKLS0tIGEva3VuaXQvTWFrZWZpbGUKKysrIGIva3VuaXQvTWFrZWZp
bGUKQEAgLTEsMiArMSwzIEBACiBvYmotJChDT05GSUdfS1VOSVQpICs9CQkJdGVzdC5vIFwKLQkJ
CQkJc3RyaW5nLXN0cmVhbS5vCisJCQkJCXN0cmluZy1zdHJlYW0ubyBcCisJCQkJCWFzc2VydC5v
CmRpZmYgLS1naXQgYS9rdW5pdC9hc3NlcnQuYyBiL2t1bml0L2Fzc2VydC5jCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLjg2MDEzZDRjZjg5MWMKLS0tIC9kZXYvbnVs
bAorKysgYi9rdW5pdC9hc3NlcnQuYwpAQCAtMCwwICsxLDE0MSBAQAorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBBc3NlcnRpb24gYW5kIGV4cGVjdGF0aW9uIHNl
cmlhbGl6YXRpb24gQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4K
KyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgor
ICovCisjaW5jbHVkZSA8a3VuaXQvYXNzZXJ0Lmg+CisKK3ZvaWQga3VuaXRfYmFzZV9hc3NlcnRf
Zm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVj
dCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7CisJY29uc3QgY2hhciAqZXhwZWN0X29yX2Fzc2Vy
dCA9IE5VTEw7CisKKwlzd2l0Y2ggKGFzc2VydC0+dHlwZSkgeworCWNhc2UgS1VOSVRfRVhQRUNU
QVRJT046CisJCWV4cGVjdF9vcl9hc3NlcnQgPSAiRVhQRUNUQVRJT04iOworCQlicmVhazsKKwlj
YXNlIEtVTklUX0FTU0VSVElPTjoKKwkJZXhwZWN0X29yX2Fzc2VydCA9ICJBU1NFUlRJT04iOwor
CQlicmVhazsKKwl9CisKKwlzdHJpbmdfc3RyZWFtX2FkZChzdHJlYW0sICIlcyBGQUlMRUQgYXQg
JXM6JWRcbiIsCisJCQkgZXhwZWN0X29yX2Fzc2VydCwgYXNzZXJ0LT5maWxlLCBhc3NlcnQtPmxp
bmUpOworfQorCit2b2lkIGt1bml0X2Fzc2VydF9wcmludF9tc2coY29uc3Qgc3RydWN0IGt1bml0
X2Fzc2VydCAqYXNzZXJ0LAorCQkJICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7
CisJaWYgKGFzc2VydC0+bWVzc2FnZS5mbXQpCisJCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwg
IlxuJXBWIiwgJmFzc2VydC0+bWVzc2FnZSk7Cit9CisKK3ZvaWQga3VuaXRfZmFpbF9hc3NlcnRf
Zm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgIHN0cnVj
dCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7CisJa3VuaXRfYmFzZV9hc3NlcnRfZm9ybWF0KGFz
c2VydCwgc3RyZWFtKTsKKwlzdHJpbmdfc3RyZWFtX2FkZChzdHJlYW0sICIlcFYiLCAmYXNzZXJ0
LT5tZXNzYWdlKTsKK30KKwordm9pZCBrdW5pdF91bmFyeV9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0
cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCSAgICAgICBzdHJ1Y3Qgc3RyaW5nX3N0cmVh
bSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF91bmFyeV9hc3NlcnQgKnVuYXJ5X2Fzc2VydCA9
IGNvbnRhaW5lcl9vZigKKwkJCWFzc2VydCwgc3RydWN0IGt1bml0X3VuYXJ5X2Fzc2VydCwgYXNz
ZXJ0KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7CisJaWYg
KHVuYXJ5X2Fzc2VydC0+ZXhwZWN0ZWRfdHJ1ZSkKKwkJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFt
LAorCQkJCSAiXHRFeHBlY3RlZCAlcyB0byBiZSB0cnVlLCBidXQgaXMgZmFsc2VcbiIsCisJCQkJ
IHVuYXJ5X2Fzc2VydC0+Y29uZGl0aW9uKTsKKwllbHNlCisJCXN0cmluZ19zdHJlYW1fYWRkKHN0
cmVhbSwKKwkJCQkgIlx0RXhwZWN0ZWQgJXMgdG8gYmUgZmFsc2UsIGJ1dCBpcyB0cnVlXG4iLAor
CQkJCSB1bmFyeV9hc3NlcnQtPmNvbmRpdGlvbik7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhh
c3NlcnQsIHN0cmVhbSk7Cit9CisKK3ZvaWQga3VuaXRfcHRyX25vdF9lcnJfYXNzZXJ0X2Zvcm1h
dChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJICAgICBzdHJ1Y3Qgc3Ry
aW5nX3N0cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF9wdHJfbm90X2Vycl9hc3NlcnQg
KnB0cl9hc3NlcnQgPSBjb250YWluZXJfb2YoCisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9wdHJf
bm90X2Vycl9hc3NlcnQsIGFzc2VydCk7CisKKwlrdW5pdF9iYXNlX2Fzc2VydF9mb3JtYXQoYXNz
ZXJ0LCBzdHJlYW0pOworCWlmICghcHRyX2Fzc2VydC0+dmFsdWUpIHsKKwkJc3RyaW5nX3N0cmVh
bV9hZGQoc3RyZWFtLAorCQkJCSAiXHRFeHBlY3RlZCAlcyBpcyBub3QgbnVsbCwgYnV0IGlzXG4i
LAorCQkJCSBwdHJfYXNzZXJ0LT50ZXh0KTsKKwl9IGVsc2UgaWYgKElTX0VSUihwdHJfYXNzZXJ0
LT52YWx1ZSkpIHsKKwkJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJCSAiXHRFeHBlY3Rl
ZCAlcyBpcyBub3QgZXJyb3IsIGJ1dCBpczogJWxkXG4iLAorCQkJCSBwdHJfYXNzZXJ0LT50ZXh0
LAorCQkJCSBQVFJfRVJSKHB0cl9hc3NlcnQtPnZhbHVlKSk7CisJfQorCWt1bml0X2Fzc2VydF9w
cmludF9tc2coYXNzZXJ0LCBzdHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9hc3NlcnRf
Zm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2VydCwKKwkJCQlzdHJ1Y3Qgc3Ry
aW5nX3N0cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBrdW5pdF9iaW5hcnlfYXNzZXJ0ICpiaW5h
cnlfYXNzZXJ0ID0gY29udGFpbmVyX29mKAorCQkJYXNzZXJ0LCBzdHJ1Y3Qga3VuaXRfYmluYXJ5
X2Fzc2VydCwgYXNzZXJ0KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0
cmVhbSk7CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJICJcdEV4cGVjdGVkICVzICVz
ICVzLCBidXRcbiIsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAorCQkJIGJpbmFyeV9h
c3NlcnQtPm9wZXJhdGlvbiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdodF90ZXh0KTsKKwlzdHJp
bmdfc3RyZWFtX2FkZChzdHJlYW0sICJcdFx0JXMgPT0gJWxsZFxuIiwKKwkJCSBiaW5hcnlfYXNz
ZXJ0LT5sZWZ0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF92YWx1ZSk7CisJc3RyaW5n
X3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVsbGQiLAorCQkJIGJpbmFyeV9hc3NlcnQt
PnJpZ2h0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdmFsdWUpOworCWt1bml0X2Fz
c2VydF9wcmludF9tc2coYXNzZXJ0LCBzdHJlYW0pOworfQorCit2b2lkIGt1bml0X2JpbmFyeV9w
dHJfYXNzZXJ0X2Zvcm1hdChjb25zdCBzdHJ1Y3Qga3VuaXRfYXNzZXJ0ICphc3NlcnQsCisJCQkJ
ICAgIHN0cnVjdCBzdHJpbmdfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0IGt1bml0X2JpbmFy
eV9wdHJfYXNzZXJ0ICpiaW5hcnlfYXNzZXJ0ID0gY29udGFpbmVyX29mKAorCQkJYXNzZXJ0LCBz
dHJ1Y3Qga3VuaXRfYmluYXJ5X3B0cl9hc3NlcnQsIGFzc2VydCk7CisKKwlrdW5pdF9iYXNlX2Fz
c2VydF9mb3JtYXQoYXNzZXJ0LCBzdHJlYW0pOworCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVhbSwK
KwkJCSAiXHRFeHBlY3RlZCAlcyAlcyAlcywgYnV0XG4iLAorCQkJIGJpbmFyeV9hc3NlcnQtPmxl
ZnRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5vcGVyYXRpb24sCisJCQkgYmluYXJ5X2Fzc2Vy
dC0+cmlnaHRfdGV4dCk7CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVw
S1xuIiwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5sZWZ0X3RleHQsCisJCQkgYmluYXJ5X2Fzc2VydC0+
bGVmdF92YWx1ZSk7CisJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVwSyIs
CisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdo
dF92YWx1ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3NlcnQsIHN0cmVhbSk7Cit9CisK
K3ZvaWQga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnRfZm9ybWF0KGNvbnN0IHN0cnVjdCBrdW5pdF9h
c3NlcnQgKmFzc2VydCwKKwkJCQkgICAgc3RydWN0IHN0cmluZ19zdHJlYW0gKnN0cmVhbSkKK3sK
KwlzdHJ1Y3Qga3VuaXRfYmluYXJ5X3N0cl9hc3NlcnQgKmJpbmFyeV9hc3NlcnQgPSBjb250YWlu
ZXJfb2YoCisJCQlhc3NlcnQsIHN0cnVjdCBrdW5pdF9iaW5hcnlfc3RyX2Fzc2VydCwgYXNzZXJ0
KTsKKworCWt1bml0X2Jhc2VfYXNzZXJ0X2Zvcm1hdChhc3NlcnQsIHN0cmVhbSk7CisJc3RyaW5n
X3N0cmVhbV9hZGQoc3RyZWFtLAorCQkJICJcdEV4cGVjdGVkICVzICVzICVzLCBidXRcbiIsCisJ
CQkgYmluYXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAorCQkJIGJpbmFyeV9hc3NlcnQtPm9wZXJhdGlv
biwKKwkJCSBiaW5hcnlfYXNzZXJ0LT5yaWdodF90ZXh0KTsKKwlzdHJpbmdfc3RyZWFtX2FkZChz
dHJlYW0sICJcdFx0JXMgPT0gJXNcbiIsCisJCQkgYmluYXJ5X2Fzc2VydC0+bGVmdF90ZXh0LAor
CQkJIGJpbmFyeV9hc3NlcnQtPmxlZnRfdmFsdWUpOworCXN0cmluZ19zdHJlYW1fYWRkKHN0cmVh
bSwgIlx0XHQlcyA9PSAlcyIsCisJCQkgYmluYXJ5X2Fzc2VydC0+cmlnaHRfdGV4dCwKKwkJCSBi
aW5hcnlfYXNzZXJ0LT5yaWdodF92YWx1ZSk7CisJa3VuaXRfYXNzZXJ0X3ByaW50X21zZyhhc3Nl
cnQsIHN0cmVhbSk7Cit9Ci0tIAoyLjIzLjAucmMxLjE1My5nZGVlZDgwMzMwZi1nb29nCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFp
bGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
