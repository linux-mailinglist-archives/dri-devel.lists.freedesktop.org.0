Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5ED7817710F
	for <lists+dri-devel@lfdr.de>; Tue,  3 Mar 2020 09:24:54 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C1DDA6E9EC;
	Tue,  3 Mar 2020 08:24:10 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from Galois.linutronix.de (Galois.linutronix.de
 [IPv6:2a0a:51c0:0:12e:550::1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4ADEA6E217
 for <dri-devel@lists.freedesktop.org>; Mon,  2 Mar 2020 09:35:14 +0000 (UTC)
Received: from bigeasy by Galois.linutronix.de with local (Exim 4.80)
 (envelope-from <bigeasy@linutronix.de>)
 id 1j8hTi-0006nP-E7; Mon, 02 Mar 2020 10:35:10 +0100
Date: Mon, 2 Mar 2020 10:35:10 +0100
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
To: Emil Velikov <emil.l.velikov@gmail.com>
Subject: [PATCH 2/2 v2] drm/vmwgfx: Remove a few unused functions
Message-ID: <20200302093510.ej2xaeucnm6jbsqy@linutronix.de>
References: <20200224140726.1550689-1-bigeasy@linutronix.de>
 <20200224140726.1550689-2-bigeasy@linutronix.de>
 <CACvgo53pWS-0CibAX_RcWJxo4fPqfykUbo8cohr7wg+-wOtKAw@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <CACvgo53pWS-0CibAX_RcWJxo4fPqfykUbo8cohr7wg+-wOtKAw@mail.gmail.com>
X-Mailman-Approved-At: Tue, 03 Mar 2020 08:24:06 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>,
 VMware Graphics <linux-graphics-maintainer@vmware.com>,
 Thomas Gleixner <tglx@linutronix.de>,
 ML dri-devel <dri-devel@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

SSBub3RpY2VkIHRoYXQgdGhlcmUgaXMgYSBwcm90b3R5cGUgZm9yIHZtd19maWZvX3BpbmdfaG9z
dF9sb2NrZWQoKSBidXQKbm8gZnVuY3Rpb24uIFRoZW4gSSBsb29rZWQgZnVydGhlciBhbmQgbm90
aWNlZCBtb3JlIGZ1bmN0aW9ucyB3aGljaCBhcmUKbm90IHVzZWQgYW55bW9yZSBvciBmdW5jdGlv
bnMgcHJvdG95cGVzIHdoaWNoIHJlbWFpbmVkIGFmdGVyIHRoZQpmdW5jdGlvbiB3YXMgcmVtb3Zl
ZC4KClJlbW92ZSB1bnVzZWQgZnVuY3Rpb24gKHByb3RvdHlwZXMpLgoKU2lnbmVkLW9mZi1ieTog
U2ViYXN0aWFuIEFuZHJ6ZWogU2lld2lvciA8YmlnZWFzeUBsaW51dHJvbml4LmRlPgotLS0KdjHi
gKZ2MjogQWxzbyByZW1vdmUgdGhlICJWR0EgcmVnaXN0ZXJzLiIgaW4gc3RydWN0IHZtd19wcml2
YXRlIGFzIHBlcgogICAgICAgRW1pbCBWZWxpa292LiBJdCBpdCBpcyB1bnVzZWQgc2luY2UgY29t
bWl0IGEyNzg3MjRhYTIzYwogICAgICAgKCJkcm0vdm13Z2Z4OiBJbXBsZW1lbnQgZmJkZXYgb24g
a21zIHYyIikuCgpPbiAyMDIwLTAyLTI4IDExOjQyOjQ2IFsrMDAwMF0sIEVtaWwgVmVsaWtvdiB3
cm90ZToKPiBIaSBTZWJhc3RpYW4sCkhpIEVtaWwsCgo+IFNlZW1zIGxpa2UgdGhlIGxhc3QgdXNl
ciB3YXMgcmVtb3ZlZCBpbiAyMDE1IHdpdGggY29tbWl0IGEyNzg3MjRhYTIzYwo+ICgiZHJtL3Zt
d2dmeDogSW1wbGVtZW50IGZiZGV2IG9uIGttcyB2MiIpLgo+IAo+IFdpdGggdGhpcyBwYXRjaCwg
dGhlIHNlY3Rpb24gb2YgIlZHQSByZWdpc3RlcnMiIGluIHN0cnVjdCB2bXdfcHJpdmF0ZQo+IGJl
Y29tZXMgZGVhZCBjb2RlLgo+IElNSE8gaXQgd291bGQgbWFrZSBzZW5zZSB0byBhbHNvIHJlbW92
ZSB0aG9zZSB3aXRoIHRoaXMgcGF0Y2guCgpPa2F5LCB0aGFua3MsIHJlbW92ZWQuCgo+IEhUSAo+
IEVtaWwKICAgICAgIAogZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2LmggICAgIHwg
MjggLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9rbXMuYyAgICAgfCA4
MSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dm
eF9vdmVybGF5LmMgfCAzMSAtLS0tLS0tLS0tCiAzIGZpbGVzIGNoYW5nZWQsIDE0MCBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9kcnYuaCBi
L2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2Rydi5oCmluZGV4IDg2YjY5Mzk3ZDE2NmUu
LjVjOGQ2NDNkOTljMGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4
X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2Rydi5oCkBAIC00Nzks
MTkgKzQ3OSw2IEBAIHN0cnVjdCB2bXdfcHJpdmF0ZSB7CiAJYm9vbCBhc3N1bWVfMTZicHA7CiAJ
Ym9vbCBoYXNfc200XzE7CiAKLQkvKgotCSAqIFZHQSByZWdpc3RlcnMuCi0JICovCi0KLQlzdHJ1
Y3Qgdm13X3ZnYV90b3BvbG9neV9zdGF0ZSB2Z2Ffc2F2ZVtWTVdHRlhfTUFYX0RJU1BMQVlTXTsK
LQl1aW50MzJfdCB2Z2Ffd2lkdGg7Ci0JdWludDMyX3QgdmdhX2hlaWdodDsKLQl1aW50MzJfdCB2
Z2FfYnBwOwotCXVpbnQzMl90IHZnYV9icGw7Ci0JdWludDMyX3QgdmdhX3BpdGNobG9jazsKLQot
CXVpbnQzMl90IG51bV9kaXNwbGF5czsKLQogCS8qCiAJICogRnJhbWVidWZmZXIgaW5mby4KIAkg
Ki8KQEAgLTkwMCw3ICs4ODcsNiBAQCBleHRlcm4gdm9pZCB2bXdfZmlmb19jb21taXQoc3RydWN0
IHZtd19wcml2YXRlICpkZXZfcHJpdiwgdWludDMyX3QgYnl0ZXMpOwogZXh0ZXJuIHZvaWQgdm13
X2ZpZm9fY29tbWl0X2ZsdXNoKHN0cnVjdCB2bXdfcHJpdmF0ZSAqZGV2X3ByaXYsIHVpbnQzMl90
IGJ5dGVzKTsKIGV4dGVybiBpbnQgdm13X2ZpZm9fc2VuZF9mZW5jZShzdHJ1Y3Qgdm13X3ByaXZh
dGUgKmRldl9wcml2LAogCQkJICAgICAgIHVpbnQzMl90ICpzZXFubyk7Ci1leHRlcm4gdm9pZCB2
bXdfZmlmb19waW5nX2hvc3RfbG9ja2VkKHN0cnVjdCB2bXdfcHJpdmF0ZSAqLCB1aW50MzJfdCBy
ZWFzb24pOwogZXh0ZXJuIHZvaWQgdm13X2ZpZm9fcGluZ19ob3N0KHN0cnVjdCB2bXdfcHJpdmF0
ZSAqZGV2X3ByaXYsIHVpbnQzMl90IHJlYXNvbik7CiBleHRlcm4gYm9vbCB2bXdfZmlmb19oYXZl
XzNkKHN0cnVjdCB2bXdfcHJpdmF0ZSAqZGV2X3ByaXYpOwogZXh0ZXJuIGJvb2wgdm13X2ZpZm9f
aGF2ZV9waXRjaGxvY2soc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdik7CkBAIC05NDcsNyAr
OTMzLDYgQEAgZXh0ZXJuIHN0cnVjdCB0dG1fcGxhY2VtZW50IHZtd19tb2JfcGxhY2VtZW50Owog
ZXh0ZXJuIHN0cnVjdCB0dG1fcGxhY2VtZW50IHZtd19tb2JfbmVfcGxhY2VtZW50OwogZXh0ZXJu
IHN0cnVjdCB0dG1fcGxhY2VtZW50IHZtd19ub25maXhlZF9wbGFjZW1lbnQ7CiBleHRlcm4gc3Ry
dWN0IHR0bV9ib19kcml2ZXIgdm13X2JvX2RyaXZlcjsKLWV4dGVybiBpbnQgdm13X2RtYV9xdWll
c2NlbnQoc3RydWN0IGRybV9kZXZpY2UgKmRldik7CiBleHRlcm4gaW50IHZtd19ib19tYXBfZG1h
KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8pOwogZXh0ZXJuIHZvaWQgdm13X2JvX3VubWFw
X2RtYShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvKTsKIGV4dGVybiBjb25zdCBzdHJ1Y3Qg
dm13X3NnX3RhYmxlICoKQEAgLTEwODUsOCArMTA3MCw2IEBAIGludCB2bXdfZmJfb24oc3RydWN0
IHZtd19wcml2YXRlICp2bXdfcHJpdik7CiAKIGludCB2bXdfa21zX2luaXQoc3RydWN0IHZtd19w
cml2YXRlICpkZXZfcHJpdik7CiBpbnQgdm13X2ttc19jbG9zZShzdHJ1Y3Qgdm13X3ByaXZhdGUg
KmRldl9wcml2KTsKLWludCB2bXdfa21zX3NhdmVfdmdhKHN0cnVjdCB2bXdfcHJpdmF0ZSAqdm13
X3ByaXYpOwotaW50IHZtd19rbXNfcmVzdG9yZV92Z2Eoc3RydWN0IHZtd19wcml2YXRlICp2bXdf
cHJpdik7CiBpbnQgdm13X2ttc19jdXJzb3JfYnlwYXNzX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiAJCQkJc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYpOwogdm9p
ZCB2bXdfa21zX2N1cnNvcl9wb3N0X2V4ZWNidWYoc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJp
dik7CkBAIC0xMTM5LDcgKzExMjIsNiBAQCBpbnQgdm13X292ZXJsYXlfaW5pdChzdHJ1Y3Qgdm13
X3ByaXZhdGUgKmRldl9wcml2KTsKIGludCB2bXdfb3ZlcmxheV9jbG9zZShzdHJ1Y3Qgdm13X3By
aXZhdGUgKmRldl9wcml2KTsKIGludCB2bXdfb3ZlcmxheV9pb2N0bChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB2b2lkICpkYXRhLAogCQkgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGVfcHJpdik7
Ci1pbnQgdm13X292ZXJsYXlfc3RvcF9hbGwoc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdik7
CiBpbnQgdm13X292ZXJsYXlfcmVzdW1lX2FsbChzdHJ1Y3Qgdm13X3ByaXZhdGUgKmRldl9wcml2
KTsKIGludCB2bXdfb3ZlcmxheV9wYXVzZV9hbGwoc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJp
dik7CiBpbnQgdm13X292ZXJsYXlfY2xhaW0oc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiwg
dWludDMyX3QgKm91dCk7CkBAIC0xMTg2LDEwICsxMTY4LDYgQEAgZXh0ZXJuIHZvaWQgdm13X290
YWJsZXNfdGFrZWRvd24oc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdik7CiAKIGV4dGVybiBj
b25zdCBzdHJ1Y3Qgdm13X3VzZXJfcmVzb3VyY2VfY29udiAqdXNlcl9jb250ZXh0X2NvbnZlcnRl
cjsKIAotZXh0ZXJuIGludCB2bXdfY29udGV4dF9jaGVjayhzdHJ1Y3Qgdm13X3ByaXZhdGUgKmRl
dl9wcml2LAotCQkJICAgICBzdHJ1Y3QgdHRtX29iamVjdF9maWxlICp0ZmlsZSwKLQkJCSAgICAg
aW50IGlkLAotCQkJICAgICBzdHJ1Y3Qgdm13X3Jlc291cmNlICoqcF9yZXMpOwogZXh0ZXJuIGlu
dCB2bXdfY29udGV4dF9kZWZpbmVfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAq
ZGF0YSwKIAkJCQkgICAgc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYpOwogZXh0ZXJuIGludCB2
bXdfZXh0ZW5kZWRfY29udGV4dF9kZWZpbmVfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
dm9pZCAqZGF0YSwKQEAgLTEyMTksNyArMTE5Nyw2IEBAIHZtd19jb250ZXh0X2dldF9keF9xdWVy
eV9tb2Ioc3RydWN0IHZtd19yZXNvdXJjZSAqY3R4X3Jlcyk7CiAKIGV4dGVybiBjb25zdCBzdHJ1
Y3Qgdm13X3VzZXJfcmVzb3VyY2VfY29udiAqdXNlcl9zdXJmYWNlX2NvbnZlcnRlcjsKIAotZXh0
ZXJuIHZvaWQgdm13X3N1cmZhY2VfcmVzX2ZyZWUoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsK
IGV4dGVybiBpbnQgdm13X3N1cmZhY2VfZGVzdHJveV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2LCB2b2lkICpkYXRhLAogCQkJCSAgICAgc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYpOwog
ZXh0ZXJuIGludCB2bXdfc3VyZmFjZV9kZWZpbmVfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgdm9pZCAqZGF0YSwKQEAgLTEyMzAsMTEgKzEyMDcsNiBAQCBleHRlcm4gaW50IHZtd19nYl9z
dXJmYWNlX2RlZmluZV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAog
CQkJCSAgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGVfcHJpdik7CiBleHRlcm4gaW50IHZtd19n
Yl9zdXJmYWNlX3JlZmVyZW5jZV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpk
YXRhLAogCQkJCQkgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2KTsKLWV4dGVybiBpbnQgdm13
X3N1cmZhY2VfY2hlY2soc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiwKLQkJCSAgICAgc3Ry
dWN0IHR0bV9vYmplY3RfZmlsZSAqdGZpbGUsCi0JCQkgICAgIHVpbnQzMl90IGhhbmRsZSwgaW50
ICppZCk7Ci1leHRlcm4gaW50IHZtd19zdXJmYWNlX3ZhbGlkYXRlKHN0cnVjdCB2bXdfcHJpdmF0
ZSAqZGV2X3ByaXYsCi0JCQkJc3RydWN0IHZtd19zdXJmYWNlICpzcmYpOwogaW50IHZtd19zdXJm
YWNlX2diX3ByaXZfZGVmaW5lKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCQkgICAgICAgdWlu
dDMyX3QgdXNlcl9hY2NvdW50aW5nX3NpemUsCiAJCQkgICAgICAgU1ZHQTNkU3VyZmFjZUFsbEZs
YWdzIHN2Z2EzZF9mbGFncywKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13
Z2Z4X2ttcy5jIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfa21zLmMKaW5kZXggZjQ3
ZDU3MTBjYzk1MS4uZGJkODBmY2YwYzZhYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Zt
d2dmeC92bXdnZnhfa21zLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfa21z
LmMKQEAgLTE4OTcsODcgKzE4OTcsNiBAQCBpbnQgdm13X2ttc193cml0ZV9zdmdhKHN0cnVjdCB2
bXdfcHJpdmF0ZSAqdm13X3ByaXYsCiAJcmV0dXJuIDA7CiB9CiAKLWludCB2bXdfa21zX3NhdmVf
dmdhKHN0cnVjdCB2bXdfcHJpdmF0ZSAqdm13X3ByaXYpCi17Ci0Jc3RydWN0IHZtd192Z2FfdG9w
b2xvZ3lfc3RhdGUgKnNhdmU7Ci0JdWludDMyX3QgaTsKLQotCXZtd19wcml2LT52Z2Ffd2lkdGgg
PSB2bXdfcmVhZCh2bXdfcHJpdiwgU1ZHQV9SRUdfV0lEVEgpOwotCXZtd19wcml2LT52Z2FfaGVp
Z2h0ID0gdm13X3JlYWQodm13X3ByaXYsIFNWR0FfUkVHX0hFSUdIVCk7Ci0Jdm13X3ByaXYtPnZn
YV9icHAgPSB2bXdfcmVhZCh2bXdfcHJpdiwgU1ZHQV9SRUdfQklUU19QRVJfUElYRUwpOwotCWlm
ICh2bXdfcHJpdi0+Y2FwYWJpbGl0aWVzICYgU1ZHQV9DQVBfUElUQ0hMT0NLKQotCQl2bXdfcHJp
di0+dmdhX3BpdGNobG9jayA9Ci0JCSAgdm13X3JlYWQodm13X3ByaXYsIFNWR0FfUkVHX1BJVENI
TE9DSyk7Ci0JZWxzZSBpZiAodm13X2ZpZm9faGF2ZV9waXRjaGxvY2sodm13X3ByaXYpKQotCQl2
bXdfcHJpdi0+dmdhX3BpdGNobG9jayA9IHZtd19tbWlvX3JlYWQodm13X3ByaXYtPm1taW9fdmly
dCArCi0JCQkJCQkJU1ZHQV9GSUZPX1BJVENITE9DSyk7Ci0KLQlpZiAoISh2bXdfcHJpdi0+Y2Fw
YWJpbGl0aWVzICYgU1ZHQV9DQVBfRElTUExBWV9UT1BPTE9HWSkpCi0JCXJldHVybiAwOwotCi0J
dm13X3ByaXYtPm51bV9kaXNwbGF5cyA9IHZtd19yZWFkKHZtd19wcml2LAotCQkJCQkgIFNWR0Ff
UkVHX05VTV9HVUVTVF9ESVNQTEFZUyk7Ci0KLQlpZiAodm13X3ByaXYtPm51bV9kaXNwbGF5cyA9
PSAwKQotCQl2bXdfcHJpdi0+bnVtX2Rpc3BsYXlzID0gMTsKLQotCWZvciAoaSA9IDA7IGkgPCB2
bXdfcHJpdi0+bnVtX2Rpc3BsYXlzOyArK2kpIHsKLQkJc2F2ZSA9ICZ2bXdfcHJpdi0+dmdhX3Nh
dmVbaV07Ci0JCXZtd193cml0ZSh2bXdfcHJpdiwgU1ZHQV9SRUdfRElTUExBWV9JRCwgaSk7Ci0J
CXNhdmUtPnByaW1hcnkgPSB2bXdfcmVhZCh2bXdfcHJpdiwgU1ZHQV9SRUdfRElTUExBWV9JU19Q
UklNQVJZKTsKLQkJc2F2ZS0+cG9zX3ggPSB2bXdfcmVhZCh2bXdfcHJpdiwgU1ZHQV9SRUdfRElT
UExBWV9QT1NJVElPTl9YKTsKLQkJc2F2ZS0+cG9zX3kgPSB2bXdfcmVhZCh2bXdfcHJpdiwgU1ZH
QV9SRUdfRElTUExBWV9QT1NJVElPTl9ZKTsKLQkJc2F2ZS0+d2lkdGggPSB2bXdfcmVhZCh2bXdf
cHJpdiwgU1ZHQV9SRUdfRElTUExBWV9XSURUSCk7Ci0JCXNhdmUtPmhlaWdodCA9IHZtd19yZWFk
KHZtd19wcml2LCBTVkdBX1JFR19ESVNQTEFZX0hFSUdIVCk7Ci0JCXZtd193cml0ZSh2bXdfcHJp
diwgU1ZHQV9SRUdfRElTUExBWV9JRCwgU1ZHQV9JRF9JTlZBTElEKTsKLQkJaWYgKGkgPT0gMCAm
JiB2bXdfcHJpdi0+bnVtX2Rpc3BsYXlzID09IDEgJiYKLQkJICAgIHNhdmUtPndpZHRoID09IDAg
JiYgc2F2ZS0+aGVpZ2h0ID09IDApIHsKLQotCQkJLyoKLQkJCSAqIEl0IHNob3VsZCBiZSBmYWly
bHkgc2FmZSB0byBhc3N1bWUgdGhhdCB0aGVzZQotCQkJICogdmFsdWVzIGFyZSB1bmluaXRpYWxp
emVkLgotCQkJICovCi0KLQkJCXNhdmUtPndpZHRoID0gdm13X3ByaXYtPnZnYV93aWR0aCAtIHNh
dmUtPnBvc194OwotCQkJc2F2ZS0+aGVpZ2h0ID0gdm13X3ByaXYtPnZnYV9oZWlnaHQgLSBzYXZl
LT5wb3NfeTsKLQkJfQotCX0KLQotCXJldHVybiAwOwotfQotCi1pbnQgdm13X2ttc19yZXN0b3Jl
X3ZnYShzdHJ1Y3Qgdm13X3ByaXZhdGUgKnZtd19wcml2KQotewotCXN0cnVjdCB2bXdfdmdhX3Rv
cG9sb2d5X3N0YXRlICpzYXZlOwotCXVpbnQzMl90IGk7Ci0KLQl2bXdfd3JpdGUodm13X3ByaXYs
IFNWR0FfUkVHX1dJRFRILCB2bXdfcHJpdi0+dmdhX3dpZHRoKTsKLQl2bXdfd3JpdGUodm13X3By
aXYsIFNWR0FfUkVHX0hFSUdIVCwgdm13X3ByaXYtPnZnYV9oZWlnaHQpOwotCXZtd193cml0ZSh2
bXdfcHJpdiwgU1ZHQV9SRUdfQklUU19QRVJfUElYRUwsIHZtd19wcml2LT52Z2FfYnBwKTsKLQlp
ZiAodm13X3ByaXYtPmNhcGFiaWxpdGllcyAmIFNWR0FfQ0FQX1BJVENITE9DSykKLQkJdm13X3dy
aXRlKHZtd19wcml2LCBTVkdBX1JFR19QSVRDSExPQ0ssCi0JCQkgIHZtd19wcml2LT52Z2FfcGl0
Y2hsb2NrKTsKLQllbHNlIGlmICh2bXdfZmlmb19oYXZlX3BpdGNobG9jayh2bXdfcHJpdikpCi0J
CXZtd19tbWlvX3dyaXRlKHZtd19wcml2LT52Z2FfcGl0Y2hsb2NrLAotCQkJICAgICAgIHZtd19w
cml2LT5tbWlvX3ZpcnQgKyBTVkdBX0ZJRk9fUElUQ0hMT0NLKTsKLQotCWlmICghKHZtd19wcml2
LT5jYXBhYmlsaXRpZXMgJiBTVkdBX0NBUF9ESVNQTEFZX1RPUE9MT0dZKSkKLQkJcmV0dXJuIDA7
Ci0KLQlmb3IgKGkgPSAwOyBpIDwgdm13X3ByaXYtPm51bV9kaXNwbGF5czsgKytpKSB7Ci0JCXNh
dmUgPSAmdm13X3ByaXYtPnZnYV9zYXZlW2ldOwotCQl2bXdfd3JpdGUodm13X3ByaXYsIFNWR0Ff
UkVHX0RJU1BMQVlfSUQsIGkpOwotCQl2bXdfd3JpdGUodm13X3ByaXYsIFNWR0FfUkVHX0RJU1BM
QVlfSVNfUFJJTUFSWSwgc2F2ZS0+cHJpbWFyeSk7Ci0JCXZtd193cml0ZSh2bXdfcHJpdiwgU1ZH
QV9SRUdfRElTUExBWV9QT1NJVElPTl9YLCBzYXZlLT5wb3NfeCk7Ci0JCXZtd193cml0ZSh2bXdf
cHJpdiwgU1ZHQV9SRUdfRElTUExBWV9QT1NJVElPTl9ZLCBzYXZlLT5wb3NfeSk7Ci0JCXZtd193
cml0ZSh2bXdfcHJpdiwgU1ZHQV9SRUdfRElTUExBWV9XSURUSCwgc2F2ZS0+d2lkdGgpOwotCQl2
bXdfd3JpdGUodm13X3ByaXYsIFNWR0FfUkVHX0RJU1BMQVlfSEVJR0hULCBzYXZlLT5oZWlnaHQp
OwotCQl2bXdfd3JpdGUodm13X3ByaXYsIFNWR0FfUkVHX0RJU1BMQVlfSUQsIFNWR0FfSURfSU5W
QUxJRCk7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KIGJvb2wgdm13X2ttc192YWxpZGF0ZV9tb2Rl
X3ZyYW0oc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiwKIAkJCQl1aW50MzJfdCBwaXRjaCwK
IAkJCQl1aW50MzJfdCBoZWlnaHQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4
L3Ztd2dmeF9vdmVybGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9vdmVybGF5
LmMKaW5kZXggZmRiNTJmNmQyOWZiMS4uY2Q3ZWQxNjUwZDYwYyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfb3ZlcmxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92
bXdnZngvdm13Z2Z4X292ZXJsYXkuYwpAQCAtMzUzLDM3ICszNTMsNiBAQCBzdGF0aWMgaW50IHZt
d19vdmVybGF5X3VwZGF0ZV9zdHJlYW0oc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiwKIAly
ZXR1cm4gMDsKIH0KIAotLyoqCi0gKiBTdG9wIGFsbCBzdHJlYW1zLgotICoKLSAqIFVzZWQgYnkg
dGhlIGZiIGNvZGUgd2hlbiBzdGFydGluZy4KLSAqCi0gKiBUYWtlcyB0aGUgb3ZlcmxheSBsb2Nr
LgotICovCi1pbnQgdm13X292ZXJsYXlfc3RvcF9hbGwoc3RydWN0IHZtd19wcml2YXRlICpkZXZf
cHJpdikKLXsKLQlzdHJ1Y3Qgdm13X292ZXJsYXkgKm92ZXJsYXkgPSBkZXZfcHJpdi0+b3Zlcmxh
eV9wcml2OwotCWludCBpLCByZXQ7Ci0KLQlpZiAoIW92ZXJsYXkpCi0JCXJldHVybiAwOwotCi0J
bXV0ZXhfbG9jaygmb3ZlcmxheS0+bXV0ZXgpOwotCi0JZm9yIChpID0gMDsgaSA8IFZNV19NQVhf
TlVNX1NUUkVBTVM7IGkrKykgewotCQlzdHJ1Y3Qgdm13X3N0cmVhbSAqc3RyZWFtID0gJm92ZXJs
YXktPnN0cmVhbVtpXTsKLQkJaWYgKCFzdHJlYW0tPmJ1ZikKLQkJCWNvbnRpbnVlOwotCi0JCXJl
dCA9IHZtd19vdmVybGF5X3N0b3AoZGV2X3ByaXYsIGksIGZhbHNlLCBmYWxzZSk7Ci0JCVdBUk5f
T04ocmV0ICE9IDApOwotCX0KLQotCW11dGV4X3VubG9jaygmb3ZlcmxheS0+bXV0ZXgpOwotCi0J
cmV0dXJuIDA7Ci19Ci0KIC8qKgogICogVHJ5IHRvIHJlc3VtZSBhbGwgcGF1c2VkIHN0cmVhbXMu
CiAgKgotLSAKMi4yNS4xCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9w
Lm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1k
ZXZlbAo=
