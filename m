Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5D8D9B9A46
	for <lists+dri-devel@lfdr.de>; Sat, 21 Sep 2019 01:20:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9413B6FE2B;
	Fri, 20 Sep 2019 23:20:33 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-vs1-xe4a.google.com (mail-vs1-xe4a.google.com
 [IPv6:2607:f8b0:4864:20::e4a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DA7066FE2A
 for <dri-devel@lists.freedesktop.org>; Fri, 20 Sep 2019 23:20:27 +0000 (UTC)
Received: by mail-vs1-xe4a.google.com with SMTP id v23so1066604vsc.12
 for <dri-devel@lists.freedesktop.org>; Fri, 20 Sep 2019 16:20:27 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=MoRZNBML3FTd+qJUWWEzRGurc6zGA2PFJ4YYMmhYq8w=;
 b=XZW8qoENPuU6f4nwDRl/ax0HO/UWOJeefgIAKiiwruUA/wafBYemhatRLT6Rec0j8/
 cIcvnSkGrFdoUNeKYo7gLDSJf5ZrEcaeUtKd52Jtdap8rcg6CuYr69/R040zYFnSmlJe
 9bnzfevWcB8CqYUfL1gePHARk4ow54RInGp0c0MWjCidh7UZi1bMgrxiEHrsoc66yKwC
 41CxxFxFR4sjRgD1zZnb375KL/iYCvGqDuUlyRgcjd9Wexkx9qJEIOAH4iPltrrQD4xO
 27zRdq6LZCDTwvmWN/eeC4J5KKZYDghTHieyQHn+LvOS0xkjLL2Pi1yoPdFiUpCZrt8V
 RT1g==
X-Gm-Message-State: APjAAAVpYngWx+Prtz3c9bjLtclNWUFyI9PHqD5zSzOKf01OcOhzILBV
 G+0t1xTBwHA5695jOxY/ZCb2b3kibV61zQLhJuIPpg==
X-Google-Smtp-Source: APXvYqxh/XF6EytvpXAuTcB9MuYEzT/8a/KnTWph0g1pmyC4nP+EoE7doCRcqlYeBa5vwa4tY18HJyf7BxU4c7Ppp38TYg==
X-Received: by 2002:a1f:c2c3:: with SMTP id s186mr1332248vkf.88.1569021626260; 
 Fri, 20 Sep 2019 16:20:26 -0700 (PDT)
Date: Fri, 20 Sep 2019 16:19:21 -0700
In-Reply-To: <20190920231923.141900-1-brendanhiggins@google.com>
Message-Id: <20190920231923.141900-18-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190920231923.141900-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.351.gc4317032e6-goog
Subject: [PATCH v16 17/19] kernel/sysctl-test: Add null pointer test for
 sysctl.c:proc_dointvec()
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=MoRZNBML3FTd+qJUWWEzRGurc6zGA2PFJ4YYMmhYq8w=;
 b=LQExcKL7au0xN94dOBkv9WqVESixMPnVgfYYyl3JdYrP+RhFwyOjcPqC47o6b4XnFD
 vOZ1wDFupUcnWyraJqXKOfa+ELZc2hDz4QRK9RGkMWfkIwI2LVtYlBWe185UAXsGsyw2
 l30lrFz0X7SrRrkdcZuCh2tHZbcnPp9s+eDi3eEpqj9p4LkwoJhqOw5EvODTf4a2NFfd
 lrMOgSeJjRg7U+NJ1KYqedj9D469fRwtefTh2nzrQFseuIirpltAgbXukw8nnHXrs+1F
 y3FU6peqxJdrcB8/zlbRi8pTAR62sXvEbGUbKo5dHaRIOqpNmrW+Lk1AZuiTOf+sqeHq
 UdLQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com,
 Iurii Zaikin <yzaikin@google.com>, jdike@addtoit.com, dan.carpenter@oracle.com,
 devicetree@vger.kernel.org, linux-kbuild@vger.kernel.org, Tim.Bird@sony.com,
 linux-um@lists.infradead.org, rostedt@goodmis.org, julia.lawall@lip6.fr,
 kunit-dev@googlegroups.com, richard@nod.at, torvalds@linux-foundation.org,
 rdunlap@infradead.org, linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSXVyaWkgWmFpa2luIDx5emFpa2luQGdvb2dsZS5jb20+CgpLVW5pdCB0ZXN0cyBmb3Ig
aW5pdGlhbGl6ZWQgZGF0YSBiZWhhdmlvciBvZiBwcm9jX2RvaW50dmVjIHRoYXQgaXMKZXhwbGlj
aXRseSBjaGVja2VkIGluIHRoZSBjb2RlLiBJbmNsdWRlcyBiYXNpYyBwYXJzaW5nIHRlc3RzIGlu
Y2x1ZGluZwppbnQgbWluL21heCBvdmVyZmxvdy4KClNpZ25lZC1vZmYtYnk6IEl1cmlpIFphaWtp
biA8eXphaWtpbkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBCcmVuZGFuIEhpZ2dpbnMgPGJy
ZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBHcmVnIEtyb2FoLUhhcnRtYW4g
PGdyZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpSZXZpZXdlZC1ieTogTG9nYW4gR3VudGhvcnBl
IDxsb2dhbmdAZGVsdGF0ZWUuY29tPgpBY2tlZC1ieTogTHVpcyBDaGFtYmVybGFpbiA8bWNncm9m
QGtlcm5lbC5vcmc+ClJldmlld2VkLWJ5OiBTdGVwaGVuIEJveWQgPHNib3lkQGtlcm5lbC5vcmc+
Ci0tLQoga2VybmVsL01ha2VmaWxlICAgICAgfCAgIDIgKwoga2VybmVsL3N5c2N0bC10ZXN0LmMg
fCAzOTIgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogbGliL0tj
b25maWcuZGVidWcgICAgfCAgMTEgKysKIDMgZmlsZXMgY2hhbmdlZCwgNDA1IGluc2VydGlvbnMo
KykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBrZXJuZWwvc3lzY3RsLXRlc3QuYwoKZGlmZiAtLWdpdCBh
L2tlcm5lbC9NYWtlZmlsZSBiL2tlcm5lbC9NYWtlZmlsZQppbmRleCBlZjBkOTVhMTkwYjQuLjYz
ZTllYTYxMjJjMiAxMDA2NDQKLS0tIGEva2VybmVsL01ha2VmaWxlCisrKyBiL2tlcm5lbC9NYWtl
ZmlsZQpAQCAtMTEzLDYgKzExMyw4IEBAIG9iai0kKENPTkZJR19UT1JUVVJFX1RFU1QpICs9IHRv
cnR1cmUubwogb2JqLSQoQ09ORklHX0hBU19JT01FTSkgKz0gaW9tZW0ubwogb2JqLSQoQ09ORklH
X1JTRVEpICs9IHJzZXEubwogCitvYmotJChDT05GSUdfU1lTQ1RMX0tVTklUX1RFU1QpICs9IHN5
c2N0bC10ZXN0Lm8KKwogb2JqLSQoQ09ORklHX0dDQ19QTFVHSU5fU1RBQ0tMRUFLKSArPSBzdGFj
a2xlYWsubwogS0FTQU5fU0FOSVRJWkVfc3RhY2tsZWFrLm8gOj0gbgogS0NPVl9JTlNUUlVNRU5U
X3N0YWNrbGVhay5vIDo9IG4KZGlmZiAtLWdpdCBhL2tlcm5lbC9zeXNjdGwtdGVzdC5jIGIva2Vy
bmVsL3N5c2N0bC10ZXN0LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAw
Li4yYTYzMjQxYTg0NTMKLS0tIC9kZXYvbnVsbAorKysgYi9rZXJuZWwvc3lzY3RsLXRlc3QuYwpA
QCAtMCwwICsxLDM5MiBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8q
CisgKiBLVW5pdCB0ZXN0IG9mIHByb2Mgc3lzY3RsLgorICovCisKKyNpbmNsdWRlIDxrdW5pdC90
ZXN0Lmg+CisjaW5jbHVkZSA8bGludXgvc3lzY3RsLmg+CisKKyNkZWZpbmUgS1VOSVRfUFJPQ19S
RUFEIDAKKyNkZWZpbmUgS1VOSVRfUFJPQ19XUklURSAxCisKK3N0YXRpYyBpbnQgaV96ZXJvOwor
c3RhdGljIGludCBpX29uZV9odW5kcmVkID0gMTAwOworCisvKgorICogVGVzdCB0aGF0IHByb2Nf
ZG9pbnR2ZWMgd2lsbCBub3QgdHJ5IHRvIHVzZSBhIE5VTEwgLmRhdGEgZmllbGQgZXZlbiB3aGVu
IHRoZQorICogbGVuZ3RoIGlzIG5vbi16ZXJvLgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVz
dF9hcGlfZG9pbnR2ZWNfbnVsbF90YmxfZGF0YShzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJc3Ry
dWN0IGN0bF90YWJsZSBudWxsX2RhdGFfdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAor
CQkvKgorCQkgKiBIZXJlIHdlIGFyZSB0ZXN0aW5nIHRoYXQgcHJvY19kb2ludHZlYyBiZWhhdmVz
IGNvcnJlY3RseSB3aGVuCisJCSAqIHdlIGdpdmUgaXQgYSBOVUxMIC5kYXRhIGZpZWxkLiBOb3Jt
YWxseSB0aGlzIHdvdWxkIHBvaW50IHRvIGEKKwkJICogcGllY2Ugb2YgbWVtb3J5IHdoZXJlIHRo
ZSB2YWx1ZSB3b3VsZCBiZSBzdG9yZWQuCisJCSAqLworCQkuZGF0YQkJPSBOVUxMLAorCQkubWF4
bGVuCQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0g
cHJvY19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAg
PSAmaV9vbmVfaHVuZHJlZCwKKwl9OworCS8qCisJICogcHJvY19kb2ludHZlYyBleHBlY3RzIGEg
YnVmZmVyIGluIHVzZXIgc3BhY2UsIHNvIHdlIGFsbG9jYXRlIG9uZS4gV2UKKwkgKiBhbHNvIG5l
ZWQgdG8gY2FzdCBpdCB0byBfX3VzZXIgc28gc3BhcnNlIGRvZXNuJ3QgZ2V0IG1hZC4KKwkgKi8K
Kwl2b2lkIF9fdXNlciAqYnVmZmVyID0gKHZvaWQgX191c2VyICopa3VuaXRfa3phbGxvYyh0ZXN0
LCBzaXplb2YoaW50KSwKKwkJCQkJCQkgICBHRlBfVVNFUik7CisJc2l6ZV90IGxlbjsKKwlsb2Zm
X3QgcG9zOworCisJLyoKKwkgKiBXZSBkb24ndCBjYXJlIHdoYXQgdGhlIHN0YXJ0aW5nIGxlbmd0
aCBpcyBzaW5jZSBwcm9jX2RvaW50dmVjIHNob3VsZAorCSAqIG5vdCB0cnkgdG8gcmVhZCBiZWNh
dXNlIC5kYXRhIGlzIE5VTEwuCisJICovCisJbGVuID0gMTIzNDsKKwlLVU5JVF9FWFBFQ1RfRVEo
dGVzdCwgMCwgcHJvY19kb2ludHZlYygmbnVsbF9kYXRhX3RhYmxlLAorCQkJCQkgICAgICAgS1VO
SVRfUFJPQ19SRUFELCBidWZmZXIsICZsZW4sCisJCQkJCSAgICAgICAmcG9zKSk7CisJS1VOSVRf
RVhQRUNUX0VRKHRlc3QsIChzaXplX3QpMCwgbGVuKTsKKworCS8qCisJICogU2VlIGFib3ZlLgor
CSAqLworCWxlbiA9IDEyMzQ7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDAsIHByb2NfZG9pbnR2
ZWMoJm51bGxfZGF0YV90YWJsZSwKKwkJCQkJICAgICAgIEtVTklUX1BST0NfV1JJVEUsIGJ1ZmZl
ciwgJmxlbiwKKwkJCQkJICAgICAgICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgKHNp
emVfdCkwLCBsZW4pOworfQorCisvKgorICogU2ltaWxhciB0byB0aGUgcHJldmlvdXMgdGVzdCwg
d2UgY3JlYXRlIGEgc3RydWN0IGN0cmxfdGFibGUgdGhhdCBoYXMgYSAuZGF0YQorICogZmllbGQg
dGhhdCBwcm9jX2RvaW50dmVjIGNhbm5vdCBkbyBhbnl0aGluZyB3aXRoOyBob3dldmVyLCB0aGlz
IHRpbWUgaXQgaXMKKyAqIGJlY2F1c2Ugd2UgdGVsbCBwcm9jX2RvaW50dmVjIHRoYXQgdGhlIHNp
emUgaXMgMC4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxl
X21heGxlbl91bnNldChzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAwOworCXN0
cnVjdCBjdGxfdGFibGUgZGF0YV9tYXhsZW5fdW5zZXRfdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9
ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLyoKKwkJICogU28gLmRhdGEgaXMgbm8gbG9u
Z2VyIE5VTEwsIGJ1dCB3ZSB0ZWxsIHByb2NfZG9pbnR2ZWMgaXRzCisJCSAqIGxlbmd0aCBpcyAw
LCBzbyBpdCBzdGlsbCBzaG91bGRuJ3QgdHJ5IHRvIHVzZSBpdC4KKwkJICovCisJCS5tYXhsZW4J
CT0gMCwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMs
CisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRy
ZWQsCisJfTsKKwl2b2lkIF9fdXNlciAqYnVmZmVyID0gKHZvaWQgX191c2VyICopa3VuaXRfa3ph
bGxvYyh0ZXN0LCBzaXplb2YoaW50KSwKKwkJCQkJCQkgICBHRlBfVVNFUik7CisJc2l6ZV90IGxl
bjsKKwlsb2ZmX3QgcG9zOworCisJLyoKKwkgKiBBcyBiZWZvcmUsIHdlIGRvbid0IGNhcmUgd2hh
dCBidWZmZXIgbGVuZ3RoIGlzIGJlY2F1c2UgcHJvY19kb2ludHZlYworCSAqIGNhbm5vdCBkbyBh
bnl0aGluZyBiZWNhdXNlIGl0cyBpbnRlcm5hbCAuZGF0YSBidWZmZXIgaGFzIHplcm8gbGVuZ3Ro
LgorCSAqLworCWxlbiA9IDEyMzQ7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDAsIHByb2NfZG9p
bnR2ZWMoJmRhdGFfbWF4bGVuX3Vuc2V0X3RhYmxlLAorCQkJCQkgICAgICAgS1VOSVRfUFJPQ19S
RUFELCBidWZmZXIsICZsZW4sCisJCQkJCSAgICAgICAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIChzaXplX3QpMCwgbGVuKTsKKworCS8qCisJICogU2VlIHByZXZpb3VzIGNvbW1lbnQu
CisJICovCisJbGVuID0gMTIzNDsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2lu
dHZlYygmZGF0YV9tYXhsZW5fdW5zZXRfdGFibGUsCisJCQkJCSAgICAgICBLVU5JVF9QUk9DX1dS
SVRFLCBidWZmZXIsICZsZW4sCisJCQkJCSAgICAgICAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIChzaXplX3QpMCwgbGVuKTsKK30KKworLyoKKyAqIEhlcmUgd2UgcHJvdmlkZSBhIHZh
bGlkIHN0cnVjdCBjdGxfdGFibGUsIGJ1dCB3ZSB0cnkgdG8gcmVhZCBhbmQgd3JpdGUgZnJvbQor
ICogaXQgdXNpbmcgYSBidWZmZXIgb2YgemVybyBsZW5ndGgsIHNvIGl0IHNob3VsZCBzdGlsbCBm
YWlsIGluIGEgc2ltaWxhciB3YXkgYXMKKyAqIGJlZm9yZS4KKyAqLworc3RhdGljIHZvaWQgc3lz
Y3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxlX2xlbl9pc196ZXJvKHN0cnVjdCBrdW5pdCAqdGVz
dCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJLyogR29vZCB0YWJsZS4gKi8KKwlzdHJ1Y3QgY3RsX3Rh
YmxlIHRhYmxlID0geworCQkucHJvY25hbWUgPSAiZm9vIiwKKwkJLmRhdGEJCT0gJmRhdGEsCisJ
CS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJCS5tb2RlCQk9IDA2NDQsCisJCS5wcm9jX2hhbmRs
ZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0cmExCQk9ICZpX3plcm8sCisJCS5leHRyYTIgICAg
ICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07CisJdm9pZCBfX3VzZXIgKmJ1ZmZlciA9ICh2b2lk
IF9fdXNlciAqKWt1bml0X2t6YWxsb2ModGVzdCwgc2l6ZW9mKGludCksCisJCQkJCQkJICAgR0ZQ
X1VTRVIpOworCS8qCisJICogSG93ZXZlciwgbm93IG91ciByZWFkL3dyaXRlIGJ1ZmZlciBoYXMg
emVybyBsZW5ndGguCisJICovCisJc2l6ZV90IGxlbiA9IDA7CisJbG9mZl90IHBvczsKKworCUtV
TklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19S
RUFELCBidWZmZXIsCisJCQkJCSAgICAgICAmbGVuLCAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIChzaXplX3QpMCwgbGVuKTsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9j
X2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwgYnVmZmVyLAorCQkJCQkgICAgICAg
JmxlbiwgJnBvcykpOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAoc2l6ZV90KTAsIGxlbik7Cit9
CisKKy8qCisgKiBUZXN0IHRoYXQgcHJvY19kb2ludHZlYyByZWZ1c2VzIHRvIHJlYWQgd2hlbiB0
aGUgZmlsZSBwb3NpdGlvbiBpcyBub24temVyby4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rl
c3RfYXBpX2RvaW50dmVjX3RhYmxlX3JlYWRfYnV0X3Bvc2l0aW9uX3NldCgKKwkJc3RydWN0IGt1
bml0ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwkvKiBHb29kIHRhYmxlLiAqLworCXN0cnVj
dCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAm
ZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnBy
b2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4
dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsKKwl2b2lkIF9fdXNlciAqYnVmZmVy
ID0gKHZvaWQgX191c2VyICopa3VuaXRfa3phbGxvYyh0ZXN0LCBzaXplb2YoaW50KSwKKwkJCQkJ
CQkgICBHRlBfVVNFUik7CisJLyoKKwkgKiBXZSBkb24ndCBjYXJlIGFib3V0IG91ciBidWZmZXIg
bGVuZ3RoIGJlY2F1c2Ugd2Ugc3RhcnQgb2ZmIHdpdGggYQorCSAqIG5vbi16ZXJvIGZpbGUgcG9z
aXRpb24uCisJICovCisJc2l6ZV90IGxlbiA9IDEyMzQ7CisJLyoKKwkgKiBwcm9jX2RvaW50dmVj
IHNob3VsZCByZWZ1c2UgdG8gcmVhZCBpbnRvIHRoZSBidWZmZXIgc2luY2UgdGhlIGZpbGUKKwkg
KiBwb3MgaXMgbm9uLXplcm8uCisJICovCisJbG9mZl90IHBvcyA9IDE7CisKKwlLVU5JVF9FWFBF
Q1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklUX1BST0NfUkVBRCwgYnVm
ZmVyLAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAo
c2l6ZV90KTAsIGxlbik7Cit9CisKKy8qCisgKiBUZXN0IHRoYXQgd2UgY2FuIHJlYWQgYSB0d28g
ZGlnaXQgbnVtYmVyIGluIGEgc3VmZmljaWVudGx5IHNpemUgYnVmZmVyLgorICogTm90aGluZyBm
YW5jeS4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9oYXBweV9z
aW5nbGVfcG9zaXRpdmUoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwkv
KiBHb29kIHRhYmxlLiAqLworCXN0cnVjdCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFt
ZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwK
KwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5l
eHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJ
fTsKKwlzaXplX3QgbGVuID0gNDsKKwlsb2ZmX3QgcG9zID0gMDsKKwljaGFyICpidWZmZXIgPSBr
dW5pdF9remFsbG9jKHRlc3QsIGxlbiwgR0ZQX1VTRVIpOworCWNoYXIgX191c2VyICp1c2VyX2J1
ZmZlciA9IChjaGFyIF9fdXNlciAqKWJ1ZmZlcjsKKwkvKiBTdG9yZSAxMyBpbiB0aGUgZGF0YSBm
aWVsZC4gKi8KKwkqKChpbnQgKil0YWJsZS5kYXRhKSA9IDEzOworCisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIDAsIHByb2NfZG9pbnR2ZWMoJnRhYmxlLCBLVU5JVF9QUk9DX1JFQUQsCisJCQkJCSAg
ICAgICB1c2VyX2J1ZmZlciwgJmxlbiwgJnBvcykpOworCUtVTklUX0FTU0VSVF9FUSh0ZXN0LCAo
c2l6ZV90KTMsIGxlbik7CisJYnVmZmVyW2xlbl0gPSAnXDAnOworCS8qIEFuZCB3ZSByZWFkIDEz
IGJhY2sgb3V0LiAqLworCUtVTklUX0VYUEVDVF9TVFJFUSh0ZXN0LCAiMTNcbiIsIGJ1ZmZlcik7
Cit9CisKKy8qCisgKiBTYW1lIGFzIHByZXZpb3VzIHRlc3QsIGp1c3Qgbm93IHdpdGggbmVnYXRp
dmUgbnVtYmVycy4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9o
YXBweV9zaW5nbGVfbmVnYXRpdmUoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWludCBkYXRhID0g
MDsKKwkvKiBHb29kIHRhYmxlLiAqLworCXN0cnVjdCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5w
cm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2Yo
aW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMs
CisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRy
ZWQsCisJfTsKKwlzaXplX3QgbGVuID0gNTsKKwlsb2ZmX3QgcG9zID0gMDsKKwljaGFyICpidWZm
ZXIgPSBrdW5pdF9remFsbG9jKHRlc3QsIGxlbiwgR0ZQX1VTRVIpOworCWNoYXIgX191c2VyICp1
c2VyX2J1ZmZlciA9IChjaGFyIF9fdXNlciAqKWJ1ZmZlcjsKKwkqKChpbnQgKil0YWJsZS5kYXRh
KSA9IC0xNjsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZ0YWJs
ZSwgS1VOSVRfUFJPQ19SRUFELAorCQkJCQkgICAgICAgdXNlcl9idWZmZXIsICZsZW4sICZwb3Mp
KTsKKwlLVU5JVF9BU1NFUlRfRVEodGVzdCwgKHNpemVfdCk0LCBsZW4pOworCWJ1ZmZlcltsZW5d
ID0gJ1wwJzsKKwlLVU5JVF9FWFBFQ1RfU1RSRVEodGVzdCwgIi0xNlxuIiwgKGNoYXIgKilidWZm
ZXIpOworfQorCisvKgorICogVGVzdCB0aGF0IGEgc2ltcGxlIHBvc2l0aXZlIHdyaXRlIHdvcmtz
LgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9kb2ludHZlY193cml0ZV9oYXBweV9zaW5n
bGVfcG9zaXRpdmUoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwkvKiBH
b29kIHRhYmxlLiAqLworCXN0cnVjdCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9
ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJ
Lm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRy
YTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsK
KwljaGFyIGlucHV0W10gPSAiOSI7CisJc2l6ZV90IGxlbiA9IHNpemVvZihpbnB1dCkgLSAxOwor
CWxvZmZfdCBwb3MgPSAwOworCWNoYXIgKmJ1ZmZlciA9IGt1bml0X2t6YWxsb2ModGVzdCwgbGVu
LCBHRlBfVVNFUik7CisJY2hhciBfX3VzZXIgKnVzZXJfYnVmZmVyID0gKGNoYXIgX191c2VyICop
YnVmZmVyOworCisJbWVtY3B5KGJ1ZmZlciwgaW5wdXQsIGxlbik7CisKKwlLVU5JVF9FWFBFQ1Rf
RVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklUX1BST0NfV1JJVEUsCisJCQkJ
CSAgICAgICB1c2VyX2J1ZmZlciwgJmxlbiwgJnBvcykpOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0
LCBzaXplb2YoaW5wdXQpIC0gMSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgc2l6ZW9m
KGlucHV0KSAtIDEsIChzaXplX3QpcG9zKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgOSwgKigo
aW50ICopdGFibGUuZGF0YSkpOworfQorCisvKgorICogU2FtZSBhcyBwcmV2aW91cyB0ZXN0LCBi
dXQgbm93IHdpdGggbmVnYXRpdmUgbnVtYmVycy4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rl
c3RfZG9pbnR2ZWNfd3JpdGVfaGFwcHlfc2luZ2xlX25lZ2F0aXZlKHN0cnVjdCBrdW5pdCAqdGVz
dCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnBy
b2NuYW1lID0gImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihp
bnQpLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywK
KwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJl
ZCwKKwl9OworCWNoYXIgaW5wdXRbXSA9ICItOSI7CisJc2l6ZV90IGxlbiA9IHNpemVvZihpbnB1
dCkgLSAxOworCWxvZmZfdCBwb3MgPSAwOworCWNoYXIgKmJ1ZmZlciA9IGt1bml0X2t6YWxsb2Mo
dGVzdCwgbGVuLCBHRlBfVVNFUik7CisJY2hhciBfX3VzZXIgKnVzZXJfYnVmZmVyID0gKGNoYXIg
X191c2VyICopYnVmZmVyOworCisJbWVtY3B5KGJ1ZmZlciwgaW5wdXQsIGxlbik7CisKKwlLVU5J
VF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklUX1BST0NfV1JJ
VEUsCisJCQkJCSAgICAgICB1c2VyX2J1ZmZlciwgJmxlbiwgJnBvcykpOworCUtVTklUX0VYUEVD
VF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQpIC0gMSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVz
dCwgc2l6ZW9mKGlucHV0KSAtIDEsIChzaXplX3QpcG9zKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVz
dCwgLTksICooKGludCAqKXRhYmxlLmRhdGEpKTsKK30KKworLyoKKyAqIFRlc3QgdGhhdCB3cml0
aW5nIGEgdmFsdWUgc21hbGxlciB0aGFuIHRoZSBtaW5pbXVtIHBvc3NpYmxlIHZhbHVlIGlzIG5v
dAorICogYWxsb3dlZC4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVj
X3dyaXRlX3NpbmdsZV9sZXNzX2ludF9taW4oCisJCXN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlp
bnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnByb2NuYW1lID0g
ImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQku
bW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJh
MQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9Owor
CXNpemVfdCBtYXhfbGVuID0gMzIsIGxlbiA9IG1heF9sZW47CisJbG9mZl90IHBvcyA9IDA7CisJ
Y2hhciAqYnVmZmVyID0ga3VuaXRfa3phbGxvYyh0ZXN0LCBtYXhfbGVuLCBHRlBfVVNFUik7CisJ
Y2hhciBfX3VzZXIgKnVzZXJfYnVmZmVyID0gKGNoYXIgX191c2VyICopYnVmZmVyOworCXVuc2ln
bmVkIGxvbmcgYWJzX29mX2xlc3NfdGhhbl9taW4gPSAodW5zaWduZWQgbG9uZylJTlRfTUFYCisJ
CQkJCSAgICAgLSAoSU5UX01BWCArIElOVF9NSU4pICsgMTsKKworCS8qCisJICogV2UgdXNlIHRo
aXMgcmlnbWFyb2xlIHRvIGNyZWF0ZSBhIHN0cmluZyB0aGF0IGNvbnRhaW5zIGEgdmFsdWUgb25l
CisJICogbGVzcyB0aGFuIHRoZSBtaW5pbXVtIGFjY2VwdGVkIHZhbHVlLgorCSAqLworCUtVTklU
X0FTU0VSVF9MVCh0ZXN0LAorCQkJKHNpemVfdClzbnByaW50ZihidWZmZXIsIG1heF9sZW4sICIt
JWx1IiwKKwkJCQkJIGFic19vZl9sZXNzX3RoYW5fbWluKSwKKwkJCW1heF9sZW4pOworCisJS1VO
SVRfRVhQRUNUX0VRKHRlc3QsIC1FSU5WQUwsIHByb2NfZG9pbnR2ZWMoJnRhYmxlLCBLVU5JVF9Q
Uk9DX1dSSVRFLAorCQkJCQkJICAgICB1c2VyX2J1ZmZlciwgJmxlbiwgJnBvcykpOworCUtVTklU
X0VYUEVDVF9FUSh0ZXN0LCBtYXhfbGVuLCBsZW4pOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAw
LCAqKChpbnQgKil0YWJsZS5kYXRhKSk7Cit9CisKKy8qCisgKiBUZXN0IHRoYXQgd3JpdGluZyB0
aGUgbWF4aW11bSBwb3NzaWJsZSB2YWx1ZSB3b3Jrcy4KKyAqLworc3RhdGljIHZvaWQgc3lzY3Rs
X3Rlc3RfYXBpX2RvaW50dmVjX3dyaXRlX3NpbmdsZV9ncmVhdGVyX2ludF9tYXgoCisJCXN0cnVj
dCBrdW5pdCAqdGVzdCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSB0YWJs
ZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVu
CQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJv
Y19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAm
aV9vbmVfaHVuZHJlZCwKKwl9OworCXNpemVfdCBtYXhfbGVuID0gMzIsIGxlbiA9IG1heF9sZW47
CisJbG9mZl90IHBvcyA9IDA7CisJY2hhciAqYnVmZmVyID0ga3VuaXRfa3phbGxvYyh0ZXN0LCBt
YXhfbGVuLCBHRlBfVVNFUik7CisJY2hhciBfX3VzZXIgKnVzZXJfYnVmZmVyID0gKGNoYXIgX191
c2VyICopYnVmZmVyOworCXVuc2lnbmVkIGxvbmcgZ3JlYXRlcl90aGFuX21heCA9ICh1bnNpZ25l
ZCBsb25nKUlOVF9NQVggKyAxOworCisJS1VOSVRfQVNTRVJUX0dUKHRlc3QsIGdyZWF0ZXJfdGhh
bl9tYXgsICh1bnNpZ25lZCBsb25nKUlOVF9NQVgpOworCUtVTklUX0FTU0VSVF9MVCh0ZXN0LCAo
c2l6ZV90KXNucHJpbnRmKGJ1ZmZlciwgbWF4X2xlbiwgIiVsdSIsCisJCQkJCSAgICAgICBncmVh
dGVyX3RoYW5fbWF4KSwKKwkJCW1heF9sZW4pOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAtRUlO
VkFMLCBwcm9jX2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwKKwkJCQkJCSAgICAg
dXNlcl9idWZmZXIsICZsZW4sICZwb3MpKTsKKwlLVU5JVF9BU1NFUlRfRVEodGVzdCwgbWF4X2xl
biwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgKigoaW50ICopdGFibGUuZGF0YSkp
OworfQorCitzdGF0aWMgc3RydWN0IGt1bml0X2Nhc2Ugc3lzY3RsX3Rlc3RfY2FzZXNbXSA9IHsK
KwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY19udWxsX3RibF9kYXRhKSwKKwlL
VU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY190YWJsZV9tYXhsZW5fdW5zZXQpLAor
CUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxlX2xlbl9pc196ZXJvKSwK
KwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY190YWJsZV9yZWFkX2J1dF9wb3Np
dGlvbl9zZXQpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9oYXBweV9z
aW5nbGVfcG9zaXRpdmUpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfcmVhZF9o
YXBweV9zaW5nbGVfbmVnYXRpdmUpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNf
d3JpdGVfaGFwcHlfc2luZ2xlX3Bvc2l0aXZlKSwKKwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2Rv
aW50dmVjX3dyaXRlX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZSksCisJS1VOSVRfQ0FTRShzeXNjdGxf
dGVzdF9hcGlfZG9pbnR2ZWNfd3JpdGVfc2luZ2xlX2xlc3NfaW50X21pbiksCisJS1VOSVRfQ0FT
RShzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfd3JpdGVfc2luZ2xlX2dyZWF0ZXJfaW50X21heCks
CisJe30KK307CisKK3N0YXRpYyBzdHJ1Y3Qga3VuaXRfc3VpdGUgc3lzY3RsX3Rlc3Rfc3VpdGUg
PSB7CisJLm5hbWUgPSAic3lzY3RsX3Rlc3QiLAorCS50ZXN0X2Nhc2VzID0gc3lzY3RsX3Rlc3Rf
Y2FzZXMsCit9OworCitrdW5pdF90ZXN0X3N1aXRlKHN5c2N0bF90ZXN0X3N1aXRlKTsKZGlmZiAt
LWdpdCBhL2xpYi9LY29uZmlnLmRlYnVnIGIvbGliL0tjb25maWcuZGVidWcKaW5kZXggNTg3MGZi
ZTExZTliLi5kOWE2YTQ1YmE3YWEgMTAwNjQ0Ci0tLSBhL2xpYi9LY29uZmlnLmRlYnVnCisrKyBi
L2xpYi9LY29uZmlnLmRlYnVnCkBAIC0xOTY1LDYgKzE5NjUsMTcgQEAgY29uZmlnIFRFU1RfU1lT
Q1RMCiAKIAkgIElmIHVuc3VyZSwgc2F5IE4uCiAKK2NvbmZpZyBTWVNDVExfS1VOSVRfVEVTVAor
CWJvb2wgIktVbml0IHRlc3QgZm9yIHN5c2N0bCIKKwlkZXBlbmRzIG9uIEtVTklUCisJaGVscAor
CSAgVGhpcyBidWlsZHMgdGhlIHByb2Mgc3lzY3RsIHVuaXQgdGVzdCwgd2hpY2ggcnVucyBvbiBi
b290LgorCSAgVGVzdHMgdGhlIEFQSSBjb250cmFjdCBhbmQgaW1wbGVtZW50YXRpb24gY29ycmVj
dG5lc3Mgb2Ygc3lzY3RsLgorCSAgRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gS1VuaXQgYW5kIHVu
aXQgdGVzdHMgaW4gZ2VuZXJhbCBwbGVhc2UgcmVmZXIKKwkgIHRvIHRoZSBLVW5pdCBkb2N1bWVu
dGF0aW9uIGluIERvY3VtZW50YXRpb24vZGV2LXRvb2xzL2t1bml0Ly4KKworCSAgSWYgdW5zdXJl
LCBzYXkgTi4KKwogY29uZmlnIFRFU1RfVURFTEFZCiAJdHJpc3RhdGUgInVkZWxheSB0ZXN0IGRy
aXZlciIKIAloZWxwCi0tIAoyLjIzLjAuMzUxLmdjNDMxNzAzMmU2LWdvb2cKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxp
c3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
