Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3190BBB8D1
	for <lists+dri-devel@lfdr.de>; Mon, 23 Sep 2019 18:00:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2A61A6E965;
	Mon, 23 Sep 2019 16:00:52 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3FED86E965
 for <dri-devel@lists.freedesktop.org>; Mon, 23 Sep 2019 16:00:51 +0000 (UTC)
Received: from localhost.localdomain (unknown [194.230.155.145])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 56D1A214DA;
 Mon, 23 Sep 2019 16:00:37 +0000 (UTC)
From: Krzysztof Kozlowski <krzk@kernel.org>
To: Jiri Kosina <trivial@kernel.org>, linux-kernel@vger.kernel.org,
 linux-alpha@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-omap@vger.kernel.org, linux-samsung-soc@vger.kernel.org,
 uclinux-h8-devel@lists.sourceforge.jp, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linuxppc-dev@lists.ozlabs.org,
 linux-riscv@lists.infradead.org, linux-sh@vger.kernel.org,
 linux-um@lists.infradead.org, keyrings@vger.kernel.org,
 linux-acpi@vger.kernel.org, linux-ide@vger.kernel.org,
 linux-block@vger.kernel.org, linux-crypto@vger.kernel.org,
 openipmi-developer@lists.sourceforge.net, linux-clk@vger.kernel.org,
 linux-pm@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 dmaengine@vger.kernel.org, linux-edac@vger.kernel.org,
 linux-efi@vger.kernel.org, linux-input@vger.kernel.org,
 linux-hwmon@vger.kernel.org, linux-i2c@vger.kernel.org,
 linux-iio@vger.kernel.org, linux-rdma@vger.kernel.org,
 iommu@lists.linux-foundation.org, netdev@vger.kernel.org,
 linux-raid@vger.kernel.org, dm-devel@redhat.com,
 linux-media@vger.kernel.org, linux-mmc@vger.kernel.org,
 linux-mtd@lists.infradead.org, linux-pci@vger.kernel.org,
 linux-gpio@vger.kernel.org, linux-arm-msm@vger.kernel.org,
 platform-driver-x86@vger.kernel.org, linux-remoteproc@vger.kernel.org,
 linux-rtc@vger.kernel.org, linux-scsi@vger.kernel.org,
 esc.storagedev@microsemi.com, linux-rockchip@lists.infradead.org,
 linux-spi@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-fbdev@vger.kernel.org, devel@driverdev.osuosl.org,
 ac100@lists.launchpad.net, linux-tegra@vger.kernel.org,
 bcm-kernel-feedback-list@broadcom.com,
 linux-rpi-kernel@lists.infradead.org, linux-serial@vger.kernel.org,
 virtualization@lists.linux-foundation.org, xen-devel@lists.xenproject.org,
 linux-mm@kvack.org, linux-security-module@vger.kernel.org,
 linux-integrity@vger.kernel.org, linux-mediatek@lists.infradead.org
Subject: [PATCH trivial 2/3] treewide: Fix Kconfig indentation
Date: Mon, 23 Sep 2019 18:00:12 +0200
Message-Id: <20190923160013.8550-2-krzk@kernel.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190923160013.8550-1-krzk@kernel.org>
References: <20190923160013.8550-1-krzk@kernel.org>
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=kernel.org; s=default; t=1569254451;
 bh=/+LyoCRrUerjwuAnSA+DSR15kK8PaY0lAt8D/IKo9wY=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=A2hnGJRCENXhziQMuw0sdoR4GxOf83xqZKvSyZPu6x40OsGT0CE/lDq6q2qXvsCnS
 IWEV8SG5ZJ2ljUdA5xjahGEbjHx4ZyFwGAKru4UL0z2rLdvgdMNTSoT/+Qc4PHhr1G
 uwLcd7640CkyJ6awy4Z/Ts4T9P/t3PwvYqx8mjeg=
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Krzysztof Kozlowski <krzk@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRqdXN0IGluZGVudGF0aW9uIGZyb20gc3BhY2VzIHRvIHRhYiAoK29wdGlvbmFsIHR3byBzcGFj
ZXMpIGFzIGluCmNvZGluZyBzdHlsZSB3aXRoIGNvbW1hbmQgbGlrZToKICAgICQgc2VkIC1lICdz
L14gICAgICAgIC9cdC8nIC1pICovS2NvbmZpZwoKU2lnbmVkLW9mZi1ieTogS3J6eXN6dG9mIEtv
emxvd3NraSA8a3J6a0BrZXJuZWwub3JnPgotLS0KIGNlcnRzL0tjb25maWcgICAgICAgICAgICAg
ICAgICB8IDE0ICsrKysrKy0tLS0tLS0KIGluaXQvS2NvbmZpZyAgICAgICAgICAgICAgICAgICB8
IDI4ICsrKysrKysrKysrKystLS0tLS0tLS0tLS0tCiBrZXJuZWwvdHJhY2UvS2NvbmZpZyAgICAg
ICAgICAgfCAgOCArKysrLS0tLQogbGliL0tjb25maWcgICAgICAgICAgICAgICAgICAgIHwgIDIg
Ky0KIGxpYi9LY29uZmlnLmRlYnVnICAgICAgICAgICAgICB8IDM2ICsrKysrKysrKysrKysrKysr
LS0tLS0tLS0tLS0tLS0tLS0KIGxpYi9LY29uZmlnLmtnZGIgICAgICAgICAgICAgICB8ICA4ICsr
KystLS0tCiBtbS9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgfCAyOCArKysrKysrKysrKysr
LS0tLS0tLS0tLS0tLQogc2FtcGxlcy9LY29uZmlnICAgICAgICAgICAgICAgIHwgIDIgKy0KIHNl
Y3VyaXR5L2FwcGFybW9yL0tjb25maWcgICAgICB8ICAyICstCiBzZWN1cml0eS9pbnRlZ3JpdHkv
S2NvbmZpZyAgICAgfCAyNCArKysrKysrKysrKy0tLS0tLS0tLS0tLQogc2VjdXJpdHkvaW50ZWdy
aXR5L2ltYS9LY29uZmlnIHwgMTIgKysrKysrLS0tLS0tCiBzZWN1cml0eS9zYWZlc2V0aWQvS2Nv
bmZpZyAgICAgfCAyNCArKysrKysrKysrKy0tLS0tLS0tLS0tLQogMTIgZmlsZXMgY2hhbmdlZCwg
OTQgaW5zZXJ0aW9ucygrKSwgOTQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvY2VydHMvS2Nv
bmZpZyBiL2NlcnRzL0tjb25maWcKaW5kZXggYzk0ZTkzZDhiY2NmLi4wMzU4YzY2ZDNkN2MgMTAw
NjQ0Ci0tLSBhL2NlcnRzL0tjb25maWcKKysrIGIvY2VydHMvS2NvbmZpZwpAQCAtNiwxNCArNiwx
NCBAQCBjb25maWcgTU9EVUxFX1NJR19LRVkKIAlkZWZhdWx0ICJjZXJ0cy9zaWduaW5nX2tleS5w
ZW0iCiAJZGVwZW5kcyBvbiBNT0RVTEVfU0lHCiAJaGVscAotICAgICAgICAgUHJvdmlkZSB0aGUg
ZmlsZSBuYW1lIG9mIGEgcHJpdmF0ZSBrZXkvY2VydGlmaWNhdGUgaW4gUEVNIGZvcm1hdCwKLSAg
ICAgICAgIG9yIGEgUEtDUyMxMSBVUkkgYWNjb3JkaW5nIHRvIFJGQzc1MTIuIFRoZSBmaWxlIHNo
b3VsZCBjb250YWluLCBvcgotICAgICAgICAgdGhlIFVSSSBzaG91bGQgaWRlbnRpZnksIGJvdGgg
dGhlIGNlcnRpZmljYXRlIGFuZCBpdHMgY29ycmVzcG9uZGluZwotICAgICAgICAgcHJpdmF0ZSBr
ZXkuCisJIFByb3ZpZGUgdGhlIGZpbGUgbmFtZSBvZiBhIHByaXZhdGUga2V5L2NlcnRpZmljYXRl
IGluIFBFTSBmb3JtYXQsCisJIG9yIGEgUEtDUyMxMSBVUkkgYWNjb3JkaW5nIHRvIFJGQzc1MTIu
IFRoZSBmaWxlIHNob3VsZCBjb250YWluLCBvcgorCSB0aGUgVVJJIHNob3VsZCBpZGVudGlmeSwg
Ym90aCB0aGUgY2VydGlmaWNhdGUgYW5kIGl0cyBjb3JyZXNwb25kaW5nCisJIHByaXZhdGUga2V5
LgogCi0gICAgICAgICBJZiB0aGlzIG9wdGlvbiBpcyB1bmNoYW5nZWQgZnJvbSBpdHMgZGVmYXVs
dCAiY2VydHMvc2lnbmluZ19rZXkucGVtIiwKLSAgICAgICAgIHRoZW4gdGhlIGtlcm5lbCB3aWxs
IGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGUgdGhlIHByaXZhdGUga2V5IGFuZAotICAgICAgICAgY2Vy
dGlmaWNhdGUgYXMgZGVzY3JpYmVkIGluIERvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvbW9kdWxl
LXNpZ25pbmcucnN0CisJIElmIHRoaXMgb3B0aW9uIGlzIHVuY2hhbmdlZCBmcm9tIGl0cyBkZWZh
dWx0ICJjZXJ0cy9zaWduaW5nX2tleS5wZW0iLAorCSB0aGVuIHRoZSBrZXJuZWwgd2lsbCBhdXRv
bWF0aWNhbGx5IGdlbmVyYXRlIHRoZSBwcml2YXRlIGtleSBhbmQKKwkgY2VydGlmaWNhdGUgYXMg
ZGVzY3JpYmVkIGluIERvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvbW9kdWxlLXNpZ25pbmcucnN0
CiAKIGNvbmZpZyBTWVNURU1fVFJVU1RFRF9LRVlSSU5HCiAJYm9vbCAiUHJvdmlkZSBzeXN0ZW0t
d2lkZSByaW5nIG9mIHRydXN0ZWQga2V5cyIKZGlmZiAtLWdpdCBhL2luaXQvS2NvbmZpZyBiL2lu
aXQvS2NvbmZpZwppbmRleCA2ZDRkYjg4N2Y2OTYuLmY1OWM4NTQ4MzlkMiAxMDA2NDQKLS0tIGEv
aW5pdC9LY29uZmlnCisrKyBiL2luaXQvS2NvbmZpZwpAQCAtMTY5LDEwICsxNjksMTAgQEAgY29u
ZmlnIEJVSUxEX1NBTFQKICAgICAgICBzdHJpbmcgIkJ1aWxkIElEIFNhbHQiCiAgICAgICAgZGVm
YXVsdCAiIgogICAgICAgIGhlbHAKLSAgICAgICAgICBUaGUgYnVpbGQgSUQgaXMgdXNlZCB0byBs
aW5rIGJpbmFyaWVzIGFuZCB0aGVpciBkZWJ1ZyBpbmZvLiBTZXR0aW5nCi0gICAgICAgICAgdGhp
cyBvcHRpb24gd2lsbCB1c2UgdGhlIHZhbHVlIGluIHRoZSBjYWxjdWxhdGlvbiBvZiB0aGUgYnVp
bGQgaWQuCi0gICAgICAgICAgVGhpcyBpcyBtb3N0bHkgdXNlZnVsIGZvciBkaXN0cmlidXRpb25z
IHdoaWNoIHdhbnQgdG8gZW5zdXJlIHRoZQotICAgICAgICAgIGJ1aWxkIGlzIHVuaXF1ZSBiZXR3
ZWVuIGJ1aWxkcy4gSXQncyBzYWZlIHRvIGxlYXZlIHRoZSBkZWZhdWx0LgorCSAgVGhlIGJ1aWxk
IElEIGlzIHVzZWQgdG8gbGluayBiaW5hcmllcyBhbmQgdGhlaXIgZGVidWcgaW5mby4gU2V0dGlu
ZworCSAgdGhpcyBvcHRpb24gd2lsbCB1c2UgdGhlIHZhbHVlIGluIHRoZSBjYWxjdWxhdGlvbiBv
ZiB0aGUgYnVpbGQgaWQuCisJICBUaGlzIGlzIG1vc3RseSB1c2VmdWwgZm9yIGRpc3RyaWJ1dGlv
bnMgd2hpY2ggd2FudCB0byBlbnN1cmUgdGhlCisJICBidWlsZCBpcyB1bmlxdWUgYmV0d2VlbiBi
dWlsZHMuIEl0J3Mgc2FmZSB0byBsZWF2ZSB0aGUgZGVmYXVsdC4KIAogY29uZmlnIEhBVkVfS0VS
TkVMX0daSVAKIAlib29sCkBAIC0xMzI3LDkgKzEzMjcsOSBAQCBtZW51Y29uZmlnIEVYUEVSVAog
CXNlbGVjdCBERUJVR19LRVJORUwKIAloZWxwCiAJICBUaGlzIG9wdGlvbiBhbGxvd3MgY2VydGFp
biBiYXNlIGtlcm5lbCBvcHRpb25zIGFuZCBzZXR0aW5ncwotICAgICAgICAgIHRvIGJlIGRpc2Fi
bGVkIG9yIHR3ZWFrZWQuIFRoaXMgaXMgZm9yIHNwZWNpYWxpemVkCi0gICAgICAgICAgZW52aXJv
bm1lbnRzIHdoaWNoIGNhbiB0b2xlcmF0ZSBhICJub24tc3RhbmRhcmQiIGtlcm5lbC4KLSAgICAg
ICAgICBPbmx5IHVzZSB0aGlzIGlmIHlvdSByZWFsbHkga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcu
CisJICB0byBiZSBkaXNhYmxlZCBvciB0d2Vha2VkLiBUaGlzIGlzIGZvciBzcGVjaWFsaXplZAor
CSAgZW52aXJvbm1lbnRzIHdoaWNoIGNhbiB0b2xlcmF0ZSBhICJub24tc3RhbmRhcmQiIGtlcm5l
bC4KKwkgIE9ubHkgdXNlIHRoaXMgaWYgeW91IHJlYWxseSBrbm93IHdoYXQgeW91IGFyZSBkb2lu
Zy4KIAogY29uZmlnIFVJRDE2CiAJYm9vbCAiRW5hYmxlIDE2LWJpdCBVSUQgc3lzdGVtIGNhbGxz
IiBpZiBFWFBFUlQKQEAgLTE0MzksMTEgKzE0MzksMTEgQEAgY29uZmlnIEJVRwogCWJvb2wgIkJV
RygpIHN1cHBvcnQiIGlmIEVYUEVSVAogCWRlZmF1bHQgeQogCWhlbHAKLSAgICAgICAgICBEaXNh
YmxpbmcgdGhpcyBvcHRpb24gZWxpbWluYXRlcyBzdXBwb3J0IGZvciBCVUcgYW5kIFdBUk4sIHJl
ZHVjaW5nCi0gICAgICAgICAgdGhlIHNpemUgb2YgeW91ciBrZXJuZWwgaW1hZ2UgYW5kIHBvdGVu
dGlhbGx5IHF1aWV0bHkgaWdub3JpbmcKLSAgICAgICAgICBudW1lcm91cyBmYXRhbCBjb25kaXRp
b25zLiBZb3Ugc2hvdWxkIG9ubHkgY29uc2lkZXIgZGlzYWJsaW5nIHRoaXMKLSAgICAgICAgICBv
cHRpb24gZm9yIGVtYmVkZGVkIHN5c3RlbXMgd2l0aCBubyBmYWNpbGl0aWVzIGZvciByZXBvcnRp
bmcgZXJyb3JzLgotICAgICAgICAgIEp1c3Qgc2F5IFkuCisJICBEaXNhYmxpbmcgdGhpcyBvcHRp
b24gZWxpbWluYXRlcyBzdXBwb3J0IGZvciBCVUcgYW5kIFdBUk4sIHJlZHVjaW5nCisJICB0aGUg
c2l6ZSBvZiB5b3VyIGtlcm5lbCBpbWFnZSBhbmQgcG90ZW50aWFsbHkgcXVpZXRseSBpZ25vcmlu
ZworCSAgbnVtZXJvdXMgZmF0YWwgY29uZGl0aW9ucy4gWW91IHNob3VsZCBvbmx5IGNvbnNpZGVy
IGRpc2FibGluZyB0aGlzCisJICBvcHRpb24gZm9yIGVtYmVkZGVkIHN5c3RlbXMgd2l0aCBubyBm
YWNpbGl0aWVzIGZvciByZXBvcnRpbmcgZXJyb3JzLgorCSAgSnVzdCBzYXkgWS4KIAogY29uZmln
IEVMRl9DT1JFCiAJZGVwZW5kcyBvbiBDT1JFRFVNUApAQCAtMTQ1OSw4ICsxNDU5LDggQEAgY29u
ZmlnIFBDU1BLUl9QTEFURk9STQogCXNlbGVjdCBJODI1M19MT0NLCiAJZGVmYXVsdCB5CiAJaGVs
cAotICAgICAgICAgIFRoaXMgb3B0aW9uIGFsbG93cyB0byBkaXNhYmxlIHRoZSBpbnRlcm5hbCBQ
Qy1TcGVha2VyCi0gICAgICAgICAgc3VwcG9ydCwgc2F2aW5nIHNvbWUgbWVtb3J5LgorCSAgVGhp
cyBvcHRpb24gYWxsb3dzIHRvIGRpc2FibGUgdGhlIGludGVybmFsIFBDLVNwZWFrZXIKKwkgIHN1
cHBvcnQsIHNhdmluZyBzb21lIG1lbW9yeS4KIAogY29uZmlnIEJBU0VfRlVMTAogCWRlZmF1bHQg
eQpkaWZmIC0tZ2l0IGEva2VybmVsL3RyYWNlL0tjb25maWcgYi9rZXJuZWwvdHJhY2UvS2NvbmZp
ZwppbmRleCBlMDg1MjdmNTBkMmEuLjAzOTMwMDNmMTAyZiAxMDA2NDQKLS0tIGEva2VybmVsL3Ry
YWNlL0tjb25maWcKKysrIGIva2VybmVsL3RyYWNlL0tjb25maWcKQEAgLTc2LDcgKzc2LDcgQEAg
Y29uZmlnIEZUUkFDRV9OTUlfRU5URVIKIAogY29uZmlnIEVWRU5UX1RSQUNJTkcKIAlzZWxlY3Qg
Q09OVEVYVF9TV0lUQ0hfVFJBQ0VSCi0gICAgICAgIHNlbGVjdCBHTE9CCisJc2VsZWN0IEdMT0IK
IAlib29sCiAKIGNvbmZpZyBDT05URVhUX1NXSVRDSF9UUkFDRVIKQEAgLTMwOCw3ICszMDgsNyBA
QCBjb25maWcgVFJBQ0VSX1NOQVBTSE9UCiAJICAgICAgY2F0IHNuYXBzaG90CiAKIGNvbmZpZyBU
UkFDRVJfU05BUFNIT1RfUEVSX0NQVV9TV0FQCi0gICAgICAgIGJvb2wgIkFsbG93IHNuYXBzaG90
IHRvIHN3YXAgcGVyIENQVSIKKwlib29sICJBbGxvdyBzbmFwc2hvdCB0byBzd2FwIHBlciBDUFUi
CiAJZGVwZW5kcyBvbiBUUkFDRVJfU05BUFNIT1QKIAlzZWxlY3QgUklOR19CVUZGRVJfQUxMT1df
U1dBUAogCWhlbHAKQEAgLTY3NSw3ICs2NzUsNyBAQCBjb25maWcgTU1JT1RSQUNFX1RFU1QKIAkg
IFNheSBOLCB1bmxlc3MgeW91IGFic29sdXRlbHkga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuCiAK
IGNvbmZpZyBUUkFDRVBPSU5UX0JFTkNITUFSSwotICAgICAgICBib29sICJBZGQgdHJhY2Vwb2lu
dCB0aGF0IGJlbmNobWFya3MgdHJhY2Vwb2ludHMiCisJYm9vbCAiQWRkIHRyYWNlcG9pbnQgdGhh
dCBiZW5jaG1hcmtzIHRyYWNlcG9pbnRzIgogCWhlbHAKIAkgVGhpcyBvcHRpb24gY3JlYXRlcyB0
aGUgdHJhY2Vwb2ludCAiYmVuY2htYXJrOmJlbmNobWFya19ldmVudCIuCiAJIFdoZW4gdGhlIHRy
YWNlcG9pbnQgaXMgZW5hYmxlZCwgaXQga2lja3Mgb2ZmIGEga2VybmVsIHRocmVhZCB0aGF0CkBA
IC03MjQsNyArNzI0LDcgQEAgY29uZmlnIFJJTkdfQlVGRkVSX1NUQVJUVVBfVEVTVAogICAgICAg
IGJvb2wgIlJpbmcgYnVmZmVyIHN0YXJ0dXAgc2VsZiB0ZXN0IgogICAgICAgIGRlcGVuZHMgb24g
UklOR19CVUZGRVIKICAgICAgICBoZWxwCi0gICAgICAgICBSdW4gYSBzaW1wbGUgc2VsZiB0ZXN0
IG9uIHRoZSByaW5nIGJ1ZmZlciBvbiBib290IHVwLiBMYXRlIGluIHRoZQorCSBSdW4gYSBzaW1w
bGUgc2VsZiB0ZXN0IG9uIHRoZSByaW5nIGJ1ZmZlciBvbiBib290IHVwLiBMYXRlIGluIHRoZQog
CSBrZXJuZWwgYm9vdCBzZXF1ZW5jZSwgdGhlIHRlc3Qgd2lsbCBzdGFydCB0aGF0IGtpY2tzIG9m
ZgogCSBhIHRocmVhZCBwZXIgY3B1LiBFYWNoIHRocmVhZCB3aWxsIHdyaXRlIHZhcmlvdXMgc2l6
ZSBldmVudHMKIAkgaW50byB0aGUgcmluZyBidWZmZXIuIEFub3RoZXIgdGhyZWFkIGlzIGNyZWF0
ZWQgdG8gc2VuZCBJUElzCmRpZmYgLS1naXQgYS9saWIvS2NvbmZpZyBiL2xpYi9LY29uZmlnCmlu
ZGV4IDRlNmIxYzNlNGM5OC4uMDU2MjI5NjQ3MWMwIDEwMDY0NAotLS0gYS9saWIvS2NvbmZpZwor
KysgYi9saWIvS2NvbmZpZwpAQCAtNTc0LDcgKzU3NCw3IEBAIGNvbmZpZyBPSURfUkVHSVNUUlkK
IAkgIEVuYWJsZSBmYXN0IGxvb2t1cCBvYmplY3QgaWRlbnRpZmllciByZWdpc3RyeS4KIAogY29u
ZmlnIFVDUzJfU1RSSU5HCi0gICAgICAgIHRyaXN0YXRlCisJdHJpc3RhdGUKIAogIwogIyBnZW5l
cmljIHZkc28KZGlmZiAtLWdpdCBhL2xpYi9LY29uZmlnLmRlYnVnIGIvbGliL0tjb25maWcuZGVi
dWcKaW5kZXggMTAwMjNkYmFjOGU0Li5lNWU3ZjlmYzY4MzkgMTAwNjQ0Ci0tLSBhL2xpYi9LY29u
ZmlnLmRlYnVnCisrKyBiL2xpYi9LY29uZmlnLmRlYnVnCkBAIC0xMjgsOCArMTI4LDggQEAgY29u
ZmlnIERZTkFNSUNfREVCVUcKIAkgIGxpbmVubyA6IGxpbmUgbnVtYmVyIG9mIHRoZSBkZWJ1ZyBz
dGF0ZW1lbnQKIAkgIG1vZHVsZSA6IG1vZHVsZSB0aGF0IGNvbnRhaW5zIHRoZSBkZWJ1ZyBzdGF0
ZW1lbnQKIAkgIGZ1bmN0aW9uIDogZnVuY3Rpb24gdGhhdCBjb250YWlucyB0aGUgZGVidWcgc3Rh
dGVtZW50Ci0gICAgICAgICAgZmxhZ3MgOiAnPXAnIG1lYW5zIHRoZSBsaW5lIGlzIHR1cm5lZCAn
b24nIGZvciBwcmludGluZwotICAgICAgICAgIGZvcm1hdCA6IHRoZSBmb3JtYXQgdXNlZCBmb3Ig
dGhlIGRlYnVnIHN0YXRlbWVudAorCSAgZmxhZ3MgOiAnPXAnIG1lYW5zIHRoZSBsaW5lIGlzIHR1
cm5lZCAnb24nIGZvciBwcmludGluZworCSAgZm9ybWF0IDogdGhlIGZvcm1hdCB1c2VkIGZvciB0
aGUgZGVidWcgc3RhdGVtZW50CiAKIAkgIEZyb20gYSBsaXZlIHN5c3RlbToKIApAQCAtMTcyLDcg
KzE3Miw3IEBAIGNvbmZpZyBERUJVR19JTkZPCiAJYm9vbCAiQ29tcGlsZSB0aGUga2VybmVsIHdp
dGggZGVidWcgaW5mbyIKIAlkZXBlbmRzIG9uIERFQlVHX0tFUk5FTCAmJiAhQ09NUElMRV9URVNU
CiAJaGVscAotICAgICAgICAgIElmIHlvdSBzYXkgWSBoZXJlIHRoZSByZXN1bHRpbmcga2VybmVs
IGltYWdlIHdpbGwgaW5jbHVkZQorCSAgSWYgeW91IHNheSBZIGhlcmUgdGhlIHJlc3VsdGluZyBr
ZXJuZWwgaW1hZ2Ugd2lsbCBpbmNsdWRlCiAJICBkZWJ1Z2dpbmcgaW5mbyByZXN1bHRpbmcgaW4g
YSBsYXJnZXIga2VybmVsIGltYWdlLgogCSAgVGhpcyBhZGRzIGRlYnVnIHN5bWJvbHMgdG8gdGhl
IGtlcm5lbCBhbmQgbW9kdWxlcyAoZ2NjIC1nKSwgYW5kCiAJICBpcyBuZWVkZWQgaWYgeW91IGlu
dGVuZCB0byB1c2Uga2VybmVsIGNyYXNoZHVtcCBvciBiaW5hcnkgb2JqZWN0CkBAIC0yNjksMTMg
KzI2OSwxMyBAQCBjb25maWcgU1RSSVBfQVNNX1NZTVMKIAkgIGdldF93Y2hhbigpIGFuZCBzdWNo
bGlrZS4KIAogY29uZmlnIFJFQURBQkxFX0FTTQotICAgICAgICBib29sICJHZW5lcmF0ZSByZWFk
YWJsZSBhc3NlbWJsZXIgY29kZSIKLSAgICAgICAgZGVwZW5kcyBvbiBERUJVR19LRVJORUwKLSAg
ICAgICAgaGVscAotICAgICAgICAgIERpc2FibGUgc29tZSBjb21waWxlciBvcHRpbWl6YXRpb25z
IHRoYXQgdGVuZCB0byBnZW5lcmF0ZSBodW1hbiB1bnJlYWRhYmxlCi0gICAgICAgICAgYXNzZW1i
bGVyIG91dHB1dC4gVGhpcyBtYXkgbWFrZSB0aGUga2VybmVsIHNsaWdodGx5IHNsb3dlciwgYnV0
IGl0IGhlbHBzCi0gICAgICAgICAgdG8ga2VlcCBrZXJuZWwgZGV2ZWxvcGVycyB3aG8gaGF2ZSB0
byBzdGFyZSBhIGxvdCBhdCBhc3NlbWJsZXIgbGlzdGluZ3MKLSAgICAgICAgICBzYW5lLgorCWJv
b2wgIkdlbmVyYXRlIHJlYWRhYmxlIGFzc2VtYmxlciBjb2RlIgorCWRlcGVuZHMgb24gREVCVUdf
S0VSTkVMCisJaGVscAorCSAgRGlzYWJsZSBzb21lIGNvbXBpbGVyIG9wdGltaXphdGlvbnMgdGhh
dCB0ZW5kIHRvIGdlbmVyYXRlIGh1bWFuIHVucmVhZGFibGUKKwkgIGFzc2VtYmxlciBvdXRwdXQu
IFRoaXMgbWF5IG1ha2UgdGhlIGtlcm5lbCBzbGlnaHRseSBzbG93ZXIsIGJ1dCBpdCBoZWxwcwor
CSAgdG8ga2VlcCBrZXJuZWwgZGV2ZWxvcGVycyB3aG8gaGF2ZSB0byBzdGFyZSBhIGxvdCBhdCBh
c3NlbWJsZXIgbGlzdGluZ3MKKwkgIHNhbmUuCiAKIGNvbmZpZyBVTlVTRURfU1lNQk9MUwogCWJv
b2wgIkVuYWJsZSB1bnVzZWQvb2Jzb2xldGUgZXhwb3J0ZWQgc3ltYm9scyIKQEAgLTUyNiwxMSAr
NTI2LDExIEBAIGNvbmZpZyBERUJVR19PQkpFQ1RTX1BFUkNQVV9DT1VOVEVSCiAKIGNvbmZpZyBE
RUJVR19PQkpFQ1RTX0VOQUJMRV9ERUZBVUxUCiAJaW50ICJkZWJ1Z19vYmplY3RzIGJvb3R1cCBk
ZWZhdWx0IHZhbHVlICgwLTEpIgotICAgICAgICByYW5nZSAwIDEKLSAgICAgICAgZGVmYXVsdCAi
MSIKLSAgICAgICAgZGVwZW5kcyBvbiBERUJVR19PQkpFQ1RTCi0gICAgICAgIGhlbHAKLSAgICAg
ICAgICBEZWJ1ZyBvYmplY3RzIGJvb3QgcGFyYW1ldGVyIGRlZmF1bHQgdmFsdWUKKwlyYW5nZSAw
IDEKKwlkZWZhdWx0ICIxIgorCWRlcGVuZHMgb24gREVCVUdfT0JKRUNUUworCWhlbHAKKwkgIERl
YnVnIG9iamVjdHMgYm9vdCBwYXJhbWV0ZXIgZGVmYXVsdCB2YWx1ZQogCiBjb25maWcgREVCVUdf
U0xBQgogCWJvb2wgIkRlYnVnIHNsYWIgbWVtb3J5IGFsbG9jYXRpb25zIgpAQCAtNjQ5LDcgKzY0
OSw3IEBAIGNvbmZpZyBERUJVR19WTQogCWRlcGVuZHMgb24gREVCVUdfS0VSTkVMCiAJaGVscAog
CSAgRW5hYmxlIHRoaXMgdG8gdHVybiBvbiBleHRlbmRlZCBjaGVja3MgaW4gdGhlIHZpcnR1YWwt
bWVtb3J5IHN5c3RlbQotICAgICAgICAgIHRoYXQgbWF5IGltcGFjdCBwZXJmb3JtYW5jZS4KKwkg
IHRoYXQgbWF5IGltcGFjdCBwZXJmb3JtYW5jZS4KIAogCSAgSWYgdW5zdXJlLCBzYXkgTi4KIApA
QCAtMTQzOSw3ICsxNDM5LDcgQEAgY29uZmlnIERFQlVHX1dRX0ZPUkNFX1JSX0NQVQogCSAgYmUg
aW1wYWN0ZWQuCiAKIGNvbmZpZyBERUJVR19CTE9DS19FWFRfREVWVAotICAgICAgICBib29sICJG
b3JjZSBleHRlbmRlZCBibG9jayBkZXZpY2UgbnVtYmVycyBhbmQgc3ByZWFkIHRoZW0iCisJYm9v
bCAiRm9yY2UgZXh0ZW5kZWQgYmxvY2sgZGV2aWNlIG51bWJlcnMgYW5kIHNwcmVhZCB0aGVtIgog
CWRlcGVuZHMgb24gREVCVUdfS0VSTkVMCiAJZGVwZW5kcyBvbiBCTE9DSwogCWRlZmF1bHQgbgpA
QCAtMjE1OCw3ICsyMTU4LDcgQEAgY29uZmlnIERFQlVHX0FJRF9GT1JfU1laQk9UCiAgICAgICAg
Ym9vbCAiQWRkaXRpb25hbCBkZWJ1ZyBjb2RlIGZvciBzeXpib3QiCiAgICAgICAgZGVmYXVsdCBu
CiAgICAgICAgaGVscAotICAgICAgICAgVGhpcyBvcHRpb24gaXMgaW50ZW5kZWQgZm9yIHRlc3Rp
bmcgYnkgc3l6Ym90LgorCSBUaGlzIG9wdGlvbiBpcyBpbnRlbmRlZCBmb3IgdGVzdGluZyBieSBz
eXpib3QuCiAKIHNvdXJjZSAiYXJjaC8kKFNSQ0FSQ0gpL0tjb25maWcuZGVidWciCiAKZGlmZiAt
LWdpdCBhL2xpYi9LY29uZmlnLmtnZGIgYi9saWIvS2NvbmZpZy5rZ2RiCmluZGV4IGJiZTM5N2Rm
MDRhMy4uOTMzNjgwYjU5ZTJkIDEwMDY0NAotLS0gYS9saWIvS2NvbmZpZy5rZ2RiCisrKyBiL2xp
Yi9LY29uZmlnLmtnZGIKQEAgLTY0LDkgKzY0LDkgQEAgY29uZmlnIEtHREJfTE9XX0xFVkVMX1RS
QVAKICAgICAgICBkZXBlbmRzIG9uIFg4NiB8fCBNSVBTCiAgICAgICAgZGVmYXVsdCBuCiAgICAg
ICAgaGVscAotICAgICAgICAgVGhpcyB3aWxsIGFkZCBhbiBleHRyYSBjYWxsIGJhY2sgdG8ga2dk
YiBmb3IgdGhlIGJyZWFrcG9pbnQKLSAgICAgICAgIGV4Y2VwdGlvbiBoYW5kbGVyIHdoaWNoIHdp
bGwgYWxsb3cga2dkYiB0byBzdGVwIHRocm91Z2ggYQotICAgICAgICAgbm90aWZ5IGhhbmRsZXIu
CisJIFRoaXMgd2lsbCBhZGQgYW4gZXh0cmEgY2FsbCBiYWNrIHRvIGtnZGIgZm9yIHRoZSBicmVh
a3BvaW50CisJIGV4Y2VwdGlvbiBoYW5kbGVyIHdoaWNoIHdpbGwgYWxsb3cga2dkYiB0byBzdGVw
IHRocm91Z2ggYQorCSBub3RpZnkgaGFuZGxlci4KIAogY29uZmlnIEtHREJfS0RCCiAJYm9vbCAi
S0dEQl9LREI6IGluY2x1ZGUga2RiIGZyb250ZW5kIGZvciBrZ2RiIgpAQCAtOTYsNyArOTYsNyBA
QCBjb25maWcgS0RCX0RFRkFVTFRfRU5BQkxFCiAKIAkgIFRoZSBjb25maWcgb3B0aW9uIG1lcmVs
eSBzZXRzIHRoZSBkZWZhdWx0IGF0IGJvb3QgdGltZS4gQm90aAogCSAgaXNzdWluZyAnZWNobyBY
ID4gL3N5cy9tb2R1bGUva2RiL3BhcmFtZXRlcnMvY21kX2VuYWJsZScgb3IKLSAgICAgICAgICBz
ZXR0aW5nIHdpdGgga2RiLmNtZF9lbmFibGU9WCBrZXJuZWwgY29tbWFuZCBsaW5lIG9wdGlvbiB3
aWxsCisJICBzZXR0aW5nIHdpdGgga2RiLmNtZF9lbmFibGU9WCBrZXJuZWwgY29tbWFuZCBsaW5l
IG9wdGlvbiB3aWxsCiAJICBvdmVycmlkZSB0aGUgZGVmYXVsdCBzZXR0aW5ncy4KIAogY29uZmln
IEtEQl9LRVlCT0FSRApkaWZmIC0tZ2l0IGEvbW0vS2NvbmZpZyBiL21tL0tjb25maWcKaW5kZXgg
YTVkYWU5YTdlYjUxLi5lNmUxNmQwZWY1NDQgMTAwNjQ0Ci0tLSBhL21tL0tjb25maWcKKysrIGIv
bW0vS2NvbmZpZwpAQCAtMTYwLDkgKzE2MCw5IEBAIGNvbmZpZyBNRU1PUllfSE9UUExVR19TUEFS
U0UKIAlkZXBlbmRzIG9uIFNQQVJTRU1FTSAmJiBNRU1PUllfSE9UUExVRwogCiBjb25maWcgTUVN
T1JZX0hPVFBMVUdfREVGQVVMVF9PTkxJTkUKLSAgICAgICAgYm9vbCAiT25saW5lIHRoZSBuZXds
eSBhZGRlZCBtZW1vcnkgYmxvY2tzIGJ5IGRlZmF1bHQiCi0gICAgICAgIGRlcGVuZHMgb24gTUVN
T1JZX0hPVFBMVUcKLSAgICAgICAgaGVscAorCWJvb2wgIk9ubGluZSB0aGUgbmV3bHkgYWRkZWQg
bWVtb3J5IGJsb2NrcyBieSBkZWZhdWx0IgorCWRlcGVuZHMgb24gTUVNT1JZX0hPVFBMVUcKKwlo
ZWxwCiAJICBUaGlzIG9wdGlvbiBzZXRzIHRoZSBkZWZhdWx0IHBvbGljeSBzZXR0aW5nIGZvciBt
ZW1vcnkgaG90cGx1ZwogCSAgb25saW5pbmcgcG9saWN5ICgvc3lzL2RldmljZXMvc3lzdGVtL21l
bW9yeS9hdXRvX29ubGluZV9ibG9ja3MpIHdoaWNoCiAJICBkZXRlcm1pbmVzIHdoYXQgaGFwcGVu
cyB0byBuZXdseSBhZGRlZCBtZW1vcnkgcmVnaW9ucy4gUG9saWN5IHNldHRpbmcKQEAgLTIyNywx
NCArMjI3LDE0IEBAIGNvbmZpZyBDT01QQUNUSU9OCiAJc2VsZWN0IE1JR1JBVElPTgogCWRlcGVu
ZHMgb24gTU1VCiAJaGVscAotICAgICAgICAgIENvbXBhY3Rpb24gaXMgdGhlIG9ubHkgbWVtb3J5
IG1hbmFnZW1lbnQgY29tcG9uZW50IHRvIGZvcm0KLSAgICAgICAgICBoaWdoIG9yZGVyIChsYXJn
ZXIgcGh5c2ljYWxseSBjb250aWd1b3VzKSBtZW1vcnkgYmxvY2tzCi0gICAgICAgICAgcmVsaWFi
bHkuIFRoZSBwYWdlIGFsbG9jYXRvciByZWxpZXMgb24gY29tcGFjdGlvbiBoZWF2aWx5IGFuZAot
ICAgICAgICAgIHRoZSBsYWNrIG9mIHRoZSBmZWF0dXJlIGNhbiBsZWFkIHRvIHVuZXhwZWN0ZWQg
T09NIGtpbGxlcgotICAgICAgICAgIGludm9jYXRpb25zIGZvciBoaWdoIG9yZGVyIG1lbW9yeSBy
ZXF1ZXN0cy4gWW91IHNob3VsZG4ndAotICAgICAgICAgIGRpc2FibGUgdGhpcyBvcHRpb24gdW5s
ZXNzIHRoZXJlIHJlYWxseSBpcyBhIHN0cm9uZyByZWFzb24gZm9yCi0gICAgICAgICAgaXQgYW5k
IHRoZW4gd2Ugd291bGQgYmUgcmVhbGx5IGludGVyZXN0ZWQgdG8gaGVhciBhYm91dCB0aGF0IGF0
Ci0gICAgICAgICAgbGludXgtbW1Aa3ZhY2sub3JnLgorCSAgQ29tcGFjdGlvbiBpcyB0aGUgb25s
eSBtZW1vcnkgbWFuYWdlbWVudCBjb21wb25lbnQgdG8gZm9ybQorCSAgaGlnaCBvcmRlciAobGFy
Z2VyIHBoeXNpY2FsbHkgY29udGlndW91cykgbWVtb3J5IGJsb2NrcworCSAgcmVsaWFibHkuIFRo
ZSBwYWdlIGFsbG9jYXRvciByZWxpZXMgb24gY29tcGFjdGlvbiBoZWF2aWx5IGFuZAorCSAgdGhl
IGxhY2sgb2YgdGhlIGZlYXR1cmUgY2FuIGxlYWQgdG8gdW5leHBlY3RlZCBPT00ga2lsbGVyCisJ
ICBpbnZvY2F0aW9ucyBmb3IgaGlnaCBvcmRlciBtZW1vcnkgcmVxdWVzdHMuIFlvdSBzaG91bGRu
J3QKKwkgIGRpc2FibGUgdGhpcyBvcHRpb24gdW5sZXNzIHRoZXJlIHJlYWxseSBpcyBhIHN0cm9u
ZyByZWFzb24gZm9yCisJICBpdCBhbmQgdGhlbiB3ZSB3b3VsZCBiZSByZWFsbHkgaW50ZXJlc3Rl
ZCB0byBoZWFyIGFib3V0IHRoYXQgYXQKKwkgIGxpbnV4LW1tQGt2YWNrLm9yZy4KIAogIwogIyBz
dXBwb3J0IGZvciBwYWdlIG1pZ3JhdGlvbgpAQCAtMzAxLDEwICszMDEsMTAgQEAgY29uZmlnIEtT
TQogCSAgcm9vdCBoYXMgc2V0IC9zeXMva2VybmVsL21tL2tzbS9ydW4gdG8gMSAoaWYgQ09ORklH
X1NZU0ZTIGlzIHNldCkuCiAKIGNvbmZpZyBERUZBVUxUX01NQVBfTUlOX0FERFIKLSAgICAgICAg
aW50ICJMb3cgYWRkcmVzcyBzcGFjZSB0byBwcm90ZWN0IGZyb20gdXNlciBhbGxvY2F0aW9uIgor
CWludCAiTG93IGFkZHJlc3Mgc3BhY2UgdG8gcHJvdGVjdCBmcm9tIHVzZXIgYWxsb2NhdGlvbiIK
IAlkZXBlbmRzIG9uIE1NVQotICAgICAgICBkZWZhdWx0IDQwOTYKLSAgICAgICAgaGVscAorCWRl
ZmF1bHQgNDA5NgorCWhlbHAKIAkgIFRoaXMgaXMgdGhlIHBvcnRpb24gb2YgbG93IHZpcnR1YWwg
bWVtb3J5IHdoaWNoIHNob3VsZCBiZSBwcm90ZWN0ZWQKIAkgIGZyb20gdXNlcnNwYWNlIGFsbG9j
YXRpb24uICBLZWVwaW5nIGEgdXNlciBmcm9tIHdyaXRpbmcgdG8gbG93IHBhZ2VzCiAJICBjYW4g
aGVscCByZWR1Y2UgdGhlIGltcGFjdCBvZiBrZXJuZWwgTlVMTCBwb2ludGVyIGJ1Z3MuCmRpZmYg
LS1naXQgYS9zYW1wbGVzL0tjb25maWcgYi9zYW1wbGVzL0tjb25maWcKaW5kZXggMmMzZTA3YWRk
ZDM4Li5jNTkzN2M1MTc1ZDIgMTAwNjQ0Ci0tLSBhL3NhbXBsZXMvS2NvbmZpZworKysgYi9zYW1w
bGVzL0tjb25maWcKQEAgLTEzLDcgKzEzLDcgQEAgY29uZmlnIFNBTVBMRV9UUkFDRV9FVkVOVFMK
IAkgIFRoaXMgYnVpbGQgdHJhY2UgZXZlbnQgZXhhbXBsZSBtb2R1bGVzLgogCiBjb25maWcgU0FN
UExFX1RSQUNFX1BSSU5USwotICAgICAgICB0cmlzdGF0ZSAiQnVpbGQgdHJhY2VfcHJpbnRrIG1v
ZHVsZSAtIHRlc3RzIHZhcmlvdXMgdHJhY2VfcHJpbnRrIGZvcm1hdHMiCisJdHJpc3RhdGUgIkJ1
aWxkIHRyYWNlX3ByaW50ayBtb2R1bGUgLSB0ZXN0cyB2YXJpb3VzIHRyYWNlX3ByaW50ayBmb3Jt
YXRzIgogCWRlcGVuZHMgb24gRVZFTlRfVFJBQ0lORyAmJiBtCiAJaGVscAogCSBUaGlzIGJ1aWxk
cyBhIG1vZHVsZSB0aGF0IGNhbGxzIHRyYWNlX3ByaW50aygpIGFuZCBjYW4gYmUgdXNlZCB0bwpk
aWZmIC0tZ2l0IGEvc2VjdXJpdHkvYXBwYXJtb3IvS2NvbmZpZyBiL3NlY3VyaXR5L2FwcGFybW9y
L0tjb25maWcKaW5kZXggYTQyMmEzNDlmOTI2Li4xZjBlNzEyYzVlNTAgMTAwNjQ0Ci0tLSBhL3Nl
Y3VyaXR5L2FwcGFybW9yL0tjb25maWcKKysrIGIvc2VjdXJpdHkvYXBwYXJtb3IvS2NvbmZpZwpA
QCAtMzIsNyArMzIsNyBAQCBjb25maWcgU0VDVVJJVFlfQVBQQVJNT1JfSEFTSF9ERUZBVUxUCiAg
ICAgICAgZGVwZW5kcyBvbiBTRUNVUklUWV9BUFBBUk1PUl9IQVNICiAgICAgICAgZGVmYXVsdCB5
CiAgICAgICAgaGVscAotICAgICAgICAgVGhpcyBvcHRpb24gc2VsZWN0cyB3aGV0aGVyIHNoYTEg
aGFzaGluZyBvZiBsb2FkZWQgcG9saWN5CisJIFRoaXMgb3B0aW9uIHNlbGVjdHMgd2hldGhlciBz
aGExIGhhc2hpbmcgb2YgbG9hZGVkIHBvbGljeQogCSBpcyBlbmFibGVkIGJ5IGRlZmF1bHQuIFRo
ZSBnZW5lcmF0aW9uIG9mIHNoYTEgaGFzaGVzIGZvcgogCSBsb2FkZWQgcG9saWN5IHByb3ZpZGUg
c3lzdGVtIGFkbWluaXN0cmF0b3JzIGEgcXVpY2sgd2F5CiAJIHRvIHZlcmlmeSB0aGF0IHBvbGlj
eSBpbiB0aGUga2VybmVsIG1hdGNoZXMgd2hhdCBpcyBleHBlY3RlZCwKZGlmZiAtLWdpdCBhL3Nl
Y3VyaXR5L2ludGVncml0eS9LY29uZmlnIGIvc2VjdXJpdHkvaW50ZWdyaXR5L0tjb25maWcKaW5k
ZXggMGJhZTZhZGI2M2E5Li5mN2YyZGYwODJmNTEgMTAwNjQ0Ci0tLSBhL3NlY3VyaXR5L2ludGVn
cml0eS9LY29uZmlnCisrKyBiL3NlY3VyaXR5L2ludGVncml0eS9LY29uZmlnCkBAIC0zNCwxMCAr
MzQsMTAgQEAgY29uZmlnIElOVEVHUklUWV9BU1lNTUVUUklDX0tFWVMKIAlib29sICJFbmFibGUg
YXN5bW1ldHJpYyBrZXlzIHN1cHBvcnQiCiAJZGVwZW5kcyBvbiBJTlRFR1JJVFlfU0lHTkFUVVJF
CiAJZGVmYXVsdCBuCi0gICAgICAgIHNlbGVjdCBBU1lNTUVUUklDX0tFWV9UWVBFCi0gICAgICAg
IHNlbGVjdCBBU1lNTUVUUklDX1BVQkxJQ19LRVlfU1VCVFlQRQotICAgICAgICBzZWxlY3QgQ1JZ
UFRPX1JTQQotICAgICAgICBzZWxlY3QgWDUwOV9DRVJUSUZJQ0FURV9QQVJTRVIKKwlzZWxlY3Qg
QVNZTU1FVFJJQ19LRVlfVFlQRQorCXNlbGVjdCBBU1lNTUVUUklDX1BVQkxJQ19LRVlfU1VCVFlQ
RQorCXNlbGVjdCBDUllQVE9fUlNBCisJc2VsZWN0IFg1MDlfQ0VSVElGSUNBVEVfUEFSU0VSCiAJ
aGVscAogCSAgVGhpcyBvcHRpb24gZW5hYmxlcyBkaWdpdGFsIHNpZ25hdHVyZSB2ZXJpZmljYXRp
b24gdXNpbmcKIAkgIGFzeW1tZXRyaWMga2V5cy4KQEAgLTUzLDE0ICs1MywxNCBAQCBjb25maWcg
SU5URUdSSVRZX1RSVVNURURfS0VZUklORwogCSAgIGtleXJpbmcuCiAKIGNvbmZpZyBJTlRFR1JJ
VFlfUExBVEZPUk1fS0VZUklORwotICAgICAgICBib29sICJQcm92aWRlIGtleXJpbmcgZm9yIHBs
YXRmb3JtL2Zpcm13YXJlIHRydXN0ZWQga2V5cyIKLSAgICAgICAgZGVwZW5kcyBvbiBJTlRFR1JJ
VFlfQVNZTU1FVFJJQ19LRVlTCi0gICAgICAgIGRlcGVuZHMgb24gU1lTVEVNX0JMQUNLTElTVF9L
RVlSSU5HCi0gICAgICAgIGhlbHAKLSAgICAgICAgIFByb3ZpZGUgYSBzZXBhcmF0ZSwgZGlzdGlu
Y3Qga2V5cmluZyBmb3IgcGxhdGZvcm0gdHJ1c3RlZCBrZXlzLCB3aGljaAotICAgICAgICAgdGhl
IGtlcm5lbCBhdXRvbWF0aWNhbGx5IHBvcHVsYXRlcyBkdXJpbmcgaW5pdGlhbGl6YXRpb24gZnJv
bSB2YWx1ZXMKLSAgICAgICAgIHByb3ZpZGVkIGJ5IHRoZSBwbGF0Zm9ybSBmb3IgdmVyaWZ5aW5n
IHRoZSBrZXhlYydlZCBrZXJuZWQgaW1hZ2UKLSAgICAgICAgIGFuZCwgcG9zc2libHksIHRoZSBp
bml0cmFtZnMgc2lnbmF0dXJlLgorCWJvb2wgIlByb3ZpZGUga2V5cmluZyBmb3IgcGxhdGZvcm0v
ZmlybXdhcmUgdHJ1c3RlZCBrZXlzIgorCWRlcGVuZHMgb24gSU5URUdSSVRZX0FTWU1NRVRSSUNf
S0VZUworCWRlcGVuZHMgb24gU1lTVEVNX0JMQUNLTElTVF9LRVlSSU5HCisJaGVscAorCSBQcm92
aWRlIGEgc2VwYXJhdGUsIGRpc3RpbmN0IGtleXJpbmcgZm9yIHBsYXRmb3JtIHRydXN0ZWQga2V5
cywgd2hpY2gKKwkgdGhlIGtlcm5lbCBhdXRvbWF0aWNhbGx5IHBvcHVsYXRlcyBkdXJpbmcgaW5p
dGlhbGl6YXRpb24gZnJvbSB2YWx1ZXMKKwkgcHJvdmlkZWQgYnkgdGhlIHBsYXRmb3JtIGZvciB2
ZXJpZnlpbmcgdGhlIGtleGVjJ2VkIGtlcm5lZCBpbWFnZQorCSBhbmQsIHBvc3NpYmx5LCB0aGUg
aW5pdHJhbWZzIHNpZ25hdHVyZS4KIAogY29uZmlnIExPQURfVUVGSV9LRVlTCiAgICAgICAgZGVw
ZW5kcyBvbiBJTlRFR1JJVFlfUExBVEZPUk1fS0VZUklORwpkaWZmIC0tZ2l0IGEvc2VjdXJpdHkv
aW50ZWdyaXR5L2ltYS9LY29uZmlnIGIvc2VjdXJpdHkvaW50ZWdyaXR5L2ltYS9LY29uZmlnCmlu
ZGV4IDgzODQ3NmQ3ODBlNS4uZWM5MjU5YmQ4MTE1IDEwMDY0NAotLS0gYS9zZWN1cml0eS9pbnRl
Z3JpdHkvaW1hL0tjb25maWcKKysrIGIvc2VjdXJpdHkvaW50ZWdyaXR5L2ltYS9LY29uZmlnCkBA
IC0xNTksMTMgKzE1OSwxMyBAQCBjb25maWcgSU1BX0FQUFJBSVNFCiAJICBJZiB1bnN1cmUsIHNh
eSBOLgogCiBjb25maWcgSU1BX0FSQ0hfUE9MSUNZCi0gICAgICAgIGJvb2wgIkVuYWJsZSBsb2Fk
aW5nIGFuIElNQSBhcmNoaXRlY3R1cmUgc3BlY2lmaWMgcG9saWN5IgotICAgICAgICBkZXBlbmRz
IG9uIChLRVhFQ19TSUcgJiYgSU1BKSB8fCBJTUFfQVBQUkFJU0UgXAorCWJvb2wgIkVuYWJsZSBs
b2FkaW5nIGFuIElNQSBhcmNoaXRlY3R1cmUgc3BlY2lmaWMgcG9saWN5IgorCWRlcGVuZHMgb24g
KEtFWEVDX1NJRyAmJiBJTUEpIHx8IElNQV9BUFBSQUlTRSBcCiAJCSAgICYmIElOVEVHUklUWV9B
U1lNTUVUUklDX0tFWVMKLSAgICAgICAgZGVmYXVsdCBuCi0gICAgICAgIGhlbHAKLSAgICAgICAg
ICBUaGlzIG9wdGlvbiBlbmFibGVzIGxvYWRpbmcgYW4gSU1BIGFyY2hpdGVjdHVyZSBzcGVjaWZp
YyBwb2xpY3kKLSAgICAgICAgICBiYXNlZCBvbiBydW4gdGltZSBzZWN1cmUgYm9vdCBmbGFncy4K
KwlkZWZhdWx0IG4KKwloZWxwCisJICBUaGlzIG9wdGlvbiBlbmFibGVzIGxvYWRpbmcgYW4gSU1B
IGFyY2hpdGVjdHVyZSBzcGVjaWZpYyBwb2xpY3kKKwkgIGJhc2VkIG9uIHJ1biB0aW1lIHNlY3Vy
ZSBib290IGZsYWdzLgogCiBjb25maWcgSU1BX0FQUFJBSVNFX0JVSUxEX1BPTElDWQogCWJvb2wg
IklNQSBidWlsZCB0aW1lIGNvbmZpZ3VyZWQgcG9saWN5IHJ1bGVzIgpkaWZmIC0tZ2l0IGEvc2Vj
dXJpdHkvc2FmZXNldGlkL0tjb25maWcgYi9zZWN1cml0eS9zYWZlc2V0aWQvS2NvbmZpZwppbmRl
eCAxOGI1ZmI5MDQxN2IuLmFiMWEyYzY5YjBiOCAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvc2FmZXNl
dGlkL0tjb25maWcKKysrIGIvc2VjdXJpdHkvc2FmZXNldGlkL0tjb25maWcKQEAgLTEsMTUgKzEs
MTUgQEAKICMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQogY29uZmlnIFNF
Q1VSSVRZX1NBRkVTRVRJRAotICAgICAgICBib29sICJHYXRlIHNldGlkIHRyYW5zaXRpb25zIHRv
IGxpbWl0IENBUF9TRVR7VS9HfUlEIGNhcGFiaWxpdGllcyIKLSAgICAgICAgZGVwZW5kcyBvbiBT
RUNVUklUWQotICAgICAgICBzZWxlY3QgU0VDVVJJVFlGUwotICAgICAgICBkZWZhdWx0IG4KLSAg
ICAgICAgaGVscAotICAgICAgICAgIFNhZmVTZXRJRCBpcyBhbiBMU00gbW9kdWxlIHRoYXQgZ2F0
ZXMgdGhlIHNldGlkIGZhbWlseSBvZiBzeXNjYWxscyB0bwotICAgICAgICAgIHJlc3RyaWN0IFVJ
RC9HSUQgdHJhbnNpdGlvbnMgZnJvbSBhIGdpdmVuIFVJRC9HSUQgdG8gb25seSB0aG9zZQotICAg
ICAgICAgIGFwcHJvdmVkIGJ5IGEgc3lzdGVtLXdpZGUgd2hpdGVsaXN0LiBUaGVzZSByZXN0cmlj
dGlvbnMgYWxzbyBwcm9oaWJpdAotICAgICAgICAgIHRoZSBnaXZlbiBVSURzL0dJRHMgZnJvbSBv
YnRhaW5pbmcgYXV4aWxpYXJ5IHByaXZpbGVnZXMgYXNzb2NpYXRlZAotICAgICAgICAgIHdpdGgg
Q0FQX1NFVHtVL0d9SUQsIHN1Y2ggYXMgYWxsb3dpbmcgYSB1c2VyIHRvIHNldCB1cCB1c2VyIG5h
bWVzcGFjZQotICAgICAgICAgIFVJRCBtYXBwaW5ncy4KKwlib29sICJHYXRlIHNldGlkIHRyYW5z
aXRpb25zIHRvIGxpbWl0IENBUF9TRVR7VS9HfUlEIGNhcGFiaWxpdGllcyIKKwlkZXBlbmRzIG9u
IFNFQ1VSSVRZCisJc2VsZWN0IFNFQ1VSSVRZRlMKKwlkZWZhdWx0IG4KKwloZWxwCisJICBTYWZl
U2V0SUQgaXMgYW4gTFNNIG1vZHVsZSB0aGF0IGdhdGVzIHRoZSBzZXRpZCBmYW1pbHkgb2Ygc3lz
Y2FsbHMgdG8KKwkgIHJlc3RyaWN0IFVJRC9HSUQgdHJhbnNpdGlvbnMgZnJvbSBhIGdpdmVuIFVJ
RC9HSUQgdG8gb25seSB0aG9zZQorCSAgYXBwcm92ZWQgYnkgYSBzeXN0ZW0td2lkZSB3aGl0ZWxp
c3QuIFRoZXNlIHJlc3RyaWN0aW9ucyBhbHNvIHByb2hpYml0CisJICB0aGUgZ2l2ZW4gVUlEcy9H
SURzIGZyb20gb2J0YWluaW5nIGF1eGlsaWFyeSBwcml2aWxlZ2VzIGFzc29jaWF0ZWQKKwkgIHdp
dGggQ0FQX1NFVHtVL0d9SUQsIHN1Y2ggYXMgYWxsb3dpbmcgYSB1c2VyIHRvIHNldCB1cCB1c2Vy
IG5hbWVzcGFjZQorCSAgVUlEIG1hcHBpbmdzLgogCi0gICAgICAgICAgSWYgeW91IGFyZSB1bnN1
cmUgaG93IHRvIGFuc3dlciB0aGlzIHF1ZXN0aW9uLCBhbnN3ZXIgTi4KKwkgIElmIHlvdSBhcmUg
dW5zdXJlIGhvdyB0byBhbnN3ZXIgdGhpcyBxdWVzdGlvbiwgYW5zd2VyIE4uCi0tIAoyLjE3LjEK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZl
bCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
