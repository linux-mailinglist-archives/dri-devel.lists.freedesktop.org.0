Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A534BF29B7
	for <lists+dri-devel@lfdr.de>; Thu,  7 Nov 2019 09:50:33 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9DEE76EF26;
	Thu,  7 Nov 2019 08:50:29 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from ste-pvt-msa2.bahnhof.se (ste-pvt-msa2.bahnhof.se
 [213.80.101.71])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0DBBC6EF1B
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 08:50:26 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by ste-pvt-msa2.bahnhof.se (Postfix) with ESMTP id 1210A3F470
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 09:41:33 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from ste-pvt-msa2.bahnhof.se ([127.0.0.1])
 by localhost (ste-ftg-msa2.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id JjmZa6_hKQOD for <dri-devel@lists.freedesktop.org>;
 Thu,  7 Nov 2019 09:41:26 +0100 (CET)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by ste-pvt-msa2.bahnhof.se (Postfix) with ESMTPA id AAA6F3F3F1
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 09:41:25 +0100 (CET)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 915BC360325
 for <dri-devel@lists.freedesktop.org>; Thu,  7 Nov 2019 09:41:24 +0100 (CET)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v7 5/8] drm/vmwgfx: Implement an infrastructure for
 write-coherent resources
Date: Thu,  7 Nov 2019 09:41:13 +0100
Message-Id: <20191107084116.33032-6-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191107084116.33032-1-thomas_os@shipmail.org>
References: <20191107084116.33032-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1573116084; bh=c4ERmeMnr+eqIUcW8YrseAxwlFAsBVBpuqIGROc3WCU=;
 h=From:To:Subject:Date:In-Reply-To:References:From;
 b=dBEJbNAX9Mli7y+rs+5+Djr9k6pDo4MUUoQNGGndy4j+CnXao9YxXGNfhaQVaWYoK
 nCGhvj+3ClSIKN3hmq+lvfl3tWhTJgRkQmmUOX/80UABD3FfkNdqQQv9sM68IwAnFT
 /RBzSt7QjAvR2SyYYhzpTXT3W3gzDVmny3FDdRe0=
X-Mailman-Original-Authentication-Results: ste-pvt-msa2.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b=dBEJbNAX; 
 dkim-atps=neutral
X-Mailman-Original-Authentication-Results: ste-ftg-msa2.bahnhof.se
 (amavisd-new); 
 dkim=pass (1024-bit key) header.d=shipmail.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKVGhpcyBpbmZy
YXN0cnVjdHVyZSB3aWxsLCBmb3IgY29oZXJlbnQgcmVzb3VyY2VzLCBtYWtlIHN1cmUgdGhhdApm
cm9tIHRoZSB1c2VyLXNwYWNlIHBvaW50IG9mIHZpZXcsIGRhdGEgd3JpdHRlbiBieSB0aGUgQ1BV
IGlzIGltbWVkaWF0ZWx5CmF1dG9tYXRpY2FsbHkgYXZhaWxhYmxlIHRvIHRoZSBHUFUgYXQgcmVz
b3VyY2UgdmFsaWRhdGlvbiB0aW1lLgoKQ2M6IEFuZHJldyBNb3J0b24gPGFrcG1AbGludXgtZm91
bmRhdGlvbi5vcmc+CkNjOiBNYXR0aGV3IFdpbGNveCA8d2lsbHlAaW5mcmFkZWFkLm9yZz4KQ2M6
IFdpbGwgRGVhY29uIDx3aWxsLmRlYWNvbkBhcm0uY29tPgpDYzogUGV0ZXIgWmlqbHN0cmEgPHBl
dGVyekBpbmZyYWRlYWQub3JnPgpDYzogUmlrIHZhbiBSaWVsIDxyaWVsQHN1cnJpZWwuY29tPgpD
YzogTWluY2hhbiBLaW0gPG1pbmNoYW5Aa2VybmVsLm9yZz4KQ2M6IE1pY2hhbCBIb2NrbyA8bWhv
Y2tvQHN1c2UuY29tPgpDYzogSHVhbmcgWWluZyA8eWluZy5odWFuZ0BpbnRlbC5jb20+CkNjOiBK
w6lyw7RtZSBHbGlzc2UgPGpnbGlzc2VAcmVkaGF0LmNvbT4KQ2M6IEtpcmlsbCBBLiBTaHV0ZW1v
diA8a2lyaWxsQHNodXRlbW92Lm5hbWU+ClNpZ25lZC1vZmYtYnk6IFRob21hcyBIZWxsc3Ryb20g
PHRoZWxsc3Ryb21Adm13YXJlLmNvbT4KUmV2aWV3ZWQtYnk6IERlZXBhayBSYXdhdCA8ZHJhd2F0
QHZtd2FyZS5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC9LY29uZmlnICAgICAgICAg
ICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS92bXdnZngvTWFrZWZpbGUgICAgICAgICAg
ICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfYm8uYyAgICAgICAg
ICAgIHwgICA1ICstCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9kcnYuaCAgICAgICAg
ICAgfCAgMjMgKy0KIGRyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2V4ZWNidWYuYyAgICAg
ICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9wYWdlX2RpcnR5LmMgICAg
fCA0MjEgKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9y
ZXNvdXJjZS5jICAgICAgfCAgNTcgKysrCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9y
ZXNvdXJjZV9wcml2LmggfCAgMTEgKwogZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdHRt
X2dsdWUuYyAgICAgIHwgIDE1ICstCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxp
ZGF0aW9uLmMgICAgfCAgNzEgKysrCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxp
ZGF0aW9uLmggICAgfCAgMTYgKy0KIDExIGZpbGVzIGNoYW5nZWQsIDYwMiBpbnNlcnRpb25zKCsp
LCAyMSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vdm13
Z2Z4L3Ztd2dmeF9wYWdlX2RpcnR5LmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13
Z2Z4L0tjb25maWcgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L0tjb25maWcKaW5kZXggNmIyOGEz
MjZmOGJiLi4xNWFjZGYyYTdjMGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngv
S2NvbmZpZworKysgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L0tjb25maWcKQEAgLTgsNiArOCw3
IEBAIGNvbmZpZyBEUk1fVk1XR0ZYCiAJc2VsZWN0IEZCX0NGQl9JTUFHRUJMSVQKIAlzZWxlY3Qg
RFJNX1RUTQogCXNlbGVjdCBGQgorCXNlbGVjdCBNQVBQSU5HX0RJUlRZX0hFTFBFUlMKIAkjIE9u
bHkgbmVlZGVkIGZvciB0aGUgdHJhbnNpdGlvbmFsIHVzZSBvZiBkcm1fY3J0Y19pbml0IC0gY2Fu
IGJlIHJlbW92ZWQKIAkjIGFnYWluIG9uY2Ugdm13Z2Z4IHNldHMgdXAgdGhlIHByaW1hcnkgcGxh
bmUgaXRzZWxmLgogCXNlbGVjdCBEUk1fS01TX0hFTFBFUgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL3Ztd2dmeC9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvTWFrZWZpbGUK
aW5kZXggODg0MWJkMzBlMWU1Li5jODc3YTIxYTA3MzkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS92bXdnZngvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC9NYWtlZmls
ZQpAQCAtOCw3ICs4LDcgQEAgdm13Z2Z4LXkgOj0gdm13Z2Z4X2V4ZWNidWYubyB2bXdnZnhfZ21y
Lm8gdm13Z2Z4X2ttcy5vIHZtd2dmeF9kcnYubyBcCiAJICAgIHZtd2dmeF9jbWRidWZfcmVzLm8g
dm13Z2Z4X2NtZGJ1Zi5vIHZtd2dmeF9zdGR1Lm8gXAogCSAgICB2bXdnZnhfY290YWJsZS5vIHZt
d2dmeF9zby5vIHZtd2dmeF9iaW5kaW5nLm8gdm13Z2Z4X21zZy5vIFwKIAkgICAgdm13Z2Z4X3Np
bXBsZV9yZXNvdXJjZS5vIHZtd2dmeF92YS5vIHZtd2dmeF9ibGl0Lm8gXAotCSAgICB2bXdnZnhf
dmFsaWRhdGlvbi5vIFwKKwkgICAgdm13Z2Z4X3ZhbGlkYXRpb24ubyB2bXdnZnhfcGFnZV9kaXJ0
eS5vIFwKIAkgICAgdHRtX29iamVjdC5vIHR0bV9sb2NrLm8KIAogb2JqLSQoQ09ORklHX0RSTV9W
TVdHRlgpIDo9IHZtd2dmeC5vCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Zt
d2dmeF9iby5jIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfYm8uYwppbmRleCA3NDAx
NmEwOGQxMTguLjRmNmE3NWQ0MmQ3ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dm
eC92bXdnZnhfYm8uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9iby5jCkBA
IC00NjIsNiArNDYyLDcgQEAgdm9pZCB2bXdfYm9fYm9fZnJlZShzdHJ1Y3QgdHRtX2J1ZmZlcl9v
YmplY3QgKmJvKQogewogCXN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdm13X2JvID0gdm13X2J1
ZmZlcl9vYmplY3QoYm8pOwogCisJV0FSTl9PTih2bXdfYm8tPmRpcnR5KTsKIAl2bXdfYm9fdW5t
YXAodm13X2JvKTsKIAlrZnJlZSh2bXdfYm8pOwogfQpAQCAtNDc1LDggKzQ3NiwxMCBAQCB2b2lk
IHZtd19ib19ib19mcmVlKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8pCiBzdGF0aWMgdm9p
ZCB2bXdfdXNlcl9ib19kZXN0cm95KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8pCiB7CiAJ
c3RydWN0IHZtd191c2VyX2J1ZmZlcl9vYmplY3QgKnZtd191c2VyX2JvID0gdm13X3VzZXJfYnVm
ZmVyX29iamVjdChibyk7CisJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8gPSAmdm13X3Vz
ZXJfYm8tPnZibzsKIAotCXZtd19ib191bm1hcCgmdm13X3VzZXJfYm8tPnZibyk7CisJV0FSTl9P
Tih2Ym8tPmRpcnR5KTsKKwl2bXdfYm9fdW5tYXAodmJvKTsKIAl0dG1fcHJpbWVfb2JqZWN0X2tm
cmVlKHZtd191c2VyX2JvLCBwcmltZSk7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS92bXdnZngvdm13Z2Z4X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2
LmgKaW5kZXggYjE4ODQyZjczMDgxLi43ZjJjY2UwMTY2ODcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS92bXdnZngvdm13Z2Z4X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngv
dm13Z2Z4X2Rydi5oCkBAIC0xMDcsNiArMTA3LDcgQEAgc3RydWN0IHZtd19mcHJpdiB7CiAgKiBA
ZHhfcXVlcnlfY3R4OiBEWCBjb250ZXh0IGlmIHRoaXMgYnVmZmVyIG9iamVjdCBpcyB1c2VkIGFz
IGEgRFggcXVlcnkgTU9CCiAgKiBAbWFwOiBLbWFwIG9iamVjdCBmb3Igc2VtaS1wZXJzaXN0ZW50
IG1hcHBpbmdzCiAgKiBAcmVzX3ByaW9zOiBFdmljdGlvbiBwcmlvcml0eSBjb3VudHMgZm9yIGF0
dGFjaGVkIHJlc291cmNlcworICogQGRpcnR5OiBzdHJ1Y3R1cmUgZm9yIHVzZXItc3BhY2UgZGly
dHktdHJhY2tpbmcKICAqLwogc3RydWN0IHZtd19idWZmZXJfb2JqZWN0IHsKIAlzdHJ1Y3QgdHRt
X2J1ZmZlcl9vYmplY3QgYmFzZTsKQEAgLTExOCw2ICsxMTksNyBAQCBzdHJ1Y3Qgdm13X2J1ZmZl
cl9vYmplY3QgewogCS8qIFByb3RlY3RlZCBieSByZXNlcnZhdGlvbiAqLwogCXN0cnVjdCB0dG1f
Ym9fa21hcF9vYmogbWFwOwogCXUzMiByZXNfcHJpb3NbVFRNX01BWF9CT19QUklPUklUWV07CisJ
c3RydWN0IHZtd19ib19kaXJ0eSAqZGlydHk7CiB9OwogCiAvKioKQEAgLTE0OCw3ICsxNTAsOCBA
QCBzdHJ1Y3Qgdm13X3Jlc19mdW5jOwogICogQHJlc19kaXJ0eTogUmVzb3VyY2UgY29udGFpbnMg
ZGF0YSBub3QgeWV0IGluIHRoZSBiYWNrdXAgYnVmZmVyLiBQcm90ZWN0ZWQKICAqIGJ5IHJlc291
cmNlIHJlc2VydmVkLgogICogQGJhY2t1cF9kaXJ0eTogQmFja3VwIGJ1ZmZlciBjb250YWlucyBk
YXRhIG5vdCB5ZXQgaW4gdGhlIEhXIHJlc291cmNlLgotICogUHJvdGVjdGUgYnkgcmVzb3VyY2Ug
cmVzZXJ2ZWQuCisgKiBQcm90ZWN0ZWQgYnkgcmVzb3VyY2UgcmVzZXJ2ZWQuCisgKiBAY29oZXJl
bnQ6IEVtdWxhdGUgY29oZXJlbmN5IGJ5IHRyYWNraW5nIHZtIGFjY2Vzc2VzLgogICogQGJhY2t1
cDogVGhlIGJhY2t1cCBidWZmZXIgaWYgYW55LiBQcm90ZWN0ZWQgYnkgcmVzb3VyY2UgcmVzZXJ2
ZWQuCiAgKiBAYmFja3VwX29mZnNldDogT2Zmc2V0IGludG8gdGhlIGJhY2t1cCBidWZmZXIgaWYg
YW55LiBQcm90ZWN0ZWQgYnkgcmVzb3VyY2UKICAqIHJlc2VydmVkLiBOb3RlIHRoYXQgb25seSBh
IGZldyByZXNvdXJjZSB0eXBlcyBjYW4gaGF2ZSBhIEBiYWNrdXBfb2Zmc2V0CkBAIC0xNjUsMTQg
KzE2OCwxNiBAQCBzdHJ1Y3Qgdm13X3Jlc19mdW5jOwogICogQGh3X2Rlc3Ryb3k6IENhbGxiYWNr
IHRvIGRlc3Ryb3kgdGhlIHJlc291cmNlIG9uIHRoZSBkZXZpY2UsIGFzIHBhcnQgb2YKICAqIHJl
c291cmNlIGRlc3RydWN0aW9uLgogICovCitzdHJ1Y3Qgdm13X3Jlc291cmNlX2RpcnR5Owogc3Ry
dWN0IHZtd19yZXNvdXJjZSB7CiAJc3RydWN0IGtyZWYga3JlZjsKIAlzdHJ1Y3Qgdm13X3ByaXZh
dGUgKmRldl9wcml2OwogCWludCBpZDsKIAl1MzIgdXNlZF9wcmlvOwogCXVuc2lnbmVkIGxvbmcg
YmFja3VwX3NpemU7Ci0JYm9vbCByZXNfZGlydHk7Ci0JYm9vbCBiYWNrdXBfZGlydHk7CisJdTMy
IHJlc19kaXJ0eSA6IDE7CisJdTMyIGJhY2t1cF9kaXJ0eSA6IDE7CisJdTMyIGNvaGVyZW50IDog
MTsKIAlzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKmJhY2t1cDsKIAl1bnNpZ25lZCBsb25nIGJh
Y2t1cF9vZmZzZXQ7CiAJdW5zaWduZWQgbG9uZyBwaW5fY291bnQ7CkBAIC0xODAsNiArMTg1LDcg
QEAgc3RydWN0IHZtd19yZXNvdXJjZSB7CiAJc3RydWN0IGxpc3RfaGVhZCBscnVfaGVhZDsKIAlz
dHJ1Y3QgbGlzdF9oZWFkIG1vYl9oZWFkOwogCXN0cnVjdCBsaXN0X2hlYWQgYmluZGluZ19oZWFk
OworCXN0cnVjdCB2bXdfcmVzb3VyY2VfZGlydHkgKmRpcnR5OwogCXZvaWQgKCpyZXNfZnJlZSkg
KHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7CiAJdm9pZCAoKmh3X2Rlc3Ryb3kpIChzdHJ1Y3Qg
dm13X3Jlc291cmNlICpyZXMpOwogfTsKQEAgLTcyMCw2ICs3MjYsOCBAQCBleHRlcm4gdm9pZCB2
bXdfcmVzb3VyY2VfZXZpY3RfYWxsKHN0cnVjdCB2bXdfcHJpdmF0ZSAqZGV2X3ByaXYpOwogZXh0
ZXJuIHZvaWQgdm13X3Jlc291cmNlX3VuYmluZF9saXN0KHN0cnVjdCB2bXdfYnVmZmVyX29iamVj
dCAqdmJvKTsKIHZvaWQgdm13X3Jlc291cmNlX21vYl9hdHRhY2goc3RydWN0IHZtd19yZXNvdXJj
ZSAqcmVzKTsKIHZvaWQgdm13X3Jlc291cmNlX21vYl9kZXRhY2goc3RydWN0IHZtd19yZXNvdXJj
ZSAqcmVzKTsKK3ZvaWQgdm13X3Jlc291cmNlX2RpcnR5X3VwZGF0ZShzdHJ1Y3Qgdm13X3Jlc291
cmNlICpyZXMsIHBnb2ZmX3Qgc3RhcnQsCisJCQkgICAgICAgcGdvZmZfdCBlbmQpOwogCiAvKioK
ICAqIHZtd19yZXNvdXJjZV9tb2JfYXR0YWNoZWQgLSBXaGV0aGVyIGEgcmVzb3VyY2UgY3VycmVu
dGx5IGhhcyBhIG1vYiBhdHRhY2hlZApAQCAtMTQwNyw2ICsxNDE1LDE1IEBAIGludCB2bXdfaG9z
dF9sb2coY29uc3QgY2hhciAqbG9nKTsKICNkZWZpbmUgVk1XX0RFQlVHX1VTRVIoZm10LCAuLi4p
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKIAlEUk1fREVC
VUdfRFJJVkVSKGZtdCwgIyNfX1ZBX0FSR1NfXykKIAorLyogUmVzb3VyY2UgZGlydHlpbmcgLSB2
bXdnZnhfcGFnZV9kaXJ0eS5jICovCit2b2lkIHZtd19ib19kaXJ0eV9zY2FuKHN0cnVjdCB2bXdf
YnVmZmVyX29iamVjdCAqdmJvKTsKK2ludCB2bXdfYm9fZGlydHlfYWRkKHN0cnVjdCB2bXdfYnVm
ZmVyX29iamVjdCAqdmJvKTsKK3ZvaWQgdm13X2JvX2RpcnR5X3RyYW5zZmVyX3RvX3JlcyhzdHJ1
Y3Qgdm13X3Jlc291cmNlICpyZXMpOwordm9pZCB2bXdfYm9fZGlydHlfY2xlYXJfcmVzKHN0cnVj
dCB2bXdfcmVzb3VyY2UgKnJlcyk7Cit2b2lkIHZtd19ib19kaXJ0eV9yZWxlYXNlKHN0cnVjdCB2
bXdfYnVmZmVyX29iamVjdCAqdmJvKTsKK3ZtX2ZhdWx0X3Qgdm13X2JvX3ZtX2ZhdWx0KHN0cnVj
dCB2bV9mYXVsdCAqdm1mKTsKK3ZtX2ZhdWx0X3Qgdm13X2JvX3ZtX21rd3JpdGUoc3RydWN0IHZt
X2ZhdWx0ICp2bWYpOworCiAvKioKICAqIFZNV19ERUJVR19LTVMgLSBEZWJ1ZyBvdXRwdXQgZm9y
IGtlcm5lbCBtb2RlLXNldHRpbmcKICAqCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13
Z2Z4L3Ztd2dmeF9leGVjYnVmLmMgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9leGVj
YnVmLmMKaW5kZXggZmY4NmQ0OWRjNWU4Li45MzRhZDdjMGMzNDIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2V4ZWNidWYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
dm13Z2Z4L3Ztd2dmeF9leGVjYnVmLmMKQEAgLTI1NjAsNyArMjU2MCw2IEBAIHN0YXRpYyBpbnQg
dm13X2NtZF9keF9jaGVja19zdWJyZXNvdXJjZShzdHJ1Y3Qgdm13X3ByaXZhdGUgKmRldl9wcml2
LAogCQkgICAgIG9mZnNldG9mKHR5cGVvZigqY21kKSwgc2lkKSk7CiAKIAljbWQgPSBjb250YWlu
ZXJfb2YoaGVhZGVyLCB0eXBlb2YoKmNtZCksIGhlYWRlcik7Ci0KIAlyZXR1cm4gdm13X2NtZF9y
ZXNfY2hlY2soZGV2X3ByaXYsIHN3X2NvbnRleHQsIHZtd19yZXNfc3VyZmFjZSwKIAkJCQkgVk1X
X1JFU19ESVJUWV9OT05FLCB1c2VyX3N1cmZhY2VfY29udmVydGVyLAogCQkJCSAmY21kLT5zaWQs
IE5VTEwpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcGFnZV9k
aXJ0eS5jIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcGFnZV9kaXJ0eS5jCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uMDYwYzFlNDkyZjI1Ci0tLSAvZGV2
L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcGFnZV9kaXJ0eS5jCkBA
IC0wLDAgKzEsNDIxIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCBPUiBN
SVQKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgorICoKKyAqIENvcHlyaWdodCAyMDE5IFZNd2FyZSwgSW5j
LiwgUGFsbyBBbHRvLCBDQS4sIFVTQQorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50
ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9m
IHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlCisg
KiAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlv
biwgaW5jbHVkaW5nCisgKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNv
cHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsCisgKiBkaXN0cmlidXRlLCBzdWIgbGljZW5zZSwg
YW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvCisgKiBwZXJtaXQgcGVy
c29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3Qg
dG8KKyAqIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJp
Z2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZQorICog
bmV4dCBwYXJhZ3JhcGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3Rh
bnRpYWwgcG9ydGlvbnMKKyAqIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUg
SVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVT
UyBPUgorICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFO
VElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZ
UklHSFQgSE9MREVSUywgQVVUSE9SUyBBTkQvT1IgSVRTIFNVUFBMSUVSUyBCRSBMSUFCTEUgRk9S
IEFOWSBDTEFJTSwKKyAqIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFO
IEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUgorICogT1RIRVJXSVNFLCBBUklTSU5HIEZST00s
IE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRQorICogVVNF
IE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCisjaW5jbHVkZSAidm13Z2Z4X2Rydi5oIgorCisvKgorICogRGlmZmVyZW50IG1ldGhvZHMg
Zm9yIHRyYWNraW5nIGRpcnR5OgorICogVk1XX0JPX0RJUlRZX1BBR0VUQUJMRSAtIFNjYW4gdGhl
IHBhZ2V0YWJsZSBmb3IgaGFyZHdhcmUgZGlydHkgYml0cworICogVk1XX0JPX0RJUlRZX01LV1JJ
VEUgLSBXcml0ZS1wcm90ZWN0IHBhZ2UgdGFibGUgZW50cmllcyBhbmQgcmVjb3JkIHdyaXRlLQor
ICogYWNjZXNzZXMgaW4gdGhlIFZNIG1rd3JpdGUoKSBjYWxsYmFjaworICovCitlbnVtIHZtd19i
b19kaXJ0eV9tZXRob2QgeworCVZNV19CT19ESVJUWV9QQUdFVEFCTEUsCisJVk1XX0JPX0RJUlRZ
X01LV1JJVEUsCit9OworCisvKgorICogTm8gZGlydGllZCBwYWdlcyBhdCBzY2FuIHRyaWdnZXIg
YSB0cmFuc2l0aW9uIHRvIHRoZSBfTUtXUklURSBtZXRob2QsCisgKiBzaW1pbGFybHkgYSBjZXJ0
YWluIHBlcmNlbnRhZ2Ugb2YgZGlydHkgcGFnZXMgdHJpZ2dlciBhIHRyYW5zaXRpb24gdG8KKyAq
IHRoZSBfUEFHRVRBQkxFIG1ldGhvZC4gSG93IG1hbnkgdHJpZ2dlcnMgc2hvdWxkIHdlIHdhaXQg
Zm9yIGJlZm9yZQorICogY2hhbmdpbmcgbWV0aG9kPworICovCisjZGVmaW5lIFZNV19ESVJUWV9O
VU1fQ0hBTkdFX1RSSUdHRVJTIDIKKworLyogUGVyY2VudGFnZSB0byB0cmlnZ2VyIGEgdHJhbnNp
dGlvbiB0byB0aGUgX1BBR0VUQUJMRSBtZXRob2QgKi8KKyNkZWZpbmUgVk1XX0RJUlRZX1BFUkNF
TlRBR0UgMTAKKworLyoqCisgKiBzdHJ1Y3Qgdm13X2JvX2RpcnR5IC0gRGlydHkgaW5mb3JtYXRp
b24gZm9yIGJ1ZmZlciBvYmplY3RzCisgKiBAc3RhcnQ6IEZpcnN0IGN1cnJlbnRseSBkaXJ0eSBi
aXQKKyAqIEBlbmQ6IExhc3QgY3VycmVudGx5IGRpcnR5IGJpdCArIDEKKyAqIEBtZXRob2Q6IFRo
ZSBjdXJyZW50bHkgdXNlZCBkaXJ0eSBtZXRob2QKKyAqIEBjaGFuZ2VfY291bnQ6IE51bWJlciBv
ZiBjb25zZWN1dGl2ZSBtZXRob2QgY2hhbmdlIHRyaWdnZXJzCisgKiBAcmVmX2NvdW50OiBSZWZl
cmVuY2UgY291bnQgZm9yIHRoaXMgc3RydWN0dXJlCisgKiBAYml0bWFwX3NpemU6IFRoZSBzaXpl
IG9mIHRoZSBiaXRtYXAgaW4gYml0cy4gVHlwaWNhbGx5IGVxdWFsIHRvIHRoZQorICogbnViZXIg
b2YgcGFnZXMgaW4gdGhlIGJvLgorICogQHNpemU6IFRoZSBhY2NvdW50aW5nIHNpemUgZm9yIHRo
aXMgc3RydWN0LgorICogQGJpdG1hcDogQSBiaXRtYXAgd2hlcmUgZWFjaCBiaXQgcmVwcmVzZW50
cyBhIHBhZ2UuIEEgc2V0IGJpdCBtZWFucyBhCisgKiBkaXJ0eSBwYWdlLgorICovCitzdHJ1Y3Qg
dm13X2JvX2RpcnR5IHsKKwl1bnNpZ25lZCBsb25nIHN0YXJ0OworCXVuc2lnbmVkIGxvbmcgZW5k
OworCWVudW0gdm13X2JvX2RpcnR5X21ldGhvZCBtZXRob2Q7CisJdW5zaWduZWQgaW50IGNoYW5n
ZV9jb3VudDsKKwl1bnNpZ25lZCBpbnQgcmVmX2NvdW50OworCXVuc2lnbmVkIGxvbmcgYml0bWFw
X3NpemU7CisJc2l6ZV90IHNpemU7CisJdW5zaWduZWQgbG9uZyBiaXRtYXBbMF07Cit9OworCisv
KioKKyAqIHZtd19ib19kaXJ0eV9zY2FuX3BhZ2V0YWJsZSAtIFBlcmZvcm0gYSBwYWdldGFibGUg
c2NhbiBmb3IgZGlydHkgYml0cworICogQHZibzogVGhlIGJ1ZmZlciBvYmplY3QgdG8gc2Nhbgor
ICoKKyAqIFNjYW5zIHRoZSBwYWdldGFibGUgZm9yIGRpcnR5IGJpdHMuIENsZWFyIHRob3NlIGJp
dHMgYW5kIG1vZGlmeSB0aGUKKyAqIGRpcnR5IHN0cnVjdHVyZSB3aXRoIHRoZSByZXN1bHRzLiBU
aGlzIGZ1bmN0aW9uIG1heSBjaGFuZ2UgdGhlCisgKiBkaXJ0eS10cmFja2luZyBtZXRob2QuCisg
Ki8KK3N0YXRpYyB2b2lkIHZtd19ib19kaXJ0eV9zY2FuX3BhZ2V0YWJsZShzdHJ1Y3Qgdm13X2J1
ZmZlcl9vYmplY3QgKnZibykKK3sKKwlzdHJ1Y3Qgdm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+
ZGlydHk7CisJcGdvZmZfdCBvZmZzZXQgPSBkcm1fdm1hX25vZGVfc3RhcnQoJnZiby0+YmFzZS5i
YXNlLnZtYV9ub2RlKTsKKwlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZyA9IHZiby0+YmFz
ZS5iZGV2LT5kZXZfbWFwcGluZzsKKwlwZ29mZl90IG51bV9tYXJrZWQ7CisKKwludW1fbWFya2Vk
ID0gY2xlYW5fcmVjb3JkX3NoYXJlZF9tYXBwaW5nX3JhbmdlCisJCShtYXBwaW5nLAorCQkgb2Zm
c2V0LCBkaXJ0eS0+Yml0bWFwX3NpemUsCisJCSBvZmZzZXQsICZkaXJ0eS0+Yml0bWFwWzBdLAor
CQkgJmRpcnR5LT5zdGFydCwgJmRpcnR5LT5lbmQpOworCWlmIChudW1fbWFya2VkID09IDApCisJ
CWRpcnR5LT5jaGFuZ2VfY291bnQrKzsKKwllbHNlCisJCWRpcnR5LT5jaGFuZ2VfY291bnQgPSAw
OworCisJaWYgKGRpcnR5LT5jaGFuZ2VfY291bnQgPiBWTVdfRElSVFlfTlVNX0NIQU5HRV9UUklH
R0VSUykgeworCQlkaXJ0eS0+Y2hhbmdlX2NvdW50ID0gMDsKKwkJZGlydHktPm1ldGhvZCA9IFZN
V19CT19ESVJUWV9NS1dSSVRFOworCQl3cF9zaGFyZWRfbWFwcGluZ19yYW5nZShtYXBwaW5nLAor
CQkJCQlvZmZzZXQsIGRpcnR5LT5iaXRtYXBfc2l6ZSk7CisJCWNsZWFuX3JlY29yZF9zaGFyZWRf
bWFwcGluZ19yYW5nZShtYXBwaW5nLAorCQkJCQkJICBvZmZzZXQsIGRpcnR5LT5iaXRtYXBfc2l6
ZSwKKwkJCQkJCSAgb2Zmc2V0LCAmZGlydHktPmJpdG1hcFswXSwKKwkJCQkJCSAgJmRpcnR5LT5z
dGFydCwgJmRpcnR5LT5lbmQpOworCX0KK30KKworLyoqCisgKiB2bXdfYm9fZGlydHlfc2Nhbl9t
a3dyaXRlIC0gUmVzZXQgdGhlIG1rd3JpdGUgZGlydHktdHJhY2tpbmcgbWV0aG9kCisgKiBAdmJv
OiBUaGUgYnVmZmVyIG9iamVjdCB0byBzY2FuCisgKgorICogV3JpdGUtcHJvdGVjdCBwYWdlcyB3
cml0dGVuIHRvIHNvIHRoYXQgY29uc2VjdXRpdmUgd3JpdGUgYWNjZXNzZXMgd2lsbAorICogdHJp
Z2dlciBhIGNhbGwgdG8gbWt3cml0ZS4KKyAqCisgKiBUaGlzIGZ1bmN0aW9uIG1heSBjaGFuZ2Ug
dGhlIGRpcnR5LXRyYWNraW5nIG1ldGhvZC4KKyAqLworc3RhdGljIHZvaWQgdm13X2JvX2RpcnR5
X3NjYW5fbWt3cml0ZShzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibykKK3sKKwlzdHJ1Y3Qg
dm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+ZGlydHk7CisJdW5zaWduZWQgbG9uZyBvZmZzZXQg
PSBkcm1fdm1hX25vZGVfc3RhcnQoJnZiby0+YmFzZS5iYXNlLnZtYV9ub2RlKTsKKwlzdHJ1Y3Qg
YWRkcmVzc19zcGFjZSAqbWFwcGluZyA9IHZiby0+YmFzZS5iZGV2LT5kZXZfbWFwcGluZzsKKwlw
Z29mZl90IG51bV9tYXJrZWQ7CisKKwlpZiAoZGlydHktPmVuZCA8PSBkaXJ0eS0+c3RhcnQpCisJ
CXJldHVybjsKKworCW51bV9tYXJrZWQgPSB3cF9zaGFyZWRfbWFwcGluZ19yYW5nZSh2Ym8tPmJh
c2UuYmRldi0+ZGV2X21hcHBpbmcsCisJCQkJCWRpcnR5LT5zdGFydCArIG9mZnNldCwKKwkJCQkJ
ZGlydHktPmVuZCAtIGRpcnR5LT5zdGFydCk7CisKKwlpZiAoMTAwVUwgKiBudW1fbWFya2VkIC8g
ZGlydHktPmJpdG1hcF9zaXplID4KKwkgICAgVk1XX0RJUlRZX1BFUkNFTlRBR0UpIHsKKwkJZGly
dHktPmNoYW5nZV9jb3VudCsrOworCX0gZWxzZSB7CisJCWRpcnR5LT5jaGFuZ2VfY291bnQgPSAw
OworCX0KKworCWlmIChkaXJ0eS0+Y2hhbmdlX2NvdW50ID4gVk1XX0RJUlRZX05VTV9DSEFOR0Vf
VFJJR0dFUlMpIHsKKwkJcGdvZmZfdCBzdGFydCA9IDA7CisJCXBnb2ZmX3QgZW5kID0gZGlydHkt
PmJpdG1hcF9zaXplOworCisJCWRpcnR5LT5tZXRob2QgPSBWTVdfQk9fRElSVFlfUEFHRVRBQkxF
OworCQljbGVhbl9yZWNvcmRfc2hhcmVkX21hcHBpbmdfcmFuZ2UobWFwcGluZywgb2Zmc2V0LCBl
bmQsIG9mZnNldCwKKwkJCQkJCSAgJmRpcnR5LT5iaXRtYXBbMF0sCisJCQkJCQkgICZzdGFydCwg
JmVuZCk7CisJCWJpdG1hcF9jbGVhcigmZGlydHktPmJpdG1hcFswXSwgMCwgZGlydHktPmJpdG1h
cF9zaXplKTsKKwkJaWYgKGRpcnR5LT5zdGFydCA8IGRpcnR5LT5lbmQpCisJCQliaXRtYXBfc2V0
KCZkaXJ0eS0+Yml0bWFwWzBdLCBkaXJ0eS0+c3RhcnQsCisJCQkJICAgZGlydHktPmVuZCAtIGRp
cnR5LT5zdGFydCk7CisJCWRpcnR5LT5jaGFuZ2VfY291bnQgPSAwOworCX0KK30KKworCisvKioK
KyAqIHZtd19ib19kaXJ0eV9zY2FuIC0gU2NhbiBmb3IgZGlydHkgcGFnZXMgYW5kIGFkZCB0aGVt
IHRvIHRoZSBkaXJ0eQorICogdHJhY2tpbmcgc3RydWN0dXJlCisgKiBAdmJvOiBUaGUgYnVmZmVy
IG9iamVjdCB0byBzY2FuCisgKgorICogVGhpcyBmdW5jdGlvbiBtYXkgY2hhbmdlIHRoZSBkaXJ0
eSB0cmFja2luZyBtZXRob2QuCisgKi8KK3ZvaWQgdm13X2JvX2RpcnR5X3NjYW4oc3RydWN0IHZt
d19idWZmZXJfb2JqZWN0ICp2Ym8pCit7CisJc3RydWN0IHZtd19ib19kaXJ0eSAqZGlydHkgPSB2
Ym8tPmRpcnR5OworCisJaWYgKGRpcnR5LT5tZXRob2QgPT0gVk1XX0JPX0RJUlRZX1BBR0VUQUJM
RSkKKwkJdm13X2JvX2RpcnR5X3NjYW5fcGFnZXRhYmxlKHZibyk7CisJZWxzZQorCQl2bXdfYm9f
ZGlydHlfc2Nhbl9ta3dyaXRlKHZibyk7Cit9CisKKy8qKgorICogdm13X2JvX2RpcnR5X2FkZCAt
IEFkZCBhIGRpcnR5LXRyYWNraW5nIHVzZXIgdG8gYSBidWZmZXIgb2JqZWN0CisgKiBAdmJvOiBU
aGUgYnVmZmVyIG9iamVjdAorICoKKyAqIFRoaXMgZnVuY3Rpb24gcmVnaXN0ZXJzIGEgZGlydHkt
dHJhY2tpbmcgdXNlciB0byBhIGJ1ZmZlciBvYmplY3QuCisgKiBBIHVzZXIgY2FuIGJlIGZvciBl
eGFtcGxlIGEgcmVzb3VyY2Ugb3IgYSB2bWEgaW4gYSBzcGVjaWFsIHVzZXItc3BhY2UKKyAqIG1h
cHBpbmcuCisgKgorICogUmV0dXJuOiBaZXJvIG9uIHN1Y2Nlc3MsIC1FTk9NRU0gb24gbWVtb3J5
IGFsbG9jYXRpb24gZmFpbHVyZS4KKyAqLworaW50IHZtd19ib19kaXJ0eV9hZGQoc3RydWN0IHZt
d19idWZmZXJfb2JqZWN0ICp2Ym8pCit7CisJc3RydWN0IHZtd19ib19kaXJ0eSAqZGlydHkgPSB2
Ym8tPmRpcnR5OworCXBnb2ZmX3QgbnVtX3BhZ2VzID0gdmJvLT5iYXNlLm51bV9wYWdlczsKKwlz
aXplX3Qgc2l6ZSwgYWNjX3NpemU7CisJaW50IHJldDsKKwlzdGF0aWMgc3RydWN0IHR0bV9vcGVy
YXRpb25fY3R4IGN0eCA9IHsKKwkJLmludGVycnVwdGlibGUgPSBmYWxzZSwKKwkJLm5vX3dhaXRf
Z3B1ID0gZmFsc2UKKwl9OworCisJaWYgKGRpcnR5KSB7CisJCWRpcnR5LT5yZWZfY291bnQrKzsK
KwkJcmV0dXJuIDA7CisJfQorCisJc2l6ZSA9IHNpemVvZigqZGlydHkpICsgQklUU19UT19MT05H
UyhudW1fcGFnZXMpICogc2l6ZW9mKGxvbmcpOworCWFjY19zaXplID0gdHRtX3JvdW5kX3BvdChz
aXplKTsKKwlyZXQgPSB0dG1fbWVtX2dsb2JhbF9hbGxvYygmdHRtX21lbV9nbG9iLCBhY2Nfc2l6
ZSwgJmN0eCk7CisJaWYgKHJldCkgeworCQlWTVdfREVCVUdfVVNFUigiT3V0IG9mIGdyYXBoaWNz
IG1lbW9yeSBmb3IgYnVmZmVyIG9iamVjdCAiCisJCQkgICAgICAgImRpcnR5IHRyYWNrZXIuXG4i
KTsKKwkJcmV0dXJuIHJldDsKKwl9CisJZGlydHkgPSBrdnphbGxvYyhzaXplLCBHRlBfS0VSTkVM
KTsKKwlpZiAoIWRpcnR5KSB7CisJCXJldCA9IC1FTk9NRU07CisJCWdvdG8gb3V0X25vX2RpcnR5
OworCX0KKworCWRpcnR5LT5zaXplID0gYWNjX3NpemU7CisJZGlydHktPmJpdG1hcF9zaXplID0g
bnVtX3BhZ2VzOworCWRpcnR5LT5zdGFydCA9IGRpcnR5LT5iaXRtYXBfc2l6ZTsKKwlkaXJ0eS0+
ZW5kID0gMDsKKwlkaXJ0eS0+cmVmX2NvdW50ID0gMTsKKwlpZiAobnVtX3BhZ2VzIDwgUEFHRV9T
SVpFIC8gc2l6ZW9mKHB0ZV90KSkgeworCQlkaXJ0eS0+bWV0aG9kID0gVk1XX0JPX0RJUlRZX1BB
R0VUQUJMRTsKKwl9IGVsc2UgeworCQlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZyA9IHZi
by0+YmFzZS5iZGV2LT5kZXZfbWFwcGluZzsKKwkJcGdvZmZfdCBvZmZzZXQgPSBkcm1fdm1hX25v
ZGVfc3RhcnQoJnZiby0+YmFzZS5iYXNlLnZtYV9ub2RlKTsKKworCQlkaXJ0eS0+bWV0aG9kID0g
Vk1XX0JPX0RJUlRZX01LV1JJVEU7CisKKwkJLyogV3JpdGUtcHJvdGVjdCBhbmQgdGhlbiBwaWNr
IHVwIGFscmVhZHkgZGlydHkgYml0cyAqLworCQl3cF9zaGFyZWRfbWFwcGluZ19yYW5nZShtYXBw
aW5nLCBvZmZzZXQsIG51bV9wYWdlcyk7CisJCWNsZWFuX3JlY29yZF9zaGFyZWRfbWFwcGluZ19y
YW5nZShtYXBwaW5nLCBvZmZzZXQsIG51bV9wYWdlcywKKwkJCQkJCSAgb2Zmc2V0LAorCQkJCQkJ
ICAmZGlydHktPmJpdG1hcFswXSwKKwkJCQkJCSAgJmRpcnR5LT5zdGFydCwgJmRpcnR5LT5lbmQp
OworCX0KKworCXZiby0+ZGlydHkgPSBkaXJ0eTsKKworCXJldHVybiAwOworCitvdXRfbm9fZGly
dHk6CisJdHRtX21lbV9nbG9iYWxfZnJlZSgmdHRtX21lbV9nbG9iLCBhY2Nfc2l6ZSk7CisJcmV0
dXJuIHJldDsKK30KKworLyoqCisgKiB2bXdfYm9fZGlydHlfcmVsZWFzZSAtIFJlbGVhc2UgYSBk
aXJ0eS10cmFja2luZyB1c2VyIGZyb20gYSBidWZmZXIgb2JqZWN0CisgKiBAdmJvOiBUaGUgYnVm
ZmVyIG9iamVjdAorICoKKyAqIFRoaXMgZnVuY3Rpb24gcmVsZWFzZXMgYSBkaXJ0eS10cmFja2lu
ZyB1c2VyIGZyb20gYSBidWZmZXIgb2JqZWN0LgorICogSWYgdGhlIHJlZmVyZW5jZSBjb3VudCBy
ZWFjaGVzIHplcm8sIHRoZW4gdGhlIGRpcnR5LXRyYWNraW5nIG9iamVjdCBpcworICogZnJlZWQg
YW5kIHRoZSBwb2ludGVyIHRvIGl0IGNsZWFyZWQuCisgKgorICogUmV0dXJuOiBaZXJvIG9uIHN1
Y2Nlc3MsIC1FTk9NRU0gb24gbWVtb3J5IGFsbG9jYXRpb24gZmFpbHVyZS4KKyAqLwordm9pZCB2
bXdfYm9fZGlydHlfcmVsZWFzZShzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibykKK3sKKwlz
dHJ1Y3Qgdm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+ZGlydHk7CisKKwlpZiAoZGlydHkgJiYg
LS1kaXJ0eS0+cmVmX2NvdW50ID09IDApIHsKKwkJc2l6ZV90IGFjY19zaXplID0gZGlydHktPnNp
emU7CisKKwkJa3ZmcmVlKGRpcnR5KTsKKwkJdHRtX21lbV9nbG9iYWxfZnJlZSgmdHRtX21lbV9n
bG9iLCBhY2Nfc2l6ZSk7CisJCXZiby0+ZGlydHkgPSBOVUxMOworCX0KK30KKworLyoqCisgKiB2
bXdfYm9fZGlydHlfdHJhbnNmZXJfdG9fcmVzIC0gUGljayB1cCBhIHJlc291cmNlJ3MgZGlydHkg
cmVnaW9uIGZyb20KKyAqIGl0cyBiYWNraW5nIG1vYi4KKyAqIEByZXM6IFRoZSByZXNvdXJjZQor
ICoKKyAqIFRoaXMgZnVuY3Rpb24gd2lsbCBwaWNrIHVwIGFsbCBkaXJ0eSByYW5nZXMgYWZmZWN0
aW5nIHRoZSByZXNvdXJjZSBmcm9tCisgKiBpdCdzIGJhY2t1cCBtb2IsIGFuZCBjYWxsIHZtd19y
ZXNvdXJjZV9kaXJ0eV91cGRhdGUoKSBvbmNlIGZvciBlYWNoCisgKiByYW5nZS4gVGhlIHRyYW5z
ZmVycmVkIHJhbmdlcyB3aWxsIGJlIGNsZWFyZWQgZnJvbSB0aGUgYmFja2luZyBtb2IncworICog
ZGlydHkgdHJhY2tpbmcuCisgKi8KK3ZvaWQgdm13X2JvX2RpcnR5X3RyYW5zZmVyX3RvX3Jlcyhz
dHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMpCit7CisJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2
Ym8gPSByZXMtPmJhY2t1cDsKKwlzdHJ1Y3Qgdm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+ZGly
dHk7CisJcGdvZmZfdCBzdGFydCwgY3VyLCBlbmQ7CisJdW5zaWduZWQgbG9uZyByZXNfc3RhcnQg
PSByZXMtPmJhY2t1cF9vZmZzZXQ7CisJdW5zaWduZWQgbG9uZyByZXNfZW5kID0gcmVzLT5iYWNr
dXBfb2Zmc2V0ICsgcmVzLT5iYWNrdXBfc2l6ZTsKKworCVdBUk5fT05fT05DRShyZXNfc3RhcnQg
JiB+UEFHRV9NQVNLKTsKKwlyZXNfc3RhcnQgPj49IFBBR0VfU0hJRlQ7CisJcmVzX2VuZCA9IERJ
Vl9ST1VORF9VUChyZXNfZW5kLCBQQUdFX1NJWkUpOworCisJaWYgKHJlc19zdGFydCA+PSBkaXJ0
eS0+ZW5kIHx8IHJlc19lbmQgPD0gZGlydHktPnN0YXJ0KQorCQlyZXR1cm47CisKKwljdXIgPSBt
YXgocmVzX3N0YXJ0LCBkaXJ0eS0+c3RhcnQpOworCXJlc19lbmQgPSBtYXgocmVzX2VuZCwgZGly
dHktPmVuZCk7CisJd2hpbGUgKGN1ciA8IHJlc19lbmQpIHsKKwkJdW5zaWduZWQgbG9uZyBudW07
CisKKwkJc3RhcnQgPSBmaW5kX25leHRfYml0KCZkaXJ0eS0+Yml0bWFwWzBdLCByZXNfZW5kLCBj
dXIpOworCQlpZiAoc3RhcnQgPj0gcmVzX2VuZCkKKwkJCWJyZWFrOworCisJCWVuZCA9IGZpbmRf
bmV4dF96ZXJvX2JpdCgmZGlydHktPmJpdG1hcFswXSwgcmVzX2VuZCwgc3RhcnQgKyAxKTsKKwkJ
Y3VyID0gZW5kICsgMTsKKwkJbnVtID0gZW5kIC0gc3RhcnQ7CisJCWJpdG1hcF9jbGVhcigmZGly
dHktPmJpdG1hcFswXSwgc3RhcnQsIG51bSk7CisJCXZtd19yZXNvdXJjZV9kaXJ0eV91cGRhdGUo
cmVzLCBzdGFydCwgZW5kKTsKKwl9CisKKwlpZiAocmVzX3N0YXJ0IDw9IGRpcnR5LT5zdGFydCAm
JiByZXNfZW5kID4gZGlydHktPnN0YXJ0KQorCQlkaXJ0eS0+c3RhcnQgPSByZXNfZW5kOworCWlm
IChyZXNfc3RhcnQgPCBkaXJ0eS0+ZW5kICYmIHJlc19lbmQgPj0gZGlydHktPmVuZCkKKwkJZGly
dHktPmVuZCA9IHJlc19zdGFydDsKK30KKworLyoqCisgKiB2bXdfYm9fZGlydHlfY2xlYXJfcmVz
IC0gQ2xlYXIgYSByZXNvdXJjZSdzIGRpcnR5IHJlZ2lvbiBmcm9tCisgKiBpdHMgYmFja2luZyBt
b2IuCisgKiBAcmVzOiBUaGUgcmVzb3VyY2UKKyAqCisgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgY2xl
YXIgYWxsIGRpcnR5IHJhbmdlcyBhZmZlY3RpbmcgdGhlIHJlc291cmNlIGZyb20KKyAqIGl0J3Mg
YmFja3VwIG1vYidzIGRpcnR5IHRyYWNraW5nLgorICovCit2b2lkIHZtd19ib19kaXJ0eV9jbGVh
cl9yZXMoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKQoreworCXVuc2lnbmVkIGxvbmcgcmVzX3N0
YXJ0ID0gcmVzLT5iYWNrdXBfb2Zmc2V0OworCXVuc2lnbmVkIGxvbmcgcmVzX2VuZCA9IHJlcy0+
YmFja3VwX29mZnNldCArIHJlcy0+YmFja3VwX3NpemU7CisJc3RydWN0IHZtd19idWZmZXJfb2Jq
ZWN0ICp2Ym8gPSByZXMtPmJhY2t1cDsKKwlzdHJ1Y3Qgdm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZi
by0+ZGlydHk7CisKKwlyZXNfc3RhcnQgPj49IFBBR0VfU0hJRlQ7CisJcmVzX2VuZCA9IERJVl9S
T1VORF9VUChyZXNfZW5kLCBQQUdFX1NJWkUpOworCisJaWYgKHJlc19zdGFydCA+PSBkaXJ0eS0+
ZW5kIHx8IHJlc19lbmQgPD0gZGlydHktPnN0YXJ0KQorCQlyZXR1cm47CisKKwlyZXNfc3RhcnQg
PSBtYXgocmVzX3N0YXJ0LCBkaXJ0eS0+c3RhcnQpOworCXJlc19lbmQgPSBtaW4ocmVzX2VuZCwg
ZGlydHktPmVuZCk7CisJYml0bWFwX2NsZWFyKCZkaXJ0eS0+Yml0bWFwWzBdLCByZXNfc3RhcnQs
IHJlc19lbmQgLSByZXNfc3RhcnQpOworCisJaWYgKHJlc19zdGFydCA8PSBkaXJ0eS0+c3RhcnQg
JiYgcmVzX2VuZCA+IGRpcnR5LT5zdGFydCkKKwkJZGlydHktPnN0YXJ0ID0gcmVzX2VuZDsKKwlp
ZiAocmVzX3N0YXJ0IDwgZGlydHktPmVuZCAmJiByZXNfZW5kID49IGRpcnR5LT5lbmQpCisJCWRp
cnR5LT5lbmQgPSByZXNfc3RhcnQ7Cit9CisKK3ZtX2ZhdWx0X3Qgdm13X2JvX3ZtX21rd3JpdGUo
c3RydWN0IHZtX2ZhdWx0ICp2bWYpCit7CisJc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEgPSB2
bWYtPnZtYTsKKwlzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvID0gKHN0cnVjdCB0dG1fYnVm
ZmVyX29iamVjdCAqKQorCSAgICB2bWEtPnZtX3ByaXZhdGVfZGF0YTsKKwl2bV9mYXVsdF90IHJl
dDsKKwl1bnNpZ25lZCBsb25nIHBhZ2Vfb2Zmc2V0OworCXVuc2lnbmVkIGludCBzYXZlX2ZsYWdz
OworCXN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvID0KKwkJY29udGFpbmVyX29mKGJvLCB0
eXBlb2YoKnZibyksIGJhc2UpOworCisJLyoKKwkgKiBta3dyaXRlKCkgZG9lc24ndCBoYW5kbGUg
dGhlIFZNX0ZBVUxUX1JFVFJZIHJldHVybiB2YWx1ZSBjb3JyZWN0bHkuCisJICogU28gbWFrZSBz
dXJlIHRoZSBUVE0gaGVscGVycyBhcmUgYXdhcmUuCisJICovCisJc2F2ZV9mbGFncyA9IHZtZi0+
ZmxhZ3M7CisJdm1mLT5mbGFncyAmPSB+RkFVTFRfRkxBR19BTExPV19SRVRSWTsKKwlyZXQgPSB0
dG1fYm9fdm1fcmVzZXJ2ZShibywgdm1mKTsKKwl2bWYtPmZsYWdzID0gc2F2ZV9mbGFnczsKKwlp
ZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJcGFnZV9vZmZzZXQgPSB2bWYtPnBnb2ZmIC0gZHJt
X3ZtYV9ub2RlX3N0YXJ0KCZiby0+YmFzZS52bWFfbm9kZSk7CisJaWYgKHVubGlrZWx5KHBhZ2Vf
b2Zmc2V0ID49IGJvLT5udW1fcGFnZXMpKSB7CisJCXJldCA9IFZNX0ZBVUxUX1NJR0JVUzsKKwkJ
Z290byBvdXRfdW5sb2NrOworCX0KKworCWlmICh2Ym8tPmRpcnR5ICYmIHZiby0+ZGlydHktPm1l
dGhvZCA9PSBWTVdfQk9fRElSVFlfTUtXUklURSAmJgorCSAgICAhdGVzdF9iaXQocGFnZV9vZmZz
ZXQsICZ2Ym8tPmRpcnR5LT5iaXRtYXBbMF0pKSB7CisJCXN0cnVjdCB2bXdfYm9fZGlydHkgKmRp
cnR5ID0gdmJvLT5kaXJ0eTsKKworCQlfX3NldF9iaXQocGFnZV9vZmZzZXQsICZkaXJ0eS0+Yml0
bWFwWzBdKTsKKwkJZGlydHktPnN0YXJ0ID0gbWluKGRpcnR5LT5zdGFydCwgcGFnZV9vZmZzZXQp
OworCQlkaXJ0eS0+ZW5kID0gbWF4KGRpcnR5LT5lbmQsIHBhZ2Vfb2Zmc2V0ICsgMSk7CisJfQor
CitvdXRfdW5sb2NrOgorCWRtYV9yZXN2X3VubG9jayhiby0+YmFzZS5yZXN2KTsKKwlyZXR1cm4g
cmV0OworfQorCit2bV9mYXVsdF90IHZtd19ib192bV9mYXVsdChzdHJ1Y3Qgdm1fZmF1bHQgKnZt
ZikKK3sKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSA9IHZtZi0+dm1hOworCXN0cnVjdCB0
dG1fYnVmZmVyX29iamVjdCAqYm8gPSAoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICopCisJICAg
IHZtYS0+dm1fcHJpdmF0ZV9kYXRhOworCXN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvID0K
KwkJY29udGFpbmVyX29mKGJvLCBzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QsIGJhc2UpOworCXBn
b2ZmX3QgbnVtX3ByZWZhdWx0OworCXBncHJvdF90IHByb3Q7CisJdm1fZmF1bHRfdCByZXQ7CisK
KwlyZXQgPSB0dG1fYm9fdm1fcmVzZXJ2ZShibywgdm1mKTsKKwlpZiAocmV0KQorCQlyZXR1cm4g
cmV0OworCisJLyoKKwkgKiBUaGlzIHdpbGwgY2F1c2UgbWt3cml0ZSgpIHRvIGJlIGNhbGxlZCBm
b3IgZWFjaCBwdGUgb24KKwkgKiB3cml0ZS1lbmFibGUgdm1hcy4KKwkgKi8KKwlpZiAodmJvLT5k
aXJ0eSAmJiB2Ym8tPmRpcnR5LT5tZXRob2QgPT0gVk1XX0JPX0RJUlRZX01LV1JJVEUpCisJCXBy
b3QgPSB2bWEtPnZtX3BhZ2VfcHJvdDsKKwllbHNlCisJCXByb3QgPSB2bV9nZXRfcGFnZV9wcm90
KHZtYS0+dm1fZmxhZ3MpOworCisJbnVtX3ByZWZhdWx0ID0gKHZtYS0+dm1fZmxhZ3MgJiBWTV9S
QU5EX1JFQUQpID8gMCA6CisJCVRUTV9CT19WTV9OVU1fUFJFRkFVTFQ7CisJcmV0ID0gdHRtX2Jv
X3ZtX2ZhdWx0X3Jlc2VydmVkKHZtZiwgcHJvdCwgbnVtX3ByZWZhdWx0KTsKKwlpZiAocmV0ID09
IFZNX0ZBVUxUX1JFVFJZICYmICEodm1mLT5mbGFncyAmIEZBVUxUX0ZMQUdfUkVUUllfTk9XQUlU
KSkKKwkJcmV0dXJuIHJldDsKKworCWRtYV9yZXN2X3VubG9jayhiby0+YmFzZS5yZXN2KTsKKwly
ZXR1cm4gcmV0OworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhf
cmVzb3VyY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMKaW5k
ZXggNmRmZTM2ZmI4MTdjLi5iNTRkNjBiZDg0NWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92
bXdnZnhfcmVzb3VyY2UuYwpAQCAtMTE5LDYgKzExOSwxMCBAQCBzdGF0aWMgdm9pZCB2bXdfcmVz
b3VyY2VfcmVsZWFzZShzdHJ1Y3Qga3JlZiAqa3JlZikKIAkJfQogCQlyZXMtPmJhY2t1cF9kaXJ0
eSA9IGZhbHNlOwogCQl2bXdfcmVzb3VyY2VfbW9iX2RldGFjaChyZXMpOworCQlpZiAocmVzLT5k
aXJ0eSkKKwkJCXJlcy0+ZnVuYy0+ZGlydHlfZnJlZShyZXMpOworCQlpZiAocmVzLT5jb2hlcmVu
dCkKKwkJCXZtd19ib19kaXJ0eV9yZWxlYXNlKHJlcy0+YmFja3VwKTsKIAkJdHRtX2JvX3VucmVz
ZXJ2ZShibyk7CiAJCXZtd19ib191bnJlZmVyZW5jZSgmcmVzLT5iYWNrdXApOwogCX0KQEAgLTIw
OCw3ICsyMTIsOSBAQCBpbnQgdm13X3Jlc291cmNlX2luaXQoc3RydWN0IHZtd19wcml2YXRlICpk
ZXZfcHJpdiwgc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzLAogCXJlcy0+YmFja3VwX29mZnNldCA9
IDA7CiAJcmVzLT5iYWNrdXBfZGlydHkgPSBmYWxzZTsKIAlyZXMtPnJlc19kaXJ0eSA9IGZhbHNl
OworCXJlcy0+Y29oZXJlbnQgPSBmYWxzZTsKIAlyZXMtPnVzZWRfcHJpbyA9IDM7CisJcmVzLT5k
aXJ0eSA9IE5VTEw7CiAJaWYgKGRlbGF5X2lkKQogCQlyZXR1cm4gMDsKIAllbHNlCkBAIC0zOTUs
NiArNDAxLDMwIEBAIHN0YXRpYyBpbnQgdm13X3Jlc291cmNlX2RvX3ZhbGlkYXRlKHN0cnVjdCB2
bXdfcmVzb3VyY2UgKnJlcywKIAkJCXZtd19yZXNvdXJjZV9tb2JfYXR0YWNoKHJlcyk7CiAJfQog
CisJLyoKKwkgKiBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGJhY2t1cCBtb2IgaXMgbWFya2Vk
IGNvaGVyZW50IGJ1dAorCSAqIHRoZSByZXNvdXJjZSBpc24ndC4KKwkgKi8KKwlpZiAoZnVuYy0+
ZGlydHlfYWxsb2MgJiYgdm13X3Jlc291cmNlX21vYl9hdHRhY2hlZChyZXMpICYmCisJICAgICFy
ZXMtPmNvaGVyZW50KSB7CisJCWlmIChyZXMtPmJhY2t1cC0+ZGlydHkgJiYgIXJlcy0+ZGlydHkp
IHsKKwkJCXJldCA9IGZ1bmMtPmRpcnR5X2FsbG9jKHJlcyk7CisJCQlpZiAocmV0KQorCQkJCXJl
dHVybiByZXQ7CisJCX0gZWxzZSBpZiAoIXJlcy0+YmFja3VwLT5kaXJ0eSAmJiByZXMtPmRpcnR5
KSB7CisJCQlmdW5jLT5kaXJ0eV9mcmVlKHJlcyk7CisJCX0KKwl9CisKKwkvKgorCSAqIFRyYW5z
ZmVyIHRoZSBkaXJ0eSByZWdpb25zIHRvIHRoZSByZXNvdXJjZSBhbmQgdXBkYXRlCisJICogdGhl
IHJlc291cmNlLgorCSAqLworCWlmIChyZXMtPmRpcnR5KSB7CisJCXZtd19ib19kaXJ0eV90cmFu
c2Zlcl90b19yZXMocmVzKTsKKwkJcmV0dXJuIGZ1bmMtPmRpcnR5X3N5bmMocmVzKTsKKwl9CisK
IAlyZXR1cm4gMDsKIAogb3V0X2JpbmRfZmFpbGVkOgpAQCAtNDMzLDE2ICs0NjMsMjggQEAgdm9p
ZCB2bXdfcmVzb3VyY2VfdW5yZXNlcnZlKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcywKIAlpZiAo
c3dpdGNoX2JhY2t1cCAmJiBuZXdfYmFja3VwICE9IHJlcy0+YmFja3VwKSB7CiAJCWlmIChyZXMt
PmJhY2t1cCkgewogCQkJdm13X3Jlc291cmNlX21vYl9kZXRhY2gocmVzKTsKKwkJCWlmIChyZXMt
PmNvaGVyZW50KQorCQkJCXZtd19ib19kaXJ0eV9yZWxlYXNlKHJlcy0+YmFja3VwKTsKIAkJCXZt
d19ib191bnJlZmVyZW5jZSgmcmVzLT5iYWNrdXApOwogCQl9CiAKIAkJaWYgKG5ld19iYWNrdXAp
IHsKIAkJCXJlcy0+YmFja3VwID0gdm13X2JvX3JlZmVyZW5jZShuZXdfYmFja3VwKTsKKworCQkJ
LyoKKwkJCSAqIFRoZSB2YWxpZGF0aW9uIGNvZGUgc2hvdWxkIGFscmVhZHkgaGF2ZSBhZGRlZCBh
CisJCQkgKiBkaXJ0eSB0cmFja2VyIGhlcmUuCisJCQkgKi8KKwkJCVdBUk5fT04ocmVzLT5jb2hl
cmVudCAmJiAhbmV3X2JhY2t1cC0+ZGlydHkpOworCiAJCQl2bXdfcmVzb3VyY2VfbW9iX2F0dGFj
aChyZXMpOwogCQl9IGVsc2UgewogCQkJcmVzLT5iYWNrdXAgPSBOVUxMOwogCQl9CisJfSBlbHNl
IGlmIChzd2l0Y2hfYmFja3VwICYmIHJlcy0+Y29oZXJlbnQpIHsKKwkJdm13X2JvX2RpcnR5X3Jl
bGVhc2UocmVzLT5iYWNrdXApOwogCX0KKwogCWlmIChzd2l0Y2hfYmFja3VwKQogCQlyZXMtPmJh
Y2t1cF9vZmZzZXQgPSBuZXdfYmFja3VwX29mZnNldDsKIApAQCAtMTAwNywzICsxMDQ5LDE4IEBA
IGVudW0gdm13X3Jlc190eXBlIHZtd19yZXNfdHlwZShjb25zdCBzdHJ1Y3Qgdm13X3Jlc291cmNl
ICpyZXMpCiB7CiAJcmV0dXJuIHJlcy0+ZnVuYy0+cmVzX3R5cGU7CiB9CisKKy8qKgorICogdm13
X3Jlc291cmNlX3VwZGF0ZV9kaXJ0eSAtIFVwZGF0ZSBhIHJlc291cmNlJ3MgZGlydHkgdHJhY2tl
ciB3aXRoIGEKKyAqIHNlcXVlbnRpYWwgcmFuZ2Ugb2YgdG91Y2hlZCBiYWNraW5nIHN0b3JlIG1l
bW9yeS4KKyAqIEByZXM6IFRoZSByZXNvdXJjZS4KKyAqIEBzdGFydDogVGhlIGZpcnN0IHBhZ2Ug
dG91Y2hlZC4KKyAqIEBlbmQ6IFRoZSBsYXN0IHBhZ2UgdG91Y2hlZCArIDEuCisgKi8KK3ZvaWQg
dm13X3Jlc291cmNlX2RpcnR5X3VwZGF0ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsIHBnb2Zm
X3Qgc3RhcnQsCisJCQkgICAgICAgcGdvZmZfdCBlbmQpCit7CisJaWYgKHJlcy0+ZGlydHkpCisJ
CXJlcy0+ZnVuYy0+ZGlydHlfcmFuZ2VfYWRkKHJlcywgc3RhcnQgPDwgUEFHRV9TSElGVCwKKwkJ
CQkJICAgZW5kIDw8IFBBR0VfU0hJRlQpOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L3Ztd2dmeC92bXdnZnhfcmVzb3VyY2VfcHJpdi5oIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92
bXdnZnhfcmVzb3VyY2VfcHJpdi5oCmluZGV4IDk4NGU1ODhjNjJjYS4uYzg1MTQ0Mjg2Y2ZlIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9yZXNvdXJjZV9wcml2LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcmVzb3VyY2VfcHJpdi5oCkBAIC03
MSw2ICs3MSwxMiBAQCBzdHJ1Y3Qgdm13X3VzZXJfcmVzb3VyY2VfY29udiB7CiAgKiBAY29tbWl0
X25vdGlmeTogICAgIElmIHRoZSByZXNvdXJjZSBpcyBhIGNvbW1hbmQgYnVmZmVyIG1hbmFnZWQg
cmVzb3VyY2UsCiAgKiAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrIHRvIG5vdGlmeSB0aGF0
IGEgZGVmaW5lIG9yIHJlbW92ZSBjb21tYW5kCiAgKiAgICAgICAgICAgICAgICAgICAgIGhhcyBi
ZWVuIGNvbW1pdHRlZCB0byB0aGUgZGV2aWNlLgorICogQGRpcnR5X2FsbG9jOiAgICAgICBBbGxv
Y2F0ZSBhIGRpcnR5IHRyYWNrZXIuIE5VTEwgaWYgZGlydHktdHJhY2tpbmcgaXMgbm90CisgKiAg
ICAgICAgICAgICAgICAgICAgIHN1cHBvcnRlZC4KKyAqIEBkaXJ0eV9mcmVlOiAgICAgICAgRnJl
ZSB0aGUgZGlydHkgdHJhY2tlci4KKyAqIEBkaXJ0eV9zeW5jOiAgICAgICAgVXBsb2FkIHRoZSBk
aXJ0eSBtb2IgY29udGVudHMgdG8gdGhlIHJlc291cmNlLgorICogQGRpcnR5X2FkZF9yYW5nZTog
ICBBZGQgYSBzZXF1ZW50aWFsIGRpcnR5IHJhbmdlIHRvIHRoZSByZXNvdXJjZQorICogICAgICAg
ICAgICAgICAgICAgICBkaXJ0eSB0cmFja2VyLgogICovCiBzdHJ1Y3Qgdm13X3Jlc19mdW5jIHsK
IAllbnVtIHZtd19yZXNfdHlwZSByZXNfdHlwZTsKQEAgLTkwLDYgKzk2LDExIEBAIHN0cnVjdCB2
bXdfcmVzX2Z1bmMgewogCQkgICAgICAgc3RydWN0IHR0bV92YWxpZGF0ZV9idWZmZXIgKnZhbF9i
dWYpOwogCXZvaWQgKCpjb21taXRfbm90aWZ5KShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsCiAJ
CQkgICAgICBlbnVtIHZtd19jbWRidWZfcmVzX3N0YXRlIHN0YXRlKTsKKwlpbnQgKCpkaXJ0eV9h
bGxvYykoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKKwl2b2lkICgqZGlydHlfZnJlZSkoc3Ry
dWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKKwlpbnQgKCpkaXJ0eV9zeW5jKShzdHJ1Y3Qgdm13X3Jl
c291cmNlICpyZXMpOworCXZvaWQgKCpkaXJ0eV9yYW5nZV9hZGQpKHN0cnVjdCB2bXdfcmVzb3Vy
Y2UgKnJlcywgc2l6ZV90IHN0YXJ0LAorCQkJCSBzaXplX3QgZW5kKTsKIH07CiAKIC8qKgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdHRtX2dsdWUuYyBiL2RyaXZl
cnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3R0bV9nbHVlLmMKaW5kZXggNWE3YjhiYjQyMGRlLi5j
ZTI4ODc1NjUzMWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3R0
bV9nbHVlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdHRtX2dsdWUuYwpA
QCAtMjksMTAgKzI5LDIzIEBACiAKIGludCB2bXdfbW1hcChzdHJ1Y3QgZmlsZSAqZmlscCwgc3Ry
dWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCiB7CisJc3RhdGljIGNvbnN0IHN0cnVjdCB2bV9vcGVy
YXRpb25zX3N0cnVjdCB2bXdfdm1fb3BzID0geworCQkucGZuX21rd3JpdGUgPSB2bXdfYm9fdm1f
bWt3cml0ZSwKKwkJLnBhZ2VfbWt3cml0ZSA9IHZtd19ib192bV9ta3dyaXRlLAorCQkuZmF1bHQg
PSB2bXdfYm9fdm1fZmF1bHQsCisJCS5vcGVuID0gdHRtX2JvX3ZtX29wZW4sCisJCS5jbG9zZSA9
IHR0bV9ib192bV9jbG9zZQorCX07CiAJc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYgPSBmaWxw
LT5wcml2YXRlX2RhdGE7CiAJc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiA9IHZtd19wcml2
KGZpbGVfcHJpdi0+bWlub3ItPmRldik7CisJaW50IHJldCA9IHR0bV9ib19tbWFwKGZpbHAsIHZt
YSwgJmRldl9wcml2LT5iZGV2KTsKIAotCXJldHVybiB0dG1fYm9fbW1hcChmaWxwLCB2bWEsICZk
ZXZfcHJpdi0+YmRldik7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXZtYS0+dm1fb3Bz
ID0gJnZtd192bV9vcHM7CisKKwlyZXR1cm4gMDsKIH0KIAogLyogc3RydWN0IHZtd192YWxpZGF0
aW9uX21lbSBjYWxsYmFjayAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92
bXdnZnhfdmFsaWRhdGlvbi5jIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRh
dGlvbi5jCmluZGV4IDdiZmYzNjI4ZmM1NC4uMzg0YTExNzMwYTkyIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxpZGF0aW9uLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5jCkBAIC0zMyw2ICszMyw4IEBACiAgKiBzdHJ1
Y3Qgdm13X3ZhbGlkYXRpb25fYm9fbm9kZSAtIEJ1ZmZlciBvYmplY3QgdmFsaWRhdGlvbiBtZXRh
ZGF0YS4KICAqIEBiYXNlOiBNZXRhZGF0YSB1c2VkIGZvciBUVE0gcmVzZXJ2YXRpb24tIGFuZCB2
YWxpZGF0aW9uLgogICogQGhhc2g6IEEgaGFzaCBlbnRyeSB1c2VkIGZvciB0aGUgZHVwbGljYXRl
IGRldGVjdGlvbiBoYXNoIHRhYmxlLgorICogQGNvaGVyZW50X2NvdW50OiBJZiBzd2l0Y2hpbmcg
YmFja3VwIGJ1ZmZlcnMsIG51bWJlciBvZiBuZXcgY29oZXJlbnQKKyAqIHJlc291cmNlcyB0aGF0
IHdpbGwgaGF2ZSB0aGlzIGJ1ZmZlciBhcyBhIGJhY2t1cCBidWZmZXIuCiAgKiBAYXNfbW9iOiBW
YWxpZGF0ZSBhcyBtb2IuCiAgKiBAY3B1X2JsaXQ6IFZhbGlkYXRlIGZvciBjcHUgYmxpdCBhY2Nl
c3MuCiAgKgpAQCAtNDIsNiArNDQsNyBAQAogc3RydWN0IHZtd192YWxpZGF0aW9uX2JvX25vZGUg
ewogCXN0cnVjdCB0dG1fdmFsaWRhdGVfYnVmZmVyIGJhc2U7CiAJc3RydWN0IGRybV9oYXNoX2l0
ZW0gaGFzaDsKKwl1bnNpZ25lZCBpbnQgY29oZXJlbnRfY291bnQ7CiAJdTMyIGFzX21vYiA6IDE7
CiAJdTMyIGNwdV9ibGl0IDogMTsKIH07CkBAIC00NTksNiArNDYyLDE5IEBAIGludCB2bXdfdmFs
aWRhdGlvbl9yZXNfcmVzZXJ2ZShzdHJ1Y3Qgdm13X3ZhbGlkYXRpb25fY29udGV4dCAqY3R4LAog
CQkJaWYgKHJldCkKIAkJCQlnb3RvIG91dF91bnJlc2VydmU7CiAJCX0KKworCQlpZiAodmFsLT5z
d2l0Y2hpbmdfYmFja3VwICYmIHZhbC0+bmV3X2JhY2t1cCAmJgorCQkgICAgcmVzLT5jb2hlcmVu
dCkgeworCQkJc3RydWN0IHZtd192YWxpZGF0aW9uX2JvX25vZGUgKmJvX25vZGUgPQorCQkJCXZt
d192YWxpZGF0aW9uX2ZpbmRfYm9fZHVwKGN0eCwKKwkJCQkJCQkgICB2YWwtPm5ld19iYWNrdXAp
OworCisJCQlpZiAoV0FSTl9PTighYm9fbm9kZSkpIHsKKwkJCQlyZXQgPSAtRUlOVkFMOworCQkJ
CWdvdG8gb3V0X3VucmVzZXJ2ZTsKKwkJCX0KKwkJCWJvX25vZGUtPmNvaGVyZW50X2NvdW50Kys7
CisJCX0KIAl9CiAKIAlyZXR1cm4gMDsKQEAgLTU2NSw2ICs1ODEsOSBAQCBpbnQgdm13X3ZhbGlk
YXRpb25fYm9fdmFsaWRhdGUoc3RydWN0IHZtd192YWxpZGF0aW9uX2NvbnRleHQgKmN0eCwgYm9v
bCBpbnRyKQogCWludCByZXQ7CiAKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5KGVudHJ5LCAmY3R4LT5i
b19saXN0LCBiYXNlLmhlYWQpIHsKKwkJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8gPQor
CQkJY29udGFpbmVyX29mKGVudHJ5LT5iYXNlLmJvLCB0eXBlb2YoKnZibyksIGJhc2UpOworCiAJ
CWlmIChlbnRyeS0+Y3B1X2JsaXQpIHsKIAkJCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHgg
PSB7CiAJCQkJLmludGVycnVwdGlibGUgPSBpbnRyLApAQCAtNTc5LDYgKzU5OCwyNyBAQCBpbnQg
dm13X3ZhbGlkYXRpb25fYm9fdmFsaWRhdGUoc3RydWN0IHZtd192YWxpZGF0aW9uX2NvbnRleHQg
KmN0eCwgYm9vbCBpbnRyKQogCQl9CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OworCisJCS8q
CisJCSAqIFJhdGhlciB0aGFuIGhhdmluZyB0aGUgcmVzb3VyY2UgY29kZSBhbGxvY2F0aW5nIHRo
ZSBibworCQkgKiBkaXJ0eSB0cmFja2VyIGluIHJlc291cmNlX3VucmVzZXJ2ZSgpIHdoZXJlIHdl
IGNhbid0IGZhaWwsCisJCSAqIERvIGl0IGhlcmUgd2hlbiB2YWxpZGF0aW5nIHRoZSBidWZmZXIg
b2JqZWN0LgorCQkgKi8KKwkJaWYgKGVudHJ5LT5jb2hlcmVudF9jb3VudCkgeworCQkJdW5zaWdu
ZWQgaW50IGNvaGVyZW50X2NvdW50ID0gZW50cnktPmNvaGVyZW50X2NvdW50OworCisJCQl3aGls
ZSAoY29oZXJlbnRfY291bnQpIHsKKwkJCQlyZXQgPSB2bXdfYm9fZGlydHlfYWRkKHZibyk7CisJ
CQkJaWYgKHJldCkKKwkJCQkJcmV0dXJuIHJldDsKKworCQkJCWNvaGVyZW50X2NvdW50LS07CisJ
CQl9CisJCQllbnRyeS0+Y29oZXJlbnRfY291bnQgLT0gY29oZXJlbnRfY291bnQ7CisJCX0KKwor
CQlpZiAodmJvLT5kaXJ0eSkKKwkJCXZtd19ib19kaXJ0eV9zY2FuKHZibyk7CiAJfQogCXJldHVy
biAwOwogfQpAQCAtODMxLDMgKzg3MSwzNCBAQCBpbnQgdm13X3ZhbGlkYXRpb25fcHJlbG9hZF9y
ZXMoc3RydWN0IHZtd192YWxpZGF0aW9uX2NvbnRleHQgKmN0eCwKIAljdHgtPm1lbV9zaXplX2xl
ZnQgKz0gc2l6ZTsKIAlyZXR1cm4gMDsKIH0KKworLyoqCisgKiB2bXdfdmFsaWRhdGlvbl9ib19i
YWNrb2ZmIC0gVW5yZXNlcnZlIGJ1ZmZlciBvYmplY3RzIHJlZ2lzdGVyZWQgd2l0aCBhCisgKiB2
YWxpZGF0aW9uIGNvbnRleHQKKyAqIEBjdHg6IFRoZSB2YWxpZGF0aW9uIGNvbnRleHQKKyAqCisg
KiBUaGlzIGZ1bmN0aW9uIHVucmVzZXJ2ZXMgdGhlIGJ1ZmZlciBvYmplY3RzIHByZXZpb3VzbHkg
cmVzZXJ2ZWQgdXNpbmcKKyAqIHZtd192YWxpZGF0aW9uX2JvX3Jlc2VydmUuIEl0J3MgdHlwaWNh
bGx5IHVzZWQgYXMgcGFydCBvZiBhbiBlcnJvciBwYXRoCisgKi8KK3ZvaWQgdm13X3ZhbGlkYXRp
b25fYm9fYmFja29mZihzdHJ1Y3Qgdm13X3ZhbGlkYXRpb25fY29udGV4dCAqY3R4KQoreworCXN0
cnVjdCB2bXdfdmFsaWRhdGlvbl9ib19ub2RlICplbnRyeTsKKworCS8qCisJICogU3dpdGNoaW5n
IGNvaGVyZW50IHJlc291cmNlIGJhY2t1cCBidWZmZXJzIGZhaWxlZC4KKwkgKiBSZWxlYXNlIGNv
cnJlc3BvbmRpbmcgYnVmZmVyIG9iamVjdCBkaXJ0eSB0cmFja2Vycy4KKwkgKi8KKwlsaXN0X2Zv
cl9lYWNoX2VudHJ5KGVudHJ5LCAmY3R4LT5ib19saXN0LCBiYXNlLmhlYWQpIHsKKwkJaWYgKGVu
dHJ5LT5jb2hlcmVudF9jb3VudCkgeworCQkJdW5zaWduZWQgaW50IGNvaGVyZW50X2NvdW50ID0g
ZW50cnktPmNvaGVyZW50X2NvdW50OworCQkJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8g
PQorCQkJCWNvbnRhaW5lcl9vZihlbnRyeS0+YmFzZS5ibywgdHlwZW9mKCp2Ym8pLAorCQkJCQkg
ICAgIGJhc2UpOworCisJCQl3aGlsZSAoY29oZXJlbnRfY291bnQtLSkKKwkJCQl2bXdfYm9fZGly
dHlfcmVsZWFzZSh2Ym8pOworCQl9CisJfQorCisJdHRtX2V1X2JhY2tvZmZfcmVzZXJ2YXRpb24o
JmN0eC0+dGlja2V0LCAmY3R4LT5ib19saXN0KTsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uaCBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngv
dm13Z2Z4X3ZhbGlkYXRpb24uaAppbmRleCA3MWNlNGIzMTg4NTAuLjczOTkwNmQxYjNlYiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uaApAQCAtMTczLDIwICsx
NzMsNiBAQCB2bXdfdmFsaWRhdGlvbl9ib19yZXNlcnZlKHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9j
b250ZXh0ICpjdHgsCiAJCQkJICAgICAgTlVMTCk7CiB9CiAKLS8qKgotICogdm13X3ZhbGlkYXRp
b25fYm9fYmFja29mZiAtIFVucmVzZXJ2ZSBidWZmZXIgb2JqZWN0cyByZWdpc3RlcmVkIHdpdGgg
YQotICogdmFsaWRhdGlvbiBjb250ZXh0Ci0gKiBAY3R4OiBUaGUgdmFsaWRhdGlvbiBjb250ZXh0
Ci0gKgotICogVGhpcyBmdW5jdGlvbiB1bnJlc2VydmVzIHRoZSBidWZmZXIgb2JqZWN0cyBwcmV2
aW91c2x5IHJlc2VydmVkIHVzaW5nCi0gKiB2bXdfdmFsaWRhdGlvbl9ib19yZXNlcnZlLiBJdCdz
IHR5cGljYWxseSB1c2VkIGFzIHBhcnQgb2YgYW4gZXJyb3IgcGF0aAotICovCi1zdGF0aWMgaW5s
aW5lIHZvaWQKLXZtd192YWxpZGF0aW9uX2JvX2JhY2tvZmYoc3RydWN0IHZtd192YWxpZGF0aW9u
X2NvbnRleHQgKmN0eCkKLXsKLQl0dG1fZXVfYmFja29mZl9yZXNlcnZhdGlvbigmY3R4LT50aWNr
ZXQsICZjdHgtPmJvX2xpc3QpOwotfQotCiAvKioKICAqIHZtd192YWxpZGF0aW9uX2JvX2ZlbmNl
IC0gVW5yZXNlcnZlIGFuZCBmZW5jZSBidWZmZXIgb2JqZWN0cyByZWdpc3RlcmVkCiAgKiB3aXRo
IGEgdmFsaWRhdGlvbiBjb250ZXh0CkBAIC0yNjksNCArMjU1LDYgQEAgaW50IHZtd192YWxpZGF0
aW9uX3ByZWxvYWRfcmVzKHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9jb250ZXh0ICpjdHgsCiAJCQkg
ICAgICAgdW5zaWduZWQgaW50IHNpemUpOwogdm9pZCB2bXdfdmFsaWRhdGlvbl9yZXNfc2V0X2Rp
cnR5KHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9jb250ZXh0ICpjdHgsCiAJCQkJICB2b2lkICp2YWxf
cHJpdmF0ZSwgdTMyIGRpcnR5KTsKK3ZvaWQgdm13X3ZhbGlkYXRpb25fYm9fYmFja29mZihzdHJ1
Y3Qgdm13X3ZhbGlkYXRpb25fY29udGV4dCAqY3R4KTsKKwogI2VuZGlmCi0tIAoyLjIwLjEKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBt
YWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
