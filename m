Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 129D123DAFE
	for <lists+dri-devel@lfdr.de>; Thu,  6 Aug 2020 15:52:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E890D6E8BE;
	Thu,  6 Aug 2020 13:51:55 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-wr1-x443.google.com (mail-wr1-x443.google.com
 [IPv6:2a00:1450:4864:20::443])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F1B076E8B8;
 Thu,  6 Aug 2020 13:51:53 +0000 (UTC)
Received: by mail-wr1-x443.google.com with SMTP id z18so40519234wrm.12;
 Thu, 06 Aug 2020 06:51:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=keUz6gV+7h3X1n6kIBa8hwoPLFYvGvWAnUGVFWEQUqw=;
 b=ZR7lyH+9HF9CIylzA6neW1UyXvQPs96sTqXNjRipIdjIXk+RaMbgSUni7BszznzfjK
 ZElraVqUBHOd4sXPHLOoK1eovcJBjHZWcFWSor1Ls/J974GvSeiN+w3qmFT1zdnOi/Iw
 HtUTRBfAelO/xNw9VOzDuXiIZ+ZdZgxxn83cxBNqXn2svXhImcsSMqt0crX0ri8Ju8Fm
 +AEDHvOv6P/w+VGtwJ2E7trvh4eqNpNXYgtFy24dRlVB4pLZ2MpFjeKLfct3st3zLfp0
 aLXJVxIELSzTg2hr/xLDdu/r9FMS2TCkJdRlDn4jZTUL8K0Qwb9QysusuI5dE52ZX7av
 YGJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=keUz6gV+7h3X1n6kIBa8hwoPLFYvGvWAnUGVFWEQUqw=;
 b=CXUZ08bOgCvFAZZPI9Aw/LTomshanrp9ZDk9Bllgpjulciro8Irv/rUV8H7hySWhuH
 Ws0MY5eBpzxet34sUKZ4rmgLzbpvYyx/W9dP6GrCY8pj4xQSVU7ckdBCEUz97Qzocraz
 7nosuzWDDlf0zXc1jJG/SR8BhvkVUGNpZzqhrThBzPX2QmNUfjgxf2gf7dNDGDXClc44
 KaXORHSzAXWTmy7XF8v2zQABjAds4GkfaFoG6l6vm6203rQ9e0FuCaTEfr5jDfyKsLAb
 sGvKXNYrFROGCsbsHpI85XU7Kaayz2HrNaf9lEWx7P6yQfJnmnELwYG6G12EpEkwWClo
 +J5w==
X-Gm-Message-State: AOAM531bZPWnWzzzjxI7I3cKjiQ1pGYf+iclp/i27jx68zkfqc0GXKUw
 H+inknv/CHUz2o/64+Fpx+681XqQ
X-Google-Smtp-Source: ABdhPJwO8ete1sj05peD6RdVd6fxDmKWfUQf6LfmFuPDpeX3D26+k/vQQOjfuJQHDKYMWgddcFsUwA==
X-Received: by 2002:adf:e94c:: with SMTP id m12mr7598727wrn.109.1596721910775; 
 Thu, 06 Aug 2020 06:51:50 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:3fec:7447:4f4b:c982])
 by smtp.gmail.com with ESMTPSA id r206sm6664204wma.6.2020.08.06.06.51.49
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 06 Aug 2020 06:51:50 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: dri-devel@lists.freedesktop.org,
	amd-gfx@lists.freedesktop.org
Subject: [PATCH 2/3] drm/ttm: give resource functions their own [ch] files
Date: Thu,  6 Aug 2020 15:51:47 +0200
Message-Id: <20200806135148.2032-2-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200806135148.2032-1-christian.koenig@amd.com>
References: <20200806135148.2032-1-christian.koenig@amd.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBpcyBhIHNlcGFyYXRlIG9iamVjdCB3ZSB3b3JrIHdpdGhpbiBUVE0uCgpTaWduZWQtb2Zm
LWJ5OiBDaHJpc3RpYW4gS8O2bmlnIDxjaHJpc3RpYW4ua29lbmlnQGFtZC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X29iamVjdC5jIHwgICAyICstCiBkcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMgICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1
L2RybS9ub3V2ZWF1L25vdXZlYXVfYm8uYyAgICAgICB8ICAgNCArLQogZHJpdmVycy9ncHUvZHJt
L3JhZGVvbi9yYWRlb25fdHRtLmMgICAgICAgIHwgICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vdHRt
L01ha2VmaWxlICAgICAgICAgICAgICAgfCAgIDMgKy0KIGRyaXZlcnMvZ3B1L2RybS90dG0vdHRt
X2JvLmMgICAgICAgICAgICAgICB8IDEyNCArLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdHRt
L3R0bV9ib191dGlsLmMgICAgICAgICAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS90dG0vdHRt
X3Jlc291cmNlLmMgICAgICAgICB8IDE1MSArKysrKysrKysrKysKIGluY2x1ZGUvZHJtL3R0bS90
dG1fYm9fYXBpLmggICAgICAgICAgICAgICB8ICA3MCArLS0tLS0KIGluY2x1ZGUvZHJtL3R0bS90
dG1fYm9fZHJpdmVyLmggICAgICAgICAgICB8IDE4OSAtLS0tLS0tLS0tLS0tLS0KIGluY2x1ZGUv
ZHJtL3R0bS90dG1fcmVzb3VyY2UuaCAgICAgICAgICAgICB8IDI2MyArKysrKysrKysrKysrKysr
KysrKysKIDExIGZpbGVzIGNoYW5nZWQsIDQ0NiBpbnNlcnRpb25zKCspLCAzNzYgZGVsZXRpb25z
KC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fcmVzb3VyY2Uu
YwogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvZHJtL3R0bS90dG1fcmVzb3VyY2UuaAoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9vYmplY3QuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9vYmplY3QuYwppbmRleCA0M2Y0OTY2MzMx
ZGQuLmIzNmQ5NGY1N2Q0MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X29iamVjdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9v
YmplY3QuYwpAQCAtMzgxLDcgKzM4MSw3IEBAIGludCBhbWRncHVfYm9fY3JlYXRlX2tlcm5lbF9h
dChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAlpZiAoY3B1X2FkZHIpCiAJCWFtZGdwdV9i
b19rdW5tYXAoKmJvX3B0cik7CiAKLQl0dG1fYm9fbWVtX3B1dCgmKCpib19wdHIpLT50Ym8sICYo
KmJvX3B0ciktPnRiby5tZW0pOworCXR0bV9yZXNvdXJjZV9mcmVlKCYoKmJvX3B0ciktPnRibywg
JigqYm9fcHRyKS0+dGJvLm1lbSk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgKCpib19wdHIpLT5wbGFj
ZW1lbnQubnVtX3BsYWNlbWVudDsgKytpKSB7CiAJCSgqYm9fcHRyKS0+cGxhY2VtZW50c1tpXS5m
cGZuID0gb2Zmc2V0ID4+IFBBR0VfU0hJRlQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfdHRtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfdHRtLmMKaW5kZXggNjdkMmVlZjJmOWViLi40NjI0MDJmY2QxYTQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90dG0uYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMKQEAgLTU3OCw3ICs1NzgsNyBAQCBzdGF0aWMgaW50
IGFtZGdwdV9tb3ZlX3ZyYW1fcmFtKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sIGJvb2wg
ZXZpY3QsCiAJLyogbW92ZSBCTyAoaW4gdG1wX21lbSkgdG8gbmV3X21lbSAqLwogCXIgPSB0dG1f
Ym9fbW92ZV90dG0oYm8sIGN0eCwgbmV3X21lbSk7CiBvdXRfY2xlYW51cDoKLQl0dG1fYm9fbWVt
X3B1dChibywgJnRtcF9tZW0pOworCXR0bV9yZXNvdXJjZV9mcmVlKGJvLCAmdG1wX21lbSk7CiAJ
cmV0dXJuIHI7CiB9CiAKQEAgLTYyNSw3ICs2MjUsNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9tb3Zl
X3JhbV92cmFtKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sIGJvb2wgZXZpY3QsCiAJCWdv
dG8gb3V0X2NsZWFudXA7CiAJfQogb3V0X2NsZWFudXA6Ci0JdHRtX2JvX21lbV9wdXQoYm8sICZ0
bXBfbWVtKTsKKwl0dG1fcmVzb3VyY2VfZnJlZShibywgJnRtcF9tZW0pOwogCXJldHVybiByOwog
fQogCkBAIC0xMjAzLDExICsxMjAzLDExIEBAIGludCBhbWRncHVfdHRtX2FsbG9jX2dhcnQoc3Ry
dWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibykKIAkJZ3R0LT5vZmZzZXQgPSAodTY0KXRtcC5zdGFy
dCA8PCBQQUdFX1NISUZUOwogCQlyID0gYW1kZ3B1X3R0bV9nYXJ0X2JpbmQoYWRldiwgYm8sIGZs
YWdzKTsKIAkJaWYgKHVubGlrZWx5KHIpKSB7Ci0JCQl0dG1fYm9fbWVtX3B1dChibywgJnRtcCk7
CisJCQl0dG1fcmVzb3VyY2VfZnJlZShibywgJnRtcCk7CiAJCQlyZXR1cm4gcjsKIAkJfQogCi0J
CXR0bV9ib19tZW1fcHV0KGJvLCAmYm8tPm1lbSk7CisJCXR0bV9yZXNvdXJjZV9mcmVlKGJvLCAm
Ym8tPm1lbSk7CiAJCWJvLT5tZW0gPSB0bXA7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vbm91dmVhdS9ub3V2ZWF1X2JvLmMgYi9kcml2ZXJzL2dwdS9kcm0vbm91dmVhdS9ub3V2
ZWF1X2JvLmMKaW5kZXggNjA0YTc0MzIzNjk2Li4yOWQ3ZDdlMTAwZjcgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9ub3V2ZWF1L25vdXZlYXVfYm8uYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
bm91dmVhdS9ub3V2ZWF1X2JvLmMKQEAgLTExOTEsNyArMTE5MSw3IEBAIG5vdXZlYXVfYm9fbW92
ZV9mbGlwZChzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLCBib29sIGV2aWN0LCBib29sIGlu
dHIsCiAKIAlyZXQgPSB0dG1fYm9fbW92ZV90dG0oYm8sICZjdHgsIG5ld19yZWcpOwogb3V0Ogot
CXR0bV9ib19tZW1fcHV0KGJvLCAmdG1wX3JlZyk7CisJdHRtX3Jlc291cmNlX2ZyZWUoYm8sICZ0
bXBfcmVnKTsKIAlyZXR1cm4gcmV0OwogfQogCkBAIC0xMjI3LDcgKzEyMjcsNyBAQCBub3V2ZWF1
X2JvX21vdmVfZmxpcHMoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywgYm9vbCBldmljdCwg
Ym9vbCBpbnRyLAogCQlnb3RvIG91dDsKIAogb3V0OgotCXR0bV9ib19tZW1fcHV0KGJvLCAmdG1w
X3JlZyk7CisJdHRtX3Jlc291cmNlX2ZyZWUoYm8sICZ0bXBfcmVnKTsKIAlyZXR1cm4gcmV0Owog
fQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl90dG0uYyBiL2Ry
aXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX3R0bS5jCmluZGV4IDMzNTViNjliMTNkMS4uMzFm
NGNmMjExYjZhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl90dG0u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl90dG0uYwpAQCAtMjcxLDcgKzI3
MSw3IEBAIHN0YXRpYyBpbnQgcmFkZW9uX21vdmVfdnJhbV9yYW0oc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICpibywKIAl9CiAJciA9IHR0bV9ib19tb3ZlX3R0bShibywgJmN0eCwgbmV3X21lbSk7
CiBvdXRfY2xlYW51cDoKLQl0dG1fYm9fbWVtX3B1dChibywgJnRtcF9tZW0pOworCXR0bV9yZXNv
dXJjZV9mcmVlKGJvLCAmdG1wX21lbSk7CiAJcmV0dXJuIHI7CiB9CiAKQEAgLTMwOSw3ICszMDks
NyBAQCBzdGF0aWMgaW50IHJhZGVvbl9tb3ZlX3JhbV92cmFtKHN0cnVjdCB0dG1fYnVmZmVyX29i
amVjdCAqYm8sCiAJCWdvdG8gb3V0X2NsZWFudXA7CiAJfQogb3V0X2NsZWFudXA6Ci0JdHRtX2Jv
X21lbV9wdXQoYm8sICZ0bXBfbWVtKTsKKwl0dG1fcmVzb3VyY2VfZnJlZShibywgJnRtcF9tZW0p
OwogCXJldHVybiByOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdHRtL01ha2Vm
aWxlIGIvZHJpdmVycy9ncHUvZHJtL3R0bS9NYWtlZmlsZQppbmRleCBlNTQzMjZlNmNlYTQuLjkw
YzBkYTg4Y2M5OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3R0bS9NYWtlZmlsZQorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vdHRtL01ha2VmaWxlCkBAIC00LDcgKzQsOCBAQAogCiB0dG0teSA6
PSB0dG1fbWVtb3J5Lm8gdHRtX3R0Lm8gdHRtX2JvLm8gXAogCXR0bV9ib191dGlsLm8gdHRtX2Jv
X3ZtLm8gdHRtX21vZHVsZS5vIFwKLQl0dG1fZXhlY2J1Zl91dGlsLm8gdHRtX3BhZ2VfYWxsb2Mu
byB0dG1fcmFuZ2VfbWFuYWdlci5vCisJdHRtX2V4ZWNidWZfdXRpbC5vIHR0bV9wYWdlX2FsbG9j
Lm8gdHRtX3JhbmdlX21hbmFnZXIubyBcCisJdHRtX3Jlc291cmNlLm8KIHR0bS0kKENPTkZJR19B
R1ApICs9IHR0bV9hZ3BfYmFja2VuZC5vCiB0dG0tJChDT05GSUdfRFJNX1RUTV9ETUFfUEFHRV9Q
T09MKSArPSB0dG1fcGFnZV9hbGxvY19kbWEubwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vdHRtL3R0bV9iby5jIGIvZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fYm8uYwppbmRleCBhZTcx
YzNhYjZjYzQuLjU1ODkwMzE0MzE2YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3R0bS90
dG1fYm8uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9iby5jCkBAIC03NywxOSArNzcs
NiBAQCBzdGF0aWMgaW5saW5lIGludCB0dG1fbWVtX3R5cGVfZnJvbV9wbGFjZShjb25zdCBzdHJ1
Y3QgdHRtX3BsYWNlICpwbGFjZSwKIAlyZXR1cm4gMDsKIH0KIAotdm9pZCB0dG1fcmVzb3VyY2Vf
bWFuYWdlcl9kZWJ1ZyhzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwKLQkJCQlzdHJ1
Y3QgZHJtX3ByaW50ZXIgKnApCi17Ci0JZHJtX3ByaW50ZihwLCAiICAgIHVzZV90eXBlOiAlZFxu
IiwgbWFuLT51c2VfdHlwZSk7Ci0JZHJtX3ByaW50ZihwLCAiICAgIHVzZV90dDogJWRcbiIsIG1h
bi0+dXNlX3R0KTsKLQlkcm1fcHJpbnRmKHAsICIgICAgc2l6ZTogJWxsdVxuIiwgbWFuLT5zaXpl
KTsKLQlkcm1fcHJpbnRmKHAsICIgICAgYXZhaWxhYmxlX2NhY2hpbmc6IDB4JTA4WFxuIiwgbWFu
LT5hdmFpbGFibGVfY2FjaGluZyk7Ci0JZHJtX3ByaW50ZihwLCAiICAgIGRlZmF1bHRfY2FjaGlu
ZzogMHglMDhYXG4iLCBtYW4tPmRlZmF1bHRfY2FjaGluZyk7Ci0JaWYgKG1hbi0+ZnVuYyAmJiBt
YW4tPmZ1bmMtPmRlYnVnKQotCQkoKm1hbi0+ZnVuYy0+ZGVidWcpKG1hbiwgcCk7Ci19Ci1FWFBP
UlRfU1lNQk9MKHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2RlYnVnKTsKLQogc3RhdGljIHZvaWQgdHRt
X2JvX21lbV9zcGFjZV9kZWJ1ZyhzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAogCQkJCQlz
dHJ1Y3QgdHRtX3BsYWNlbWVudCAqcGxhY2VtZW50KQogewpAQCAtMzYzLDcgKzM1MCw3IEBAIHN0
YXRpYyB2b2lkIHR0bV9ib19jbGVhbnVwX21lbXR5cGVfdXNlKHN0cnVjdCB0dG1fYnVmZmVyX29i
amVjdCAqYm8pCiAKIAl0dG1fdHRfZGVzdHJveShiby0+dHRtKTsKIAliby0+dHRtID0gTlVMTDsK
LQl0dG1fYm9fbWVtX3B1dChibywgJmJvLT5tZW0pOworCXR0bV9yZXNvdXJjZV9mcmVlKGJvLCAm
Ym8tPm1lbSk7CiB9CiAKIHN0YXRpYyBpbnQgdHRtX2JvX2luZGl2aWR1YWxpemVfcmVzdihzdHJ1
Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvKQpAQCAtNjc4LDcgKzY2NSw3IEBAIHN0YXRpYyBpbnQg
dHRtX2JvX2V2aWN0KHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sCiAJaWYgKHVubGlrZWx5
KHJldCkpIHsKIAkJaWYgKHJldCAhPSAtRVJFU1RBUlRTWVMpCiAJCQlwcl9lcnIoIkJ1ZmZlciBl
dmljdGlvbiBmYWlsZWRcbiIpOwotCQl0dG1fYm9fbWVtX3B1dChibywgJmV2aWN0X21lbSk7CisJ
CXR0bV9yZXNvdXJjZV9mcmVlKGJvLCAmZXZpY3RfbWVtKTsKIAkJZ290byBvdXQ7CiAJfQogCWJv
LT5ldmljdGVkID0gdHJ1ZTsKQEAgLTc2NywxMSArNzU0LDExIEBAIHN0YXRpYyBpbnQgdHRtX21l
bV9ldmljdF93YWl0X2J1c3koc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpidXN5X2JvLAogCXJl
dHVybiByID09IC1FREVBRExLID8gLUVCVVNZIDogcjsKIH0KIAotc3RhdGljIGludCB0dG1fbWVt
X2V2aWN0X2ZpcnN0KHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJICAgICAgIHN0cnVj
dCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuLAotCQkJICAgICAgIGNvbnN0IHN0cnVjdCB0dG1f
cGxhY2UgKnBsYWNlLAotCQkJICAgICAgIHN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCAqY3R4LAot
CQkJICAgICAgIHN0cnVjdCB3d19hY3F1aXJlX2N0eCAqdGlja2V0KQoraW50IHR0bV9tZW1fZXZp
Y3RfZmlyc3Qoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCisJCQlzdHJ1Y3QgdHRtX3Jlc291
cmNlX21hbmFnZXIgKm1hbiwKKwkJCWNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAorCQkJ
c3RydWN0IHR0bV9vcGVyYXRpb25fY3R4ICpjdHgsCisJCQlzdHJ1Y3Qgd3dfYWNxdWlyZV9jdHgg
KnRpY2tldCkKIHsKIAlzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvID0gTlVMTCwgKmJ1c3lf
Ym8gPSBOVUxMOwogCWJvb2wgbG9ja2VkID0gZmFsc2U7CkBAIC04MzksMzIgKzgyNiw2IEBAIHN0
YXRpYyBpbnQgdHRtX21lbV9ldmljdF9maXJzdChzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwK
IAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IHR0bV9ib19tZW1fZ2V0KHN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqYm8sCi0JCQkgIGNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAot
CQkJICBzdHJ1Y3QgdHRtX3Jlc291cmNlICptZW0pCi17Ci0Jc3RydWN0IHR0bV9yZXNvdXJjZV9t
YW5hZ2VyICptYW4gPSB0dG1fbWFuYWdlcl90eXBlKGJvLT5iZGV2LCBtZW0tPm1lbV90eXBlKTsK
LQotCW1lbS0+bW1fbm9kZSA9IE5VTEw7Ci0JaWYgKCFtYW4tPmZ1bmMgfHwgIW1hbi0+ZnVuYy0+
YWxsb2MpCi0JCXJldHVybiAwOwotCi0JcmV0dXJuIG1hbi0+ZnVuYy0+YWxsb2MobWFuLCBibywg
cGxhY2UsIG1lbSk7Ci19Ci0KLXZvaWQgdHRtX2JvX21lbV9wdXQoc3RydWN0IHR0bV9idWZmZXJf
b2JqZWN0ICpibywgc3RydWN0IHR0bV9yZXNvdXJjZSAqbWVtKQotewotCXN0cnVjdCB0dG1fcmVz
b3VyY2VfbWFuYWdlciAqbWFuID0gdHRtX21hbmFnZXJfdHlwZShiby0+YmRldiwgbWVtLT5tZW1f
dHlwZSk7Ci0KLQlpZiAoIW1hbi0+ZnVuYyB8fCAhbWFuLT5mdW5jLT5mcmVlKQotCQlyZXR1cm47
Ci0KLQltYW4tPmZ1bmMtPmZyZWUobWFuLCBtZW0pOwotCW1lbS0+bW1fbm9kZSA9IE5VTEw7Ci0J
bWVtLT5tZW1fdHlwZSA9IFRUTV9QTF9TWVNURU07Ci19Ci1FWFBPUlRfU1lNQk9MKHR0bV9ib19t
ZW1fcHV0KTsKLQogLyoqCiAgKiBBZGQgdGhlIGxhc3QgbW92ZSBmZW5jZSB0byB0aGUgQk8gYW5k
IHJlc2VydmUgYSBuZXcgc2hhcmVkIHNsb3QuCiAgKi8KQEAgLTkxNSw3ICs4NzYsNyBAQCBzdGF0
aWMgaW50IHR0bV9ib19tZW1fZm9yY2Vfc3BhY2Uoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpi
bywKIAogCXRpY2tldCA9IGRtYV9yZXN2X2xvY2tpbmdfY3R4KGJvLT5iYXNlLnJlc3YpOwogCWRv
IHsKLQkJcmV0ID0gdHRtX2JvX21lbV9nZXQoYm8sIHBsYWNlLCBtZW0pOworCQlyZXQgPSB0dG1f
cmVzb3VyY2VfYWxsb2MoYm8sIHBsYWNlLCBtZW0pOwogCQlpZiAobGlrZWx5KCFyZXQpKQogCQkJ
YnJlYWs7CiAJCWlmICh1bmxpa2VseShyZXQgIT0gLUVOT1NQQykpCkBAIC0xMDU2LDcgKzEwMTcs
NyBAQCBpbnQgdHRtX2JvX21lbV9zcGFjZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAog
CQkJZ290byBlcnJvcjsKIAogCQl0eXBlX2ZvdW5kID0gdHJ1ZTsKLQkJcmV0ID0gdHRtX2JvX21l
bV9nZXQoYm8sIHBsYWNlLCBtZW0pOworCQlyZXQgPSB0dG1fcmVzb3VyY2VfYWxsb2MoYm8sIHBs
YWNlLCBtZW0pOwogCQlpZiAocmV0ID09IC1FTk9TUEMpCiAJCQljb250aW51ZTsKIAkJaWYgKHVu
bGlrZWx5KHJldCkpCkBAIC0xMDY1LDcgKzEwMjYsNyBAQCBpbnQgdHRtX2JvX21lbV9zcGFjZShz
dHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAogCQltYW4gPSB0dG1fbWFuYWdlcl90eXBlKGJk
ZXYsIG1lbS0+bWVtX3R5cGUpOwogCQlyZXQgPSB0dG1fYm9fYWRkX21vdmVfZmVuY2UoYm8sIG1h
biwgbWVtLCBjdHgtPm5vX3dhaXRfZ3B1KTsKIAkJaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJCXR0
bV9ib19tZW1fcHV0KGJvLCBtZW0pOworCQkJdHRtX3Jlc291cmNlX2ZyZWUoYm8sIG1lbSk7CiAJ
CQlpZiAocmV0ID09IC1FQlVTWSkKIAkJCQljb250aW51ZTsKIApAQCAtMTEzMiw3ICsxMDkzLDcg
QEAgc3RhdGljIGludCB0dG1fYm9fbW92ZV9idWZmZXIoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0
ICpibywKIAlyZXQgPSB0dG1fYm9faGFuZGxlX21vdmVfbWVtKGJvLCAmbWVtLCBmYWxzZSwgY3R4
KTsKIG91dF91bmxvY2s6CiAJaWYgKHJldCkKLQkJdHRtX2JvX21lbV9wdXQoYm8sICZtZW0pOwor
CQl0dG1fcmVzb3VyY2VfZnJlZShibywgJm1lbSk7CiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMTQw
NCw1MiArMTM2NSw2IEBAIGludCB0dG1fYm9fY3JlYXRlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpi
ZGV2LAogfQogRVhQT1JUX1NZTUJPTCh0dG1fYm9fY3JlYXRlKTsKIAotaW50IHR0bV9yZXNvdXJj
ZV9tYW5hZ2VyX2ZvcmNlX2xpc3RfY2xlYW4oc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCi0J
CQkJCSAgc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyICptYW4pCi17Ci0Jc3RydWN0IHR0bV9v
cGVyYXRpb25fY3R4IGN0eCA9IHsKLQkJLmludGVycnVwdGlibGUgPSBmYWxzZSwKLQkJLm5vX3dh
aXRfZ3B1ID0gZmFsc2UsCi0JCS5mbGFncyA9IFRUTV9PUFRfRkxBR19GT1JDRV9BTExPQwotCX07
Ci0Jc3RydWN0IHR0bV9ib19nbG9iYWwgKmdsb2IgPSAmdHRtX2JvX2dsb2I7Ci0Jc3RydWN0IGRt
YV9mZW5jZSAqZmVuY2U7Ci0JaW50IHJldDsKLQl1bnNpZ25lZCBpOwotCi0JLyoKLQkgKiBDYW4n
dCB1c2Ugc3RhbmRhcmQgbGlzdCB0cmF2ZXJzYWwgc2luY2Ugd2UncmUgdW5sb2NraW5nLgotCSAq
LwotCi0Jc3Bpbl9sb2NrKCZnbG9iLT5scnVfbG9jayk7Ci0JZm9yIChpID0gMDsgaSA8IFRUTV9N
QVhfQk9fUFJJT1JJVFk7ICsraSkgewotCQl3aGlsZSAoIWxpc3RfZW1wdHkoJm1hbi0+bHJ1W2ld
KSkgewotCQkJc3Bpbl91bmxvY2soJmdsb2ItPmxydV9sb2NrKTsKLQkJCXJldCA9IHR0bV9tZW1f
ZXZpY3RfZmlyc3QoYmRldiwgbWFuLCBOVUxMLCAmY3R4LAotCQkJCQkJICBOVUxMKTsKLQkJCWlm
IChyZXQpCi0JCQkJcmV0dXJuIHJldDsKLQkJCXNwaW5fbG9jaygmZ2xvYi0+bHJ1X2xvY2spOwot
CQl9Ci0JfQotCXNwaW5fdW5sb2NrKCZnbG9iLT5scnVfbG9jayk7Ci0KLQlzcGluX2xvY2soJm1h
bi0+bW92ZV9sb2NrKTsKLQlmZW5jZSA9IGRtYV9mZW5jZV9nZXQobWFuLT5tb3ZlKTsKLQlzcGlu
X3VubG9jaygmbWFuLT5tb3ZlX2xvY2spOwotCi0JaWYgKGZlbmNlKSB7Ci0JCXJldCA9IGRtYV9m
ZW5jZV93YWl0KGZlbmNlLCBmYWxzZSk7Ci0JCWRtYV9mZW5jZV9wdXQoZmVuY2UpOwotCQlpZiAo
cmV0KQotCQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLUVYUE9SVF9TWU1CT0wo
dHRtX3Jlc291cmNlX21hbmFnZXJfZm9yY2VfbGlzdF9jbGVhbik7Ci0KLQogaW50IHR0bV9ib19l
dmljdF9tbShzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwgdW5zaWduZWQgbWVtX3R5cGUpCiB7
CiAJc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyICptYW4gPSB0dG1fbWFuYWdlcl90eXBlKGJk
ZXYsIG1lbV90eXBlKTsKQEAgLTE0NjgsMjMgKzEzODMsNiBAQCBpbnQgdHRtX2JvX2V2aWN0X21t
KHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LCB1bnNpZ25lZCBtZW1fdHlwZSkKIH0KIEVYUE9S
VF9TWU1CT0wodHRtX2JvX2V2aWN0X21tKTsKIAotdm9pZCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9p
bml0KHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuLAotCQkJICAgICAgIHVuc2lnbmVk
IGxvbmcgcF9zaXplKQotewotCXVuc2lnbmVkIGk7Ci0KLQltYW4tPnVzZV9pb19yZXNlcnZlX2xy
dSA9IGZhbHNlOwotCW11dGV4X2luaXQoJm1hbi0+aW9fcmVzZXJ2ZV9tdXRleCk7Ci0Jc3Bpbl9s
b2NrX2luaXQoJm1hbi0+bW92ZV9sb2NrKTsKLQlJTklUX0xJU1RfSEVBRCgmbWFuLT5pb19yZXNl
cnZlX2xydSk7Ci0JbWFuLT5zaXplID0gcF9zaXplOwotCi0JZm9yIChpID0gMDsgaSA8IFRUTV9N
QVhfQk9fUFJJT1JJVFk7ICsraSkKLQkJSU5JVF9MSVNUX0hFQUQoJm1hbi0+bHJ1W2ldKTsKLQlt
YW4tPm1vdmUgPSBOVUxMOwotfQotRVhQT1JUX1NZTUJPTCh0dG1fcmVzb3VyY2VfbWFuYWdlcl9p
bml0KTsKLQogc3RhdGljIHZvaWQgdHRtX2JvX2dsb2JhbF9rb2JqX3JlbGVhc2Uoc3RydWN0IGtv
YmplY3QgKmtvYmopCiB7CiAJc3RydWN0IHR0bV9ib19nbG9iYWwgKmdsb2IgPQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fYm9fdXRpbC5jIGIvZHJpdmVycy9ncHUvZHJtL3R0
bS90dG1fYm9fdXRpbC5jCmluZGV4IDQ5NjE1OGFjZDViOS4uMTJiZTJkM2ZjYzgxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9ib191dGlsLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL3R0bS90dG1fYm9fdXRpbC5jCkBAIC00Nyw3ICs0Nyw3IEBAIHN0cnVjdCB0dG1fdHJhbnNm
ZXJfb2JqIHsKIAogdm9pZCB0dG1fYm9fZnJlZV9vbGRfbm9kZShzdHJ1Y3QgdHRtX2J1ZmZlcl9v
YmplY3QgKmJvKQogewotCXR0bV9ib19tZW1fcHV0KGJvLCAmYm8tPm1lbSk7CisJdHRtX3Jlc291
cmNlX2ZyZWUoYm8sICZiby0+bWVtKTsKIH0KIAogaW50IHR0bV9ib19tb3ZlX3R0bShzdHJ1Y3Qg
dHRtX2J1ZmZlcl9vYmplY3QgKmJvLApAQCAtMzk4LDcgKzM5OCw3IEBAIGludCB0dG1fYm9fbW92
ZV9tZW1jcHkoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKIAkgKiBPbiBlcnJvciwga2Vl
cCB0aGUgbW0gbm9kZSEKIAkgKi8KIAlpZiAoIXJldCkKLQkJdHRtX2JvX21lbV9wdXQoYm8sICZv
bGRfY29weSk7CisJCXR0bV9yZXNvdXJjZV9mcmVlKGJvLCAmb2xkX2NvcHkpOwogCXJldHVybiBy
ZXQ7CiB9CiBFWFBPUlRfU1lNQk9MKHR0bV9ib19tb3ZlX21lbWNweSk7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9yZXNvdXJjZS5jIGIvZHJpdmVycy9ncHUvZHJtL3R0bS90
dG1fcmVzb3VyY2UuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjMz
YjY0MjUzMmU1YwotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRtX3Jl
c291cmNlLmMKQEAgLTAsMCArMSwxNTEgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAyMCBBZHZhbmNl
ZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRl
ZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2Yg
dGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNv
ZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9u
LCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29w
eSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFu
ZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0
byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRv
IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5v
dGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICog
YWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgor
ICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0Yg
QU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlU
RUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1Ig
QSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNI
QUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZP
UiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBB
TiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9N
LCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9S
CisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgorICogQXV0aG9yczogQ2hy
aXN0aWFuIEvDtm5pZworICovCisKKyNpbmNsdWRlIDxkcm0vdHRtL3R0bV9yZXNvdXJjZS5oPgor
I2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2RyaXZlci5oPgorCitpbnQgdHRtX3Jlc291cmNlX2Fs
bG9jKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sCisJCSAgICAgICBjb25zdCBzdHJ1Y3Qg
dHRtX3BsYWNlICpwbGFjZSwKKwkJICAgICAgIHN0cnVjdCB0dG1fcmVzb3VyY2UgKnJlcykKK3sK
KwlzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiA9CisJCXR0bV9tYW5hZ2VyX3R5cGUo
Ym8tPmJkZXYsIHJlcy0+bWVtX3R5cGUpOworCisJcmVzLT5tbV9ub2RlID0gTlVMTDsKKwlpZiAo
IW1hbi0+ZnVuYyB8fCAhbWFuLT5mdW5jLT5hbGxvYykKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4g
bWFuLT5mdW5jLT5hbGxvYyhtYW4sIGJvLCBwbGFjZSwgcmVzKTsKK30KKwordm9pZCB0dG1fcmVz
b3VyY2VfZnJlZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLCBzdHJ1Y3QgdHRtX3Jlc291
cmNlICpyZXMpCit7CisJc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyICptYW4gPQorCQl0dG1f
bWFuYWdlcl90eXBlKGJvLT5iZGV2LCByZXMtPm1lbV90eXBlKTsKKworCWlmIChtYW4tPmZ1bmMg
JiYgbWFuLT5mdW5jLT5mcmVlKQorCQltYW4tPmZ1bmMtPmZyZWUobWFuLCByZXMpOworCisJcmVz
LT5tbV9ub2RlID0gTlVMTDsKKwlyZXMtPm1lbV90eXBlID0gVFRNX1BMX1NZU1RFTTsKK30KK0VY
UE9SVF9TWU1CT0wodHRtX3Jlc291cmNlX2ZyZWUpOworCisvKioKKyAqIHR0bV9yZXNvdXJjZV9t
YW5hZ2VyX2luaXQKKyAqCisgKiBAbWFuOiBtZW1vcnkgbWFuYWdlciBvYmplY3QgdG8gaW5pdAor
ICogQHBfc2l6ZTogc2l6ZSBtYW5hZ2VkIGFyZWEgaW4gcGFnZXMuCisgKgorICogSW5pdGlhbGlz
ZSBjb3JlIHBhcnRzIG9mIGEgbWFuYWdlciBvYmplY3QuCisgKi8KK3ZvaWQgdHRtX3Jlc291cmNl
X21hbmFnZXJfaW5pdChzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwKKwkJCSAgICAg
ICB1bnNpZ25lZCBsb25nIHBfc2l6ZSkKK3sKKwl1bnNpZ25lZCBpOworCisJbWFuLT51c2VfaW9f
cmVzZXJ2ZV9scnUgPSBmYWxzZTsKKwltdXRleF9pbml0KCZtYW4tPmlvX3Jlc2VydmVfbXV0ZXgp
OworCXNwaW5fbG9ja19pbml0KCZtYW4tPm1vdmVfbG9jayk7CisJSU5JVF9MSVNUX0hFQUQoJm1h
bi0+aW9fcmVzZXJ2ZV9scnUpOworCW1hbi0+c2l6ZSA9IHBfc2l6ZTsKKworCWZvciAoaSA9IDA7
IGkgPCBUVE1fTUFYX0JPX1BSSU9SSVRZOyArK2kpCisJCUlOSVRfTElTVF9IRUFEKCZtYW4tPmxy
dVtpXSk7CisJbWFuLT5tb3ZlID0gTlVMTDsKK30KK0VYUE9SVF9TWU1CT0wodHRtX3Jlc291cmNl
X21hbmFnZXJfaW5pdCk7CisKKy8qCisgKiB0dG1fcmVzb3VyY2VfbWFuYWdlcl9mb3JjZV9saXN0
X2NsZWFuCisgKgorICogQGJkZXYgLSBkZXZpY2UgdG8gdXNlCisgKiBAbWFuIC0gbWFuYWdlciB0
byB1c2UKKyAqCisgKiBGb3JjZSBhbGwgdGhlIG9iamVjdHMgb3V0IG9mIGEgbWVtb3J5IG1hbmFn
ZXIgdW50aWwgY2xlYW4uCisgKiBQYXJ0IG9mIG1lbW9yeSBtYW5hZ2VyIGNsZWFudXAgc2VxdWVu
Y2UuCisgKi8KK2ludCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9mb3JjZV9saXN0X2NsZWFuKHN0cnVj
dCB0dG1fYm9fZGV2aWNlICpiZGV2LAorCQkJCQkgIHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdl
ciAqbWFuKQoreworCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7CisJCS5pbnRlcnJ1
cHRpYmxlID0gZmFsc2UsCisJCS5ub193YWl0X2dwdSA9IGZhbHNlLAorCQkuZmxhZ3MgPSBUVE1f
T1BUX0ZMQUdfRk9SQ0VfQUxMT0MKKwl9OworCXN0cnVjdCB0dG1fYm9fZ2xvYmFsICpnbG9iID0g
JnR0bV9ib19nbG9iOworCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOworCWludCByZXQ7CisJdW5z
aWduZWQgaTsKKworCS8qCisJICogQ2FuJ3QgdXNlIHN0YW5kYXJkIGxpc3QgdHJhdmVyc2FsIHNp
bmNlIHdlJ3JlIHVubG9ja2luZy4KKwkgKi8KKworCXNwaW5fbG9jaygmZ2xvYi0+bHJ1X2xvY2sp
OworCWZvciAoaSA9IDA7IGkgPCBUVE1fTUFYX0JPX1BSSU9SSVRZOyArK2kpIHsKKwkJd2hpbGUg
KCFsaXN0X2VtcHR5KCZtYW4tPmxydVtpXSkpIHsKKwkJCXNwaW5fdW5sb2NrKCZnbG9iLT5scnVf
bG9jayk7CisJCQlyZXQgPSB0dG1fbWVtX2V2aWN0X2ZpcnN0KGJkZXYsIG1hbiwgTlVMTCwgJmN0
eCwKKwkJCQkJCSAgTlVMTCk7CisJCQlpZiAocmV0KQorCQkJCXJldHVybiByZXQ7CisJCQlzcGlu
X2xvY2soJmdsb2ItPmxydV9sb2NrKTsKKwkJfQorCX0KKwlzcGluX3VubG9jaygmZ2xvYi0+bHJ1
X2xvY2spOworCisJc3Bpbl9sb2NrKCZtYW4tPm1vdmVfbG9jayk7CisJZmVuY2UgPSBkbWFfZmVu
Y2VfZ2V0KG1hbi0+bW92ZSk7CisJc3Bpbl91bmxvY2soJm1hbi0+bW92ZV9sb2NrKTsKKworCWlm
IChmZW5jZSkgeworCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdChmZW5jZSwgZmFsc2UpOworCQlkbWFf
ZmVuY2VfcHV0KGZlbmNlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJcmV0
dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2ZvcmNlX2xpc3Rf
Y2xlYW4pOworCisvKioKKyAqIHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2RlYnVnCisgKgorICogQG1h
bjogbWFuYWdlciB0eXBlIHRvIGR1bXAuCisgKiBAcDogcHJpbnRlciB0byB1c2UgZm9yIGRlYnVn
LgorICovCit2b2lkIHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2RlYnVnKHN0cnVjdCB0dG1fcmVzb3Vy
Y2VfbWFuYWdlciAqbWFuLAorCQkJCXN0cnVjdCBkcm1fcHJpbnRlciAqcCkKK3sKKwlkcm1fcHJp
bnRmKHAsICIgIHVzZV90eXBlOiAlZFxuIiwgbWFuLT51c2VfdHlwZSk7CisJZHJtX3ByaW50Zihw
LCAiICB1c2VfdHQ6ICVkXG4iLCBtYW4tPnVzZV90dCk7CisJZHJtX3ByaW50ZihwLCAiICBzaXpl
OiAlbGx1XG4iLCBtYW4tPnNpemUpOworCWRybV9wcmludGYocCwgIiAgYXZhaWxhYmxlX2NhY2hp
bmc6IDB4JTA4WFxuIiwgbWFuLT5hdmFpbGFibGVfY2FjaGluZyk7CisJZHJtX3ByaW50ZihwLCAi
ICBkZWZhdWx0X2NhY2hpbmc6IDB4JTA4WFxuIiwgbWFuLT5kZWZhdWx0X2NhY2hpbmcpOworCWlm
IChtYW4tPmZ1bmMgJiYgbWFuLT5mdW5jLT5kZWJ1ZykKKwkJKCptYW4tPmZ1bmMtPmRlYnVnKSht
YW4sIHApOworfQorRVhQT1JUX1NZTUJPTCh0dG1fcmVzb3VyY2VfbWFuYWdlcl9kZWJ1Zyk7CmRp
ZmYgLS1naXQgYS9pbmNsdWRlL2RybS90dG0vdHRtX2JvX2FwaS5oIGIvaW5jbHVkZS9kcm0vdHRt
L3R0bV9ib19hcGkuaAppbmRleCA3NzBhZDIxOTU4NzUuLmRiYjI3NmFiY2Y2YSAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9kcm0vdHRtL3R0bV9ib19hcGkuaAorKysgYi9pbmNsdWRlL2RybS90dG0vdHRt
X2JvX2FwaS5oCkBAIC00Miw2ICs0Miw4IEBACiAjaW5jbHVkZSA8bGludXgvYml0bWFwLmg+CiAj
aW5jbHVkZSA8bGludXgvZG1hLXJlc3YuaD4KIAorI2luY2x1ZGUgInR0bV9yZXNvdXJjZS5oIgor
CiBzdHJ1Y3QgdHRtX2JvX2dsb2JhbDsKIAogc3RydWN0IHR0bV9ib19kZXZpY2U7CkBAIC01NCw1
NyArNTYsNiBAQCBzdHJ1Y3QgdHRtX3BsYWNlOwogCiBzdHJ1Y3QgdHRtX2xydV9idWxrX21vdmU7
CiAKLXN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlcjsKLQotLyoqCi0gKiBzdHJ1Y3QgdHRtX2J1
c19wbGFjZW1lbnQKLSAqCi0gKiBAYWRkcjoJCW1hcHBlZCB2aXJ0dWFsIGFkZHJlc3MKLSAqIEBi
YXNlOgkJYnVzIGJhc2UgYWRkcmVzcwotICogQGlzX2lvbWVtOgkJaXMgdGhpcyBpbyBtZW1vcnkg
PwotICogQHNpemU6CQlzaXplIGluIGJ5dGUKLSAqIEBvZmZzZXQ6CQlvZmZzZXQgZnJvbSB0aGUg
YmFzZSBhZGRyZXNzCi0gKiBAaW9fcmVzZXJ2ZWRfdm06ICAgICBUaGUgVk0gc3lzdGVtIGhhcyBh
IHJlZmNvdW50IGluIEBpb19yZXNlcnZlZF9jb3VudAotICogQGlvX3Jlc2VydmVkX2NvdW50OiAg
UmVmY291bnRpbmcgdGhlIG51bWJlcnMgb2YgY2FsbGVycyB0byB0dG1fbWVtX2lvX3Jlc2VydmUK
LSAqCi0gKiBTdHJ1Y3R1cmUgaW5kaWNhdGluZyB0aGUgYnVzIHBsYWNlbWVudCBvZiBhbiBvYmpl
Y3QuCi0gKi8KLXN0cnVjdCB0dG1fYnVzX3BsYWNlbWVudCB7Ci0Jdm9pZAkJKmFkZHI7Ci0JcGh5
c19hZGRyX3QJYmFzZTsKLQl1bnNpZ25lZCBsb25nCXNpemU7Ci0JdW5zaWduZWQgbG9uZwlvZmZz
ZXQ7Ci0JYm9vbAkJaXNfaW9tZW07Ci0JYm9vbAkJaW9fcmVzZXJ2ZWRfdm07Ci0JdWludDY0X3Qg
ICAgICAgIGlvX3Jlc2VydmVkX2NvdW50OwotfTsKLQotCi0vKioKLSAqIHN0cnVjdCB0dG1fcmVz
b3VyY2UKLSAqCi0gKiBAbW1fbm9kZTogTWVtb3J5IG1hbmFnZXIgbm9kZS4KLSAqIEBzaXplOiBS
ZXF1ZXN0ZWQgc2l6ZSBvZiBtZW1vcnkgcmVnaW9uLgotICogQG51bV9wYWdlczogQWN0dWFsIHNp
emUgb2YgbWVtb3J5IHJlZ2lvbiBpbiBwYWdlcy4KLSAqIEBwYWdlX2FsaWdubWVudDogUGFnZSBh
bGlnbm1lbnQuCi0gKiBAcGxhY2VtZW50OiBQbGFjZW1lbnQgZmxhZ3MuCi0gKiBAYnVzOiBQbGFj
ZW1lbnQgb24gaW8gYnVzIGFjY2Vzc2libGUgdG8gdGhlIENQVQotICoKLSAqIFN0cnVjdHVyZSBp
bmRpY2F0aW5nIHRoZSBwbGFjZW1lbnQgYW5kIHNwYWNlIHJlc291cmNlcyB1c2VkIGJ5IGEKLSAq
IGJ1ZmZlciBvYmplY3QuCi0gKi8KLQotc3RydWN0IHR0bV9yZXNvdXJjZSB7Ci0Jdm9pZCAqbW1f
bm9kZTsKLQl1bnNpZ25lZCBsb25nIHN0YXJ0OwotCXVuc2lnbmVkIGxvbmcgc2l6ZTsKLQl1bnNp
Z25lZCBsb25nIG51bV9wYWdlczsKLQl1aW50MzJfdCBwYWdlX2FsaWdubWVudDsKLQl1aW50MzJf
dCBtZW1fdHlwZTsKLQl1aW50MzJfdCBwbGFjZW1lbnQ7Ci0Jc3RydWN0IHR0bV9idXNfcGxhY2Vt
ZW50IGJ1czsKLX07Ci0KIC8qKgogICogZW51bSB0dG1fYm9fdHlwZQogICoKQEAgLTUzMywxNyAr
NDg0LDYgQEAgaW50IHR0bV9ib19jcmVhdGUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsIHVu
c2lnbmVkIGxvbmcgc2l6ZSwKIAkJICB1aW50MzJfdCBwYWdlX2FsaWdubWVudCwgYm9vbCBpbnRl
cnJ1cHRpYmxlLAogCQkgIHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqKnBfYm8pOwogCi0vKioK
LSAqIHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2luaXQKLSAqCi0gKiBAbWFuOiBtZW1vcnkgbWFuYWdl
ciBvYmplY3QgdG8gaW5pdAotICogQHBfc2l6ZTogc2l6ZSBtYW5hZ2VkIGFyZWEgaW4gcGFnZXMu
Ci0gKgotICogSW5pdGlhbGlzZSBjb3JlIHBhcnRzIG9mIGEgbWFuYWdlciBvYmplY3QuCi0gKi8K
LXZvaWQgdHRtX3Jlc291cmNlX21hbmFnZXJfaW5pdChzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFn
ZXIgKm1hbiwKLQkJCSAgICAgICB1bnNpZ25lZCBsb25nIHBfc2l6ZSk7Ci0KIC8qKgogICogdHRt
X2JvX2V2aWN0X21tCiAgKgpAQCAtNjgwLDYgKzYyMCwxMiBAQCBzdGF0aWMgaW5saW5lIGJvb2wg
dHRtX2JvX3VzZXNfZW1iZWRkZWRfZ2VtX29iamVjdChzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3Qg
KmJvKQogCXJldHVybiBiby0+YmFzZS5kZXYgIT0gTlVMTDsKIH0KIAoraW50IHR0bV9tZW1fZXZp
Y3RfZmlyc3Qoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCisJCQlzdHJ1Y3QgdHRtX3Jlc291
cmNlX21hbmFnZXIgKm1hbiwKKwkJCWNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAorCQkJ
c3RydWN0IHR0bV9vcGVyYXRpb25fY3R4ICpjdHgsCisJCQlzdHJ1Y3Qgd3dfYWNxdWlyZV9jdHgg
KnRpY2tldCk7CisKIC8qIERlZmF1bHQgbnVtYmVyIG9mIHByZS1mYXVsdGVkIHBhZ2VzIGluIHRo
ZSBUVE0gZmF1bHQgaGFuZGxlciAqLwogI2RlZmluZSBUVE1fQk9fVk1fTlVNX1BSRUZBVUxUIDE2
CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL3R0bS90dG1fYm9fZHJpdmVyLmggYi9pbmNsdWRl
L2RybS90dG0vdHRtX2JvX2RyaXZlci5oCmluZGV4IGJmZGRhNjFlZGFkYi4uMjdiNGExZTkyODc1
IDEwMDY0NAotLS0gYS9pbmNsdWRlL2RybS90dG0vdHRtX2JvX2RyaXZlci5oCisrKyBiL2luY2x1
ZGUvZHJtL3R0bS90dG1fYm9fZHJpdmVyLmgKQEAgLTQzLDEzMSArNDMsNiBAQAogI2luY2x1ZGUg
InR0bV9wbGFjZW1lbnQuaCIKICNpbmNsdWRlICJ0dG1fdHQuaCIKIAotI2RlZmluZSBUVE1fTUFY
X0JPX1BSSU9SSVRZCTRVCi0KLXN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlcjsKLQotc3RydWN0
IHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2Z1bmMgewotCS8qKgotCSAqIHN0cnVjdCB0dG1fcmVzb3Vy
Y2VfbWFuYWdlcl9mdW5jIG1lbWJlciBhbGxvYwotCSAqCi0JICogQG1hbjogUG9pbnRlciB0byBh
IG1lbW9yeSB0eXBlIG1hbmFnZXIuCi0JICogQGJvOiBQb2ludGVyIHRvIHRoZSBidWZmZXIgb2Jq
ZWN0IHdlJ3JlIGFsbG9jYXRpbmcgc3BhY2UgZm9yLgotCSAqIEBwbGFjZW1lbnQ6IFBsYWNlbWVu
dCBkZXRhaWxzLgotCSAqIEBmbGFnczogQWRkaXRpb25hbCBwbGFjZW1lbnQgZmxhZ3MuCi0JICog
QG1lbTogUG9pbnRlciB0byBhIHN0cnVjdCB0dG1fcmVzb3VyY2UgdG8gYmUgZmlsbGVkIGluLgot
CSAqCi0JICogVGhpcyBmdW5jdGlvbiBzaG91bGQgYWxsb2NhdGUgc3BhY2UgaW4gdGhlIG1lbW9y
eSB0eXBlIG1hbmFnZWQKLQkgKiBieSBAbWFuLiBQbGFjZW1lbnQgZGV0YWlscyBpZgotCSAqIGFw
cGxpY2FibGUgYXJlIGdpdmVuIGJ5IEBwbGFjZW1lbnQuIElmIHN1Y2Nlc3NmdWwsCi0JICogQG1l
bTo6bW1fbm9kZSBzaG91bGQgYmUgc2V0IHRvIGEgbm9uLW51bGwgdmFsdWUsIGFuZAotCSAqIEBt
ZW06OnN0YXJ0IHNob3VsZCBiZSBzZXQgdG8gYSB2YWx1ZSBpZGVudGlmeWluZyB0aGUgYmVnaW5u
aW5nCi0JICogb2YgdGhlIHJhbmdlIGFsbG9jYXRlZCwgYW5kIHRoZSBmdW5jdGlvbiBzaG91bGQg
cmV0dXJuIHplcm8uCi0JICogSWYgdGhlIG1lbW9yeSByZWdpb24gYWNjb21tb2RhdGUgdGhlIGJ1
ZmZlciBvYmplY3QsIEBtZW06Om1tX25vZGUKLQkgKiBzaG91bGQgYmUgc2V0IHRvIE5VTEwsIGFu
ZCB0aGUgZnVuY3Rpb24gc2hvdWxkIHJldHVybiAwLgotCSAqIElmIGEgc3lzdGVtIGVycm9yIG9j
Y3VycmVkLCBwcmV2ZW50aW5nIHRoZSByZXF1ZXN0IHRvIGJlIGZ1bGZpbGxlZCwKLQkgKiB0aGUg
ZnVuY3Rpb24gc2hvdWxkIHJldHVybiBhIG5lZ2F0aXZlIGVycm9yIGNvZGUuCi0JICoKLQkgKiBO
b3RlIHRoYXQgQG1lbTo6bW1fbm9kZSB3aWxsIG9ubHkgYmUgZGVyZWZlcmVuY2VkIGJ5Ci0JICog
c3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyIGZ1bmN0aW9ucyBhbmQgb3B0aW9uYWxseSBieSB0
aGUgZHJpdmVyLAotCSAqIHdoaWNoIGhhcyBrbm93bGVkZ2Ugb2YgdGhlIHVuZGVybHlpbmcgdHlw
ZS4KLQkgKgotCSAqIFRoaXMgZnVuY3Rpb24gbWF5IG5vdCBiZSBjYWxsZWQgZnJvbSB3aXRoaW4g
YXRvbWljIGNvbnRleHQsIHNvCi0JICogYW4gaW1wbGVtZW50YXRpb24gY2FuIGFuZCBtdXN0IHVz
ZSBlaXRoZXIgYSBtdXRleCBvciBhIHNwaW5sb2NrIHRvCi0JICogcHJvdGVjdCBhbnkgZGF0YSBz
dHJ1Y3R1cmVzIG1hbmFnaW5nIHRoZSBzcGFjZS4KLQkgKi8KLQlpbnQgICgqYWxsb2MpKHN0cnVj
dCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuLAotCQkgICAgICBzdHJ1Y3QgdHRtX2J1ZmZlcl9v
YmplY3QgKmJvLAotCQkgICAgICBjb25zdCBzdHJ1Y3QgdHRtX3BsYWNlICpwbGFjZSwKLQkJICAg
ICAgc3RydWN0IHR0bV9yZXNvdXJjZSAqbWVtKTsKLQotCS8qKgotCSAqIHN0cnVjdCB0dG1fcmVz
b3VyY2VfbWFuYWdlcl9mdW5jIG1lbWJlciBmcmVlCi0JICoKLQkgKiBAbWFuOiBQb2ludGVyIHRv
IGEgbWVtb3J5IHR5cGUgbWFuYWdlci4KLQkgKiBAbWVtOiBQb2ludGVyIHRvIGEgc3RydWN0IHR0
bV9yZXNvdXJjZSB0byBiZSBmaWxsZWQgaW4uCi0JICoKLQkgKiBUaGlzIGZ1bmN0aW9uIGZyZWVz
IG1lbW9yeSB0eXBlIHJlc291cmNlcyBwcmV2aW91c2x5IGFsbG9jYXRlZAotCSAqIGFuZCB0aGF0
IGFyZSBpZGVudGlmaWVkIGJ5IEBtZW06Om1tX25vZGUgYW5kIEBtZW06OnN0YXJ0LiBNYXkgbm90
Ci0JICogYmUgY2FsbGVkIGZyb20gd2l0aGluIGF0b21pYyBjb250ZXh0LgotCSAqLwotCXZvaWQg
KCpmcmVlKShzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwKLQkJICAgICBzdHJ1Y3Qg
dHRtX3Jlc291cmNlICptZW0pOwotCi0JLyoqCi0JICogc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5h
Z2VyX2Z1bmMgbWVtYmVyIGRlYnVnCi0JICoKLQkgKiBAbWFuOiBQb2ludGVyIHRvIGEgbWVtb3J5
IHR5cGUgbWFuYWdlci4KLQkgKiBAcHJpbnRlcjogUHJlZml4IHRvIGJlIHVzZWQgaW4gcHJpbnRv
dXQgdG8gaWRlbnRpZnkgdGhlIGNhbGxlci4KLQkgKgotCSAqIFRoaXMgZnVuY3Rpb24gaXMgY2Fs
bGVkIHRvIHByaW50IG91dCB0aGUgc3RhdGUgb2YgdGhlIG1lbW9yeQotCSAqIHR5cGUgbWFuYWdl
ciB0byBhaWQgZGVidWdnaW5nIG9mIG91dC1vZi1tZW1vcnkgY29uZGl0aW9ucy4KLQkgKiBJdCBt
YXkgbm90IGJlIGNhbGxlZCBmcm9tIHdpdGhpbiBhdG9taWMgY29udGV4dC4KLQkgKi8KLQl2b2lk
ICgqZGVidWcpKHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuLAotCQkgICAgICBzdHJ1
Y3QgZHJtX3ByaW50ZXIgKnByaW50ZXIpOwotfTsKLQotLyoqCi0gKiBzdHJ1Y3QgdHRtX3Jlc291
cmNlX21hbmFnZXIKLSAqCi0gKiBAdXNlX3R5cGU6IFRoZSBtZW1vcnkgdHlwZSBpcyBlbmFibGVk
LgotICogQGZsYWdzOiBUVE1fTUVNVFlQRV9YWCBmbGFncyBpZGVudGlmeWluZyB0aGUgdHJhaXRz
IG9mIHRoZSBtZW1vcnkKLSAqIG1hbmFnZWQgYnkgdGhpcyBtZW1vcnkgdHlwZS4KLSAqIEBncHVf
b2Zmc2V0OiBJZiB1c2VkLCB0aGUgR1BVIG9mZnNldCBvZiB0aGUgZmlyc3QgbWFuYWdlZCBwYWdl
IG9mCi0gKiBmaXhlZCBtZW1vcnkgb3IgdGhlIGZpcnN0IG1hbmFnZWQgbG9jYXRpb24gaW4gYW4g
YXBlcnR1cmUuCi0gKiBAc2l6ZTogU2l6ZSBvZiB0aGUgbWFuYWdlZCByZWdpb24uCi0gKiBAYXZh
aWxhYmxlX2NhY2hpbmc6IEEgbWFzayBvZiBhdmFpbGFibGUgY2FjaGluZyB0eXBlcywgVFRNX1BM
X0ZMQUdfWFgsCi0gKiBhcyBkZWZpbmVkIGluIHR0bV9wbGFjZW1lbnRfY29tbW9uLmgKLSAqIEBk
ZWZhdWx0X2NhY2hpbmc6IFRoZSBkZWZhdWx0IGNhY2hpbmcgcG9saWN5IHVzZWQgZm9yIGEgYnVm
ZmVyIG9iamVjdAotICogcGxhY2VkIGluIHRoaXMgbWVtb3J5IHR5cGUgaWYgdGhlIHVzZXIgZG9l
c24ndCBwcm92aWRlIG9uZS4KLSAqIEBmdW5jOiBzdHJ1Y3R1cmUgcG9pbnRlciBpbXBsZW1lbnRp
bmcgdGhlIHJhbmdlIG1hbmFnZXIuIFNlZSBhYm92ZQotICogQGlvX3Jlc2VydmVfbXV0ZXg6IE11
dGV4IG9wdGlvbmFsbHkgcHJvdGVjdGluZyBzaGFyZWQgaW9fcmVzZXJ2ZSBzdHJ1Y3R1cmVzCi0g
KiBAdXNlX2lvX3Jlc2VydmVfbHJ1OiBVc2UgYW4gbHJ1IGxpc3QgdG8gdHJ5IHRvIHVucmVzZXJ2
ZSBpb19tZW1fcmVnaW9ucwotICogcmVzZXJ2ZWQgYnkgdGhlIFRUTSB2bSBzeXN0ZW0uCi0gKiBA
aW9fcmVzZXJ2ZV9scnU6IE9wdGlvbmFsIGxydSBsaXN0IGZvciB1bnJlc2VydmluZyBpbyBtZW0g
cmVnaW9ucy4KLSAqIEBtb3ZlX2xvY2s6IGxvY2sgZm9yIG1vdmUgZmVuY2UKLSAqIHN0YXRpYyBp
bmZvcm1hdGlvbi4gYmRldjo6ZHJpdmVyOjppb19tZW1fZnJlZSBpcyBuZXZlciB1c2VkLgotICog
QGxydTogVGhlIGxydSBsaXN0IGZvciB0aGlzIG1lbW9yeSB0eXBlLgotICogQG1vdmU6IFRoZSBm
ZW5jZSBvZiB0aGUgbGFzdCBwaXBlbGluZWQgbW92ZSBvcGVyYXRpb24uCi0gKgotICogVGhpcyBz
dHJ1Y3R1cmUgaXMgdXNlZCB0byBpZGVudGlmeSBhbmQgbWFuYWdlIG1lbW9yeSB0eXBlcyBmb3Ig
YSBkZXZpY2UuCi0gKi8KLQotCi0KLXN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciB7Ci0JLyoK
LQkgKiBObyBwcm90ZWN0aW9uLiBDb25zdGFudCBmcm9tIHN0YXJ0LgotCSAqLwotCWJvb2wgdXNl
X3R5cGU7Ci0JYm9vbCB1c2VfdHQ7Ci0JdWludDY0X3Qgc2l6ZTsKLQl1aW50MzJfdCBhdmFpbGFi
bGVfY2FjaGluZzsKLQl1aW50MzJfdCBkZWZhdWx0X2NhY2hpbmc7Ci0JY29uc3Qgc3RydWN0IHR0
bV9yZXNvdXJjZV9tYW5hZ2VyX2Z1bmMgKmZ1bmM7Ci0Jc3RydWN0IG11dGV4IGlvX3Jlc2VydmVf
bXV0ZXg7Ci0JYm9vbCB1c2VfaW9fcmVzZXJ2ZV9scnU7Ci0Jc3BpbmxvY2tfdCBtb3ZlX2xvY2s7
Ci0KLQkvKgotCSAqIFByb3RlY3RlZCBieSBAaW9fcmVzZXJ2ZV9tdXRleDoKLQkgKi8KLQotCXN0
cnVjdCBsaXN0X2hlYWQgaW9fcmVzZXJ2ZV9scnU7Ci0KLQkvKgotCSAqIFByb3RlY3RlZCBieSB0
aGUgZ2xvYmFsLT5scnVfbG9jay4KLQkgKi8KLQotCXN0cnVjdCBsaXN0X2hlYWQgbHJ1W1RUTV9N
QVhfQk9fUFJJT1JJVFldOwotCi0JLyoKLQkgKiBQcm90ZWN0ZWQgYnkgQG1vdmVfbG9jay4KLQkg
Ki8KLQlzdHJ1Y3QgZG1hX2ZlbmNlICptb3ZlOwotfTsKLQogLyoqCiAgKiBzdHJ1Y3QgdHRtX2Jv
X2RyaXZlcgogICoKQEAgLTUzNyw4ICs0MTIsNiBAQCBpbnQgdHRtX2JvX21lbV9zcGFjZShzdHJ1
Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAogCQkgICAgIHN0cnVjdCB0dG1fcmVzb3VyY2UgKm1l
bSwKIAkJICAgICBzdHJ1Y3QgdHRtX29wZXJhdGlvbl9jdHggKmN0eCk7CiAKLXZvaWQgdHRtX2Jv
X21lbV9wdXQoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywgc3RydWN0IHR0bV9yZXNvdXJj
ZSAqbWVtKTsKLQogaW50IHR0bV9ib19kZXZpY2VfcmVsZWFzZShzdHJ1Y3QgdHRtX2JvX2Rldmlj
ZSAqYmRldik7CiAKIC8qKgpAQCAtNjc1LDU5ICs1NDgsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQg
dHRtX2JvX3VucmVzZXJ2ZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvKQogCWRtYV9yZXN2
X3VubG9jayhiby0+YmFzZS5yZXN2KTsKIH0KIAotLyoqCi0gKiB0dG1fcmVzb3VyY2VfbWFuYWdl
cl9zZXRfdXNlZAotICoKLSAqIEBtYW46IEEgbWVtb3J5IG1hbmFnZXIgb2JqZWN0LgotICogQHVz
ZWQ6IHVzYWdlIHN0YXRlIHRvIHNldC4KLSAqCi0gKiBTZXQgdGhlIG1hbmFnZXIgaW4gdXNlIGZs
YWcuIElmIGRpc2FibGVkIHRoZSBtYW5hZ2VyIGlzIG5vIGxvbmdlcgotICogdXNlZCBmb3Igb2Jq
ZWN0IHBsYWNlbWVudC4KLSAqLwotc3RhdGljIGlubGluZSB2b2lkIHR0bV9yZXNvdXJjZV9tYW5h
Z2VyX3NldF91c2VkKHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuLCBib29sIHVzZWQp
Ci17Ci0JbWFuLT51c2VfdHlwZSA9IHVzZWQ7Ci19Ci0KLS8qKgotICogdHRtX3Jlc291cmNlX21h
bmFnZXJfdXNlZAotICoKLSAqIEBtYW46IE1hbmFnZXIgdG8gZ2V0IHVzZWQgc3RhdGUgZm9yCi0g
KgotICogR2V0IHRoZSBpbiB1c2UgZmxhZyBmb3IgYSBtYW5hZ2VyLgotICogUmV0dXJuczoKLSAq
IHRydWUgaXMgdXNlZCwgZmFsc2UgaWYgbm90LgotICovCi1zdGF0aWMgaW5saW5lIGJvb2wgdHRt
X3Jlc291cmNlX21hbmFnZXJfdXNlZChzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbikK
LXsKLQlyZXR1cm4gbWFuLT51c2VfdHlwZTsKLX0KLQotLyoqCi0gKiB0dG1fcmVzb3VyY2VfbWFu
YWdlcl9jbGVhbnVwCi0gKgotICogQG1hbjogQSBtZW1vcnkgbWFuYWdlciBvYmplY3QuCi0gKgot
ICogQ2xlYW51cCB0aGUgbW92ZSBmZW5jZXMgZnJvbSB0aGUgbWVtb3J5IG1hbmFnZXIgb2JqZWN0
LgotICovCi1zdGF0aWMgaW5saW5lIHZvaWQgdHRtX3Jlc291cmNlX21hbmFnZXJfY2xlYW51cChz
dHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbikKLXsKLQlkbWFfZmVuY2VfcHV0KG1hbi0+
bW92ZSk7Ci0JbWFuLT5tb3ZlID0gTlVMTDsKLX0KLQotLyoKLSAqIHR0bV9yZXNvdXJjZV9tYW5h
Z2VyX2ZvcmNlX2xpc3RfY2xlYW4KLSAqCi0gKiBAYmRldiAtIGRldmljZSB0byB1c2UKLSAqIEBt
YW4gLSBtYW5hZ2VyIHRvIHVzZQotICoKLSAqIEZvcmNlIGFsbCB0aGUgb2JqZWN0cyBvdXQgb2Yg
YSBtZW1vcnkgbWFuYWdlciB1bnRpbCBjbGVhbi4KLSAqIFBhcnQgb2YgbWVtb3J5IG1hbmFnZXIg
Y2xlYW51cCBzZXF1ZW5jZS4KLSAqLwotaW50IHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2ZvcmNlX2xp
c3RfY2xlYW4oc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsCi0JCQkJCSAgc3RydWN0IHR0bV9y
ZXNvdXJjZV9tYW5hZ2VyICptYW4pOwotCiAvKgogICogdHRtX2JvX3V0aWwuYwogICovCkBAIC04
NzQsMTMgKzY5NCw0IEBAIGludCB0dG1fcmFuZ2VfbWFuX2luaXQoc3RydWN0IHR0bV9ib19kZXZp
Y2UgKmJkZXYsCiBpbnQgdHRtX3JhbmdlX21hbl9maW5pKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpi
ZGV2LAogCQkgICAgICAgdW5zaWduZWQgdHlwZSk7CiAKLS8qKgotICogdHRtX3Jlc291cmNlX21h
bmFnZXJfZGVidWcKLSAqCi0gKiBAbWFuOiBtYW5hZ2VyIHR5cGUgdG8gZHVtcC4KLSAqIEBwOiBw
cmludGVyIHRvIHVzZSBmb3IgZGVidWcuCi0gKi8KLXZvaWQgdHRtX3Jlc291cmNlX21hbmFnZXJf
ZGVidWcoc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyICptYW4sCi0JCQkJc3RydWN0IGRybV9w
cmludGVyICpwKTsKLQogI2VuZGlmCmRpZmYgLS1naXQgYS9pbmNsdWRlL2RybS90dG0vdHRtX3Jl
c291cmNlLmggYi9pbmNsdWRlL2RybS90dG0vdHRtX3Jlc291cmNlLmgKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5iYWMyMmE1NmY2Y2QKLS0tIC9kZXYvbnVsbAorKysg
Yi9pbmNsdWRlL2RybS90dG0vdHRtX3Jlc291cmNlLmgKQEAgLTAsMCArMSwyNjMgQEAKKy8qCisg
KiBDb3B5cmlnaHQgMjAyMCBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVy
bWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24g
b2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1
bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0
d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisg
KiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJp
YnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUs
IGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlz
aGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisg
KiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBz
aGFsbCBiZSBpbmNsdWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9u
cyBvZiB0aGUgU29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJ
UyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQs
IElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRB
QklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJ
TkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBP
UiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVS
IExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RI
RVJXSVNFLAorICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRI
RSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdB
UkUuCisgKgorICogQXV0aG9yczogQ2hyaXN0aWFuIEvDtm5pZworICovCisKKyNpZm5kZWYgX1RU
TV9SRVNPVVJDRV9IXworI2RlZmluZSBfVFRNX1JFU09VUkNFX0hfCisKKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+CisjaW5jbHVkZSA8bGludXgvZG1h
LWZlbmNlLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9wcmludC5oPgorCisjZGVmaW5lIFRUTV9NQVhf
Qk9fUFJJT1JJVFkJNFUKKworc3RydWN0IHR0bV9ib19kZXZpY2U7CitzdHJ1Y3QgdHRtX3Jlc291
cmNlX21hbmFnZXI7CitzdHJ1Y3QgdHRtX3Jlc291cmNlOworc3RydWN0IHR0bV9wbGFjZTsKK3N0
cnVjdCB0dG1fYnVmZmVyX29iamVjdDsKKworc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2Z1
bmMgeworCS8qKgorCSAqIHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9mdW5jIG1lbWJlciBh
bGxvYworCSAqCisJICogQG1hbjogUG9pbnRlciB0byBhIG1lbW9yeSB0eXBlIG1hbmFnZXIuCisJ
ICogQGJvOiBQb2ludGVyIHRvIHRoZSBidWZmZXIgb2JqZWN0IHdlJ3JlIGFsbG9jYXRpbmcgc3Bh
Y2UgZm9yLgorCSAqIEBwbGFjZW1lbnQ6IFBsYWNlbWVudCBkZXRhaWxzLgorCSAqIEBmbGFnczog
QWRkaXRpb25hbCBwbGFjZW1lbnQgZmxhZ3MuCisJICogQG1lbTogUG9pbnRlciB0byBhIHN0cnVj
dCB0dG1fcmVzb3VyY2UgdG8gYmUgZmlsbGVkIGluLgorCSAqCisJICogVGhpcyBmdW5jdGlvbiBz
aG91bGQgYWxsb2NhdGUgc3BhY2UgaW4gdGhlIG1lbW9yeSB0eXBlIG1hbmFnZWQKKwkgKiBieSBA
bWFuLiBQbGFjZW1lbnQgZGV0YWlscyBpZgorCSAqIGFwcGxpY2FibGUgYXJlIGdpdmVuIGJ5IEBw
bGFjZW1lbnQuIElmIHN1Y2Nlc3NmdWwsCisJICogQG1lbTo6bW1fbm9kZSBzaG91bGQgYmUgc2V0
IHRvIGEgbm9uLW51bGwgdmFsdWUsIGFuZAorCSAqIEBtZW06OnN0YXJ0IHNob3VsZCBiZSBzZXQg
dG8gYSB2YWx1ZSBpZGVudGlmeWluZyB0aGUgYmVnaW5uaW5nCisJICogb2YgdGhlIHJhbmdlIGFs
bG9jYXRlZCwgYW5kIHRoZSBmdW5jdGlvbiBzaG91bGQgcmV0dXJuIHplcm8uCisJICogSWYgdGhl
IG1lbW9yeSByZWdpb24gYWNjb21tb2RhdGUgdGhlIGJ1ZmZlciBvYmplY3QsIEBtZW06Om1tX25v
ZGUKKwkgKiBzaG91bGQgYmUgc2V0IHRvIE5VTEwsIGFuZCB0aGUgZnVuY3Rpb24gc2hvdWxkIHJl
dHVybiAwLgorCSAqIElmIGEgc3lzdGVtIGVycm9yIG9jY3VycmVkLCBwcmV2ZW50aW5nIHRoZSBy
ZXF1ZXN0IHRvIGJlIGZ1bGZpbGxlZCwKKwkgKiB0aGUgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBh
IG5lZ2F0aXZlIGVycm9yIGNvZGUuCisJICoKKwkgKiBOb3RlIHRoYXQgQG1lbTo6bW1fbm9kZSB3
aWxsIG9ubHkgYmUgZGVyZWZlcmVuY2VkIGJ5CisJICogc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5h
Z2VyIGZ1bmN0aW9ucyBhbmQgb3B0aW9uYWxseSBieSB0aGUgZHJpdmVyLAorCSAqIHdoaWNoIGhh
cyBrbm93bGVkZ2Ugb2YgdGhlIHVuZGVybHlpbmcgdHlwZS4KKwkgKgorCSAqIFRoaXMgZnVuY3Rp
b24gbWF5IG5vdCBiZSBjYWxsZWQgZnJvbSB3aXRoaW4gYXRvbWljIGNvbnRleHQsIHNvCisJICog
YW4gaW1wbGVtZW50YXRpb24gY2FuIGFuZCBtdXN0IHVzZSBlaXRoZXIgYSBtdXRleCBvciBhIHNw
aW5sb2NrIHRvCisJICogcHJvdGVjdCBhbnkgZGF0YSBzdHJ1Y3R1cmVzIG1hbmFnaW5nIHRoZSBz
cGFjZS4KKwkgKi8KKwlpbnQgICgqYWxsb2MpKHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAq
bWFuLAorCQkgICAgICBzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAorCQkgICAgICBjb25z
dCBzdHJ1Y3QgdHRtX3BsYWNlICpwbGFjZSwKKwkJICAgICAgc3RydWN0IHR0bV9yZXNvdXJjZSAq
bWVtKTsKKworCS8qKgorCSAqIHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9mdW5jIG1lbWJl
ciBmcmVlCisJICoKKwkgKiBAbWFuOiBQb2ludGVyIHRvIGEgbWVtb3J5IHR5cGUgbWFuYWdlci4K
KwkgKiBAbWVtOiBQb2ludGVyIHRvIGEgc3RydWN0IHR0bV9yZXNvdXJjZSB0byBiZSBmaWxsZWQg
aW4uCisJICoKKwkgKiBUaGlzIGZ1bmN0aW9uIGZyZWVzIG1lbW9yeSB0eXBlIHJlc291cmNlcyBw
cmV2aW91c2x5IGFsbG9jYXRlZAorCSAqIGFuZCB0aGF0IGFyZSBpZGVudGlmaWVkIGJ5IEBtZW06
Om1tX25vZGUgYW5kIEBtZW06OnN0YXJ0LiBNYXkgbm90CisJICogYmUgY2FsbGVkIGZyb20gd2l0
aGluIGF0b21pYyBjb250ZXh0LgorCSAqLworCXZvaWQgKCpmcmVlKShzdHJ1Y3QgdHRtX3Jlc291
cmNlX21hbmFnZXIgKm1hbiwKKwkJICAgICBzdHJ1Y3QgdHRtX3Jlc291cmNlICptZW0pOworCisJ
LyoqCisJICogc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2Z1bmMgbWVtYmVyIGRlYnVnCisJ
ICoKKwkgKiBAbWFuOiBQb2ludGVyIHRvIGEgbWVtb3J5IHR5cGUgbWFuYWdlci4KKwkgKiBAcHJp
bnRlcjogUHJlZml4IHRvIGJlIHVzZWQgaW4gcHJpbnRvdXQgdG8gaWRlbnRpZnkgdGhlIGNhbGxl
ci4KKwkgKgorCSAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIHRvIHByaW50IG91dCB0aGUgc3Rh
dGUgb2YgdGhlIG1lbW9yeQorCSAqIHR5cGUgbWFuYWdlciB0byBhaWQgZGVidWdnaW5nIG9mIG91
dC1vZi1tZW1vcnkgY29uZGl0aW9ucy4KKwkgKiBJdCBtYXkgbm90IGJlIGNhbGxlZCBmcm9tIHdp
dGhpbiBhdG9taWMgY29udGV4dC4KKwkgKi8KKwl2b2lkICgqZGVidWcpKHN0cnVjdCB0dG1fcmVz
b3VyY2VfbWFuYWdlciAqbWFuLAorCQkgICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnByaW50ZXIp
OworfTsKKworLyoqCisgKiBzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIKKyAqCisgKiBAdXNl
X3R5cGU6IFRoZSBtZW1vcnkgdHlwZSBpcyBlbmFibGVkLgorICogQGZsYWdzOiBUVE1fTUVNVFlQ
RV9YWCBmbGFncyBpZGVudGlmeWluZyB0aGUgdHJhaXRzIG9mIHRoZSBtZW1vcnkKKyAqIG1hbmFn
ZWQgYnkgdGhpcyBtZW1vcnkgdHlwZS4KKyAqIEBncHVfb2Zmc2V0OiBJZiB1c2VkLCB0aGUgR1BV
IG9mZnNldCBvZiB0aGUgZmlyc3QgbWFuYWdlZCBwYWdlIG9mCisgKiBmaXhlZCBtZW1vcnkgb3Ig
dGhlIGZpcnN0IG1hbmFnZWQgbG9jYXRpb24gaW4gYW4gYXBlcnR1cmUuCisgKiBAc2l6ZTogU2l6
ZSBvZiB0aGUgbWFuYWdlZCByZWdpb24uCisgKiBAYXZhaWxhYmxlX2NhY2hpbmc6IEEgbWFzayBv
ZiBhdmFpbGFibGUgY2FjaGluZyB0eXBlcywgVFRNX1BMX0ZMQUdfWFgsCisgKiBhcyBkZWZpbmVk
IGluIHR0bV9wbGFjZW1lbnRfY29tbW9uLmgKKyAqIEBkZWZhdWx0X2NhY2hpbmc6IFRoZSBkZWZh
dWx0IGNhY2hpbmcgcG9saWN5IHVzZWQgZm9yIGEgYnVmZmVyIG9iamVjdAorICogcGxhY2VkIGlu
IHRoaXMgbWVtb3J5IHR5cGUgaWYgdGhlIHVzZXIgZG9lc24ndCBwcm92aWRlIG9uZS4KKyAqIEBm
dW5jOiBzdHJ1Y3R1cmUgcG9pbnRlciBpbXBsZW1lbnRpbmcgdGhlIHJhbmdlIG1hbmFnZXIuIFNl
ZSBhYm92ZQorICogQGlvX3Jlc2VydmVfbXV0ZXg6IE11dGV4IG9wdGlvbmFsbHkgcHJvdGVjdGlu
ZyBzaGFyZWQgaW9fcmVzZXJ2ZSBzdHJ1Y3R1cmVzCisgKiBAdXNlX2lvX3Jlc2VydmVfbHJ1OiBV
c2UgYW4gbHJ1IGxpc3QgdG8gdHJ5IHRvIHVucmVzZXJ2ZSBpb19tZW1fcmVnaW9ucworICogcmVz
ZXJ2ZWQgYnkgdGhlIFRUTSB2bSBzeXN0ZW0uCisgKiBAaW9fcmVzZXJ2ZV9scnU6IE9wdGlvbmFs
IGxydSBsaXN0IGZvciB1bnJlc2VydmluZyBpbyBtZW0gcmVnaW9ucy4KKyAqIEBtb3ZlX2xvY2s6
IGxvY2sgZm9yIG1vdmUgZmVuY2UKKyAqIHN0YXRpYyBpbmZvcm1hdGlvbi4gYmRldjo6ZHJpdmVy
Ojppb19tZW1fZnJlZSBpcyBuZXZlciB1c2VkLgorICogQGxydTogVGhlIGxydSBsaXN0IGZvciB0
aGlzIG1lbW9yeSB0eXBlLgorICogQG1vdmU6IFRoZSBmZW5jZSBvZiB0aGUgbGFzdCBwaXBlbGlu
ZWQgbW92ZSBvcGVyYXRpb24uCisgKgorICogVGhpcyBzdHJ1Y3R1cmUgaXMgdXNlZCB0byBpZGVu
dGlmeSBhbmQgbWFuYWdlIG1lbW9yeSB0eXBlcyBmb3IgYSBkZXZpY2UuCisgKi8KK3N0cnVjdCB0
dG1fcmVzb3VyY2VfbWFuYWdlciB7CisJLyoKKwkgKiBObyBwcm90ZWN0aW9uLiBDb25zdGFudCBm
cm9tIHN0YXJ0LgorCSAqLworCWJvb2wgdXNlX3R5cGU7CisJYm9vbCB1c2VfdHQ7CisJdWludDY0
X3Qgc2l6ZTsKKwl1aW50MzJfdCBhdmFpbGFibGVfY2FjaGluZzsKKwl1aW50MzJfdCBkZWZhdWx0
X2NhY2hpbmc7CisJY29uc3Qgc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5hZ2VyX2Z1bmMgKmZ1bmM7
CisJc3RydWN0IG11dGV4IGlvX3Jlc2VydmVfbXV0ZXg7CisJYm9vbCB1c2VfaW9fcmVzZXJ2ZV9s
cnU7CisJc3BpbmxvY2tfdCBtb3ZlX2xvY2s7CisKKwkvKgorCSAqIFByb3RlY3RlZCBieSBAaW9f
cmVzZXJ2ZV9tdXRleDoKKwkgKi8KKworCXN0cnVjdCBsaXN0X2hlYWQgaW9fcmVzZXJ2ZV9scnU7
CisKKwkvKgorCSAqIFByb3RlY3RlZCBieSB0aGUgZ2xvYmFsLT5scnVfbG9jay4KKwkgKi8KKwor
CXN0cnVjdCBsaXN0X2hlYWQgbHJ1W1RUTV9NQVhfQk9fUFJJT1JJVFldOworCisJLyoKKwkgKiBQ
cm90ZWN0ZWQgYnkgQG1vdmVfbG9jay4KKwkgKi8KKwlzdHJ1Y3QgZG1hX2ZlbmNlICptb3ZlOwor
fTsKKworLyoqCisgKiBzdHJ1Y3QgdHRtX2J1c19wbGFjZW1lbnQKKyAqCisgKiBAYWRkcjoJCW1h
cHBlZCB2aXJ0dWFsIGFkZHJlc3MKKyAqIEBiYXNlOgkJYnVzIGJhc2UgYWRkcmVzcworICogQGlz
X2lvbWVtOgkJaXMgdGhpcyBpbyBtZW1vcnkgPworICogQHNpemU6CQlzaXplIGluIGJ5dGUKKyAq
IEBvZmZzZXQ6CQlvZmZzZXQgZnJvbSB0aGUgYmFzZSBhZGRyZXNzCisgKiBAaW9fcmVzZXJ2ZWRf
dm06ICAgICBUaGUgVk0gc3lzdGVtIGhhcyBhIHJlZmNvdW50IGluIEBpb19yZXNlcnZlZF9jb3Vu
dAorICogQGlvX3Jlc2VydmVkX2NvdW50OiAgUmVmY291bnRpbmcgdGhlIG51bWJlcnMgb2YgY2Fs
bGVycyB0byB0dG1fbWVtX2lvX3Jlc2VydmUKKyAqCisgKiBTdHJ1Y3R1cmUgaW5kaWNhdGluZyB0
aGUgYnVzIHBsYWNlbWVudCBvZiBhbiBvYmplY3QuCisgKi8KK3N0cnVjdCB0dG1fYnVzX3BsYWNl
bWVudCB7CisJdm9pZAkJKmFkZHI7CisJcGh5c19hZGRyX3QJYmFzZTsKKwl1bnNpZ25lZCBsb25n
CXNpemU7CisJdW5zaWduZWQgbG9uZwlvZmZzZXQ7CisJYm9vbAkJaXNfaW9tZW07CisJYm9vbAkJ
aW9fcmVzZXJ2ZWRfdm07CisJdWludDY0X3QgICAgICAgIGlvX3Jlc2VydmVkX2NvdW50OworfTsK
KworLyoqCisgKiBzdHJ1Y3QgdHRtX3Jlc291cmNlCisgKgorICogQG1tX25vZGU6IE1lbW9yeSBt
YW5hZ2VyIG5vZGUuCisgKiBAc2l6ZTogUmVxdWVzdGVkIHNpemUgb2YgbWVtb3J5IHJlZ2lvbi4K
KyAqIEBudW1fcGFnZXM6IEFjdHVhbCBzaXplIG9mIG1lbW9yeSByZWdpb24gaW4gcGFnZXMuCisg
KiBAcGFnZV9hbGlnbm1lbnQ6IFBhZ2UgYWxpZ25tZW50LgorICogQHBsYWNlbWVudDogUGxhY2Vt
ZW50IGZsYWdzLgorICogQGJ1czogUGxhY2VtZW50IG9uIGlvIGJ1cyBhY2Nlc3NpYmxlIHRvIHRo
ZSBDUFUKKyAqCisgKiBTdHJ1Y3R1cmUgaW5kaWNhdGluZyB0aGUgcGxhY2VtZW50IGFuZCBzcGFj
ZSByZXNvdXJjZXMgdXNlZCBieSBhCisgKiBidWZmZXIgb2JqZWN0LgorICovCitzdHJ1Y3QgdHRt
X3Jlc291cmNlIHsKKwl2b2lkICptbV9ub2RlOworCXVuc2lnbmVkIGxvbmcgc3RhcnQ7CisJdW5z
aWduZWQgbG9uZyBzaXplOworCXVuc2lnbmVkIGxvbmcgbnVtX3BhZ2VzOworCXVpbnQzMl90IHBh
Z2VfYWxpZ25tZW50OworCXVpbnQzMl90IG1lbV90eXBlOworCXVpbnQzMl90IHBsYWNlbWVudDsK
KwlzdHJ1Y3QgdHRtX2J1c19wbGFjZW1lbnQgYnVzOworfTsKKworLyoqCisgKiB0dG1fcmVzb3Vy
Y2VfbWFuYWdlcl9zZXRfdXNlZAorICoKKyAqIEBtYW46IEEgbWVtb3J5IG1hbmFnZXIgb2JqZWN0
LgorICogQHVzZWQ6IHVzYWdlIHN0YXRlIHRvIHNldC4KKyAqCisgKiBTZXQgdGhlIG1hbmFnZXIg
aW4gdXNlIGZsYWcuIElmIGRpc2FibGVkIHRoZSBtYW5hZ2VyIGlzIG5vIGxvbmdlcgorICogdXNl
ZCBmb3Igb2JqZWN0IHBsYWNlbWVudC4KKyAqLworc3RhdGljIGlubGluZSB2b2lkCit0dG1fcmVz
b3VyY2VfbWFuYWdlcl9zZXRfdXNlZChzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwg
Ym9vbCB1c2VkKQoreworCW1hbi0+dXNlX3R5cGUgPSB1c2VkOworfQorCisvKioKKyAqIHR0bV9y
ZXNvdXJjZV9tYW5hZ2VyX3VzZWQKKyAqCisgKiBAbWFuOiBNYW5hZ2VyIHRvIGdldCB1c2VkIHN0
YXRlIGZvcgorICoKKyAqIEdldCB0aGUgaW4gdXNlIGZsYWcgZm9yIGEgbWFuYWdlci4KKyAqIFJl
dHVybnM6CisgKiB0cnVlIGlzIHVzZWQsIGZhbHNlIGlmIG5vdC4KKyAqLworc3RhdGljIGlubGlu
ZSBib29sIHR0bV9yZXNvdXJjZV9tYW5hZ2VyX3VzZWQoc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5h
Z2VyICptYW4pCit7CisJcmV0dXJuIG1hbi0+dXNlX3R5cGU7Cit9CisKKy8qKgorICogdHRtX3Jl
c291cmNlX21hbmFnZXJfY2xlYW51cAorICoKKyAqIEBtYW46IEEgbWVtb3J5IG1hbmFnZXIgb2Jq
ZWN0LgorICoKKyAqIENsZWFudXAgdGhlIG1vdmUgZmVuY2VzIGZyb20gdGhlIG1lbW9yeSBtYW5h
Z2VyIG9iamVjdC4KKyAqLworc3RhdGljIGlubGluZSB2b2lkCit0dG1fcmVzb3VyY2VfbWFuYWdl
cl9jbGVhbnVwKHN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuKQoreworCWRtYV9mZW5j
ZV9wdXQobWFuLT5tb3ZlKTsKKwltYW4tPm1vdmUgPSBOVUxMOworfQorCitpbnQgdHRtX3Jlc291
cmNlX2FsbG9jKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8sCisJCSAgICAgICBjb25zdCBz
dHJ1Y3QgdHRtX3BsYWNlICpwbGFjZSwKKwkJICAgICAgIHN0cnVjdCB0dG1fcmVzb3VyY2UgKnJl
cyk7Cit2b2lkIHR0bV9yZXNvdXJjZV9mcmVlKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8s
IHN0cnVjdCB0dG1fcmVzb3VyY2UgKnJlcyk7CisKK3ZvaWQgdHRtX3Jlc291cmNlX21hbmFnZXJf
aW5pdChzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwKKwkJCSAgICAgICB1bnNpZ25l
ZCBsb25nIHBfc2l6ZSk7CisKK2ludCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9mb3JjZV9saXN0X2Ns
ZWFuKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAorCQkJCQkgIHN0cnVjdCB0dG1fcmVzb3Vy
Y2VfbWFuYWdlciAqbWFuKTsKKwordm9pZCB0dG1fcmVzb3VyY2VfbWFuYWdlcl9kZWJ1ZyhzdHJ1
Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiwKKwkJCQlzdHJ1Y3QgZHJtX3ByaW50ZXIgKnAp
OworCisjZW5kaWYKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vZHJpLWRldmVsCg==
