Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 67D595F0A2
	for <lists+dri-devel@lfdr.de>; Thu,  4 Jul 2019 02:38:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 43C196E23F;
	Thu,  4 Jul 2019 00:38:52 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pf1-x44a.google.com (mail-pf1-x44a.google.com
 [IPv6:2607:f8b0:4864:20::44a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3125C6E23F
 for <dri-devel@lists.freedesktop.org>; Thu,  4 Jul 2019 00:38:50 +0000 (UTC)
Received: by mail-pf1-x44a.google.com with SMTP id r142so2522608pfc.2
 for <dri-devel@lists.freedesktop.org>; Wed, 03 Jul 2019 17:38:50 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=E05K7k1092DcXK3NDaS9NuiIByWtZbgJvro2pMf/3Eg=;
 b=XuS4LzK1IWO5SsTw8lBRWoi3nXOpnbpt17g7mdAcTrlbv8sBWPEHKIXl1YUlDVJS6B
 Cwvriryt/r/3MEUpbB5U29CWuN0MAbWzrAUAdWSWnrd4iDEJE/STxR29id2Ctx4dka4t
 ZxnkV++4L/APIqR2jQpcwlfTO/ZQnEkRXI6BzLFNdHNOt+EQ3pDqYxxPCn/y0x1Mi70U
 jCHrNnxtULFIHKsJ6GK6FRhfYPj8Ot5PXKqznTmc9Nc3AVh7dCxso498Wocq+3TB432k
 ZM0D8l2eppWCXkNH97mjUKlG7KeePiHtTOs4dN8ln+JA/olnJJhp9G9x2P960KxNM/ed
 auRA==
X-Gm-Message-State: APjAAAU7fkcotWE68i8VMBtsM0DKZMqM0CpXKcEZQoNc216EO6EIG5Yw
 1yQJaydcm7s7r+EWCbca56O8XlB9WVaJXYWi7RetEw==
X-Google-Smtp-Source: APXvYqxLA6ASQ50Gi4QsXzou75fPawNSokYFf8PIwc5j+p9Z3J3SOPsdqQJtHQIywr99DH8wCMWb4o9RWzR4eKqEd/BXsA==
X-Received: by 2002:a65:4cc4:: with SMTP id n4mr41466374pgt.307.1562200728996; 
 Wed, 03 Jul 2019 17:38:48 -0700 (PDT)
Date: Wed,  3 Jul 2019 17:36:14 -0700
In-Reply-To: <20190704003615.204860-1-brendanhiggins@google.com>
Message-Id: <20190704003615.204860-18-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190704003615.204860-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v6 17/18] kernel/sysctl-test: Add null pointer test for
 sysctl.c:proc_dointvec()
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=E05K7k1092DcXK3NDaS9NuiIByWtZbgJvro2pMf/3Eg=;
 b=MHsrJDaAUf45qrTM1++ucxNDRKMYfU6moDxSEEKZP7Z93l8EZVhorZHDKSfii5/0sc
 UU2Fu9cWpUgtiyDVJKh84ECrysG0zq4wbTEnKCaN0x57JR4bIAwqRC8C/Yl1QrJO4fLf
 1fXk3JnUuvuOPFF4Gd3kSLRjZufmQb9eSNNHnDqBU4UvRj01uwdSrHuUkV4Gkb2abZ45
 cIrZKRx86vOJcCdxIClTwpV7nnt93fIUIrIwECm/PhrgRzgu9N+Z7koJanguSriVPYq8
 KPHxiVLRnUjq1E4ZszmeAAluufEfSEZLYFJAgMnGksf7O19oWt1hJTKXMIHP9h3vHegx
 DINg==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com,
 Iurii Zaikin <yzaikin@google.com>, jdike@addtoit.com, dan.carpenter@oracle.com,
 devicetree@vger.kernel.org, linux-kbuild@vger.kernel.org, Tim.Bird@sony.com,
 linux-um@lists.infradead.org, rostedt@goodmis.org, julia.lawall@lip6.fr,
 kunit-dev@googlegroups.com, richard@nod.at, rdunlap@infradead.org,
 linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSXVyaWkgWmFpa2luIDx5emFpa2luQGdvb2dsZS5jb20+CgpLVW5pdCB0ZXN0cyBmb3Ig
aW5pdGlhbGl6ZWQgZGF0YSBiZWhhdmlvciBvZiBwcm9jX2RvaW50dmVjIHRoYXQgaXMKZXhwbGlj
aXRseSBjaGVja2VkIGluIHRoZSBjb2RlLiBJbmNsdWRlcyBiYXNpYyBwYXJzaW5nIHRlc3RzIGlu
Y2x1ZGluZwppbnQgbWluL21heCBvdmVyZmxvdy4KClNpZ25lZC1vZmYtYnk6IEl1cmlpIFphaWtp
biA8eXphaWtpbkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBCcmVuZGFuIEhpZ2dpbnMgPGJy
ZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBHcmVnIEtyb2FoLUhhcnRtYW4g
PGdyZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpSZXZpZXdlZC1ieTogTG9nYW4gR3VudGhvcnBl
IDxsb2dhbmdAZGVsdGF0ZWUuY29tPgotLS0KQ2hhbmdlcyBTaW5jZSBMYXN0IFJldmlzaW9uOgot
IEFkZGVkIGRlc2NyaXB0aW9ucyB0byB1bml0IHRlc3RzLiAtIFN1Z2dlc3RlZCBieSBMdWlzCi0g
TGFiZWxlZCB1bml0IHRlc3RzIHdoaWNoIHRlc3RlZCB0aGUgQVBJLiAtIFN1Z2dlc3RlZCBieSBM
dWlzCi0gRGlkIHNvbWUgb3RoZXIgY2xlYW51cC4KLS0tCiBrZXJuZWwvTWFrZWZpbGUgICAgICB8
ICAgMiArCiBrZXJuZWwvc3lzY3RsLXRlc3QuYyB8IDM3NSArKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrCiBsaWIvS2NvbmZpZy5kZWJ1ZyAgICB8ICAxMSArKwogMyBm
aWxlcyBjaGFuZ2VkLCAzODggaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGtlcm5l
bC9zeXNjdGwtdGVzdC5jCgpkaWZmIC0tZ2l0IGEva2VybmVsL01ha2VmaWxlIGIva2VybmVsL01h
a2VmaWxlCmluZGV4IGE4ZDkyM2I1NDgxYmEuLjUwZmQ1MTFjZDBlZTAgMTAwNjQ0Ci0tLSBhL2tl
cm5lbC9NYWtlZmlsZQorKysgYi9rZXJuZWwvTWFrZWZpbGUKQEAgLTExNCw2ICsxMTQsOCBAQCBv
YmotJChDT05GSUdfSEFTX0lPTUVNKSArPSBpb21lbS5vCiBvYmotJChDT05GSUdfWk9ORV9ERVZJ
Q0UpICs9IG1lbXJlbWFwLm8KIG9iai0kKENPTkZJR19SU0VRKSArPSByc2VxLm8KIAorb2JqLSQo
Q09ORklHX1NZU0NUTF9LVU5JVF9URVNUKSArPSBzeXNjdGwtdGVzdC5vCisKIG9iai0kKENPTkZJ
R19HQ0NfUExVR0lOX1NUQUNLTEVBSykgKz0gc3RhY2tsZWFrLm8KIEtBU0FOX1NBTklUSVpFX3N0
YWNrbGVhay5vIDo9IG4KIEtDT1ZfSU5TVFJVTUVOVF9zdGFja2xlYWsubyA6PSBuCmRpZmYgLS1n
aXQgYS9rZXJuZWwvc3lzY3RsLXRlc3QuYyBiL2tlcm5lbC9zeXNjdGwtdGVzdC5jCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLmZjMjdiMmMxMTg1Y2EKLS0tIC9kZXYv
bnVsbAorKysgYi9rZXJuZWwvc3lzY3RsLXRlc3QuYwpAQCAtMCwwICsxLDM3NSBAQAorLy8gU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBLVW5pdCB0ZXN0IG9mIHByb2Mg
c3lzY3RsLgorICovCisKKyNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+CisjaW5jbHVkZSA8bGludXgv
c3lzY3RsLmg+CisKKyNkZWZpbmUgS1VOSVRfUFJPQ19SRUFEIDAKKyNkZWZpbmUgS1VOSVRfUFJP
Q19XUklURSAxCisKK3N0YXRpYyBpbnQgaV96ZXJvOworc3RhdGljIGludCBpX29uZV9odW5kcmVk
ID0gMTAwOworCisvKgorICogVGVzdCB0aGF0IHByb2NfZG9pbnR2ZWMgd2lsbCBub3QgdHJ5IHRv
IHVzZSBhIE5VTEwgLmRhdGEgZmllbGQgZXZlbiB3aGVuIHRoZQorICogbGVuZ3RoIGlzIG5vbi16
ZXJvLgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfbnVsbF90Ymxf
ZGF0YShzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJc3RydWN0IGN0bF90YWJsZSBudWxsX2RhdGFf
dGFibGUgPSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkvKgorCQkgKiBIZXJlIHdlIGFyZSB0
ZXN0aW5nIHRoYXQgcHJvY19kb2ludHZlYyBiZWhhdmVzIGNvcnJlY3RseSB3aGVuCisJCSAqIHdl
IGdpdmUgaXQgYSBOVUxMIC5kYXRhIGZpZWxkLiBOb3JtYWxseSB0aGlzIHdvdWxkIHBvaW50IHRv
IGEKKwkJICogcGllY2Ugb2YgbWVtb3J5IHdoZXJlIHRoZSB2YWx1ZSB3b3VsZCBiZSBzdG9yZWQu
CisJCSAqLworCQkuZGF0YQkJPSBOVUxMLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQku
bW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJh
MQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9Owor
CXZvaWQgKmJ1ZmZlciA9IGt1bml0X2t6YWxsb2ModGVzdCwgc2l6ZW9mKGludCksIEdGUF9VU0VS
KTsKKwlzaXplX3QgbGVuOworCWxvZmZfdCBwb3M7CisKKwkvKgorCSAqIFdlIGRvbid0IGNhcmUg
d2hhdCB0aGUgc3RhcnRpbmcgbGVuZ3RoIGlzIHNpbmNlIHByb2NfZG9pbnR2ZWMgc2hvdWxkCisJ
ICogbm90IHRyeSB0byByZWFkIGJlY2F1c2UgLmRhdGEgaXMgTlVMTC4KKwkgKi8KKwlsZW4gPSAx
MjM0OworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZudWxsX2RhdGFf
dGFibGUsCisJCQkJCSAgICAgICBLVU5JVF9QUk9DX1JFQUQsIGJ1ZmZlciwgJmxlbiwKKwkJCQkJ
ICAgICAgICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgKHNpemVfdCkwLCBsZW4pOwor
CisJLyoKKwkgKiBTZWUgYWJvdmUuCisJICovCisJbGVuID0gMTIzNDsKKwlLVU5JVF9FWFBFQ1Rf
RVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmbnVsbF9kYXRhX3RhYmxlLAorCQkJCQkgICAgICAg
S1VOSVRfUFJPQ19XUklURSwgYnVmZmVyLCAmbGVuLAorCQkJCQkgICAgICAgJnBvcykpOworCUtV
TklUX0VYUEVDVF9FUSh0ZXN0LCAoc2l6ZV90KTAsIGxlbik7Cit9CisKKy8qCisgKiBTaW1pbGFy
IHRvIHRoZSBwcmV2aW91cyB0ZXN0LCB3ZSBjcmVhdGUgYSBzdHJ1Y3QgY3RybF90YWJsZSB0aGF0
IGhhcyBhIC5kYXRhCisgKiBmaWVsZCB0aGF0IHByb2NfZG9pbnR2ZWMgY2Fubm90IGRvIGFueXRo
aW5nIHdpdGg7IGhvd2V2ZXIsIHRoaXMgdGltZSBpdCBpcworICogYmVjYXVzZSB3ZSB0ZWxsIHBy
b2NfZG9pbnR2ZWMgdGhhdCB0aGUgc2l6ZSBpcyAwLgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxf
dGVzdF9hcGlfZG9pbnR2ZWNfdGFibGVfbWF4bGVuX3Vuc2V0KHN0cnVjdCBrdW5pdCAqdGVzdCkK
K3sKKwlpbnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSBkYXRhX21heGxlbl91bnNldF90
YWJsZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkvKgor
CQkgKiBTbyAuZGF0YSBpcyBubyBsb25nZXIgTlVMTCwgYnV0IHdlIHRlbGwgcHJvY19kb2ludHZl
YyBpdHMKKwkJICogbGVuZ3RoIGlzIDAsIHNvIGl0IHN0aWxsIHNob3VsZG4ndCB0cnkgdG8gdXNl
IGl0LgorCQkgKi8KKwkJLm1heGxlbgkJPSAwLAorCQkubW9kZQkJPSAwNjQ0LAorCQkucHJvY19o
YW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAorCQkuZXh0cmEy
ICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9OworCXZvaWQgKmJ1ZmZlciA9IGt1bml0X2t6
YWxsb2ModGVzdCwgc2l6ZW9mKGludCksIEdGUF9VU0VSKTsKKwlzaXplX3QgbGVuOworCWxvZmZf
dCBwb3M7CisKKwkvKgorCSAqIEFzIGJlZm9yZSwgd2UgZG9uJ3QgY2FyZSB3aGF0IGJ1ZmZlciBs
ZW5ndGggaXMgYmVjYXVzZSBwcm9jX2RvaW50dmVjCisJICogY2Fubm90IGRvIGFueXRoaW5nIGJl
Y2F1c2UgaXRzIGludGVybmFsIC5kYXRhIGJ1ZmZlciBoYXMgemVybyBsZW5ndGguCisJICovCisJ
bGVuID0gMTIzNDsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmZGF0
YV9tYXhsZW5fdW5zZXRfdGFibGUsCisJCQkJCSAgICAgICBLVU5JVF9QUk9DX1JFQUQsIGJ1ZmZl
ciwgJmxlbiwKKwkJCQkJICAgICAgICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgKHNp
emVfdCkwLCBsZW4pOworCisJLyoKKwkgKiBTZWUgcHJldmlvdXMgY29tbWVudC4KKwkgKi8KKwls
ZW4gPSAxMjM0OworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZkYXRh
X21heGxlbl91bnNldF90YWJsZSwKKwkJCQkJICAgICAgIEtVTklUX1BST0NfV1JJVEUsIGJ1ZmZl
ciwgJmxlbiwKKwkJCQkJICAgICAgICZwb3MpKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgKHNp
emVfdCkwLCBsZW4pOworfQorCisvKgorICogSGVyZSB3ZSBwcm92aWRlIGEgdmFsaWQgc3RydWN0
IGN0bF90YWJsZSwgYnV0IHdlIHRyeSB0byByZWFkIGFuZCB3cml0ZSBmcm9tCisgKiBpdCB1c2lu
ZyBhIGJ1ZmZlciBvZiB6ZXJvIGxlbmd0aCwgc28gaXQgc2hvdWxkIHN0aWxsIGZhaWwgaW4gYSBz
aW1pbGFyIHdheSBhcworICogYmVmb3JlLgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9h
cGlfZG9pbnR2ZWNfdGFibGVfbGVuX2lzX3plcm8oc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWlu
dCBkYXRhID0gMDsKKwkvKiBHb29kIHRhYmxlLiAqLworCXN0cnVjdCBjdGxfdGFibGUgdGFibGUg
PSB7CisJCS5wcm9jbmFtZSA9ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1heGxlbgkJ
PSBzaXplb2YoaW50KSwKKwkJLm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2Nf
ZG9pbnR2ZWMsCisJCS5leHRyYTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlf
b25lX2h1bmRyZWQsCisJfTsKKwl2b2lkICpidWZmZXIgPSBrdW5pdF9remFsbG9jKHRlc3QsIHNp
emVvZihpbnQpLCBHRlBfVVNFUik7CisJLyoKKwkgKiBIb3dldmVyLCBub3cgb3VyIHJlYWQvd3Jp
dGUgYnVmZmVyIGhhcyB6ZXJvIGxlbmd0aC4KKwkgKi8KKwlzaXplX3QgbGVuID0gMDsKKwlsb2Zm
X3QgcG9zOworCisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIDAsIHByb2NfZG9pbnR2ZWMoJnRhYmxl
LCBLVU5JVF9QUk9DX1JFQUQsIGJ1ZmZlciwKKwkJCQkJICAgICAgICZsZW4sICZwb3MpKTsKKwlL
VU5JVF9FWFBFQ1RfRVEodGVzdCwgKHNpemVfdCkwLCBsZW4pOworCisJS1VOSVRfRVhQRUNUX0VR
KHRlc3QsIDAsIHByb2NfZG9pbnR2ZWMoJnRhYmxlLCBLVU5JVF9QUk9DX1dSSVRFLCBidWZmZXIs
CisJCQkJCSAgICAgICAmbGVuLCAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIChzaXpl
X3QpMCwgbGVuKTsKK30KKworLyoKKyAqIFRlc3QgdGhhdCBwcm9jX2RvaW50dmVjIHJlZnVzZXMg
dG8gcmVhZCB3aGVuIHRoZSBmaWxlIHBvc2l0aW9uIGlzIG5vbi16ZXJvLgorICovCitzdGF0aWMg
dm9pZCBzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfdGFibGVfcmVhZF9idXRfcG9zaXRpb25fc2V0
KAorCQlzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAwOworCS8qIEdvb2QgdGFi
bGUuICovCisJc3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIs
CisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJ
PSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAm
aV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9OworCXZvaWQg
KmJ1ZmZlciA9IGt1bml0X2t6YWxsb2ModGVzdCwgc2l6ZW9mKGludCksIEdGUF9VU0VSKTsKKwkv
KgorCSAqIFdlIGRvbid0IGNhcmUgYWJvdXQgb3VyIGJ1ZmZlciBsZW5ndGggYmVjYXVzZSB3ZSBz
dGFydCBvZmYgd2l0aCBhCisJICogbm9uLXplcm8gZmlsZSBwb3NpdGlvbi4KKwkgKi8KKwlzaXpl
X3QgbGVuID0gMTIzNDsKKwkvKgorCSAqIHByb2NfZG9pbnR2ZWMgc2hvdWxkIHJlZnVzZSB0byBy
ZWFkIGludG8gdGhlIGJ1ZmZlciBzaW5jZSB0aGUgZmlsZQorCSAqIHBvcyBpcyBub24temVyby4K
KwkgKi8KKwlsb2ZmX3QgcG9zID0gMTsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9j
X2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19SRUFELCBidWZmZXIsCisJCQkJCSAgICAgICAm
bGVuLCAmcG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIChzaXplX3QpMCwgbGVuKTsKK30K
KworLyoKKyAqIFRlc3QgdGhhdCB3ZSBjYW4gcmVhZCBhIHR3byBkaWdpdCBudW1iZXIgaW4gYSBz
dWZmaWNpZW50bHkgc2l6ZSBidWZmZXIuCisgKiBOb3RoaW5nIGZhbmN5LgorICovCitzdGF0aWMg
dm9pZCBzeXNjdGxfdGVzdF9kb2ludHZlY19yZWFkX2hhcHB5X3NpbmdsZV9wb3NpdGl2ZShzdHJ1
Y3Qga3VuaXQgKnRlc3QpCit7CisJaW50IGRhdGEgPSAwOworCS8qIEdvb2QgdGFibGUuICovCisJ
c3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnByb2NuYW1lID0gImZvbyIsCisJCS5kYXRh
CQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQkubW9kZQkJPSAwNjQ0LAor
CQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJhMQkJPSAmaV96ZXJvLAor
CQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9OworCS8qIFB1dCBzb21ldGhp
bmcgaW4gdGhlIGJ1ZmZlciBmb3IgZGVidWdnaW5nIHB1cnBvc2VzLiAqLworCWNoYXIgYnVmW10g
PSAiYm9ndXMiOworCXNpemVfdCBsZW4gPSBzaXplb2YoYnVmKSAtIDE7CisJbG9mZl90IHBvcyA9
IDA7CisJLyogU3RvcmUgMTMgaW4gdGhlIGRhdGEgZmllbGQuICovCisJKigoaW50ICopdGFibGUu
ZGF0YSkgPSAxMzsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50dmVjKCZ0
YWJsZSwgS1VOSVRfUFJPQ19SRUFELCBidWYsCisJCQkJCSAgICAgICAmbGVuLCAmcG9zKSk7CisJ
S1VOSVRfQVNTRVJUX0VRKHRlc3QsIChzaXplX3QpMywgbGVuKTsKKwlidWZbbGVuXSA9ICdcMCc7
CisJLyogQW5kIHdlIHJlYWQgMTMgYmFjayBvdXQuICovCisJS1VOSVRfRVhQRUNUX1NUUkVRKHRl
c3QsICIxM1xuIiwgKGNoYXIgKilidWYpOworfQorCisvKgorICogU2FtZSBhcyBwcmV2aW91cyB0
ZXN0LCBqdXN0IG5vdyB3aXRoIG5lZ2F0aXZlIG51bWJlcnMuCisgKi8KK3N0YXRpYyB2b2lkIHN5
c2N0bF90ZXN0X2RvaW50dmVjX3JlYWRfaGFwcHlfc2luZ2xlX25lZ2F0aXZlKHN0cnVjdCBrdW5p
dCAqdGVzdCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJLyogR29vZCB0YWJsZS4gKi8KKwlzdHJ1Y3Qg
Y3RsX3RhYmxlIHRhYmxlID0geworCQkucHJvY25hbWUgPSAiZm9vIiwKKwkJLmRhdGEJCT0gJmRh
dGEsCisJCS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJCS5tb2RlCQk9IDA2NDQsCisJCS5wcm9j
X2hhbmRsZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0cmExCQk9ICZpX3plcm8sCisJCS5leHRy
YTIgICAgICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07CisJY2hhciBidWZbXSA9ICJib2d1cyI7
CisJc2l6ZV90IGxlbiA9IHNpemVvZihidWYpIC0gMTsKKwlsb2ZmX3QgcG9zID0gMDsKKwkqKChp
bnQgKil0YWJsZS5kYXRhKSA9IC0xNjsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9j
X2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19SRUFELCBidWYsCisJCQkJCSAgICAgICAmbGVu
LCAmcG9zKSk7CisJS1VOSVRfQVNTRVJUX0VRKHRlc3QsIChzaXplX3QpNCwgbGVuKTsKKwlidWZb
bGVuXSA9ICdcMCc7CisJS1VOSVRfRVhQRUNUX1NUUkVRKHRlc3QsICItMTZcbiIsIChjaGFyICop
YnVmKTsKK30KKworLyoKKyAqIFRlc3QgdGhhdCBhIHNpbXBsZSBwb3NpdGl2ZSB3cml0ZSB3b3Jr
cy4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfd3JpdGVfaGFwcHlfc2lu
Z2xlX3Bvc2l0aXZlKHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlpbnQgZGF0YSA9IDA7CisJLyog
R29vZCB0YWJsZS4gKi8KKwlzdHJ1Y3QgY3RsX3RhYmxlIHRhYmxlID0geworCQkucHJvY25hbWUg
PSAiZm9vIiwKKwkJLmRhdGEJCT0gJmRhdGEsCisJCS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJ
CS5tb2RlCQk9IDA2NDQsCisJCS5wcm9jX2hhbmRsZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0
cmExCQk9ICZpX3plcm8sCisJCS5leHRyYTIgICAgICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07
CisJY2hhciBpbnB1dFtdID0gIjkiOworCXNpemVfdCBsZW4gPSBzaXplb2YoaW5wdXQpIC0gMTsK
Kwlsb2ZmX3QgcG9zID0gMDsKKworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCBwcm9jX2RvaW50
dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwgaW5wdXQsCisJCQkJCSAgICAgICAmbGVuLCAm
cG9zKSk7CisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIHNpemVvZihpbnB1dCkgLSAxLCBsZW4pOwor
CUtVTklUX0VYUEVDVF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQpIC0gMSwgKHNpemVfdClwb3MpOwor
CUtVTklUX0VYUEVDVF9FUSh0ZXN0LCA5LCAqKChpbnQgKil0YWJsZS5kYXRhKSk7Cit9CisKKy8q
CisgKiBTYW1lIGFzIHByZXZpb3VzIHRlc3QsIGJ1dCBub3cgd2l0aCBuZWdhdGl2ZSBudW1iZXJz
LgorICovCitzdGF0aWMgdm9pZCBzeXNjdGxfdGVzdF9kb2ludHZlY193cml0ZV9oYXBweV9zaW5n
bGVfbmVnYXRpdmUoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWludCBkYXRhID0gMDsKKwlzdHJ1
Y3QgY3RsX3RhYmxlIHRhYmxlID0geworCQkucHJvY25hbWUgPSAiZm9vIiwKKwkJLmRhdGEJCT0g
JmRhdGEsCisJCS5tYXhsZW4JCT0gc2l6ZW9mKGludCksCisJCS5tb2RlCQk9IDA2NDQsCisJCS5w
cm9jX2hhbmRsZXIJPSBwcm9jX2RvaW50dmVjLAorCQkuZXh0cmExCQk9ICZpX3plcm8sCisJCS5l
eHRyYTIgICAgICAgICA9ICZpX29uZV9odW5kcmVkLAorCX07CisJY2hhciBpbnB1dFtdID0gIi05
IjsKKwlzaXplX3QgbGVuID0gc2l6ZW9mKGlucHV0KSAtIDE7CisJbG9mZl90IHBvcyA9IDA7CisK
KwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgcHJvY19kb2ludHZlYygmdGFibGUsIEtVTklUX1BS
T0NfV1JJVEUsIGlucHV0LAorCQkJCQkgICAgICAgJmxlbiwgJnBvcykpOworCUtVTklUX0VYUEVD
VF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQpIC0gMSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVz
dCwgc2l6ZW9mKGlucHV0KSAtIDEsIChzaXplX3QpcG9zKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVz
dCwgLTksICooKGludCAqKXRhYmxlLmRhdGEpKTsKK30KKworLyoKKyAqIFRlc3QgdGhhdCB3cml0
aW5nIGEgdmFsdWUgc21hbGxlciB0aGFuIHRoZSBtaW5pbXVtIHBvc3NpYmxlIHZhbHVlIGlzIG5v
dAorICogYWxsb3dlZC4KKyAqLworc3RhdGljIHZvaWQgc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVj
X3dyaXRlX3NpbmdsZV9sZXNzX2ludF9taW4oCisJCXN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlp
bnQgZGF0YSA9IDA7CisJc3RydWN0IGN0bF90YWJsZSB0YWJsZSA9IHsKKwkJLnByb2NuYW1lID0g
ImZvbyIsCisJCS5kYXRhCQk9ICZkYXRhLAorCQkubWF4bGVuCQk9IHNpemVvZihpbnQpLAorCQku
bW9kZQkJPSAwNjQ0LAorCQkucHJvY19oYW5kbGVyCT0gcHJvY19kb2ludHZlYywKKwkJLmV4dHJh
MQkJPSAmaV96ZXJvLAorCQkuZXh0cmEyICAgICAgICAgPSAmaV9vbmVfaHVuZHJlZCwKKwl9Owor
CWNoYXIgaW5wdXRbMzJdOworCXNpemVfdCBsZW4gPSBzaXplb2YoaW5wdXQpIC0gMTsKKwlsb2Zm
X3QgcG9zID0gMDsKKwl1bnNpZ25lZCBsb25nIGFic19vZl9sZXNzX3RoYW5fbWluID0gKHVuc2ln
bmVkIGxvbmcpSU5UX01BWAorCQkJCQkgICAgIC0gKElOVF9NQVggKyBJTlRfTUlOKSArIDE7CisK
KwkvKgorCSAqIFdlIHVzZSB0aGlzIHJpZ21hcm9sZSB0byBjcmVhdGUgYSBzdHJpbmcgdGhhdCBj
b250YWlucyBhIHZhbHVlIG9uZQorCSAqIGxlc3MgdGhhbiB0aGUgbWluaW11bSBhY2NlcHRlZCB2
YWx1ZS4KKwkgKi8KKwlLVU5JVF9BU1NFUlRfTFQodGVzdCwKKwkJCShzaXplX3Qpc25wcmludGYo
aW5wdXQsIHNpemVvZihpbnB1dCksICItJWx1IiwKKwkJCQkJIGFic19vZl9sZXNzX3RoYW5fbWlu
KSwKKwkJCXNpemVvZihpbnB1dCkpOworCisJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIC1FSU5WQUws
CisJCQlwcm9jX2RvaW50dmVjKCZ0YWJsZSwgS1VOSVRfUFJPQ19XUklURSwgaW5wdXQsICZsZW4s
CisJCQkJICAgICAgJnBvcykpOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCBzaXplb2YoaW5wdXQp
IC0gMSwgbGVuKTsKKwlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMCwgKigoaW50ICopdGFibGUuZGF0
YSkpOworfQorCisvKgorICogVGVzdCB0aGF0IHdyaXRpbmcgdGhlIG1heGltdW0gcG9zc2libGUg
dmFsdWUgd29ya3MuCisgKi8KK3N0YXRpYyB2b2lkIHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY193
cml0ZV9zaW5nbGVfZ3JlYXRlcl9pbnRfbWF4KAorCQlzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJ
aW50IGRhdGEgPSAwOworCXN0cnVjdCBjdGxfdGFibGUgdGFibGUgPSB7CisJCS5wcm9jbmFtZSA9
ICJmb28iLAorCQkuZGF0YQkJPSAmZGF0YSwKKwkJLm1heGxlbgkJPSBzaXplb2YoaW50KSwKKwkJ
Lm1vZGUJCT0gMDY0NCwKKwkJLnByb2NfaGFuZGxlcgk9IHByb2NfZG9pbnR2ZWMsCisJCS5leHRy
YTEJCT0gJmlfemVybywKKwkJLmV4dHJhMiAgICAgICAgID0gJmlfb25lX2h1bmRyZWQsCisJfTsK
KwljaGFyIGlucHV0WzMyXTsKKwlzaXplX3QgbGVuID0gc2l6ZW9mKGlucHV0KSAtIDE7CisJbG9m
Zl90IHBvcyA9IDA7CisJdW5zaWduZWQgbG9uZyBncmVhdGVyX3RoYW5fbWF4ID0gKHVuc2lnbmVk
IGxvbmcpSU5UX01BWCArIDE7CisKKwlLVU5JVF9BU1NFUlRfR1QodGVzdCwgZ3JlYXRlcl90aGFu
X21heCwgKHVuc2lnbmVkIGxvbmcpSU5UX01BWCk7CisJS1VOSVRfQVNTRVJUX0xUKHRlc3QsIChz
aXplX3Qpc25wcmludGYoaW5wdXQsIHNpemVvZihpbnB1dCksICIlbHUiLAorCQkJCQkgICAgICAg
Z3JlYXRlcl90aGFuX21heCksCisJCQlzaXplb2YoaW5wdXQpKTsKKwlLVU5JVF9FWFBFQ1RfRVEo
dGVzdCwgLUVJTlZBTCwKKwkJCXByb2NfZG9pbnR2ZWMoJnRhYmxlLCBLVU5JVF9QUk9DX1dSSVRF
LCBpbnB1dCwgJmxlbiwKKwkJCQkgICAgICAmcG9zKSk7CisJS1VOSVRfQVNTRVJUX0VRKHRlc3Qs
IHNpemVvZihpbnB1dCkgLSAxLCBsZW4pOworCUtVTklUX0VYUEVDVF9FUSh0ZXN0LCAwLCAqKChp
bnQgKil0YWJsZS5kYXRhKSk7Cit9CisKK3N0YXRpYyBzdHJ1Y3Qga3VuaXRfY2FzZSBzeXNjdGxf
dGVzdF9jYXNlc1tdID0geworCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX251
bGxfdGJsX2RhdGEpLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3RhYmxl
X21heGxlbl91bnNldCksCisJS1VOSVRfQ0FTRShzeXNjdGxfdGVzdF9hcGlfZG9pbnR2ZWNfdGFi
bGVfbGVuX2lzX3plcm8pLAorCUtVTklUX0NBU0Uoc3lzY3RsX3Rlc3RfYXBpX2RvaW50dmVjX3Rh
YmxlX3JlYWRfYnV0X3Bvc2l0aW9uX3NldCksCisJS1VOSVRfQ0FTRShzeXNjdGxfdGVzdF9kb2lu
dHZlY19yZWFkX2hhcHB5X3NpbmdsZV9wb3NpdGl2ZSksCisJS1VOSVRfQ0FTRShzeXNjdGxfdGVz
dF9kb2ludHZlY19yZWFkX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZSksCisJS1VOSVRfQ0FTRShzeXNj
dGxfdGVzdF9kb2ludHZlY193cml0ZV9oYXBweV9zaW5nbGVfcG9zaXRpdmUpLAorCUtVTklUX0NB
U0Uoc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfd3JpdGVfaGFwcHlfc2luZ2xlX25lZ2F0aXZlKSwKKwlL
VU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY193cml0ZV9zaW5nbGVfbGVzc19pbnRf
bWluKSwKKwlLVU5JVF9DQVNFKHN5c2N0bF90ZXN0X2FwaV9kb2ludHZlY193cml0ZV9zaW5nbGVf
Z3JlYXRlcl9pbnRfbWF4KSwKKwl7fQorfTsKKworc3RhdGljIHN0cnVjdCBrdW5pdF9zdWl0ZSBz
eXNjdGxfdGVzdF9zdWl0ZSA9IHsKKwkubmFtZSA9ICJzeXNjdGxfdGVzdCIsCisJLnRlc3RfY2Fz
ZXMgPSBzeXNjdGxfdGVzdF9jYXNlcywKK307CisKK2t1bml0X3Rlc3Rfc3VpdGUoc3lzY3RsX3Rl
c3Rfc3VpdGUpOwpkaWZmIC0tZ2l0IGEvbGliL0tjb25maWcuZGVidWcgYi9saWIvS2NvbmZpZy5k
ZWJ1ZwppbmRleCBjYmRmYWUzNzk4OTY1Li42ZjgwMDc4MDBhNzZmIDEwMDY0NAotLS0gYS9saWIv
S2NvbmZpZy5kZWJ1ZworKysgYi9saWIvS2NvbmZpZy5kZWJ1ZwpAQCAtMTkzOSw2ICsxOTM5LDE3
IEBAIGNvbmZpZyBURVNUX1NZU0NUTAogCiAJICBJZiB1bnN1cmUsIHNheSBOLgogCitjb25maWcg
U1lTQ1RMX0tVTklUX1RFU1QKKwlib29sICJLVW5pdCB0ZXN0IGZvciBzeXNjdGwiCisJZGVwZW5k
cyBvbiBLVU5JVAorCWhlbHAKKwkgIFRoaXMgYnVpbGRzIHRoZSBwcm9jIHN5c2N0bCB1bml0IHRl
c3QsIHdoaWNoIHJ1bnMgb24gYm9vdC4KKwkgIFRlc3RzIHRoZSBBUEkgY29udHJhY3QgYW5kIGlt
cGxlbWVudGF0aW9uIGNvcnJlY3RuZXNzIG9mIHN5c2N0bC4KKwkgIEZvciBtb3JlIGluZm9ybWF0
aW9uIG9uIEtVbml0IGFuZCB1bml0IHRlc3RzIGluIGdlbmVyYWwgcGxlYXNlIHJlZmVyCisJICB0
byB0aGUgS1VuaXQgZG9jdW1lbnRhdGlvbiBpbiBEb2N1bWVudGF0aW9uL2Rldi10b29scy9rdW5p
dC8uCisKKwkgIElmIHVuc3VyZSwgc2F5IE4uCisKIGNvbmZpZyBURVNUX1VERUxBWQogCXRyaXN0
YXRlICJ1ZGVsYXkgdGVzdCBkcml2ZXIiCiAJaGVscAotLSAKMi4yMi4wLjQxMC5nZDhmZGJlMjFi
NS1nb29nCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpk
cmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
