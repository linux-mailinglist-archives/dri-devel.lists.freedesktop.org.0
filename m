Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C04AD2204D
	for <lists+dri-devel@lfdr.de>; Sat, 18 May 2019 00:31:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B864D89533;
	Fri, 17 May 2019 22:31:51 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from perceval.ideasonboard.com (perceval.ideasonboard.com
 [213.167.242.64])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4B44189533
 for <dri-devel@lists.freedesktop.org>; Fri, 17 May 2019 22:31:50 +0000 (UTC)
Received: from localhost.localdomain
 (cpc89242-aztw30-2-0-cust488.18-1.cable.virginm.net [86.31.129.233])
 by perceval.ideasonboard.com (Postfix) with ESMTPSA id 4C192336;
 Sat, 18 May 2019 00:31:48 +0200 (CEST)
From: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
To: Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
 linux-renesas-soc@vger.kernel.org, linux-media@vger.kernel.org,
 dri-devel@lists.freedesktop.org
Subject: [PATCH 1/3] media: vsp1: drm: Split vsp1_du_setup_lif()
Date: Fri, 17 May 2019 23:31:41 +0100
Message-Id: <20190517223143.26251-2-kieran.bingham+renesas@ideasonboard.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190517223143.26251-1-kieran.bingham+renesas@ideasonboard.com>
References: <20190517223143.26251-1-kieran.bingham+renesas@ideasonboard.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=ideasonboard.com; s=mail; t=1558132308;
 bh=LDZ60/Ee44rD+jbGQ+7fcgzOj40I+eQ8PFLp7q7HQNI=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=bu0IdENP7wwO2/3ZLgMtVhzsANbQ3K+FgCk3bb4QAmVnbrLjhB59GYC1ud7N5fDbJ
 mVKMj4jlgdi4XQBJwHtphhQG8blL1juo34ff4dW6bqqU9xrKZd7dNPyqIXJMXccKud
 w0fRTZNCKNETBKknkCI/KM/a4zLBPhdCtLSZoAE4=
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Mauro Carvalho Chehab <mchehab@kernel.org>,
 Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>,
 open list <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QnJlYWsgdnNwMV9kdV9zZXR1cF9saWYoKSBpbnRvIGNvbXBvbmVudHMgbW9yZSBzdWl0ZWQgdG8g
dGhlIERSTSBBdG9taWMKQVBJLiBUaGUgZXhpc3RpbmcgdnNwMV9kdV9zZXR1cF9saWYoKSBBUEkg
Y2FsbCBpcyBtYWludGFpbmVkIGFzIGl0IGlzCnN0aWxsIHVzZWQgZnJvbSB0aGUgRFUuCgpTaWdu
ZWQtb2ZmLWJ5OiBLaWVyYW4gQmluZ2hhbSA8a2llcmFuLmJpbmdoYW0rcmVuZXNhc0BpZGVhc29u
Ym9hcmQuY29tPgotLS0KIGRyaXZlcnMvbWVkaWEvcGxhdGZvcm0vdnNwMS92c3AxX2RybS5jIHwg
MjMzICsrKysrKysrKysrKysrKysrKy0tLS0tLS0KIGluY2x1ZGUvbWVkaWEvdnNwMS5oICAgICAg
ICAgICAgICAgICAgIHwgIDMyICsrKy0KIDIgZmlsZXMgY2hhbmdlZCwgMTk5IGluc2VydGlvbnMo
KyksIDY2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWVkaWEvcGxhdGZvcm0v
dnNwMS92c3AxX2RybS5jIGIvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS92c3AxL3ZzcDFfZHJtLmMK
aW5kZXggYTRhNDVkNjhhNmVmLi5jZTVjMDc4MDY4MGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbWVk
aWEvcGxhdGZvcm0vdnNwMS92c3AxX2RybS5jCisrKyBiL2RyaXZlcnMvbWVkaWEvcGxhdGZvcm0v
dnNwMS92c3AxX2RybS5jCkBAIC02MTYsMTggKzYxNiwxNSBAQCBpbnQgdnNwMV9kdV9pbml0KHN0
cnVjdCBkZXZpY2UgKmRldikKIEVYUE9SVF9TWU1CT0xfR1BMKHZzcDFfZHVfaW5pdCk7CiAKIC8q
KgotICogdnNwMV9kdV9zZXR1cF9saWYgLSBTZXR1cCB0aGUgb3V0cHV0IHBhcnQgb2YgdGhlIFZT
UCBwaXBlbGluZQorICogdnNwMV9kdV9hdG9taWNfbW9kZXNldCAtIENvbmZpZ3VyZSB0aGUgbW9k
ZSBhcyBwYXJ0IG9mIGFuIGF0b21pYyB1cGRhdGUKICAqIEBkZXY6IHRoZSBWU1AgZGV2aWNlCiAg
KiBAcGlwZV9pbmRleDogdGhlIERSTSBwaXBlbGluZSBpbmRleAotICogQGNmZzogdGhlIExJRiBj
b25maWd1cmF0aW9uCisgKiBAY2ZnOiB0aGUgbW9kZSBjb25maWd1cmF0aW9uCiAgKgogICogQ29u
ZmlndXJlIHRoZSBvdXRwdXQgcGFydCBvZiBWU1AgRFJNIHBpcGVsaW5lIGZvciB0aGUgZ2l2ZW4g
ZnJhbWUgQGNmZy53aWR0aAogICogYW5kIEBjZmcuaGVpZ2h0LiBUaGlzIHNldHMgdXAgZm9ybWF0
cyBvbiB0aGUgQlJ4IHNvdXJjZSBwYWQsIHRoZSBXUEYgc2luayBhbmQKICAqIHNvdXJjZSBwYWRz
LCBhbmQgdGhlIExJRiBzaW5rIHBhZC4KICAqCi0gKiBUaGUgQHBpcGVfaW5kZXggYXJndW1lbnQg
c2VsZWN0cyB3aGljaCBEUk0gcGlwZWxpbmUgdG8gc2V0dXAuIFRoZSBudW1iZXIgb2YKLSAqIGF2
YWlsYWJsZSBwaXBlbGluZXMgZGVwZW5kIG9uIHRoZSBWU1AgaW5zdGFuY2UuCi0gKgogICogQXMg
dGhlIG1lZGlhIGJ1cyBjb2RlIG9uIHRoZSBibGVuZCB1bml0IHNvdXJjZSBwYWQgaXMgY29uZGl0
aW9uZWQgYnkgdGhlCiAgKiBjb25maWd1cmF0aW9uIG9mIGl0cyBzaW5rIDAgcGFkLCB3ZSBhbHNv
IHNldCB1cCB0aGUgZm9ybWF0cyBvbiBhbGwgYmxlbmQgdW5pdAogICogc2lua3MsIGV2ZW4gaWYg
dGhlIGNvbmZpZ3VyYXRpb24gd2lsbCBiZSBvdmVyd3JpdHRlbiBsYXRlciBieQpAQCAtNjM1LDE1
ICs2MzIsMTQgQEAgRVhQT1JUX1NZTUJPTF9HUEwodnNwMV9kdV9pbml0KTsKICAqIGEgd2VsbCBk
ZWZpbmVkIHN0YXRlLgogICoKICAqIFJldHVybiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBl
cnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKgogICovCi1pbnQgdnNwMV9kdV9zZXR1cF9saWYoc3Ry
dWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZV9pbmRleCwKLQkJICAgICAgY29uc3Qg
c3RydWN0IHZzcDFfZHVfbGlmX2NvbmZpZyAqY2ZnKQoraW50IHZzcDFfZHVfYXRvbWljX21vZGVz
ZXQoc3RydWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZV9pbmRleCwKKwkJCSAgIGNv
bnN0IHN0cnVjdCB2c3AxX2R1X21vZGVzZXRfY29uZmlnICpjZmcpCiB7CiAJc3RydWN0IHZzcDFf
ZGV2aWNlICp2c3AxID0gZGV2X2dldF9kcnZkYXRhKGRldik7CiAJc3RydWN0IHZzcDFfZHJtX3Bp
cGVsaW5lICpkcm1fcGlwZTsKIAlzdHJ1Y3QgdnNwMV9waXBlbGluZSAqcGlwZTsKLQl1bnNpZ25l
ZCBsb25nIGZsYWdzOwotCXVuc2lnbmVkIGludCBpOwogCWludCByZXQ7CiAKIAlpZiAocGlwZV9p
bmRleCA+PSB2c3AxLT5pbmZvLT5saWZfY291bnQpCkBAIC02NTIsNjAgKzY0OCw2IEBAIGludCB2
c3AxX2R1X3NldHVwX2xpZihzdHJ1Y3QgZGV2aWNlICpkZXYsIHVuc2lnbmVkIGludCBwaXBlX2lu
ZGV4LAogCWRybV9waXBlID0gJnZzcDEtPmRybS0+cGlwZVtwaXBlX2luZGV4XTsKIAlwaXBlID0g
JmRybV9waXBlLT5waXBlOwogCi0JaWYgKCFjZmcpIHsKLQkJc3RydWN0IHZzcDFfYnJ4ICpicng7
Ci0KLQkJbXV0ZXhfbG9jaygmdnNwMS0+ZHJtLT5sb2NrKTsKLQotCQlicnggPSB0b19icngoJnBp
cGUtPmJyeC0+c3ViZGV2KTsKLQotCQkvKgotCQkgKiBOVUxMIGNvbmZpZ3VyYXRpb24gbWVhbnMg
dGhlIENSVEMgaXMgYmVpbmcgZGlzYWJsZWQsIHN0b3AKLQkJICogdGhlIHBpcGVsaW5lIGFuZCB0
dXJuIHRoZSBsaWdodCBvZmYuCi0JCSAqLwotCQlyZXQgPSB2c3AxX3BpcGVsaW5lX3N0b3AocGlw
ZSk7Ci0JCWlmIChyZXQgPT0gLUVUSU1FRE9VVCkKLQkJCWRldl9lcnIodnNwMS0+ZGV2LCAiRFJN
IHBpcGVsaW5lIHN0b3AgdGltZW91dFxuIik7Ci0KLQkJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJ
WkUocGlwZS0+aW5wdXRzKTsgKytpKSB7Ci0JCQlzdHJ1Y3QgdnNwMV9yd3BmICpycGYgPSBwaXBl
LT5pbnB1dHNbaV07Ci0KLQkJCWlmICghcnBmKQotCQkJCWNvbnRpbnVlOwotCi0JCQkvKgotCQkJ
ICogUmVtb3ZlIHRoZSBSUEYgZnJvbSB0aGUgcGlwZSBhbmQgdGhlIGxpc3Qgb2YgQlJ4Ci0JCQkg
KiBpbnB1dHMuCi0JCQkgKi8KLQkJCVdBUk5fT04oIXJwZi0+ZW50aXR5LnBpcGUpOwotCQkJcnBm
LT5lbnRpdHkucGlwZSA9IE5VTEw7Ci0JCQlsaXN0X2RlbCgmcnBmLT5lbnRpdHkubGlzdF9waXBl
KTsKLQkJCXBpcGUtPmlucHV0c1tpXSA9IE5VTEw7Ci0KLQkJCWJyeC0+aW5wdXRzW3JwZi0+YnJ4
X2lucHV0XS5ycGYgPSBOVUxMOwotCQl9Ci0KLQkJZHJtX3BpcGUtPmR1X2NvbXBsZXRlID0gTlVM
TDsKLQkJcGlwZS0+bnVtX2lucHV0cyA9IDA7Ci0KLQkJZGV2X2RiZyh2c3AxLT5kZXYsICIlczog
cGlwZSAldTogcmVsZWFzaW5nICVzXG4iLAotCQkJX19mdW5jX18sIHBpcGUtPmxpZi0+aW5kZXgs
Ci0JCQlCUlhfTkFNRShwaXBlLT5icngpKTsKLQotCQlsaXN0X2RlbCgmcGlwZS0+YnJ4LT5saXN0
X3BpcGUpOwotCQlwaXBlLT5icngtPnBpcGUgPSBOVUxMOwotCQlwaXBlLT5icnggPSBOVUxMOwot
Ci0JCW11dGV4X3VubG9jaygmdnNwMS0+ZHJtLT5sb2NrKTsKLQotCQl2c3AxX2RsbV9yZXNldChw
aXBlLT5vdXRwdXQtPmRsbSk7Ci0JCXZzcDFfZGV2aWNlX3B1dCh2c3AxKTsKLQotCQlkZXZfZGJn
KHZzcDEtPmRldiwgIiVzOiBwaXBlbGluZSBkaXNhYmxlZFxuIiwgX19mdW5jX18pOwotCi0JCXJl
dHVybiAwOwotCX0KLQogCWRybV9waXBlLT53aWR0aCA9IGNmZy0+d2lkdGg7CiAJZHJtX3BpcGUt
PmhlaWdodCA9IGNmZy0+aGVpZ2h0OwogCXBpcGUtPmludGVybGFjZWQgPSBjZmctPmludGVybGFj
ZWQ7CkBAIC03MjIsOCArNjY0LDQzIEBAIGludCB2c3AxX2R1X3NldHVwX2xpZihzdHJ1Y3QgZGV2
aWNlICpkZXYsIHVuc2lnbmVkIGludCBwaXBlX2luZGV4LAogCQlnb3RvIHVubG9jazsKIAogCXJl
dCA9IHZzcDFfZHVfcGlwZWxpbmVfc2V0dXBfb3V0cHV0KHZzcDEsIHBpcGUpOwotCWlmIChyZXQg
PCAwKQotCQlnb3RvIHVubG9jazsKKwordW5sb2NrOgorCW11dGV4X3VubG9jaygmdnNwMS0+ZHJt
LT5sb2NrKTsKKworCXJldHVybiByZXQ7Cit9CisKKy8qKgorICogdnNwMV9kdV9hdG9taWNfZW5h
YmxlIC0gRW5hYmxlIGFuZCBzdGFydCBhIERVIHBpcGVsaW5lCisgKiBAZGV2OiB0aGUgVlNQIGRl
dmljZQorICogQHBpcGVfaW5kZXg6IHRoZSBEUk0gcGlwZWxpbmUgaW5kZXgKKyAqIEBjZmc6IHRo
ZSBlbmFibGVtZW50IGNvbmZpZ3VyYXRpb24KKyAqCisgKiBUaGUgQHBpcGVfaW5kZXggYXJndW1l
bnQgc2VsZWN0cyB3aGljaCBEUk0gcGlwZWxpbmUgdG8gZW5hYmxlLiBUaGUgbnVtYmVyIG9mCisg
KiBhdmFpbGFibGUgcGlwZWxpbmVzIGRlcGVuZCBvbiB0aGUgVlNQIGluc3RhbmNlLgorICoKKyAq
IFRoZSBjb25maWd1cmF0aW9uIHBhc3NlcyBhIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIHJlZ2lzdGVy
IG5vdGlmaWNhdGlvbiBvZgorICogZnJhbWUgY29tcGxldGlvbiBldmVudHMuCisgKgorICogUmV0
dXJuIDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAq
LworaW50IHZzcDFfZHVfYXRvbWljX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsIHVuc2lnbmVk
IGludCBwaXBlX2luZGV4LAorCQkJICBjb25zdCBzdHJ1Y3QgdnNwMV9kdV9lbmFibGVfY29uZmln
ICpjZmcpCit7CisJc3RydWN0IHZzcDFfZGV2aWNlICp2c3AxID0gZGV2X2dldF9kcnZkYXRhKGRl
dik7CisJc3RydWN0IHZzcDFfZHJtX3BpcGVsaW5lICpkcm1fcGlwZTsKKwlzdHJ1Y3QgdnNwMV9w
aXBlbGluZSAqcGlwZTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWludCByZXQ7CisKKwlpZiAo
cGlwZV9pbmRleCA+PSB2c3AxLT5pbmZvLT5saWZfY291bnQpCisJCXJldHVybiAtRUlOVkFMOwor
CisJZHJtX3BpcGUgPSAmdnNwMS0+ZHJtLT5waXBlW3BpcGVfaW5kZXhdOworCXBpcGUgPSAmZHJt
X3BpcGUtPnBpcGU7CisKKwltdXRleF9sb2NrKCZ2c3AxLT5kcm0tPmxvY2spOwogCiAJLyogRW5h
YmxlIHRoZSBWU1AxLiAqLwogCXJldCA9IHZzcDFfZGV2aWNlX2dldCh2c3AxKTsKQEAgLTc1OCw2
ICs3MzUsMTMyIEBAIGludCB2c3AxX2R1X3NldHVwX2xpZihzdHJ1Y3QgZGV2aWNlICpkZXYsIHVu
c2lnbmVkIGludCBwaXBlX2luZGV4LAogCWRldl9kYmcodnNwMS0+ZGV2LCAiJXM6IHBpcGVsaW5l
IGVuYWJsZWRcbiIsIF9fZnVuY19fKTsKIAogCXJldHVybiAwOworCit9CitFWFBPUlRfU1lNQk9M
X0dQTCh2c3AxX2R1X2F0b21pY19lbmFibGUpOworCisKKy8qKgorICogdnNwMV9kdV9hdG9taWNf
ZGlzYWJsZSAtIERpc2FibGUgYW5kIHN0b3AgYSBEVSBwaXBlbGluZQorICogQGRldjogdGhlIFZT
UCBkZXZpY2UKKyAqIEBwaXBlX2luZGV4OiB0aGUgRFJNIHBpcGVsaW5lIGluZGV4CisgKgorICog
VGhlIEBwaXBlX2luZGV4IGFyZ3VtZW50IHNlbGVjdHMgd2hpY2ggRFJNIHBpcGVsaW5lIHRvIGRp
c2FibGUuIFRoZSBudW1iZXIKKyAqIG9mIGF2YWlsYWJsZSBwaXBlbGluZXMgZGVwZW5kIG9uIHRo
ZSBWU1AgaW5zdGFuY2UuCisgKgorICogUmV0dXJuIDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZl
IGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IHZzcDFfZHVfYXRvbWljX2Rpc2FibGUo
c3RydWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZV9pbmRleCkKK3sKKwlzdHJ1Y3Qg
dnNwMV9kZXZpY2UgKnZzcDEgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKKwlzdHJ1Y3QgdnNwMV9k
cm1fcGlwZWxpbmUgKmRybV9waXBlOworCXN0cnVjdCB2c3AxX3BpcGVsaW5lICpwaXBlOworCXN0
cnVjdCB2c3AxX2JyeCAqYnJ4OworCXVuc2lnbmVkIGludCBpOworCWludCByZXQ7CisKKwlpZiAo
cGlwZV9pbmRleCA+PSB2c3AxLT5pbmZvLT5saWZfY291bnQpCisJCXJldHVybiAtRUlOVkFMOwor
CisJZHJtX3BpcGUgPSAmdnNwMS0+ZHJtLT5waXBlW3BpcGVfaW5kZXhdOworCXBpcGUgPSAmZHJt
X3BpcGUtPnBpcGU7CisKKwltdXRleF9sb2NrKCZ2c3AxLT5kcm0tPmxvY2spOworCisJYnJ4ID0g
dG9fYnJ4KCZwaXBlLT5icngtPnN1YmRldik7CisKKwkvKgorCSAqIE5VTEwgY29uZmlndXJhdGlv
biBtZWFucyB0aGUgQ1JUQyBpcyBiZWluZyBkaXNhYmxlZCwgc3RvcAorCSAqIHRoZSBwaXBlbGlu
ZSBhbmQgdHVybiB0aGUgbGlnaHQgb2ZmLgorCSAqLworCXJldCA9IHZzcDFfcGlwZWxpbmVfc3Rv
cChwaXBlKTsKKwlpZiAocmV0ID09IC1FVElNRURPVVQpCisJCWRldl9lcnIodnNwMS0+ZGV2LCAi
RFJNIHBpcGVsaW5lIHN0b3AgdGltZW91dFxuIik7CisKKwlmb3IgKGkgPSAwOyBpIDwgQVJSQVlf
U0laRShwaXBlLT5pbnB1dHMpOyArK2kpIHsKKwkJc3RydWN0IHZzcDFfcndwZiAqcnBmID0gcGlw
ZS0+aW5wdXRzW2ldOworCisJCWlmICghcnBmKQorCQkJY29udGludWU7CisKKwkJLyoKKwkJICog
UmVtb3ZlIHRoZSBSUEYgZnJvbSB0aGUgcGlwZSBhbmQgdGhlIGxpc3Qgb2YgQlJ4CisJCSAqIGlu
cHV0cy4KKwkJICovCisJCVdBUk5fT04oIXJwZi0+ZW50aXR5LnBpcGUpOworCQlycGYtPmVudGl0
eS5waXBlID0gTlVMTDsKKwkJbGlzdF9kZWwoJnJwZi0+ZW50aXR5Lmxpc3RfcGlwZSk7CisJCXBp
cGUtPmlucHV0c1tpXSA9IE5VTEw7CisKKwkJYnJ4LT5pbnB1dHNbcnBmLT5icnhfaW5wdXRdLnJw
ZiA9IE5VTEw7CisJfQorCisJZHJtX3BpcGUtPmR1X2NvbXBsZXRlID0gTlVMTDsKKwlwaXBlLT5u
dW1faW5wdXRzID0gMDsKKworCWRldl9kYmcodnNwMS0+ZGV2LCAiJXM6IHBpcGUgJXU6IHJlbGVh
c2luZyAlc1xuIiwKKwkJX19mdW5jX18sIHBpcGUtPmxpZi0+aW5kZXgsCisJCUJSWF9OQU1FKHBp
cGUtPmJyeCkpOworCisJbGlzdF9kZWwoJnBpcGUtPmJyeC0+bGlzdF9waXBlKTsKKwlwaXBlLT5i
cngtPnBpcGUgPSBOVUxMOworCXBpcGUtPmJyeCA9IE5VTEw7CisKKwltdXRleF91bmxvY2soJnZz
cDEtPmRybS0+bG9jayk7CisKKwl2c3AxX2RsbV9yZXNldChwaXBlLT5vdXRwdXQtPmRsbSk7CisJ
dnNwMV9kZXZpY2VfcHV0KHZzcDEpOworCisJZGV2X2RiZyh2c3AxLT5kZXYsICIlczogcGlwZWxp
bmUgZGlzYWJsZWRcbiIsIF9fZnVuY19fKTsKKworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJP
TF9HUEwodnNwMV9kdV9hdG9taWNfZGlzYWJsZSk7CisKKy8qKgorICogdnNwMV9kdV9zZXR1cF9s
aWYgLSBTZXR1cCB0aGUgb3V0cHV0IHBhcnQgb2YgdGhlIFZTUCBwaXBlbGluZQorICogQGRldjog
dGhlIFZTUCBkZXZpY2UKKyAqIEBwaXBlX2luZGV4OiB0aGUgRFJNIHBpcGVsaW5lIGluZGV4Cisg
KiBAY2ZnOiB0aGUgTElGIGNvbmZpZ3VyYXRpb24KKyAqCisgKiBDb25maWd1cmUgdGhlIG91dHB1
dCBwYXJ0IG9mIFZTUCBEUk0gcGlwZWxpbmUgZm9yIHRoZSBnaXZlbiBmcmFtZSBAY2ZnLndpZHRo
CisgKiBhbmQgQGNmZy5oZWlnaHQuIFRoaXMgc2V0cyB1cCBmb3JtYXRzIG9uIHRoZSBCUnggc291
cmNlIHBhZCwgdGhlIFdQRiBzaW5rIGFuZAorICogc291cmNlIHBhZHMsIGFuZCB0aGUgTElGIHNp
bmsgcGFkLgorICoKKyAqIFRoZSBAcGlwZV9pbmRleCBhcmd1bWVudCBzZWxlY3RzIHdoaWNoIERS
TSBwaXBlbGluZSB0byBzZXR1cC4gVGhlIG51bWJlciBvZgorICogYXZhaWxhYmxlIHBpcGVsaW5l
cyBkZXBlbmQgb24gdGhlIFZTUCBpbnN0YW5jZS4KKyAqCisgKiBBcyB0aGUgbWVkaWEgYnVzIGNv
ZGUgb24gdGhlIGJsZW5kIHVuaXQgc291cmNlIHBhZCBpcyBjb25kaXRpb25lZCBieSB0aGUKKyAq
IGNvbmZpZ3VyYXRpb24gb2YgaXRzIHNpbmsgMCBwYWQsIHdlIGFsc28gc2V0IHVwIHRoZSBmb3Jt
YXRzIG9uIGFsbCBibGVuZCB1bml0CisgKiBzaW5rcywgZXZlbiBpZiB0aGUgY29uZmlndXJhdGlv
biB3aWxsIGJlIG92ZXJ3cml0dGVuIGxhdGVyIGJ5CisgKiB2c3AxX2R1X3NldHVwX3JwZigpLiBU
aGlzIGVuc3VyZXMgdGhhdCB0aGUgYmxlbmQgdW5pdCBjb25maWd1cmF0aW9uIGlzIHNldCB0bwor
ICogYSB3ZWxsIGRlZmluZWQgc3RhdGUuCisgKgorICogUmV0dXJuIDAgb24gc3VjY2VzcyBvciBh
IG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IHZzcDFfZHVfc2V0dXBf
bGlmKHN0cnVjdCBkZXZpY2UgKmRldiwgdW5zaWduZWQgaW50IHBpcGVfaW5kZXgsCisJCSAgICAg
IGNvbnN0IHN0cnVjdCB2c3AxX2R1X2xpZl9jb25maWcgKmNmZykKK3sKKwlpbnQgcmV0OworCisJ
c3RydWN0IHZzcDFfZHVfbW9kZXNldF9jb25maWcgbW9kZXMgPSB7CisJCS53aWR0aCA9IGNmZy0+
d2lkdGgsCisJCS5oZWlnaHQgPSBjZmctPmhlaWdodCwKKwkJLmludGVybGFjZWQgPSBjZmctPmlu
dGVybGFjZWQsCisJfTsKKwlzdHJ1Y3QgdnNwMV9kdV9lbmFibGVfY29uZmlnIGVuYWJsZSA9IHsK
KwkJLmNhbGxiYWNrID0gY2ZnLT5jYWxsYmFjaywKKwkJLmNhbGxiYWNrX2RhdGEgPSBjZmctPmNh
bGxiYWNrX2RhdGEsCisJfTsKKworCWlmICghY2ZnKQorCQlyZXR1cm4gdnNwMV9kdV9hdG9taWNf
ZGlzYWJsZShkZXYsIHBpcGVfaW5kZXgpOworCisJcmV0ID0gdnNwMV9kdV9hdG9taWNfbW9kZXNl
dChkZXYsIHBpcGVfaW5kZXgsICZtb2Rlcyk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKwor
CXJldHVybiB2c3AxX2R1X2F0b21pY19lbmFibGUoZGV2LCBwaXBlX2luZGV4LCAmZW5hYmxlKTsK
IH0KIEVYUE9SVF9TWU1CT0xfR1BMKHZzcDFfZHVfc2V0dXBfbGlmKTsKIApkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9tZWRpYS92c3AxLmggYi9pbmNsdWRlL21lZGlhL3ZzcDEuaAppbmRleCBjYzFiMGQ0
MmNlOTUuLjEzZjVhMWM0ZDQ1YSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9tZWRpYS92c3AxLmgKKysr
IGIvaW5jbHVkZS9tZWRpYS92c3AxLmgKQEAgLTIxLDcgKzIxLDcgQEAgaW50IHZzcDFfZHVfaW5p
dChzdHJ1Y3QgZGV2aWNlICpkZXYpOwogI2RlZmluZSBWU1AxX0RVX1NUQVRVU19XUklURUJBQ0sJ
QklUKDEpCiAKIC8qKgotICogc3RydWN0IHZzcDFfZHVfbGlmX2NvbmZpZyAtIFZTUCBMSUYgY29u
ZmlndXJhdGlvbgorICogc3RydWN0IHZzcDFfZHVfbGlmX2NvbmZpZyAtIFZTUCBMSUYgY29uZmln
dXJhdGlvbiAtIERlcHJlY2F0ZWQKICAqIEB3aWR0aDogb3V0cHV0IGZyYW1lIHdpZHRoCiAgKiBA
aGVpZ2h0OiBvdXRwdXQgZnJhbWUgaGVpZ2h0CiAgKiBAaW50ZXJsYWNlZDogdHJ1ZSBmb3IgaW50
ZXJsYWNlZCBwaXBlbGluZXMKQEAgLTQyLDYgKzQyLDMwIEBAIHN0cnVjdCB2c3AxX2R1X2xpZl9j
b25maWcgewogaW50IHZzcDFfZHVfc2V0dXBfbGlmKHN0cnVjdCBkZXZpY2UgKmRldiwgdW5zaWdu
ZWQgaW50IHBpcGVfaW5kZXgsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCB2c3AxX2R1X2xpZl9jb25m
aWcgKmNmZyk7CiAKKy8qKgorICogc3RydWN0IHZzcDFfZHVfbW9kZXNldF9jb25maWcgLSBWU1Ag
TElGIE1vZGUgY29uZmlndXJhdGlvbgorICogQHdpZHRoOiBvdXRwdXQgZnJhbWUgd2lkdGgKKyAq
IEBoZWlnaHQ6IG91dHB1dCBmcmFtZSBoZWlnaHQKKyAqIEBpbnRlcmxhY2VkOiB0cnVlIGZvciBp
bnRlcmxhY2VkIHBpcGVsaW5lcworICovCitzdHJ1Y3QgdnNwMV9kdV9tb2Rlc2V0X2NvbmZpZyB7
CisJdW5zaWduZWQgaW50IHdpZHRoOworCXVuc2lnbmVkIGludCBoZWlnaHQ7CisJYm9vbCBpbnRl
cmxhY2VkOworfTsKKworLyoqCisgKiBzdHJ1Y3QgdnNwMV9kdV9lbmFibGVfY29uZmlnIC0gVlNQ
IGVuYWJsZSBjb25maWd1cmF0aW9uCisgKiBAY2FsbGJhY2s6IGZyYW1lIGNvbXBsZXRpb24gY2Fs
bGJhY2sgZnVuY3Rpb24gKG9wdGlvbmFsKS4gV2hlbiBhIGNhbGxiYWNrCisgKgkgICAgICBpcyBw
cm92aWRlZCwgdGhlIFZTUCBkcml2ZXIgZ3VhcmFudGVlcyB0aGF0IGl0IHdpbGwgYmUgY2FsbGVk
IG9uY2UKKyAqCSAgICAgIGFuZCBvbmx5IG9uY2UgZm9yIGVhY2ggdnNwMV9kdV9hdG9taWNfZmx1
c2goKSBjYWxsLgorICogQGNhbGxiYWNrX2RhdGE6IGRhdGEgdG8gYmUgcGFzc2VkIHRvIHRoZSBm
cmFtZSBjb21wbGV0aW9uIGNhbGxiYWNrCisgKi8KK3N0cnVjdCB2c3AxX2R1X2VuYWJsZV9jb25m
aWcgeworCXZvaWQgKCpjYWxsYmFjaykodm9pZCAqZGF0YSwgdW5zaWduZWQgaW50IHN0YXR1cywg
dTMyIGNyYyk7CisJdm9pZCAqY2FsbGJhY2tfZGF0YTsKK307CisKIC8qKgogICogc3RydWN0IHZz
cDFfZHVfYXRvbWljX2NvbmZpZyAtIFZTUCBhdG9taWMgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJz
CiAgKiBAcGl4ZWxmb3JtYXQ6IHBsYW5lIHBpeGVsIGZvcm1hdCAoVjRMMiA0Q0MpCkBAIC0xMDYs
NiArMTMwLDEyIEBAIHN0cnVjdCB2c3AxX2R1X2F0b21pY19waXBlX2NvbmZpZyB7CiAJc3RydWN0
IHZzcDFfZHVfd3JpdGViYWNrX2NvbmZpZyB3cml0ZWJhY2s7CiB9OwogCisKK2ludCB2c3AxX2R1
X2F0b21pY19tb2Rlc2V0KHN0cnVjdCBkZXZpY2UgKmRldiwgdW5zaWduZWQgaW50IHBpcGVfaW5k
ZXgsCisJCSAgICBjb25zdCBzdHJ1Y3QgdnNwMV9kdV9tb2Rlc2V0X2NvbmZpZyAqY2ZnKTsKK2lu
dCB2c3AxX2R1X2F0b21pY19lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQg
cGlwZV9pbmRleCwKKwkJICAgY29uc3Qgc3RydWN0IHZzcDFfZHVfZW5hYmxlX2NvbmZpZyAqY2Zn
KTsKK2ludCB2c3AxX2R1X2F0b21pY19kaXNhYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwgdW5zaWdu
ZWQgaW50IHBpcGVfaW5kZXgpOwogdm9pZCB2c3AxX2R1X2F0b21pY19iZWdpbihzdHJ1Y3QgZGV2
aWNlICpkZXYsIHVuc2lnbmVkIGludCBwaXBlX2luZGV4KTsKIGludCB2c3AxX2R1X2F0b21pY191
cGRhdGUoc3RydWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgcGlwZV9pbmRleCwKIAkJCSAg
dW5zaWduZWQgaW50IHJwZiwKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vZHJpLWRldmVs
