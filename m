Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2EB8D4A30F
	for <lists+dri-devel@lfdr.de>; Tue, 18 Jun 2019 15:58:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 203366E1BB;
	Tue, 18 Jun 2019 13:58:49 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id EC3306E1BB
 for <dri-devel@lists.freedesktop.org>; Tue, 18 Jun 2019 13:58:31 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
 [10.5.11.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 4B60918DF60;
 Tue, 18 Jun 2019 13:58:28 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-33.ams2.redhat.com
 [10.36.116.33])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 87E917D571;
 Tue, 18 Jun 2019 13:58:25 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
 id 8E43A17538; Tue, 18 Jun 2019 15:58:22 +0200 (CEST)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v2 10/12] drm/virtio: switch from ttm to gem shmem helpers
Date: Tue, 18 Jun 2019 15:58:18 +0200
Message-Id: <20190618135821.8644-11-kraxel@redhat.com>
In-Reply-To: <20190618135821.8644-1-kraxel@redhat.com>
References: <20190618135821.8644-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.29]); Tue, 18 Jun 2019 13:58:31 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>,
 "open list:VIRTIO GPU DRIVER" <virtualization@lists.linux-foundation.org>,
 Gerd Hoffmann <kraxel@redhat.com>, open list <linux-kernel@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

dmlydGlvLWdwdSBiYXNpY2FsbHkgbmVlZHMgYSBzZ190YWJsZSBmb3IgdGhlIGJvLCB0byB0ZWxs
IHRoZSBob3N0IHdoZXJlCnRoZSBiYWNraW5nIHBhZ2VzIGZvciB0aGUgb2JqZWN0IGFyZS4gIFNv
IHRoZSBnZW0gc2htZW0gaGVscGVycyBhcmUgYQpwZXJmZWN0IGZpdC4gIFNvbWUgZHJtX2dlbV9v
YmplY3RfZnVuY3MgbmVlZCB0aGluIHdyYXBwZXJzIHRvIHVwZGF0ZSB0aGUKaG9zdCBzdGF0ZSwg
YnV0IG90aGVyd2lzZSB0aGUgaGVscGVycyBoYW5kbGUgZXZlcnl0aGluZyBqdXN0IGZpbmUuCgpP
bmNlIHRoZSBmZW5jaW5nIHdhcyBzb3J0ZWQgdGhlIHN3aXRjaCB3YXMgc3VycHJpc2luZ2x5IGVh
c3kgYW5kIGZvciB0aGUKbW9zdCBwYXJ0IGp1c3QgcmVtb3ZpbmcgdGhlIHR0bSBjb2RlLgoKU2ln
bmVkLW9mZi1ieTogR2VyZCBIb2ZmbWFubiA8a3JheGVsQHJlZGhhdC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oICAgIHwgIDUyICstLS0KIGRyaXZlcnMvZ3B1
L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYyAgICB8ICAyMCArLQogZHJpdmVycy9ncHUvZHJtL3Zp
cnRpby92aXJ0Z3B1X2dlbS5jICAgIHwgIDE2ICstCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3Zp
cnRncHVfaW9jdGwuYyAgfCAgMTkgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9r
bXMuYyAgICB8ICAgOSAtCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMg
fCAxNTIgKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUu
YyAgfCAgMzcgLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfdHRtLmMgICAgfCAz
MDQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRn
cHVfdnEuYyAgICAgfCAgMjQgKy0KIGRyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZyAgICAg
ICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZSAgICAgICAgIHwg
ICAyICstCiAxMSBmaWxlcyBjaGFuZ2VkLCA4NCBpbnNlcnRpb25zKCspLCA1NTMgZGVsZXRpb25z
KC0pCiBkZWxldGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0
bS5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oIGIv
ZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCmluZGV4IDkyNTY1MjJhMmY0ZS4u
Y2NmNmU4NDRmMDNmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVf
ZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5oCkBAIC0zMywx
NCArMzMsMTEgQEAKIAogI2luY2x1ZGUgPGRybS9kcm1QLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9n
ZW0uaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2dlbV9zaG1lbV9oZWxwZXIuaD4KICNpbmNsdWRlIDxk
cm0vZHJtX2F0b21pYy5oPgogI2luY2x1ZGUgPGRybS9kcm1fZW5jb2Rlci5oPgogI2luY2x1ZGUg
PGRybS9kcm1fZmJfaGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9wcm9iZV9oZWxwZXIuaD4K
LSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9ib19hcGkuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9i
b19kcml2ZXIuaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9wbGFjZW1lbnQuaD4KLSNpbmNsdWRl
IDxkcm0vdHRtL3R0bV9tb2R1bGUuaD4KIAogI2RlZmluZSBEUklWRVJfTkFNRSAidmlydGlvX2dw
dSIKICNkZWZpbmUgRFJJVkVSX0RFU0MgInZpcnRpbyBHUFUiCkBAIC02OCwyMSArNjUsMTYgQEAg
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0X3BhcmFtcyB7CiB9OwogCiBzdHJ1Y3QgdmlydGlvX2dw
dV9vYmplY3QgewotCXN0cnVjdCBkcm1fZ2VtX29iamVjdCBnZW1fYmFzZTsKKwlzdHJ1Y3QgZHJt
X2dlbV9zaG1lbV9vYmplY3QgYmFzZTsKIAl1aW50MzJfdCBod19yZXNfaGFuZGxlOwogCiAJc3Ry
dWN0IHNnX3RhYmxlICpwYWdlczsKIAl1aW50MzJfdCBtYXBwZWQ7Ci0Jdm9pZCAqdm1hcDsKIAli
b29sIGR1bWI7Ci0Jc3RydWN0IHR0bV9wbGFjZSAgICAgICAgICAgICAgICBwbGFjZW1lbnRfY29k
ZTsKLQlzdHJ1Y3QgdHRtX3BsYWNlbWVudAkJcGxhY2VtZW50OwotCXN0cnVjdCB0dG1fYnVmZmVy
X29iamVjdAl0Ym87Ci0Jc3RydWN0IHR0bV9ib19rbWFwX29iagkJa21hcDsKIAlib29sIGNyZWF0
ZWQ7CiB9OwogI2RlZmluZSBnZW1fdG9fdmlydGlvX2dwdV9vYmooZ29iaikgXAotCWNvbnRhaW5l
cl9vZigoZ29iaiksIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCwgZ2VtX2Jhc2UpCisJY29udGFp
bmVyX29mKChnb2JqKSwgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCBiYXNlLmJhc2UpCiAKIHN0
cnVjdCB2aXJ0aW9fZ3B1X3ZidWZmZXI7CiBzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2U7CkBAIC0x
NDcsMTAgKzEzOSw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVyIHsKICNkZWZpbmUg
dG9fdmlydGlvX2dwdV9mcmFtZWJ1ZmZlcih4KSBcCiAJY29udGFpbmVyX29mKHgsIHN0cnVjdCB2
aXJ0aW9fZ3B1X2ZyYW1lYnVmZmVyLCBiYXNlKQogCi1zdHJ1Y3QgdmlydGlvX2dwdV9tbWFuIHsK
LQlzdHJ1Y3QgdHRtX2JvX2RldmljZQkJYmRldjsKLX07Ci0KIHN0cnVjdCB2aXJ0aW9fZ3B1X3F1
ZXVlIHsKIAlzdHJ1Y3QgdmlydHF1ZXVlICp2cTsKIAlzcGlubG9ja190IHFsb2NrOwpAQCAtMTc5
LDggKzE2Nyw2IEBAIHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSB7CiAKIAlzdHJ1Y3QgdmlydGlv
X2RldmljZSAqdmRldjsKIAotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gbW1hbjsKLQogCXN0cnVj
dCB2aXJ0aW9fZ3B1X291dHB1dCBvdXRwdXRzW1ZJUlRJT19HUFVfTUFYX1NDQU5PVVRTXTsKIAl1
aW50MzJfdCBudW1fc2Nhbm91dHM7CiAKQEAgLTMzNiwxMSArMzIyLDYgQEAgc3RydWN0IGRybV9w
bGFuZSAqdmlydGlvX2dwdV9wbGFuZV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdk
ZXYsCiAJCQkJCWVudW0gZHJtX3BsYW5lX3R5cGUgdHlwZSwKIAkJCQkJaW50IGluZGV4KTsKIAot
LyogdmlydGlvX2dwdV90dG0uYyAqLwotaW50IHZpcnRpb19ncHVfdHRtX2luaXQoc3RydWN0IHZp
cnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci12b2lkIHZpcnRpb19ncHVfdHRtX2Zpbmkoc3RydWN0
IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7Ci1pbnQgdmlydGlvX2dwdV9tbWFwKHN0cnVjdCBm
aWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSk7Ci0KIC8qIHZpcnRpb19ncHVf
ZmVuY2UuYyAqLwogYm9vbCB2aXJ0aW9fZmVuY2Vfc2lnbmFsZWQoc3RydWN0IGRtYV9mZW5jZSAq
Zik7CiBzdHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqdmlydGlvX2dwdV9mZW5jZV9hbGxvYygKQEAg
LTM1Miw1OCArMzMzLDQ3IEBAIHZvaWQgdmlydGlvX2dwdV9mZW5jZV9ldmVudF9wcm9jZXNzKHN0
cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmRldiwKIAkJCQkgICAgdTY0IGxhc3Rfc2VxKTsKIAog
LyogdmlydGlvX2dwdV9vYmplY3QgKi8KK3N0cnVjdCBkcm1fZ2VtX29iamVjdCAqdmlydGlvX2dw
dV9jcmVhdGVfb2JqZWN0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJCQlzaXplX3Qgc2l6
ZSk7CiBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0aW9fZ3B1X2Rldmlj
ZSAqdmdkZXYsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgKnBhcmFt
cywKIAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICoqYm9fcHRyLAogCQkJICAgICBz
dHJ1Y3QgdmlydGlvX2dwdV9mZW5jZSAqZmVuY2UpOwotdm9pZCB2aXJ0aW9fZ3B1X29iamVjdF9r
dW5tYXAoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyk7Ci1pbnQgdmlydGlvX2dwdV9vYmpl
Y3Rfa21hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKTsKLWludCB2aXJ0aW9fZ3B1X29i
amVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2LAotCQkJCSAg
IHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwotdm9pZCB2aXJ0aW9fZ3B1X29iamVjdF9m
cmVlX3NnX3RhYmxlKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pOwogCiAvKiB2aXJ0Z3B1
X3ByaW1lLmMgKi8KLXN0cnVjdCBzZ190YWJsZSAqdmlydGdwdV9nZW1fcHJpbWVfZ2V0X3NnX3Rh
YmxlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKTsKIHN0cnVjdCBkcm1fZ2VtX29iamVjdCAq
dmlydGdwdV9nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlKAogCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCwKIAlzdHJ1Y3Qgc2dfdGFibGUg
KnNndCk7Ci12b2lkICp2aXJ0Z3B1X2dlbV9wcmltZV92bWFwKHN0cnVjdCBkcm1fZ2VtX29iamVj
dCAqb2JqKTsKLXZvaWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29i
amVjdCAqb2JqLCB2b2lkICp2YWRkcik7Ci1pbnQgdmlydGdwdV9nZW1fcHJpbWVfbW1hcChzdHJ1
Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1h
KTsKIAogc3RhdGljIGlubGluZSBzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QqCiB2aXJ0aW9fZ3B1
X29iamVjdF9yZWYoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibykKIHsKLQl0dG1fYm9fZ2V0
KCZiby0+dGJvKTsKKwlkcm1fZ2VtX29iamVjdF9nZXQoJmJvLT5iYXNlLmJhc2UpOwogCXJldHVy
biBibzsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X3VucmVmKHN0
cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqKmJvKQogewotCXN0cnVjdCB0dG1fYnVmZmVyX29iamVj
dCAqdGJvOwotCiAJaWYgKCgqYm8pID09IE5VTEwpCiAJCXJldHVybjsKLQl0Ym8gPSAmKCgqYm8p
LT50Ym8pOwotCXR0bV9ib19wdXQodGJvKTsKKwlkcm1fZ2VtX29iamVjdF9wdXQoJigqYm8pLT5i
YXNlLmJhc2UpOwogCSpibyA9IE5VTEw7CiB9CiAKIHN0YXRpYyBpbmxpbmUgdTY0IHZpcnRpb19n
cHVfb2JqZWN0X21tYXBfb2Zmc2V0KHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCiB7Ci0J
cmV0dXJuIGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmYm8tPnRiby52bWFfbm9kZSk7CisJcmV0
dXJuIGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmYm8tPmJhc2UuYmFzZS52bWFfbm9kZSk7CiB9
CiAKIHN0YXRpYyBpbmxpbmUgaW50IHZpcnRpb19ncHVfb2JqZWN0X3Jlc2VydmUoc3RydWN0IHZp
cnRpb19ncHVfb2JqZWN0ICpibykKIHsKIAlpbnQgcjsKIAotCXIgPSByZXNlcnZhdGlvbl9vYmpl
Y3RfbG9ja19pbnRlcnJ1cHRpYmxlKGJvLT5nZW1fYmFzZS5yZXN2LCBOVUxMKTsKKwlyID0gcmVz
ZXJ2YXRpb25fb2JqZWN0X2xvY2tfaW50ZXJydXB0aWJsZShiby0+YmFzZS5iYXNlLnJlc3YsIE5V
TEwpOwogCWlmICh1bmxpa2VseShyICE9IDApKSB7CiAJCWlmIChyICE9IC1FUkVTVEFSVFNZUykg
ewogCQkJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2ID0KLQkJCQliby0+Z2VtX2Jhc2Uu
ZGV2LT5kZXZfcHJpdmF0ZTsKKwkJCQliby0+YmFzZS5iYXNlLmRldi0+ZGV2X3ByaXZhdGU7CiAJ
CQlkZXZfZXJyKHFkZXYtPmRldiwgIiVwIHJlc2VydmUgZmFpbGVkXG4iLCBibyk7CiAJCX0KIAkJ
cmV0dXJuIHI7CkBAIC00MTMsNyArMzgzLDcgQEAgc3RhdGljIGlubGluZSBpbnQgdmlydGlvX2dw
dV9vYmplY3RfcmVzZXJ2ZShzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvKQogCiBzdGF0aWMg
aW5saW5lIHZvaWQgdmlydGlvX2dwdV9vYmplY3RfdW5yZXNlcnZlKHN0cnVjdCB2aXJ0aW9fZ3B1
X29iamVjdCAqYm8pCiB7Ci0JcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhiby0+Z2VtX2Jhc2Uu
cmVzdik7CisJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhiby0+YmFzZS5iYXNlLnJlc3YpOwog
fQogCiAvKiB2aXJnbCBkZWJ1ZnMgKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vdmlydGdwdV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuYwpp
bmRleCBjNTA4Njg3NTMxMzIuLjZkNzA5MjI1MWQyMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmly
dGdwdV9kcnYuYwpAQCAtMTgyLDE3ICsxODIsNyBAQCBNT0RVTEVfQVVUSE9SKCJEYXZlIEFpcmxp
ZSA8YWlybGllZEByZWRoYXQuY29tPiIpOwogTU9EVUxFX0FVVEhPUigiR2VyZCBIb2ZmbWFubiA8
a3JheGVsQHJlZGhhdC5jb20+Iik7CiBNT0RVTEVfQVVUSE9SKCJBbG9uIExldnkiKTsKIAotc3Rh
dGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgdmlydGlvX2dwdV9kcml2ZXJfZm9wcyA9
IHsKLQkub3duZXIgPSBUSElTX01PRFVMRSwKLQkub3BlbiA9IGRybV9vcGVuLAotCS5tbWFwID0g
dmlydGlvX2dwdV9tbWFwLAotCS5wb2xsID0gZHJtX3BvbGwsCi0JLnJlYWQgPSBkcm1fcmVhZCwK
LQkudW5sb2NrZWRfaW9jdGwJPSBkcm1faW9jdGwsCi0JLnJlbGVhc2UgPSBkcm1fcmVsZWFzZSwK
LQkuY29tcGF0X2lvY3RsID0gZHJtX2NvbXBhdF9pb2N0bCwKLQkubGxzZWVrID0gbm9vcF9sbHNl
ZWssCi19OworREVGSU5FX0RSTV9HRU1fU0hNRU1fRk9QUyh2aXJ0aW9fZ3B1X2RyaXZlcl9mb3Bz
KTsKIAogc3RhdGljIHN0cnVjdCBkcm1fZHJpdmVyIGRyaXZlciA9IHsKIAkuZHJpdmVyX2ZlYXR1
cmVzID0gRFJJVkVSX01PREVTRVQgfCBEUklWRVJfR0VNIHwgRFJJVkVSX1BSSU1FIHwgRFJJVkVS
X1JFTkRFUiB8IERSSVZFUl9BVE9NSUMsCkBAIC0yMDksMTUgKzE5OSw5IEBAIHN0YXRpYyBzdHJ1
Y3QgZHJtX2RyaXZlciBkcml2ZXIgPSB7CiAJLnByaW1lX2ZkX3RvX2hhbmRsZSA9IGRybV9nZW1f
cHJpbWVfZmRfdG9faGFuZGxlLAogCS5nZW1fcHJpbWVfZXhwb3J0ID0gZHJtX2dlbV9wcmltZV9l
eHBvcnQsCiAJLmdlbV9wcmltZV9pbXBvcnQgPSBkcm1fZ2VtX3ByaW1lX2ltcG9ydCwKLQkuZ2Vt
X3ByaW1lX2dldF9zZ190YWJsZSA9IHZpcnRncHVfZ2VtX3ByaW1lX2dldF9zZ190YWJsZSwKIAku
Z2VtX3ByaW1lX2ltcG9ydF9zZ190YWJsZSA9IHZpcnRncHVfZ2VtX3ByaW1lX2ltcG9ydF9zZ190
YWJsZSwKLQkuZ2VtX3ByaW1lX3ZtYXAgPSB2aXJ0Z3B1X2dlbV9wcmltZV92bWFwLAotCS5nZW1f
cHJpbWVfdnVubWFwID0gdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwLAotCS5nZW1fcHJpbWVfbW1h
cCA9IHZpcnRncHVfZ2VtX3ByaW1lX21tYXAsCiAKLQkuZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2Vk
ID0gdmlydGlvX2dwdV9nZW1fZnJlZV9vYmplY3QsCi0JLmdlbV9vcGVuX29iamVjdCA9IHZpcnRp
b19ncHVfZ2VtX29iamVjdF9vcGVuLAotCS5nZW1fY2xvc2Vfb2JqZWN0ID0gdmlydGlvX2dwdV9n
ZW1fb2JqZWN0X2Nsb3NlLAorCS5nZW1fY3JlYXRlX29iamVjdCA9IHZpcnRpb19ncHVfY3JlYXRl
X29iamVjdCwKIAkuZm9wcyA9ICZ2aXJ0aW9fZ3B1X2RyaXZlcl9mb3BzLAogCiAJLmlvY3RscyA9
IHZpcnRpb19ncHVfaW9jdGxzLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92
aXJ0Z3B1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2dlbS5jCmluZGV4
IDljOWFkM2IxNDA4MC4uNzYyZDk4NTg3ZDNhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
dmlydGlvL3ZpcnRncHVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1
X2dlbS5jCkBAIC0yNiwxNCArMjYsNiBAQAogI2luY2x1ZGUgPGRybS9kcm1QLmg+CiAjaW5jbHVk
ZSAidmlydGdwdV9kcnYuaCIKIAotdm9pZCB2aXJ0aW9fZ3B1X2dlbV9mcmVlX29iamVjdChzdHJ1
Y3QgZHJtX2dlbV9vYmplY3QgKmdlbV9vYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0
ICpvYmogPSBnZW1fdG9fdmlydGlvX2dwdV9vYmooZ2VtX29iaik7Ci0KLQlpZiAob2JqKQotCQl2
aXJ0aW9fZ3B1X29iamVjdF91bnJlZigmb2JqKTsKLX0KLQogc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0KgogdmlydGlvX2dwdV9hbGxvY19vYmplY3Qoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJ
CXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgKnBhcmFtcywKQEAgLTY0LDE2ICs1Niwx
NiBAQCBpbnQgdmlydGlvX2dwdV9nZW1fY3JlYXRlKHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKIAlp
ZiAoSVNfRVJSKG9iaikpCiAJCXJldHVybiBQVFJfRVJSKG9iaik7CiAKLQlyZXQgPSBkcm1fZ2Vt
X2hhbmRsZV9jcmVhdGUoZmlsZSwgJm9iai0+Z2VtX2Jhc2UsICZoYW5kbGUpOworCXJldCA9IGRy
bV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlLCAmb2JqLT5iYXNlLmJhc2UsICZoYW5kbGUpOwogCWlm
IChyZXQpIHsKLQkJZHJtX2dlbV9vYmplY3RfcmVsZWFzZSgmb2JqLT5nZW1fYmFzZSk7CisJCWRy
bV9nZW1fb2JqZWN0X3JlbGVhc2UoJm9iai0+YmFzZS5iYXNlKTsKIAkJcmV0dXJuIHJldDsKIAl9
CiAKLQkqb2JqX3AgPSAmb2JqLT5nZW1fYmFzZTsKKwkqb2JqX3AgPSAmb2JqLT5iYXNlLmJhc2U7
CiAKIAkvKiBkcm9wIHJlZmVyZW5jZSBmcm9tIGFsbG9jYXRlIC0gaGFuZGxlIGhvbGRzIGl0IG5v
dyAqLwotCWRybV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZCgmb2JqLT5nZW1fYmFzZSk7CisJZHJt
X2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZvYmotPmJhc2UuYmFzZSk7CiAKIAkqaGFuZGxlX3Ag
PSBoYW5kbGU7CiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfaW9jdGwuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9pb2N0bC5j
CmluZGV4IGI4ODhhZmNkYTdlOC4uYzY3Y2YyZWYzZTFjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfaW9jdGwuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfaW9jdGwuYwpAQCAtMjcsNyArMjcsNiBAQAogCiAjaW5jbHVkZSA8ZHJtL2RybVAu
aD4KICNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4KLSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9l
eGVjYnVmX3V0aWwuaD4KICNpbmNsdWRlIDxsaW51eC9zeW5jX2ZpbGUuaD4KIAogI2luY2x1ZGUg
InZpcnRncHVfZHJ2LmgiCkBAIC0yNzcsNyArMjc2LDcgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1
X3Jlc291cmNlX2NyZWF0ZV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRh
LAogCWRtYV9mZW5jZV9wdXQoJmZlbmNlLT5mKTsKIAlpZiAoSVNfRVJSKHFvYmopKQogCQlyZXR1
cm4gUFRSX0VSUihxb2JqKTsKLQlvYmogPSAmcW9iai0+Z2VtX2Jhc2U7CisJb2JqID0gJnFvYmot
PmJhc2UuYmFzZTsKIAogCXJldCA9IGRybV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlX3ByaXYsIG9i
aiwgJmhhbmRsZSk7CiAJaWYgKHJldCkgewpAQCAtMzA0LDcgKzMwMyw3IEBAIHN0YXRpYyBpbnQg
dmlydGlvX2dwdV9yZXNvdXJjZV9pbmZvX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZv
aWQgKmRhdGEsCiAKIAlxb2JqID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKGdvYmopOwogCi0Jcmkt
PnNpemUgPSBxb2JqLT5nZW1fYmFzZS5zaXplOworCXJpLT5zaXplID0gcW9iai0+YmFzZS5iYXNl
LnNpemU7CiAJcmktPnJlc19oYW5kbGUgPSBxb2JqLT5od19yZXNfaGFuZGxlOwogCWRybV9nZW1f
b2JqZWN0X3B1dF91bmxvY2tlZChnb2JqKTsKIAlyZXR1cm4gMDsKQEAgLTMxNyw3ICszMTYsNiBA
QCBzdGF0aWMgaW50IHZpcnRpb19ncHVfdHJhbnNmZXJfZnJvbV9ob3N0X2lvY3RsKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsCiAJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9IGRldi0+
ZGV2X3ByaXZhdGU7CiAJc3RydWN0IHZpcnRpb19ncHVfZnByaXYgKnZmcHJpdiA9IGZpbGUtPmRy
aXZlcl9wcml2OwogCXN0cnVjdCBkcm1fdmlydGdwdV8zZF90cmFuc2Zlcl9mcm9tX2hvc3QgKmFy
Z3MgPSBkYXRhOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7IHRydWUsIGZhbHNl
IH07CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnb2JqID0gTlVMTDsKIAlzdHJ1Y3QgdmlydGlv
X2dwdV9vYmplY3QgKnFvYmogPSBOVUxMOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5j
ZTsKQEAgLTMzOCwxMCArMzM2LDYgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1X3RyYW5zZmVyX2Zy
b21faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmIChyZXQpCiAJCWdvdG8g
b3V0OwogCi0JcmV0ID0gdHRtX2JvX3ZhbGlkYXRlKCZxb2JqLT50Ym8sICZxb2JqLT5wbGFjZW1l
bnQsICZjdHgpOwotCWlmICh1bmxpa2VseShyZXQpKQotCQlnb3RvIG91dF91bnJlczsKLQogCWNv
bnZlcnRfdG9faHdfYm94KCZib3gsICZhcmdzLT5ib3gpOwogCiAJZmVuY2UgPSB2aXJ0aW9fZ3B1
X2ZlbmNlX2FsbG9jKHZnZGV2KTsKQEAgLTM1Myw3ICszNDcsNyBAQCBzdGF0aWMgaW50IHZpcnRp
b19ncHVfdHJhbnNmZXJfZnJvbV9ob3N0X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJ
CSh2Z2RldiwgcW9iai0+aHdfcmVzX2hhbmRsZSwKIAkJIHZmcHJpdi0+Y3R4X2lkLCBvZmZzZXQs
IGFyZ3MtPmxldmVsLAogCQkgJmJveCwgZmVuY2UpOwotCXJlc2VydmF0aW9uX29iamVjdF9hZGRf
ZXhjbF9mZW5jZShxb2JqLT50Ym8ucmVzdiwKKwlyZXNlcnZhdGlvbl9vYmplY3RfYWRkX2V4Y2xf
ZmVuY2UocW9iai0+YmFzZS5iYXNlLnJlc3YsCiAJCQkJCSAgJmZlbmNlLT5mKTsKIAogCWRtYV9m
ZW5jZV9wdXQoJmZlbmNlLT5mKTsKQEAgLTM3MCw3ICszNjQsNiBAQCBzdGF0aWMgaW50IHZpcnRp
b19ncHVfdHJhbnNmZXJfdG9faG9zdF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lk
ICpkYXRhLAogCXN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYgPSBkZXYtPmRldl9wcml2
YXRlOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X2Zwcml2ICp2ZnByaXYgPSBmaWxlLT5kcml2ZXJfcHJp
djsKIAlzdHJ1Y3QgZHJtX3ZpcnRncHVfM2RfdHJhbnNmZXJfdG9faG9zdCAqYXJncyA9IGRhdGE7
Ci0Jc3RydWN0IHR0bV9vcGVyYXRpb25fY3R4IGN0eCA9IHsgdHJ1ZSwgZmFsc2UgfTsKIAlzdHJ1
Y3QgZHJtX2dlbV9vYmplY3QgKmdvYmogPSBOVUxMOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dCAqcW9iaiA9IE5VTEw7CiAJc3RydWN0IHZpcnRpb19ncHVfZmVuY2UgKmZlbmNlOwpAQCAtMzg4
LDEwICszODEsNiBAQCBzdGF0aWMgaW50IHZpcnRpb19ncHVfdHJhbnNmZXJfdG9faG9zdF9pb2N0
bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCWlmIChyZXQpCiAJCWdvdG8g
b3V0OwogCi0JcmV0ID0gdHRtX2JvX3ZhbGlkYXRlKCZxb2JqLT50Ym8sICZxb2JqLT5wbGFjZW1l
bnQsICZjdHgpOwotCWlmICh1bmxpa2VseShyZXQpKQotCQlnb3RvIG91dF91bnJlczsKLQogCWNv
bnZlcnRfdG9faHdfYm94KCZib3gsICZhcmdzLT5ib3gpOwogCWlmICghdmdkZXYtPmhhc192aXJn
bF8zZCkgewogCQl2aXJ0aW9fZ3B1X2NtZF90cmFuc2Zlcl90b19ob3N0XzJkCkBAIC00MDcsNyAr
Mzk2LDcgQEAgc3RhdGljIGludCB2aXJ0aW9fZ3B1X3RyYW5zZmVyX3RvX2hvc3RfaW9jdGwoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJCSh2Z2RldiwgcW9iaiwKIAkJCSB2
ZnByaXYgPyB2ZnByaXYtPmN0eF9pZCA6IDAsIG9mZnNldCwKIAkJCSBhcmdzLT5sZXZlbCwgJmJv
eCwgZmVuY2UpOwotCQlyZXNlcnZhdGlvbl9vYmplY3RfYWRkX2V4Y2xfZmVuY2UocW9iai0+dGJv
LnJlc3YsCisJCXJlc2VydmF0aW9uX29iamVjdF9hZGRfZXhjbF9mZW5jZShxb2JqLT5iYXNlLmJh
c2UucmVzdiwKIAkJCQkJCSAgJmZlbmNlLT5mKTsKIAkJZG1hX2ZlbmNlX3B1dCgmZmVuY2UtPmYp
OwogCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYyBi
L2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYwppbmRleCA4NGI2YTZiZjAwYzYu
LjBiYzZhYmFlYWZjYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1
X2ttcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV9rbXMuYwpAQCAtMTcx
LDEyICsxNzEsNiBAQCBpbnQgdmlydGlvX2dwdV9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
CiAJCWdvdG8gZXJyX3ZidWZzOwogCX0KIAotCXJldCA9IHZpcnRpb19ncHVfdHRtX2luaXQodmdk
ZXYpOwotCWlmIChyZXQpIHsKLQkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gaW5pdCB0dG0gJWRcbiIs
IHJldCk7Ci0JCWdvdG8gZXJyX3R0bTsKLQl9Ci0KIAkvKiBnZXQgZGlzcGxheSBpbmZvICovCiAJ
dmlydGlvX2NyZWFkKHZnZGV2LT52ZGV2LCBzdHJ1Y3QgdmlydGlvX2dwdV9jb25maWcsCiAJCSAg
ICAgbnVtX3NjYW5vdXRzLCAmbnVtX3NjYW5vdXRzKTsKQEAgLTIwOCw4ICsyMDIsNiBAQCBpbnQg
dmlydGlvX2dwdV9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJcmV0dXJuIDA7CiAKIGVy
cl9zY2Fub3V0czoKLQl2aXJ0aW9fZ3B1X3R0bV9maW5pKHZnZGV2KTsKLWVycl90dG06CiAJdmly
dGlvX2dwdV9mcmVlX3ZidWZzKHZnZGV2KTsKIGVycl92YnVmczoKIAl2Z2Rldi0+dmRldi0+Y29u
ZmlnLT5kZWxfdnFzKHZnZGV2LT52ZGV2KTsKQEAgLTI0MCw3ICsyMzIsNiBAQCB2b2lkIHZpcnRp
b19ncHVfZGVpbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJdmdkZXYtPnZkZXYtPmNvbmZp
Zy0+ZGVsX3Zxcyh2Z2Rldi0+dmRldik7CiAKIAl2aXJ0aW9fZ3B1X21vZGVzZXRfZmluaSh2Z2Rl
dik7Ci0JdmlydGlvX2dwdV90dG1fZmluaSh2Z2Rldik7CiAJdmlydGlvX2dwdV9mcmVlX3ZidWZz
KHZnZGV2KTsKIAl2aXJ0aW9fZ3B1X2NsZWFudXBfY2FwX2NhY2hlKHZnZGV2KTsKIAlrZnJlZSh2
Z2Rldi0+Y2Fwc2V0cyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRn
cHVfb2JqZWN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfb2JqZWN0LmMKaW5k
ZXggNDYxZjE1ZjI2NTE3Li5kMGUzMjhkYjBhNTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vdmlydGdwdV9vYmplY3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3Zp
cnRncHVfb2JqZWN0LmMKQEAgLTIzLDggKzIzLDYgQEAKICAqIFdJVEggVEhFIFNPRlRXQVJFIE9S
IFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgogICovCiAKLSNpbmNs
dWRlIDxkcm0vdHRtL3R0bV9leGVjYnVmX3V0aWwuaD4KLQogI2luY2x1ZGUgInZpcnRncHVfZHJ2
LmgiCiAKIHN0YXRpYyBpbnQgdmlydGlvX2dwdV9yZXNvdXJjZV9pZF9nZXQoc3RydWN0IHZpcnRp
b19ncHVfZGV2aWNlICp2Z2RldiwKQEAgLTU3LDM5ICs1NSw0NCBAQCBzdGF0aWMgdm9pZCB2aXJ0
aW9fZ3B1X3Jlc291cmNlX2lkX3B1dChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LCB1
aW50MzJfdAogI2VuZGlmCiB9CiAKLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfdHRtX2JvX2Rlc3Ry
b3koc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICp0Ym8pCitzdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1
X2ZyZWVfb2JqZWN0KHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKQogewotCXN0cnVjdCB2aXJ0
aW9fZ3B1X29iamVjdCAqYm87Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldjsKLQot
CWJvID0gY29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCB0Ym8pOwot
CXZnZGV2ID0gKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqKWJvLT5nZW1fYmFzZS5kZXYtPmRl
dl9wcml2YXRlOworCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8gPSBnZW1fdG9fdmlydGlv
X2dwdV9vYmoob2JqKTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2ID0gYm8tPmJh
c2UuYmFzZS5kZXYtPmRldl9wcml2YXRlOwogCisJaWYgKGJvLT5wYWdlcykKKwkJdmlydGlvX2dw
dV9vYmplY3RfZGV0YWNoKHZnZGV2LCBibyk7CiAJaWYgKGJvLT5jcmVhdGVkKQogCQl2aXJ0aW9f
Z3B1X2NtZF91bnJlZl9yZXNvdXJjZSh2Z2RldiwgYm8tPmh3X3Jlc19oYW5kbGUpOwotCWlmIChi
by0+cGFnZXMpCi0JCXZpcnRpb19ncHVfb2JqZWN0X2ZyZWVfc2dfdGFibGUoYm8pOwotCWlmIChi
by0+dm1hcCkKLQkJdmlydGlvX2dwdV9vYmplY3Rfa3VubWFwKGJvKTsKLQlkcm1fZ2VtX29iamVj
dF9yZWxlYXNlKCZiby0+Z2VtX2Jhc2UpOwogCXZpcnRpb19ncHVfcmVzb3VyY2VfaWRfcHV0KHZn
ZGV2LCBiby0+aHdfcmVzX2hhbmRsZSk7Ci0Ja2ZyZWUoYm8pOworCisJZHJtX2dlbV9zaG1lbV9m
cmVlX29iamVjdChvYmopOwogfQogCi1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X2luaXRfdHRtX3Bs
YWNlbWVudChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKnZnYm8pCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IGRybV9nZW1fb2JqZWN0X2Z1bmNzIHYzZF9nZW1fZnVuY3MgPSB7CisJLmZyZWUgPSB2aXJ0
aW9fZ3B1X2ZyZWVfb2JqZWN0LAorCS5vcGVuID0gdmlydGlvX2dwdV9nZW1fb2JqZWN0X29wZW4s
CisJLmNsb3NlID0gdmlydGlvX2dwdV9nZW1fb2JqZWN0X2Nsb3NlLAorCisJLnByaW50X2luZm8g
PSBkcm1fZ2VtX3NobWVtX3ByaW50X2luZm8sCisJLnBpbiA9IGRybV9nZW1fc2htZW1fcGluLAor
CS51bnBpbiA9IGRybV9nZW1fc2htZW1fdW5waW4sCisJLmdldF9zZ190YWJsZSA9IGRybV9nZW1f
c2htZW1fZ2V0X3NnX3RhYmxlLAorCS52bWFwID0gZHJtX2dlbV9zaG1lbV92bWFwLAorCS52dW5t
YXAgPSBkcm1fZ2VtX3NobWVtX3Z1bm1hcCwKKwkudm1fb3BzID0gJmRybV9nZW1fc2htZW1fdm1f
b3BzLAorfTsKKworc3RydWN0IGRybV9nZW1fb2JqZWN0ICp2aXJ0aW9fZ3B1X2NyZWF0ZV9vYmpl
Y3Qoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKKwkJCQkJCXNpemVfdCBzaXplKQogewotCXUzMiBj
ID0gMTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvOwogCi0Jdmdiby0+cGxhY2VtZW50
LnBsYWNlbWVudCA9ICZ2Z2JvLT5wbGFjZW1lbnRfY29kZTsKLQl2Z2JvLT5wbGFjZW1lbnQuYnVz
eV9wbGFjZW1lbnQgPSAmdmdiby0+cGxhY2VtZW50X2NvZGU7Ci0Jdmdiby0+cGxhY2VtZW50X2Nv
ZGUuZnBmbiA9IDA7Ci0Jdmdiby0+cGxhY2VtZW50X2NvZGUubHBmbiA9IDA7Ci0Jdmdiby0+cGxh
Y2VtZW50X2NvZGUuZmxhZ3MgPQotCQlUVE1fUExfTUFTS19DQUNISU5HIHwgVFRNX1BMX0ZMQUdf
VFQgfAotCQlUVE1fUExfRkxBR19OT19FVklDVDsKLQl2Z2JvLT5wbGFjZW1lbnQubnVtX3BsYWNl
bWVudCA9IGM7Ci0Jdmdiby0+cGxhY2VtZW50Lm51bV9idXN5X3BsYWNlbWVudCA9IGM7CisJYm8g
PSBremFsbG9jKHNpemVvZigqYm8pLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWJvKQorCQlyZXR1cm4g
TlVMTDsKIAorCXJldHVybiAmYm8tPmJhc2UuYmFzZTsKIH0KIAogaW50IHZpcnRpb19ncHVfb2Jq
ZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LApAQCAtOTcsMjggKzEw
MCwyMiBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0cnVjdCB2aXJ0aW9fZ3B1X2Rl
dmljZSAqdmdkZXYsCiAJCQkgICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqKmJvX3B0ciwK
IAkJCSAgICAgc3RydWN0IHZpcnRpb19ncHVfZmVuY2UgKmZlbmNlKQogeworCXN0cnVjdCBkcm1f
Z2VtX3NobWVtX29iamVjdCAqc2htZW1fb2JqOwogCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAq
Ym87Ci0Jc2l6ZV90IGFjY19zaXplOwogCWludCByZXQ7CiAKIAkqYm9fcHRyID0gTlVMTDsKIAot
CWFjY19zaXplID0gdHRtX2JvX2RtYV9hY2Nfc2l6ZSgmdmdkZXYtPm1tYW4uYmRldiwgcGFyYW1z
LT5zaXplLAotCQkJCSAgICAgICBzaXplb2Yoc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0KSk7CisJ
cGFyYW1zLT5zaXplID0gcm91bmR1cChwYXJhbXMtPnNpemUsIFBBR0VfU0laRSk7CisJc2htZW1f
b2JqID0gZHJtX2dlbV9zaG1lbV9jcmVhdGUodmdkZXYtPmRkZXYsIHBhcmFtcy0+c2l6ZSk7CisJ
aWYgKElTX0VSUihzaG1lbV9vYmopKQorCQlyZXR1cm4gUFRSX0VSUihzaG1lbV9vYmopOworCWJv
ID0gZ2VtX3RvX3ZpcnRpb19ncHVfb2JqKCZzaG1lbV9vYmotPmJhc2UpOworCWJvLT5iYXNlLmJh
c2UuZnVuY3MgPSAmdjNkX2dlbV9mdW5jczsKIAotCWJvID0ga3phbGxvYyhzaXplb2Yoc3RydWN0
IHZpcnRpb19ncHVfb2JqZWN0KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKGJvID09IE5VTEwpCi0JCXJl
dHVybiAtRU5PTUVNOwogCXJldCA9IHZpcnRpb19ncHVfcmVzb3VyY2VfaWRfZ2V0KHZnZGV2LCAm
Ym8tPmh3X3Jlc19oYW5kbGUpOwogCWlmIChyZXQgPCAwKSB7Ci0JCWtmcmVlKGJvKTsKLQkJcmV0
dXJuIHJldDsKLQl9Ci0JcGFyYW1zLT5zaXplID0gcm91bmR1cChwYXJhbXMtPnNpemUsIFBBR0Vf
U0laRSk7Ci0JcmV0ID0gZHJtX2dlbV9vYmplY3RfaW5pdCh2Z2Rldi0+ZGRldiwgJmJvLT5nZW1f
YmFzZSwgcGFyYW1zLT5zaXplKTsKLQlpZiAocmV0ICE9IDApIHsKLQkJdmlydGlvX2dwdV9yZXNv
dXJjZV9pZF9wdXQodmdkZXYsIGJvLT5od19yZXNfaGFuZGxlKTsKLQkJa2ZyZWUoYm8pOworCQlk
cm1fZ2VtX3NobWVtX2ZyZWVfb2JqZWN0KCZzaG1lbV9vYmotPmJhc2UpOwogCQlyZXR1cm4gcmV0
OwogCX0KIAliby0+ZHVtYiA9IHBhcmFtcy0+ZHVtYjsKQEAgLTEyOSwxOSArMTI2LDkgQEAgaW50
IHZpcnRpb19ncHVfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2
LAogCQl2aXJ0aW9fZ3B1X2NtZF9jcmVhdGVfcmVzb3VyY2UodmdkZXYsIGJvLCBwYXJhbXMsIGZl
bmNlKTsKIAl9CiAKLQl2aXJ0aW9fZ3B1X2luaXRfdHRtX3BsYWNlbWVudChibyk7Ci0JcmV0ID0g
dHRtX2JvX2luaXQoJnZnZGV2LT5tbWFuLmJkZXYsICZiby0+dGJvLCBwYXJhbXMtPnNpemUsCi0J
CQkgIHR0bV9ib190eXBlX2RldmljZSwgJmJvLT5wbGFjZW1lbnQsIDAsCi0JCQkgIHRydWUsIGFj
Y19zaXplLCBOVUxMLAotCQkJICBiby0+Z2VtX2Jhc2UucmVzdiwKLQkJCSAgJnZpcnRpb19ncHVf
dHRtX2JvX2Rlc3Ryb3kpOwotCS8qIHR0bV9ib19pbml0IGZhaWx1cmUgd2lsbCBjYWxsIHRoZSBk
ZXN0cm95ICovCi0JaWYgKHJldCAhPSAwKQotCQlyZXR1cm4gcmV0OwotCiAJaWYgKGZlbmNlKSB7
CiAJCXN0cnVjdCB2aXJ0aW9fZ3B1X2ZlbmNlX2RyaXZlciAqZHJ2ID0gJnZnZGV2LT5mZW5jZV9k
cnY7Ci0JCXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqID0gJmJvLT5nZW1fYmFzZTsKKwkJc3Ry
dWN0IGRybV9nZW1fb2JqZWN0ICpvYmogPSAmYm8tPmJhc2UuYmFzZTsKIAkJc3RydWN0IHd3X2Fj
cXVpcmVfY3R4IHRpY2tldDsKIAkJdW5zaWduZWQgbG9uZyBpcnFfZmxhZ3M7CiAKQEAgLTE1OSw2
NSArMTQ2LDEyIEBAIGludCB2aXJ0aW9fZ3B1X29iamVjdF9jcmVhdGUoc3RydWN0IHZpcnRpb19n
cHVfZGV2aWNlICp2Z2RldiwKIAkJZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKG9iaik7CiAJ
fQogCisJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfYXR0YWNoKHZnZGV2LCBibywgTlVMTCk7CisJ
aWYgKHJldCAhPSAwKSB7CisJCXZpcnRpb19ncHVfZnJlZV9vYmplY3QoJnNobWVtX29iai0+YmFz
ZSk7CisJCXJldHVybiByZXQ7CisJfQorCiAJKmJvX3B0ciA9IGJvOwogCXJldHVybiAwOwogfQot
Ci12b2lkIHZpcnRpb19ncHVfb2JqZWN0X2t1bm1hcChzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3Qg
KmJvKQotewotCWJvLT52bWFwID0gTlVMTDsKLQl0dG1fYm9fa3VubWFwKCZiby0+a21hcCk7Ci19
Ci0KLWludCB2aXJ0aW9fZ3B1X29iamVjdF9rbWFwKHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAq
Ym8pCi17Ci0JYm9vbCBpc19pb21lbTsKLQlpbnQgcjsKLQotCVdBUk5fT04oYm8tPnZtYXApOwot
Ci0JciA9IHR0bV9ib19rbWFwKCZiby0+dGJvLCAwLCBiby0+dGJvLm51bV9wYWdlcywgJmJvLT5r
bWFwKTsKLQlpZiAocikKLQkJcmV0dXJuIHI7Ci0JYm8tPnZtYXAgPSB0dG1fa21hcF9vYmpfdmly
dHVhbCgmYm8tPmttYXAsICZpc19pb21lbSk7Ci0JcmV0dXJuIDA7Ci19Ci0KLWludCB2aXJ0aW9f
Z3B1X29iamVjdF9nZXRfc2dfdGFibGUoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICpxZGV2LAot
CQkJCSAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8pCi17Ci0JaW50IHJldDsKLQlzdHJ1
Y3QgcGFnZSAqKnBhZ2VzID0gYm8tPnRiby50dG0tPnBhZ2VzOwotCWludCBucl9wYWdlcyA9IGJv
LT50Ym8ubnVtX3BhZ2VzOwotCXN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCBjdHggPSB7Ci0JCS5p
bnRlcnJ1cHRpYmxlID0gZmFsc2UsCi0JCS5ub193YWl0X2dwdSA9IGZhbHNlCi0JfTsKLQotCS8q
IHd0ZiBzd2FwcGluZyAqLwotCWlmIChiby0+cGFnZXMpCi0JCXJldHVybiAwOwotCi0JaWYgKGJv
LT50Ym8udHRtLT5zdGF0ZSA9PSB0dF91bnBvcHVsYXRlZCkKLQkJYm8tPnRiby50dG0tPmJkZXYt
PmRyaXZlci0+dHRtX3R0X3BvcHVsYXRlKGJvLT50Ym8udHRtLCAmY3R4KTsKLQliby0+cGFnZXMg
PSBrbWFsbG9jKHNpemVvZihzdHJ1Y3Qgc2dfdGFibGUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWJv
LT5wYWdlcykKLQkJZ290byBvdXQ7Ci0KLQlyZXQgPSBzZ19hbGxvY190YWJsZV9mcm9tX3BhZ2Vz
KGJvLT5wYWdlcywgcGFnZXMsIG5yX3BhZ2VzLCAwLAotCQkJCQlucl9wYWdlcyA8PCBQQUdFX1NI
SUZULCBHRlBfS0VSTkVMKTsKLQlpZiAocmV0KQotCQlnb3RvIG91dDsKLQlyZXR1cm4gMDsKLW91
dDoKLQlrZnJlZShiby0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci0JcmV0dXJuIC1FTk9N
RU07Ci19Ci0KLXZvaWQgdmlydGlvX2dwdV9vYmplY3RfZnJlZV9zZ190YWJsZShzdHJ1Y3Qgdmly
dGlvX2dwdV9vYmplY3QgKmJvKQotewotCXNnX2ZyZWVfdGFibGUoYm8tPnBhZ2VzKTsKLQlrZnJl
ZShiby0+cGFnZXMpOwotCWJvLT5wYWdlcyA9IE5VTEw7Ci19CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV9wcmltZS5jCmluZGV4IDhmYmY3MWJkMGM1ZS4uMThhMTU1Y2QwOGQ1IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYwpAQCAtMjgsNDYgKzI4LDkgQEAKICAqIGRl
dmljZSB0aGF0IG1pZ2h0IHNoYXJlIGJ1ZmZlcnMgd2l0aCB2aXJ0Z3B1CiAgKi8KIAotc3RydWN0
IHNnX3RhYmxlICp2aXJ0Z3B1X2dlbV9wcmltZV9nZXRfc2dfdGFibGUoc3RydWN0IGRybV9nZW1f
b2JqZWN0ICpvYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192
aXJ0aW9fZ3B1X29iaihvYmopOwotCi0JaWYgKCFiby0+dGJvLnR0bS0+cGFnZXMgfHwgIWJvLT50
Ym8udHRtLT5udW1fcGFnZXMpCi0JCS8qIHNob3VsZCBub3QgaGFwcGVuICovCi0JCXJldHVybiBF
UlJfUFRSKC1FSU5WQUwpOwotCi0JcmV0dXJuIGRybV9wcmltZV9wYWdlc190b19zZyhiby0+dGJv
LnR0bS0+cGFnZXMsCi0JCQkJICAgICBiby0+dGJvLnR0bS0+bnVtX3BhZ2VzKTsKLX0KLQogc3Ry
dWN0IGRybV9nZW1fb2JqZWN0ICp2aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUoCiAJ
c3RydWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNo
LAogCXN0cnVjdCBzZ190YWJsZSAqdGFibGUpCiB7CiAJcmV0dXJuIEVSUl9QVFIoLUVOT0RFVik7
CiB9Ci0KLXZvaWQgKnZpcnRncHVfZ2VtX3ByaW1lX3ZtYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0
ICpvYmopCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9IGdlbV90b192aXJ0aW9f
Z3B1X29iaihvYmopOwotCWludCByZXQ7Ci0KLQlyZXQgPSB2aXJ0aW9fZ3B1X29iamVjdF9rbWFw
KGJvKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gTlVMTDsKLQlyZXR1cm4gYm8tPnZtYXA7Ci19Ci0K
LXZvaWQgdmlydGdwdV9nZW1fcHJpbWVfdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2Jq
LCB2b2lkICp2YWRkcikKLXsKLQl2aXJ0aW9fZ3B1X29iamVjdF9rdW5tYXAoZ2VtX3RvX3ZpcnRp
b19ncHVfb2JqKG9iaikpOwotfQotCi1pbnQgdmlydGdwdV9nZW1fcHJpbWVfbW1hcChzdHJ1Y3Qg
ZHJtX2dlbV9vYmplY3QgKm9iaiwKLQkJCSAgIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQot
ewotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAqYm8gPSBnZW1fdG9fdmlydGlvX2dwdV9vYmoo
b2JqKTsKLQotCWJvLT5nZW1fYmFzZS52bWFfbm9kZS52bV9ub2RlLnN0YXJ0ID0gYm8tPnRiby52
bWFfbm9kZS52bV9ub2RlLnN0YXJ0OwotCXJldHVybiBkcm1fZ2VtX3ByaW1lX21tYXAob2JqLCB2
bWEpOwotfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5j
IGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3R0bS5jCmRlbGV0ZWQgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAzMDBlZjNhODM1MzguLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL3ZpcnRncHVfdHRtLmMKKysrIC9kZXYvbnVsbApAQCAtMSwzMDQgKzAsMCBA
QAotLyoKLSAqIENvcHlyaWdodCAoQykgMjAxNSBSZWQgSGF0LCBJbmMuCi0gKiBBbGwgUmlnaHRz
IFJlc2VydmVkLgotICoKLSAqIEF1dGhvcnM6Ci0gKiAgICBEYXZlIEFpcmxpZQotICogICAgQWxv
biBMZXZ5Ci0gKgotICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFy
Z2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBh
bmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCi0gKiB0
byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0
aG91dCBsaW1pdGF0aW9uCi0gKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJn
ZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKLSAqIGFuZC9vciBzZWxsIGNvcGll
cyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQotICog
U29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcg
Y29uZGl0aW9uczoKLSAqCi0gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBw
ZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgotICogYWxsIGNvcGllcyBvciBz
dWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCi0gKgotICogVEhFIFNPRlRXQVJF
IElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJF
U1MgT1IKLSAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJB
TlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAotICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCi0gKiBUSEUgQ09Q
WVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERB
TUFHRVMgT1IKLSAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09O
VFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAotICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4g
Q09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCi0gKiBPVEhFUiBERUFM
SU5HUyBJTiBUSEUgU09GVFdBUkUuCi0gKi8KLQotI2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2Fw
aS5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX2JvX2RyaXZlci5oPgotI2luY2x1ZGUgPGRybS90
dG0vdHRtX3BsYWNlbWVudC5oPgotI2luY2x1ZGUgPGRybS90dG0vdHRtX3BhZ2VfYWxsb2MuaD4K
LSNpbmNsdWRlIDxkcm0vdHRtL3R0bV9tb2R1bGUuaD4KLSNpbmNsdWRlIDxkcm0vZHJtUC5oPgot
I2luY2x1ZGUgPGRybS9kcm0uaD4KLSNpbmNsdWRlIDxkcm0vdmlydGdwdV9kcm0uaD4KLSNpbmNs
dWRlICJ2aXJ0Z3B1X2Rydi5oIgotCi0jaW5jbHVkZSA8bGludXgvZGVsYXkuaD4KLQotc3RhdGlj
IHN0cnVjdAotdmlydGlvX2dwdV9kZXZpY2UgKnZpcnRpb19ncHVfZ2V0X3ZnZGV2KHN0cnVjdCB0
dG1fYm9fZGV2aWNlICpiZGV2KQotewotCXN0cnVjdCB2aXJ0aW9fZ3B1X21tYW4gKm1tYW47Ci0J
c3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldjsKLQotCW1tYW4gPSBjb250YWluZXJfb2Yo
YmRldiwgc3RydWN0IHZpcnRpb19ncHVfbW1hbiwgYmRldik7Ci0JdmdkZXYgPSBjb250YWluZXJf
b2YobW1hbiwgc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlLCBtbWFuKTsKLQlyZXR1cm4gdmdkZXY7
Ci19Ci0KLWludCB2aXJ0aW9fZ3B1X21tYXAoc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9h
cmVhX3N0cnVjdCAqdm1hKQotewotCXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2OwotCXN0cnVj
dCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXY7Ci0JaW50IHI7Ci0KLQlmaWxlX3ByaXYgPSBmaWxw
LT5wcml2YXRlX2RhdGE7Ci0JdmdkZXYgPSBmaWxlX3ByaXYtPm1pbm9yLT5kZXYtPmRldl9wcml2
YXRlOwotCWlmICh2Z2RldiA9PSBOVUxMKSB7Ci0JCURSTV9FUlJPUigKLQkJICJmaWxwLT5wcml2
YXRlX2RhdGEtPm1pbm9yLT5kZXYtPmRldl9wcml2YXRlID09IE5VTExcbiIpOwotCQlyZXR1cm4g
LUVJTlZBTDsKLQl9Ci0JciA9IHR0bV9ib19tbWFwKGZpbHAsIHZtYSwgJnZnZGV2LT5tbWFuLmJk
ZXYpOwotCi0JcmV0dXJuIHI7Ci19Ci0KLXN0YXRpYyBpbnQgdmlydGlvX2dwdV9pbnZhbGlkYXRl
X2NhY2hlcyhzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJCQkJdWludDMyX3QgZmxhZ3Mp
Ci17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgdHRtX2JvX21hbl9nZXRfbm9kZShzdHJ1
Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCSAgICAgICBzdHJ1Y3QgdHRtX2J1ZmZl
cl9vYmplY3QgKmJvLAotCQkJICAgICAgIGNvbnN0IHN0cnVjdCB0dG1fcGxhY2UgKnBsYWNlLAot
CQkJICAgICAgIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQotewotCW1lbS0+bW1fbm9kZSA9ICh2
b2lkICopMTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9wdXRfbm9k
ZShzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCQlzdHJ1Y3QgdHRtX21lbV9y
ZWcgKm1lbSkKLXsKLQltZW0tPm1tX25vZGUgPSAodm9pZCAqKU5VTEw7Ci19Ci0KLXN0YXRpYyBp
bnQgdHRtX2JvX21hbl9pbml0KHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuLAotCQkJ
ICAgdW5zaWduZWQgbG9uZyBwX3NpemUpCi17Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQg
dHRtX2JvX21hbl90YWtlZG93bihzdHJ1Y3QgdHRtX21lbV90eXBlX21hbmFnZXIgKm1hbikKLXsK
LQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgdHRtX2JvX21hbl9kZWJ1ZyhzdHJ1Y3QgdHRt
X21lbV90eXBlX21hbmFnZXIgKm1hbiwKLQkJCSAgICAgc3RydWN0IGRybV9wcmludGVyICpwcmlu
dGVyKQotewotfQotCi1zdGF0aWMgY29uc3Qgc3RydWN0IHR0bV9tZW1fdHlwZV9tYW5hZ2VyX2Z1
bmMgdmlydGlvX2dwdV9ib19tYW5hZ2VyX2Z1bmMgPSB7Ci0JLmluaXQgPSB0dG1fYm9fbWFuX2lu
aXQsCi0JLnRha2Vkb3duID0gdHRtX2JvX21hbl90YWtlZG93biwKLQkuZ2V0X25vZGUgPSB0dG1f
Ym9fbWFuX2dldF9ub2RlLAotCS5wdXRfbm9kZSA9IHR0bV9ib19tYW5fcHV0X25vZGUsCi0JLmRl
YnVnID0gdHRtX2JvX21hbl9kZWJ1ZwotfTsKLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X2luaXRf
bWVtX3R5cGUoc3RydWN0IHR0bV9ib19kZXZpY2UgKmJkZXYsIHVpbnQzMl90IHR5cGUsCi0JCQkJ
ICAgIHN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuKQotewotCXN3aXRjaCAodHlwZSkg
ewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQkJLyogU3lzdGVtIG1lbW9yeSAqLwotCQltYW4tPmZs
YWdzID0gVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGlu
ZyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BM
X0ZMQUdfQ0FDSEVEOwotCQlicmVhazsKLQljYXNlIFRUTV9QTF9UVDoKLQkJbWFuLT5mdW5jID0g
JnZpcnRpb19ncHVfYm9fbWFuYWdlcl9mdW5jOwotCQltYW4tPmZsYWdzID0gVFRNX01FTVRZUEVf
RkxBR19NQVBQQUJMRTsKLQkJbWFuLT5hdmFpbGFibGVfY2FjaGluZyA9IFRUTV9QTF9NQVNLX0NB
Q0hJTkc7Ci0JCW1hbi0+ZGVmYXVsdF9jYWNoaW5nID0gVFRNX1BMX0ZMQUdfQ0FDSEVEOwotCQli
cmVhazsKLQlkZWZhdWx0OgotCQlEUk1fRVJST1IoIlVuc3VwcG9ydGVkIG1lbW9yeSB0eXBlICV1
XG4iLCAodW5zaWduZWQgaW50KXR5cGUpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmV0dXJu
IDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfZXZpY3RfZmxhZ3Moc3RydWN0IHR0bV9i
dWZmZXJfb2JqZWN0ICpibywKLQkJCQlzdHJ1Y3QgdHRtX3BsYWNlbWVudCAqcGxhY2VtZW50KQot
ewotCXN0YXRpYyBjb25zdCBzdHJ1Y3QgdHRtX3BsYWNlIHBsYWNlbWVudHMgPSB7Ci0JCS5mcGZu
ICA9IDAsCi0JCS5scGZuICA9IDAsCi0JCS5mbGFncyA9IFRUTV9QTF9NQVNLX0NBQ0hJTkcgfCBU
VE1fUExfRkxBR19TWVNURU0sCi0JfTsKLQotCXBsYWNlbWVudC0+cGxhY2VtZW50ID0gJnBsYWNl
bWVudHM7Ci0JcGxhY2VtZW50LT5idXN5X3BsYWNlbWVudCA9ICZwbGFjZW1lbnRzOwotCXBsYWNl
bWVudC0+bnVtX3BsYWNlbWVudCA9IDE7Ci0JcGxhY2VtZW50LT5udW1fYnVzeV9wbGFjZW1lbnQg
PSAxOwotfQotCi1zdGF0aWMgaW50IHZpcnRpb19ncHVfdmVyaWZ5X2FjY2VzcyhzdHJ1Y3QgdHRt
X2J1ZmZlcl9vYmplY3QgKmJvLAotCQkJCSAgICBzdHJ1Y3QgZmlsZSAqZmlscCkKLXsKLQlyZXR1
cm4gMDsKLX0KLQotc3RhdGljIGludCB2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fcmVzZXJ2ZShzdHJ1
Y3QgdHRtX2JvX2RldmljZSAqYmRldiwKLQkJCQkJIHN0cnVjdCB0dG1fbWVtX3JlZyAqbWVtKQot
ewotCXN0cnVjdCB0dG1fbWVtX3R5cGVfbWFuYWdlciAqbWFuID0gJmJkZXYtPm1hblttZW0tPm1l
bV90eXBlXTsKLQotCW1lbS0+YnVzLmFkZHIgPSBOVUxMOwotCW1lbS0+YnVzLm9mZnNldCA9IDA7
Ci0JbWVtLT5idXMuc2l6ZSA9IG1lbS0+bnVtX3BhZ2VzIDw8IFBBR0VfU0hJRlQ7Ci0JbWVtLT5i
dXMuYmFzZSA9IDA7Ci0JbWVtLT5idXMuaXNfaW9tZW0gPSBmYWxzZTsKLQlpZiAoIShtYW4tPmZs
YWdzICYgVFRNX01FTVRZUEVfRkxBR19NQVBQQUJMRSkpCi0JCXJldHVybiAtRUlOVkFMOwotCXN3
aXRjaCAobWVtLT5tZW1fdHlwZSkgewotCWNhc2UgVFRNX1BMX1NZU1RFTToKLQljYXNlIFRUTV9Q
TF9UVDoKLQkJLyogc3lzdGVtIG1lbW9yeSAqLwotCQlyZXR1cm4gMDsKLQlkZWZhdWx0OgotCQly
ZXR1cm4gLUVJTlZBTDsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19n
cHVfdHRtX2lvX21lbV9mcmVlKHN0cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2LAotCQkJCSAgICAg
ICBzdHJ1Y3QgdHRtX21lbV9yZWcgKm1lbSkKLXsKLX0KLQotLyoKLSAqIFRUTSBiYWNrZW5kIGZ1
bmN0aW9ucy4KLSAqLwotc3RydWN0IHZpcnRpb19ncHVfdHRtX3R0IHsKLQlzdHJ1Y3QgdHRtX2Rt
YV90dAkJdHRtOwotCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdCAgICAgICAgKm9iajsKLX07Ci0K
LXN0YXRpYyBpbnQgdmlydGlvX2dwdV90dG1fdHRfYmluZChzdHJ1Y3QgdHRtX3R0ICp0dG0sCi0J
CQkJICBzdHJ1Y3QgdHRtX21lbV9yZWcgKmJvX21lbSkKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90
dG1fdHQgKmd0dCA9Ci0JCWNvbnRhaW5lcl9vZih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90
dCwgdHRtLnR0bSk7Ci0Jc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9Ci0JCXZpcnRp
b19ncHVfZ2V0X3ZnZGV2KGd0dC0+b2JqLT50Ym8uYmRldik7Ci0KLQl2aXJ0aW9fZ3B1X29iamVj
dF9hdHRhY2godmdkZXYsIGd0dC0+b2JqLCBOVUxMKTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGlj
IGludCB2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQoc3RydWN0IHR0bV90dCAqdHRtKQotewotCXN0
cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCAqZ3R0ID0KLQkJY29udGFpbmVyX29mKHR0bSwgc3RydWN0
IHZpcnRpb19ncHVfdHRtX3R0LCB0dG0udHRtKTsKLQlzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2Ug
KnZnZGV2ID0KLQkJdmlydGlvX2dwdV9nZXRfdmdkZXYoZ3R0LT5vYmotPnRiby5iZGV2KTsKLQot
CXZpcnRpb19ncHVfb2JqZWN0X2RldGFjaCh2Z2RldiwgZ3R0LT5vYmopOwotCXJldHVybiAwOwot
fQotCi1zdGF0aWMgdm9pZCB2aXJ0aW9fZ3B1X3R0bV90dF9kZXN0cm95KHN0cnVjdCB0dG1fdHQg
KnR0bSkKLXsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dCA9Ci0JCWNvbnRhaW5lcl9v
Zih0dG0sIHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCwgdHRtLnR0bSk7Ci0KLQl0dG1fZG1hX3R0
X2ZpbmkoJmd0dC0+dHRtKTsKLQlrZnJlZShndHQpOwotfQotCi1zdGF0aWMgc3RydWN0IHR0bV9i
YWNrZW5kX2Z1bmMgdmlydGlvX2dwdV90dF9mdW5jID0gewotCS5iaW5kID0gJnZpcnRpb19ncHVf
dHRtX3R0X2JpbmQsCi0JLnVuYmluZCA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF91bmJpbmQsCi0JLmRl
c3Ryb3kgPSAmdmlydGlvX2dwdV90dG1fdHRfZGVzdHJveSwKLX07Ci0KLXN0YXRpYyBzdHJ1Y3Qg
dHRtX3R0ICp2aXJ0aW9fZ3B1X3R0bV90dF9jcmVhdGUoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0
ICpibywKLQkJCQkJICAgICAgIHVpbnQzMl90IHBhZ2VfZmxhZ3MpCi17Ci0Jc3RydWN0IHZpcnRp
b19ncHVfZGV2aWNlICp2Z2RldjsKLQlzdHJ1Y3QgdmlydGlvX2dwdV90dG1fdHQgKmd0dDsKLQot
CXZnZGV2ID0gdmlydGlvX2dwdV9nZXRfdmdkZXYoYm8tPmJkZXYpOwotCWd0dCA9IGt6YWxsb2Mo
c2l6ZW9mKHN0cnVjdCB2aXJ0aW9fZ3B1X3R0bV90dCksIEdGUF9LRVJORUwpOwotCWlmIChndHQg
PT0gTlVMTCkKLQkJcmV0dXJuIE5VTEw7Ci0JZ3R0LT50dG0udHRtLmZ1bmMgPSAmdmlydGlvX2dw
dV90dF9mdW5jOwotCWd0dC0+b2JqID0gY29udGFpbmVyX29mKGJvLCBzdHJ1Y3QgdmlydGlvX2dw
dV9vYmplY3QsIHRibyk7Ci0JaWYgKHR0bV9kbWFfdHRfaW5pdCgmZ3R0LT50dG0sIGJvLCBwYWdl
X2ZsYWdzKSkgewotCQlrZnJlZShndHQpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0JcmV0dXJuICZn
dHQtPnR0bS50dG07Ci19Ci0KLXN0YXRpYyB2b2lkIHZpcnRpb19ncHVfYm9fc3dhcF9ub3RpZnko
c3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICp0Ym8pCi17Ci0Jc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0ICpibzsKLQotCWJvID0gY29udGFpbmVyX29mKHRibywgc3RydWN0IHZpcnRpb19ncHVfb2Jq
ZWN0LCB0Ym8pOwotCi0JaWYgKGJvLT5wYWdlcykKLQkJdmlydGlvX2dwdV9vYmplY3RfZnJlZV9z
Z190YWJsZShibyk7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgdHRtX2JvX2RyaXZlciB2aXJ0aW9fZ3B1
X2JvX2RyaXZlciA9IHsKLQkudHRtX3R0X2NyZWF0ZSA9ICZ2aXJ0aW9fZ3B1X3R0bV90dF9jcmVh
dGUsCi0JLmludmFsaWRhdGVfY2FjaGVzID0gJnZpcnRpb19ncHVfaW52YWxpZGF0ZV9jYWNoZXMs
Ci0JLmluaXRfbWVtX3R5cGUgPSAmdmlydGlvX2dwdV9pbml0X21lbV90eXBlLAotCS5ldmljdGlv
bl92YWx1YWJsZSA9IHR0bV9ib19ldmljdGlvbl92YWx1YWJsZSwKLQkuZXZpY3RfZmxhZ3MgPSAm
dmlydGlvX2dwdV9ldmljdF9mbGFncywKLQkudmVyaWZ5X2FjY2VzcyA9ICZ2aXJ0aW9fZ3B1X3Zl
cmlmeV9hY2Nlc3MsCi0JLmlvX21lbV9yZXNlcnZlID0gJnZpcnRpb19ncHVfdHRtX2lvX21lbV9y
ZXNlcnZlLAotCS5pb19tZW1fZnJlZSA9ICZ2aXJ0aW9fZ3B1X3R0bV9pb19tZW1fZnJlZSwKLQku
c3dhcF9ub3RpZnkgPSAmdmlydGlvX2dwdV9ib19zd2FwX25vdGlmeSwKLX07Ci0KLWludCB2aXJ0
aW9fZ3B1X3R0bV9pbml0KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYpCi17Ci0JaW50
IHI7Ci0KLQkvKiBObyBvdGhlcnMgdXNlciBvZiBhZGRyZXNzIHNwYWNlIHNvIHNldCBpdCB0byAw
ICovCi0JciA9IHR0bV9ib19kZXZpY2VfaW5pdCgmdmdkZXYtPm1tYW4uYmRldiwKLQkJCSAgICAg
ICAmdmlydGlvX2dwdV9ib19kcml2ZXIsCi0JCQkgICAgICAgdmdkZXYtPmRkZXYtPmFub25faW5v
ZGUtPmlfbWFwcGluZywKLQkJCSAgICAgICBmYWxzZSk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9S
KCJmYWlsZWQgaW5pdGlhbGl6aW5nIGJ1ZmZlciBvYmplY3QgZHJpdmVyKCVkKS5cbiIsIHIpOwot
CQlnb3RvIGVycl9kZXZfaW5pdDsKLQl9Ci0KLQlyID0gdHRtX2JvX2luaXRfbW0oJnZnZGV2LT5t
bWFuLmJkZXYsIFRUTV9QTF9UVCwgMCk7Ci0JaWYgKHIpIHsKLQkJRFJNX0VSUk9SKCJGYWlsZWQg
aW5pdGlhbGl6aW5nIEdUVCBoZWFwLlxuIik7Ci0JCWdvdG8gZXJyX21tX2luaXQ7Ci0JfQotCXJl
dHVybiAwOwotCi1lcnJfbW1faW5pdDoKLQl0dG1fYm9fZGV2aWNlX3JlbGVhc2UoJnZnZGV2LT5t
bWFuLmJkZXYpOwotZXJyX2Rldl9pbml0OgotCXJldHVybiByOwotfQotCi12b2lkIHZpcnRpb19n
cHVfdHRtX2Zpbmkoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldikKLXsKLQl0dG1fYm9f
ZGV2aWNlX3JlbGVhc2UoJnZnZGV2LT5tbWFuLmJkZXYpOwotCURSTV9JTkZPKCJ2aXJ0aW9fZ3B1
OiB0dG0gZmluYWxpemVkXG4iKTsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vdmlydGdwdV92cS5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMKaW5k
ZXggNmMxYTkwNzE3NTM1Li45MTM0OTA5MWFmNDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vdmlydGdwdV92cS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdw
dV92cS5jCkBAIC05NjQsMTcgKzk2NCwyMSBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfYXR0YWNo
KHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiAJYm9vbCB1c2VfZG1hX2FwaSA9ICF2
aXJ0aW9faGFzX2lvbW11X3F1aXJrKHZnZGV2LT52ZGV2KTsKIAlzdHJ1Y3QgdmlydGlvX2dwdV9t
ZW1fZW50cnkgKmVudHM7CiAJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZzsKLQlpbnQgc2ksIG5lbnRz
OworCWludCBzaSwgbmVudHMsIHJldDsKIAogCWlmIChXQVJOX09OX09OQ0UoIW9iai0+Y3JlYXRl
ZCkpCiAJCXJldHVybiAtRUlOVkFMOworCWlmIChXQVJOX09OX09OQ0Uob2JqLT5wYWdlcykpCisJ
CXJldHVybiAtRUlOVkFMOwogCi0JaWYgKCFvYmotPnBhZ2VzKSB7Ci0JCWludCByZXQ7CisJcmV0
ID0gZHJtX2dlbV9zaG1lbV9waW4oJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAocmV0IDwgMCkKKwkJ
cmV0dXJuIC1FSU5WQUw7CiAKLQkJcmV0ID0gdmlydGlvX2dwdV9vYmplY3RfZ2V0X3NnX3RhYmxl
KHZnZGV2LCBvYmopOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKKwlvYmotPnBhZ2VzID0g
ZHJtX2dlbV9zaG1lbV9nZXRfc2dfdGFibGUoJm9iai0+YmFzZS5iYXNlKTsKKwlpZiAob2JqLT5w
YWdlcyA9PSBOVUxMKSB7CisJCWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsK
KwkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCiAJaWYgKHVzZV9kbWFfYXBpKSB7CkBAIC0xMDEzLDYg
KzEwMTcsOSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFjaChzdHJ1Y3QgdmlydGlvX2dw
dV9kZXZpY2UgKnZnZGV2LAogewogCWJvb2wgdXNlX2RtYV9hcGkgPSAhdmlydGlvX2hhc19pb21t
dV9xdWlyayh2Z2Rldi0+dmRldik7CiAKKwlpZiAoV0FSTl9PTl9PTkNFKCFvYmotPnBhZ2VzKSkK
KwkJcmV0dXJuOworCiAJaWYgKHVzZV9kbWFfYXBpICYmIG9iai0+bWFwcGVkKSB7CiAJCXN0cnVj
dCB2aXJ0aW9fZ3B1X2ZlbmNlICpmZW5jZSA9IHZpcnRpb19ncHVfZmVuY2VfYWxsb2ModmdkZXYp
OwogCQkvKiBkZXRhY2ggYmFja2luZyBhbmQgd2FpdCBmb3IgdGhlIGhvc3QgcHJvY2VzcyBpdCAu
Li4gKi8KQEAgLTEwMjgsNiArMTAzNSwxMSBAQCB2b2lkIHZpcnRpb19ncHVfb2JqZWN0X2RldGFj
aChzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgKnZnZGV2LAogCX0gZWxzZSB7CiAJCXZpcnRpb19n
cHVfY21kX3Jlc291cmNlX2ludmFsX2JhY2tpbmcodmdkZXYsIG9iai0+aHdfcmVzX2hhbmRsZSwg
TlVMTCk7CiAJfQorCisJc2dfZnJlZV90YWJsZShvYmotPnBhZ2VzKTsKKwlvYmotPnBhZ2VzID0g
TlVMTDsKKworCWRybV9nZW1fc2htZW1fdW5waW4oJm9iai0+YmFzZS5iYXNlKTsKIH0KIAogdm9p
ZCB2aXJ0aW9fZ3B1X2N1cnNvcl9waW5nKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYs
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL0tjb25maWcgYi9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL0tjb25maWcKaW5kZXggYmEzNmU5MzNiYjQ5Li5lZmYzMDQ3MDUyZDQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vS2NvbmZpZworKysgYi9kcml2ZXJzL2dw
dS9kcm0vdmlydGlvL0tjb25maWcKQEAgLTMsNyArMyw3IEBAIGNvbmZpZyBEUk1fVklSVElPX0dQ
VQogCXRyaXN0YXRlICJWaXJ0aW8gR1BVIGRyaXZlciIKIAlkZXBlbmRzIG9uIERSTSAmJiBWSVJU
SU8gJiYgTU1VCiAJc2VsZWN0IERSTV9LTVNfSEVMUEVSCi0Jc2VsZWN0IERSTV9UVE0KKwlzZWxl
Y3QgRFJNX0dFTV9TSE1FTV9IRUxQRVIKIAloZWxwCiAJICAgVGhpcyBpcyB0aGUgdmlydHVhbCBH
UFUgZHJpdmVyIGZvciB2aXJ0aW8uICBJdCBjYW4gYmUgdXNlZCB3aXRoCiAJICAgUUVNVSBiYXNl
ZCBWTU1zIChsaWtlIEtWTSBvciBYZW4pLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Zp
cnRpby9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vTWFrZWZpbGUKaW5kZXggNDU4
ZTYwNmE5MzZmLi45MmFhMmIzZDM0OWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0
aW8vTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby9NYWtlZmlsZQpAQCAtNCw3
ICs0LDcgQEAKICMgRGlyZWN0IFJlbmRlcmluZyBJbmZyYXN0cnVjdHVyZSAoRFJJKSBpbiBYRnJl
ZTg2IDQuMS4wIGFuZCBoaWdoZXIuCiAKIHZpcnRpby1ncHUteSA6PSB2aXJ0Z3B1X2Rydi5vIHZp
cnRncHVfa21zLm8gdmlydGdwdV9nZW0ubyBcCi0JdmlydGdwdV9kaXNwbGF5Lm8gdmlydGdwdV92
cS5vIHZpcnRncHVfdHRtLm8gXAorCXZpcnRncHVfZGlzcGxheS5vIHZpcnRncHVfdnEubyBcCiAJ
dmlydGdwdV9mZW5jZS5vIHZpcnRncHVfb2JqZWN0Lm8gdmlydGdwdV9kZWJ1Z2ZzLm8gdmlydGdw
dV9wbGFuZS5vIFwKIAl2aXJ0Z3B1X2lvY3RsLm8gdmlydGdwdV9wcmltZS5vIHZpcnRncHVfdHJh
Y2VfcG9pbnRzLm8KIAotLSAKMi4xOC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9kcmktZGV2ZWw=
