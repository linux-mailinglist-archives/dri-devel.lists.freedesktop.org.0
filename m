Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7D493920D9
	for <lists+dri-devel@lfdr.de>; Mon, 19 Aug 2019 11:59:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B98D36E0F3;
	Mon, 19 Aug 2019 09:59:45 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3339E6E0F4;
 Mon, 19 Aug 2019 09:59:42 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18186722-1500050 
 for multiple; Mon, 19 Aug 2019 10:59:29 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH 1/3] dma-buf: Introduce selftesting framework
Date: Mon, 19 Aug 2019 10:59:26 +0100
Message-Id: <20190819095928.32091-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Tomi Sarvela <tomi.p.sarvela@intel.com>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

SW4gbGlnaHQgb2YgcmVjZW50IHJldmlldyBzbGlwIHVwcywgdGhlIGFic2VuY2Ugb2YgYSBzdWl0
ZSBvZiB0ZXN0cyBmb3IKZG1hLWJ1ZiBiZWNhbWUgYXBwYXJlbnQuIEdpdmVuIHRoZSBjdXJyZW50
IHBsZXRob3JhIG9mIHRlc3RpbmcKZnJhbWV3b3Jrcywgb3B0IGZvciBvbmUgYWxyZWFkeSBpbiB1
c2UgYnkgSW50ZWwncyBDSSBhbmQgc28gYWxsb3cgZWFzeQpob29rIHVwIGludG8gaWd0LgoKV2Ug
aW50cm9kdWNlIGEgbmV3IG1vZHVsZSB0aGF0IHdoZW4gbG9hZGVkIHdpbGwgZXhlY3V0ZSB0aGUg
bGlzdCBvZgpzZWxmdGVzdHMgYW5kIHRoZWlyIHN1YnRlc3QuIFRoZSBuYW1lcyBvZiB0aGUgc2Vs
ZnRlc3RzIGFyZSBwdXQgaW50byB0aGUKbW9kaW5mbyBhcyBwYXJhbWV0ZXJzIHNvIHRoYXQgaWd0
IGNhbiBpZGVudGlmeSBlYWNoLCBhbmQgcnVuIHRoZW0KaW5kZXBlbmRlbnRseSwgcHJpbmNpcGFs
bHkgZm9yIGVhc2Ugb2YgZXJyb3IgcmVwb3J0aW5nLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2ls
c29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwu
dmV0dGVyQGZmd2xsLmNoPgpDYzogVG9taSBTYXJ2ZWxhIDx0b21pLnAuc2FydmVsYUBpbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9kbWEtYnVmL0tjb25maWcgICAgIHwgICA1ICsrCiBkcml2ZXJzL2Rt
YS1idWYvTWFrZWZpbGUgICAgfCAgIDMgKwogZHJpdmVycy9kbWEtYnVmL3NlbGZ0ZXN0LmMgIHwg
MTY3ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9kbWEtYnVm
L3NlbGZ0ZXN0LmggIHwgIDMwICsrKysrKysKIGRyaXZlcnMvZG1hLWJ1Zi9zZWxmdGVzdHMuaCB8
ICAxMiArKysKIDUgZmlsZXMgY2hhbmdlZCwgMjE3IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2Rl
IDEwMDY0NCBkcml2ZXJzL2RtYS1idWYvc2VsZnRlc3QuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRy
aXZlcnMvZG1hLWJ1Zi9zZWxmdGVzdC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9kbWEt
YnVmL3NlbGZ0ZXN0cy5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL0tjb25maWcgYi9k
cml2ZXJzL2RtYS1idWYvS2NvbmZpZwppbmRleCBiNmE5YzJmMWJjNDEuLmEyM2I2NzUyZDExYSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9kbWEtYnVmL0tjb25maWcKKysrIGIvZHJpdmVycy9kbWEtYnVm
L0tjb25maWcKQEAgLTM5LDQgKzM5LDkgQEAgY29uZmlnIFVETUFCVUYKIAkgIEEgZHJpdmVyIHRv
IGxldCB1c2Vyc3BhY2UgdHVybiBtZW1mZCByZWdpb25zIGludG8gZG1hLWJ1ZnMuCiAJICBRZW11
IGNhbiB1c2UgdGhpcyB0byBjcmVhdGUgaG9zdCBkbWFidWZzIGZvciBndWVzdCBmcmFtZWJ1ZmZl
cnMuCiAKK2NvbmZpZyBETUFCVUZfU0VMRlRFU1RTCisJdHJpc3RhdGUgIlNlbGZ0ZXN0cyBmb3Ig
dGhlIGRtYS1idWYgaW50ZXJmYWNlcyIKKwlkZWZhdWx0IG4KKwlkZXBlbmRzIG9uIERNQV9TSEFS
RURfQlVGRkVSCisKIGVuZG1lbnUKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hLWJ1Zi9NYWtlZmls
ZSBiL2RyaXZlcnMvZG1hLWJ1Zi9NYWtlZmlsZQppbmRleCBkY2ZiMDFlN2M2ZjQuLmI1YWUxMjJh
OTM0OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCisrKyBiL2RyaXZlcnMv
ZG1hLWJ1Zi9NYWtlZmlsZQpAQCAtNCwzICs0LDYgQEAgb2JqLXkgOj0gZG1hLWJ1Zi5vIGRtYS1m
ZW5jZS5vIGRtYS1mZW5jZS1hcnJheS5vIGRtYS1mZW5jZS1jaGFpbi5vIFwKIG9iai0kKENPTkZJ
R19TWU5DX0ZJTEUpCQkrPSBzeW5jX2ZpbGUubwogb2JqLSQoQ09ORklHX1NXX1NZTkMpCQkrPSBz
d19zeW5jLm8gc3luY19kZWJ1Zy5vCiBvYmotJChDT05GSUdfVURNQUJVRikJCSs9IHVkbWFidWYu
bworCitkbWFidWZfc2VsZnRlc3RzLXkgOj0gc2VsZnRlc3Qubworb2JqLSQoQ09ORklHX0RNQUJV
Rl9TRUxGVEVTVFMpCSs9IGRtYWJ1Zl9zZWxmdGVzdHMubwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9k
bWEtYnVmL3NlbGZ0ZXN0LmMgYi9kcml2ZXJzL2RtYS1idWYvc2VsZnRlc3QuYwpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmM2MGI2OTQ0YjRiZAotLS0gL2Rldi9udWxs
CisrKyBiL2RyaXZlcnMvZG1hLWJ1Zi9zZWxmdGVzdC5jCkBAIC0wLDAgKzEsMTY3IEBACisvKiBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUICovCisKKy8qCisgKiBDb3B5cmlnaHQgwqkgMjAx
OSBJbnRlbCBDb3Jwb3JhdGlvbgorICovCisKKyNpbmNsdWRlIDxsaW51eC9jb21waWxlci5oPgor
I2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgorI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3NjaGVkL3NpZ25hbC5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKwor
I2luY2x1ZGUgInNlbGZ0ZXN0LmgiCisKK2VudW0geworI2RlZmluZSBzZWxmdGVzdChuLCBmdW5j
KSBfX2lkeF8jI24sCisjaW5jbHVkZSAic2VsZnRlc3RzLmgiCisjdW5kZWYgc2VsZnRlc3QKK307
CisKKyNkZWZpbmUgc2VsZnRlc3QobiwgZikgW19faWR4XyMjbl0gPSB7IC5uYW1lID0gI24sIC5m
dW5jID0gZiB9LAorc3RhdGljIHN0cnVjdCBzZWxmdGVzdCB7CisJYm9vbCBlbmFibGVkOworCWNv
bnN0IGNoYXIgKm5hbWU7CisJaW50ICgqZnVuYykodm9pZCk7Cit9IHNlbGZ0ZXN0c1tdID0gewor
I2luY2x1ZGUgInNlbGZ0ZXN0cy5oIgorfTsKKyN1bmRlZiBzZWxmdGVzdAorCisvKiBFbWJlZCB0
aGUgbGluZSBudW1iZXIgaW50byB0aGUgcGFyYW1ldGVyIG5hbWUgc28gdGhhdCB3ZSBjYW4gb3Jk
ZXIgdGVzdHMgKi8KKyNkZWZpbmUgcGFyYW0obikgX19QQVNURShpZ3RfXywgX19QQVNURShfX1BB
U1RFKF9fTElORV9fLCBfXyksIG4pKQorI2RlZmluZSBzZWxmdGVzdF8wKG4sIGZ1bmMsIGlkKSBc
Cittb2R1bGVfcGFyYW1fbmFtZWQoaWQsIHNlbGZ0ZXN0c1tfX2lkeF8jI25dLmVuYWJsZWQsIGJv
b2wsIDA0MDApOworI2RlZmluZSBzZWxmdGVzdChuLCBmdW5jKSBzZWxmdGVzdF8wKG4sIGZ1bmMs
IHBhcmFtKG4pKQorI2luY2x1ZGUgInNlbGZ0ZXN0cy5oIgorI3VuZGVmIHNlbGZ0ZXN0CisKK2lu
dCBfX3Nhbml0eWNoZWNrX18odm9pZCkKK3sKKwlwcl9kZWJ1ZygiSGVsbG8gV29ybGQhXG4iKTsK
KwlyZXR1cm4gMDsKK30KKworc3RhdGljIGNoYXIgKl9fc3RfZmlsdGVyOworCitzdGF0aWMgYm9v
bCBhcHBseV9zdWJ0ZXN0X2ZpbHRlcihjb25zdCBjaGFyICpjYWxsZXIsIGNvbnN0IGNoYXIgKm5h
bWUpCit7CisJY2hhciAqZmlsdGVyLCAqc2VwLCAqdG9rOworCWJvb2wgcmVzdWx0ID0gdHJ1ZTsK
KworCWZpbHRlciA9IGtzdHJkdXAoX19zdF9maWx0ZXIsIEdGUF9LRVJORUwpOworCWZvciAoc2Vw
ID0gZmlsdGVyOyAodG9rID0gc3Ryc2VwKCZzZXAsICIsIikpOykgeworCQlib29sIGFsbG93ID0g
dHJ1ZTsKKwkJY2hhciAqc2w7CisKKwkJaWYgKCp0b2sgPT0gJyEnKSB7CisJCQlhbGxvdyA9IGZh
bHNlOworCQkJdG9rKys7CisJCX0KKworCQlpZiAoKnRvayA9PSAnXDAnKQorCQkJY29udGludWU7
CisKKwkJc2wgPSBzdHJjaHIodG9rLCAnLycpOworCQlpZiAoc2wpIHsKKwkJCSpzbCsrID0gJ1ww
JzsKKwkJCWlmIChzdHJjbXAodG9rLCBjYWxsZXIpKSB7CisJCQkJaWYgKGFsbG93KQorCQkJCQly
ZXN1bHQgPSBmYWxzZTsKKwkJCQljb250aW51ZTsKKwkJCX0KKwkJCXRvayA9IHNsOworCQl9CisK
KwkJaWYgKHN0cmNtcCh0b2ssIG5hbWUpKSB7CisJCQlpZiAoYWxsb3cpCisJCQkJcmVzdWx0ID0g
ZmFsc2U7CisJCQljb250aW51ZTsKKwkJfQorCisJCXJlc3VsdCA9IGFsbG93OworCQlicmVhazsK
Kwl9CisJa2ZyZWUoZmlsdGVyKTsKKworCXJldHVybiByZXN1bHQ7Cit9CisKK2ludAorX19zdWJ0
ZXN0cyhjb25zdCBjaGFyICpjYWxsZXIsIGNvbnN0IHN0cnVjdCBzdWJ0ZXN0ICpzdCwgaW50IGNv
dW50LCB2b2lkICpkYXRhKQoreworCWludCBlcnI7CisKKwlmb3IgKDsgY291bnQtLTsgc3QrKykg
eworCQljb25kX3Jlc2NoZWQoKTsKKwkJaWYgKHNpZ25hbF9wZW5kaW5nKGN1cnJlbnQpKQorCQkJ
cmV0dXJuIC1FSU5UUjsKKworCQlpZiAoIWFwcGx5X3N1YnRlc3RfZmlsdGVyKGNhbGxlciwgc3Qt
Pm5hbWUpKQorCQkJY29udGludWU7CisKKwkJcHJfaW5mbygiZG1hLWJ1ZjogUnVubmluZyAlcy8l
c1xuIiwgY2FsbGVyLCBzdC0+bmFtZSk7CisKKwkJZXJyID0gc3QtPmZ1bmMoZGF0YSk7CisJCWlm
IChlcnIgJiYgZXJyICE9IC1FSU5UUikgeworCQkJcHJfZXJyKCJkbWEtYnVmLyVzOiAlcyBmYWls
ZWQgd2l0aCBlcnJvciAlZFxuIiwKKwkJCSAgICAgICBjYWxsZXIsIHN0LT5uYW1lLCBlcnIpOwor
CQkJcmV0dXJuIGVycjsKKwkJfQorCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBz
ZXRfZGVmYXVsdF90ZXN0X2FsbChzdHJ1Y3Qgc2VsZnRlc3QgKnN0LCB1bnNpZ25lZCBsb25nIGNv
dW50KQoreworCXVuc2lnbmVkIGxvbmcgaTsKKworCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSsr
KQorCQlpZiAoc3RbaV0uZW5hYmxlZCkKKwkJCXJldHVybjsKKworCWZvciAoaSA9IDA7IGkgPCBj
b3VudDsgaSsrKQorCQlzdFtpXS5lbmFibGVkID0gdHJ1ZTsKK30KKworc3RhdGljIGludCBydW5f
c2VsZnRlc3RzKHN0cnVjdCBzZWxmdGVzdCAqc3QsIHVuc2lnbmVkIGxvbmcgY291bnQpCit7CisJ
aW50IGVyciA9IDA7CisKKwlzZXRfZGVmYXVsdF90ZXN0X2FsbChzdCwgY291bnQpOworCisJLyog
VGVzdHMgYXJlIGxpc3RlZCBpbiBuYXR1cmFsIG9yZGVyIGluIHNlbGZ0ZXN0cy5oICovCisJZm9y
ICg7IGNvdW50LS07IHN0KyspIHsKKwkJaWYgKCFzdC0+ZW5hYmxlZCkKKwkJCWNvbnRpbnVlOwor
CisJCXByX2luZm8oImRtYS1idWY6IFJ1bm5pbmcgJXNcbiIsIHN0LT5uYW1lKTsKKwkJZXJyID0g
c3QtPmZ1bmMoKTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCX0KKworCWlmIChXQVJOKGVyciA+
IDAgfHwgZXJyID09IC1FTk9UVFksCisJCSAiJXMgcmV0dXJuZWQgJWQsIGNvbmZsaWN0aW5nIHdp
dGggc2VsZnRlc3QncyBtYWdpYyB2YWx1ZXMhXG4iLAorCQkgc3QtPm5hbWUsIGVycikpCisJCWVy
ciA9IC0xOworCisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGludCBfX2luaXQgc3RfaW5pdCh2
b2lkKQoreworCXJldHVybiBydW5fc2VsZnRlc3RzKHNlbGZ0ZXN0cywgQVJSQVlfU0laRShzZWxm
dGVzdHMpKTsKK30KKworc3RhdGljIHZvaWQgX19leGl0IHN0X2V4aXQodm9pZCkKK3sKK30KKwor
bW9kdWxlX3BhcmFtX25hbWVkKHN0X2ZpbHRlciwgX19zdF9maWx0ZXIsIGNoYXJwLCAwNDAwKTsK
K21vZHVsZV9pbml0KHN0X2luaXQpOworbW9kdWxlX2V4aXQoc3RfZXhpdCk7CisKK01PRFVMRV9E
RVNDUklQVElPTigiU2VsZi10ZXN0IGhhcm5lc3MgZm9yIGRtYS1idWYiKTsKK01PRFVMRV9MSUNF
TlNFKCJHUEwgYW5kIGFkZGl0aW9uYWwgcmlnaHRzIik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2Rt
YS1idWYvc2VsZnRlc3QuaCBiL2RyaXZlcnMvZG1hLWJ1Zi9zZWxmdGVzdC5oCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNDU3OTNhZmY2MTQyCi0tLSAvZGV2L251bGwK
KysrIGIvZHJpdmVycy9kbWEtYnVmL3NlbGZ0ZXN0LmgKQEAgLTAsMCArMSwzMCBAQAorLy8gU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAorCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTkgSW50
ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaWZuZGVmIF9fU0VMRlRFU1RfSF9fCisjZGVmaW5lIF9f
U0VMRlRFU1RfSF9fCisKKyNpbmNsdWRlIDxsaW51eC9jb21waWxlci5oPgorCisjZGVmaW5lIHNl
bGZ0ZXN0KG5hbWUsIGZ1bmMpIGludCBmdW5jKHZvaWQpOworI2luY2x1ZGUgInNlbGZ0ZXN0cy5o
IgorI3VuZGVmIHNlbGZ0ZXN0CisKK3N0cnVjdCBzdWJ0ZXN0IHsKKwlpbnQgKCpmdW5jKSh2b2lk
ICpkYXRhKTsKKwljb25zdCBjaGFyICpuYW1lOworfTsKKworaW50IF9fc3VidGVzdHMoY29uc3Qg
Y2hhciAqY2FsbGVyLAorCSAgICAgICBjb25zdCBzdHJ1Y3Qgc3VidGVzdCAqc3QsCisJICAgICAg
IGludCBjb3VudCwKKwkgICAgICAgdm9pZCAqZGF0YSk7CisjZGVmaW5lIHN1YnRlc3RzKFQsIGRh
dGEpIFwKKwlfX3N1YnRlc3RzKF9fZnVuY19fLCBULCBBUlJBWV9TSVpFKFQpLCBkYXRhKQorCisj
ZGVmaW5lIFNVQlRFU1QoeCkgeyB4LCAjeCB9CisKKyNlbmRpZiAvKiBfX1NFTEZURVNUX0hfXyAq
LwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL3NlbGZ0ZXN0cy5oIGIvZHJpdmVycy9kbWEt
YnVmL3NlbGZ0ZXN0cy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4u
NDRiNDQzOTBkMjNhCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9kbWEtYnVmL3NlbGZ0ZXN0
cy5oCkBAIC0wLDAgKzEsMTIgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQgKi8K
Ky8qIExpc3QgZWFjaCB1bml0IHRlc3QgYXMgc2VsZnRlc3QobmFtZSwgZnVuY3Rpb24pCisgKgor
ICogVGhlIG5hbWUgaXMgdXNlZCBhcyBib3RoIGFuIGVudW0gYW5kIGV4cGFuZGVkIGFzIHN1YnRl
c3RfX25hbWUgdG8gY3JlYXRlCisgKiBhIG1vZHVsZSBwYXJhbWV0ZXIuIEl0IG11c3QgYmUgdW5p
cXVlIGFuZCBsZWdhbCBmb3IgYSBDIGlkZW50aWZpZXIuCisgKgorICogVGhlIGZ1bmN0aW9uIHNo
b3VsZCBiZSBvZiB0eXBlIGludCBmdW5jdGlvbih2b2lkKS4gSXQgbWF5IGJlIGNvbmRpdGlvbmFs
bHkKKyAqIGNvbXBpbGVkIHVzaW5nICNpZiBJU19FTkFCTEVEKERSTV9JOTE1X1NFTEZURVNUKS4K
KyAqCisgKiBUZXN0cyBhcmUgZXhlY3V0ZWQgaW4gb3JkZXIgYnkgaWd0L2RtYWJ1Zl9zZWxmdGVz
dAorICovCitzZWxmdGVzdChzYW5pdHljaGVjaywgX19zYW5pdHljaGVja19fKSAvKiBrZWVwIGZp
cnN0IChpZ3Qgc2VsZmNoZWNrKSAqLwotLSAKMi4yMy4wLnJjMQoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmkt
ZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
