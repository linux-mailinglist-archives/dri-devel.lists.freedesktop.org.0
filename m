Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 368BC30F8E
	for <lists+dri-devel@lfdr.de>; Fri, 31 May 2019 16:02:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DCDC9895B9;
	Fri, 31 May 2019 14:02:15 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.domeneshop.no (smtp.domeneshop.no
 [IPv6:2a01:5b40:0:3005::1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 622D6893EC;
 Fri, 31 May 2019 14:02:00 +0000 (UTC)
Received: from 211.81-166-168.customer.lyse.net ([81.166.168.211]:52318
 helo=localhost.localdomain)
 by smtp.domeneshop.no with esmtpsa (TLS1.2:ECDHE_RSA_AES_128_CBC_SHA1:128)
 (Exim 4.84_2) (envelope-from <noralf@tronnes.org>)
 id 1hWi6Y-0002XY-7A; Fri, 31 May 2019 16:01:58 +0200
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v7 5/8] drm/fb-helper: Remove drm_fb_helper_connector
Date: Fri, 31 May 2019 16:01:14 +0200
Message-Id: <20190531140117.37751-6-noralf@tronnes.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190531140117.37751-1-noralf@tronnes.org>
References: <20190531140117.37751-1-noralf@tronnes.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; d=tronnes.org; s=ds201810; 
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From;
 bh=tcx8VwKOG8hMkl1aZkF9ScaslhV+/nEkJoBYhKuWHq4=; 
 b=GbSki/1DYaceGNsRT9z0ia0u81VVdrr2pmIMHA42D20FI+ORQt8gZIRG56GUTemKdkzC7Ql3bJJCm19IpLcSwx4NZM6Nq/hVCEqv9HAu6en1Vw0oHwWj535mNmIl3+Flbs4ZboVXviorje6bi4ydOlCLP1jX5piTPcctYDj1lj9fw+LBGi5/0+8a2+wdyrP9u0OCkxzendatFjlf+W0eKvj+KDeI5IaTfOeiy3UmUg2F1qKkME2N/4xkvXWQSAvgnbGNpi5so/dUWshiDxLBozsNCgxDrM4sAkWO+H0QMrdrLatiU2QQjDwCeRXxnzMdoSo7oszVbG1LDIeBQYgQUw==;
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org, Sam Ravnborg <sam@ravnborg.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWxsIGRyaXZlcnMgYWRkIGFsbCB0aGVpciBjb25uZWN0b3JzIHNvIHRoZXJlJ3Mgbm8gbmVlZCB0
byBrZWVwIGFyb3VuZCBhbgphcnJheSBvZiBhdmFpbGFibGUgY29ubmVjdG9ycy4gSW5zdGVhZCB3
ZSBqdXN0IHB1dCB0aGUgdXNlYWJsZSAobm90CndyaXRlYmFjaykgY29ubmVjdG9ycyBpbiBhIHRl
bXBvcmFyeSBhcnJheSB1c2luZwpkcm1fY2xpZW50X2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKCkg
ZXZlcnl0aW1lIHdlIHByb2JlIHRoZSBvdXRwdXRzLgpPdGhlciBwbGFjZXMgd2hlcmUgaXQncyBu
ZWNlc3NhcnkgdG8gbG9vayBhdCB0aGUgY29ubmVjdG9ycywgd2UganVzdAppdGVyYXRlIG92ZXIg
dGhlbSB1c2luZyB0aGUgc2FtZSBpdGVyYXRvciBmdW5jdGlvbi4KClJlbmFtZSBmdW5jdGlvbnMg
d2hpY2ggc2lnbmF0dXJlIGlzIGNoYW5nZWQgc2luY2UgdGhleSB3aWxsIGJlIG1vdmVkIHRvCmRy
bV9jbGllbnQgaW4gYSBsYXRlciBwYXRjaC4KCnY2OiBJbXByb3ZlIGNvbW1pdCBtZXNzYWdlIChT
YW0gUmF2bmJvcmcpCgpTaWduZWQtb2ZmLWJ5OiBOb3JhbGYgVHLDuG5uZXMgPG5vcmFsZkB0cm9u
bmVzLm9yZz4KUmV2aWV3ZWQtYnk6IFNhbSBSYXZuYm9yZyA8c2FtQHJhdm5ib3JnLm9yZz4KLS0t
CiBEb2N1bWVudGF0aW9uL2dwdS90b2RvLnJzdCAgICAgIHwgICA0ICsKIGRyaXZlcnMvZ3B1L2Ry
bS9kcm1fZmJfaGVscGVyLmMgfCA0OTggKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K
IGluY2x1ZGUvZHJtL2RybV9jbGllbnQuaCAgICAgICAgfCAgMTUgKwogaW5jbHVkZS9kcm0vZHJt
X2ZiX2hlbHBlci5oICAgICB8ICA4MCArKy0tLQogNCBmaWxlcyBjaGFuZ2VkLCAxOTMgaW5zZXJ0
aW9ucygrKSwgNDA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZ3B1
L3RvZG8ucnN0IGIvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QKaW5kZXggOWQ0MDM4YzUwMDEz
Li5hYjk2YmEwNjAwYTkgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0Cisr
KyBiL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8ucnN0CkBAIC0yOTIsNiArMjkyLDEwIEBAIGRybV9m
Yl9oZWxwZXIgdGFza3MKIC0gVGhlIG1heCBjb25uZWN0b3IgYXJndW1lbnQgZm9yIGRybV9mYl9o
ZWxwZXJfaW5pdCgpIGFuZAogICBkcm1fZmJfaGVscGVyX2ZiZGV2X3NldHVwKCkgaXNuJ3QgdXNl
ZCBhbnltb3JlIGFuZCBjYW4gYmUgcmVtb3ZlZC4KIAorLSBUaGUgaGVscGVyIGRvZXNuJ3Qga2Vl
cCBhbiBhcnJheSBvZiBjb25uZWN0b3JzIGFueW1vcmUgc28gdGhlc2UgY2FuIGJlCisgIHJlbW92
ZWQ6IGRybV9mYl9oZWxwZXJfc2luZ2xlX2FkZF9hbGxfY29ubmVjdG9ycygpLAorICBkcm1fZmJf
aGVscGVyX2FkZF9vbmVfY29ubmVjdG9yKCkgYW5kIGRybV9mYl9oZWxwZXJfcmVtb3ZlX29uZV9j
b25uZWN0b3IoKS4KKwogQ29yZSByZWZhY3RvcmluZ3MKID09PT09PT09PT09PT09PT09CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fZmJfaGVscGVyLmMgYi9kcml2ZXJzL2dwdS9k
cm0vZHJtX2ZiX2hlbHBlci5jCmluZGV4IDdiMzg4Njc0YTQ1Ni4uYjkzNmRiNjI4MGFjIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2ZiX2hlbHBlci5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9kcm1fZmJfaGVscGVyLmMKQEAgLTk1LDEyICs5NSw2IEBAIHN0YXRpYyBERUZJTkVfTVVU
RVgoa2VybmVsX2ZiX2hlbHBlcl9sb2NrKTsKICAqIFNldHVwIGZiZGV2IGVtdWxhdGlvbiBieSBj
YWxsaW5nIGRybV9mYl9oZWxwZXJfZmJkZXZfc2V0dXAoKSBhbmQgdGVhciBpdAogICogZG93biBi
eSBjYWxsaW5nIGRybV9mYl9oZWxwZXJfZmJkZXZfdGVhcmRvd24oKS4KICAqCi0gKiBEcml2ZXJz
IHRoYXQgbmVlZCB0byBoYW5kbGUgY29ubmVjdG9yIGhvdHBsdWdnaW5nIChlLmcuIGRwIG1zdCkg
Y2FuJ3QgdXNlCi0gKiB0aGUgc2V0dXAgaGVscGVyIGFuZCB3aWxsIG5lZWQgdG8gZG8gdGhlIHdo
b2xlIGZvdXItc3RlcCBzZXR1cCBwcm9jZXNzIHdpdGgKLSAqIGRybV9mYl9oZWxwZXJfcHJlcGFy
ZSgpLCBkcm1fZmJfaGVscGVyX2luaXQoKSwKLSAqIGRybV9mYl9oZWxwZXJfc2luZ2xlX2FkZF9h
bGxfY29ubmVjdG9ycygpLCBlbmFibGUgaG90cGx1Z2dpbmcgYW5kCi0gKiBkcm1fZmJfaGVscGVy
X2luaXRpYWxfY29uZmlnKCkgdG8gYXZvaWQgYSBwb3NzaWJsZSByYWNlIHdpbmRvdy4KLSAqCiAg
KiBBdCBydW50aW1lIGRyaXZlcnMgc2hvdWxkIHJlc3RvcmUgdGhlIGZiZGV2IGNvbnNvbGUgYnkg
dXNpbmcKICAqIGRybV9mYl9oZWxwZXJfbGFzdGNsb3NlKCkgYXMgdGhlaXIgJmRybV9kcml2ZXIu
bGFzdGNsb3NlIGNhbGxiYWNrLgogICogVGhleSBzaG91bGQgYWxzbyBub3RpZnkgdGhlIGZiIGhl
bHBlciBjb2RlIGZyb20gdXBkYXRlcyB0byB0aGUgb3V0cHV0CkBAIC0xMjMsOCArMTE3LDcgQEAg
c3RhdGljIERFRklORV9NVVRFWChrZXJuZWxfZmJfaGVscGVyX2xvY2spOwogICogZW5jb2RlcnMg
YW5kIGNvbm5lY3RvcnMuIFRvIGZpbmlzaCB1cCB0aGUgZmJkZXYgaGVscGVyIGluaXRpYWxpemF0
aW9uLCB0aGUKICAqIGRybV9mYl9oZWxwZXJfaW5pdCgpIGZ1bmN0aW9uIGlzIGNhbGxlZC4gVG8g
cHJvYmUgZm9yIGFsbCBhdHRhY2hlZCBkaXNwbGF5cwogICogYW5kIHNldCB1cCBhbiBpbml0aWFs
IGNvbmZpZ3VyYXRpb24gdXNpbmcgdGhlIGRldGVjdGVkIGhhcmR3YXJlLCBkcml2ZXJzCi0gKiBz
aG91bGQgY2FsbCBkcm1fZmJfaGVscGVyX3NpbmdsZV9hZGRfYWxsX2Nvbm5lY3RvcnMoKSBmb2xs
b3dlZCBieQotICogZHJtX2ZiX2hlbHBlcl9pbml0aWFsX2NvbmZpZygpLgorICogc2hvdWxkIGNh
bGwgZHJtX2ZiX2hlbHBlcl9pbml0aWFsX2NvbmZpZygpLgogICoKICAqIElmICZkcm1fZnJhbWVi
dWZmZXJfZnVuY3MuZGlydHkgaXMgc2V0LCB0aGUKICAqIGRybV9mYl9oZWxwZXJfe2NmYixzeXN9
X3t3cml0ZSxmaWxscmVjdCxjb3B5YXJlYSxpbWFnZWJsaXR9IGZ1bmN0aW9ucyB3aWxsCkBAIC0x
MzcsMTY1ICsxMzAsNiBAQCBzdGF0aWMgREVGSU5FX01VVEVYKGtlcm5lbF9mYl9oZWxwZXJfbG9j
ayk7CiAgKiBkZWZlcnJlZCBJL08gKGNvdXBsZWQgd2l0aCBkcm1fZmJfaGVscGVyX2ZiZGV2X3Rl
YXJkb3duKCkpLgogICovCiAKLSNkZWZpbmUgZHJtX2ZiX2hlbHBlcl9mb3JfZWFjaF9jb25uZWN0
b3IoZmJoLCBpX18pIFwKLQlmb3IgKCh7IGxvY2tkZXBfYXNzZXJ0X2hlbGQoJihmYmgpLT5sb2Nr
KTsgfSksIFwKLQkgICAgIGlfXyA9IDA7IGlfXyA8IChmYmgpLT5jb25uZWN0b3JfY291bnQ7IGlf
XysrKQotCi1zdGF0aWMgaW50IF9fZHJtX2ZiX2hlbHBlcl9hZGRfb25lX2Nvbm5lY3RvcihzdHJ1
Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAotCQkJCQkgICAgIHN0cnVjdCBkcm1fY29ubmVj
dG9yICpjb25uZWN0b3IpCi17Ci0Jc3RydWN0IGRybV9mYl9oZWxwZXJfY29ubmVjdG9yICpmYl9j
b25uOwotCXN0cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqKnRlbXA7Ci0JdW5zaWduZWQg
aW50IGNvdW50OwotCi0JaWYgKCFkcm1fZmJkZXZfZW11bGF0aW9uKQotCQlyZXR1cm4gMDsKLQot
CWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmZiX2hlbHBlci0+bG9jayk7Ci0KLQljb3VudCA9IGZiX2hl
bHBlci0+Y29ubmVjdG9yX2NvdW50ICsgMTsKLQotCWlmIChjb3VudCA+IGZiX2hlbHBlci0+Y29u
bmVjdG9yX2luZm9fYWxsb2NfY291bnQpIHsKLQkJc2l6ZV90IHNpemUgPSBjb3VudCAqIHNpemVv
ZihmYl9jb25uKTsKLQotCQl0ZW1wID0ga3JlYWxsb2MoZmJfaGVscGVyLT5jb25uZWN0b3JfaW5m
bywgc2l6ZSwgR0ZQX0tFUk5FTCk7Ci0JCWlmICghdGVtcCkKLQkJCXJldHVybiAtRU5PTUVNOwot
Ci0JCWZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9fYWxsb2NfY291bnQgPSBjb3VudDsKLQkJZmJf
aGVscGVyLT5jb25uZWN0b3JfaW5mbyA9IHRlbXA7Ci0JfQotCi0JZmJfY29ubiA9IGt6YWxsb2Mo
c2l6ZW9mKCpmYl9jb25uKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFmYl9jb25uKQotCQlyZXR1cm4g
LUVOT01FTTsKLQotCWRybV9jb25uZWN0b3JfZ2V0KGNvbm5lY3Rvcik7Ci0JZmJfY29ubi0+Y29u
bmVjdG9yID0gY29ubmVjdG9yOwotCWZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9bZmJfaGVscGVy
LT5jb25uZWN0b3JfY291bnQrK10gPSBmYl9jb25uOwotCi0JcmV0dXJuIDA7Ci19Ci0KLWludCBk
cm1fZmJfaGVscGVyX2FkZF9vbmVfY29ubmVjdG9yKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9o
ZWxwZXIsCi0JCQkJICAgIHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IpCi17Ci0JaW50
IGVycjsKLQotCWlmICghZmJfaGVscGVyKQotCQlyZXR1cm4gMDsKLQotCW11dGV4X2xvY2soJmZi
X2hlbHBlci0+bG9jayk7Ci0JZXJyID0gX19kcm1fZmJfaGVscGVyX2FkZF9vbmVfY29ubmVjdG9y
KGZiX2hlbHBlciwgY29ubmVjdG9yKTsKLQltdXRleF91bmxvY2soJmZiX2hlbHBlci0+bG9jayk7
Ci0KLQlyZXR1cm4gZXJyOwotfQotRVhQT1JUX1NZTUJPTChkcm1fZmJfaGVscGVyX2FkZF9vbmVf
Y29ubmVjdG9yKTsKLQotLyoqCi0gKiBkcm1fZmJfaGVscGVyX3NpbmdsZV9hZGRfYWxsX2Nvbm5l
Y3RvcnMoKSAtIGFkZCBhbGwgY29ubmVjdG9ycyB0byBmYmRldgotICogCQkJCQkgICAgICAgZW11
bGF0aW9uIGhlbHBlcgotICogQGZiX2hlbHBlcjogZmJkZXYgaW5pdGlhbGl6ZWQgd2l0aCBkcm1f
ZmJfaGVscGVyX2luaXQsIGNhbiBiZSBOVUxMCi0gKgotICogVGhpcyBmdW5jdGlvbnMgYWRkcyBh
bGwgdGhlIGF2YWlsYWJsZSBjb25uZWN0b3JzIGZvciB1c2Ugd2l0aCB0aGUgZ2l2ZW4KLSAqIGZi
X2hlbHBlci4gVGhpcyBpcyBhIHNlcGFyYXRlIHN0ZXAgdG8gYWxsb3cgZHJpdmVycyB0byBmcmVl
bHkgYXNzaWduCi0gKiBjb25uZWN0b3JzIHRvIHRoZSBmYmRldiwgZS5nLiBpZiBzb21lIGFyZSBy
ZXNlcnZlZCBmb3Igc3BlY2lhbCBwdXJwb3NlcyBvcgotICogbm90IGFkZXF1YXRlIHRvIGJlIHVz
ZWQgZm9yIHRoZSBmYmNvbi4KLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGlzIHByb3RlY3RlZCBhZ2Fp
bnN0IGNvbmN1cnJlbnQgY29ubmVjdG9yIGhvdGFkZHMvcmVtb3ZhbHMKLSAqIHVzaW5nIGRybV9m
Yl9oZWxwZXJfYWRkX29uZV9jb25uZWN0b3IoKSBhbmQKLSAqIGRybV9mYl9oZWxwZXJfcmVtb3Zl
X29uZV9jb25uZWN0b3IoKS4KLSAqLwotaW50IGRybV9mYl9oZWxwZXJfc2luZ2xlX2FkZF9hbGxf
Y29ubmVjdG9ycyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyKQotewotCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXY7Ci0Jc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKLQlzdHJ1
Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9pdGVyOwotCWludCBpLCByZXQgPSAwOwot
Ci0JaWYgKCFkcm1fZmJkZXZfZW11bGF0aW9uIHx8ICFmYl9oZWxwZXIpCi0JCXJldHVybiAwOwot
Ci0JZGV2ID0gZmJfaGVscGVyLT5kZXY7Ci0KLQltdXRleF9sb2NrKCZmYl9oZWxwZXItPmxvY2sp
OwotCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJmNvbm5faXRlcik7Ci0JZHJt
X2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJmNvbm5faXRlcikgewotCQlpZiAo
Y29ubmVjdG9yLT5jb25uZWN0b3JfdHlwZSA9PSBEUk1fTU9ERV9DT05ORUNUT1JfV1JJVEVCQUNL
KQotCQkJY29udGludWU7Ci0KLQkJcmV0ID0gX19kcm1fZmJfaGVscGVyX2FkZF9vbmVfY29ubmVj
dG9yKGZiX2hlbHBlciwgY29ubmVjdG9yKTsKLQkJaWYgKHJldCkKLQkJCWdvdG8gZmFpbDsKLQl9
Ci0JZ290byBvdXQ7Ci0KLWZhaWw6Ci0JZHJtX2ZiX2hlbHBlcl9mb3JfZWFjaF9jb25uZWN0b3Io
ZmJfaGVscGVyLCBpKSB7Ci0JCXN0cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfaGVs
cGVyX2Nvbm5lY3RvciA9Ci0JCQlmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvW2ldOwotCi0JCWRy
bV9jb25uZWN0b3JfcHV0KGZiX2hlbHBlcl9jb25uZWN0b3ItPmNvbm5lY3Rvcik7Ci0KLQkJa2Zy
ZWUoZmJfaGVscGVyX2Nvbm5lY3Rvcik7Ci0JCWZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9baV0g
PSBOVUxMOwotCX0KLQlmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCA9IDA7Ci1vdXQ6Ci0JZHJt
X2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZjb25uX2l0ZXIpOwotCW11dGV4X3VubG9jaygmZmJf
aGVscGVyLT5sb2NrKTsKLQotCXJldHVybiByZXQ7Ci19Ci1FWFBPUlRfU1lNQk9MKGRybV9mYl9o
ZWxwZXJfc2luZ2xlX2FkZF9hbGxfY29ubmVjdG9ycyk7Ci0KLXN0YXRpYyBpbnQgX19kcm1fZmJf
aGVscGVyX3JlbW92ZV9vbmVfY29ubmVjdG9yKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxw
ZXIsCi0JCQkJCQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQotewotCXN0cnVjdCBk
cm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfaGVscGVyX2Nvbm5lY3RvcjsKLQlpbnQgaSwgajsK
LQotCWlmICghZHJtX2ZiZGV2X2VtdWxhdGlvbikKLQkJcmV0dXJuIDA7Ci0KLQlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZmYl9oZWxwZXItPmxvY2spOwotCi0JZHJtX2ZiX2hlbHBlcl9mb3JfZWFjaF9j
b25uZWN0b3IoZmJfaGVscGVyLCBpKSB7Ci0JCWlmIChmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZv
W2ldLT5jb25uZWN0b3IgPT0gY29ubmVjdG9yKQotCQkJYnJlYWs7Ci0JfQotCi0JaWYgKGkgPT0g
ZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQpCi0JCXJldHVybiAtRUlOVkFMOwotCWZiX2hlbHBl
cl9jb25uZWN0b3IgPSBmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvW2ldOwotCWRybV9jb25uZWN0
b3JfcHV0KGZiX2hlbHBlcl9jb25uZWN0b3ItPmNvbm5lY3Rvcik7Ci0KLQlmb3IgKGogPSBpICsg
MTsgaiA8IGZiX2hlbHBlci0+Y29ubmVjdG9yX2NvdW50OyBqKyspCi0JCWZiX2hlbHBlci0+Y29u
bmVjdG9yX2luZm9baiAtIDFdID0gZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tqXTsKLQotCWZi
X2hlbHBlci0+Y29ubmVjdG9yX2NvdW50LS07Ci0Ja2ZyZWUoZmJfaGVscGVyX2Nvbm5lY3Rvcik7
Ci0KLQlyZXR1cm4gMDsKLX0KLQotaW50IGRybV9mYl9oZWxwZXJfcmVtb3ZlX29uZV9jb25uZWN0
b3Ioc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKLQkJCQkgICAgICAgc3RydWN0IGRy
bV9jb25uZWN0b3IgKmNvbm5lY3RvcikKLXsKLQlpbnQgZXJyOwotCi0JaWYgKCFmYl9oZWxwZXIp
Ci0JCXJldHVybiAwOwotCi0JbXV0ZXhfbG9jaygmZmJfaGVscGVyLT5sb2NrKTsKLQllcnIgPSBf
X2RybV9mYl9oZWxwZXJfcmVtb3ZlX29uZV9jb25uZWN0b3IoZmJfaGVscGVyLCBjb25uZWN0b3Ip
OwotCW11dGV4X3VubG9jaygmZmJfaGVscGVyLT5sb2NrKTsKLQotCXJldHVybiBlcnI7Ci19Ci1F
WFBPUlRfU1lNQk9MKGRybV9mYl9oZWxwZXJfcmVtb3ZlX29uZV9jb25uZWN0b3IpOwotCiBzdGF0
aWMgdm9pZCBkcm1fZmJfaGVscGVyX3Jlc3RvcmVfbHV0X2F0b21pYyhzdHJ1Y3QgZHJtX2NydGMg
KmNydGMpCiB7CiAJdWludDE2X3QgKnJfYmFzZSwgKmdfYmFzZSwgKmJfYmFzZTsKQEAgLTY0NSwy
MCArNDc5LDkgQEAgaW50IGRybV9mYl9oZWxwZXJfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LAogCQkJcmV0dXJuIHJldDsKIAl9CiAKLQlmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvID0ga2Nh
bGxvYyhkZXYtPm1vZGVfY29uZmlnLm51bV9jb25uZWN0b3IsIHNpemVvZihzdHJ1Y3QgZHJtX2Zi
X2hlbHBlcl9jb25uZWN0b3IgKiksIEdGUF9LRVJORUwpOwotCWlmICghZmJfaGVscGVyLT5jb25u
ZWN0b3JfaW5mbykKLQkJZ290byBvdXRfZnJlZTsKLQotCWZiX2hlbHBlci0+Y29ubmVjdG9yX2lu
Zm9fYWxsb2NfY291bnQgPSBkZXYtPm1vZGVfY29uZmlnLm51bV9jb25uZWN0b3I7Ci0JZmJfaGVs
cGVyLT5jb25uZWN0b3JfY291bnQgPSAwOwotCiAJZGV2LT5mYl9oZWxwZXIgPSBmYl9oZWxwZXI7
CiAKIAlyZXR1cm4gMDsKLW91dF9mcmVlOgotCWRybV9jbGllbnRfcmVsZWFzZSgmZmJfaGVscGVy
LT5jbGllbnQpOwotCi0JcmV0dXJuIC1FTk9NRU07CiB9CiBFWFBPUlRfU1lNQk9MKGRybV9mYl9o
ZWxwZXJfaW5pdCk7CiAKQEAgLTczMyw3ICs1NTYsNiBAQCBFWFBPUlRfU1lNQk9MKGRybV9mYl9o
ZWxwZXJfdW5yZWdpc3Rlcl9mYmkpOwogdm9pZCBkcm1fZmJfaGVscGVyX2Zpbmkoc3RydWN0IGRy
bV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIHsKIAlzdHJ1Y3QgZmJfaW5mbyAqaW5mbzsKLQlpbnQg
aTsKIAogCWlmICghZmJfaGVscGVyKQogCQlyZXR1cm47CkBAIC03NjYsMTIgKzU4OCw2IEBAIHZv
aWQgZHJtX2ZiX2hlbHBlcl9maW5pKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIpCiAK
IAlpZiAoIWZiX2hlbHBlci0+Y2xpZW50LmZ1bmNzKQogCQlkcm1fY2xpZW50X3JlbGVhc2UoJmZi
X2hlbHBlci0+Y2xpZW50KTsKLQotCWZvciAoaSA9IDA7IGkgPCBmYl9oZWxwZXItPmNvbm5lY3Rv
cl9jb3VudDsgaSsrKSB7Ci0JCWRybV9jb25uZWN0b3JfcHV0KGZiX2hlbHBlci0+Y29ubmVjdG9y
X2luZm9baV0tPmNvbm5lY3Rvcik7Ci0JCWtmcmVlKGZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9b
aV0pOwotCX0KLQlrZnJlZShmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvKTsKIH0KIEVYUE9SVF9T
WU1CT0woZHJtX2ZiX2hlbHBlcl9maW5pKTsKIApAQCAtMTY1MCw4ICsxNDY2LDkgQEAgc3RhdGlj
IGludCBkcm1fZmJfaGVscGVyX3NpbmdsZV9mYl9wcm9iZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAq
ZmJfaGVscGVyLAogCXN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50ID0gJmZiX2hlbHBlci0+
Y2xpZW50OwogCWludCByZXQgPSAwOwogCWludCBjcnRjX2NvdW50ID0gMDsKLQlpbnQgaTsKKwlz
dHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9pdGVyOwogCXN0cnVjdCBkcm1fZmJf
aGVscGVyX3N1cmZhY2Vfc2l6ZSBzaXplczsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVj
dG9yOwogCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0OwogCWludCBiZXN0X2RlcHRoID0g
MDsKIApAQCAtMTY2OCwxMSArMTQ4NSwxMSBAQCBzdGF0aWMgaW50IGRybV9mYl9oZWxwZXJfc2lu
Z2xlX2ZiX3Byb2JlKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJaWYgKHByZWZl
cnJlZF9icHAgIT0gc2l6ZXMuc3VyZmFjZV9icHApCiAJCXNpemVzLnN1cmZhY2VfZGVwdGggPSBz
aXplcy5zdXJmYWNlX2JwcCA9IHByZWZlcnJlZF9icHA7CiAKLQlkcm1fZmJfaGVscGVyX2Zvcl9l
YWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkpIHsKLQkJc3RydWN0IGRybV9mYl9oZWxwZXJfY29u
bmVjdG9yICpmYl9oZWxwZXJfY29ubiA9IGZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9baV07CisJ
ZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZmJfaGVscGVyLT5kZXYsICZjb25uX2l0ZXIp
OworCWRybV9jbGllbnRfZm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmY29ubl9p
dGVyKSB7CiAJCXN0cnVjdCBkcm1fY21kbGluZV9tb2RlICpjbWRsaW5lX21vZGU7CiAKLQkJY21k
bGluZV9tb2RlID0gJmZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPmNtZGxpbmVfbW9kZTsKKwkJ
Y21kbGluZV9tb2RlID0gJmNvbm5lY3Rvci0+Y21kbGluZV9tb2RlOwogCiAJCWlmIChjbWRsaW5l
X21vZGUtPmJwcF9zcGVjaWZpZWQpIHsKIAkJCXN3aXRjaCAoY21kbGluZV9tb2RlLT5icHApIHsK
QEAgLTE2OTcsNiArMTUxNCw3IEBAIHN0YXRpYyBpbnQgZHJtX2ZiX2hlbHBlcl9zaW5nbGVfZmJf
cHJvYmUoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAkJCWJyZWFrOwogCQl9CiAJ
fQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmY29ubl9pdGVyKTsKIAogCS8qCiAJICog
SWYgd2UgcnVuIGludG8gYSBzaXR1YXRpb24gd2hlcmUsIGZvciBleGFtcGxlLCB0aGUgcHJpbWFy
eSBwbGFuZQpAQCAtMTg4MSwyNiArMTY5OSwxMiBAQCB2b2lkIGRybV9mYl9oZWxwZXJfZmlsbF9p
bmZvKHN0cnVjdCBmYl9pbmZvICppbmZvLAogfQogRVhQT1JUX1NZTUJPTChkcm1fZmJfaGVscGVy
X2ZpbGxfaW5mbyk7CiAKLXN0YXRpYyBpbnQgZHJtX2ZiX2hlbHBlcl9wcm9iZV9jb25uZWN0b3Jf
bW9kZXMoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKLQkJCQkJCXVpbnQzMl90IG1h
eFgsCi0JCQkJCQl1aW50MzJfdCBtYXhZKQotewotCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25u
ZWN0b3I7Ci0JaW50IGksIGNvdW50ID0gMDsKLQotCWRybV9mYl9oZWxwZXJfZm9yX2VhY2hfY29u
bmVjdG9yKGZiX2hlbHBlciwgaSkgewotCQljb25uZWN0b3IgPSBmYl9oZWxwZXItPmNvbm5lY3Rv
cl9pbmZvW2ldLT5jb25uZWN0b3I7Ci0JCWNvdW50ICs9IGNvbm5lY3Rvci0+ZnVuY3MtPmZpbGxf
bW9kZXMoY29ubmVjdG9yLCBtYXhYLCBtYXhZKTsKLQl9Ci0KLQlyZXR1cm4gY291bnQ7Ci19Ci0K
LXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICpkcm1faGFzX3ByZWZlcnJlZF9tb2RlKHN0cnVjdCBk
cm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfY29ubmVjdG9yLCBpbnQgd2lkdGgsIGludCBoZWln
aHQpCitzdGF0aWMgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKgorZHJtX2Nvbm5lY3Rvcl9oYXNf
cHJlZmVycmVkX21vZGUoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwgaW50IHdpZHRo
LCBpbnQgaGVpZ2h0KQogewogCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlOwogCi0JbGlz
dF9mb3JfZWFjaF9lbnRyeShtb2RlLCAmZmJfY29ubmVjdG9yLT5jb25uZWN0b3ItPm1vZGVzLCBo
ZWFkKSB7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShtb2RlLCAmY29ubmVjdG9yLT5tb2RlcywgaGVh
ZCkgewogCQlpZiAobW9kZS0+aGRpc3BsYXkgPiB3aWR0aCB8fAogCQkgICAgbW9kZS0+dmRpc3Bs
YXkgPiBoZWlnaHQpCiAJCQljb250aW51ZTsKQEAgLTE5MDksMjAgKzE3MTMsMTUgQEAgc3RydWN0
IGRybV9kaXNwbGF5X21vZGUgKmRybV9oYXNfcHJlZmVycmVkX21vZGUoc3RydWN0IGRybV9mYl9o
ZWxwZXJfY29ubmVjdG9yICoKIAl9CiAJcmV0dXJuIE5VTEw7CiB9Ci1FWFBPUlRfU1lNQk9MKGRy
bV9oYXNfcHJlZmVycmVkX21vZGUpOwogCi1zdGF0aWMgYm9vbCBkcm1faGFzX2NtZGxpbmVfbW9k
ZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jb25uZWN0b3IgKmZiX2Nvbm5lY3RvcikKLXsKLQlyZXR1
cm4gZmJfY29ubmVjdG9yLT5jb25uZWN0b3ItPmNtZGxpbmVfbW9kZS5zcGVjaWZpZWQ7Ci19Ci0K
LXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICpkcm1fcGlja19jbWRsaW5lX21vZGUoc3RydWN0IGRy
bV9mYl9oZWxwZXJfY29ubmVjdG9yICpmYl9oZWxwZXJfY29ubikKK3N0YXRpYyBzdHJ1Y3QgZHJt
X2Rpc3BsYXlfbW9kZSAqCitkcm1fY29ubmVjdG9yX3BpY2tfY21kbGluZV9tb2RlKHN0cnVjdCBk
cm1fY29ubmVjdG9yICpjb25uZWN0b3IpCiB7CiAJc3RydWN0IGRybV9jbWRsaW5lX21vZGUgKmNt
ZGxpbmVfbW9kZTsKIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZTsKIAlib29sIHByZWZl
cl9ub25faW50ZXJsYWNlOwogCi0JY21kbGluZV9tb2RlID0gJmZiX2hlbHBlcl9jb25uLT5jb25u
ZWN0b3ItPmNtZGxpbmVfbW9kZTsKKwljbWRsaW5lX21vZGUgPSAmY29ubmVjdG9yLT5jbWRsaW5l
X21vZGU7CiAJaWYgKGNtZGxpbmVfbW9kZS0+c3BlY2lmaWVkID09IGZhbHNlKQogCQlyZXR1cm4g
TlVMTDsKIApAQCAtMTkzNCw3ICsxNzMzLDcgQEAgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmRy
bV9waWNrX2NtZGxpbmVfbW9kZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jb25uZWN0b3IgKmYKIAog
CXByZWZlcl9ub25faW50ZXJsYWNlID0gIWNtZGxpbmVfbW9kZS0+aW50ZXJsYWNlOwogYWdhaW46
Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeShtb2RlLCAmZmJfaGVscGVyX2Nvbm4tPmNvbm5lY3Rvci0+
bW9kZXMsIGhlYWQpIHsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KG1vZGUsICZjb25uZWN0b3ItPm1v
ZGVzLCBoZWFkKSB7CiAJCS8qIGNoZWNrIHdpZHRoL2hlaWdodCAqLwogCQlpZiAobW9kZS0+aGRp
c3BsYXkgIT0gY21kbGluZV9tb2RlLT54cmVzIHx8CiAJCSAgICBtb2RlLT52ZGlzcGxheSAhPSBj
bWRsaW5lX21vZGUtPnlyZXMpCkBAIC0xOTYxLDEyICsxNzYwLDExIEBAIHN0cnVjdCBkcm1fZGlz
cGxheV9tb2RlICpkcm1fcGlja19jbWRsaW5lX21vZGUoc3RydWN0IGRybV9mYl9oZWxwZXJfY29u
bmVjdG9yICpmCiAJfQogCiBjcmVhdGVfbW9kZToKLQltb2RlID0gZHJtX21vZGVfY3JlYXRlX2Zy
b21fY21kbGluZV9tb2RlKGZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPmRldiwKLQkJCQkJCSBj
bWRsaW5lX21vZGUpOwotCWxpc3RfYWRkKCZtb2RlLT5oZWFkLCAmZmJfaGVscGVyX2Nvbm4tPmNv
bm5lY3Rvci0+bW9kZXMpOworCW1vZGUgPSBkcm1fbW9kZV9jcmVhdGVfZnJvbV9jbWRsaW5lX21v
ZGUoY29ubmVjdG9yLT5kZXYsIGNtZGxpbmVfbW9kZSk7CisJbGlzdF9hZGQoJm1vZGUtPmhlYWQs
ICZjb25uZWN0b3ItPm1vZGVzKTsKKwogCXJldHVybiBtb2RlOwogfQotRVhQT1JUX1NZTUJPTChk
cm1fcGlja19jbWRsaW5lX21vZGUpOwogCiBzdGF0aWMgYm9vbCBkcm1fY29ubmVjdG9yX2VuYWJs
ZWQoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwgYm9vbCBzdHJpY3QpCiB7CkBAIC0x
OTgzLDE1ICsxNzgxLDE2IEBAIHN0YXRpYyBib29sIGRybV9jb25uZWN0b3JfZW5hYmxlZChzdHJ1
Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLCBib29sIHN0cmljdCkKIAlyZXR1cm4gZW5hYmxl
OwogfQogCi1zdGF0aWMgdm9pZCBkcm1fZW5hYmxlX2Nvbm5lY3RvcnMoc3RydWN0IGRybV9mYl9o
ZWxwZXIgKmZiX2hlbHBlciwKLQkJCQkgIGJvb2wgKmVuYWJsZWQpCitzdGF0aWMgdm9pZCBkcm1f
Y2xpZW50X2Nvbm5lY3RvcnNfZW5hYmxlZChzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqKmNvbm5lY3Rv
cnMsCisJCQkJCSAgdW5zaWduZWQgaW50IGNvbm5lY3Rvcl9jb3VudCwKKwkJCQkJICBib29sICpl
bmFibGVkKQogewogCWJvb2wgYW55X2VuYWJsZWQgPSBmYWxzZTsKIAlzdHJ1Y3QgZHJtX2Nvbm5l
Y3RvciAqY29ubmVjdG9yOwogCWludCBpID0gMDsKIAotCWRybV9mYl9oZWxwZXJfZm9yX2VhY2hf
Y29ubmVjdG9yKGZiX2hlbHBlciwgaSkgewotCQljb25uZWN0b3IgPSBmYl9oZWxwZXItPmNvbm5l
Y3Rvcl9pbmZvW2ldLT5jb25uZWN0b3I7CisJZm9yIChpID0gMDsgaSA8IGNvbm5lY3Rvcl9jb3Vu
dDsgaSsrKSB7CisJCWNvbm5lY3RvciA9IGNvbm5lY3RvcnNbaV07CiAJCWVuYWJsZWRbaV0gPSBk
cm1fY29ubmVjdG9yX2VuYWJsZWQoY29ubmVjdG9yLCB0cnVlKTsKIAkJRFJNX0RFQlVHX0tNUygi
Y29ubmVjdG9yICVkIGVuYWJsZWQ/ICVzXG4iLCBjb25uZWN0b3ItPmJhc2UuaWQsCiAJCQkgICAg
ICBjb25uZWN0b3ItPmRpc3BsYXlfaW5mby5ub25fZGVza3RvcCA/ICJub24gZGVza3RvcCIgOiBl
bmFibGVkW2ldID8gInllcyIgOiAibm8iKTsKQEAgLTIwMDIsMjggKzE4MDEsMjcgQEAgc3RhdGlj
IHZvaWQgZHJtX2VuYWJsZV9jb25uZWN0b3JzKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxw
ZXIsCiAJaWYgKGFueV9lbmFibGVkKQogCQlyZXR1cm47CiAKLQlkcm1fZmJfaGVscGVyX2Zvcl9l
YWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkpIHsKLQkJY29ubmVjdG9yID0gZmJfaGVscGVyLT5j
b25uZWN0b3JfaW5mb1tpXS0+Y29ubmVjdG9yOwotCQllbmFibGVkW2ldID0gZHJtX2Nvbm5lY3Rv
cl9lbmFibGVkKGNvbm5lY3RvciwgZmFsc2UpOwotCX0KKwlmb3IgKGkgPSAwOyBpIDwgY29ubmVj
dG9yX2NvdW50OyBpKyspCisJCWVuYWJsZWRbaV0gPSBkcm1fY29ubmVjdG9yX2VuYWJsZWQoY29u
bmVjdG9yc1tpXSwgZmFsc2UpOwogfQogCi1zdGF0aWMgYm9vbCBkcm1fdGFyZ2V0X2Nsb25lZChz
dHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAotCQkJICAgICAgc3RydWN0IGRybV9kaXNw
bGF5X21vZGUgKiptb2RlcywKLQkJCSAgICAgIHN0cnVjdCBkcm1fZmJfb2Zmc2V0ICpvZmZzZXRz
LAotCQkJICAgICAgYm9vbCAqZW5hYmxlZCwgaW50IHdpZHRoLCBpbnQgaGVpZ2h0KQorc3RhdGlj
IGJvb2wgZHJtX2NsaWVudF90YXJnZXRfY2xvbmVkKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJ
CQkJICAgICBzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqKmNvbm5lY3RvcnMsCisJCQkJICAgICB1bnNp
Z25lZCBpbnQgY29ubmVjdG9yX2NvdW50LAorCQkJCSAgICAgc3RydWN0IGRybV9kaXNwbGF5X21v
ZGUgKiptb2RlcywKKwkJCQkgICAgIHN0cnVjdCBkcm1fZmJfb2Zmc2V0ICpvZmZzZXRzLAorCQkJ
CSAgICAgYm9vbCAqZW5hYmxlZCwgaW50IHdpZHRoLCBpbnQgaGVpZ2h0KQogewogCWludCBjb3Vu
dCwgaSwgajsKIAlib29sIGNhbl9jbG9uZSA9IGZhbHNlOwotCXN0cnVjdCBkcm1fZmJfaGVscGVy
X2Nvbm5lY3RvciAqZmJfaGVscGVyX2Nvbm47CiAJc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmRt
dF9tb2RlLCAqbW9kZTsKIAogCS8qIG9ubHkgY29udGVtcGxhdGUgY2xvbmluZyBpbiB0aGUgc2lu
Z2xlIGNydGMgY2FzZSAqLwotCWlmIChmYl9oZWxwZXItPmRldi0+bW9kZV9jb25maWcubnVtX2Ny
dGMgPiAxKQorCWlmIChkZXYtPm1vZGVfY29uZmlnLm51bV9jcnRjID4gMSkKIAkJcmV0dXJuIGZh
bHNlOwogCiAJY291bnQgPSAwOwotCWRybV9mYl9oZWxwZXJfZm9yX2VhY2hfY29ubmVjdG9yKGZi
X2hlbHBlciwgaSkgeworCWZvciAoaSA9IDA7IGkgPCBjb25uZWN0b3JfY291bnQ7IGkrKykgewog
CQlpZiAoZW5hYmxlZFtpXSkKIAkJCWNvdW50Kys7CiAJfQpAQCAtMjAzNCwxMSArMTgzMiwxMCBA
QCBzdGF0aWMgYm9vbCBkcm1fdGFyZ2V0X2Nsb25lZChzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJf
aGVscGVyLAogCiAJLyogY2hlY2sgdGhlIGNvbW1hbmQgbGluZSBvciBpZiBub3RoaW5nIGNvbW1v
biBwaWNrIDEwMjR4NzY4ICovCiAJY2FuX2Nsb25lID0gdHJ1ZTsKLQlkcm1fZmJfaGVscGVyX2Zv
cl9lYWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkpIHsKKwlmb3IgKGkgPSAwOyBpIDwgY29ubmVj
dG9yX2NvdW50OyBpKyspIHsKIAkJaWYgKCFlbmFibGVkW2ldKQogCQkJY29udGludWU7Ci0JCWZi
X2hlbHBlcl9jb25uID0gZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXTsKLQkJbW9kZXNbaV0g
PSBkcm1fcGlja19jbWRsaW5lX21vZGUoZmJfaGVscGVyX2Nvbm4pOworCQltb2Rlc1tpXSA9IGRy
bV9jb25uZWN0b3JfcGlja19jbWRsaW5lX21vZGUoY29ubmVjdG9yc1tpXSk7CiAJCWlmICghbW9k
ZXNbaV0pIHsKIAkJCWNhbl9jbG9uZSA9IGZhbHNlOwogCQkJYnJlYWs7CkBAIC0yMDYyLDE0ICsx
ODU5LDEzIEBAIHN0YXRpYyBib29sIGRybV90YXJnZXRfY2xvbmVkKHN0cnVjdCBkcm1fZmJfaGVs
cGVyICpmYl9oZWxwZXIsCiAKIAkvKiB0cnkgYW5kIGZpbmQgYSAxMDI0eDc2OCBtb2RlIG9uIGVh
Y2ggY29ubmVjdG9yICovCiAJY2FuX2Nsb25lID0gdHJ1ZTsKLQlkbXRfbW9kZSA9IGRybV9tb2Rl
X2ZpbmRfZG10KGZiX2hlbHBlci0+ZGV2LCAxMDI0LCA3NjgsIDYwLCBmYWxzZSk7CisJZG10X21v
ZGUgPSBkcm1fbW9kZV9maW5kX2RtdChkZXYsIDEwMjQsIDc2OCwgNjAsIGZhbHNlKTsKIAotCWRy
bV9mYl9oZWxwZXJfZm9yX2VhY2hfY29ubmVjdG9yKGZiX2hlbHBlciwgaSkgeworCWZvciAoaSA9
IDA7IGkgPCBjb25uZWN0b3JfY291bnQ7IGkrKykgewogCQlpZiAoIWVuYWJsZWRbaV0pCiAJCQlj
b250aW51ZTsKIAotCQlmYl9oZWxwZXJfY29ubiA9IGZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9b
aV07Ci0JCWxpc3RfZm9yX2VhY2hfZW50cnkobW9kZSwgJmZiX2hlbHBlcl9jb25uLT5jb25uZWN0
b3ItPm1vZGVzLCBoZWFkKSB7CisJCWxpc3RfZm9yX2VhY2hfZW50cnkobW9kZSwgJmNvbm5lY3Rv
cnNbaV0tPm1vZGVzLCBoZWFkKSB7CiAJCQlpZiAoZHJtX21vZGVfbWF0Y2gobW9kZSwgZG10X21v
ZGUsCiAJCQkJCSAgIERSTV9NT0RFX01BVENIX1RJTUlOR1MgfAogCQkJCQkgICBEUk1fTU9ERV9N
QVRDSF9DTE9DSyB8CkBAIC0yMDg5LDMwICsxODg1LDMxIEBAIHN0YXRpYyBib29sIGRybV90YXJn
ZXRfY2xvbmVkKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiAJcmV0dXJuIGZhbHNl
OwogfQogCi1zdGF0aWMgaW50IGRybV9nZXRfdGlsZV9vZmZzZXRzKHN0cnVjdCBkcm1fZmJfaGVs
cGVyICpmYl9oZWxwZXIsCi0JCQkJc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKiptb2RlcywKLQkJ
CQlzdHJ1Y3QgZHJtX2ZiX29mZnNldCAqb2Zmc2V0cywKLQkJCQlpbnQgaWR4LAotCQkJCWludCBo
X2lkeCwgaW50IHZfaWR4KQorc3RhdGljIGludCBkcm1fY2xpZW50X2dldF90aWxlX29mZnNldHMo
c3RydWN0IGRybV9jb25uZWN0b3IgKipjb25uZWN0b3JzLAorCQkJCSAgICAgICB1bnNpZ25lZCBp
bnQgY29ubmVjdG9yX2NvdW50LAorCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAq
Km1vZGVzLAorCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2ZiX29mZnNldCAqb2Zmc2V0cywKKwkJCQkg
ICAgICAgaW50IGlkeCwKKwkJCQkgICAgICAgaW50IGhfaWR4LCBpbnQgdl9pZHgpCiB7Ci0Jc3Ry
dWN0IGRybV9mYl9oZWxwZXJfY29ubmVjdG9yICpmYl9oZWxwZXJfY29ubjsKKwlzdHJ1Y3QgZHJt
X2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCWludCBpOwogCWludCBob2Zmc2V0ID0gMCwgdm9mZnNl
dCA9IDA7CiAKLQlkcm1fZmJfaGVscGVyX2Zvcl9lYWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkp
IHsKLQkJZmJfaGVscGVyX2Nvbm4gPSBmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvW2ldOwotCQlp
ZiAoIWZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPmhhc190aWxlKQorCWZvciAoaSA9IDA7IGkg
PCBjb25uZWN0b3JfY291bnQ7IGkrKykgeworCQljb25uZWN0b3IgPSBjb25uZWN0b3JzW2ldOwor
CQlpZiAoIWNvbm5lY3Rvci0+aGFzX3RpbGUpCiAJCQljb250aW51ZTsKIAogCQlpZiAoIW1vZGVz
W2ldICYmIChoX2lkeCB8fCB2X2lkeCkpIHsKIAkJCURSTV9ERUJVR19LTVMoIm5vIG1vZGVzIGZv
ciBjb25uZWN0b3IgdGlsZWQgJWQgJWRcbiIsIGksCi0JCQkJICAgICAgZmJfaGVscGVyX2Nvbm4t
PmNvbm5lY3Rvci0+YmFzZS5pZCk7CisJCQkJICAgICAgY29ubmVjdG9yLT5iYXNlLmlkKTsKIAkJ
CWNvbnRpbnVlOwogCQl9Ci0JCWlmIChmYl9oZWxwZXJfY29ubi0+Y29ubmVjdG9yLT50aWxlX2hf
bG9jIDwgaF9pZHgpCisJCWlmIChjb25uZWN0b3ItPnRpbGVfaF9sb2MgPCBoX2lkeCkKIAkJCWhv
ZmZzZXQgKz0gbW9kZXNbaV0tPmhkaXNwbGF5OwogCi0JCWlmIChmYl9oZWxwZXJfY29ubi0+Y29u
bmVjdG9yLT50aWxlX3ZfbG9jIDwgdl9pZHgpCisJCWlmIChjb25uZWN0b3ItPnRpbGVfdl9sb2Mg
PCB2X2lkeCkKIAkJCXZvZmZzZXQgKz0gbW9kZXNbaV0tPnZkaXNwbGF5OwogCX0KIAlvZmZzZXRz
W2lkeF0ueCA9IGhvZmZzZXQ7CkBAIC0yMTIxLDIwICsxOTE4LDIxIEBAIHN0YXRpYyBpbnQgZHJt
X2dldF90aWxlX29mZnNldHMoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAlyZXR1
cm4gMDsKIH0KIAotc3RhdGljIGJvb2wgZHJtX3RhcmdldF9wcmVmZXJyZWQoc3RydWN0IGRybV9m
Yl9oZWxwZXIgKmZiX2hlbHBlciwKLQkJCQkgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKiptb2Rl
cywKLQkJCQkgc3RydWN0IGRybV9mYl9vZmZzZXQgKm9mZnNldHMsCi0JCQkJIGJvb2wgKmVuYWJs
ZWQsIGludCB3aWR0aCwgaW50IGhlaWdodCkKK3N0YXRpYyBib29sIGRybV9jbGllbnRfdGFyZ2V0
X3ByZWZlcnJlZChzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqKmNvbm5lY3RvcnMsCisJCQkJCXVuc2ln
bmVkIGludCBjb25uZWN0b3JfY291bnQsCisJCQkJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoq
bW9kZXMsCisJCQkJCXN0cnVjdCBkcm1fZmJfb2Zmc2V0ICpvZmZzZXRzLAorCQkJCQlib29sICpl
bmFibGVkLCBpbnQgd2lkdGgsIGludCBoZWlnaHQpCiB7Ci0Jc3RydWN0IGRybV9mYl9oZWxwZXJf
Y29ubmVjdG9yICpmYl9oZWxwZXJfY29ubjsKLQljb25zdCB1NjQgbWFzayA9IEJJVF9VTEwoZmJf
aGVscGVyLT5jb25uZWN0b3JfY291bnQpIC0gMTsKKwljb25zdCB1NjQgbWFzayA9IEJJVF9VTEwo
Y29ubmVjdG9yX2NvdW50KSAtIDE7CisJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsK
IAl1NjQgY29ubl9jb25maWd1cmVkID0gMDsKIAlpbnQgdGlsZV9wYXNzID0gMDsKIAlpbnQgaTsK
IAogcmV0cnk6Ci0JZHJtX2ZiX2hlbHBlcl9mb3JfZWFjaF9jb25uZWN0b3IoZmJfaGVscGVyLCBp
KSB7Ci0JCWZiX2hlbHBlcl9jb25uID0gZmJfaGVscGVyLT5jb25uZWN0b3JfaW5mb1tpXTsKKwlm
b3IgKGkgPSAwOyBpIDwgY29ubmVjdG9yX2NvdW50OyBpKyspIHsKKwkJY29ubmVjdG9yID0gY29u
bmVjdG9yc1tpXTsKIAogCQlpZiAoY29ubl9jb25maWd1cmVkICYgQklUX1VMTChpKSkKIAkJCWNv
bnRpbnVlOwpAQCAtMjE0NSwxNyArMTk0MywxNyBAQCBzdGF0aWMgYm9vbCBkcm1fdGFyZ2V0X3By
ZWZlcnJlZChzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCQl9CiAKIAkJLyogZmly
c3QgcGFzcyBvdmVyIGFsbCB0aGUgdW50aWxlZCBjb25uZWN0b3JzICovCi0JCWlmICh0aWxlX3Bh
c3MgPT0gMCAmJiBmYl9oZWxwZXJfY29ubi0+Y29ubmVjdG9yLT5oYXNfdGlsZSkKKwkJaWYgKHRp
bGVfcGFzcyA9PSAwICYmIGNvbm5lY3Rvci0+aGFzX3RpbGUpCiAJCQljb250aW51ZTsKIAogCQlp
ZiAodGlsZV9wYXNzID09IDEpIHsKLQkJCWlmIChmYl9oZWxwZXJfY29ubi0+Y29ubmVjdG9yLT50
aWxlX2hfbG9jICE9IDAgfHwKLQkJCSAgICBmYl9oZWxwZXJfY29ubi0+Y29ubmVjdG9yLT50aWxl
X3ZfbG9jICE9IDApCisJCQlpZiAoY29ubmVjdG9yLT50aWxlX2hfbG9jICE9IDAgfHwKKwkJCSAg
ICBjb25uZWN0b3ItPnRpbGVfdl9sb2MgIT0gMCkKIAkJCQljb250aW51ZTsKIAogCQl9IGVsc2Ug
ewotCQkJaWYgKGZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPnRpbGVfaF9sb2MgIT0gdGlsZV9w
YXNzIC0gMSAmJgotCQkJICAgIGZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPnRpbGVfdl9sb2Mg
IT0gdGlsZV9wYXNzIC0gMSkKKwkJCWlmIChjb25uZWN0b3ItPnRpbGVfaF9sb2MgIT0gdGlsZV9w
YXNzIC0gMSAmJgorCQkJICAgIGNvbm5lY3Rvci0+dGlsZV92X2xvYyAhPSB0aWxlX3Bhc3MgLSAx
KQogCQkJLyogaWYgdGhpcyB0aWxlX3Bhc3MgZG9lc24ndCBjb3ZlciBhbnkgb2YgdGhlIHRpbGVz
IC0ga2VlcCBnb2luZyAqLwogCQkJCWNvbnRpbnVlOwogCkBAIC0yMTYzLDIyICsxOTYxLDIyIEBA
IHN0YXRpYyBib29sIGRybV90YXJnZXRfcHJlZmVycmVkKHN0cnVjdCBkcm1fZmJfaGVscGVyICpm
Yl9oZWxwZXIsCiAJCQkgKiBmaW5kIHRoZSB0aWxlIG9mZnNldHMgZm9yIHRoaXMgcGFzcyAtIG5l
ZWQgdG8gZmluZAogCQkJICogYWxsIHRpbGVzIGxlZnQgYW5kIGFib3ZlCiAJCQkgKi8KLQkJCWRy
bV9nZXRfdGlsZV9vZmZzZXRzKGZiX2hlbHBlciwgbW9kZXMsIG9mZnNldHMsCi0JCQkJCSAgICAg
aSwgZmJfaGVscGVyX2Nvbm4tPmNvbm5lY3Rvci0+dGlsZV9oX2xvYywgZmJfaGVscGVyX2Nvbm4t
PmNvbm5lY3Rvci0+dGlsZV92X2xvYyk7CisJCQlkcm1fY2xpZW50X2dldF90aWxlX29mZnNldHMo
Y29ubmVjdG9ycywgY29ubmVjdG9yX2NvdW50LCBtb2Rlcywgb2Zmc2V0cywgaSwKKwkJCQkJCSAg
ICBjb25uZWN0b3ItPnRpbGVfaF9sb2MsIGNvbm5lY3Rvci0+dGlsZV92X2xvYyk7CiAJCX0KIAkJ
RFJNX0RFQlVHX0tNUygibG9va2luZyBmb3IgY21kbGluZSBtb2RlIG9uIGNvbm5lY3RvciAlZFxu
IiwKLQkJCSAgICAgIGZiX2hlbHBlcl9jb25uLT5jb25uZWN0b3ItPmJhc2UuaWQpOworCQkJICAg
ICAgY29ubmVjdG9yLT5iYXNlLmlkKTsKIAogCQkvKiBnb3QgZm9yIGNvbW1hbmQgbGluZSBtb2Rl
IGZpcnN0ICovCi0JCW1vZGVzW2ldID0gZHJtX3BpY2tfY21kbGluZV9tb2RlKGZiX2hlbHBlcl9j
b25uKTsKKwkJbW9kZXNbaV0gPSBkcm1fY29ubmVjdG9yX3BpY2tfY21kbGluZV9tb2RlKGNvbm5l
Y3Rvcik7CiAJCWlmICghbW9kZXNbaV0pIHsKIAkJCURSTV9ERUJVR19LTVMoImxvb2tpbmcgZm9y
IHByZWZlcnJlZCBtb2RlIG9uIGNvbm5lY3RvciAlZCAlZFxuIiwKLQkJCQkgICAgICBmYl9oZWxw
ZXJfY29ubi0+Y29ubmVjdG9yLT5iYXNlLmlkLCBmYl9oZWxwZXJfY29ubi0+Y29ubmVjdG9yLT50
aWxlX2dyb3VwID8gZmJfaGVscGVyX2Nvbm4tPmNvbm5lY3Rvci0+dGlsZV9ncm91cC0+aWQgOiAw
KTsKLQkJCW1vZGVzW2ldID0gZHJtX2hhc19wcmVmZXJyZWRfbW9kZShmYl9oZWxwZXJfY29ubiwg
d2lkdGgsIGhlaWdodCk7CisJCQkJICAgICAgY29ubmVjdG9yLT5iYXNlLmlkLCBjb25uZWN0b3It
PnRpbGVfZ3JvdXAgPyBjb25uZWN0b3ItPnRpbGVfZ3JvdXAtPmlkIDogMCk7CisJCQltb2Rlc1tp
XSA9IGRybV9jb25uZWN0b3JfaGFzX3ByZWZlcnJlZF9tb2RlKGNvbm5lY3Rvciwgd2lkdGgsIGhl
aWdodCk7CiAJCX0KIAkJLyogTm8gcHJlZmVycmVkIG1vZGVzLCBwaWNrIG9uZSBvZmYgdGhlIGxp
c3QgKi8KLQkJaWYgKCFtb2Rlc1tpXSAmJiAhbGlzdF9lbXB0eSgmZmJfaGVscGVyX2Nvbm4tPmNv
bm5lY3Rvci0+bW9kZXMpKSB7Ci0JCQlsaXN0X2Zvcl9lYWNoX2VudHJ5KG1vZGVzW2ldLCAmZmJf
aGVscGVyX2Nvbm4tPmNvbm5lY3Rvci0+bW9kZXMsIGhlYWQpCisJCWlmICghbW9kZXNbaV0gJiYg
IWxpc3RfZW1wdHkoJmNvbm5lY3Rvci0+bW9kZXMpKSB7CisJCQlsaXN0X2Zvcl9lYWNoX2VudHJ5
KG1vZGVzW2ldLCAmY29ubmVjdG9yLT5tb2RlcywgaGVhZCkKIAkJCQlicmVhazsKIAkJfQogCQlE
Uk1fREVCVUdfS01TKCJmb3VuZCBtb2RlICVzXG4iLCBtb2Rlc1tpXSA/IG1vZGVzW2ldLT5uYW1l
IDoKQEAgLTIyMDcsNDAgKzIwMDUsNDEgQEAgc3RhdGljIGJvb2wgY29ubmVjdG9yX2hhc19wb3Nz
aWJsZV9jcnRjKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJcmV0dXJuIGZhbHNl
OwogfQogCi1zdGF0aWMgaW50IGRybV9waWNrX2NydGNzKHN0cnVjdCBkcm1fZmJfaGVscGVyICpm
Yl9oZWxwZXIsCi0JCQkgIHN0cnVjdCBkcm1fY3J0YyAqKmJlc3RfY3J0Y3MsCi0JCQkgIHN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICoqbW9kZXMsCi0JCQkgIGludCBuLCBpbnQgd2lkdGgsIGludCBo
ZWlnaHQpCitzdGF0aWMgaW50IGRybV9jbGllbnRfcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2NsaWVu
dF9kZXYgKmNsaWVudCwKKwkJCQkgc3RydWN0IGRybV9jb25uZWN0b3IgKipjb25uZWN0b3JzLAor
CQkJCSB1bnNpZ25lZCBpbnQgY29ubmVjdG9yX2NvdW50LAorCQkJCSBzdHJ1Y3QgZHJtX2NydGMg
KipiZXN0X2NydGNzLAorCQkJCSBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqKm1vZGVzLAorCQkJ
CSBpbnQgbiwgaW50IHdpZHRoLCBpbnQgaGVpZ2h0KQogewotCXN0cnVjdCBkcm1fY2xpZW50X2Rl
diAqY2xpZW50ID0gJmZiX2hlbHBlci0+Y2xpZW50OworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYg
PSBjbGllbnQtPmRldjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCWludCBt
eV9zY29yZSwgYmVzdF9zY29yZSwgc2NvcmU7CiAJc3RydWN0IGRybV9jcnRjICoqY3J0Y3MsICpj
cnRjOwogCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7Ci0Jc3RydWN0IGRybV9mYl9oZWxw
ZXJfY29ubmVjdG9yICpmYl9oZWxwZXJfY29ubjsKIAlpbnQgbzsKIAotCWlmIChuID09IGZiX2hl
bHBlci0+Y29ubmVjdG9yX2NvdW50KQorCWlmIChuID09IGNvbm5lY3Rvcl9jb3VudCkKIAkJcmV0
dXJuIDA7CiAKLQlmYl9oZWxwZXJfY29ubiA9IGZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9bbl07
Ci0JY29ubmVjdG9yID0gZmJfaGVscGVyX2Nvbm4tPmNvbm5lY3RvcjsKKwljb25uZWN0b3IgPSBj
b25uZWN0b3JzW25dOwogCiAJYmVzdF9jcnRjc1tuXSA9IE5VTEw7Ci0JYmVzdF9zY29yZSA9IGRy
bV9waWNrX2NydGNzKGZiX2hlbHBlciwgYmVzdF9jcnRjcywgbW9kZXMsIG4rMSwgd2lkdGgsIGhl
aWdodCk7CisJYmVzdF9zY29yZSA9IGRybV9jbGllbnRfcGlja19jcnRjcyhjbGllbnQsIGNvbm5l
Y3RvcnMsIGNvbm5lY3Rvcl9jb3VudCwKKwkJCQkJICAgYmVzdF9jcnRjcywgbW9kZXMsIG4gKyAx
LCB3aWR0aCwgaGVpZ2h0KTsKIAlpZiAobW9kZXNbbl0gPT0gTlVMTCkKIAkJcmV0dXJuIGJlc3Rf
c2NvcmU7CiAKLQljcnRjcyA9IGtjYWxsb2MoZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQsIHNp
emVvZigqY3J0Y3MpLCBHRlBfS0VSTkVMKTsKKwljcnRjcyA9IGtjYWxsb2MoY29ubmVjdG9yX2Nv
dW50LCBzaXplb2YoKmNydGNzKSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFjcnRjcykKIAkJcmV0dXJu
IGJlc3Rfc2NvcmU7CiAKIAlteV9zY29yZSA9IDE7CiAJaWYgKGNvbm5lY3Rvci0+c3RhdHVzID09
IGNvbm5lY3Rvcl9zdGF0dXNfY29ubmVjdGVkKQogCQlteV9zY29yZSsrOwotCWlmIChkcm1faGFz
X2NtZGxpbmVfbW9kZShmYl9oZWxwZXJfY29ubikpCisJaWYgKGNvbm5lY3Rvci0+Y21kbGluZV9t
b2RlLnNwZWNpZmllZCkKIAkJbXlfc2NvcmUrKzsKLQlpZiAoZHJtX2hhc19wcmVmZXJyZWRfbW9k
ZShmYl9oZWxwZXJfY29ubiwgd2lkdGgsIGhlaWdodCkpCisJaWYgKGRybV9jb25uZWN0b3JfaGFz
X3ByZWZlcnJlZF9tb2RlKGNvbm5lY3Rvciwgd2lkdGgsIGhlaWdodCkpCiAJCW15X3Njb3JlKys7
CiAKIAkvKgpAQCAtMjI1OSw3ICsyMDU4LDcgQEAgc3RhdGljIGludCBkcm1fcGlja19jcnRjcyhz
dHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCiAJCWlmIChvIDwgbikgewogCQkJLyog
aWdub3JlIGNsb25pbmcgdW5sZXNzIG9ubHkgYSBzaW5nbGUgY3J0YyAqLwotCQkJaWYgKGZiX2hl
bHBlci0+ZGV2LT5tb2RlX2NvbmZpZy5udW1fY3J0YyA+IDEpCisJCQlpZiAoZGV2LT5tb2RlX2Nv
bmZpZy5udW1fY3J0YyA+IDEpCiAJCQkJY29udGludWU7CiAKIAkJCWlmICghZHJtX21vZGVfZXF1
YWwobW9kZXNbb10sIG1vZGVzW25dKSkKQEAgLTIyNjgsMTIgKzIwNjcsMTEgQEAgc3RhdGljIGlu
dCBkcm1fcGlja19jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCiAJCWNy
dGNzW25dID0gY3J0YzsKIAkJbWVtY3B5KGNydGNzLCBiZXN0X2NydGNzLCBuICogc2l6ZW9mKCpj
cnRjcykpOwotCQlzY29yZSA9IG15X3Njb3JlICsgZHJtX3BpY2tfY3J0Y3MoZmJfaGVscGVyLCBj
cnRjcywgbW9kZXMsIG4gKyAxLAotCQkJCQkJICB3aWR0aCwgaGVpZ2h0KTsKKwkJc2NvcmUgPSBt
eV9zY29yZSArIGRybV9jbGllbnRfcGlja19jcnRjcyhjbGllbnQsIGNvbm5lY3RvcnMsIGNvbm5l
Y3Rvcl9jb3VudCwKKwkJCQkJCQkgY3J0Y3MsIG1vZGVzLCBuICsgMSwgd2lkdGgsIGhlaWdodCk7
CiAJCWlmIChzY29yZSA+IGJlc3Rfc2NvcmUpIHsKIAkJCWJlc3Rfc2NvcmUgPSBzY29yZTsKLQkJ
CW1lbWNweShiZXN0X2NydGNzLCBjcnRjcywKLQkJCSAgICAgICBmYl9oZWxwZXItPmNvbm5lY3Rv
cl9jb3VudCAqIHNpemVvZigqY3J0Y3MpKTsKKwkJCW1lbWNweShiZXN0X2NydGNzLCBjcnRjcywg
Y29ubmVjdG9yX2NvdW50ICogc2l6ZW9mKCpjcnRjcykpOwogCQl9CiAJfQogCkBAIC0yMjgyLDE1
ICsyMDgwLDE3IEBAIHN0YXRpYyBpbnQgZHJtX3BpY2tfY3J0Y3Moc3RydWN0IGRybV9mYl9oZWxw
ZXIgKmZiX2hlbHBlciwKIH0KIAogLyogVHJ5IHRvIHJlYWQgdGhlIEJJT1MgZGlzcGxheSBjb25m
aWd1cmF0aW9uIGFuZCB1c2UgaXQgZm9yIHRoZSBpbml0aWFsIGNvbmZpZyAqLwotc3RhdGljIGJv
b2wgZHJtX2ZiX2hlbHBlcl9maXJtd2FyZV9jb25maWcoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZi
X2hlbHBlciwKLQkJCQkJICBzdHJ1Y3QgZHJtX2NydGMgKipjcnRjcywKLQkJCQkJICBzdHJ1Y3Qg
ZHJtX2Rpc3BsYXlfbW9kZSAqKm1vZGVzLAotCQkJCQkgIHN0cnVjdCBkcm1fZmJfb2Zmc2V0ICpv
ZmZzZXRzLAotCQkJCQkgIGJvb2wgKmVuYWJsZWQsIGludCB3aWR0aCwgaW50IGhlaWdodCkKK3N0
YXRpYyBib29sIGRybV9jbGllbnRfZmlybXdhcmVfY29uZmlnKHN0cnVjdCBkcm1fY2xpZW50X2Rl
diAqY2xpZW50LAorCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqKmNvbm5lY3RvcnMs
CisJCQkJICAgICAgIHVuc2lnbmVkIGludCBjb25uZWN0b3JfY291bnQsCisJCQkJICAgICAgIHN0
cnVjdCBkcm1fY3J0YyAqKmNydGNzLAorCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqKm1vZGVzLAorCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2ZiX29mZnNldCAqb2Zmc2V0cywKKwkJ
CQkgICAgICAgYm9vbCAqZW5hYmxlZCwgaW50IHdpZHRoLCBpbnQgaGVpZ2h0KQogewotCXN0cnVj
dCBkcm1fZGV2aWNlICpkZXYgPSBmYl9oZWxwZXItPmRldjsKLQl1bnNpZ25lZCBpbnQgY291bnQg
PSBtaW4oZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQsIEJJVFNfUEVSX0xPTkcpOworCXVuc2ln
bmVkIGludCBjb3VudCA9IG1pbl90KHVuc2lnbmVkIGludCwgY29ubmVjdG9yX2NvdW50LCBCSVRT
X1BFUl9MT05HKTsKIAl1bnNpZ25lZCBsb25nIGNvbm5fY29uZmlndXJlZCwgY29ubl9zZXEsIG1h
c2s7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNsaWVudC0+ZGV2OwogCWludCBpLCBqOwog
CWJvb2wgKnNhdmVfZW5hYmxlZDsKIAlib29sIGZhbGxiYWNrID0gdHJ1ZSwgcmV0ID0gdHJ1ZTsK
QEAgLTIzMTYsMTMgKzIxMTYsMTEgQEAgc3RhdGljIGJvb2wgZHJtX2ZiX2hlbHBlcl9maXJtd2Fy
ZV9jb25maWcoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIHJldHJ5OgogCWNvbm5f
c2VxID0gY29ubl9jb25maWd1cmVkOwogCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7Ci0J
CXN0cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfY29ubjsKIAkJc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvcjsKIAkJc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyOwogCQlz
dHJ1Y3QgZHJtX2NydGMgKm5ld19jcnRjOwogCi0JCWZiX2Nvbm4gPSBmYl9oZWxwZXItPmNvbm5l
Y3Rvcl9pbmZvW2ldOwotCQljb25uZWN0b3IgPSBmYl9jb25uLT5jb25uZWN0b3I7CisJCWNvbm5l
Y3RvciA9IGNvbm5lY3RvcnNbaV07CiAKIAkJaWYgKGNvbm5fY29uZmlndXJlZCAmIEJJVChpKSkK
IAkJCWNvbnRpbnVlOwpAQCAtMjM3OSwxNCArMjE3NywxMyBAQCBzdGF0aWMgYm9vbCBkcm1fZmJf
aGVscGVyX2Zpcm13YXJlX2NvbmZpZyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAog
CQkJICAgICAgY29ubmVjdG9yLT5uYW1lKTsKIAogCQkvKiBnbyBmb3IgY29tbWFuZCBsaW5lIG1v
ZGUgZmlyc3QgKi8KLQkJbW9kZXNbaV0gPSBkcm1fcGlja19jbWRsaW5lX21vZGUoZmJfY29ubik7
CisJCW1vZGVzW2ldID0gZHJtX2Nvbm5lY3Rvcl9waWNrX2NtZGxpbmVfbW9kZShjb25uZWN0b3Ip
OwogCiAJCS8qIHRyeSBmb3IgcHJlZmVycmVkIG5leHQgKi8KIAkJaWYgKCFtb2Rlc1tpXSkgewog
CQkJRFJNX0RFQlVHX0tNUygibG9va2luZyBmb3IgcHJlZmVycmVkIG1vZGUgb24gY29ubmVjdG9y
ICVzICVkXG4iLAogCQkJCSAgICAgIGNvbm5lY3Rvci0+bmFtZSwgY29ubmVjdG9yLT5oYXNfdGls
ZSk7Ci0JCQltb2Rlc1tpXSA9IGRybV9oYXNfcHJlZmVycmVkX21vZGUoZmJfY29ubiwgd2lkdGgs
Ci0JCQkJCQkJICBoZWlnaHQpOworCQkJbW9kZXNbaV0gPSBkcm1fY29ubmVjdG9yX2hhc19wcmVm
ZXJyZWRfbW9kZShjb25uZWN0b3IsIHdpZHRoLCBoZWlnaHQpOwogCQl9CiAKIAkJLyogTm8gcHJl
ZmVycmVkIG1vZGUgbWFya2VkIGJ5IHRoZSBFRElEPyBBcmUgdGhlcmUgYW55IG1vZGVzPyAqLwpA
QCAtMjQ2MSw4ICsyMjU4LDEyIEBAIHN0YXRpYyBib29sIGRybV9mYl9oZWxwZXJfZmlybXdhcmVf
Y29uZmlnKHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCiBzdGF0aWMgdm9pZCBkcm1f
c2V0dXBfY3J0Y3Moc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAkJCSAgICB1MzIg
d2lkdGgsIHUzMiBoZWlnaHQpCiB7CisJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3Rvciwg
Kipjb25uZWN0b3JzID0gTlVMTDsKIAlzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCA9ICZm
Yl9oZWxwZXItPmNsaWVudDsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9p
dGVyOwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBmYl9oZWxwZXItPmRldjsKKwl1bnNpZ25l
ZCBpbnQgdG90YWxfbW9kZXNfY291bnQgPSAwOworCXVuc2lnbmVkIGludCBjb25uZWN0b3JfY291
bnQgPSAwOwogCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoqbW9kZXM7CiAJc3RydWN0IGRybV9m
Yl9vZmZzZXQgKm9mZnNldHM7CiAJc3RydWN0IGRybV9jcnRjICoqY3J0Y3M7CkBAIC0yNDcwLDE2
ICsyMjcxLDI4IEBAIHN0YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hl
bHBlciAqZmJfaGVscGVyLAogCWludCBpOwogCiAJRFJNX0RFQlVHX0tNUygiXG4iKTsKLQkvKiBw
cmV2ZW50IGNvbmN1cnJlbnQgbW9kaWZpY2F0aW9uIG9mIGNvbm5lY3Rvcl9jb3VudCBieSBob3Rw
bHVnICovCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZmJfaGVscGVyLT5sb2NrKTsKIAotCWNydGNz
ID0ga2NhbGxvYyhmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCwgc2l6ZW9mKCpjcnRjcyksIEdG
UF9LRVJORUwpOwotCW1vZGVzID0ga2NhbGxvYyhmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCwK
LQkJCXNpemVvZihzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqKSwgR0ZQX0tFUk5FTCk7Ci0Jb2Zm
c2V0cyA9IGtjYWxsb2MoZmJfaGVscGVyLT5jb25uZWN0b3JfY291bnQsCi0JCQkgIHNpemVvZihz
dHJ1Y3QgZHJtX2ZiX29mZnNldCksIEdGUF9LRVJORUwpOwotCWVuYWJsZWQgPSBrY2FsbG9jKGZi
X2hlbHBlci0+Y29ubmVjdG9yX2NvdW50LAotCQkJICBzaXplb2YoYm9vbCksIEdGUF9LRVJORUwp
OworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJmNvbm5faXRlcik7CisJZHJt
X2NsaWVudF9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZjb25uX2l0ZXIpIHsK
KwkJc3RydWN0IGRybV9jb25uZWN0b3IgKip0bXA7CisKKwkJdG1wID0ga3JlYWxsb2MoY29ubmVj
dG9ycywgKGNvbm5lY3Rvcl9jb3VudCArIDEpICogc2l6ZW9mKCpjb25uZWN0b3JzKSwgR0ZQX0tF
Uk5FTCk7CisJCWlmICghdG1wKQorCQkJZ290byBmcmVlX2Nvbm5lY3RvcnM7CisKKwkJY29ubmVj
dG9ycyA9IHRtcDsKKwkJZHJtX2Nvbm5lY3Rvcl9nZXQoY29ubmVjdG9yKTsKKwkJY29ubmVjdG9y
c1tjb25uZWN0b3JfY291bnQrK10gPSBjb25uZWN0b3I7CisJfQorCWRybV9jb25uZWN0b3JfbGlz
dF9pdGVyX2VuZCgmY29ubl9pdGVyKTsKKworCWlmICghY29ubmVjdG9yX2NvdW50KQorCQlyZXR1
cm47CisKKwljcnRjcyA9IGtjYWxsb2MoY29ubmVjdG9yX2NvdW50LCBzaXplb2YoKmNydGNzKSwg
R0ZQX0tFUk5FTCk7CisJbW9kZXMgPSBrY2FsbG9jKGNvbm5lY3Rvcl9jb3VudCwgc2l6ZW9mKCpt
b2RlcyksIEdGUF9LRVJORUwpOworCW9mZnNldHMgPSBrY2FsbG9jKGNvbm5lY3Rvcl9jb3VudCwg
c2l6ZW9mKCpvZmZzZXRzKSwgR0ZQX0tFUk5FTCk7CisJZW5hYmxlZCA9IGtjYWxsb2MoY29ubmVj
dG9yX2NvdW50LCBzaXplb2YoYm9vbCksIEdGUF9LRVJORUwpOwogCWlmICghY3J0Y3MgfHwgIW1v
ZGVzIHx8ICFlbmFibGVkIHx8ICFvZmZzZXRzKSB7CiAJCURSTV9FUlJPUigiTWVtb3J5IGFsbG9j
YXRpb24gZmFpbGVkXG4iKTsKIAkJZ290byBvdXQ7CkBAIC0yNDg4LDQwICsyMzAxLDQyIEBAIHN0
YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjcyhzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVy
LAogCW11dGV4X2xvY2soJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CiAKIAltdXRleF9sb2NrKCZm
Yl9oZWxwZXItPmRldi0+bW9kZV9jb25maWcubXV0ZXgpOwotCWlmIChkcm1fZmJfaGVscGVyX3By
b2JlX2Nvbm5lY3Rvcl9tb2RlcyhmYl9oZWxwZXIsIHdpZHRoLCBoZWlnaHQpID09IDApCisJZm9y
IChpID0gMDsgaSA8IGNvbm5lY3Rvcl9jb3VudDsgaSsrKQorCQl0b3RhbF9tb2Rlc19jb3VudCAr
PSBjb25uZWN0b3JzW2ldLT5mdW5jcy0+ZmlsbF9tb2Rlcyhjb25uZWN0b3JzW2ldLCB3aWR0aCwg
aGVpZ2h0KTsKKwlpZiAoIXRvdGFsX21vZGVzX2NvdW50KQogCQlEUk1fREVCVUdfS01TKCJObyBj
b25uZWN0b3JzIHJlcG9ydGVkIGNvbm5lY3RlZCB3aXRoIG1vZGVzXG4iKTsKLQlkcm1fZW5hYmxl
X2Nvbm5lY3RvcnMoZmJfaGVscGVyLCBlbmFibGVkKTsKKwlkcm1fY2xpZW50X2Nvbm5lY3RvcnNf
ZW5hYmxlZChjb25uZWN0b3JzLCBjb25uZWN0b3JfY291bnQsIGVuYWJsZWQpOwogCi0JaWYgKCFk
cm1fZmJfaGVscGVyX2Zpcm13YXJlX2NvbmZpZyhmYl9oZWxwZXIsIGNydGNzLCBtb2Rlcywgb2Zm
c2V0cywKLQkJCQkJICAgZW5hYmxlZCwgd2lkdGgsIGhlaWdodCkpIHsKLQkJbWVtc2V0KG1vZGVz
LCAwLCBmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCpzaXplb2YobW9kZXNbMF0pKTsKLQkJbWVt
c2V0KGNydGNzLCAwLCBmYl9oZWxwZXItPmNvbm5lY3Rvcl9jb3VudCpzaXplb2YoY3J0Y3NbMF0p
KTsKLQkJbWVtc2V0KG9mZnNldHMsIDAsIGZiX2hlbHBlci0+Y29ubmVjdG9yX2NvdW50KnNpemVv
ZihvZmZzZXRzWzBdKSk7CisJaWYgKCFkcm1fY2xpZW50X2Zpcm13YXJlX2NvbmZpZyhjbGllbnQs
IGNvbm5lY3RvcnMsIGNvbm5lY3Rvcl9jb3VudCwgY3J0Y3MsCisJCQkJCW1vZGVzLCBvZmZzZXRz
LCBlbmFibGVkLCB3aWR0aCwgaGVpZ2h0KSkgeworCQltZW1zZXQobW9kZXMsIDAsIGNvbm5lY3Rv
cl9jb3VudCAqIHNpemVvZigqbW9kZXMpKTsKKwkJbWVtc2V0KGNydGNzLCAwLCBjb25uZWN0b3Jf
Y291bnQgKiBzaXplb2YoKmNydGNzKSk7CisJCW1lbXNldChvZmZzZXRzLCAwLCBjb25uZWN0b3Jf
Y291bnQgKiBzaXplb2YoKm9mZnNldHMpKTsKIAotCQlpZiAoIWRybV90YXJnZXRfY2xvbmVkKGZi
X2hlbHBlciwgbW9kZXMsIG9mZnNldHMsCi0JCQkJICAgICAgIGVuYWJsZWQsIHdpZHRoLCBoZWln
aHQpICYmCi0JCSAgICAhZHJtX3RhcmdldF9wcmVmZXJyZWQoZmJfaGVscGVyLCBtb2Rlcywgb2Zm
c2V0cywKLQkJCQkJICBlbmFibGVkLCB3aWR0aCwgaGVpZ2h0KSkKKwkJaWYgKCFkcm1fY2xpZW50
X3RhcmdldF9jbG9uZWQoZGV2LCBjb25uZWN0b3JzLCBjb25uZWN0b3JfY291bnQsIG1vZGVzLAor
CQkJCQkgICAgICBvZmZzZXRzLCBlbmFibGVkLCB3aWR0aCwgaGVpZ2h0KSAmJgorCQkgICAgIWRy
bV9jbGllbnRfdGFyZ2V0X3ByZWZlcnJlZChjb25uZWN0b3JzLCBjb25uZWN0b3JfY291bnQsIG1v
ZGVzLAorCQkJCQkJIG9mZnNldHMsIGVuYWJsZWQsIHdpZHRoLCBoZWlnaHQpKQogCQkJRFJNX0VS
Uk9SKCJVbmFibGUgdG8gZmluZCBpbml0aWFsIG1vZGVzXG4iKTsKIAogCQlEUk1fREVCVUdfS01T
KCJwaWNraW5nIENSVENzIGZvciAlZHglZCBjb25maWdcbiIsCiAJCQkgICAgICB3aWR0aCwgaGVp
Z2h0KTsKIAotCQlkcm1fcGlja19jcnRjcyhmYl9oZWxwZXIsIGNydGNzLCBtb2RlcywgMCwgd2lk
dGgsIGhlaWdodCk7CisJCWRybV9jbGllbnRfcGlja19jcnRjcyhjbGllbnQsIGNvbm5lY3RvcnMs
IGNvbm5lY3Rvcl9jb3VudCwKKwkJCQkgICAgICBjcnRjcywgbW9kZXMsIDAsIHdpZHRoLCBoZWln
aHQpOwogCX0KIAltdXRleF91bmxvY2soJmZiX2hlbHBlci0+ZGV2LT5tb2RlX2NvbmZpZy5tdXRl
eCk7CiAKIAlkcm1fY2xpZW50X21vZGVzZXRfcmVsZWFzZShjbGllbnQpOwogCi0JZHJtX2ZiX2hl
bHBlcl9mb3JfZWFjaF9jb25uZWN0b3IoZmJfaGVscGVyLCBpKSB7CisJZm9yIChpID0gMDsgaSA8
IGNvbm5lY3Rvcl9jb3VudDsgaSsrKSB7CiAJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2Rl
ID0gbW9kZXNbaV07CiAJCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IGNydGNzW2ldOwogCQlzdHJ1
Y3QgZHJtX2ZiX29mZnNldCAqb2Zmc2V0ID0gJm9mZnNldHNbaV07CiAKIAkJaWYgKG1vZGUgJiYg
Y3J0YykgewogCQkJc3RydWN0IGRybV9tb2RlX3NldCAqbW9kZXNldCA9IGRybV9jbGllbnRfZmlu
ZF9tb2Rlc2V0KGNsaWVudCwgY3J0Yyk7Ci0JCQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVj
dG9yID0KLQkJCQlmYl9oZWxwZXItPmNvbm5lY3Rvcl9pbmZvW2ldLT5jb25uZWN0b3I7CisJCQlz
dHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yID0gY29ubmVjdG9yc1tpXTsKIAogCQkJRFJN
X0RFQlVHX0tNUygiZGVzaXJlZCBtb2RlICVzIHNldCBvbiBjcnRjICVkICglZCwlZClcbiIsCiAJ
CQkJICAgICAgbW9kZS0+bmFtZSwgY3J0Yy0+YmFzZS5pZCwgb2Zmc2V0LT54LCBvZmZzZXQtPnkp
OwpAQCAtMjU0NCw2ICsyMzU5LDEwIEBAIHN0YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjcyhzdHJ1
Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAogCWtmcmVlKG1vZGVzKTsKIAlrZnJlZShvZmZz
ZXRzKTsKIAlrZnJlZShlbmFibGVkKTsKK2ZyZWVfY29ubmVjdG9yczoKKwlmb3IgKGkgPSAwOyBp
IDwgY29ubmVjdG9yX2NvdW50OyBpKyspCisJCWRybV9jb25uZWN0b3JfcHV0KGNvbm5lY3RvcnNb
aV0pOworCWtmcmVlKGNvbm5lY3RvcnMpOwogfQogCiAvKgpAQCAtMjU1NiwxMCArMjM3NSwxMSBA
QCBzdGF0aWMgdm9pZCBkcm1fc2V0dXBfY3J0Y3Moc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hl
bHBlciwKIHN0YXRpYyB2b2lkIGRybV9zZXR1cF9jcnRjc19mYihzdHJ1Y3QgZHJtX2ZiX2hlbHBl
ciAqZmJfaGVscGVyKQogewogCXN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50ID0gJmZiX2hl
bHBlci0+Y2xpZW50OworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBjb25uX2l0ZXI7
CiAJc3RydWN0IGZiX2luZm8gKmluZm8gPSBmYl9oZWxwZXItPmZiZGV2OwogCXVuc2lnbmVkIGlu
dCByb3RhdGlvbiwgc3dfcm90YXRpb25zID0gMDsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29u
bmVjdG9yOwogCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXQ7Ci0JaW50IGk7CiAKIAltdXRl
eF9sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOwogCWRybV9jbGllbnRfZm9yX2VhY2hfbW9k
ZXNldChtb2Rlc2V0LCBjbGllbnQpIHsKQEAgLTI1NzYsMTAgKzIzOTYsOCBAQCBzdGF0aWMgdm9p
ZCBkcm1fc2V0dXBfY3J0Y3NfZmIoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIAl9
CiAJbXV0ZXhfdW5sb2NrKCZjbGllbnQtPm1vZGVzZXRfbXV0ZXgpOwogCi0JbXV0ZXhfbG9jaygm
ZmJfaGVscGVyLT5kZXYtPm1vZGVfY29uZmlnLm11dGV4KTsKLQlkcm1fZmJfaGVscGVyX2Zvcl9l
YWNoX2Nvbm5lY3RvcihmYl9oZWxwZXIsIGkpIHsKLQkJc3RydWN0IGRybV9jb25uZWN0b3IgKmNv
bm5lY3RvciA9Ci0JCQkJCWZiX2hlbHBlci0+Y29ubmVjdG9yX2luZm9baV0tPmNvbm5lY3RvcjsK
Kwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihmYl9oZWxwZXItPmRldiwgJmNvbm5faXRl
cik7CisJZHJtX2NsaWVudF9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZjb25u
X2l0ZXIpIHsKIAogCQkvKiB1c2UgZmlyc3QgY29ubmVjdGVkIGNvbm5lY3RvciBmb3IgdGhlIHBo
eXNpY2FsIGRpbWVuc2lvbnMgKi8KIAkJaWYgKGNvbm5lY3Rvci0+c3RhdHVzID09IGNvbm5lY3Rv
cl9zdGF0dXNfY29ubmVjdGVkKSB7CkBAIC0yNTg4LDcgKzI0MDYsNyBAQCBzdGF0aWMgdm9pZCBk
cm1fc2V0dXBfY3J0Y3NfZmIoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlcikKIAkJCWJy
ZWFrOwogCQl9CiAJfQotCW11dGV4X3VubG9jaygmZmJfaGVscGVyLT5kZXYtPm1vZGVfY29uZmln
Lm11dGV4KTsKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJmNvbm5faXRlcik7CiAKIAlz
d2l0Y2ggKHN3X3JvdGF0aW9ucykgewogCWNhc2UgRFJNX01PREVfUk9UQVRFXzA6CkBAIC0yODI2
LDEyICsyNjQ0LDYgQEAgaW50IGRybV9mYl9oZWxwZXJfZmJkZXZfc2V0dXAoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlyZXQgPSBkcm1fZmJfaGVscGVyX3Np
bmdsZV9hZGRfYWxsX2Nvbm5lY3RvcnMoZmJfaGVscGVyKTsKLQlpZiAocmV0IDwgMCkgewotCQlE
Uk1fREVWX0VSUk9SKGRldi0+ZGV2LCAiZmJkZXY6IEZhaWxlZCB0byBhZGQgY29ubmVjdG9ycyAo
cmV0PSVkKVxuIiwgcmV0KTsKLQkJZ290byBlcnJfZHJtX2ZiX2hlbHBlcl9maW5pOwotCX0KLQog
CWlmICghZHJtX2Rydl91c2VzX2F0b21pY19tb2Rlc2V0KGRldikpCiAJCWRybV9oZWxwZXJfZGlz
YWJsZV91bnVzZWRfZnVuY3Rpb25zKGRldik7CiAKQEAgLTMxMzcsMTAgKzI5NDksNiBAQCBzdGF0
aWMgaW50IGRybV9mYmRldl9jbGllbnRfaG90cGx1ZyhzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNs
aWVudCkKIAlpZiAocmV0KQogCQlnb3RvIGVycjsKIAotCXJldCA9IGRybV9mYl9oZWxwZXJfc2lu
Z2xlX2FkZF9hbGxfY29ubmVjdG9ycyhmYl9oZWxwZXIpOwotCWlmIChyZXQpCi0JCWdvdG8gZXJy
X2NsZWFudXA7Ci0KIAlpZiAoIWRybV9kcnZfdXNlc19hdG9taWNfbW9kZXNldChkZXYpKQogCQlk
cm1faGVscGVyX2Rpc2FibGVfdW51c2VkX2Z1bmN0aW9ucyhkZXYpOwogCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2RybS9kcm1fY2xpZW50LmggYi9pbmNsdWRlL2RybS9kcm1fY2xpZW50LmgKaW5kZXgg
NmNmNDg0MTlmNzdmLi44ZDk0ODgwYmJlMjUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2RybV9j
bGllbnQuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fY2xpZW50LmgKQEAgLTcsNiArNyw3IEBACiAj
aW5jbHVkZSA8bGludXgvbXV0ZXguaD4KICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogCisjaW5j
bHVkZSA8ZHJtL2RybV9jb25uZWN0b3IuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2NydGMuaD4KIAog
c3RydWN0IGRybV9jbGllbnRfZGV2OwpAQCAtMTY5LDYgKzE3MCwyMCBAQCBpbnQgZHJtX2NsaWVu
dF9tb2Rlc2V0X2RwbXMoc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQsIGludCBtb2RlKTsK
IAlmb3IgKCh7IGxvY2tkZXBfYXNzZXJ0X2hlbGQoJihjbGllbnQpLT5tb2Rlc2V0X211dGV4KTsg
fSksIFwKIAkgICAgIG1vZGVzZXQgPSAoY2xpZW50KS0+bW9kZXNldHM7IG1vZGVzZXQtPmNydGM7
IG1vZGVzZXQrKykKIAorLyoqCisgKiBkcm1fY2xpZW50X2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVy
IC0gY29ubmVjdG9yX2xpc3QgaXRlcmF0b3IgbWFjcm8KKyAqIEBjb25uZWN0b3I6ICZzdHJ1Y3Qg
ZHJtX2Nvbm5lY3RvciBwb2ludGVyIHVzZWQgYXMgY3Vyc29yCisgKiBAaXRlcjogJnN0cnVjdCBk
cm1fY29ubmVjdG9yX2xpc3RfaXRlcgorICoKKyAqIFRoaXMgaXRlcmF0ZXMgdGhlIGNvbm5lY3Rv
cnMgdGhhdCBhcmUgdXNlYWJsZSBmb3IgaW50ZXJuYWwgY2xpZW50cyAoZXhjbHVkZXMKKyAqIHdy
aXRlYmFjayBjb25uZWN0b3JzKS4KKyAqCisgKiBGb3IgbW9yZSBpbmZvIHNlZSBkcm1fZm9yX2Vh
Y2hfY29ubmVjdG9yX2l0ZXIoKS4KKyAqLworI2RlZmluZSBkcm1fY2xpZW50X2Zvcl9lYWNoX2Nv
bm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgaXRlcikgXAorCWRybV9mb3JfZWFjaF9jb25uZWN0b3Jf
aXRlcihjb25uZWN0b3IsIGl0ZXIpIFwKKwkJaWYgKGNvbm5lY3Rvci0+Y29ubmVjdG9yX3R5cGUg
IT0gRFJNX01PREVfQ09OTkVDVE9SX1dSSVRFQkFDSykKKwogaW50IGRybV9jbGllbnRfZGVidWdm
c19pbml0KHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKTsKIAogI2VuZGlmCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2RybS9kcm1fZmJfaGVscGVyLmggYi9pbmNsdWRlL2RybS9kcm1fZmJfaGVscGVyLmgK
aW5kZXggNmIzMzRmNGQ4YTIyLi5lMTRkNTJlZjk2MzggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJt
L2RybV9mYl9oZWxwZXIuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fZmJfaGVscGVyLmgKQEAgLTk3
LDE2ICs5NywxMCBAQCBzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9mdW5jcyB7CiAJCQlzdHJ1Y3QgZHJt
X2ZiX2hlbHBlcl9zdXJmYWNlX3NpemUgKnNpemVzKTsKIH07CiAKLXN0cnVjdCBkcm1fZmJfaGVs
cGVyX2Nvbm5lY3RvciB7Ci0Jc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKLX07Ci0K
IC8qKgogICogc3RydWN0IGRybV9mYl9oZWxwZXIgLSBtYWluIHN0cnVjdHVyZSB0byBlbXVsYXRl
IGZiZGV2IG9uIHRvcCBvZiBLTVMKICAqIEBmYjogU2Nhbm91dCBmcmFtZWJ1ZmZlciBvYmplY3QK
ICAqIEBkZXY6IERSTSBkZXZpY2UKLSAqIEBjb25uZWN0b3JfY291bnQ6IG51bWJlciBvZiBjb25u
ZWN0ZWQgY29ubmVjdG9ycwotICogQGNvbm5lY3Rvcl9pbmZvX2FsbG9jX2NvdW50OiBzaXplIG9m
IGNvbm5lY3Rvcl9pbmZvCiAgKiBAZnVuY3M6IGRyaXZlciBjYWxsYmFja3MgZm9yIGZiIGhlbHBl
cgogICogQGZiZGV2OiBlbXVsYXRlZCBmYmRldiBkZXZpY2UgaW5mbyBzdHJ1Y3QKICAqIEBwc2V1
ZG9fcGFsZXR0ZTogZmFrZSBwYWxldHRlIG9mIDE2IGNvbG9ycwpAQCAtMTM4LDE1ICsxMzIsNiBA
QCBzdHJ1Y3QgZHJtX2ZiX2hlbHBlciB7CiAKIAlzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYjsK
IAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2OwotCWludCBjb25uZWN0b3JfY291bnQ7Ci0JaW50IGNv
bm5lY3Rvcl9pbmZvX2FsbG9jX2NvdW50OwotCS8qKgotCSAqIEBjb25uZWN0b3JfaW5mbzoKLQkg
KgotCSAqIEFycmF5IG9mIHBlci1jb25uZWN0b3IgaW5mb3JtYXRpb24uIERvIG5vdCBpdGVyYXRl
IGRpcmVjdGx5LCBidXQgdXNlCi0JICogZHJtX2ZiX2hlbHBlcl9mb3JfZWFjaF9jb25uZWN0b3Iu
Ci0JICovCi0Jc3RydWN0IGRybV9mYl9oZWxwZXJfY29ubmVjdG9yICoqY29ubmVjdG9yX2luZm87
CiAJY29uc3Qgc3RydWN0IGRybV9mYl9oZWxwZXJfZnVuY3MgKmZ1bmNzOwogCXN0cnVjdCBmYl9p
bmZvICpmYmRldjsKIAl1MzIgcHNldWRvX3BhbGV0dGVbMTddOwpAQCAtMjg2LDE4ICsyNzEsOCBA
QCBpbnQgZHJtX2ZiX2hlbHBlcl9pb2N0bChzdHJ1Y3QgZmJfaW5mbyAqaW5mbywgdW5zaWduZWQg
aW50IGNtZCwKIAogaW50IGRybV9mYl9oZWxwZXJfaG90cGx1Z19ldmVudChzdHJ1Y3QgZHJtX2Zi
X2hlbHBlciAqZmJfaGVscGVyKTsKIGludCBkcm1fZmJfaGVscGVyX2luaXRpYWxfY29uZmlnKHN0
cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsIGludCBicHBfc2VsKTsKLWludCBkcm1fZmJf
aGVscGVyX3NpbmdsZV9hZGRfYWxsX2Nvbm5lY3RvcnMoc3RydWN0IGRybV9mYl9oZWxwZXIgKmZi
X2hlbHBlcik7CiBpbnQgZHJtX2ZiX2hlbHBlcl9kZWJ1Z19lbnRlcihzdHJ1Y3QgZmJfaW5mbyAq
aW5mbyk7CiBpbnQgZHJtX2ZiX2hlbHBlcl9kZWJ1Z19sZWF2ZShzdHJ1Y3QgZmJfaW5mbyAqaW5m
byk7Ci1zdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqCi1kcm1faGFzX3ByZWZlcnJlZF9tb2RlKHN0
cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfY29ubmVjdG9yLAotCQkJaW50IHdpZHRo
LCBpbnQgaGVpZ2h0KTsKLXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoKLWRybV9waWNrX2NtZGxp
bmVfbW9kZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9jb25uZWN0b3IgKmZiX2hlbHBlcl9jb25uKTsK
LQotaW50IGRybV9mYl9oZWxwZXJfYWRkX29uZV9jb25uZWN0b3Ioc3RydWN0IGRybV9mYl9oZWxw
ZXIgKmZiX2hlbHBlciwgc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3Rvcik7Ci1pbnQgZHJt
X2ZiX2hlbHBlcl9yZW1vdmVfb25lX2Nvbm5lY3RvcihzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJf
aGVscGVyLAotCQkJCSAgICAgICBzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKTsKIAog
aW50IGRybV9mYl9oZWxwZXJfZmJkZXZfc2V0dXAoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJ
CSAgICAgIHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCkBAIC00NzIsMTIgKzQ0Nyw2
IEBAIHN0YXRpYyBpbmxpbmUgaW50IGRybV9mYl9oZWxwZXJfaW5pdGlhbF9jb25maWcoc3RydWN0
IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGlubGlu
ZSBpbnQKLWRybV9mYl9oZWxwZXJfc2luZ2xlX2FkZF9hbGxfY29ubmVjdG9ycyhzdHJ1Y3QgZHJt
X2ZiX2hlbHBlciAqZmJfaGVscGVyKQotewotCXJldHVybiAwOwotfQotCiBzdGF0aWMgaW5saW5l
IGludCBkcm1fZmJfaGVscGVyX2RlYnVnX2VudGVyKHN0cnVjdCBmYl9pbmZvICppbmZvKQogewog
CXJldHVybiAwOwpAQCAtNDg4LDM0ICs0NTcsNiBAQCBzdGF0aWMgaW5saW5lIGludCBkcm1fZmJf
aGVscGVyX2RlYnVnX2xlYXZlKHN0cnVjdCBmYl9pbmZvICppbmZvKQogCXJldHVybiAwOwogfQog
Ci1zdGF0aWMgaW5saW5lIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoKLWRybV9oYXNfcHJlZmVy
cmVkX21vZGUoc3RydWN0IGRybV9mYl9oZWxwZXJfY29ubmVjdG9yICpmYl9jb25uZWN0b3IsCi0J
CSAgICAgICBpbnQgd2lkdGgsIGludCBoZWlnaHQpCi17Ci0JcmV0dXJuIE5VTEw7Ci19Ci0KLXN0
YXRpYyBpbmxpbmUgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKgotZHJtX3BpY2tfY21kbGluZV9t
b2RlKHN0cnVjdCBkcm1fZmJfaGVscGVyX2Nvbm5lY3RvciAqZmJfaGVscGVyX2Nvbm4sCi0JCSAg
ICAgIGludCB3aWR0aCwgaW50IGhlaWdodCkKLXsKLQlyZXR1cm4gTlVMTDsKLX0KLQotc3RhdGlj
IGlubGluZSBpbnQKLWRybV9mYl9oZWxwZXJfYWRkX29uZV9jb25uZWN0b3Ioc3RydWN0IGRybV9m
Yl9oZWxwZXIgKmZiX2hlbHBlciwKLQkJCQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9y
KQotewotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW5saW5lIGludAotZHJtX2ZiX2hlbHBlcl9y
ZW1vdmVfb25lX2Nvbm5lY3RvcihzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqZmJfaGVscGVyLAotCQkJ
CSAgIHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IpCi17Ci0JcmV0dXJuIDA7Ci19Ci0K
IHN0YXRpYyBpbmxpbmUgaW50CiBkcm1fZmJfaGVscGVyX2ZiZGV2X3NldHVwKHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsCiAJCQkgIHN0cnVjdCBkcm1fZmJfaGVscGVyICpmYl9oZWxwZXIsCkBAIC01
NTcsNiArNDk4LDI3IEBAIGRybV9mYmRldl9nZW5lcmljX3NldHVwKHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHVuc2lnbmVkIGludCBwcmVmZXJyZWRfYnBwKQogCiAjZW5kaWYKIAorLyogVE9ETzog
VGhlcmUncyBhIHRvZG8gZW50cnkgdG8gcmVtb3ZlIHRoZXNlIHRocmVlICovCitzdGF0aWMgaW5s
aW5lIGludAorZHJtX2ZiX2hlbHBlcl9zaW5nbGVfYWRkX2FsbF9jb25uZWN0b3JzKHN0cnVjdCBk
cm1fZmJfaGVscGVyICpmYl9oZWxwZXIpCit7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbmxp
bmUgaW50Citkcm1fZmJfaGVscGVyX2FkZF9vbmVfY29ubmVjdG9yKHN0cnVjdCBkcm1fZmJfaGVs
cGVyICpmYl9oZWxwZXIsCisJCQkJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcikKK3sK
KwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlubGluZSBpbnQKK2RybV9mYl9oZWxwZXJfcmVtb3Zl
X29uZV9jb25uZWN0b3Ioc3RydWN0IGRybV9mYl9oZWxwZXIgKmZiX2hlbHBlciwKKwkJCQkgICBz
dHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQoreworCXJldHVybiAwOworfQorCiAvKioK
ICAqIGRybV9mYl9oZWxwZXJfcmVtb3ZlX2NvbmZsaWN0aW5nX2ZyYW1lYnVmZmVycyAtIHJlbW92
ZSBmaXJtd2FyZS1jb25maWd1cmVkIGZyYW1lYnVmZmVycwogICogQGE6IG1lbW9yeSByYW5nZSwg
dXNlcnMgb2Ygd2hpY2ggYXJlIHRvIGJlIHJlbW92ZWQKLS0gCjIuMjAuMQoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlz
dApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
