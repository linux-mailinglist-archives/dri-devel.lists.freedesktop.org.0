Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7F73C1C246
	for <lists+dri-devel@lfdr.de>; Tue, 14 May 2019 07:46:19 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 84F0E89262;
	Tue, 14 May 2019 05:46:17 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-ua1-x949.google.com (mail-ua1-x949.google.com
 [IPv6:2607:f8b0:4864:20::949])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0210389262
 for <dri-devel@lists.freedesktop.org>; Tue, 14 May 2019 05:46:15 +0000 (UTC)
Received: by mail-ua1-x949.google.com with SMTP id y14so926767uac.9
 for <dri-devel@lists.freedesktop.org>; Mon, 13 May 2019 22:46:15 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=eKMH6YJQm+ZWOgv0moo93/TT6lwjW3ZvkO6MZWwF52g=;
 b=sKyBekvsW7UPklsHH6hSy++EHeOuHw5nkHPREV0Ekx4g7YyuL7H77GZyNnyi2S2tUl
 SiFAMxhZmSq/ltoEADWDtZWHg0yZEtzcBdzMJLTUp1JMvmeEfyE2j0Q0sN5voHABGJAu
 v/YHMSoZr3a26pn6j4CoZHXl+ycJxTeKAb3T4fjMaFiJZlFX0ThTghK5+ZXLr/sVtaoU
 h820foHSHnoD+ZtUI17SrNuqXgG706kMpiBm3kYXrIv5EXUieOO238SlzXCulHw9Afi/
 MhiqW6teFexVvJVBTykNPS9URFtxStmuCwy37kE1ZjMhoGe3p5DUY1TuYbyWzUjjBCq6
 XGQw==
X-Gm-Message-State: APjAAAWvnEmcIusK1ElcVVdxS7w+E0ydx4H2W6ByIUbytGMbqy6uWZJ0
 7RB7TT8E8i/AS7hDX+AKDxGByQUFuEPkllHZeRNMnw==
X-Google-Smtp-Source: APXvYqxIDT6FtY5c/bckrFFXO2N2coy7WWwLjTUKiTN84TROdLBQro5CglbwiWR0KQCcROIOOnnuTIeNfCIOfsbNLHsGVQ==
X-Received: by 2002:a67:ec15:: with SMTP id d21mr8151113vso.186.1557812775017; 
 Mon, 13 May 2019 22:46:15 -0700 (PDT)
Date: Mon, 13 May 2019 22:42:43 -0700
In-Reply-To: <20190514054251.186196-1-brendanhiggins@google.com>
Message-Id: <20190514054251.186196-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190514054251.186196-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.21.0.1020.gf2820cf01a-goog
Subject: [PATCH v3 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, keescook@google.com, 
 kieran.bingham@ideasonboard.com, mcgrof@kernel.org, robh@kernel.org, 
 sboyd@kernel.org, shuah@kernel.org, tytso@mit.edu, 
 yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=eKMH6YJQm+ZWOgv0moo93/TT6lwjW3ZvkO6MZWwF52g=;
 b=gQLkNI7X5JGlGQs5aU6ViTtfWrDSOgeFVZe6Y7m9XWqPhubBZ5iwrAascNztCIEgvd
 v/4ckUB6CFTAn/9RlREkuvgZRqrRd6l2SVCbauRFwNSzv8dtO230DK3X/dDxz0zOc1kb
 YzNN2w/ytdWe6Qc8flZPgGskJQUAk/DKHCjyMBiybd+B3uDMHO3Rt1Iq8ynfh6J0gVHm
 rpoRXCQsN/uOjcEAr9e6mV0SX1eeKD2E/gYH5ZXL3/SiMQH0fA0HhlxkhJd+rm8Z3vjB
 cyWPBZg7V1Fvqu6b4FB1EKkTDn/TbM2q61SQpSw/cgm9vTTloXT6/tuk+7ffsy6mq8mm
 rEFw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, dan.j.williams@intel.com,
 kunit-dev@googlegroups.com, richard@nod.at, rdunlap@infradead.org,
 linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQpD
aGFuZ2VzIFNpbmNlIExhc3QgUmV2aXNpb246CiAtIFJlbW92ZWQgdW5uZWNlc3NhcnkgaW5kaXJl
Y3Rpb24gYXMgcGVyIExvZ2FuJ3MgY29tbWVudHMuCi0tLQogaW5jbHVkZS9rdW5pdC90ZXN0Lmgg
ICAgICB8ICAxNCArKysrCiBpbmNsdWRlL2t1bml0L3RyeS1jYXRjaC5oIHwgIDY5ICsrKysrKysr
KysrKysrKysrKysKIGt1bml0L01ha2VmaWxlICAgICAgICAgICAgfCAgIDMgKy0KIGt1bml0L3Rl
c3QuYyAgICAgICAgICAgICAgfCAxMzYgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrLS0KIGt1bml0L3RyeS1jYXRjaC5jICAgICAgICAgfCAgOTUgKysrKysrKysrKysrKysrKysr
KysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgMzA5IGluc2VydGlvbnMoKyksIDggZGVsZXRpb25z
KC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9rdW5pdC90cnktY2F0Y2guaAogY3JlYXRl
IG1vZGUgMTAwNjQ0IGt1bml0L3RyeS1jYXRjaC5jCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9rdW5p
dC90ZXN0LmggYi9pbmNsdWRlL2t1bml0L3Rlc3QuaAppbmRleCA4NjE4N2JhMDY5YTVkLi5hZmY1
NWI1NjEwZTdkIDEwMDY0NAotLS0gYS9pbmNsdWRlL2t1bml0L3Rlc3QuaAorKysgYi9pbmNsdWRl
L2t1bml0L3Rlc3QuaApAQCAtMTIsNiArMTIsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+
CiAjaW5jbHVkZSA8bGludXgvc2xhYi5oPgogI2luY2x1ZGUgPGt1bml0L2t1bml0LXN0cmVhbS5o
PgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgogCiBzdHJ1Y3Qga3VuaXRfcmVzb3VyY2U7
CiAKQEAgLTE2NiwxNSArMTY3LDI4IEBAIHN0cnVjdCBrdW5pdCB7CiAKIAkvKiBwcml2YXRlOiBp
bnRlcm5hbCB1c2Ugb25seS4gKi8KIAljb25zdCBjaGFyICpuYW1lOyAvKiBSZWFkIG9ubHkgYWZ0
ZXIgaW5pdGlhbGl6YXRpb24hICovCisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCB0cnlfY2F0Y2g7
CiAJc3BpbmxvY2tfdCBsb2NrOyAvKiBHYXVyZHMgYWxsIG11dGFibGUgdGVzdCBzdGF0ZS4gKi8K
IAlib29sIHN1Y2Nlc3M7IC8qIFByb3RlY3RlZCBieSBsb2NrLiAqLworCWJvb2wgZGVhdGhfdGVz
dDsgLyogUHJvdGVjdGVkIGJ5IGxvY2suICovCiAJc3RydWN0IGxpc3RfaGVhZCByZXNvdXJjZXM7
IC8qIFByb3RlY3RlZCBieSBsb2NrLiAqLwogfTsKIAorc3RhdGljIGlubGluZSB2b2lkIGt1bml0
X3NldF9kZWF0aF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCwgYm9vbCBkZWF0aF90ZXN0KQorewor
CXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmdGVzdC0+bG9jaywg
ZmxhZ3MpOworCXRlc3QtPmRlYXRoX3Rlc3QgPSBkZWF0aF90ZXN0OworCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJnRlc3QtPmxvY2ssIGZsYWdzKTsKK30KKwogdm9pZCBrdW5pdF9pbml0X3Rlc3Qo
c3RydWN0IGt1bml0ICp0ZXN0LCBjb25zdCBjaGFyICpuYW1lKTsKIAogdm9pZCBrdW5pdF9mYWls
KHN0cnVjdCBrdW5pdCAqdGVzdCwgc3RydWN0IGt1bml0X3N0cmVhbSAqc3RyZWFtKTsKIAordm9p
ZCBrdW5pdF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRlc3QpOworCiBpbnQga3VuaXRfcnVuX3Rlc3Rz
KHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSk7CiAKIC8qKgpkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9rdW5pdC90cnktY2F0Y2guaCBiL2luY2x1ZGUva3VuaXQvdHJ5LWNhdGNoLmgKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uOGE0MTRhOWFmMGI2NAotLS0gL2Rldi9u
dWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdHJ5LWNhdGNoLmgKQEAgLTAsMCArMSw2OSBAQAorLyog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8KKy8qCisgKiBBbiBBUEkgdG8gYWxs
b3cgYSBmdW5jdGlvbiwgdGhhdCBtYXkgZmFpbCwgdG8gYmUgZXhlY3V0ZWQsIGFuZCByZWNvdmVy
IGluIGEKKyAqIGNvbnRyb2xsZWQgbWFubmVyLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwg
R29vZ2xlIExMQy4KKyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bn
b29nbGUuY29tPgorICovCisKKyNpZm5kZWYgX0tVTklUX1RSWV9DQVRDSF9ICisjZGVmaW5lIF9L
VU5JVF9UUllfQ0FUQ0hfSAorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKwordHlwZWRlZiB2
b2lkICgqa3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCkodm9pZCAqKTsKKworc3RydWN0IGt1bml0Owor
CisvKgorICogc3RydWN0IGt1bml0X3RyeV9jYXRjaCAtIHByb3ZpZGVzIGEgZ2VuZXJpYyB3YXkg
dG8gcnVuIGNvZGUgd2hpY2ggbWlnaHQgZmFpbC4KKyAqIEBjb250ZXh0OiB1c2VkIHRvIHBhc3Mg
dXNlciBkYXRhIHRvIHRoZSB0cnkgYW5kIGNhdGNoIGZ1bmN0aW9ucy4KKyAqCisgKiBrdW5pdF90
cnlfY2F0Y2ggcHJvdmlkZXMgYSBnZW5lcmljLCBhcmNoaXRlY3R1cmUgaW5kZXBlbmRlbnQgd2F5
IHRvIGV4ZWN1dGUKKyAqIGFuIGFyYml0cmFyeSBmdW5jdGlvbiBvZiB0eXBlIGt1bml0X3RyeV9j
YXRjaF9mdW5jX3Qgd2hpY2ggbWF5IGJhaWwgb3V0IGJ5CisgKiBjYWxsaW5nIGt1bml0X3RyeV9j
YXRjaF90aHJvdygpLiBJZiBrdW5pdF90cnlfY2F0Y2hfdGhyb3coKSBpcyBjYWxsZWQsIEB0cnkK
KyAqIGlzIHN0b3BwZWQgYXQgdGhlIHNpdGUgb2YgaW52b2NhdGlvbiBhbmQgQGNhdGNoIGlzIGNh
dGNoIGlzIGNhbGxlZC4KKyAqCisgKiBzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoIHByb3ZpZGVzIGEg
Z2VuZXJpYyBpbnRlcmZhY2UgZm9yIHRoZSBmdW5jdGlvbmFsaXR5CisgKiBuZWVkZWQgdG8gaW1w
bGVtZW50IGt1bml0LT5hYm9ydCgpIHdoaWNoIGluIHR1cm4gaXMgbmVlZGVkIGZvciBpbXBsZW1l
bnRpbmcKKyAqIGFzc2VydGlvbnMuIEFzc2VydGlvbnMgYWxsb3cgc3RhdGluZyBhIHByZWNvbmRp
dGlvbiBmb3IgYSB0ZXN0IHNpbXBsaWZ5aW5nCisgKiBob3cgdGVzdCBjYXNlcyBhcmUgd3JpdHRl
biBhbmQgcHJlc2VudGVkLgorICoKKyAqIEFzc2VydGlvbnMgYXJlIGxpa2UgZXhwZWN0YXRpb25z
LCBleGNlcHQgdGhleSBhYm9ydCAoY2FsbAorICoga3VuaXRfdHJ5X2NhdGNoX3Rocm93KCkpIHdo
ZW4gdGhlIHNwZWNpZmllZCBjb25kaXRpb24gaXMgbm90IG1ldC4gVGhpcyBpcworICogdXNlZnVs
IHdoZW4geW91IGxvb2sgYXQgYSB0ZXN0IGNhc2UgYXMgYSBsb2dpY2FsIHN0YXRlbWVudCBhYm91
dCBzb21lIHBpZWNlCisgKiBvZiBjb2RlLCB3aGVyZSBhc3NlcnRpb25zIGFyZSB0aGUgcHJlbWlz
ZXMgZm9yIHRoZSB0ZXN0IGNhc2UsIGFuZCB0aGUKKyAqIGNvbmNsdXNpb24gaXMgYSBzZXQgb2Yg
cHJlZGljYXRlcywgcmF0aGVyIGV4cGVjdGF0aW9ucywgdGhhdCBtdXN0IGFsbCBiZQorICogdHJ1
ZS4gSWYgeW91ciBwcmVtaXNlcyBhcmUgdmlvbGF0ZWQsIGl0IGRvZXMgbm90IG1ha2VzIHNlbnNl
IHRvIGNvbnRpbnVlLgorICovCitzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoIHsKKwkvKiBwcml2YXRl
OiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KKwlzdHJ1Y3Qga3VuaXQgKnRlc3Q7CisJc3RydWN0IGNv
bXBsZXRpb24gKnRyeV9jb21wbGV0aW9uOworCWludCB0cnlfcmVzdWx0OworCWt1bml0X3RyeV9j
YXRjaF9mdW5jX3QgdHJ5OworCWt1bml0X3RyeV9jYXRjaF9mdW5jX3QgY2F0Y2g7CisJdm9pZCAq
Y29udGV4dDsKK307CisKK3ZvaWQga3VuaXRfdHJ5X2NhdGNoX2luaXQoc3RydWN0IGt1bml0X3Ry
eV9jYXRjaCAqdHJ5X2NhdGNoLAorCQkJICBzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkgIGt1bml0
X3RyeV9jYXRjaF9mdW5jX3QgdHJ5LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IGNhdGNo
KTsKKwordm9pZCBrdW5pdF90cnlfY2F0Y2hfcnVuKHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRy
eV9jYXRjaCwgdm9pZCAqY29udGV4dCk7CisKK3ZvaWQgX19ub3JldHVybiBrdW5pdF90cnlfY2F0
Y2hfdGhyb3coc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKTsKKworc3RhdGljIGlu
bGluZSBpbnQga3VuaXRfdHJ5X2NhdGNoX2dldF9yZXN1bHQoc3RydWN0IGt1bml0X3RyeV9jYXRj
aCAqdHJ5X2NhdGNoKQoreworCXJldHVybiB0cnlfY2F0Y2gtPnRyeV9yZXN1bHQ7Cit9CisKKy8q
CisgKiBFeHBvc2VkIGZvciB0ZXN0aW5nIG9ubHkuCisgKi8KK3ZvaWQga3VuaXRfZ2VuZXJpY190
cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gpOworCisjZW5k
aWYgLyogX0tVTklUX1RSWV9DQVRDSF9IICovCmRpZmYgLS1naXQgYS9rdW5pdC9NYWtlZmlsZSBi
L2t1bml0L01ha2VmaWxlCmluZGV4IDYwYTllYTZjYjQ2OTcuLjFmNzY4MGNmYTExYWQgMTAwNjQ0
Ci0tLSBhL2t1bml0L01ha2VmaWxlCisrKyBiL2t1bml0L01ha2VmaWxlCkBAIC0xLDYgKzEsNyBA
QAogb2JqLSQoQ09ORklHX0tVTklUKSArPQkJCXRlc3QubyBcCiAJCQkJCXN0cmluZy1zdHJlYW0u
byBcCi0JCQkJCWt1bml0LXN0cmVhbS5vCisJCQkJCWt1bml0LXN0cmVhbS5vIFwKKwkJCQkJdHJ5
LWNhdGNoLm8KIAogb2JqLSQoQ09ORklHX0tVTklUX1RFU1QpICs9CQlzdHJpbmctc3RyZWFtLXRl
c3QubwogCmRpZmYgLS1naXQgYS9rdW5pdC90ZXN0LmMgYi9rdW5pdC90ZXN0LmMKaW5kZXggZTA3
MjdhZmI1ZDhhOS4uMzRjZWNjNWM4MDVlOCAxMDA2NDQKLS0tIGEva3VuaXQvdGVzdC5jCisrKyBi
L2t1bml0L3Rlc3QuYwpAQCAtNiw5ICs2LDkgQEAKICAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5z
IDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgogICovCiAKLSNpbmNsdWRlIDxsaW51eC9zY2hl
ZC5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL2RlYnVnLmg+CiAjaW5jbHVkZSA8a3VuaXQvdGVz
dC5oPgorI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgogCiBzdGF0aWMgYm9vbCBrdW5pdF9n
ZXRfc3VjY2VzcyhzdHJ1Y3Qga3VuaXQgKnRlc3QpCiB7CkBAIC0zMSw2ICszMSwxOCBAQCBzdGF0
aWMgdm9pZCBrdW5pdF9zZXRfc3VjY2VzcyhzdHJ1Y3Qga3VuaXQgKnRlc3QsIGJvb2wgc3VjY2Vz
cykKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0ZXN0LT5sb2NrLCBmbGFncyk7CiB9CiAKK3N0
YXRpYyBib29sIGt1bml0X2dldF9kZWF0aF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwl1
bnNpZ25lZCBsb25nIGZsYWdzOworCWJvb2wgZGVhdGhfdGVzdDsKKworCXNwaW5fbG9ja19pcnFz
YXZlKCZ0ZXN0LT5sb2NrLCBmbGFncyk7CisJZGVhdGhfdGVzdCA9IHRlc3QtPmRlYXRoX3Rlc3Q7
CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdGVzdC0+bG9jaywgZmxhZ3MpOworCisJcmV0dXJu
IGRlYXRoX3Rlc3Q7Cit9CisKIHN0YXRpYyBpbnQga3VuaXRfdnByaW50a19lbWl0KGludCBsZXZl
bCwgY29uc3QgY2hhciAqZm10LCB2YV9saXN0IGFyZ3MpCiB7CiAJcmV0dXJuIHZwcmludGtfZW1p
dCgwLCBsZXZlbCwgTlVMTCwgMCwgZm10LCBhcmdzKTsKQEAgLTE0NSw2ICsxNTcsMjEgQEAgdm9p
ZCBrdW5pdF9mYWlsKHN0cnVjdCBrdW5pdCAqdGVzdCwgc3RydWN0IGt1bml0X3N0cmVhbSAqc3Ry
ZWFtKQogCWt1bml0X3N0cmVhbV9jb21taXQoc3RyZWFtKTsKIH0KIAordm9pZCBfX25vcmV0dXJu
IGt1bml0X2Fib3J0KHN0cnVjdCBrdW5pdCAqdGVzdCkKK3sKKwlrdW5pdF9zZXRfZGVhdGhfdGVz
dCh0ZXN0LCB0cnVlKTsKKworCWt1bml0X3RyeV9jYXRjaF90aHJvdygmdGVzdC0+dHJ5X2NhdGNo
KTsKKworCS8qCisJICogVGhyb3cgY291bGQgbm90IGFib3J0IGZyb20gdGVzdC4KKwkgKgorCSAq
IFhYWDogd2Ugc2hvdWxkIG5ldmVyIHJlYWNoIHRoaXMgbGluZSEgQXMga3VuaXRfdHJ5X2NhdGNo
X3Rocm93IGlzCisJICogbWFya2VkIF9fbm9yZXR1cm4uCisJICovCisJV0FSTl9PTkNFKHRydWUs
ICJUaHJvdyBjb3VsZCBub3QgYWJvcnQgZnJvbSB0ZXN0IVxuIik7Cit9CisKIHZvaWQga3VuaXRf
aW5pdF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCwgY29uc3QgY2hhciAqbmFtZSkKIHsKIAlzcGlu
X2xvY2tfaW5pdCgmdGVzdC0+bG9jayk7CkBAIC0xOTMsMTggKzIyMCwxMTMgQEAgc3RhdGljIHZv
aWQga3VuaXRfcnVuX2Nhc2VfY2xlYW51cChzdHJ1Y3Qga3VuaXQgKnRlc3QsCiB9CiAKIC8qCi0g
KiBQZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEgdGVzdCBjYXNlLgorICogSGFuZGxlcyBhbiB1
bmV4cGVjdGVkIGNyYXNoIGluIGEgdGVzdCBjYXNlLgorICovCitzdGF0aWMgdm9pZCBrdW5pdF9o
YW5kbGVfdGVzdF9jcmFzaChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgc3RydWN0IGt1bml0
X21vZHVsZSAqbW9kdWxlLAorCQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCit7
CisJa3VuaXRfZXJyKHRlc3QsICJrdW5pdCB0ZXN0IGNhc2UgY3Jhc2hlZCEiKTsKKwkvKgorCSAq
IFRPRE8oYnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbSk6IFRoaXMgcHJpbnRzIHRoZSBzdGFjayB0
cmFjZSB1cAorCSAqIHRocm91Z2ggdGhpcyBmcmFtZSwgbm90IHVwIHRvIHRoZSBmcmFtZSB0aGF0
IGNhdXNlZCB0aGUgY3Jhc2guCisJICovCisJc2hvd19zdGFjayhOVUxMLCBOVUxMKTsKKworCWt1
bml0X2Nhc2VfaW50ZXJuYWxfY2xlYW51cCh0ZXN0KTsKK30KKworc3RydWN0IGt1bml0X3RyeV9j
YXRjaF9jb250ZXh0IHsKKwlzdHJ1Y3Qga3VuaXQgKnRlc3Q7CisJc3RydWN0IGt1bml0X21vZHVs
ZSAqbW9kdWxlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2U7Cit9OworCitzdGF0aWMg
dm9pZCBrdW5pdF90cnlfcnVuX2Nhc2Uodm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5
X2NhdGNoX2NvbnRleHQgKmN0eCA9IGRhdGE7CisJc3RydWN0IGt1bml0ICp0ZXN0ID0gY3R4LT50
ZXN0OworCXN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSA9IGN0eC0+bW9kdWxlOworCXN0cnVj
dCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UgPSBjdHgtPnRlc3RfY2FzZTsKKworCS8qCisJICoga3Vu
aXRfcnVuX2Nhc2VfaW50ZXJuYWwgbWF5IGVuY291bnRlciBhIGZhdGFsIGVycm9yOyBpZiBpdCBk
b2VzLAorCSAqIGFib3J0IHdpbGwgYmUgY2FsbGVkLCB0aGlzIHRocmVhZCB3aWxsIGV4aXQsIGFu
ZCBmaW5hbGx5IHRoZSBwYXJlbnQKKwkgKiB0aHJlYWQgd2lsbCByZXN1bWUgY29udHJvbCBhbmQg
aGFuZGxlIGFueSBuZWNlc3NhcnkgY2xlYW4gdXAuCisJICovCisJa3VuaXRfcnVuX2Nhc2VfaW50
ZXJuYWwodGVzdCwgbW9kdWxlLCB0ZXN0X2Nhc2UpOworCS8qIFRoaXMgbGluZSBtYXkgbmV2ZXIg
YmUgcmVhY2hlZC4gKi8KKwlrdW5pdF9ydW5fY2FzZV9jbGVhbnVwKHRlc3QsIG1vZHVsZSwgdGVz
dF9jYXNlKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfY2F0Y2hfcnVuX2Nhc2Uodm9pZCAqZGF0
YSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRleHQgKmN0eCA9IGRhdGE7CisJc3Ry
dWN0IGt1bml0ICp0ZXN0ID0gY3R4LT50ZXN0OworCXN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVs
ZSA9IGN0eC0+bW9kdWxlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UgPSBjdHgtPnRl
c3RfY2FzZTsKKwlpbnQgdHJ5X2V4aXRfY29kZSA9IGt1bml0X3RyeV9jYXRjaF9nZXRfcmVzdWx0
KCZ0ZXN0LT50cnlfY2F0Y2gpOworCisJaWYgKHRyeV9leGl0X2NvZGUpIHsKKwkJa3VuaXRfc2V0
X3N1Y2Nlc3ModGVzdCwgZmFsc2UpOworCQkvKgorCQkgKiBUZXN0IGNhc2UgY291bGQgbm90IGZp
bmlzaCwgd2UgaGF2ZSBubyBpZGVhIHdoYXQgc3RhdGUgaXQgaXMKKwkJICogaW4sIHNvIGRvbid0
IGRvIGNsZWFuIHVwLgorCQkgKi8KKwkJaWYgKHRyeV9leGl0X2NvZGUgPT0gLUVUSU1FRE9VVCkK
KwkJCWt1bml0X2Vycih0ZXN0LCAidGVzdCBjYXNlIHRpbWVkIG91dFxuIik7CisJCS8qCisJCSAq
IFVua25vd24gaW50ZXJuYWwgZXJyb3Igb2NjdXJyZWQgcHJldmVudGluZyB0ZXN0IGNhc2UgZnJv
bQorCQkgKiBydW5uaW5nLCBzbyB0aGVyZSBpcyBub3RoaW5nIHRvIGNsZWFuIHVwLgorCQkgKi8K
KwkJZWxzZQorCQkJa3VuaXRfZXJyKHRlc3QsICJpbnRlcm5hbCBlcnJvciBvY2N1cnJlZCBwcmV2
ZW50aW5nIHRlc3QgY2FzZSBmcm9tIHJ1bm5pbmc6ICVkXG4iLAorCQkJCSAgdHJ5X2V4aXRfY29k
ZSk7CisJCXJldHVybjsKKwl9CisKKwlpZiAoa3VuaXRfZ2V0X2RlYXRoX3Rlc3QodGVzdCkpIHsK
KwkJLyoKKwkJICogRVhQRUNURUQgREVBVEg6IGt1bml0X3J1bl9jYXNlX2ludGVybmFsIGVuY291
bnRlcmVkCisJCSAqIGFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBFdmVyeXRoaW5nIHNob3VsZCBi
ZSBpbiBhIHNhZmUKKwkJICogc3RhdGUuCisJCSAqLworCQlrdW5pdF9ydW5fY2FzZV9jbGVhbnVw
KHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBVTkVYUEVD
VEVEIERFQVRIOiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCBlbmNvdW50ZXJlZCBhbgorCQkgKiB1
bmFudGljaXBhdGVkIGZhdGFsIGVycm9yLiBXZSBoYXZlIG5vIGlkZWEgd2hhdCB0aGUgc3RhdGUg
b2YKKwkJICogdGhlIHRlc3QgY2FzZSBpcyBpbi4KKwkJICovCisJCWt1bml0X2hhbmRsZV90ZXN0
X2NyYXNoKHRlc3QsIG1vZHVsZSwgdGVzdF9jYXNlKTsKKwkJa3VuaXRfc2V0X3N1Y2Nlc3ModGVz
dCwgZmFsc2UpOworCX0KK30KKworLyoKKyAqIFBlcmZvcm1zIGFsbCBsb2dpYyB0byBydW4gYSB0
ZXN0IGNhc2UuIEl0IGFsc28gY2F0Y2hlcyBtb3N0IGVycm9ycyB0aGF0CisgKiBvY2N1cnMgaW4g
YSB0ZXN0IGNhc2UgYW5kIHJlcG9ydHMgdGhlbSBhcyBmYWlsdXJlcy4KICAqLwotc3RhdGljIHZv
aWQga3VuaXRfcnVuX2Nhc2Uoc3RydWN0IGt1bml0X21vZHVsZSAqbW9kdWxlLAotCQkJICAgc3Ry
dWN0IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSkKK3N0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlX2Nh
dGNoX2Vycm9ycyhzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUsCisJCQkJCXN0cnVjdCBrdW5p
dF9jYXNlICp0ZXN0X2Nhc2UpCiB7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaF9jb250ZXh0IGNv
bnRleHQ7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoOwogCXN0cnVjdCBrdW5p
dCB0ZXN0OwogCiAJa3VuaXRfaW5pdF90ZXN0KCZ0ZXN0LCB0ZXN0X2Nhc2UtPm5hbWUpOworCXRy
eV9jYXRjaCA9ICZ0ZXN0LnRyeV9jYXRjaDsKIAlrdW5pdF9zZXRfc3VjY2VzcygmdGVzdCwgdHJ1
ZSk7CisJa3VuaXRfc2V0X2RlYXRoX3Rlc3QoJnRlc3QsIGZhbHNlKTsKIAotCWt1bml0X3J1bl9j
YXNlX2ludGVybmFsKCZ0ZXN0LCBtb2R1bGUsIHRlc3RfY2FzZSk7Ci0Ja3VuaXRfcnVuX2Nhc2Vf
Y2xlYW51cCgmdGVzdCwgbW9kdWxlLCB0ZXN0X2Nhc2UpOworCWt1bml0X3RyeV9jYXRjaF9pbml0
KHRyeV9jYXRjaCwKKwkJCSAgICAgJnRlc3QsCisJCQkgICAgIGt1bml0X3RyeV9ydW5fY2FzZSwK
KwkJCSAgICAga3VuaXRfY2F0Y2hfcnVuX2Nhc2UpOworCWNvbnRleHQudGVzdCA9ICZ0ZXN0Owor
CWNvbnRleHQubW9kdWxlID0gbW9kdWxlOworCWNvbnRleHQudGVzdF9jYXNlID0gdGVzdF9jYXNl
OworCWt1bml0X3RyeV9jYXRjaF9ydW4odHJ5X2NhdGNoLCAmY29udGV4dCk7CiAKIAl0ZXN0X2Nh
c2UtPnN1Y2Nlc3MgPSBrdW5pdF9nZXRfc3VjY2VzcygmdGVzdCk7CiB9CkBAIC0yMTcsNyArMzM5
LDcgQEAgaW50IGt1bml0X3J1bl90ZXN0cyhzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUpCiAJ
a3VuaXRfcHJpbnRfc3VidGVzdF9zdGFydChtb2R1bGUpOwogCiAJZm9yICh0ZXN0X2Nhc2UgPSBt
b2R1bGUtPnRlc3RfY2FzZXM7IHRlc3RfY2FzZS0+cnVuX2Nhc2U7IHRlc3RfY2FzZSsrKSB7Ci0J
CWt1bml0X3J1bl9jYXNlKG1vZHVsZSwgdGVzdF9jYXNlKTsKKwkJa3VuaXRfcnVuX2Nhc2VfY2F0
Y2hfZXJyb3JzKG1vZHVsZSwgdGVzdF9jYXNlKTsKIAkJa3VuaXRfcHJpbnRfdGVzdF9jYXNlX29r
X25vdF9vayh0ZXN0X2Nhc2UsIHRlc3RfY2FzZV9jb3VudCsrKTsKIAl9CiAKZGlmZiAtLWdpdCBh
L2t1bml0L3RyeS1jYXRjaC5jIGIva3VuaXQvdHJ5LWNhdGNoLmMKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uZGU1ODBmMDc0Mzg3YgotLS0gL2Rldi9udWxsCisrKyBi
L2t1bml0L3RyeS1jYXRjaC5jCkBAIC0wLDAgKzEsOTUgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wCisvKgorICogQW4gQVBJIHRvIGFsbG93IGEgZnVuY3Rpb24sIHRoYXQg
bWF5IGZhaWwsIHRvIGJlIGV4ZWN1dGVkLCBhbmQgcmVjb3ZlciBpbiBhCisgKiBjb250cm9sbGVk
IG1hbm5lci4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBMTEMuCisgKiBBdXRo
b3I6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KKyAqLworCisj
aW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CisjaW5jbHVkZSA8a3VuaXQvdGVzdC5oPgorI2lu
Y2x1ZGUgPGxpbnV4L2NvbXBsZXRpb24uaD4KKyNpbmNsdWRlIDxsaW51eC9rdGhyZWFkLmg+CisK
K3ZvaWQgX19ub3JldHVybiBrdW5pdF90cnlfY2F0Y2hfdGhyb3coc3RydWN0IGt1bml0X3RyeV9j
YXRjaCAqdHJ5X2NhdGNoKQoreworCXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IC1FRkFVTFQ7CisJ
Y29tcGxldGVfYW5kX2V4aXQodHJ5X2NhdGNoLT50cnlfY29tcGxldGlvbiwgLUVGQVVMVCk7Cit9
CisKK3N0YXRpYyBpbnQga3VuaXRfZ2VuZXJpY19ydW5fdGhyZWFkZm5fYWRhcHRlcih2b2lkICpk
YXRhKQoreworCXN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCA9IGRhdGE7CisKKwl0
cnlfY2F0Y2gtPnRyeSh0cnlfY2F0Y2gtPmNvbnRleHQpOworCisJY29tcGxldGVfYW5kX2V4aXQo
dHJ5X2NhdGNoLT50cnlfY29tcGxldGlvbiwgMCk7Cit9CisKK3ZvaWQga3VuaXRfdHJ5X2NhdGNo
X3J1bihzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsIHZvaWQgKmNvbnRleHQpCit7
CisJREVDTEFSRV9DT01QTEVUSU9OX09OU1RBQ0sodHJ5X2NvbXBsZXRpb24pOworCXN0cnVjdCBr
dW5pdCAqdGVzdCA9IHRyeV9jYXRjaC0+dGVzdDsKKwlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2tf
c3RydWN0OworCWludCBleGl0X2NvZGUsIHN0YXR1czsKKworCXRyeV9jYXRjaC0+Y29udGV4dCA9
IGNvbnRleHQ7CisJdHJ5X2NhdGNoLT50cnlfY29tcGxldGlvbiA9ICZ0cnlfY29tcGxldGlvbjsK
Kwl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAwOworCXRhc2tfc3RydWN0ID0ga3RocmVhZF9ydW4o
a3VuaXRfZ2VuZXJpY19ydW5fdGhyZWFkZm5fYWRhcHRlciwKKwkJCQkgIHRyeV9jYXRjaCwKKwkJ
CQkgICJrdW5pdF90cnlfY2F0Y2hfdGhyZWFkIik7CisJaWYgKElTX0VSUih0YXNrX3N0cnVjdCkp
IHsKKwkJdHJ5X2NhdGNoLT5jYXRjaCh0cnlfY2F0Y2gtPmNvbnRleHQpOworCQlyZXR1cm47CisJ
fQorCisJLyoKKwkgKiBUT0RPKGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20pOiBXZSBzaG91bGQg
cHJvYmFibHkgaGF2ZSBzb21lIHR5cGUgb2YKKwkgKiB2YXJpYWJsZSB0aW1lb3V0IGhlcmUuIFRo
ZSBvbmx5IHF1ZXN0aW9uIGlzIHdoYXQgdGhhdCB0aW1lb3V0IHZhbHVlCisJICogc2hvdWxkIGJl
LgorCSAqCisJICogVGhlIGludGVudGlvbiBoYXMgYWx3YXlzIGJlZW4sIGF0IHNvbWUgcG9pbnQs
IHRvIGJlIGFibGUgdG8gbGFiZWwKKwkgKiB0ZXN0cyB3aXRoIHNvbWUgdHlwZSBvZiBzaXplIGJ1
Y2tldCAodW5pdC9zbWFsbCwgaW50ZWdyYXRpb24vbWVkaXVtLAorCSAqIGxhcmdlL3N5c3RlbS9l
bmQtdG8tZW5kLCBldGMpLCB3aGVyZSBlYWNoIHNpemUgYnVja2V0IHdvdWxkIGdldCBhCisJICog
ZGVmYXVsdCB0aW1lb3V0IHZhbHVlIGtpbmQgb2YgbGlrZSB3aGF0IEJhemVsIGRvZXM6CisJICog
aHR0cHM6Ly9kb2NzLmJhemVsLmJ1aWxkL3ZlcnNpb25zL21hc3Rlci9iZS9jb21tb24tZGVmaW5p
dGlvbnMuaHRtbCN0ZXN0LnNpemUKKwkgKiBUaGVyZSBpcyBzdGlsbCBzb21lIGRlYmF0ZSB0byBi
ZSBoYWQgb24gZXhhY3RseSBob3cgd2UgZG8gdGhpcy4gKEZvcgorCSAqIG9uZSwgd2UgcHJvYmFi
bHkgd2FudCB0byBoYXZlIHNvbWUgc29ydCBvZiB0ZXN0IHJ1bm5lciBsZXZlbAorCSAqIHRpbWVv
dXQuKQorCSAqCisJICogRm9yIG1vcmUgYmFja2dyb3VuZCBvbiB0aGlzIHRvcGljLCBzZWU6CisJ
ICogaHR0cHM6Ly9taWtlLWJsYW5kLmNvbS8yMDExLzExLzAxL3NtYWxsLW1lZGl1bS1sYXJnZS5o
dG1sCisJICovCisJc3RhdHVzID0gd2FpdF9mb3JfY29tcGxldGlvbl90aW1lb3V0KCZ0cnlfY29t
cGxldGlvbiwKKwkJCQkJICAgICAzMDAgKiBNU0VDX1BFUl9TRUMpOyAvKiA1IG1pbiAqLworCWlm
IChzdGF0dXMgPCAwKSB7CisJCWt1bml0X2Vycih0ZXN0LCAidHJ5IHRpbWVkIG91dFxuIik7CisJ
CXRyeV9jYXRjaC0+dHJ5X3Jlc3VsdCA9IC1FVElNRURPVVQ7CisJfQorCisJZXhpdF9jb2RlID0g
dHJ5X2NhdGNoLT50cnlfcmVzdWx0OworCisJaWYgKCFleGl0X2NvZGUpCisJCXJldHVybjsKKwor
CWlmIChleGl0X2NvZGUgPT0gLUVGQVVMVCkKKwkJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gMDsK
KwllbHNlIGlmIChleGl0X2NvZGUgPT0gLUVJTlRSKQorCQlrdW5pdF9lcnIodGVzdCwgIndha2Vf
dXBfcHJvY2VzcygpIHdhcyBuZXZlciBjYWxsZWRcbiIpOworCWVsc2UgaWYgKGV4aXRfY29kZSkK
KwkJa3VuaXRfZXJyKHRlc3QsICJVbmtub3duIGVycm9yOiAlZFxuIiwgZXhpdF9jb2RlKTsKKwor
CXRyeV9jYXRjaC0+Y2F0Y2godHJ5X2NhdGNoLT5jb250ZXh0KTsKK30KKwordm9pZCBrdW5pdF90
cnlfY2F0Y2hfaW5pdChzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsCisJCQkgIHN0
cnVjdCBrdW5pdCAqdGVzdCwKKwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCB0cnksCisJCQkg
IGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgY2F0Y2gpCit7CisJdHJ5X2NhdGNoLT50ZXN0ID0gdGVz
dDsKKwl0cnlfY2F0Y2gtPnRyeSA9IHRyeTsKKwl0cnlfY2F0Y2gtPmNhdGNoID0gY2F0Y2g7Cit9
Ci0tIAoyLjIxLjAuMTAyMC5nZjI4MjBjZjAxYS1nb29nCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZl
bEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
