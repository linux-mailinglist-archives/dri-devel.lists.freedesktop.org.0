Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 320AC88BEE
	for <lists+dri-devel@lfdr.de>; Sat, 10 Aug 2019 17:36:25 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 72CE56E441;
	Sat, 10 Aug 2019 15:36:15 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5D1226E42B;
 Sat, 10 Aug 2019 15:36:11 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17954018-1500050 
 for multiple; Sat, 10 Aug 2019 16:34:33 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH 3/4] dma-fence: Refactor signaling for manual invocation
Date: Sat, 10 Aug 2019 16:34:29 +0100
Message-Id: <20190810153430.30636-3-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190810153430.30636-1-chris@chris-wilson.co.uk>
References: <20190810153430.30636-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org, Tvrtko Ursulin <tvrtko.ursulin@intel.com>,
 christian.koenig@amd.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

TW92ZSB0aGUgZHVwbGljYXRlZCBjb2RlIHdpdGhpbiBkbWEtZmVuY2UuYyBpbnRvIHRoZSBoZWFk
ZXIgZm9yIHdpZGVyCnJldXNlLiBJbiB0aGUgcHJvY2VzcyBhcHBseSBhIHNtYWxsIG1pY3JvLW9w
dGltaXNhdGlvbiB0byBvbmx5IHBydW5lIHRoZQpmZW5jZS0+Y2JfbGlzdCBvbmNlIHJhdGhlciB0
aGFuIHVzZSBsaXN0X2RlbCBvbiBldmVyeSBlbnRyeS4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdp
bHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRr
by51cnN1bGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUgICAgICAg
ICAgICAgICAgICAgIHwgIDEwICstCiBkcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMg
ICAgICAgICAgIHwgIDI4ICsrKwogZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS5jICAgICAgICAg
ICAgICAgICB8ICAzMyArLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1
bWJzLmMgfCAgMzIgKy0tCiBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS1pbXBsLmggICAgICAgICAg
ICAgIHwgIDgzICsrKysrKysKIGluY2x1ZGUvbGludXgvZG1hLWZlbmNlLXR5cGVzLmggICAgICAg
ICAgICAgfCAyNTggKysrKysrKysrKysrKysrKysrKysKIGluY2x1ZGUvbGludXgvZG1hLWZlbmNl
LmggICAgICAgICAgICAgICAgICAgfCAyMjggKy0tLS0tLS0tLS0tLS0tLS0KIDcgZmlsZXMgY2hh
bmdlZCwgMzg2IGluc2VydGlvbnMoKyksIDI4NiBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBkcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMKIGNyZWF0ZSBtb2RlIDEwMDY0
NCBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS1pbXBsLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNs
dWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVm
L01ha2VmaWxlIGIvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCmluZGV4IGU4YzczMTBjYjgwMC4u
NjVjNDM3NzhlNTcxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKKysrIGIv
ZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCkBAIC0xLDYgKzEsMTIgQEAKICMgU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQotb2JqLXkgOj0gZG1hLWJ1Zi5vIGRtYS1mZW5jZS5v
IGRtYS1mZW5jZS1hcnJheS5vIGRtYS1mZW5jZS1jaGFpbi5vIFwKLQkgcmVzZXJ2YXRpb24ubyBz
ZXFuby1mZW5jZS5vCitvYmoteSA6PSBcCisJZG1hLWJ1Zi5vIFwKKwlkbWEtZmVuY2UubyBcCisJ
ZG1hLWZlbmNlLWFycmF5Lm8gXAorCWRtYS1mZW5jZS1jaGFpbi5vIFwKKwlkbWEtZmVuY2UtdHJh
Y2UubyBcCisJcmVzZXJ2YXRpb24ubyBcCisJc2Vxbm8tZmVuY2Uubwogb2JqLSQoQ09ORklHX1NZ
TkNfRklMRSkJCSs9IHN5bmNfZmlsZS5vCiBvYmotJChDT05GSUdfU1dfU1lOQykJCSs9IHN3X3N5
bmMubyBzeW5jX2RlYnVnLm8KIG9iai0kKENPTkZJR19VRE1BQlVGKQkJKz0gdWRtYWJ1Zi5vCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMgYi9kcml2ZXJzL2Rt
YS1idWYvZG1hLWZlbmNlLXRyYWNlLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMDAwLi5lYjZmMjgyYmU0YzAKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2RtYS1idWYv
ZG1hLWZlbmNlLXRyYWNlLmMKQEAgLTAsMCArMSwyOCBAQAorLyoKKyAqIEZlbmNlIG1lY2hhbmlz
bSBmb3IgZG1hLWJ1ZiBhbmQgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisg
KgorICogQ29weXJpZ2h0IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykg
MjAxMiBUZXhhcyBJbnN0cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJv
YmRjbGFya0BnbWFpbC5jb20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9y
c3RAY2Fub25pY2FsLmNvbT4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsg
eW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdAorICogdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIgYXMgcHVibGlz
aGVkIGJ5CisgKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLgorICoKKyAqIFRoaXMgcHJv
Z3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBi
dXQgV0lUSE9VVAorICogQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIg
UFVSUE9TRS4gIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yCisgKiBtb3Jl
IGRldGFpbHMuCisgKi8KKworI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS10eXBlcy5oPgorCisj
ZGVmaW5lIENSRUFURV9UUkFDRV9QT0lOVFMKKyNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2Zl
bmNlLmg+CisKK0VYUE9SVF9UUkFDRVBPSU5UX1NZTUJPTChkbWFfZmVuY2VfZW1pdCk7CitFWFBP
UlRfVFJBQ0VQT0lOVF9TWU1CT0woZG1hX2ZlbmNlX2VuYWJsZV9zaWduYWwpOworRVhQT1JUX1RS
QUNFUE9JTlRfU1lNQk9MKGRtYV9mZW5jZV9zaWduYWxlZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2RtYS1idWYvZG1hLWZlbmNlLmMgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLmMKaW5kZXgg
NTlhYzk2ZWM3YmE4Li4wMjdhNmE4OTRhYmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtZmVuY2UuYworKysgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLmMKQEAgLTE0LDE1ICsx
NCw5IEBACiAjaW5jbHVkZSA8bGludXgvZXhwb3J0Lmg+CiAjaW5jbHVkZSA8bGludXgvYXRvbWlj
Lmg+CiAjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZl
bmNlLWltcGwuaD4KICNpbmNsdWRlIDxsaW51eC9zY2hlZC9zaWduYWwuaD4KIAotI2RlZmluZSBD
UkVBVEVfVFJBQ0VfUE9JTlRTCi0jaW5jbHVkZSA8dHJhY2UvZXZlbnRzL2RtYV9mZW5jZS5oPgot
Ci1FWFBPUlRfVFJBQ0VQT0lOVF9TWU1CT0woZG1hX2ZlbmNlX2VtaXQpOwotRVhQT1JUX1RSQUNF
UE9JTlRfU1lNQk9MKGRtYV9mZW5jZV9lbmFibGVfc2lnbmFsKTsKLUVYUE9SVF9UUkFDRVBPSU5U
X1NZTUJPTChkbWFfZmVuY2Vfc2lnbmFsZWQpOwotCiBzdGF0aWMgREVGSU5FX1NQSU5MT0NLKGRt
YV9mZW5jZV9zdHViX2xvY2spOwogc3RhdGljIHN0cnVjdCBkbWFfZmVuY2UgZG1hX2ZlbmNlX3N0
dWI7CiAKQEAgLTEyOCw3ICsxMjIsNiBAQCBFWFBPUlRfU1lNQk9MKGRtYV9mZW5jZV9jb250ZXh0
X2FsbG9jKTsKICAqLwogaW50IGRtYV9mZW5jZV9zaWduYWxfbG9ja2VkKHN0cnVjdCBkbWFfZmVu
Y2UgKmZlbmNlKQogewotCXN0cnVjdCBkbWFfZmVuY2VfY2IgKmN1ciwgKnRtcDsKIAlpbnQgcmV0
ID0gMDsKIAogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoZmVuY2UtPmxvY2spOwpAQCAtMTM2LDcgKzEy
OSw3IEBAIGludCBkbWFfZmVuY2Vfc2lnbmFsX2xvY2tlZChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSkKIAlpZiAoV0FSTl9PTighZmVuY2UpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWlmICh0ZXN0
X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFncykp
IHsKKwlpZiAoIV9fZG1hX2ZlbmNlX3NpZ25hbChmZW5jZSkpIHsKIAkJcmV0ID0gLUVJTlZBTDsK
IAogCQkvKgpAQCAtMTQ0LDE1ICsxMzcsMTAgQEAgaW50IGRtYV9mZW5jZV9zaWduYWxfbG9ja2Vk
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQogCQkgKiBzdGlsbCBydW4gdGhyb3VnaCBhbGwgY2Fs
bGJhY2tzCiAJCSAqLwogCX0gZWxzZSB7Ci0JCWZlbmNlLT50aW1lc3RhbXAgPSBrdGltZV9nZXQo
KTsKLQkJc2V0X2JpdChETUFfRkVOQ0VfRkxBR19USU1FU1RBTVBfQklULCAmZmVuY2UtPmZsYWdz
KTsKLQkJdHJhY2VfZG1hX2ZlbmNlX3NpZ25hbGVkKGZlbmNlKTsKKwkJX19kbWFfZmVuY2Vfc2ln
bmFsX190aW1lc3RhbXAoZmVuY2UsIGt0aW1lX2dldCgpKTsKIAl9CiAKLQlsaXN0X2Zvcl9lYWNo
X2VudHJ5X3NhZmUoY3VyLCB0bXAsICZmZW5jZS0+Y2JfbGlzdCwgbm9kZSkgewotCQlsaXN0X2Rl
bF9pbml0KCZjdXItPm5vZGUpOwotCQljdXItPmZ1bmMoZmVuY2UsIGN1cik7Ci0JfQorCV9fZG1h
X2ZlbmNlX3NpZ25hbF9fbm90aWZ5KGZlbmNlKTsKIAlyZXR1cm4gcmV0OwogfQogRVhQT1JUX1NZ
TUJPTChkbWFfZmVuY2Vfc2lnbmFsX2xvY2tlZCk7CkBAIC0xNzcsMjEgKzE2NSwxNCBAQCBpbnQg
ZG1hX2ZlbmNlX3NpZ25hbChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAlpZiAoIWZlbmNlKQog
CQlyZXR1cm4gLUVJTlZBTDsKIAotCWlmICh0ZXN0X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFH
X1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFncykpCisJaWYgKCFfX2RtYV9mZW5jZV9zaWduYWwo
ZmVuY2UpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWZlbmNlLT50aW1lc3RhbXAgPSBrdGltZV9n
ZXQoKTsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQsICZmZW5jZS0+Zmxh
Z3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7CisJX19kbWFfZmVuY2Vfc2ln
bmFsX190aW1lc3RhbXAoZmVuY2UsIGt0aW1lX2dldCgpKTsKIAogCWlmICh0ZXN0X2JpdChETUFf
RkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFMX0JJVCwgJmZlbmNlLT5mbGFncykpIHsKLQkJc3RydWN0
IGRtYV9mZW5jZV9jYiAqY3VyLCAqdG1wOwotCiAJCXNwaW5fbG9ja19pcnFzYXZlKGZlbmNlLT5s
b2NrLCBmbGFncyk7Ci0JCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShjdXIsIHRtcCwgJmZlbmNl
LT5jYl9saXN0LCBub2RlKSB7Ci0JCQlsaXN0X2RlbF9pbml0KCZjdXItPm5vZGUpOwotCQkJY3Vy
LT5mdW5jKGZlbmNlLCBjdXIpOwotCQl9CisJCV9fZG1hX2ZlbmNlX3NpZ25hbF9fbm90aWZ5KGZl
bmNlKTsKIAkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZShmZW5jZS0+bG9jaywgZmxhZ3MpOwogCX0K
IAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Jy
ZWFkY3J1bWJzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5j
CmluZGV4IGUxYmJjOWI0MjhjZC4uNjVkZTVjNDVhMjMzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMKQEAgLTIyLDggKzIyLDcgQEAKICAqCiAgKi8KIAot
I2luY2x1ZGUgPGxpbnV4L2t0aHJlYWQuaD4KLSNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2Zl
bmNlLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLWltcGwuaD4KICNpbmNsdWRlIDx1YXBp
L2xpbnV4L3NjaGVkL3R5cGVzLmg+CiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgpAQCAtOTgsMzUg
Kzk3LDYgQEAgY2hlY2tfc2lnbmFsX29yZGVyKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyBib29sCi1f
X2RtYV9mZW5jZV9zaWduYWwoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCi17Ci0JcmV0dXJuICF0
ZXN0X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFn
cyk7Ci19Ci0KLXN0YXRpYyB2b2lkCi1fX2RtYV9mZW5jZV9zaWduYWxfX3RpbWVzdGFtcChzdHJ1
Y3QgZG1hX2ZlbmNlICpmZW5jZSwga3RpbWVfdCB0aW1lc3RhbXApCi17Ci0JZmVuY2UtPnRpbWVz
dGFtcCA9IHRpbWVzdGFtcDsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQs
ICZmZW5jZS0+ZmxhZ3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7Ci19Ci0K
LXN0YXRpYyB2b2lkCi1fX2RtYV9mZW5jZV9zaWduYWxfX25vdGlmeShzdHJ1Y3QgZG1hX2ZlbmNl
ICpmZW5jZSkKLXsKLQlzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjdXIsICp0bXA7Ci0KLQlsb2NrZGVw
X2Fzc2VydF9oZWxkKGZlbmNlLT5sb2NrKTsKLQlsb2NrZGVwX2Fzc2VydF9pcnFzX2Rpc2FibGVk
KCk7Ci0KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoY3VyLCB0bXAsICZmZW5jZS0+Y2JfbGlz
dCwgbm9kZSkgewotCQlJTklUX0xJU1RfSEVBRCgmY3VyLT5ub2RlKTsKLQkJY3VyLT5mdW5jKGZl
bmNlLCBjdXIpOwotCX0KLQlJTklUX0xJU1RfSEVBRCgmZmVuY2UtPmNiX2xpc3QpOwotfQotCiB2
b2lkIGludGVsX2VuZ2luZV9icmVhZGNydW1ic19pcnEoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9ICZlbmdpbmUtPmJyZWFk
Y3J1bWJzOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9kbWEtZmVuY2UtaW1wbC5oIGIvaW5j
bHVkZS9saW51eC9kbWEtZmVuY2UtaW1wbC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAwMC4uNzM3MjAyMWNmMDgyCi0tLSAvZGV2L251bGwKKysrIGIvaW5jbHVkZS9saW51
eC9kbWEtZmVuY2UtaW1wbC5oCkBAIC0wLDAgKzEsODMgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wLW9ubHkgKi8KKy8qCisgKiBGZW5jZSBtZWNoYW5pc20gZm9yIGRtYS1i
dWYgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisgKgorICogQ29weXJpZ2h0
IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykgMjAxMiBUZXhhcyBJbnN0
cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJvYmRjbGFya0BnbWFpbC5j
b20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAY2Fub25pY2FsLmNv
bT4KKyAqLworCisjaWZuZGVmIF9fTElOVVhfRE1BX0ZFTkNFX0lNUExfSAorI2RlZmluZSBfX0xJ
TlVYX0RNQV9GRU5DRV9JTVBMX0gKKworI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L2xvY2tkZXAuaD4KKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5jbHVk
ZSA8bGludXgva3RpbWUuaD4KKworI2luY2x1ZGUgPHRyYWNlL2V2ZW50cy9kbWFfZmVuY2UuaD4K
KworLyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWw6IE1hcmsgYSBmZW5jZSBhcyBzaWduYWxlZAor
ICogQGZlbmNlOiB0aGUgZG1hIGZlbmNlIHRvIG1hcmsKKyAqCisgKiBUaGUgZmlyc3Qgc3RlcCBv
ZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGltcGxlbWVudGF0aW9uIGlzIHRvIGF0b21pY2FsbHkK
KyAqIG1hcmsgdGhlIGZlbmNlIGFzIHNpZ25hbGVkLgorICoKKyAqIFJldHVybnM6IHRydWUgaWYg
dGhlIGZlbmNlIHdhcyBub3QgcHJldmlvdXNseSBzaWduYWxlZCwgZmFsc2UgaWYgaXQgd2FzCisg
KiBhbHJlYWR5IHNpZ25hbGVkLgorICovCitzdGF0aWMgaW5saW5lIGJvb2wKK19fZG1hX2ZlbmNl
X3NpZ25hbChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKK3sKKwlyZXR1cm4gIXRlc3RfYW5kX3Nl
dF9iaXQoRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklULCAmZmVuY2UtPmZsYWdzKTsKK30KKwor
LyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWxfX3RpbWVzdGFtcDogc2V0cyB0aGUgc2lnbmFsaW5n
IHRpbWVzdGFtcAorICogQGZlbmNlOiB0aGUgZG1hIGZlbmNlCisgKiBAdGltZXN0YW1wOiB0aGUg
bW9ub3RvbmljIHRpbWVzdGFtcCAoZS5nLiBrdGltZV9nZXRfbW9ubygpKQorICoKKyAqIFRoZSBz
ZWNvbmQgc3RlcCBvZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGltcGxlbWVudGF0aW9uIGl0IHRv
IHJlY29yZAorICogdGhlIHNpZ2FubGluZyB0aW1lc3RhbXAuCisgKgorICogVGhlIGRtYS1mZW5j
ZSBzdG9yZXMgYSB0aW1lc3RhbXAgb2Ygd2hlbiBpdCB3YXMgc2lnbmFsZWQgZm9yIGluc3BlY3Rp
b24KKyAqIGJ5IHVzZXJzcGFjZS4gVGhpcyB0aW1lc3RhbXAgaXMgdHlwaWNhbGx5IHRoZSBDUFUg
dGltZSBhdCB3aGljaCB0aGUKKyAqIHNpZ25hbCB3YXMgcmFpc2VkLCBidXQgY291bGQgYmUgYSBI
VyB0aW1lc3RhbXAgZ2VuZXJhdGVkIGJ5IHRoZSBldmVudAorICogaXRzZWxmLiBFaXRoZXIgd2F5
LCBpdCBtdXN0IGJlIHNldCBvbiB0aGUgc2lnbmFsZWQgZmVuY2UgYmVmb3JlCisgKiBjYWxsYmFj
a3MgYXJlIG5vdGlmaWVkLgorICovCitzdGF0aWMgaW5saW5lIHZvaWQKK19fZG1hX2ZlbmNlX3Np
Z25hbF9fdGltZXN0YW1wKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBrdGltZV90IHRpbWVzdGFt
cCkKK3sKKwlmZW5jZS0+dGltZXN0YW1wID0gdGltZXN0YW1wOworCXNldF9iaXQoRE1BX0ZFTkNF
X0ZMQUdfVElNRVNUQU1QX0JJVCwgJmZlbmNlLT5mbGFncyk7CisJdHJhY2VfZG1hX2ZlbmNlX3Np
Z25hbGVkKGZlbmNlKTsKK30KKworLyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWxfX25vdGlmeTog
bm90aWZ5IG9ic2VydmVycyBvZiB0aGUgc2lnbmFsIGV2ZW50CisgKiBAZmVuY2U6IHRoZSBkbWEg
ZmVuY2UKKyAqCisgKiBUaGUgZmluYWwgc3RlcCBvZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGlt
cGxlbWVudGF0aW9uIGlzIHRvIG5vdGlmeQorICogYWxsIG9ic2VydmVycyAoZG1hX2ZlbmNlX2Fk
ZF9jYWxsYmFjaygpKSBvZiB0aGUgc2lnbmFsIGV2ZW50LiBUaGlzIG11c3QKKyAqIGJlIGNhbGxl
ZCB3aXRoIHRoZSBmZW5jZS0+bG9jayBhbHJlYWR5IGhlbGQgYW5kIGlycXNvZmYuCisgKi8KK3N0
YXRpYyBpbmxpbmUgdm9pZAorX19kbWFfZmVuY2Vfc2lnbmFsX19ub3RpZnkoc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2UpCit7CisJc3RydWN0IGRtYV9mZW5jZV9jYiAqY3VyLCAqdG1wOworCisJbG9j
a2RlcF9hc3NlcnRfaGVsZChmZW5jZS0+bG9jayk7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3Nh
ZmUoY3VyLCB0bXAsICZmZW5jZS0+Y2JfbGlzdCwgbm9kZSkgeworCQlJTklUX0xJU1RfSEVBRCgm
Y3VyLT5ub2RlKTsKKwkJY3VyLT5mdW5jKGZlbmNlLCBjdXIpOworCX0KKwlJTklUX0xJU1RfSEVB
RCgmZmVuY2UtPmNiX2xpc3QpOworfQorCisjZW5kaWYgLyogX19MSU5VWF9ETUFfRkVOQ0VfSU1Q
TF9IICovCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oIGIvaW5j
bHVkZS9saW51eC9kbWEtZmVuY2UtdHlwZXMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAw
MDAwMDAwMDAwMDAuLjgxZTIyZDllZDE3NAotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvbGlu
dXgvZG1hLWZlbmNlLXR5cGVzLmgKQEAgLTAsMCArMSwyNTggQEAKKy8qCisgKiBGZW5jZSBtZWNo
YW5pc20gZm9yIGRtYS1idWYgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisg
KgorICogQ29weXJpZ2h0IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykg
MjAxMiBUZXhhcyBJbnN0cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJv
YmRjbGFya0BnbWFpbC5jb20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9y
c3RAY2Fub25pY2FsLmNvbT4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsg
eW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdAorICogdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIgYXMgcHVibGlz
aGVkIGJ5CisgKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLgorICoKKyAqIFRoaXMgcHJv
Z3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBi
dXQgV0lUSE9VVAorICogQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIg
UFVSUE9TRS4gIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yCisgKiBtb3Jl
IGRldGFpbHMuCisgKi8KKworI2lmbmRlZiBfX0xJTlVYX0RNQV9GRU5DRV9UWVBFU19ICisjZGVm
aW5lIF9fTElOVVhfRE1BX0ZFTkNFX1RZUEVTX0gKKworI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4K
KyNpbmNsdWRlIDxsaW51eC9rcmVmLmg+CisjaW5jbHVkZSA8bGludXgva3RpbWUuaD4KKyNpbmNs
dWRlIDxsaW51eC9yY3VwZGF0ZS5oPgorI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5j
bHVkZSA8bGludXgvdHlwZXMuaD4KKworc3RydWN0IGRtYV9mZW5jZTsKK3N0cnVjdCBkbWFfZmVu
Y2Vfb3BzOworc3RydWN0IGRtYV9mZW5jZV9jYjsKKworLyoqCisgKiBzdHJ1Y3QgZG1hX2ZlbmNl
IC0gc29mdHdhcmUgc3luY2hyb25pemF0aW9uIHByaW1pdGl2ZQorICogQHJlZmNvdW50OiByZWZj
b3VudCBmb3IgdGhpcyBmZW5jZQorICogQG9wczogZG1hX2ZlbmNlX29wcyBhc3NvY2lhdGVkIHdp
dGggdGhpcyBmZW5jZQorICogQHJjdTogdXNlZCBmb3IgcmVsZWFzaW5nIGZlbmNlIHdpdGgga2Zy
ZWVfcmN1CisgKiBAY2JfbGlzdDogbGlzdCBvZiBhbGwgY2FsbGJhY2tzIHRvIGNhbGwKKyAqIEBs
b2NrOiBzcGluX2xvY2tfaXJxc2F2ZSB1c2VkIGZvciBsb2NraW5nCisgKiBAY29udGV4dDogZXhl
Y3V0aW9uIGNvbnRleHQgdGhpcyBmZW5jZSBiZWxvbmdzIHRvLCByZXR1cm5lZCBieQorICogICAg
ICAgICAgIGRtYV9mZW5jZV9jb250ZXh0X2FsbG9jKCkKKyAqIEBzZXFubzogdGhlIHNlcXVlbmNl
IG51bWJlciBvZiB0aGlzIGZlbmNlIGluc2lkZSB0aGUgZXhlY3V0aW9uIGNvbnRleHQsCisgKiBj
YW4gYmUgY29tcGFyZWQgdG8gZGVjaWRlIHdoaWNoIGZlbmNlIHdvdWxkIGJlIHNpZ25hbGVkIGxh
dGVyLgorICogQGZsYWdzOiBBIG1hc2sgb2YgRE1BX0ZFTkNFX0ZMQUdfKiBkZWZpbmVkIGJlbG93
CisgKiBAdGltZXN0YW1wOiBUaW1lc3RhbXAgd2hlbiB0aGUgZmVuY2Ugd2FzIHNpZ25hbGVkLgor
ICogQGVycm9yOiBPcHRpb25hbCwgb25seSB2YWxpZCBpZiA8IDAsIG11c3QgYmUgc2V0IGJlZm9y
ZSBjYWxsaW5nCisgKiBkbWFfZmVuY2Vfc2lnbmFsLCBpbmRpY2F0ZXMgdGhhdCB0aGUgZmVuY2Ug
aGFzIGNvbXBsZXRlZCB3aXRoIGFuIGVycm9yLgorICoKKyAqIHRoZSBmbGFncyBtZW1iZXIgbXVz
dCBiZSBtYW5pcHVsYXRlZCBhbmQgcmVhZCB1c2luZyB0aGUgYXBwcm9wcmlhdGUKKyAqIGF0b21p
YyBvcHMgKGJpdF8qKSwgc28gdGFraW5nIHRoZSBzcGlubG9jayB3aWxsIG5vdCBiZSBuZWVkZWQg
bW9zdAorICogb2YgdGhlIHRpbWUuCisgKgorICogRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklU
IC0gZmVuY2UgaXMgYWxyZWFkeSBzaWduYWxlZAorICogRE1BX0ZFTkNFX0ZMQUdfVElNRVNUQU1Q
X0JJVCAtIHRpbWVzdGFtcCByZWNvcmRlZCBmb3IgZmVuY2Ugc2lnbmFsaW5nCisgKiBETUFfRkVO
Q0VfRkxBR19FTkFCTEVfU0lHTkFMX0JJVCAtIGVuYWJsZV9zaWduYWxpbmcgbWlnaHQgaGF2ZSBi
ZWVuIGNhbGxlZAorICogRE1BX0ZFTkNFX0ZMQUdfVVNFUl9CSVRTIC0gc3RhcnQgb2YgdGhlIHVu
dXNlZCBiaXRzLCBjYW4gYmUgdXNlZCBieSB0aGUKKyAqIGltcGxlbWVudGVyIG9mIHRoZSBmZW5j
ZSBmb3IgaXRzIG93biBwdXJwb3Nlcy4gQ2FuIGJlIHVzZWQgaW4gZGlmZmVyZW50CisgKiB3YXlz
IGJ5IGRpZmZlcmVudCBmZW5jZSBpbXBsZW1lbnRlcnMsIHNvIGRvIG5vdCByZWx5IG9uIHRoaXMu
CisgKgorICogU2luY2UgYXRvbWljIGJpdG9wcyBhcmUgdXNlZCwgdGhpcyBpcyBub3QgZ3VhcmFu
dGVlZCB0byBiZSB0aGUgY2FzZS4KKyAqIFBhcnRpY3VsYXJseSwgaWYgdGhlIGJpdCB3YXMgc2V0
LCBidXQgZG1hX2ZlbmNlX3NpZ25hbCB3YXMgY2FsbGVkIHJpZ2h0CisgKiBiZWZvcmUgdGhpcyBi
aXQgd2FzIHNldCwgaXQgd291bGQgaGF2ZSBiZWVuIGFibGUgdG8gc2V0IHRoZQorICogRE1BX0ZF
TkNFX0ZMQUdfU0lHTkFMRURfQklULCBiZWZvcmUgZW5hYmxlX3NpZ25hbGluZyB3YXMgY2FsbGVk
LgorICogQWRkaW5nIGEgY2hlY2sgZm9yIERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCBhZnRl
ciBzZXR0aW5nCisgKiBETUFfRkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFMX0JJVCBjbG9zZXMgdGhp
cyByYWNlLCBhbmQgbWFrZXMgc3VyZSB0aGF0CisgKiBhZnRlciBkbWFfZmVuY2Vfc2lnbmFsIHdh
cyBjYWxsZWQsIGFueSBlbmFibGVfc2lnbmFsaW5nIGNhbGwgd2lsbCBoYXZlIGVpdGhlcgorICog
YmVlbiBjb21wbGV0ZWQsIG9yIG5ldmVyIGNhbGxlZCBhdCBhbGwuCisgKi8KK3N0cnVjdCBkbWFf
ZmVuY2UgeworCXN0cnVjdCBrcmVmIHJlZmNvdW50OworCWNvbnN0IHN0cnVjdCBkbWFfZmVuY2Vf
b3BzICpvcHM7CisJLyogV2UgY2xlYXIgdGhlIGNhbGxiYWNrIGxpc3Qgb24ga3JlZl9wdXQgc28g
dGhhdCBieSB0aGUgdGltZSB3ZQorCSAqIHJlbGVhc2UgdGhlIGZlbmNlIGl0IGlzIHVudXNlZC4g
Tm8gb25lIHNob3VsZCBiZSBhZGRpbmcgdG8gdGhlIGNiX2xpc3QKKwkgKiB0aGF0IHRoZXkgZG9u
J3QgdGhlbXNlbHZlcyBob2xkIGEgcmVmZXJlbmNlIGZvci4KKwkgKi8KKwl1bmlvbiB7CisJCXN0
cnVjdCByY3VfaGVhZCByY3U7CisJCXN0cnVjdCBsaXN0X2hlYWQgY2JfbGlzdDsKKwl9OworCXNw
aW5sb2NrX3QgKmxvY2s7CisJdTY0IGNvbnRleHQ7CisJdTY0IHNlcW5vOworCXVuc2lnbmVkIGxv
bmcgZmxhZ3M7CisJa3RpbWVfdCB0aW1lc3RhbXA7CisJaW50IGVycm9yOworfTsKKworZW51bSBk
bWFfZmVuY2VfZmxhZ19iaXRzIHsKKwlETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQsCisJRE1B
X0ZFTkNFX0ZMQUdfVElNRVNUQU1QX0JJVCwKKwlETUFfRkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFM
X0JJVCwKKwlETUFfRkVOQ0VfRkxBR19VU0VSX0JJVFMsIC8qIG11c3QgYWx3YXlzIGJlIGxhc3Qg
bWVtYmVyICovCit9OworCit0eXBlZGVmIHZvaWQgKCpkbWFfZmVuY2VfZnVuY190KShzdHJ1Y3Qg
ZG1hX2ZlbmNlICpmZW5jZSwKKwkJCQkgc3RydWN0IGRtYV9mZW5jZV9jYiAqY2IpOworCisvKioK
KyAqIHN0cnVjdCBkbWFfZmVuY2VfY2IgLSBjYWxsYmFjayBmb3IgZG1hX2ZlbmNlX2FkZF9jYWxs
YmFjaygpCisgKiBAbm9kZTogdXNlZCBieSBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkgdG8gYXBw
ZW5kIHRoaXMgc3RydWN0IHRvIGZlbmNlOjpjYl9saXN0CisgKiBAZnVuYzogZG1hX2ZlbmNlX2Z1
bmNfdCB0byBjYWxsCisgKgorICogVGhpcyBzdHJ1Y3Qgd2lsbCBiZSBpbml0aWFsaXplZCBieSBk
bWFfZmVuY2VfYWRkX2NhbGxiYWNrKCksIGFkZGl0aW9uYWwKKyAqIGRhdGEgY2FuIGJlIHBhc3Nl
ZCBhbG9uZyBieSBlbWJlZGRpbmcgZG1hX2ZlbmNlX2NiIGluIGFub3RoZXIgc3RydWN0LgorICov
CitzdHJ1Y3QgZG1hX2ZlbmNlX2NiIHsKKwlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7CisJZG1hX2Zl
bmNlX2Z1bmNfdCBmdW5jOworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAtIG9w
ZXJhdGlvbnMgaW1wbGVtZW50ZWQgZm9yIGZlbmNlCisgKgorICovCitzdHJ1Y3QgZG1hX2ZlbmNl
X29wcyB7CisJLyoqCisJICogQHVzZV82NGJpdF9zZXFubzoKKwkgKgorCSAqIFRydWUgaWYgdGhp
cyBkbWFfZmVuY2UgaW1wbGVtZW50YXRpb24gdXNlcyA2NGJpdCBzZXFubywgZmFsc2UKKwkgKiBv
dGhlcndpc2UuCisJICovCisJYm9vbCB1c2VfNjRiaXRfc2Vxbm87CisKKwkvKioKKwkgKiBAZ2V0
X2RyaXZlcl9uYW1lOgorCSAqCisJICogUmV0dXJucyB0aGUgZHJpdmVyIG5hbWUuIFRoaXMgaXMg
YSBjYWxsYmFjayB0byBhbGxvdyBkcml2ZXJzIHRvCisJICogY29tcHV0ZSB0aGUgbmFtZSBhdCBy
dW50aW1lLCB3aXRob3V0IGhhdmluZyBpdCB0byBzdG9yZSBwZXJtYW5lbnRseQorCSAqIGZvciBl
YWNoIGZlbmNlLCBvciBidWlsZCBhIGNhY2hlIG9mIHNvbWUgc29ydC4KKwkgKgorCSAqIFRoaXMg
Y2FsbGJhY2sgaXMgbWFuZGF0b3J5LgorCSAqLworCWNvbnN0IGNoYXIgKiAoKmdldF9kcml2ZXJf
bmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpOworCisJLyoqCisJICogQGdldF90aW1lbGlu
ZV9uYW1lOgorCSAqCisJICogUmV0dXJuIHRoZSBuYW1lIG9mIHRoZSBjb250ZXh0IHRoaXMgZmVu
Y2UgYmVsb25ncyB0by4gVGhpcyBpcyBhCisJICogY2FsbGJhY2sgdG8gYWxsb3cgZHJpdmVycyB0
byBjb21wdXRlIHRoZSBuYW1lIGF0IHJ1bnRpbWUsIHdpdGhvdXQKKwkgKiBoYXZpbmcgaXQgdG8g
c3RvcmUgcGVybWFuZW50bHkgZm9yIGVhY2ggZmVuY2UsIG9yIGJ1aWxkIGEgY2FjaGUgb2YKKwkg
KiBzb21lIHNvcnQuCisJICoKKwkgKiBUaGlzIGNhbGxiYWNrIGlzIG1hbmRhdG9yeS4KKwkgKi8K
Kwljb25zdCBjaGFyICogKCpnZXRfdGltZWxpbmVfbmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVu
Y2UpOworCisJLyoqCisJICogQGVuYWJsZV9zaWduYWxpbmc6CisJICoKKwkgKiBFbmFibGUgc29m
dHdhcmUgc2lnbmFsaW5nIG9mIGZlbmNlLgorCSAqCisJICogRm9yIGZlbmNlIGltcGxlbWVudGF0
aW9ucyB0aGF0IGhhdmUgdGhlIGNhcGFiaWxpdHkgZm9yIGh3LT5odworCSAqIHNpZ25hbGluZywg
dGhleSBjYW4gaW1wbGVtZW50IHRoaXMgb3AgdG8gZW5hYmxlIHRoZSBuZWNlc3NhcnkKKwkgKiBp
bnRlcnJ1cHRzLCBvciBpbnNlcnQgY29tbWFuZHMgaW50byBjbWRzdHJlYW0sIGV0YywgdG8gYXZv
aWQgdGhlc2UKKwkgKiBjb3N0bHkgb3BlcmF0aW9ucyBmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJl
IG9ubHkgaHctPmh3CisJICogc3luY2hyb25pemF0aW9uIGlzIHJlcXVpcmVkLiAgVGhpcyBpcyBj
YWxsZWQgaW4gdGhlIGZpcnN0CisJICogZG1hX2ZlbmNlX3dhaXQoKSBvciBkbWFfZmVuY2VfYWRk
X2NhbGxiYWNrKCkgcGF0aCB0byBsZXQgdGhlIGZlbmNlCisJICogaW1wbGVtZW50YXRpb24ga25v
dyB0aGF0IHRoZXJlIGlzIGFub3RoZXIgZHJpdmVyIHdhaXRpbmcgb24gdGhlCisJICogc2lnbmFs
IChpZS4gaHctPnN3IGNhc2UpLgorCSAqCisJICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgY2FsbGVk
IGZyb20gYXRvbWljIGNvbnRleHQsIGJ1dCBub3QKKwkgKiBmcm9tIGlycSBjb250ZXh0LCBzbyBu
b3JtYWwgc3BpbmxvY2tzIGNhbiBiZSB1c2VkLgorCSAqCisJICogQSByZXR1cm4gdmFsdWUgb2Yg
ZmFsc2UgaW5kaWNhdGVzIHRoZSBmZW5jZSBhbHJlYWR5IHBhc3NlZCwKKwkgKiBvciBzb21lIGZh
aWx1cmUgb2NjdXJyZWQgdGhhdCBtYWRlIGl0IGltcG9zc2libGUgdG8gZW5hYmxlCisJICogc2ln
bmFsaW5nLiBUcnVlIGluZGljYXRlcyBzdWNjZXNzZnVsIGVuYWJsaW5nLgorCSAqCisJICogJmRt
YV9mZW5jZS5lcnJvciBtYXkgYmUgc2V0IGluIGVuYWJsZV9zaWduYWxpbmcsIGJ1dCBvbmx5IHdo
ZW4gZmFsc2UKKwkgKiBpcyByZXR1cm5lZC4KKwkgKgorCSAqIFNpbmNlIG1hbnkgaW1wbGVtZW50
YXRpb25zIGNhbiBjYWxsIGRtYV9mZW5jZV9zaWduYWwoKSBldmVuIGJlZm9yZQorCSAqIEBlbmFi
bGVfc2lnbmFsaW5nIGhhcyBiZWVuIGNhbGxlZCB0aGVyZSdzIGEgcmFjZSB3aW5kb3csIHdoZXJl
IHRoZQorCSAqIGRtYV9mZW5jZV9zaWduYWwoKSBtaWdodCByZXN1bHQgaW4gdGhlIGZpbmFsIGZl
bmNlIHJlZmVyZW5jZSBiZWluZworCSAqIHJlbGVhc2VkIGFuZCBpdHMgbWVtb3J5IGZyZWVkLiBU
byBhdm9pZCB0aGlzLCBpbXBsZW1lbnRhdGlvbnMgb2YKKwkgKiB0aGlzIGNhbGxiYWNrIHNob3Vs
ZCBncmFiIHRoZWlyIG93biByZWZlcmVuY2UgdXNpbmcgZG1hX2ZlbmNlX2dldCgpLAorCSAqIHRv
IGJlIHJlbGVhc2VkIHdoZW4gdGhlIGZlbmNlIGlzIHNpZ25hbGxlZCAodGhyb3VnaCBlLmcuIHRo
ZQorCSAqIGludGVycnVwdCBoYW5kbGVyKS4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0
aW9uYWwuIElmIHRoaXMgY2FsbGJhY2sgaXMgbm90IHByZXNlbnQsIHRoZW4gdGhlCisJICogZHJp
dmVyIG11c3QgYWx3YXlzIGhhdmUgc2lnbmFsaW5nIGVuYWJsZWQuCisJICovCisJYm9vbCAoKmVu
YWJsZV9zaWduYWxpbmcpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKKworCS8qKgorCSAqIEBz
aWduYWxlZDoKKwkgKgorCSAqIFBlZWsgd2hldGhlciB0aGUgZmVuY2UgaXMgc2lnbmFsZWQsIGFz
IGEgZmFzdHBhdGggb3B0aW1pemF0aW9uIGZvcgorCSAqIGUuZy4gZG1hX2ZlbmNlX3dhaXQoKSBv
ciBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkuIE5vdGUgdGhhdCB0aGlzCisJICogY2FsbGJhY2sg
ZG9lcyBub3QgbmVlZCB0byBtYWtlIGFueSBndWFyYW50ZWVzIGJleW9uZCB0aGF0IGEgZmVuY2UK
KwkgKiBvbmNlIGluZGljYXRlcyBhcyBzaWduYWxsZWQgbXVzdCBhbHdheXMgcmV0dXJuIHRydWUg
ZnJvbSB0aGlzCisJICogY2FsbGJhY2suIFRoaXMgY2FsbGJhY2sgbWF5IHJldHVybiBmYWxzZSBl
dmVuIGlmIHRoZSBmZW5jZSBoYXMKKwkgKiBjb21wbGV0ZWQgYWxyZWFkeSwgaW4gdGhpcyBjYXNl
IGluZm9ybWF0aW9uIGhhc24ndCBwcm9wb2dhdGVkIHRocm91Z2gKKwkgKiB0aGUgc3lzdGVtIHll
dC4gU2VlIGFsc28gZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKCkuCisJICoKKwkgKiBNYXkgc2V0ICZk
bWFfZmVuY2UuZXJyb3IgaWYgcmV0dXJuaW5nIHRydWUuCisJICoKKwkgKiBUaGlzIGNhbGxiYWNr
IGlzIG9wdGlvbmFsLgorCSAqLworCWJvb2wgKCpzaWduYWxlZCkoc3RydWN0IGRtYV9mZW5jZSAq
ZmVuY2UpOworCisJLyoqCisJICogQHdhaXQ6CisJICoKKwkgKiBDdXN0b20gd2FpdCBpbXBsZW1l
bnRhdGlvbiwgZGVmYXVsdHMgdG8gZG1hX2ZlbmNlX2RlZmF1bHRfd2FpdCgpIGlmCisJICogbm90
IHNldC4KKwkgKgorCSAqIFRoZSBkbWFfZmVuY2VfZGVmYXVsdF93YWl0IGltcGxlbWVudGF0aW9u
IHNob3VsZCB3b3JrIGZvciBhbnkgZmVuY2UsCisJICogYXMgbG9uZyBhcyBAZW5hYmxlX3NpZ25h
bGluZyB3b3JrcyBjb3JyZWN0bHkuIFRoaXMgaG9vayBhbGxvd3MKKwkgKiBkcml2ZXJzIHRvIGhh
dmUgYW4gb3B0aW1pemVkIHZlcnNpb24gZm9yIHRoZSBjYXNlIHdoZXJlIGEgcHJvY2VzcworCSAq
IGNvbnRleHQgaXMgYWxyZWFkeSBhdmFpbGFibGUsIGUuZy4gaWYgQGVuYWJsZV9zaWduYWxpbmcg
Zm9yIHRoZQorCSAqIGdlbmVyYWwgY2FzZSBuZWVkcyB0byBzZXQgdXAgYSB3b3JrZXIgdGhyZWFk
LgorCSAqCisJICogTXVzdCByZXR1cm4gLUVSRVNUQVJUU1lTIGlmIHRoZSB3YWl0IGlzIGludHIg
PSB0cnVlIGFuZCB0aGUgd2FpdCB3YXMKKwkgKiBpbnRlcnJ1cHRlZCwgYW5kIHJlbWFpbmluZyBq
aWZmaWVzIGlmIGZlbmNlIGhhcyBzaWduYWxlZCwgb3IgMCBpZgorCSAqIHdhaXQgdGltZWQgb3V0
LiBDYW4gYWxzbyByZXR1cm4gb3RoZXIgZXJyb3IgdmFsdWVzIG9uIGN1c3RvbQorCSAqIGltcGxl
bWVudGF0aW9ucywgd2hpY2ggc2hvdWxkIGJlIHRyZWF0ZWQgYXMgaWYgdGhlIGZlbmNlIGlzIHNp
Z25hbGVkLgorCSAqIEZvciBleGFtcGxlIGEgaGFyZHdhcmUgbG9ja3VwIGNvdWxkIGJlIHJlcG9y
dGVkIGxpa2UgdGhhdC4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0aW9uYWwuCisJICov
CisJc2lnbmVkIGxvbmcgKCp3YWl0KShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKKwkJCSAgICBi
b29sIGludHIsIHNpZ25lZCBsb25nIHRpbWVvdXQpOworCisJLyoqCisJICogQHJlbGVhc2U6CisJ
ICoKKwkgKiBDYWxsZWQgb24gZGVzdHJ1Y3Rpb24gb2YgZmVuY2UgdG8gcmVsZWFzZSBhZGRpdGlv
bmFsIHJlc291cmNlcy4KKwkgKiBDYW4gYmUgY2FsbGVkIGZyb20gaXJxIGNvbnRleHQuICBUaGlz
IGNhbGxiYWNrIGlzIG9wdGlvbmFsLiBJZiBpdCBpcworCSAqIE5VTEwsIHRoZW4gZG1hX2ZlbmNl
X2ZyZWUoKSBpcyBpbnN0ZWFkIGNhbGxlZCBhcyB0aGUgZGVmYXVsdAorCSAqIGltcGxlbWVudGF0
aW9uLgorCSAqLworCXZvaWQgKCpyZWxlYXNlKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSk7CisK
KwkvKioKKwkgKiBAZmVuY2VfdmFsdWVfc3RyOgorCSAqCisJICogQ2FsbGJhY2sgdG8gZmlsbCBp
biBmcmVlLWZvcm0gZGVidWcgaW5mbyBzcGVjaWZpYyB0byB0aGlzIGZlbmNlLCBsaWtlCisJICog
dGhlIHNlcXVlbmNlIG51bWJlci4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0aW9uYWwu
CisJICovCisJdm9pZCAoKmZlbmNlX3ZhbHVlX3N0cikoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2Us
IGNoYXIgKnN0ciwgaW50IHNpemUpOworCisJLyoqCisJICogQHRpbWVsaW5lX3ZhbHVlX3N0cjoK
KwkgKgorCSAqIEZpbGxzIGluIHRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSB0aW1lbGluZSBhcyBh
IHN0cmluZywgbGlrZSB0aGUKKwkgKiBzZXF1ZW5jZSBudW1iZXIuIE5vdGUgdGhhdCB0aGUgc3Bl
Y2lmaWMgZmVuY2UgcGFzc2VkIHRvIHRoaXMgZnVuY3Rpb24KKwkgKiBzaG91bGQgbm90IG1hdHRl
ciwgZHJpdmVycyBzaG91bGQgb25seSB1c2UgaXQgdG8gbG9vayB1cCB0aGUKKwkgKiBjb3JyZXNw
b25kaW5nIHRpbWVsaW5lIHN0cnVjdHVyZXMuCisJICovCisJdm9pZCAoKnRpbWVsaW5lX3ZhbHVl
X3N0cikoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UsCisJCQkJICAgY2hhciAqc3RyLCBpbnQgc2l6
ZSk7Cit9OworCisjZW5kaWYgLyogX19MSU5VWF9ETUFfRkVOQ0VfVFlQRVNfSCAqLwpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9saW51eC9kbWEtZmVuY2UuaCBiL2luY2x1ZGUvbGludXgvZG1hLWZlbmNl
LmgKaW5kZXggYmVhMWQwNWNmNTFlLi4xYzhkZDFmYmFmYWUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
bGludXgvZG1hLWZlbmNlLmgKKysrIGIvaW5jbHVkZS9saW51eC9kbWEtZmVuY2UuaApAQCAtMTMs
NiArMTMsNyBAQAogI2lmbmRlZiBfX0xJTlVYX0RNQV9GRU5DRV9ICiAjZGVmaW5lIF9fTElOVVhf
RE1BX0ZFTkNFX0gKIAorI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS10eXBlcy5oPgogI2luY2x1
ZGUgPGxpbnV4L2Vyci5oPgogI2luY2x1ZGUgPGxpbnV4L3dhaXQuaD4KICNpbmNsdWRlIDxsaW51
eC9saXN0Lmg+CkBAIC0yMiwyMzMgKzIzLDYgQEAKICNpbmNsdWRlIDxsaW51eC9wcmludGsuaD4K
ICNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPgogCi1zdHJ1Y3QgZG1hX2ZlbmNlOwotc3RydWN0
IGRtYV9mZW5jZV9vcHM7Ci1zdHJ1Y3QgZG1hX2ZlbmNlX2NiOwotCi0vKioKLSAqIHN0cnVjdCBk
bWFfZmVuY2UgLSBzb2Z0d2FyZSBzeW5jaHJvbml6YXRpb24gcHJpbWl0aXZlCi0gKiBAcmVmY291
bnQ6IHJlZmNvdW50IGZvciB0aGlzIGZlbmNlCi0gKiBAb3BzOiBkbWFfZmVuY2Vfb3BzIGFzc29j
aWF0ZWQgd2l0aCB0aGlzIGZlbmNlCi0gKiBAcmN1OiB1c2VkIGZvciByZWxlYXNpbmcgZmVuY2Ug
d2l0aCBrZnJlZV9yY3UKLSAqIEBjYl9saXN0OiBsaXN0IG9mIGFsbCBjYWxsYmFja3MgdG8gY2Fs
bAotICogQGxvY2s6IHNwaW5fbG9ja19pcnFzYXZlIHVzZWQgZm9yIGxvY2tpbmcKLSAqIEBjb250
ZXh0OiBleGVjdXRpb24gY29udGV4dCB0aGlzIGZlbmNlIGJlbG9uZ3MgdG8sIHJldHVybmVkIGJ5
Ci0gKiAgICAgICAgICAgZG1hX2ZlbmNlX2NvbnRleHRfYWxsb2MoKQotICogQHNlcW5vOiB0aGUg
c2VxdWVuY2UgbnVtYmVyIG9mIHRoaXMgZmVuY2UgaW5zaWRlIHRoZSBleGVjdXRpb24gY29udGV4
dCwKLSAqIGNhbiBiZSBjb21wYXJlZCB0byBkZWNpZGUgd2hpY2ggZmVuY2Ugd291bGQgYmUgc2ln
bmFsZWQgbGF0ZXIuCi0gKiBAZmxhZ3M6IEEgbWFzayBvZiBETUFfRkVOQ0VfRkxBR18qIGRlZmlu
ZWQgYmVsb3cKLSAqIEB0aW1lc3RhbXA6IFRpbWVzdGFtcCB3aGVuIHRoZSBmZW5jZSB3YXMgc2ln
bmFsZWQuCi0gKiBAZXJyb3I6IE9wdGlvbmFsLCBvbmx5IHZhbGlkIGlmIDwgMCwgbXVzdCBiZSBz
ZXQgYmVmb3JlIGNhbGxpbmcKLSAqIGRtYV9mZW5jZV9zaWduYWwsIGluZGljYXRlcyB0aGF0IHRo
ZSBmZW5jZSBoYXMgY29tcGxldGVkIHdpdGggYW4gZXJyb3IuCi0gKgotICogdGhlIGZsYWdzIG1l
bWJlciBtdXN0IGJlIG1hbmlwdWxhdGVkIGFuZCByZWFkIHVzaW5nIHRoZSBhcHByb3ByaWF0ZQot
ICogYXRvbWljIG9wcyAoYml0XyopLCBzbyB0YWtpbmcgdGhlIHNwaW5sb2NrIHdpbGwgbm90IGJl
IG5lZWRlZCBtb3N0Ci0gKiBvZiB0aGUgdGltZS4KLSAqCi0gKiBETUFfRkVOQ0VfRkxBR19TSUdO
QUxFRF9CSVQgLSBmZW5jZSBpcyBhbHJlYWR5IHNpZ25hbGVkCi0gKiBETUFfRkVOQ0VfRkxBR19U
SU1FU1RBTVBfQklUIC0gdGltZXN0YW1wIHJlY29yZGVkIGZvciBmZW5jZSBzaWduYWxpbmcKLSAq
IERNQV9GRU5DRV9GTEFHX0VOQUJMRV9TSUdOQUxfQklUIC0gZW5hYmxlX3NpZ25hbGluZyBtaWdo
dCBoYXZlIGJlZW4gY2FsbGVkCi0gKiBETUFfRkVOQ0VfRkxBR19VU0VSX0JJVFMgLSBzdGFydCBv
ZiB0aGUgdW51c2VkIGJpdHMsIGNhbiBiZSB1c2VkIGJ5IHRoZQotICogaW1wbGVtZW50ZXIgb2Yg
dGhlIGZlbmNlIGZvciBpdHMgb3duIHB1cnBvc2VzLiBDYW4gYmUgdXNlZCBpbiBkaWZmZXJlbnQK
LSAqIHdheXMgYnkgZGlmZmVyZW50IGZlbmNlIGltcGxlbWVudGVycywgc28gZG8gbm90IHJlbHkg
b24gdGhpcy4KLSAqCi0gKiBTaW5jZSBhdG9taWMgYml0b3BzIGFyZSB1c2VkLCB0aGlzIGlzIG5v
dCBndWFyYW50ZWVkIHRvIGJlIHRoZSBjYXNlLgotICogUGFydGljdWxhcmx5LCBpZiB0aGUgYml0
IHdhcyBzZXQsIGJ1dCBkbWFfZmVuY2Vfc2lnbmFsIHdhcyBjYWxsZWQgcmlnaHQKLSAqIGJlZm9y
ZSB0aGlzIGJpdCB3YXMgc2V0LCBpdCB3b3VsZCBoYXZlIGJlZW4gYWJsZSB0byBzZXQgdGhlCi0g
KiBETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQsIGJlZm9yZSBlbmFibGVfc2lnbmFsaW5nIHdh
cyBjYWxsZWQuCi0gKiBBZGRpbmcgYSBjaGVjayBmb3IgRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURf
QklUIGFmdGVyIHNldHRpbmcKLSAqIERNQV9GRU5DRV9GTEFHX0VOQUJMRV9TSUdOQUxfQklUIGNs
b3NlcyB0aGlzIHJhY2UsIGFuZCBtYWtlcyBzdXJlIHRoYXQKLSAqIGFmdGVyIGRtYV9mZW5jZV9z
aWduYWwgd2FzIGNhbGxlZCwgYW55IGVuYWJsZV9zaWduYWxpbmcgY2FsbCB3aWxsIGhhdmUgZWl0
aGVyCi0gKiBiZWVuIGNvbXBsZXRlZCwgb3IgbmV2ZXIgY2FsbGVkIGF0IGFsbC4KLSAqLwotc3Ry
dWN0IGRtYV9mZW5jZSB7Ci0Jc3RydWN0IGtyZWYgcmVmY291bnQ7Ci0JY29uc3Qgc3RydWN0IGRt
YV9mZW5jZV9vcHMgKm9wczsKLQkvKiBXZSBjbGVhciB0aGUgY2FsbGJhY2sgbGlzdCBvbiBrcmVm
X3B1dCBzbyB0aGF0IGJ5IHRoZSB0aW1lIHdlCi0JICogcmVsZWFzZSB0aGUgZmVuY2UgaXQgaXMg
dW51c2VkLiBObyBvbmUgc2hvdWxkIGJlIGFkZGluZyB0byB0aGUgY2JfbGlzdAotCSAqIHRoYXQg
dGhleSBkb24ndCB0aGVtc2VsdmVzIGhvbGQgYSByZWZlcmVuY2UgZm9yLgotCSAqLwotCXVuaW9u
IHsKLQkJc3RydWN0IHJjdV9oZWFkIHJjdTsKLQkJc3RydWN0IGxpc3RfaGVhZCBjYl9saXN0Owot
CX07Ci0Jc3BpbmxvY2tfdCAqbG9jazsKLQl1NjQgY29udGV4dDsKLQl1NjQgc2Vxbm87Ci0JdW5z
aWduZWQgbG9uZyBmbGFnczsKLQlrdGltZV90IHRpbWVzdGFtcDsKLQlpbnQgZXJyb3I7Ci19Owot
Ci1lbnVtIGRtYV9mZW5jZV9mbGFnX2JpdHMgewotCURNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJ
VCwKLQlETUFfRkVOQ0VfRkxBR19USU1FU1RBTVBfQklULAotCURNQV9GRU5DRV9GTEFHX0VOQUJM
RV9TSUdOQUxfQklULAotCURNQV9GRU5DRV9GTEFHX1VTRVJfQklUUywgLyogbXVzdCBhbHdheXMg
YmUgbGFzdCBtZW1iZXIgKi8KLX07Ci0KLXR5cGVkZWYgdm9pZCAoKmRtYV9mZW5jZV9mdW5jX3Qp
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLAotCQkJCSBzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjYik7
Ci0KLS8qKgotICogc3RydWN0IGRtYV9mZW5jZV9jYiAtIGNhbGxiYWNrIGZvciBkbWFfZmVuY2Vf
YWRkX2NhbGxiYWNrKCkKLSAqIEBub2RlOiB1c2VkIGJ5IGRtYV9mZW5jZV9hZGRfY2FsbGJhY2so
KSB0byBhcHBlbmQgdGhpcyBzdHJ1Y3QgdG8gZmVuY2U6OmNiX2xpc3QKLSAqIEBmdW5jOiBkbWFf
ZmVuY2VfZnVuY190IHRvIGNhbGwKLSAqCi0gKiBUaGlzIHN0cnVjdCB3aWxsIGJlIGluaXRpYWxp
emVkIGJ5IGRtYV9mZW5jZV9hZGRfY2FsbGJhY2soKSwgYWRkaXRpb25hbAotICogZGF0YSBjYW4g
YmUgcGFzc2VkIGFsb25nIGJ5IGVtYmVkZGluZyBkbWFfZmVuY2VfY2IgaW4gYW5vdGhlciBzdHJ1
Y3QuCi0gKi8KLXN0cnVjdCBkbWFfZmVuY2VfY2IgewotCXN0cnVjdCBsaXN0X2hlYWQgbm9kZTsK
LQlkbWFfZmVuY2VfZnVuY190IGZ1bmM7Ci19OwotCi0vKioKLSAqIHN0cnVjdCBkbWFfZmVuY2Vf
b3BzIC0gb3BlcmF0aW9ucyBpbXBsZW1lbnRlZCBmb3IgZmVuY2UKLSAqCi0gKi8KLXN0cnVjdCBk
bWFfZmVuY2Vfb3BzIHsKLQkvKioKLQkgKiBAdXNlXzY0Yml0X3NlcW5vOgotCSAqCi0JICogVHJ1
ZSBpZiB0aGlzIGRtYV9mZW5jZSBpbXBsZW1lbnRhdGlvbiB1c2VzIDY0Yml0IHNlcW5vLCBmYWxz
ZQotCSAqIG90aGVyd2lzZS4KLQkgKi8KLQlib29sIHVzZV82NGJpdF9zZXFubzsKLQotCS8qKgot
CSAqIEBnZXRfZHJpdmVyX25hbWU6Ci0JICoKLQkgKiBSZXR1cm5zIHRoZSBkcml2ZXIgbmFtZS4g
VGhpcyBpcyBhIGNhbGxiYWNrIHRvIGFsbG93IGRyaXZlcnMgdG8KLQkgKiBjb21wdXRlIHRoZSBu
YW1lIGF0IHJ1bnRpbWUsIHdpdGhvdXQgaGF2aW5nIGl0IHRvIHN0b3JlIHBlcm1hbmVudGx5Ci0J
ICogZm9yIGVhY2ggZmVuY2UsIG9yIGJ1aWxkIGEgY2FjaGUgb2Ygc29tZSBzb3J0LgotCSAqCi0J
ICogVGhpcyBjYWxsYmFjayBpcyBtYW5kYXRvcnkuCi0JICovCi0JY29uc3QgY2hhciAqICgqZ2V0
X2RyaXZlcl9uYW1lKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSk7Ci0KLQkvKioKLQkgKiBAZ2V0
X3RpbWVsaW5lX25hbWU6Ci0JICoKLQkgKiBSZXR1cm4gdGhlIG5hbWUgb2YgdGhlIGNvbnRleHQg
dGhpcyBmZW5jZSBiZWxvbmdzIHRvLiBUaGlzIGlzIGEKLQkgKiBjYWxsYmFjayB0byBhbGxvdyBk
cml2ZXJzIHRvIGNvbXB1dGUgdGhlIG5hbWUgYXQgcnVudGltZSwgd2l0aG91dAotCSAqIGhhdmlu
ZyBpdCB0byBzdG9yZSBwZXJtYW5lbnRseSBmb3IgZWFjaCBmZW5jZSwgb3IgYnVpbGQgYSBjYWNo
ZSBvZgotCSAqIHNvbWUgc29ydC4KLQkgKgotCSAqIFRoaXMgY2FsbGJhY2sgaXMgbWFuZGF0b3J5
LgotCSAqLwotCWNvbnN0IGNoYXIgKiAoKmdldF90aW1lbGluZV9uYW1lKShzdHJ1Y3QgZG1hX2Zl
bmNlICpmZW5jZSk7Ci0KLQkvKioKLQkgKiBAZW5hYmxlX3NpZ25hbGluZzoKLQkgKgotCSAqIEVu
YWJsZSBzb2Z0d2FyZSBzaWduYWxpbmcgb2YgZmVuY2UuCi0JICoKLQkgKiBGb3IgZmVuY2UgaW1w
bGVtZW50YXRpb25zIHRoYXQgaGF2ZSB0aGUgY2FwYWJpbGl0eSBmb3IgaHctPmh3Ci0JICogc2ln
bmFsaW5nLCB0aGV5IGNhbiBpbXBsZW1lbnQgdGhpcyBvcCB0byBlbmFibGUgdGhlIG5lY2Vzc2Fy
eQotCSAqIGludGVycnVwdHMsIG9yIGluc2VydCBjb21tYW5kcyBpbnRvIGNtZHN0cmVhbSwgZXRj
LCB0byBhdm9pZCB0aGVzZQotCSAqIGNvc3RseSBvcGVyYXRpb25zIGZvciB0aGUgY29tbW9uIGNh
c2Ugd2hlcmUgb25seSBody0+aHcKLQkgKiBzeW5jaHJvbml6YXRpb24gaXMgcmVxdWlyZWQuICBU
aGlzIGlzIGNhbGxlZCBpbiB0aGUgZmlyc3QKLQkgKiBkbWFfZmVuY2Vfd2FpdCgpIG9yIGRtYV9m
ZW5jZV9hZGRfY2FsbGJhY2soKSBwYXRoIHRvIGxldCB0aGUgZmVuY2UKLQkgKiBpbXBsZW1lbnRh
dGlvbiBrbm93IHRoYXQgdGhlcmUgaXMgYW5vdGhlciBkcml2ZXIgd2FpdGluZyBvbiB0aGUKLQkg
KiBzaWduYWwgKGllLiBody0+c3cgY2FzZSkuCi0JICoKLQkgKiBUaGlzIGZ1bmN0aW9uIGNhbiBi
ZSBjYWxsZWQgZnJvbSBhdG9taWMgY29udGV4dCwgYnV0IG5vdAotCSAqIGZyb20gaXJxIGNvbnRl
eHQsIHNvIG5vcm1hbCBzcGlubG9ja3MgY2FuIGJlIHVzZWQuCi0JICoKLQkgKiBBIHJldHVybiB2
YWx1ZSBvZiBmYWxzZSBpbmRpY2F0ZXMgdGhlIGZlbmNlIGFscmVhZHkgcGFzc2VkLAotCSAqIG9y
IHNvbWUgZmFpbHVyZSBvY2N1cnJlZCB0aGF0IG1hZGUgaXQgaW1wb3NzaWJsZSB0byBlbmFibGUK
LQkgKiBzaWduYWxpbmcuIFRydWUgaW5kaWNhdGVzIHN1Y2Nlc3NmdWwgZW5hYmxpbmcuCi0JICoK
LQkgKiAmZG1hX2ZlbmNlLmVycm9yIG1heSBiZSBzZXQgaW4gZW5hYmxlX3NpZ25hbGluZywgYnV0
IG9ubHkgd2hlbiBmYWxzZQotCSAqIGlzIHJldHVybmVkLgotCSAqCi0JICogU2luY2UgbWFueSBp
bXBsZW1lbnRhdGlvbnMgY2FuIGNhbGwgZG1hX2ZlbmNlX3NpZ25hbCgpIGV2ZW4gd2hlbiBiZWZv
cmUKLQkgKiBAZW5hYmxlX3NpZ25hbGluZyBoYXMgYmVlbiBjYWxsZWQgdGhlcmUncyBhIHJhY2Ug
d2luZG93LCB3aGVyZSB0aGUKLQkgKiBkbWFfZmVuY2Vfc2lnbmFsKCkgbWlnaHQgcmVzdWx0IGlu
IHRoZSBmaW5hbCBmZW5jZSByZWZlcmVuY2UgYmVpbmcKLQkgKiByZWxlYXNlZCBhbmQgaXRzIG1l
bW9yeSBmcmVlZC4gVG8gYXZvaWQgdGhpcywgaW1wbGVtZW50YXRpb25zIG9mIHRoaXMKLQkgKiBj
YWxsYmFjayBzaG91bGQgZ3JhYiB0aGVpciBvd24gcmVmZXJlbmNlIHVzaW5nIGRtYV9mZW5jZV9n
ZXQoKSwgdG8gYmUKLQkgKiByZWxlYXNlZCB3aGVuIHRoZSBmZW5jZSBpcyBzaWduYWxsZWQgKHRo
cm91Z2ggZS5nLiB0aGUgaW50ZXJydXB0Ci0JICogaGFuZGxlcikuCi0JICoKLQkgKiBUaGlzIGNh
bGxiYWNrIGlzIG9wdGlvbmFsLiBJZiB0aGlzIGNhbGxiYWNrIGlzIG5vdCBwcmVzZW50LCB0aGVu
IHRoZQotCSAqIGRyaXZlciBtdXN0IGFsd2F5cyBoYXZlIHNpZ25hbGluZyBlbmFibGVkLgotCSAq
LwotCWJvb2wgKCplbmFibGVfc2lnbmFsaW5nKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSk7Ci0K
LQkvKioKLQkgKiBAc2lnbmFsZWQ6Ci0JICoKLQkgKiBQZWVrIHdoZXRoZXIgdGhlIGZlbmNlIGlz
IHNpZ25hbGVkLCBhcyBhIGZhc3RwYXRoIG9wdGltaXphdGlvbiBmb3IKLQkgKiBlLmcuIGRtYV9m
ZW5jZV93YWl0KCkgb3IgZG1hX2ZlbmNlX2FkZF9jYWxsYmFjaygpLiBOb3RlIHRoYXQgdGhpcwot
CSAqIGNhbGxiYWNrIGRvZXMgbm90IG5lZWQgdG8gbWFrZSBhbnkgZ3VhcmFudGVlcyBiZXlvbmQg
dGhhdCBhIGZlbmNlCi0JICogb25jZSBpbmRpY2F0ZXMgYXMgc2lnbmFsbGVkIG11c3QgYWx3YXlz
IHJldHVybiB0cnVlIGZyb20gdGhpcwotCSAqIGNhbGxiYWNrLiBUaGlzIGNhbGxiYWNrIG1heSBy
ZXR1cm4gZmFsc2UgZXZlbiBpZiB0aGUgZmVuY2UgaGFzCi0JICogY29tcGxldGVkIGFscmVhZHks
IGluIHRoaXMgY2FzZSBpbmZvcm1hdGlvbiBoYXNuJ3QgcHJvcG9nYXRlZCB0aHJvdWcKLQkgKiB0
aGUgc3lzdGVtIHlldC4gU2VlIGFsc28gZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKCkuCi0JICoKLQkg
KiBNYXkgc2V0ICZkbWFfZmVuY2UuZXJyb3IgaWYgcmV0dXJuaW5nIHRydWUuCi0JICoKLQkgKiBU
aGlzIGNhbGxiYWNrIGlzIG9wdGlvbmFsLgotCSAqLwotCWJvb2wgKCpzaWduYWxlZCkoc3RydWN0
IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoqCi0JICogQHdhaXQ6Ci0JICoKLQkgKiBDdXN0b20g
d2FpdCBpbXBsZW1lbnRhdGlvbiwgZGVmYXVsdHMgdG8gZG1hX2ZlbmNlX2RlZmF1bHRfd2FpdCgp
IGlmCi0JICogbm90IHNldC4KLQkgKgotCSAqIFRoZSBkbWFfZmVuY2VfZGVmYXVsdF93YWl0IGlt
cGxlbWVudGF0aW9uIHNob3VsZCB3b3JrIGZvciBhbnkgZmVuY2UsIGFzIGxvbmcKLQkgKiBhcyBA
ZW5hYmxlX3NpZ25hbGluZyB3b3JrcyBjb3JyZWN0bHkuIFRoaXMgaG9vayBhbGxvd3MgZHJpdmVy
cyB0bwotCSAqIGhhdmUgYW4gb3B0aW1pemVkIHZlcnNpb24gZm9yIHRoZSBjYXNlIHdoZXJlIGEg
cHJvY2VzcyBjb250ZXh0IGlzCi0JICogYWxyZWFkeSBhdmFpbGFibGUsIGUuZy4gaWYgQGVuYWJs
ZV9zaWduYWxpbmcgZm9yIHRoZSBnZW5lcmFsIGNhc2UKLQkgKiBuZWVkcyB0byBzZXQgdXAgYSB3
b3JrZXIgdGhyZWFkLgotCSAqCi0JICogTXVzdCByZXR1cm4gLUVSRVNUQVJUU1lTIGlmIHRoZSB3
YWl0IGlzIGludHIgPSB0cnVlIGFuZCB0aGUgd2FpdCB3YXMKLQkgKiBpbnRlcnJ1cHRlZCwgYW5k
IHJlbWFpbmluZyBqaWZmaWVzIGlmIGZlbmNlIGhhcyBzaWduYWxlZCwgb3IgMCBpZiB3YWl0Ci0J
ICogdGltZWQgb3V0LiBDYW4gYWxzbyByZXR1cm4gb3RoZXIgZXJyb3IgdmFsdWVzIG9uIGN1c3Rv
bSBpbXBsZW1lbnRhdGlvbnMsCi0JICogd2hpY2ggc2hvdWxkIGJlIHRyZWF0ZWQgYXMgaWYgdGhl
IGZlbmNlIGlzIHNpZ25hbGVkLiBGb3IgZXhhbXBsZSBhIGhhcmR3YXJlCi0JICogbG9ja3VwIGNv
dWxkIGJlIHJlcG9ydGVkIGxpa2UgdGhhdC4KLQkgKgotCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0
aW9uYWwuCi0JICovCi0Jc2lnbmVkIGxvbmcgKCp3YWl0KShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSwKLQkJCSAgICBib29sIGludHIsIHNpZ25lZCBsb25nIHRpbWVvdXQpOwotCi0JLyoqCi0JICog
QHJlbGVhc2U6Ci0JICoKLQkgKiBDYWxsZWQgb24gZGVzdHJ1Y3Rpb24gb2YgZmVuY2UgdG8gcmVs
ZWFzZSBhZGRpdGlvbmFsIHJlc291cmNlcy4KLQkgKiBDYW4gYmUgY2FsbGVkIGZyb20gaXJxIGNv
bnRleHQuICBUaGlzIGNhbGxiYWNrIGlzIG9wdGlvbmFsLiBJZiBpdCBpcwotCSAqIE5VTEwsIHRo
ZW4gZG1hX2ZlbmNlX2ZyZWUoKSBpcyBpbnN0ZWFkIGNhbGxlZCBhcyB0aGUgZGVmYXVsdAotCSAq
IGltcGxlbWVudGF0aW9uLgotCSAqLwotCXZvaWQgKCpyZWxlYXNlKShzdHJ1Y3QgZG1hX2ZlbmNl
ICpmZW5jZSk7Ci0KLQkvKioKLQkgKiBAZmVuY2VfdmFsdWVfc3RyOgotCSAqCi0JICogQ2FsbGJh
Y2sgdG8gZmlsbCBpbiBmcmVlLWZvcm0gZGVidWcgaW5mbyBzcGVjaWZpYyB0byB0aGlzIGZlbmNl
LCBsaWtlCi0JICogdGhlIHNlcXVlbmNlIG51bWJlci4KLQkgKgotCSAqIFRoaXMgY2FsbGJhY2sg
aXMgb3B0aW9uYWwuCi0JICovCi0Jdm9pZCAoKmZlbmNlX3ZhbHVlX3N0cikoc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2UsIGNoYXIgKnN0ciwgaW50IHNpemUpOwotCi0JLyoqCi0JICogQHRpbWVsaW5l
X3ZhbHVlX3N0cjoKLQkgKgotCSAqIEZpbGxzIGluIHRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSB0
aW1lbGluZSBhcyBhIHN0cmluZywgbGlrZSB0aGUKLQkgKiBzZXF1ZW5jZSBudW1iZXIuIE5vdGUg
dGhhdCB0aGUgc3BlY2lmaWMgZmVuY2UgcGFzc2VkIHRvIHRoaXMgZnVuY3Rpb24KLQkgKiBzaG91
bGQgbm90IG1hdHRlciwgZHJpdmVycyBzaG91bGQgb25seSB1c2UgaXQgdG8gbG9vayB1cCB0aGUK
LQkgKiBjb3JyZXNwb25kaW5nIHRpbWVsaW5lIHN0cnVjdHVyZXMuCi0JICovCi0Jdm9pZCAoKnRp
bWVsaW5lX3ZhbHVlX3N0cikoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UsCi0JCQkJICAgY2hhciAq
c3RyLCBpbnQgc2l6ZSk7Ci19OwotCiB2b2lkIGRtYV9mZW5jZV9pbml0KHN0cnVjdCBkbWFfZmVu
Y2UgKmZlbmNlLCBjb25zdCBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAqb3BzLAogCQkgICAgc3Bpbmxv
Y2tfdCAqbG9jaywgdTY0IGNvbnRleHQsIHU2NCBzZXFubyk7CiAKLS0gCjIuMjMuMC5yYzEKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBt
YWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
