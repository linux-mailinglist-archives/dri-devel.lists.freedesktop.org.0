Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4741C5689C
	for <lists+dri-devel@lfdr.de>; Wed, 26 Jun 2019 14:23:19 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E86EE6E3AC;
	Wed, 26 Jun 2019 12:23:14 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-wr1-x444.google.com (mail-wr1-x444.google.com
 [IPv6:2a00:1450:4864:20::444])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0CBFC6E3A6;
 Wed, 26 Jun 2019 12:23:13 +0000 (UTC)
Received: by mail-wr1-x444.google.com with SMTP id n9so2535117wru.0;
 Wed, 26 Jun 2019 05:23:13 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=vgYi8RyzopRJUudt1RvDdOKj3xvUwIt3+W8RHkNokO0=;
 b=M5AwVvQHO3PsLVMAWfW+gSUIzJc7Dy0W9Xma+lU7L5tV8fBYeECspNISN1R5qazCjD
 ot2YrtwE0wW+UEQwN/h/GjgjZUPdN8ETbV8wgoPFsUWwYpN68Bg5KURyPlwPeOyEcj23
 BCJOUDxFmclt/bMb34doSHJpNvUoBn6pxBGlnZFZJLWRfpKnq7v+/3zofC4pajAhlRx+
 JN5iOQ97vVBT3lZ2SS79bXctJziTSJDzh0awwVSsO/N/oEiwGV1XHrRkdbkX3CqeOo4B
 6dU64oPT5fvqNQ6jAo6A2+R1gHzIySyqTn8xIRWUuYQvVOXtLTjPyp6Zwu08OdISRfSW
 qQvg==
X-Gm-Message-State: APjAAAUdvCWPDlnWUJLkjfPRFRiyQJYaycCpVc6IQDlps/veUST5LmeV
 AEv/M8yrKZUKcgSUY4Wc55T9ZKkL
X-Google-Smtp-Source: APXvYqz6E4UhJwLLVh2zZgXP/roC3gc7Vc1ahWF/tGbDv8PPIm3HNjLMXtL26odBgOGt1Pvh3XDYcA==
X-Received: by 2002:adf:dbd2:: with SMTP id e18mr316489wrj.110.1561551792147; 
 Wed, 26 Jun 2019 05:23:12 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:902c:2dc9:c30e:db03])
 by smtp.gmail.com with ESMTPSA id k125sm2262018wmf.41.2019.06.26.05.23.11
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Wed, 26 Jun 2019 05:23:11 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: intel-gfx@lists.freedesktop.org, dri-devel@lists.freedesktop.org,
 amd-gfx@lists.freedesktop.org
Subject: [PATCH 1/6] dma-buf: add dynamic DMA-buf handling v13
Date: Wed, 26 Jun 2019 14:23:05 +0200
Message-Id: <20190626122310.1498-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=vgYi8RyzopRJUudt1RvDdOKj3xvUwIt3+W8RHkNokO0=;
 b=KTa9T3y4qIv0rdSsfHO8ASQRiLZAWA2+W6r9iGUCuXsXOv0bliDtNSqlkk3qndEpjW
 vytTdUQ7F3+Xj7gl9TGsYE6hUA4+tsj4oHDW9GUlMNhxBry9wQxAcFqZktyQc00egGux
 7DNWUoHv8TEbCPO4Z9bEHKHhmtg/GDs32NnuiIgba5CUh9zm36+wMlW6cPRbFrwBVaOn
 JOFIDj+r6cqXA22RLHw9YCXkXVm8lR15fOM+J57ggF/grqb5xSdVxpLeMHIH5EtfZ2wZ
 PqxNC6XnxvX0rOG6iWtkLlcQ9WIrFHsPzR+BlBBys4NPKTcYC0Iqr2Cf1PFDebNFIsrk
 OONA==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

T24gdGhlIGV4cG9ydGVyIHNpZGUgd2UgYWRkIG9wdGlvbmFsIGV4cGxpY2l0IHBpbm5pbmcgY2Fs
bGJhY2tzLiBJZiB0aG9zZQpjYWxsYmFja3MgYXJlIGltcGxlbWVudGVkIHRoZSBmcmFtZXdvcmsg
bm8gbG9uZ2VyIGNhY2hlcyBzZyB0YWJsZXMgYW5kIHRoZQptYXAvdW5tYXAgY2FsbGJhY2tzIGFy
ZSBhbHdheXMgY2FsbGVkIHdpdGggdGhlIGxvY2sgb2YgdGhlIHJlc2VydmF0aW9uIG9iamVjdApo
ZWxkLgoKT24gdGhlIGltcG9ydGVyIHNpZGUgd2UgYWRkIGFuIG9wdGlvbmFsIGludmFsaWRhdGUg
Y2FsbGJhY2suIFRoaXMgY2FsbGJhY2sgaXMKdXNlZCBieSB0aGUgZXhwb3J0ZXIgdG8gaW5mb3Jt
IHRoZSBpbXBvcnRlcnMgdGhhdCB0aGVpciBtYXBwaW5ncyBzaG91bGQgYmUKZGVzdHJveWVkIGFz
IHNvb24gYXMgcG9zc2libGUuCgpUaGlzIGFsbG93cyB0aGUgZXhwb3J0ZXIgdG8gcHJvdmlkZSB0
aGUgbWFwcGluZ3Mgd2l0aG91dCB0aGUgbmVlZCB0byBwaW4KdGhlIGJhY2tpbmcgc3RvcmUuCgp2
MjogZG9uJ3QgdHJ5IHRvIGludmFsaWRhdGUgbWFwcGluZ3Mgd2hlbiB0aGUgY2FsbGJhY2sgaXMg
TlVMTCwKICAgIGxvY2sgdGhlIHJlc2VydmF0aW9uIG9iaiB3aGlsZSB1c2luZyB0aGUgYXR0YWNo
bWVudHMsCiAgICBhZGQgaGVscGVyIHRvIHNldCB0aGUgY2FsbGJhY2sKdjM6IG1vdmUgZmxhZyBm
b3IgaW52YWxpZGF0aW9uIHN1cHBvcnQgaW50byB0aGUgRE1BLWJ1ZiwKICAgIHVzZSBuZXcgYXR0
YWNoX2luZm8gc3RydWN0dXJlIHRvIHNldCB0aGUgY2FsbGJhY2sKdjQ6IHVzZSBpbXBvcnRlcl9w
cml2IGZpZWxkIGluc3RlYWQgb2YgbWFuZ2xpbmcgZXhwb3J0ZXIgcHJpdi4KdjU6IGRyb3AgaW52
YWxpZGF0aW9uX3N1cHBvcnRlZCBmbGFnCnY2OiBzcXVhc2ggdG9nZXRoZXIgd2l0aCBwaW4vdW5w
aW4gY2hhbmdlcwp2NzogcGluL3VucGluIHRha2VzIGFuIGF0dGFjaG1lbnQgbm93CnY4OiBudWtl
IGRtYV9idWZfYXR0YWNobWVudF8obWFwfHVubWFwKV9sb2NrZWQsCiAgICBldmVyeXRoaW5nIGlz
IG5vdyBoYW5kbGVkIGJhY2t3YXJkIGNvbXBhdGlibGUKdjk6IGFsd2F5cyBjYWNoZSB3aGVuIGV4
cG9ydC9pbXBvcnRlciBkb24ndCBhZ3JlZSBvbiBkeW5hbWljIGhhbmRsaW5nCnYxMDogbWluaW1h
bCBzdHlsZSBjbGVhbnVwCnYxMTogZHJvcCBhdXRvbWF0aWNhbGx5IHJlLWVudHJ5IGF2b2lkYW5j
ZQp2MTI6IHJlbmFtZSBjYWxsYmFjayB0byBtb3ZlX25vdGlmeQp2MTM6IGFkZCBtaWdodF9sb2Nr
IGluIGFwcHJvcHJpYXRlIHBsYWNlcwoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8
Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgotLS0KIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMg
fCAxODMgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0KIGluY2x1ZGUvbGlu
dXgvZG1hLWJ1Zi5oICAgfCAxMDggKysrKysrKysrKysrKysrKysrKystLQogMiBmaWxlcyBjaGFu
Z2VkLCAyNzcgaW5zZXJ0aW9ucygrKSwgMTQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9kbWEtYnVmL2RtYS1idWYuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKaW5kZXgg
NmMxNWRlYjVkNGFkLi5iZDg2MTFmYTJjZmEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtYnVmLmMKKysrIGIvZHJpdmVycy9kbWEtYnVmL2RtYS1idWYuYwpAQCAtNTMxLDYgKzUzMSw5
IEBAIHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmX2V4cG9ydChjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9l
eHBvcnRfaW5mbyAqZXhwX2luZm8pCiAJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwogCX0KIAor
CWlmIChXQVJOX09OKGV4cF9pbmZvLT5vcHMtPmNhY2hlX3NndF9tYXBwaW5nICYmIGV4cF9pbmZv
LT5vcHMtPnBpbikpCisJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworCiAJaWYgKCF0cnlfbW9k
dWxlX2dldChleHBfaW5mby0+b3duZXIpKQogCQlyZXR1cm4gRVJSX1BUUigtRU5PRU5UKTsKIApA
QCAtNjUxLDEwICs2NTQsMTIgQEAgdm9pZCBkbWFfYnVmX3B1dChzdHJ1Y3QgZG1hX2J1ZiAqZG1h
YnVmKQogRVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl9wdXQpOwogCiAvKioKLSAqIGRtYV9idWZf
YXR0YWNoIC0gQWRkIHRoZSBkZXZpY2UgdG8gZG1hX2J1ZidzIGF0dGFjaG1lbnRzIGxpc3Q7IG9w
dGlvbmFsbHksCisgKiBkbWFfYnVmX2R5bmFtaWNfYXR0YWNoIC0gQWRkIHRoZSBkZXZpY2UgdG8g
ZG1hX2J1ZidzIGF0dGFjaG1lbnRzIGxpc3Q7IG9wdGlvbmFsbHksCiAgKiBjYWxscyBhdHRhY2go
KSBvZiBkbWFfYnVmX29wcyB0byBhbGxvdyBkZXZpY2Utc3BlY2lmaWMgYXR0YWNoIGZ1bmN0aW9u
YWxpdHkKLSAqIEBkbWFidWY6CVtpbl0JYnVmZmVyIHRvIGF0dGFjaCBkZXZpY2UgdG8uCi0gKiBA
ZGV2OglbaW5dCWRldmljZSB0byBiZSBhdHRhY2hlZC4KKyAqIEBkbWFidWY6CQlbaW5dCWJ1ZmZl
ciB0byBhdHRhY2ggZGV2aWNlIHRvLgorICogQGRldjoJCVtpbl0JZGV2aWNlIHRvIGJlIGF0dGFj
aGVkLgorICogQGltcG9ydGVyX29wcwlbaW5dCWltcG9ydGVyIG9wZXJhdGlvbnMgZm9yIHRoZSBh
dHRhY2htZW50CisgKiBAaW1wb3J0ZXJfcHJpdglbaW5dCWltcG9ydGVyIHByaXZhdGUgcG9pbnRl
ciBmb3IgdGhlIGF0dGFjaG1lbnQKICAqCiAgKiBSZXR1cm5zIHN0cnVjdCBkbWFfYnVmX2F0dGFj
aG1lbnQgcG9pbnRlciBmb3IgdGhpcyBhdHRhY2htZW50LiBBdHRhY2htZW50cwogICogbXVzdCBi
ZSBjbGVhbmVkIHVwIGJ5IGNhbGxpbmcgZG1hX2J1Zl9kZXRhY2goKS4KQEAgLTY2OCw4ICs2NzMs
MTAgQEAgRVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl9wdXQpOwogICogYWNjZXNzaWJsZSB0byBA
ZGV2LCBhbmQgY2Fubm90IGJlIG1vdmVkIHRvIGEgbW9yZSBzdWl0YWJsZSBwbGFjZS4gVGhpcyBp
cwogICogaW5kaWNhdGVkIHdpdGggdGhlIGVycm9yIGNvZGUgLUVCVVNZLgogICovCi1zdHJ1Y3Qg
ZG1hX2J1Zl9hdHRhY2htZW50ICpkbWFfYnVmX2F0dGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVm
LAotCQkJCQkgIHN0cnVjdCBkZXZpY2UgKmRldikKK3N0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQg
KgorZG1hX2J1Zl9keW5hbWljX2F0dGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCisJCSAgICAgICBjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2hfb3BzICpp
bXBvcnRlcl9vcHMsCisJCSAgICAgICB2b2lkICppbXBvcnRlcl9wcml2KQogewogCXN0cnVjdCBk
bWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaDsKIAlpbnQgcmV0OwpAQCAtNjgzLDYgKzY5MCw4IEBA
IHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmRtYV9idWZfYXR0YWNoKHN0cnVjdCBkbWFfYnVm
ICpkbWFidWYsCiAKIAlhdHRhY2gtPmRldiA9IGRldjsKIAlhdHRhY2gtPmRtYWJ1ZiA9IGRtYWJ1
ZjsKKwlhdHRhY2gtPmltcG9ydGVyX29wcyA9IGltcG9ydGVyX29wczsKKwlhdHRhY2gtPmltcG9y
dGVyX3ByaXYgPSBpbXBvcnRlcl9wcml2OwogCiAJbXV0ZXhfbG9jaygmZG1hYnVmLT5sb2NrKTsK
IApAQCAtNjkxLDE2ICs3MDAsNzIgQEAgc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqZG1hX2J1
Zl9hdHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKIAkJaWYgKHJldCkKIAkJCWdvdG8gZXJy
X2F0dGFjaDsKIAl9CisJcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2soZG1hYnVmLT5yZXN2LCBOVUxM
KTsKIAlsaXN0X2FkZCgmYXR0YWNoLT5ub2RlLCAmZG1hYnVmLT5hdHRhY2htZW50cyk7CisJcmVz
ZXJ2YXRpb25fb2JqZWN0X3VubG9jayhkbWFidWYtPnJlc3YpOwogCiAJbXV0ZXhfdW5sb2NrKCZk
bWFidWYtPmxvY2spOwogCisJLyogV2hlbiBlaXRoZXIgdGhlIGltcG9ydGVyIG9yIHRoZSBleHBv
cnRlciBjYW4ndCBoYW5kbGUgZHluYW1pYworCSAqIG1hcHBpbmdzIHdlIGNhY2hlIHRoZSBtYXBw
aW5nIGhlcmUgdG8gYXZvaWQgaXNzdWVzIHdpdGggdGhlCisJICogcmVzZXJ2YXRpb24gb2JqZWN0
IGxvY2suCisJICovCisJaWYgKGRtYV9idWZfYXR0YWNobWVudF9pc19keW5hbWljKGF0dGFjaCkg
IT0KKwkgICAgZG1hX2J1Zl9pc19keW5hbWljKGRtYWJ1ZikpIHsKKwkJc3RydWN0IHNnX3RhYmxl
ICpzZ3Q7CisKKwkJaWYgKGRtYV9idWZfaXNfZHluYW1pYyhhdHRhY2gtPmRtYWJ1ZikpIHsKKwkJ
CXJlc2VydmF0aW9uX29iamVjdF9sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2LCBOVUxMKTsKKwkJ
CXJldCA9IGRtYV9idWZfcGluKGF0dGFjaCk7CisJCQlpZiAocmV0KQorCQkJCWdvdG8gZXJyX3Vu
bG9jazsKKwkJfQorCisJCXNndCA9IGRtYWJ1Zi0+b3BzLT5tYXBfZG1hX2J1ZihhdHRhY2gsIERN
QV9CSURJUkVDVElPTkFMKTsKKwkJaWYgKCFzZ3QpCisJCQlzZ3QgPSBFUlJfUFRSKC1FTk9NRU0p
OworCQlpZiAoSVNfRVJSKHNndCkpIHsKKwkJCXJldCA9IFBUUl9FUlIoc2d0KTsKKwkJCWdvdG8g
ZXJyX3VucGluOworCQl9CisJCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYp
KQorCQkJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhhdHRhY2gtPmRtYWJ1Zi0+cmVzdik7CisJ
CWF0dGFjaC0+c2d0ID0gc2d0OworCQlhdHRhY2gtPmRpciA9IERNQV9CSURJUkVDVElPTkFMOwor
CX0KKwogCXJldHVybiBhdHRhY2g7CiAKIGVycl9hdHRhY2g6CiAJa2ZyZWUoYXR0YWNoKTsKIAlt
dXRleF91bmxvY2soJmRtYWJ1Zi0+bG9jayk7CiAJcmV0dXJuIEVSUl9QVFIocmV0KTsKKworZXJy
X3VucGluOgorCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYpKQorCQlkbWFf
YnVmX3VucGluKGF0dGFjaCk7CisKK2Vycl91bmxvY2s6CisJaWYgKGRtYV9idWZfaXNfZHluYW1p
YyhhdHRhY2gtPmRtYWJ1ZikpCisJCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYXR0YWNoLT5k
bWFidWYtPnJlc3YpOworCisJZG1hX2J1Zl9kZXRhY2goZG1hYnVmLCBhdHRhY2gpOworCXJldHVy
biBFUlJfUFRSKHJldCk7Cit9CitFWFBPUlRfU1lNQk9MX0dQTChkbWFfYnVmX2R5bmFtaWNfYXR0
YWNoKTsKKworLyoqCisgKiBkbWFfYnVmX2F0dGFjaCAtIFdyYXBwZXIgZm9yIGRtYV9idWZfZHlu
YW1pY19hdHRhY2gKKyAqIEBkbWFidWY6CVtpbl0JYnVmZmVyIHRvIGF0dGFjaCBkZXZpY2UgdG8u
CisgKiBAZGV2OglbaW5dCWRldmljZSB0byBiZSBhdHRhY2hlZC4KKyAqCisgKiBXcmFwcGVyIHRv
IGNhbGwgZG1hX2J1Zl9keW5hbWljX2F0dGFjaCgpIGZvciBkcml2ZXJzIHdoaWNoIHN0aWxsIHVz
ZSBhIHN0YXRpYworICogbWFwcGluZy4KKyAqLworc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAq
ZG1hX2J1Zl9hdHRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKKwkJCQkJICBzdHJ1Y3QgZGV2
aWNlICpkZXYpCit7CisJcmV0dXJuIGRtYV9idWZfZHluYW1pY19hdHRhY2goZG1hYnVmLCBkZXYs
IE5VTEwsIE5VTEwpOwogfQogRVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl9hdHRhY2gpOwogCkBA
IC03MTcsMTEgKzc4MiwyMiBAQCB2b2lkIGRtYV9idWZfZGV0YWNoKHN0cnVjdCBkbWFfYnVmICpk
bWFidWYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCkKIAlpZiAoV0FSTl9PTigh
ZG1hYnVmIHx8ICFhdHRhY2gpKQogCQlyZXR1cm47CiAKLQlpZiAoYXR0YWNoLT5zZ3QpCisJaWYg
KGF0dGFjaC0+c2d0KSB7CisJCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5kbWFidWYp
KQorCQkJcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2soYXR0YWNoLT5kbWFidWYtPnJlc3YsIE5VTEwp
OworCiAJCWRtYWJ1Zi0+b3BzLT51bm1hcF9kbWFfYnVmKGF0dGFjaCwgYXR0YWNoLT5zZ3QsIGF0
dGFjaC0+ZGlyKTsKIAorCQlpZiAoZG1hX2J1Zl9pc19keW5hbWljKGF0dGFjaC0+ZG1hYnVmKSkg
eworCQkJZG1hX2J1Zl91bnBpbihhdHRhY2gpOworCQkJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9j
ayhhdHRhY2gtPmRtYWJ1Zi0+cmVzdik7CisJCX0KKwl9CisKIAltdXRleF9sb2NrKCZkbWFidWYt
PmxvY2spOworCXJlc2VydmF0aW9uX29iamVjdF9sb2NrKGRtYWJ1Zi0+cmVzdiwgTlVMTCk7CiAJ
bGlzdF9kZWwoJmF0dGFjaC0+bm9kZSk7CisJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhkbWFi
dWYtPnJlc3YpOwogCWlmIChkbWFidWYtPm9wcy0+ZGV0YWNoKQogCQlkbWFidWYtPm9wcy0+ZGV0
YWNoKGRtYWJ1ZiwgYXR0YWNoKTsKIApAQCAtNzMwLDYgKzgwNiw0NCBAQCB2b2lkIGRtYV9idWZf
ZGV0YWNoKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQg
KmF0dGFjaCkKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfZGV0YWNoKTsKIAorLyoqCisg
KiBkbWFfYnVmX3BpbiAtIExvY2sgZG93biB0aGUgRE1BLWJ1ZgorICoKKyAqIEBhdHRhY2g6CVtp
bl0JYXR0YWNobWVudCB3aGljaCBzaG91bGQgYmUgcGlubmVkCisgKgorICogUmV0dXJuczoKKyAq
IDAgb24gc3VjY2VzcywgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQg
ZG1hX2J1Zl9waW4oc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoKQoreworCXN0cnVj
dCBkbWFfYnVmICpkbWFidWYgPSBhdHRhY2gtPmRtYWJ1ZjsKKwlpbnQgcmV0ID0gMDsKKworCXJl
c2VydmF0aW9uX29iamVjdF9hc3NlcnRfaGVsZChkbWFidWYtPnJlc3YpOworCisJaWYgKGRtYWJ1
Zi0+b3BzLT5waW4pCisJCXJldCA9IGRtYWJ1Zi0+b3BzLT5waW4oYXR0YWNoKTsKKworCXJldHVy
biByZXQ7Cit9CitFWFBPUlRfU1lNQk9MX0dQTChkbWFfYnVmX3Bpbik7CisKKy8qKgorICogZG1h
X2J1Zl91bnBpbiAtIFJlbW92ZSBsb2NrIGZyb20gRE1BLWJ1ZgorICoKKyAqIEBhdHRhY2g6CVtp
bl0JYXR0YWNobWVudCB3aGljaCBzaG91bGQgYmUgdW5waW5uZWQKKyAqLwordm9pZCBkbWFfYnVm
X3VucGluKHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCkKK3sKKwlzdHJ1Y3QgZG1h
X2J1ZiAqZG1hYnVmID0gYXR0YWNoLT5kbWFidWY7CisKKwlyZXNlcnZhdGlvbl9vYmplY3RfYXNz
ZXJ0X2hlbGQoZG1hYnVmLT5yZXN2KTsKKworCWlmIChkbWFidWYtPm9wcy0+dW5waW4pCisJCWRt
YWJ1Zi0+b3BzLT51bnBpbihhdHRhY2gpOworfQorRVhQT1JUX1NZTUJPTF9HUEwoZG1hX2J1Zl91
bnBpbik7CisKIC8qKgogICogZG1hX2J1Zl9tYXBfYXR0YWNobWVudCAtIFJldHVybnMgdGhlIHNj
YXR0ZXJsaXN0IHRhYmxlIG9mIHRoZSBhdHRhY2htZW50OwogICogbWFwcGVkIGludG8gX2Rldmlj
ZV8gYWRkcmVzcyBzcGFjZS4gSXMgYSB3cmFwcGVyIGZvciBtYXBfZG1hX2J1ZigpIG9mIHRoZQpA
QCAtNzQ5LDYgKzg2Myw3IEBAIHN0cnVjdCBzZ190YWJsZSAqZG1hX2J1Zl9tYXBfYXR0YWNobWVu
dChzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsCiAJCQkJCWVudW0gZG1hX2RhdGFf
ZGlyZWN0aW9uIGRpcmVjdGlvbikKIHsKIAlzdHJ1Y3Qgc2dfdGFibGUgKnNnX3RhYmxlOworCWlu
dCByOwogCiAJbWlnaHRfc2xlZXAoKTsKIApAQCAtNzY3LDEwICs4ODIsMzEgQEAgc3RydWN0IHNn
X3RhYmxlICpkbWFfYnVmX21hcF9hdHRhY2htZW50KHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQg
KmF0dGFjaCwKIAkJcmV0dXJuIGF0dGFjaC0+c2d0OwogCX0KIAorCWlmIChkbWFfYnVmX2F0dGFj
aG1lbnRfaXNfZHluYW1pYyhhdHRhY2gpKSB7CisJCXJlc2VydmF0aW9uX29iamVjdF9hc3NlcnRf
aGVsZChhdHRhY2gtPmRtYWJ1Zi0+cmVzdik7CisKKwl9IGVsc2UgaWYgKGRtYV9idWZfaXNfZHlu
YW1pYyhhdHRhY2gtPmRtYWJ1ZikpIHsKKwkJcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2soYXR0YWNo
LT5kbWFidWYtPnJlc3YsIE5VTEwpOworCQlyID0gZG1hX2J1Zl9waW4oYXR0YWNoKTsKKwkJaWYg
KHIpIHsKKwkJCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYXR0YWNoLT5kbWFidWYtPnJlc3Yp
OworCQkJcmV0dXJuIEVSUl9QVFIocik7CisJCX0KKwl9IGVsc2UgeworCQltaWdodF9sb2NrKCZh
dHRhY2gtPmRtYWJ1Zi0+cmVzdi0+bG9jay5iYXNlKTsKKwl9CisKIAlzZ190YWJsZSA9IGF0dGFj
aC0+ZG1hYnVmLT5vcHMtPm1hcF9kbWFfYnVmKGF0dGFjaCwgZGlyZWN0aW9uKTsKIAlpZiAoIXNn
X3RhYmxlKQogCQlzZ190YWJsZSA9IEVSUl9QVFIoLUVOT01FTSk7CiAKKwlpZiAoIWRtYV9idWZf
YXR0YWNobWVudF9pc19keW5hbWljKGF0dGFjaCkgJiYKKwkgICAgZG1hX2J1Zl9pc19keW5hbWlj
KGF0dGFjaC0+ZG1hYnVmKSkgeworCQlpZiAoSVNfRVJSKHNnX3RhYmxlKSkKKwkJCWRtYV9idWZf
dW5waW4oYXR0YWNoKTsKKwkJcmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhhdHRhY2gtPmRtYWJ1
Zi0+cmVzdik7CisJfQorCiAJaWYgKCFJU19FUlIoc2dfdGFibGUpICYmIGF0dGFjaC0+ZG1hYnVm
LT5vcHMtPmNhY2hlX3NndF9tYXBwaW5nKSB7CiAJCWF0dGFjaC0+c2d0ID0gc2dfdGFibGU7CiAJ
CWF0dGFjaC0+ZGlyID0gZGlyZWN0aW9uOwpAQCAtODAyLDEwICs5MzgsNDMgQEAgdm9pZCBkbWFf
YnVmX3VubWFwX2F0dGFjaG1lbnQoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoLAog
CWlmIChhdHRhY2gtPnNndCA9PSBzZ190YWJsZSkKIAkJcmV0dXJuOwogCisJaWYgKGRtYV9idWZf
YXR0YWNobWVudF9pc19keW5hbWljKGF0dGFjaCkpCisJCXJlc2VydmF0aW9uX29iamVjdF9hc3Nl
cnRfaGVsZChhdHRhY2gtPmRtYWJ1Zi0+cmVzdik7CisJZWxzZSBpZiAoZG1hX2J1Zl9pc19keW5h
bWljKGF0dGFjaC0+ZG1hYnVmKSkKKwkJcmVzZXJ2YXRpb25fb2JqZWN0X2xvY2soYXR0YWNoLT5k
bWFidWYtPnJlc3YsIE5VTEwpOworCWVsc2UKKwkJbWlnaHRfbG9jaygmYXR0YWNoLT5kbWFidWYt
PnJlc3YtPmxvY2suYmFzZSk7CisKIAlhdHRhY2gtPmRtYWJ1Zi0+b3BzLT51bm1hcF9kbWFfYnVm
KGF0dGFjaCwgc2dfdGFibGUsIGRpcmVjdGlvbik7CisKKwlpZiAoZG1hX2J1Zl9pc19keW5hbWlj
KGF0dGFjaC0+ZG1hYnVmKSAmJgorCSAgICAhZG1hX2J1Zl9hdHRhY2htZW50X2lzX2R5bmFtaWMo
YXR0YWNoKSkgeworCQlkbWFfYnVmX3VucGluKGF0dGFjaCk7CisJCXJlc2VydmF0aW9uX29iamVj
dF91bmxvY2soYXR0YWNoLT5kbWFidWYtPnJlc3YpOworCX0KIH0KIEVYUE9SVF9TWU1CT0xfR1BM
KGRtYV9idWZfdW5tYXBfYXR0YWNobWVudCk7CiAKKy8qKgorICogZG1hX2J1Zl9tb3ZlX25vdGlm
eSAtIG5vdGlmeSBhdHRhY2htZW50cyB0aGF0IERNQS1idWYgaXMgbW92aW5nCisgKgorICogQGRt
YWJ1ZjoJW2luXQlidWZmZXIgd2hpY2ggaXMgbW92aW5nCisgKgorICogSW5mb3JtcyBhbGwgYXR0
YWNobWVuc3QgdGhhdCB0aGV5IG5lZWQgdG8gZGVzdHJveSBhbmQgcmVjcmVhdGVkIGFsbCB0aGVp
cgorICogbWFwcGluZ3MuCisgKi8KK3ZvaWQgZG1hX2J1Zl9tb3ZlX25vdGlmeShzdHJ1Y3QgZG1h
X2J1ZiAqZG1hYnVmKQoreworCXN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaDsKKwor
CXJlc2VydmF0aW9uX29iamVjdF9hc3NlcnRfaGVsZChkbWFidWYtPnJlc3YpOworCisJbGlzdF9m
b3JfZWFjaF9lbnRyeShhdHRhY2gsICZkbWFidWYtPmF0dGFjaG1lbnRzLCBub2RlKQorCQlpZiAo
YXR0YWNoLT5pbXBvcnRlcl9vcHMgJiYgYXR0YWNoLT5pbXBvcnRlcl9vcHMtPm1vdmVfbm90aWZ5
KQorCQkJYXR0YWNoLT5pbXBvcnRlcl9vcHMtPm1vdmVfbm90aWZ5KGF0dGFjaCk7Cit9CitFWFBP
UlRfU1lNQk9MX0dQTChkbWFfYnVmX21vdmVfbm90aWZ5KTsKKwogLyoqCiAgKiBET0M6IGNwdSBh
Y2Nlc3MKICAqCkBAIC0xMjI1LDEwICsxMzk0LDEyIEBAIHN0YXRpYyBpbnQgZG1hX2J1Zl9kZWJ1
Z19zaG93KHN0cnVjdCBzZXFfZmlsZSAqcywgdm9pZCAqdW51c2VkKQogCQlzZXFfcHV0cyhzLCAi
XHRBdHRhY2hlZCBEZXZpY2VzOlxuIik7CiAJCWF0dGFjaF9jb3VudCA9IDA7CiAKKwkJcmVzZXJ2
YXRpb25fb2JqZWN0X2xvY2soYnVmX29iai0+cmVzdiwgTlVMTCk7CiAJCWxpc3RfZm9yX2VhY2hf
ZW50cnkoYXR0YWNoX29iaiwgJmJ1Zl9vYmotPmF0dGFjaG1lbnRzLCBub2RlKSB7CiAJCQlzZXFf
cHJpbnRmKHMsICJcdCVzXG4iLCBkZXZfbmFtZShhdHRhY2hfb2JqLT5kZXYpKTsKIAkJCWF0dGFj
aF9jb3VudCsrOwogCQl9CisJCXJlc2VydmF0aW9uX29iamVjdF91bmxvY2soYnVmX29iai0+cmVz
dik7CiAKIAkJc2VxX3ByaW50ZihzLCAiVG90YWwgJWQgZGV2aWNlcyBhdHRhY2hlZFxuXG4iLAog
CQkJCWF0dGFjaF9jb3VudCk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaCBi
L2luY2x1ZGUvbGludXgvZG1hLWJ1Zi5oCmluZGV4IDAxYWQ1Yjk0MmE2Zi4uY2NhZDJmYzFmNjQw
IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaAorKysgYi9pbmNsdWRlL2xpbnV4
L2RtYS1idWYuaApAQCAtOTIsMTQgKzkyLDQwIEBAIHN0cnVjdCBkbWFfYnVmX29wcyB7CiAJICov
CiAJdm9pZCAoKmRldGFjaCkoc3RydWN0IGRtYV9idWYgKiwgc3RydWN0IGRtYV9idWZfYXR0YWNo
bWVudCAqKTsKIAorCS8qKgorCSAqIEBwaW46CisJICoKKwkgKiBUaGlzIGlzIGNhbGxlZCBieSBk
bWFfYnVmX3BpbiBhbmQgbGV0cyB0aGUgZXhwb3J0ZXIga25vdyB0aGF0IHRoZQorCSAqIERNQS1i
dWYgY2FuJ3QgYmUgbW92ZWQgYW55IG1vcmUuCisJICoKKwkgKiBUaGlzIGlzIGNhbGxlZCB3aXRo
IHRoZSBkbWFidWYtPnJlc3Ygb2JqZWN0IGxvY2tlZC4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sg
aXMgb3B0aW9uYWwuCisJICoKKwkgKiBSZXR1cm5zOgorCSAqCisJICogMCBvbiBzdWNjZXNzLCBu
ZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisJICovCisJaW50ICgqcGluKShzdHJ1Y3Qg
ZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gpOworCisJLyoqCisJICogQHVucGluOgorCSAqCisJ
ICogVGhpcyBpcyBjYWxsZWQgYnkgZG1hX2J1Zl91bnBpbiBhbmQgbGV0cyB0aGUgZXhwb3J0ZXIg
a25vdyB0aGF0IHRoZQorCSAqIERNQS1idWYgY2FuIGJlIG1vdmVkIGFnYWluLgorCSAqCisJICog
VGhpcyBpcyBjYWxsZWQgd2l0aCB0aGUgZG1hYnVmLT5yZXN2IG9iamVjdCBsb2NrZWQuCisJICoK
KwkgKiBUaGlzIGNhbGxiYWNrIGlzIG9wdGlvbmFsLgorCSAqLworCXZvaWQgKCp1bnBpbikoc3Ry
dWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoKTsKKwogCS8qKgogCSAqIEBtYXBfZG1hX2J1
ZjoKIAkgKgogCSAqIFRoaXMgaXMgY2FsbGVkIGJ5IGRtYV9idWZfbWFwX2F0dGFjaG1lbnQoKSBh
bmQgaXMgdXNlZCB0byBtYXAgYQogCSAqIHNoYXJlZCAmZG1hX2J1ZiBpbnRvIGRldmljZSBhZGRy
ZXNzIHNwYWNlLCBhbmQgaXQgaXMgbWFuZGF0b3J5LiBJdAotCSAqIGNhbiBvbmx5IGJlIGNhbGxl
ZCBpZiBAYXR0YWNoIGhhcyBiZWVuIGNhbGxlZCBzdWNjZXNzZnVsbHkuIFRoaXMKLQkgKiBlc3Nl
bnRpYWxseSBwaW5zIHRoZSBETUEgYnVmZmVyIGludG8gcGxhY2UsIGFuZCBpdCBjYW5ub3QgYmUg
bW92ZWQKLQkgKiBhbnkgbW9yZQorCSAqIGNhbiBvbmx5IGJlIGNhbGxlZCBpZiBAYXR0YWNoIGhh
cyBiZWVuIGNhbGxlZCBzdWNjZXNzZnVsbHkuCiAJICoKIAkgKiBUaGlzIGNhbGwgbWF5IHNsZWVw
LCBlLmcuIHdoZW4gdGhlIGJhY2tpbmcgc3RvcmFnZSBmaXJzdCBuZWVkcyB0byBiZQogCSAqIGFs
bG9jYXRlZCwgb3IgbW92ZWQgdG8gYSBsb2NhdGlvbiBzdWl0YWJsZSBmb3IgYWxsIGN1cnJlbnRs
eSBhdHRhY2hlZApAQCAtMTIwLDYgKzE0Niw5IEBAIHN0cnVjdCBkbWFfYnVmX29wcyB7CiAJICog
YW55IG90aGVyIGtpbmQgb2Ygc2hhcmluZyB0aGF0IHRoZSBleHBvcnRlciBtaWdodCB3aXNoIHRv
IG1ha2UKIAkgKiBhdmFpbGFibGUgdG8gYnVmZmVyLXVzZXJzLgogCSAqCisJICogVGhpcyBpcyBh
bHdheXMgY2FsbGVkIHdpdGggdGhlIGRtYWJ1Zi0+cmVzdiBvYmplY3QgbG9ja2VkIHdoZW4KKwkg
KiB0aGUgcGluL3VucGluIGNhbGxiYWNrcyBhcmUgaW1wbGVtZW50ZWQuCisJICoKIAkgKiBSZXR1
cm5zOgogCSAqCiAJICogQSAmc2dfdGFibGUgc2NhdHRlciBsaXN0IG9mIG9yIHRoZSBiYWNraW5n
IHN0b3JhZ2Ugb2YgdGhlIERNQSBidWZmZXIsCkBAIC0xMzcsOSArMTY2LDYgQEAgc3RydWN0IGRt
YV9idWZfb3BzIHsKIAkgKgogCSAqIFRoaXMgaXMgY2FsbGVkIGJ5IGRtYV9idWZfdW5tYXBfYXR0
YWNobWVudCgpIGFuZCBzaG91bGQgdW5tYXAgYW5kCiAJICogcmVsZWFzZSB0aGUgJnNnX3RhYmxl
IGFsbG9jYXRlZCBpbiBAbWFwX2RtYV9idWYsIGFuZCBpdCBpcyBtYW5kYXRvcnkuCi0JICogSXQg
c2hvdWxkIGFsc28gdW5waW4gdGhlIGJhY2tpbmcgc3RvcmFnZSBpZiB0aGlzIGlzIHRoZSBsYXN0
IG1hcHBpbmcKLQkgKiBvZiB0aGUgRE1BIGJ1ZmZlciwgaXQgdGhlIGV4cG9ydGVyIHN1cHBvcnRz
IGJhY2tpbmcgc3RvcmFnZQotCSAqIG1pZ3JhdGlvbi4KIAkgKi8KIAl2b2lkICgqdW5tYXBfZG1h
X2J1Zikoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqLAogCQkJICAgICAgc3RydWN0IHNnX3Rh
YmxlICosCkBAIC0zMzAsNiArMzU2LDM0IEBAIHN0cnVjdCBkbWFfYnVmIHsKIAl9IGNiX2V4Y2ws
IGNiX3NoYXJlZDsKIH07CiAKKy8qKgorICogc3RydWN0IGRtYV9idWZfYXR0YWNoX29wcyAtIGlt
cG9ydGVyIG9wZXJhdGlvbnMgZm9yIGFuIGF0dGFjaG1lbnQKKyAqIEBtb3ZlX25vdGlmeTogW29w
dGlvbmFsXSBub3RpZmljYXRpb24gdGhhdCB0aGUgRE1BLWJ1ZiBpcyBtb3ZpbmcKKyAqCisgKiBB
dHRhY2htZW50IG9wZXJhdGlvbnMgaW1wbGVtZW50ZWQgYnkgdGhlIGltcG9ydGVyLgorICovCitz
dHJ1Y3QgZG1hX2J1Zl9hdHRhY2hfb3BzIHsKKwkvKioKKwkgKiBAbW92ZV9ub3RpZnkKKwkgKgor
CSAqIElmIHRoaXMgY2FsbGJhY2sgaXMgcHJvdmlkZWQgdGhlIGZyYW1ld29yayBjYW4gYXZvaWQg
cGlubmluZyB0aGUKKwkgKiBiYWNraW5nIHN0b3JlIHdoaWxlIG1hcHBpbmdzIGV4aXN0cy4KKwkg
KgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgY2FsbGVkIHdpdGggdGhlIGxvY2sgb2YgdGhlIHJlc2Vy
dmF0aW9uIG9iamVjdAorCSAqIGFzc29jaWF0ZWQgd2l0aCB0aGUgZG1hX2J1ZiBoZWxkIGFuZCB0
aGUgbWFwcGluZyBmdW5jdGlvbiBtdXN0IGJlCisJICogY2FsbGVkIHdpdGggdGhpcyBsb2NrIGhl
bGQgYXMgd2VsbC4gVGhpcyBtYWtlcyBzdXJlIHRoYXQgbm8gbWFwcGluZworCSAqIGlzIGNyZWF0
ZWQgY29uY3VycmVudGx5IHdpdGggYW4gb25nb2luZyBtb3ZlIG9wZXJhdGlvbi4KKwkgKgorCSAq
IE1hcHBpbmdzIHN0YXkgdmFsaWQgYW5kIGFyZSBub3QgZGlyZWN0bHkgYWZmZWN0ZWQgYnkgdGhp
cyBjYWxsYmFjay4KKwkgKiBCdXQgdGhlIERNQS1idWYgY2FuIG5vdyBiZSBpbiBhIGRpZmZlcmVu
dCBwaHlzaWNhbCBsb2NhdGlvbiwgc28gYWxsCisJICogbWFwcGluZ3Mgc2hvdWxkIGJlIGRlc3Ry
b3llZCBhbmQgcmUtY3JlYXRlZCBhcyBzb29uIGFzIHBvc3NpYmxlLgorCSAqCisJICogTmV3IG1h
cHBpbmdzIGNhbiBiZSBjcmVhdGVkIGFmdGVyIHRoaXMgY2FsbGJhY2sgcmV0dXJucywgYW5kIHdp
bGwKKwkgKiBwb2ludCB0byB0aGUgbmV3IGxvY2F0aW9uIG9mIHRoZSBETUEtYnVmLgorCSAqLwor
CXZvaWQgKCptb3ZlX25vdGlmeSkoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoKTsK
K307CisKIC8qKgogICogc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAtIGhvbGRzIGRldmljZS1i
dWZmZXIgYXR0YWNobWVudCBkYXRhCiAgKiBAZG1hYnVmOiBidWZmZXIgZm9yIHRoaXMgYXR0YWNo
bWVudC4KQEAgLTMzOCw2ICszOTIsOCBAQCBzdHJ1Y3QgZG1hX2J1ZiB7CiAgKiBAc2d0OiBjYWNo
ZWQgbWFwcGluZy4KICAqIEBkaXI6IGRpcmVjdGlvbiBvZiBjYWNoZWQgbWFwcGluZy4KICAqIEBw
cml2OiBleHBvcnRlciBzcGVjaWZpYyBhdHRhY2htZW50IGRhdGEuCisgKiBAaW1wb3J0ZXJfb3Bz
OiBpbXBvcnRlciBvcGVyYXRpb25zIGZvciB0aGlzIGF0dGFjaG1lbnQuCisgKiBAaW1wb3J0ZXJf
cHJpdjogaW1wb3J0ZXIgc3BlY2lmaWMgYXR0YWNobWVudCBkYXRhLgogICoKICAqIFRoaXMgc3Ry
dWN0dXJlIGhvbGRzIHRoZSBhdHRhY2htZW50IGluZm9ybWF0aW9uIGJldHdlZW4gdGhlIGRtYV9i
dWYgYnVmZmVyCiAgKiBhbmQgaXRzIHVzZXIgZGV2aWNlKHMpLiBUaGUgbGlzdCBjb250YWlucyBv
bmUgYXR0YWNobWVudCBzdHJ1Y3QgcGVyIGRldmljZQpAQCAtMzU1LDYgKzQxMSw5IEBAIHN0cnVj
dCBkbWFfYnVmX2F0dGFjaG1lbnQgewogCXN0cnVjdCBzZ190YWJsZSAqc2d0OwogCWVudW0gZG1h
X2RhdGFfZGlyZWN0aW9uIGRpcjsKIAl2b2lkICpwcml2OworCisJY29uc3Qgc3RydWN0IGRtYV9i
dWZfYXR0YWNoX29wcyAqaW1wb3J0ZXJfb3BzOworCXZvaWQgKmltcG9ydGVyX3ByaXY7CiB9Owog
CiAvKioKQEAgLTQwNSwxMCArNDY0LDQyIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBnZXRfZG1hX2J1
ZihzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmKQogCWdldF9maWxlKGRtYWJ1Zi0+ZmlsZSk7CiB9CiAK
Ky8qKgorICogZG1hX2J1Zl9pc19keW5hbWljIC0gY2hlY2sgaWYgYSBETUEtYnVmIHVzZXMgZHlu
YW1pYyBtYXBwaW5ncy4KKyAqIEBkbWFidWY6IHRoZSBETUEtYnVmIHRvIGNoZWNrCisgKgorICog
UmV0dXJucyB0cnVlIGlmIGEgRE1BLWJ1ZiBleHBvcnRlciB3YW50cyB0byBjcmVhdGUgZHluYW1p
YyBzZyB0YWJsZSBtYXBwaW5ncworICogZm9yIGVhY2ggYXR0YWNobWVudC4gRmFsc2UgaWYgb25s
eSBhIHNpbmdsZSBzdGF0aWMgc2cgdGFibGUgc2hvdWxkIGJlIHVzZWQuCisgKi8KK3N0YXRpYyBp
bmxpbmUgYm9vbCBkbWFfYnVmX2lzX2R5bmFtaWMoc3RydWN0IGRtYV9idWYgKmRtYWJ1ZikKK3sK
KwlyZXR1cm4gISFkbWFidWYtPm9wcy0+cGluOworfQorCisvKioKKyAqIGRtYV9idWZfYXR0YWNo
bWVudF9pc19keW5hbWljIC0gY2hlY2sgaWYgYSBETUEtYnVmIGF0dGFjaG1lbnQgdXNlcyBkeW5h
bWljCisgKiBtYXBwaW5zZworICogQGF0dGFjaDogdGhlIERNQS1idWYgYXR0YWNobWVudCB0byBj
aGVjaworICoKKyAqIFJldHVybnMgdHJ1ZSBpZiBhIERNQS1idWYgaW1wb3J0ZXIgd2FudHMgdG8g
dXNlIGR5bmFtaWMgc2cgdGFibGUgbWFwcGluZ3MgYW5kCisgKiBjYWxscyB0aGUgbWFwL3VubWFw
IGZ1bmN0aW9ucyB3aXRoIHRoZSByZXNlcnZhdGlvbiBvYmplY3QgbG9ja2VkLgorICovCitzdGF0
aWMgaW5saW5lIGJvb2wKK2RtYV9idWZfYXR0YWNobWVudF9pc19keW5hbWljKHN0cnVjdCBkbWFf
YnVmX2F0dGFjaG1lbnQgKmF0dGFjaCkKK3sKKwlyZXR1cm4gYXR0YWNoLT5pbXBvcnRlcl9vcHMg
JiYgYXR0YWNoLT5pbXBvcnRlcl9vcHMtPm1vdmVfbm90aWZ5OworfQorCiBzdHJ1Y3QgZG1hX2J1
Zl9hdHRhY2htZW50ICpkbWFfYnVmX2F0dGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAotCQkJ
CQkJCXN0cnVjdCBkZXZpY2UgKmRldik7CisJCQkJCSAgc3RydWN0IGRldmljZSAqZGV2KTsKK3N0
cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKgorZG1hX2J1Zl9keW5hbWljX2F0dGFjaChzdHJ1Y3Qg
ZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCSAgICAgICBjb25zdCBzdHJ1
Y3QgZG1hX2J1Zl9hdHRhY2hfb3BzICppbXBvcnRlcl9vcHMsCisJCSAgICAgICB2b2lkICppbXBv
cnRlcl9wcml2KTsKIHZvaWQgZG1hX2J1Zl9kZXRhY2goc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwK
LQkJCQlzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICpkbWFidWZfYXR0YWNoKTsKKwkJICAgIHN0
cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCk7CitpbnQgZG1hX2J1Zl9waW4oc3RydWN0
IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoKTsKK3ZvaWQgZG1hX2J1Zl91bnBpbihzdHJ1Y3Qg
ZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gpOwogCiBzdHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1Zl9l
eHBvcnQoY29uc3Qgc3RydWN0IGRtYV9idWZfZXhwb3J0X2luZm8gKmV4cF9pbmZvKTsKIApAQCAt
NDIwLDYgKzUxMSw3IEBAIHN0cnVjdCBzZ190YWJsZSAqZG1hX2J1Zl9tYXBfYXR0YWNobWVudChz
dHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICosCiAJCQkJCWVudW0gZG1hX2RhdGFfZGlyZWN0aW9u
KTsKIHZvaWQgZG1hX2J1Zl91bm1hcF9hdHRhY2htZW50KHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1l
bnQgKiwgc3RydWN0IHNnX3RhYmxlICosCiAJCQkJZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24pOwor
dm9pZCBkbWFfYnVmX21vdmVfbm90aWZ5KHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmKTsKIGludCBk
bWFfYnVmX2JlZ2luX2NwdV9hY2Nlc3Moc3RydWN0IGRtYV9idWYgKmRtYV9idWYsCiAJCQkgICAg
IGVudW0gZG1hX2RhdGFfZGlyZWN0aW9uIGRpcik7CiBpbnQgZG1hX2J1Zl9lbmRfY3B1X2FjY2Vz
cyhzdHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1ZiwKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmkt
ZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
