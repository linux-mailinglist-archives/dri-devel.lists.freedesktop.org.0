Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 079ABBF23C
	for <lists+dri-devel@lfdr.de>; Thu, 26 Sep 2019 13:56:12 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 203746ECDD;
	Thu, 26 Sep 2019 11:56:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from pio-pvt-msa3.bahnhof.se (pio-pvt-msa3.bahnhof.se [79.136.2.42])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5DF006ECDC
 for <dri-devel@lists.freedesktop.org>; Thu, 26 Sep 2019 11:56:07 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by pio-pvt-msa3.bahnhof.se (Postfix) with ESMTP id 8F5833F462;
 Thu, 26 Sep 2019 13:56:00 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from pio-pvt-msa3.bahnhof.se ([127.0.0.1])
 by localhost (pio-pvt-msa3.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id NHyu-C_qCOHF; Thu, 26 Sep 2019 13:55:59 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by pio-pvt-msa3.bahnhof.se (Postfix) with ESMTPA id 9626B3F35F;
 Thu, 26 Sep 2019 13:55:56 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 13066360326;
 Thu, 26 Sep 2019 13:55:56 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org
Subject: [PATCH v2 1/5] mm: Add write-protect and clean utilities for address
 space ranges
Date: Thu, 26 Sep 2019 13:55:44 +0200
Message-Id: <20190926115548.44000-2-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190926115548.44000-1-thomas_os@shipmail.org>
References: <20190926115548.44000-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1569498956; bh=U5UjacT9/k9u4Vuw2xnuvWtQaYGbh1vf6MThHFI0WJo=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=sQz6UIUVhle+6yuGi17Qh6yjrDeOOizLoJ7q586cw+9pv2eA+Uam8ZW69JBPBz5FO
 gS2w7r0ZbS8S6bmEhfDHM3ouRkbGMynk8AP8ZM493u5vJWlAMPe6fAbLN4uzvanbdm
 s1CK/kJvHg+kUFgYkK0LA5dXW7YFN5bdtdvG7bxQ=
X-Mailman-Original-Authentication-Results: pio-pvt-msa3.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b=sQz6UIUV; 
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 Ralph Campbell <rcampbell@nvidia.com>, Matthew Wilcox <willy@infradead.org>,
 Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKQWRkIHR3byB1
dGlsaXRpZXMgdG8gYSkgd3JpdGUtcHJvdGVjdCBhbmQgYikgY2xlYW4gYWxsIHB0ZXMgcG9pbnRp
bmcgaW50bwphIHJhbmdlIG9mIGFuIGFkZHJlc3Mgc3BhY2UuClRoZSB1dGlsaXRpZXMgYXJlIGlu
dGVuZGVkIHRvIGFpZCBpbiB0cmFja2luZyBkaXJ0eSBwYWdlcyAoZWl0aGVyCmRyaXZlci1hbGxv
Y2F0ZWQgc3lzdGVtIG1lbW9yeSBvciBwY2kgZGV2aWNlIG1lbW9yeSkuClRoZSB3cml0ZS1wcm90
ZWN0IHV0aWxpdHkgc2hvdWxkIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aApwYWdlX21rd3Jp
dGUoKSBhbmQgcGZuX21rd3JpdGUoKSB0byB0cmlnZ2VyIHdyaXRlIHBhZ2UtZmF1bHRzIG9uIHBh
Z2UKYWNjZXNzZXMuIFR5cGljYWxseSBvbmUgd291bGQgd2FudCB0byB1c2UgdGhpcyBvbiBzcGFy
c2UgYWNjZXNzZXMgaW50bwpsYXJnZSBtZW1vcnkgcmVnaW9ucy4gVGhlIGNsZWFuIHV0aWxpdHkg
c2hvdWxkIGJlIHVzZWQgdG8gdXRpbGl6ZQpoYXJkd2FyZSBkaXJ0eWluZyBmdW5jdGlvbmFsaXR5
IGFuZCBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgcGFnZS1mYXVsdHMsCnR5cGljYWxseSBvbiBsYXJn
ZSBhY2Nlc3NlcyBpbnRvIHNtYWxsIG1lbW9yeSByZWdpb25zLgoKQ2M6IEFuZHJldyBNb3J0b24g
PGFrcG1AbGludXgtZm91bmRhdGlvbi5vcmc+CkNjOiBNYXR0aGV3IFdpbGNveCA8d2lsbHlAaW5m
cmFkZWFkLm9yZz4KQ2M6IFdpbGwgRGVhY29uIDx3aWxsLmRlYWNvbkBhcm0uY29tPgpDYzogUGV0
ZXIgWmlqbHN0cmEgPHBldGVyekBpbmZyYWRlYWQub3JnPgpDYzogUmlrIHZhbiBSaWVsIDxyaWVs
QHN1cnJpZWwuY29tPgpDYzogTWluY2hhbiBLaW0gPG1pbmNoYW5Aa2VybmVsLm9yZz4KQ2M6IE1p
Y2hhbCBIb2NrbyA8bWhvY2tvQHN1c2UuY29tPgpDYzogSHVhbmcgWWluZyA8eWluZy5odWFuZ0Bp
bnRlbC5jb20+CkNjOiBTb3VwdGljayBKb2FyZGVyIDxqcmRyLmxpbnV4QGdtYWlsLmNvbT4KQ2M6
ICJKw6lyw7RtZSBHbGlzc2UiIDxqZ2xpc3NlQHJlZGhhdC5jb20+CkNjOiBsaW51eC1tbUBrdmFj
ay5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcKClNpZ25lZC1vZmYtYnk6IFRo
b21hcyBIZWxsc3Ryb20gPHRoZWxsc3Ryb21Adm13YXJlLmNvbT4KUmV2aWV3ZWQtYnk6IFJhbHBo
IENhbXBiZWxsIDxyY2FtcGJlbGxAbnZpZGlhLmNvbT4KLS0tCiBpbmNsdWRlL2xpbnV4L21tLmgg
ICAgfCAgMTMgKy0KIG1tL0tjb25maWcgICAgICAgICAgICB8ICAgMyArCiBtbS9NYWtlZmlsZSAg
ICAgICAgICAgfCAgIDEgKwogbW0vYXNfZGlydHlfaGVscGVycy5jIHwgMzkyICsrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCA0MDggaW5z
ZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IG1tL2FzX2RpcnR5
X2hlbHBlcnMuYwoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvbW0uaCBiL2luY2x1ZGUvbGlu
dXgvbW0uaAppbmRleCAwMzM0Y2E5N2M1ODQuLjI3ZmYzNDFlY2JkYyAxMDA2NDQKLS0tIGEvaW5j
bHVkZS9saW51eC9tbS5oCisrKyBiL2luY2x1ZGUvbGludXgvbW0uaApAQCAtMjY1Nyw3ICsyNjU3
LDYgQEAgdHlwZWRlZiBpbnQgKCpwdGVfZm5fdCkocHRlX3QgKnB0ZSwgdW5zaWduZWQgbG9uZyBh
ZGRyLCB2b2lkICpkYXRhKTsKIGV4dGVybiBpbnQgYXBwbHlfdG9fcGFnZV9yYW5nZShzdHJ1Y3Qg
bW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyZXNzLAogCQkJICAgICAgIHVuc2lnbmVk
IGxvbmcgc2l6ZSwgcHRlX2ZuX3QgZm4sIHZvaWQgKmRhdGEpOwogCi0KICNpZmRlZiBDT05GSUdf
UEFHRV9QT0lTT05JTkcKIGV4dGVybiBib29sIHBhZ2VfcG9pc29uaW5nX2VuYWJsZWQodm9pZCk7
CiBleHRlcm4gdm9pZCBrZXJuZWxfcG9pc29uX3BhZ2VzKHN0cnVjdCBwYWdlICpwYWdlLCBpbnQg
bnVtcGFnZXMsIGludCBlbmFibGUpOwpAQCAtMjg5MSw1ICsyODkwLDE3IEBAIHZvaWQgX19pbml0
IHNldHVwX25yX25vZGVfaWRzKHZvaWQpOwogc3RhdGljIGlubGluZSB2b2lkIHNldHVwX25yX25v
ZGVfaWRzKHZvaWQpIHt9CiAjZW5kaWYKIAorI2lmZGVmIENPTkZJR19BU19ESVJUWV9IRUxQRVJT
Cit1bnNpZ25lZCBsb25nIGFwcGx5X2FzX2NsZWFuKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBw
aW5nLAorCQkJICAgICBwZ29mZl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5yLAorCQkJICAgICBw
Z29mZl90IGJpdG1hcF9wZ29mZiwKKwkJCSAgICAgdW5zaWduZWQgbG9uZyAqYml0bWFwLAorCQkJ
ICAgICBwZ29mZl90ICpzdGFydCwKKwkJCSAgICAgcGdvZmZfdCAqZW5kKTsKKwordW5zaWduZWQg
bG9uZyBhcHBseV9hc193cnByb3RlY3Qoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJ
CQkJIHBnb2ZmX3QgZmlyc3RfaW5kZXgsIHBnb2ZmX3QgbnIpOworI2VuZGlmCisKICNlbmRpZiAv
KiBfX0tFUk5FTF9fICovCiAjZW5kaWYgLyogX0xJTlVYX01NX0ggKi8KZGlmZiAtLWdpdCBhL21t
L0tjb25maWcgYi9tbS9LY29uZmlnCmluZGV4IDU2Y2VjNjM2YTFmYy4uNTk0MzUwZTlkNzhlIDEw
MDY0NAotLS0gYS9tbS9LY29uZmlnCisrKyBiL21tL0tjb25maWcKQEAgLTczNiw0ICs3MzYsNyBA
QCBjb25maWcgQVJDSF9IQVNfUFRFX1NQRUNJQUwKIGNvbmZpZyBBUkNIX0hBU19IVUdFUEQKIAli
b29sCiAKK2NvbmZpZyBBU19ESVJUWV9IRUxQRVJTCisgICAgICAgIGJvb2wKKwogZW5kbWVudQpk
aWZmIC0tZ2l0IGEvbW0vTWFrZWZpbGUgYi9tbS9NYWtlZmlsZQppbmRleCBkMGIyOTVjM2I3NjQu
LjQwODZmMWVlZmJjNiAxMDA2NDQKLS0tIGEvbW0vTWFrZWZpbGUKKysrIGIvbW0vTWFrZWZpbGUK
QEAgLTEwNSwzICsxMDUsNCBAQCBvYmotJChDT05GSUdfUEVSQ1BVX1NUQVRTKSArPSBwZXJjcHUt
c3RhdHMubwogb2JqLSQoQ09ORklHX1pPTkVfREVWSUNFKSArPSBtZW1yZW1hcC5vCiBvYmotJChD
T05GSUdfSE1NX01JUlJPUikgKz0gaG1tLm8KIG9iai0kKENPTkZJR19NRU1GRF9DUkVBVEUpICs9
IG1lbWZkLm8KK29iai0kKENPTkZJR19BU19ESVJUWV9IRUxQRVJTKSArPSBhc19kaXJ0eV9oZWxw
ZXJzLm8KZGlmZiAtLWdpdCBhL21tL2FzX2RpcnR5X2hlbHBlcnMuYyBiL21tL2FzX2RpcnR5X2hl
bHBlcnMuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmQ0Y2MzN2Rj
YjE0NAotLS0gL2Rldi9udWxsCisrKyBiL21tL2FzX2RpcnR5X2hlbHBlcnMuYwpAQCAtMCwwICsx
LDM5MiBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKyNpbmNsdWRlIDxs
aW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L21tX3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgv
aHVnZXRsYi5oPgorI2luY2x1ZGUgPGxpbnV4L2JpdG9wcy5oPgorI2luY2x1ZGUgPGxpbnV4L21t
dV9ub3RpZmllci5oPgorI2luY2x1ZGUgPGFzbS9jYWNoZWZsdXNoLmg+CisjaW5jbHVkZSA8YXNt
L3RsYmZsdXNoLmg+CisKKy8qKgorICogc3RydWN0IGFzX3dhbGsgLSBBcmd1bWVudCB0byBzdHJ1
Y3QgYXNfd2Fsa19vcHMgY2FsbGJhY2tzLgorICogQHZtYTogUG9pbnRlciB0byB0aGUgc3RydWN0
IHZtd19hcmVhX3N0cnVjdCBjdXJyZW50bHkgYmVpbmcgd2Fsa2VkLgorICoKKyAqIEVtYmVkZGFi
bGUgYXJndW1lbnQgdG8gc3RydWN0IGFzX3dhbGtfb3BzIGNhbGxiYWNrcy4KKyAqLworc3RydWN0
IGFzX3dhbGsgeworCXN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hOworfTsKKworLyoqCisgKiBz
dHJ1Y3QgYXNfd2Fsa19vcHMgLSBDYWxsYmFja3MgZm9yIGVudHJpZXMgb2YgdmFyaW91cyBwYWdl
IHRhYmxlIGxldmVscy4KKyAqIGV4dGVuZCBmb3IgYWRkaXRpb25hbCBsZXZlbCBzdXBwb3J0Lgor
ICovCitzdHJ1Y3QgYXNfd2Fsa19vcHMgeworCS8qKgorCSAqIHB0ZS1lbnRyeTogQ2FsbGJhY2sg
Zm9yIFBURXMKKwkgKiBAcHRlOiBQb2ludGVyIHRvIHRoZSBQVEUuCisJICogQGFkZHI6IFZpcnR1
YWwgYWRkcmVzcy4KKwkgKiBAYXN3OiBTdHJ1Y3QgYXNfd2FsayBhcmd1bWVudCBmb3IgdGhlIHdh
bGsuIEVtYmVkIGZvciBhZGRpdGlvbmFsCisJICogZGF0YS4KKwkgKi8KKwl2b2lkICgqY29uc3Qg
cHRlX2VudHJ5KSAocHRlX3QgKnB0ZSwgdW5zaWduZWQgbG9uZyBhZGRyLAorCQkJCSBzdHJ1Y3Qg
YXNfd2FsayAqYXN3KTsKK307CisKKy8qIFBhZ2Utd2Fsa2luZyBjb2RlICovCitzdGF0aWMgdm9p
ZCB3YWxrX2FzX3B0ZV9yYW5nZShwbWRfdCAqcG1kLCB1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2ln
bmVkIGxvbmcgZW5kLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzICpvcHMsCisJ
CQkgICAgICBzdHJ1Y3QgYXNfd2FsayAqYXN3KQoreworCXN0cnVjdCBtbV9zdHJ1Y3QgKm1tID0g
YXN3LT52bWEtPnZtX21tOworCXB0ZV90ICpwdGU7CisJc3BpbmxvY2tfdCAqcHRsOworCisJcHRl
ID0gKG1tID09ICZpbml0X21tKSA/CisJCXB0ZV9vZmZzZXRfa2VybmVsKHBtZCwgYWRkcikgOgor
CQlwdGVfb2Zmc2V0X21hcF9sb2NrKG1tLCBwbWQsIGFkZHIsICZwdGwpOworCisJYXJjaF9lbnRl
cl9sYXp5X21tdV9tb2RlKCk7CisKKwlkbyB7CisJCW9wcy0+cHRlX2VudHJ5KHB0ZSsrLCBhZGRy
LCBhc3cpOworCX0gd2hpbGUgKGFkZHIgKz0gUEFHRV9TSVpFLCBhZGRyICE9IGVuZCk7CisKKwlh
cmNoX2xlYXZlX2xhenlfbW11X21vZGUoKTsKKworCWlmIChtbSAhPSAmaW5pdF9tbSkKKwkJcHRl
X3VubWFwX3VubG9jayhwdGUgLSAxLCBwdGwpOworfQorCitzdGF0aWMgdm9pZCB3YWxrX2FzX3Bt
ZF9yYW5nZShwdWRfdCAqcHVkLCB1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgZW5k
LAorCQkJICAgICAgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzICpvcHMsCisJCQkgICAgICBzdHJ1
Y3QgYXNfd2FsayAqYXN3KQoreworCXBtZF90ICpwbWQgPSBwbWRfb2Zmc2V0KHB1ZCwgYWRkcik7
CisJdW5zaWduZWQgbG9uZyBuZXh0OworCisJZG8geworCQluZXh0ID0gcG1kX2FkZHJfZW5kKGFk
ZHIsIGVuZCk7CisJCWlmIChwbWRfbm9uZV9vcl9jbGVhcl9iYWQocG1kKSkKKwkJCWNvbnRpbnVl
OworCQlpZiAoV0FSTl9PTihwbWRfaHVnZSgqcG1kKSkpCisJCQljb250aW51ZTsKKwkJd2Fsa19h
c19wdGVfcmFuZ2UocG1kLCBhZGRyLCBuZXh0LCBvcHMsIGFzdyk7CisJfSB3aGlsZSAocG1kKyss
IGFkZHIgPSBuZXh0LCBhZGRyICE9IGVuZCk7Cit9CisKK3N0YXRpYyB2b2lkIHdhbGtfYXNfcHVk
X3JhbmdlKHA0ZF90ICpwNGQsIHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBlbmQs
CisJCQkgICAgICBjb25zdCBzdHJ1Y3QgYXNfd2Fsa19vcHMgKm9wcywKKwkJCSAgICAgIHN0cnVj
dCBhc193YWxrICphc3cpCit7CisJcHVkX3QgKnB1ZCA9IHB1ZF9vZmZzZXQocDRkLCBhZGRyKTsK
Kwl1bnNpZ25lZCBsb25nIG5leHQ7CisKKwlkbyB7CisJCW5leHQgPSBwdWRfYWRkcl9lbmQoYWRk
ciwgZW5kKTsKKwkJaWYgKHB1ZF9ub25lX29yX2NsZWFyX2JhZChwdWQpKQorCQkJY29udGludWU7
CisJCWlmIChXQVJOX09OKHB1ZF9odWdlKCpwdWQpKSkKKwkJCWNvbnRpbnVlOworCQl3YWxrX2Fz
X3BtZF9yYW5nZShwdWQsIGFkZHIsIG5leHQsIG9wcywgYXN3KTsKKwl9IHdoaWxlIChwdWQrKywg
YWRkciA9IG5leHQsIGFkZHIgIT0gZW5kKTsKK30KKworc3RhdGljIHZvaWQgd2Fsa19hc19wNGRf
cmFuZ2UocGdkX3QgKnBnZCwgdW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIGVuZCwK
KwkJCSAgICAgIGNvbnN0IHN0cnVjdCBhc193YWxrX29wcyAqb3BzLAorCQkJICAgICAgc3RydWN0
IGFzX3dhbGsgKmFzdykKK3sKKwlwNGRfdCAqcDRkID0gcDRkX29mZnNldChwZ2QsIGFkZHIpOwor
CXVuc2lnbmVkIGxvbmcgbmV4dDsKKworCWRvIHsKKwkJbmV4dCA9IHA0ZF9hZGRyX2VuZChhZGRy
LCBlbmQpOworCQlpZiAocDRkX25vbmVfb3JfY2xlYXJfYmFkKHA0ZCkpCisJCQljb250aW51ZTsK
KwkJd2Fsa19hc19wdWRfcmFuZ2UocDRkLCBhZGRyLCBuZXh0LCBvcHMsIGFzdyk7CisJfSB3aGls
ZSAocDRkKyssIGFkZHIgPSBuZXh0LCBhZGRyICE9IGVuZCk7Cit9CisKK3N0YXRpYyB2b2lkIHdh
bGtfYXNfcGZuX3JhbmdlKHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBlbmQsCisJ
CQkgICAgICBjb25zdCBzdHJ1Y3QgYXNfd2Fsa19vcHMgKm9wcywKKwkJCSAgICAgIHN0cnVjdCBh
c193YWxrICphc3cpCit7CisJcGdkX3QgKnBnZCA9IHBnZF9vZmZzZXQoYXN3LT52bWEtPnZtX21t
LCBhZGRyKTsKKwl1bnNpZ25lZCBsb25nIG5leHQ7CisKKwlkbyB7CisJCW5leHQgPSBwZ2RfYWRk
cl9lbmQoYWRkciwgZW5kKTsKKwkJaWYgKHBnZF9ub25lX29yX2NsZWFyX2JhZChwZ2QpKQorCQkJ
Y29udGludWU7CisJCXdhbGtfYXNfcDRkX3JhbmdlKHBnZCwgYWRkciwgbmV4dCwgb3BzLCBhc3cp
OworCX0gd2hpbGUgKHBnZCsrLCBhZGRyID0gbmV4dCwgYWRkciAhPSBlbmQpOworfQorCisKKy8q
KgorICogc3RydWN0IGFzX3dhbGtfcmFuZ2UgLSBBcmd1bWVudCBmb3IgYXBwbHlfYXNfcmFuZ2UK
KyAqIEBhc3c6IFRoZSBzdHJ1Y3QgYXNfd2FsayB3ZSBlbWJlZCBmb3IgdGhlIHBhZ2Ugd2Fsawor
ICogQHN0YXJ0OiBBZGRyZXNzIG9mIGZpcnN0IG1vZGlmaWVkIHB0ZQorICogQGVuZDogQWRkcmVz
cyBvZiBsYXN0IG1vZGlmaWVkIHB0ZSArIDEKKyAqIEB0b3RhbDogVG90YWwgbnVtYmVyIG9mIG1v
ZGlmaWVkIHB0ZXMKKyAqLworc3RydWN0IGFzX3dhbGtfcmFuZ2UgeworCXN0cnVjdCBhc193YWxr
IGJhc2U7CisJdW5zaWduZWQgbG9uZyBzdGFydDsKKwl1bnNpZ25lZCBsb25nIGVuZDsKKwl1bnNp
Z25lZCBsb25nIHRvdGFsOworfTsKKworI2RlZmluZSB0b19hc193YWxrX3JhbmdlKF9hc3cpIGNv
bnRhaW5lcl9vZihfYXN3LCBzdHJ1Y3QgYXNfd2Fsa19yYW5nZSwgYmFzZSkKKworLyoqCisgKiBh
cHBseV9wdF93cnByb3RlY3QgLSBMZWFmIHB0ZSBjYWxsYmFjayB0byB3cml0ZS1wcm90ZWN0IGEg
cHRlCisgKiBAcHRlOiBQb2ludGVyIHRvIHRoZSBwdGUKKyAqIEBhZGRyOiBUaGUgdmlydHVhbCBw
YWdlIGFkZHJlc3MKKyAqIEBhc3c6IFBvaW50ZXIgdG8gYSBzdHJ1Y3QgYXNfd2FsayBlbWJlZGRl
ZCBpbiBhIHN0cnVjdCBhc193YWxrX3JhbmdlCisgKgorICogVGhlIGZ1bmN0aW9uIHdyaXRlLXBy
b3RlY3RzIGEgcHRlIGFuZCByZWNvcmRzIHRoZSByYW5nZSBpbgorICogdmlydHVhbCBhZGRyZXNz
IHNwYWNlIG9mIHRvdWNoZWQgcHRlcyBmb3IgZWZmaWNpZW50IHJhbmdlIFRMQiBmbHVzaGVzLgor
ICovCitzdGF0aWMgdm9pZCBhcHBseV9wdF93cnByb3RlY3QocHRlX3QgKnB0ZSwgdW5zaWduZWQg
bG9uZyBhZGRyLAorCQkJICAgICAgIHN0cnVjdCBhc193YWxrICphc3cpCit7CisJc3RydWN0IGFz
X3dhbGtfcmFuZ2UgKmF3ciA9IHRvX2FzX3dhbGtfcmFuZ2UoYXN3KTsKKwlwdGVfdCBwdGVudCA9
ICpwdGU7CisKKwlpZiAocHRlX3dyaXRlKHB0ZW50KSkgeworCQlwdGVfdCBvbGRfcHRlID0gcHRl
cF9tb2RpZnlfcHJvdF9zdGFydChhc3ctPnZtYSwgYWRkciwgcHRlKTsKKworCQlwdGVudCA9IHB0
ZV93cnByb3RlY3Qob2xkX3B0ZSk7CisJCXB0ZXBfbW9kaWZ5X3Byb3RfY29tbWl0KGFzdy0+dm1h
LCBhZGRyLCBwdGUsIG9sZF9wdGUsIHB0ZW50KTsKKwkJYXdyLT50b3RhbCsrOworCQlhd3ItPnN0
YXJ0ID0gbWluKGF3ci0+c3RhcnQsIGFkZHIpOworCQlhd3ItPmVuZCA9IG1heChhd3ItPmVuZCwg
YWRkciArIFBBR0VfU0laRSk7CisJfQorfQorCisvKioKKyAqIHN0cnVjdCBhc193YWxrX2NsZWFu
IC0gQXJndW1lbnQgc3RydWN0dXJlIGZvciBhcHBseV9wdF9jbGVhbgorICogQGJhc2U6IHN0cnVj
dCBhc193YWxrIHdlIGRlcml2ZSBmcm9tCisgKiBAYml0bWFwX3Bnb2ZmOiBBZGRyZXNzX3NwYWNl
IFBhZ2Ugb2Zmc2V0IG9mIHRoZSBmaXJzdCBiaXQgaW4gQGJpdG1hcAorICogQGJpdG1hcDogQml0
bWFwIHdpdGggb25lIGJpdCBmb3IgZWFjaCBwYWdlIG9mZnNldCBpbiB0aGUgYWRkcmVzc19zcGFj
ZSByYW5nZQorICogY292ZXJlZC4KKyAqIEBzdGFydDogQWRkcmVzc19zcGFjZSBwYWdlIG9mZnNl
dCBvZiBmaXJzdCBtb2RpZmllZCBwdGUgcmVsYXRpdmUKKyAqIHRvIEBiaXRtYXBfcGdvZmYKKyAq
IEBlbmQ6IEFkZHJlc3Nfc3BhY2UgcGFnZSBvZmZzZXQgb2YgbGFzdCBtb2RpZmllZCBwdGUgcmVs
YXRpdmUKKyAqIHRvIEBiaXRtYXBfcGdvZmYKKyAqLworc3RydWN0IGFzX3dhbGtfY2xlYW4gewor
CXN0cnVjdCBhc193YWxrX3JhbmdlIGJhc2U7CisJcGdvZmZfdCBiaXRtYXBfcGdvZmY7CisJdW5z
aWduZWQgbG9uZyAqYml0bWFwOworCXBnb2ZmX3Qgc3RhcnQ7CisJcGdvZmZfdCBlbmQ7Cit9Owor
CisjZGVmaW5lIHRvX2FzX3dhbGtfY2xlYW4oX2F3cikgY29udGFpbmVyX29mKF9hd3IsIHN0cnVj
dCBhc193YWxrX2NsZWFuLCBiYXNlKQorCisvKioKKyAqIGFwcGx5X3B0X2NsZWFuIC0gTGVhZiBw
dGUgY2FsbGJhY2sgdG8gY2xlYW4gYSBwdGUKKyAqIEBwdGU6IFBvaW50ZXIgdG8gdGhlIHB0ZQor
ICogQGFkZHI6IFRoZSB2aXJ0dWFsIHBhZ2UgYWRkcmVzcworICogQGFzdzogUG9pbnRlciB0byBh
IHN0cnVjdCBhc193YWxrIGVtYmVkZGVkIGluIGEgc3RydWN0IGFzX3dhbGtfY2xlYW4KKyAqCisg
KiBUaGUgZnVuY3Rpb24gY2xlYW5zIGEgcHRlIGFuZCByZWNvcmRzIHRoZSByYW5nZSBpbgorICog
dmlydHVhbCBhZGRyZXNzIHNwYWNlIG9mIHRvdWNoZWQgcHRlcyBmb3IgZWZmaWNpZW50IFRMQiBm
bHVzaGVzLgorICogSXQgYWxzbyByZWNvcmRzIGRpcnR5IHB0ZXMgaW4gYSBiaXRtYXAgcmVwcmVz
ZW50aW5nIHBhZ2Ugb2Zmc2V0cworICogaW4gdGhlIGFkZHJlc3Nfc3BhY2UsIGFzIHdlbGwgYXMg
dGhlIGZpcnN0IGFuZCBsYXN0IG9mIHRoZSBiaXRzCisgKiB0b3VjaGVkLgorICovCitzdGF0aWMg
dm9pZCBhcHBseV9wdF9jbGVhbihwdGVfdCAqcHRlLCB1bnNpZ25lZCBsb25nIGFkZHIsIHN0cnVj
dCBhc193YWxrICphc3cpCit7CisJc3RydWN0IGFzX3dhbGtfcmFuZ2UgKmF3ciA9IHRvX2FzX3dh
bGtfcmFuZ2UoYXN3KTsKKwlzdHJ1Y3QgYXNfd2Fsa19jbGVhbiAqY2xlYW4gPSB0b19hc193YWxr
X2NsZWFuKGF3cik7CisJcHRlX3QgcHRlbnQgPSAqcHRlOworCisJaWYgKHB0ZV9kaXJ0eShwdGVu
dCkpIHsKKwkJcGdvZmZfdCBwZ29mZiA9ICgoYWRkciAtIGFzdy0+dm1hLT52bV9zdGFydCkgPj4g
UEFHRV9TSElGVCkgKworCQkJYXN3LT52bWEtPnZtX3Bnb2ZmIC0gY2xlYW4tPmJpdG1hcF9wZ29m
ZjsKKwkJcHRlX3Qgb2xkX3B0ZSA9IHB0ZXBfbW9kaWZ5X3Byb3Rfc3RhcnQoYXN3LT52bWEsIGFk
ZHIsIHB0ZSk7CisKKwkJcHRlbnQgPSBwdGVfbWtjbGVhbihvbGRfcHRlKTsKKwkJcHRlcF9tb2Rp
ZnlfcHJvdF9jb21taXQoYXN3LT52bWEsIGFkZHIsIHB0ZSwgb2xkX3B0ZSwgcHRlbnQpOworCisJ
CWF3ci0+dG90YWwrKzsKKwkJYXdyLT5zdGFydCA9IG1pbihhd3ItPnN0YXJ0LCBhZGRyKTsKKwkJ
YXdyLT5lbmQgPSBtYXgoYXdyLT5lbmQsIGFkZHIgKyBQQUdFX1NJWkUpOworCisJCV9fc2V0X2Jp
dChwZ29mZiwgY2xlYW4tPmJpdG1hcCk7CisJCWNsZWFuLT5zdGFydCA9IG1pbihjbGVhbi0+c3Rh
cnQsIHBnb2ZmKTsKKwkJY2xlYW4tPmVuZCA9IG1heChjbGVhbi0+ZW5kLCBwZ29mZiArIDEpOwor
CX0KK30KKworLyoqCisgKiBhcHBseV9hc19yYW5nZSAtIEFwcGx5IGEgcHRlIGNhbGxiYWNrIHRv
IGFsbCBQVEVzIHBvaW50aW5nIGludG8gYSByYW5nZQorICogb2YgYW4gYWRkcmVzc19zcGFjZS4K
KyAqIEBtYXBwaW5nOiBQb2ludGVyIHRvIHRoZSBzdHJ1Y3QgYWRkcmVzc19zcGFjZQorICogQGFh
czogQ2xvc3VyZSBzdHJ1Y3R1cmUKKyAqIEBmaXJzdF9pbmRleDogRmlyc3QgcGFnZSBvZmZzZXQg
aW4gdGhlIGFkZHJlc3Nfc3BhY2UKKyAqIEBucjogTnVtYmVyIG9mIGluY3JlbWVudGFsIHBhZ2Ug
b2Zmc2V0cyB0byBjb3ZlcgorICoKKyAqIFJldHVybjogTnVtYmVyIG9mIHB0ZXMgdG91Y2hlZC4g
Tm90ZSB0aGF0IHRoaXMgbnVtYmVyIG1pZ2h0IGJlIGxhcmdlcgorICogdGhhbiBAbnIgaWYgdGhl
cmUgYXJlIG92ZXJsYXBwaW5nIHZtYXMKKyAqLworc3RhdGljIHVuc2lnbmVkIGxvbmcgYXBwbHlf
YXNfcmFuZ2Uoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkJICAgIHBnb2ZmX3Qg
Zmlyc3RfaW5kZXgsIHBnb2ZmX3QgbnIsCisJCQkJICAgIGNvbnN0IHN0cnVjdCBhc193YWxrX29w
cyAqb3BzLAorCQkJCSAgICBzdHJ1Y3QgYXNfd2Fsa19yYW5nZSAqYXdyKQoreworCXN0cnVjdCB2
bV9hcmVhX3N0cnVjdCAqdm1hOworCXBnb2ZmX3QgdmJhLCB2ZWEsIGNiYSwgY2VhOworCXVuc2ln
bmVkIGxvbmcgc3RhcnRfYWRkciwgZW5kX2FkZHI7CisJc3RydWN0IG1tdV9ub3RpZmllcl9yYW5n
ZSByYW5nZTsKKworCWlfbW1hcF9sb2NrX3JlYWQobWFwcGluZyk7CisJdm1hX2ludGVydmFsX3Ry
ZWVfZm9yZWFjaCh2bWEsICZtYXBwaW5nLT5pX21tYXAsIGZpcnN0X2luZGV4LAorCQkJCSAgZmly
c3RfaW5kZXggKyBuciAtIDEpIHsKKwkJdW5zaWduZWQgbG9uZyB2bV9mbGFncyA9IFJFQURfT05D
RSh2bWEtPnZtX2ZsYWdzKTsKKworCQkvKgorCQkgKiBXZSBjYW4gb25seSBkbyBhZHZpc29yeSBm
bGFnIHRlc3RzIGJlbG93LCBzaW5jZSB3ZSBjYW4ndAorCQkgKiByZXF1aXJlIHRoZSBtbSdzIG1t
YXBfc2VtIHRvIGJlIGhlbGQgdG8gcHJvdGVjdCB0aGUgZmxhZ3MuCisJCSAqIFRoZXJlZm9yZSwg
Y2FsbGVycyB0aGF0IHN0cmljdGx5IGRlcGVuZCBvbiBzcGVjaWZpYyB2bV9mbGFncworCQkgKiB0
byByZW1haW4gY29uc3RhbnQgdGhyb3VnaG91dCB0aGUgb3BlcmF0aW9uIG11c3QgZW5zdXJlCisJ
CSAqIHRob3NlIGZsYWdzIGFyZSBpbW11dGFibGUgZm9yIGFsbCByZWxldmFudCB2bWFzIG9yIGNh
bid0IHVzZQorCQkgKiB0aGlzIGZ1bmN0aW9uLiBGaXhpbmcgdGhpcyBwcm9wZXJseSB3b3VsZCBy
ZXF1aXJlIHRoZQorCQkgKiB2bV9mbGFncyB0byBiZSBwcm90ZWN0ZWQgYnkgYSBzZXBhcmF0ZSBs
b2NrIHRha2VuIGFmdGVyIHRoZQorCQkgKiBpX21tYXBfbG9jaworCQkgKi8KKworCQkvKiBTa2lw
IG5vbi1hcHBsaWNhYmxlIFZNQXMgKi8KKwkJaWYgKCh2bV9mbGFncyAmIChWTV9TSEFSRUQgfCBW
TV9XUklURSkpICE9CisJCSAgICAoVk1fU0hBUkVEIHwgVk1fV1JJVEUpKQorCQkJY29udGludWU7
CisKKwkJLyogV2FybiBvbiBhbmQgc2tpcCBWTUFzIHdob3NlIGZsYWdzIGluZGljYXRlIGlsbGVn
YWwgdXNhZ2UgKi8KKwkJaWYgKFdBUk5fT04oKHZtX2ZsYWdzICYgKFZNX0hVR0VUTEIgfCBWTV9J
TykpICE9IFZNX0lPKSkKKwkJCWNvbnRpbnVlOworCisJCS8qIENsaXAgdG8gdGhlIHZtYSAqLwor
CQl2YmEgPSB2bWEtPnZtX3Bnb2ZmOworCQl2ZWEgPSB2YmEgKyB2bWFfcGFnZXModm1hKTsKKwkJ
Y2JhID0gZmlyc3RfaW5kZXg7CisJCWNiYSA9IG1heChjYmEsIHZiYSk7CisJCWNlYSA9IGZpcnN0
X2luZGV4ICsgbnI7CisJCWNlYSA9IG1pbihjZWEsIHZlYSk7CisKKwkJLyogVHJhbnNsYXRlIHRv
IHZpcnR1YWwgYWRkcmVzcyAqLworCQlzdGFydF9hZGRyID0gKChjYmEgLSB2YmEpIDw8IFBBR0Vf
U0hJRlQpICsgdm1hLT52bV9zdGFydDsKKwkJZW5kX2FkZHIgPSAoKGNlYSAtIHZiYSkgPDwgUEFH
RV9TSElGVCkgKyB2bWEtPnZtX3N0YXJ0OworCQlpZiAoc3RhcnRfYWRkciA+PSBlbmRfYWRkcikK
KwkJCWNvbnRpbnVlOworCisJCWF3ci0+YmFzZS52bWEgPSB2bWE7CisJCWF3ci0+c3RhcnQgPSBl
bmRfYWRkcjsKKwkJYXdyLT5lbmQgPSBzdGFydF9hZGRyOworCisJCW1tdV9ub3RpZmllcl9yYW5n
ZV9pbml0KCZyYW5nZSwgTU1VX05PVElGWV9QUk9URUNUSU9OX1BBR0UsIDAsCisJCQkJCXZtYSwg
dm1hLT52bV9tbSwgc3RhcnRfYWRkciwgZW5kX2FkZHIpOworCQltbXVfbm90aWZpZXJfaW52YWxp
ZGF0ZV9yYW5nZV9zdGFydCgmcmFuZ2UpOworCisJCS8qIElzIHRoaXMgbmVlZGVkIHdoZW4gd2Ug
b25seSBjaGFuZ2UgcHJvdGVjdGlvbj8gKi8KKwkJZmx1c2hfY2FjaGVfcmFuZ2Uodm1hLCBzdGFy
dF9hZGRyLCBlbmRfYWRkcik7CisKKwkJLyoKKwkJICogV2UncmUgbm90IHVzaW5nIHRsYl9nYXRo
ZXJfbW11KCkgc2luY2UgdHlwaWNhbGx5CisJCSAqIG9ubHkgYSBzbWFsbCBzdWJyYW5nZSBvZiBQ
VEVzIGFyZSBhZmZlY3RlZCwgd2hlcmVhcworCQkgKiB0bGJfZ2F0aGVyX21tdSgpIHJlY29yZHMg
dGhlIGZ1bGwgcmFuZ2UuCisJCSAqLworCQlpbmNfdGxiX2ZsdXNoX3BlbmRpbmcodm1hLT52bV9t
bSk7CisJCXdhbGtfYXNfcGZuX3JhbmdlKHN0YXJ0X2FkZHIsIGVuZF9hZGRyLCBvcHMsICZhd3It
PmJhc2UpOworCQlpZiAoYXdyLT5lbmQgPiBhd3ItPnN0YXJ0KQorCQkJZmx1c2hfdGxiX3Jhbmdl
KHZtYSwgYXdyLT5zdGFydCwgYXdyLT5lbmQpOworCisJCW1tdV9ub3RpZmllcl9pbnZhbGlkYXRl
X3JhbmdlX2VuZCgmcmFuZ2UpOworCQlkZWNfdGxiX2ZsdXNoX3BlbmRpbmcodm1hLT52bV9tbSk7
CisJfQorCWlfbW1hcF91bmxvY2tfcmVhZChtYXBwaW5nKTsKKworCXJldHVybiBhd3ItPnRvdGFs
OworfQorCisvKioKKyAqIGFwcGx5X2FzX3dycHJvdGVjdCAtIFdyaXRlLXByb3RlY3QgYWxsIHB0
ZXMgaW4gYW4gYWRkcmVzc19zcGFjZSByYW5nZQorICogQG1hcHBpbmc6IFRoZSBhZGRyZXNzX3Nw
YWNlIHdlIHdhbnQgdG8gd3JpdGUgcHJvdGVjdAorICogQGZpcnN0X2luZGV4OiBUaGUgZmlyc3Qg
cGFnZSBvZmZzZXQgaW4gdGhlIHJhbmdlCisgKiBAbnI6IE51bWJlciBvZiBpbmNyZW1lbnRhbCBw
YWdlIG9mZnNldHMgdG8gY292ZXIKKyAqCisgKiBXQVJOSU5HOiBUaGlzIGZ1bmN0aW9uIHNob3Vs
ZCBvbmx5IGJlIHVzZWQgZm9yIGFkZHJlc3Mgc3BhY2VzIHdob3NlCisgKiB2bWFzIGFyZSBtYXJr
ZWQgVk1fSU8gYW5kIHRoYXQgZG8gbm90IGNvbnRhaW4gaHVnZSBwYWdlcy4KKyAqIFRvIGF2b2lk
IGludGVyZmVyZW5jZSB3aXRoIENPVydkIHBhZ2VzLCB2bWFzIG5vdCBtYXJrZWQgVk1fU0hBUkVE
IGFyZQorICogc2ltcGx5IHNraXBwZWQuCisgKgorICogUmV0dXJuOiBUaGUgbnVtYmVyIG9mIHB0
ZXMgYWN0dWFsbHkgd3JpdGUtcHJvdGVjdGVkLiBOb3RlIHRoYXQKKyAqIGFscmVhZHkgd3JpdGUt
cHJvdGVjdGVkIHB0ZXMgYXJlIG5vdCBjb3VudGVkLgorICovCit1bnNpZ25lZCBsb25nIGFwcGx5
X2FzX3dycHJvdGVjdChzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCQkgcGdvZmZf
dCBmaXJzdF9pbmRleCwgcGdvZmZfdCBucikKK3sKKwlzdGF0aWMgY29uc3Qgc3RydWN0IGFzX3dh
bGtfb3BzIG9wcyA9IHsKKwkJLnB0ZV9lbnRyeSA9IGFwcGx5X3B0X3dycHJvdGVjdAorCX07CisJ
c3RydWN0IGFzX3dhbGtfcmFuZ2UgYXdyID0geyAudG90YWwgPSAwIH07CisKKwlyZXR1cm4gYXBw
bHlfYXNfcmFuZ2UobWFwcGluZywgZmlyc3RfaW5kZXgsIG5yLCAmb3BzLCAmYXdyKTsKK30KK0VY
UE9SVF9TWU1CT0xfR1BMKGFwcGx5X2FzX3dycHJvdGVjdCk7CisKKy8qKgorICogYXBwbHlfYXNf
Y2xlYW4gLSBDbGVhbiBhbGwgcHRlcyBpbiBhbiBhZGRyZXNzX3NwYWNlIHJhbmdlCisgKiBAbWFw
cGluZzogVGhlIGFkZHJlc3Nfc3BhY2Ugd2Ugd2FudCB0byBjbGVhbgorICogQGZpcnN0X2luZGV4
OiBUaGUgZmlyc3QgcGFnZSBvZmZzZXQgaW4gdGhlIHJhbmdlCisgKiBAbnI6IE51bWJlciBvZiBp
bmNyZW1lbnRhbCBwYWdlIG9mZnNldHMgdG8gY292ZXIKKyAqIEBiaXRtYXBfcGdvZmY6IFRoZSBw
YWdlIG9mZnNldCBvZiB0aGUgZmlyc3QgYml0IGluIEBiaXRtYXAKKyAqIEBiaXRtYXA6IFBvaW50
ZXIgdG8gYSBiaXRtYXAgb2YgYXQgbGVhc3QgQG5yIGJpdHMuIFRoZSBiaXRtYXAgbmVlZHMgdG8K
KyAqIGNvdmVyIHRoZSB3aG9sZSByYW5nZSBAZmlyc3RfaW5kZXguLkBmaXJzdF9pbmRleCArIEBu
ci4KKyAqIEBzdGFydDogUG9pbnRlciB0byBudW1iZXIgb2YgdGhlIGZpcnN0IHNldCBiaXQgaW4g
QGJpdG1hcC4KKyAqIGlzIG1vZGlmaWVkIGFzIG5ldyBiaXRzIGFyZSBzZXQgYnkgdGhlIGZ1bmN0
aW9uLgorICogQGVuZDogUG9pbnRlciB0byB0aGUgbnVtYmVyIG9mIHRoZSBsYXN0IHNldCBiaXQg
aW4gQGJpdG1hcC4KKyAqIG5vbmUgc2V0LiBUaGUgdmFsdWUgaXMgbW9kaWZpZWQgYXMgbmV3IGJp
dHMgYXJlIHNldCBieSB0aGUgZnVuY3Rpb24uCisgKgorICogTm90ZTogV2hlbiB0aGlzIGZ1bmN0
aW9uIHJldHVybnMgdGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgYSBDUFUgaGFzCisgKiBub3Qg
YWxyZWFkeSBkaXJ0aWVkIG5ldyBwdGVzLiBIb3dldmVyIGl0IHdpbGwgbm90IGNsZWFuIGFueSBw
dGVzIG5vdAorICogcmVwb3J0ZWQgaW4gdGhlIGJpdG1hcC4KKyAqCisgKiBJZiBhIGNhbGxlciBu
ZWVkcyB0byBtYWtlIHN1cmUgYWxsIGRpcnR5IHB0ZXMgYXJlIHBpY2tlZCB1cCBhbmQgbm9uZQor
ICogYWRkaXRpb25hbCBhcmUgYWRkZWQsIGl0IGZpcnN0IG5lZWRzIHRvIHdyaXRlLXByb3RlY3Qg
dGhlIGFkZHJlc3Mtc3BhY2UKKyAqIHJhbmdlIGFuZCBtYWtlIHN1cmUgbmV3IHdyaXRlcnMgYXJl
IGJsb2NrZWQgaW4gcGFnZV9ta3dyaXRlKCkgb3IKKyAqIHBmbl9ta3dyaXRlKCkuIEFuZCB0aGVu
IGFmdGVyIGEgVExCIGZsdXNoIGZvbGxvd2luZyB0aGUgd3JpdGUtcHJvdGVjdGlvbgorICogcGlj
ayB1cCBhbGwgZGlydHkgYml0cy4KKyAqCisgKiBXQVJOSU5HOiBUaGlzIGZ1bmN0aW9uIHNob3Vs
ZCBvbmx5IGJlIHVzZWQgZm9yIGFkZHJlc3Mgc3BhY2VzIHdob3NlCisgKiB2bWFzIGFyZSBtYXJr
ZWQgVk1fSU8gYW5kIHRoYXQgZG8gbm90IGNvbnRhaW4gaHVnZSBwYWdlcy4KKyAqIFRvIGF2b2lk
IGludGVyZmVyZW5jZSB3aXRoIENPVydkIHBhZ2VzLCB2bWFzIG5vdCBtYXJrZWQgVk1fU0hBUkVE
IGFyZQorICogc2ltcGx5IHNraXBwZWQuCisgKgorICogUmV0dXJuOiBUaGUgbnVtYmVyIG9mIGRp
cnR5IHB0ZXMgYWN0dWFsbHkgY2xlYW5lZC4KKyAqLwordW5zaWduZWQgbG9uZyBhcHBseV9hc19j
bGVhbihzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCSAgICAgcGdvZmZfdCBmaXJz
dF9pbmRleCwgcGdvZmZfdCBuciwKKwkJCSAgICAgcGdvZmZfdCBiaXRtYXBfcGdvZmYsCisJCQkg
ICAgIHVuc2lnbmVkIGxvbmcgKmJpdG1hcCwKKwkJCSAgICAgcGdvZmZfdCAqc3RhcnQsCisJCQkg
ICAgIHBnb2ZmX3QgKmVuZCkKK3sKKwlib29sIG5vbmVfc2V0ID0gKCpzdGFydCA+PSAqZW5kKTsK
KwlzdGF0aWMgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzIG9wcyA9IHsgLnB0ZV9lbnRyeSA9IGFw
cGx5X3B0X2NsZWFuIH07CisJc3RydWN0IGFzX3dhbGtfY2xlYW4gY2xlYW4gPSB7CisJCS5iYXNl
ID0geyAudG90YWwgPSAwLCB9LAorCQkuYml0bWFwX3Bnb2ZmID0gYml0bWFwX3Bnb2ZmLAorCQku
Yml0bWFwID0gYml0bWFwLAorCQkuc3RhcnQgPSBub25lX3NldCA/IG5yIDogKnN0YXJ0LAorCQku
ZW5kID0gbm9uZV9zZXQgPyAwIDogKmVuZCwKKwl9OworCXVuc2lnbmVkIGxvbmcgcmV0ID0gYXBw
bHlfYXNfcmFuZ2UobWFwcGluZywgZmlyc3RfaW5kZXgsIG5yLCAmb3BzLAorCQkJCQkgICAmY2xl
YW4uYmFzZSk7CisJKnN0YXJ0ID0gY2xlYW4uc3RhcnQ7CisJKmVuZCA9IGNsZWFuLmVuZDsKKwly
ZXR1cm4gcmV0OworfQorRVhQT1JUX1NZTUJPTF9HUEwoYXBwbHlfYXNfY2xlYW4pOwotLSAKMi4y
MC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmkt
ZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
