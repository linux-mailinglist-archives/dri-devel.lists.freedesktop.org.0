Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1FE3847C51
	for <lists+dri-devel@lfdr.de>; Mon, 17 Jun 2019 10:26:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A5A3889150;
	Mon, 17 Jun 2019 08:26:42 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pl1-x64a.google.com (mail-pl1-x64a.google.com
 [IPv6:2607:f8b0:4864:20::64a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id ABF5C89150
 for <dri-devel@lists.freedesktop.org>; Mon, 17 Jun 2019 08:26:41 +0000 (UTC)
Received: by mail-pl1-x64a.google.com with SMTP id r7so5592505plo.6
 for <dri-devel@lists.freedesktop.org>; Mon, 17 Jun 2019 01:26:41 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=c8lNi0PVX+vhUoM2pApH4POTzfRz8BC1BIATthHFevw=;
 b=rwztaoLYEFzX6jkdN72G8axhuGcKNYkhlLpgZSHBOhj9jXE4k4a/7/fp0wfRG6d59R
 UYy7xFMUk7bQSdm8HO6hq49zFURWpZvcxPLsj18bGqHGkavccqbYWA/tuuuPD5YOXxVO
 hbHXAOQ/rjrpw7Oeyhdo8OAU/8L9kpKOoGPyZ2mxG+hlnsbPFcTYiMZC2+j5wUekFha5
 k32WyTp/8AzBuTwRd1e+FS/sADSQOGgvHWAY4SpprCBB7/yQvcCqXQGgrJ12gJWjBGJ/
 tWFZcGKibPx2eag3qWCzXft1043X6EDBU7fnADvdvgTiBW1QQVFmBoRRERW4h4Bv1SPi
 Utvw==
X-Gm-Message-State: APjAAAX+cJhHfj339xzurSlR1Odg2r4Gag3jZml+epHjvznN1ofv2NJq
 2jZSYX3qxmdIADjzbUlIR1PA+CIq516uVN2D9NYErQ==
X-Google-Smtp-Source: APXvYqzS76Li/e62Ov81F4Ql7E4pNFquk02WLzEZKfWBTbT9jVHGocBenqy78Ve+RiglHzVj5YqtN2uSo5XhTqbsvQsp9A==
X-Received: by 2002:a65:41c6:: with SMTP id b6mr47059108pgq.399.1560760000905; 
 Mon, 17 Jun 2019 01:26:40 -0700 (PDT)
Date: Mon, 17 Jun 2019 01:25:56 -0700
In-Reply-To: <20190617082613.109131-1-brendanhiggins@google.com>
Message-Id: <20190617082613.109131-2-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190617082613.109131-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.22.0.410.gd8fdbe21b5-goog
Subject: [PATCH v5 01/18] kunit: test: add KUnit test runner core
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=c8lNi0PVX+vhUoM2pApH4POTzfRz8BC1BIATthHFevw=;
 b=pxQFw+R+2w7LHRo9fMVDWFvDf6rYji02kvB5++2Rk/Ih7CGQrhRPI/Dw30uflXJXgu
 ne1GpieQWsR96E/ZHJtLBYVKvvqT+WylDFesjIwoWu+cYgy5uDqMIpQ2jEKfHaWo/koO
 tnJaHQuUn2xcTBL58TUYjJgxcMOAehtMuBni9tYFSokj3CUB+XnNEQ3uUR+kva2wNW+C
 ssSK5cM6byo8qkn042m6lId3YzMpCsL43DqBYasQYCn04GF1RS76DFmgfcK80fC0Fcrg
 CIoJqTwArbYo7EwCwu+8MX5ZL4M1lZq5NLjzXgWe0/O5nzzRMfCNqyjBV6krja9GP6s1
 gWLQ==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIGNvcmUgZmFjaWxpdGllcyBmb3IgZGVmaW5pbmcgdW5pdCB0ZXN0czsgdGhpcyBwcm92aWRl
cyBhIGNvbW1vbiB3YXkKdG8gZGVmaW5lIHRlc3QgY2FzZXMsIGZ1bmN0aW9ucyB0aGF0IGV4ZWN1
dGUgY29kZSB3aGljaCBpcyB1bmRlciB0ZXN0CmFuZCBkZXRlcm1pbmUgd2hldGhlciB0aGUgY29k
ZSB1bmRlciB0ZXN0IGJlaGF2ZXMgYXMgZXhwZWN0ZWQ7IHRoaXMgYWxzbwpwcm92aWRlcyBhIHdh
eSB0byBncm91cCB0b2dldGhlciByZWxhdGVkIHRlc3QgY2FzZXMgaW4gdGVzdCBzdWl0ZXMgKGhl
cmUKd2UgY2FsbCB0aGVtIHRlc3RfbW9kdWxlcykuCgpKdXN0IGRlZmluZSB0ZXN0IGNhc2VzIGFu
ZCBob3cgdG8gZXhlY3V0ZSB0aGVtIGZvciBub3c7IHNldHRpbmcKZXhwZWN0YXRpb25zIG9uIGNv
ZGUgd2lsbCBiZSBkZWZpbmVkIGxhdGVyLgoKU2lnbmVkLW9mZi1ieTogQnJlbmRhbiBIaWdnaW5z
IDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogR3JlZyBLcm9haC1IYXJ0
bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KUmV2aWV3ZWQtYnk6IExvZ2FuIEd1bnRo
b3JwZSA8bG9nYW5nQGRlbHRhdGVlLmNvbT4KLS0tCkNoYW5nZXMgU2luY2UgTGFzdCBSZXZpc2lv
bjoKIC0gTW9zdGx5IG1pbm9yIGZpeGVzIHN1Z2dlc3RlZCBieSBTdGVwaGVuIEJveWQKIC0gQmln
Z2VzdCBjaGFuZ2UgaW5saW5lcyBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBpbiB0aGUgdGVzdCBjYXNl
IHJ1bm5pbmcKICAgbG9naWMgdG8gbWFrZSBpdCBtb3JlIHJlYWRhYmxlIGFzIHN1Z2dlc3RlZCBi
eSBTdGVwaGVuIEJveWQKLS0tCiBpbmNsdWRlL2t1bml0L3Rlc3QuaCB8IDE2MSArKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysKIGt1bml0L0tjb25maWcgICAgICAgIHwgIDE3ICsrKysK
IGt1bml0L01ha2VmaWxlICAgICAgIHwgICAxICsKIGt1bml0L3Rlc3QuYyAgICAgICAgIHwgMjEw
ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIDQgZmlsZXMgY2hh
bmdlZCwgMzg5IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2t1bml0
L3Rlc3QuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L0tjb25maWcKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBrdW5pdC9NYWtlZmlsZQogY3JlYXRlIG1vZGUgMTAwNjQ0IGt1bml0L3Rlc3QuYwoKZGlm
ZiAtLWdpdCBhL2luY2x1ZGUva3VuaXQvdGVzdC5oIGIvaW5jbHVkZS9rdW5pdC90ZXN0LmgKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwMC4uODQ3NmIzZDM3MWNiOQotLS0g
L2Rldi9udWxsCisrKyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC0wLDAgKzEsMTYxIEBACisv
KiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLworLyoKKyAqIEJhc2UgdW5pdCB0
ZXN0IChLVW5pdCkgQVBJLgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4K
KyAqIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgor
ICovCisKKyNpZm5kZWYgX0tVTklUX1RFU1RfSAorI2RlZmluZSBfS1VOSVRfVEVTVF9ICisKKyNp
bmNsdWRlIDxsaW51eC90eXBlcy5oPgorCitzdHJ1Y3Qga3VuaXQ7CisKKy8qKgorICogc3RydWN0
IGt1bml0X2Nhc2UgLSByZXByZXNlbnRzIGFuIGluZGl2aWR1YWwgdGVzdCBjYXNlLgorICogQHJ1
bl9jYXNlOiB0aGUgZnVuY3Rpb24gcmVwcmVzZW50aW5nIHRoZSBhY3R1YWwgdGVzdCBjYXNlLgor
ICogQG5hbWU6IHRoZSBuYW1lIG9mIHRoZSB0ZXN0IGNhc2UuCisgKgorICogQSB0ZXN0IGNhc2Ug
aXMgYSBmdW5jdGlvbiB3aXRoIHRoZSBzaWduYXR1cmUsIGBgdm9pZCAoKikoc3RydWN0IGt1bml0
ICopYGAKKyAqIHRoYXQgbWFrZXMgZXhwZWN0YXRpb25zIChzZWUgS1VOSVRfRVhQRUNUX1RSVUUo
KSkgYWJvdXQgY29kZSB1bmRlciB0ZXN0LiBFYWNoCisgKiB0ZXN0IGNhc2UgaXMgYXNzb2NpYXRl
ZCB3aXRoIGEgJnN0cnVjdCBrdW5pdF9tb2R1bGUgYW5kIHdpbGwgYmUgcnVuIGFmdGVyIHRoZQor
ICogbW9kdWxlJ3MgaW5pdCBmdW5jdGlvbiBhbmQgZm9sbG93ZWQgYnkgdGhlIG1vZHVsZSdzIGV4
aXQgZnVuY3Rpb24uCisgKgorICogQSB0ZXN0IGNhc2Ugc2hvdWxkIGJlIHN0YXRpYyBhbmQgc2hv
dWxkIG9ubHkgYmUgY3JlYXRlZCB3aXRoIHRoZSBLVU5JVF9DQVNFKCkKKyAqIG1hY3JvOyBhZGRp
dGlvbmFsbHksIGV2ZXJ5IGFycmF5IG9mIHRlc3QgY2FzZXMgc2hvdWxkIGJlIHRlcm1pbmF0ZWQg
d2l0aCBhbgorICogZW1wdHkgdGVzdCBjYXNlLgorICoKKyAqIEV4YW1wbGU6CisgKgorICogLi4g
Y29kZS1ibG9jazo6IGMKKyAqCisgKgl2b2lkIGFkZF90ZXN0X2Jhc2ljKHN0cnVjdCBrdW5pdCAq
dGVzdCkKKyAqCXsKKyAqCQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMSwgYWRkKDEsIDApKTsKKyAq
CQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwgMiwgYWRkKDEsIDEpKTsKKyAqCQlLVU5JVF9FWFBFQ1Rf
RVEodGVzdCwgMCwgYWRkKC0xLCAxKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIElOVF9N
QVgsIGFkZCgwLCBJTlRfTUFYKSk7CisgKgkJS1VOSVRfRVhQRUNUX0VRKHRlc3QsIC0xLCBhZGQo
SU5UX01BWCwgSU5UX01JTikpOworICoJfQorICoKKyAqCXN0YXRpYyBzdHJ1Y3Qga3VuaXRfY2Fz
ZSBleGFtcGxlX3Rlc3RfY2FzZXNbXSA9IHsKKyAqCQlLVU5JVF9DQVNFKGFkZF90ZXN0X2Jhc2lj
KSwKKyAqCQl7fQorICoJfTsKKyAqCisgKi8KK3N0cnVjdCBrdW5pdF9jYXNlIHsKKwl2b2lkICgq
cnVuX2Nhc2UpKHN0cnVjdCBrdW5pdCAqdGVzdCk7CisJY29uc3QgY2hhciAqbmFtZTsKKworCS8q
IHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5LiAqLworCWJvb2wgc3VjY2VzczsKK307CisKKy8q
KgorICogS1VOSVRfQ0FTRSAtIEEgaGVscGVyIGZvciBjcmVhdGluZyBhICZzdHJ1Y3Qga3VuaXRf
Y2FzZQorICogQHRlc3RfbmFtZTogYSByZWZlcmVuY2UgdG8gYSB0ZXN0IGNhc2UgZnVuY3Rpb24u
CisgKgorICogVGFrZXMgYSBzeW1ib2wgZm9yIGEgZnVuY3Rpb24gcmVwcmVzZW50aW5nIGEgdGVz
dCBjYXNlIGFuZCBjcmVhdGVzIGEKKyAqICZzdHJ1Y3Qga3VuaXRfY2FzZSBvYmplY3QgZnJvbSBp
dC4gU2VlIHRoZSBkb2N1bWVudGF0aW9uIGZvcgorICogJnN0cnVjdCBrdW5pdF9jYXNlIGZvciBh
biBleGFtcGxlIG9uIGhvdyB0byB1c2UgaXQuCisgKi8KKyNkZWZpbmUgS1VOSVRfQ0FTRSh0ZXN0
X25hbWUpIHsgLnJ1bl9jYXNlID0gdGVzdF9uYW1lLCAubmFtZSA9ICN0ZXN0X25hbWUgfQorCisv
KioKKyAqIHN0cnVjdCBrdW5pdF9tb2R1bGUgLSBkZXNjcmliZXMgYSByZWxhdGVkIGNvbGxlY3Rp
b24gb2YgJnN0cnVjdCBrdW5pdF9jYXNlIHMuCisgKiBAbmFtZTogdGhlIG5hbWUgb2YgdGhlIHRl
c3QuIFB1cmVseSBpbmZvcm1hdGlvbmFsLgorICogQGluaXQ6IGNhbGxlZCBiZWZvcmUgZXZlcnkg
dGVzdCBjYXNlLgorICogQGV4aXQ6IGNhbGxlZCBhZnRlciBldmVyeSB0ZXN0IGNhc2UuCisgKiBA
dGVzdF9jYXNlczogYSBudWxsIHRlcm1pbmF0ZWQgYXJyYXkgb2YgdGVzdCBjYXNlcy4KKyAqCisg
KiBBIGt1bml0X21vZHVsZSBpcyBhIGNvbGxlY3Rpb24gb2YgcmVsYXRlZCAmc3RydWN0IGt1bml0
X2Nhc2Ugcywgc3VjaCB0aGF0CisgKiBAaW5pdCBpcyBjYWxsZWQgYmVmb3JlIGV2ZXJ5IHRlc3Qg
Y2FzZSBhbmQgQGV4aXQgaXMgY2FsbGVkIGFmdGVyIGV2ZXJ5IHRlc3QKKyAqIGNhc2UsIHNpbWls
YXIgdG8gdGhlIG5vdGlvbiBvZiBhICp0ZXN0IGZpeHR1cmUqIG9yIGEgKnRlc3QgY2xhc3MqIGlu
IG90aGVyCisgKiB1bml0IHRlc3RpbmcgZnJhbWV3b3JrcyBsaWtlIEpVbml0IG9yIEdvb2dsZXRl
c3QuCisgKgorICogRXZlcnkgJnN0cnVjdCBrdW5pdF9jYXNlIG11c3QgYmUgYXNzb2NpYXRlZCB3
aXRoIGEga3VuaXRfbW9kdWxlIGZvciBLVW5pdCB0bworICogcnVuIGl0LgorICovCitzdHJ1Y3Qg
a3VuaXRfbW9kdWxlIHsKKwljb25zdCBjaGFyIG5hbWVbMjU2XTsKKwlpbnQgKCppbml0KShzdHJ1
Y3Qga3VuaXQgKnRlc3QpOworCXZvaWQgKCpleGl0KShzdHJ1Y3Qga3VuaXQgKnRlc3QpOworCXN0
cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2VzOworfTsKKworLyoqCisgKiBzdHJ1Y3Qga3VuaXQg
LSByZXByZXNlbnRzIGEgcnVubmluZyBpbnN0YW5jZSBvZiBhIHRlc3QuCisgKiBAcHJpdjogZm9y
IHVzZXIgdG8gc3RvcmUgYXJiaXRyYXJ5IGRhdGEuIENvbW1vbmx5IHVzZWQgdG8gcGFzcyBkYXRh
IGNyZWF0ZWQKKyAqIGluIHRoZSBpbml0IGZ1bmN0aW9uIChzZWUgJnN0cnVjdCBrdW5pdF9tb2R1
bGUpLgorICoKKyAqIFVzZWQgdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQg
Y29udGV4dCB1bmRlciB3aGljaCB0aGUgdGVzdCBpcworICogcnVubmluZy4gTW9zdCBvZiB0aGlz
IGRhdGEgaXMgcHJpdmF0ZSBhbmQgc2hvdWxkIG9ubHkgYmUgYWNjZXNzZWQgaW5kaXJlY3RseQor
ICogdmlhIHB1YmxpYyBmdW5jdGlvbnM7IHRoZSBvbmUgZXhjZXB0aW9uIGlzIEBwcml2IHdoaWNo
IGNhbiBiZSB1c2VkIGJ5IHRoZQorICogdGVzdCB3cml0ZXIgdG8gc3RvcmUgYXJiaXRyYXJ5IGRh
dGEuCisgKi8KK3N0cnVjdCBrdW5pdCB7CisJdm9pZCAqcHJpdjsKKworCS8qIHByaXZhdGU6IGlu
dGVybmFsIHVzZSBvbmx5LiAqLworCWNvbnN0IGNoYXIgKm5hbWU7IC8qIFJlYWQgb25seSBhZnRl
ciBpbml0aWFsaXphdGlvbiEgKi8KKwlzcGlubG9ja190IGxvY2s7IC8qIEdhdXJkcyBhbGwgbXV0
YWJsZSB0ZXN0IHN0YXRlLiAqLworCWJvb2wgc3VjY2VzczsgLyogUHJvdGVjdGVkIGJ5IGxvY2su
ICovCit9OworCit2b2lkIGt1bml0X2luaXRfdGVzdChzdHJ1Y3Qga3VuaXQgKnRlc3QsIGNvbnN0
IGNoYXIgKm5hbWUpOworCitpbnQga3VuaXRfcnVuX3Rlc3RzKHN0cnVjdCBrdW5pdF9tb2R1bGUg
Km1vZHVsZSk7CisKKy8qKgorICogbW9kdWxlX3Rlc3QoKSAtIHVzZWQgdG8gcmVnaXN0ZXIgYSAm
c3RydWN0IGt1bml0X21vZHVsZSB3aXRoIEtVbml0LgorICogQG1vZHVsZTogYSBzdGF0aWNhbGx5
IGFsbG9jYXRlZCAmc3RydWN0IGt1bml0X21vZHVsZS4KKyAqCisgKiBSZWdpc3RlcnMgQG1vZHVs
ZSB3aXRoIHRoZSB0ZXN0IGZyYW1ld29yay4gU2VlICZzdHJ1Y3Qga3VuaXRfbW9kdWxlIGZvciBt
b3JlCisgKiBpbmZvcm1hdGlvbi4KKyAqLworI2RlZmluZSBtb2R1bGVfdGVzdChtb2R1bGUpIFwK
KwkJc3RhdGljIGludCBtb2R1bGVfa3VuaXRfaW5pdCMjbW9kdWxlKHZvaWQpIFwKKwkJeyBcCisJ
CQlyZXR1cm4ga3VuaXRfcnVuX3Rlc3RzKCZtb2R1bGUpOyBcCisJCX0gXAorCQlsYXRlX2luaXRj
YWxsKG1vZHVsZV9rdW5pdF9pbml0IyNtb2R1bGUpCisKK3ZvaWQgX19wcmludGYoMywgNCkga3Vu
aXRfcHJpbnRrKGNvbnN0IGNoYXIgKmxldmVsLAorCQkJCSBjb25zdCBzdHJ1Y3Qga3VuaXQgKnRl
c3QsCisJCQkJIGNvbnN0IGNoYXIgKmZtdCwgLi4uKTsKKworLyoqCisgKiBrdW5pdF9pbmZvKCkg
LSBQcmludHMgYW4gSU5GTyBsZXZlbCBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCB0aGUgY3VycmVu
dCB0ZXN0LgorICogQHRlc3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGZtdDogQSBw
cmludGsoKSBzdHlsZSBmb3JtYXQgc3RyaW5nLgorICoKKyAqIFByaW50cyBhbiBpbmZvIGxldmVs
IG1lc3NhZ2UgYXNzb2NpYXRlZCB3aXRoIHRoZSB0ZXN0IG1vZHVsZSBiZWluZyBydW4uIFRha2Vz
CisgKiBhIHZhcmlhYmxlIG51bWJlciBvZiBmb3JtYXQgcGFyYW1ldGVycyBqdXN0IGxpa2UgcHJp
bnRrKCkuCisgKi8KKyNkZWZpbmUga3VuaXRfaW5mbyh0ZXN0LCBmbXQsIC4uLikgXAorCQlrdW5p
dF9wcmludGsoS0VSTl9JTkZPLCB0ZXN0LCBmbXQsICMjX19WQV9BUkdTX18pCisKKy8qKgorICog
a3VuaXRfd2FybigpIC0gUHJpbnRzIGEgV0FSTiBsZXZlbCBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0
aCB0aGUgY3VycmVudCB0ZXN0LgorICogQHRlc3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0Lgor
ICogQGZtdDogQSBwcmludGsoKSBzdHlsZSBmb3JtYXQgc3RyaW5nLgorICoKKyAqIFByaW50cyBh
IHdhcm5pbmcgbGV2ZWwgbWVzc2FnZS4KKyAqLworI2RlZmluZSBrdW5pdF93YXJuKHRlc3QsIGZt
dCwgLi4uKSBcCisJCWt1bml0X3ByaW50ayhLRVJOX1dBUk5JTkcsIHRlc3QsIGZtdCwgIyNfX1ZB
X0FSR1NfXykKKworLyoqCisgKiBrdW5pdF9lcnIoKSAtIFByaW50cyBhbiBFUlJPUiBsZXZlbCBt
ZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCB0aGUgY3VycmVudCB0ZXN0LgorICogQHRlc3Q6IFRoZSB0
ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGZtdDogQSBwcmludGsoKSBzdHlsZSBmb3JtYXQgc3Ry
aW5nLgorICoKKyAqIFByaW50cyBhbiBlcnJvciBsZXZlbCBtZXNzYWdlLgorICovCisjZGVmaW5l
IGt1bml0X2Vycih0ZXN0LCBmbXQsIC4uLikgXAorCQlrdW5pdF9wcmludGsoS0VSTl9FUlIsIHRl
c3QsIGZtdCwgIyNfX1ZBX0FSR1NfXykKKworI2VuZGlmIC8qIF9LVU5JVF9URVNUX0ggKi8KZGlm
ZiAtLWdpdCBhL2t1bml0L0tjb25maWcgYi9rdW5pdC9LY29uZmlnCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLjMzMGFlODM1MjdjMjMKLS0tIC9kZXYvbnVsbAorKysg
Yi9rdW5pdC9LY29uZmlnCkBAIC0wLDAgKzEsMTcgQEAKKyMKKyMgS1VuaXQgYmFzZSBjb25maWd1
cmF0aW9uCisjCisKK21lbnUgIktVbml0IHN1cHBvcnQiCisKK2NvbmZpZyBLVU5JVAorCWJvb2wg
IkVuYWJsZSBzdXBwb3J0IGZvciB1bml0IHRlc3RzIChLVW5pdCkiCisJaGVscAorCSAgRW5hYmxl
cyBzdXBwb3J0IGZvciBrZXJuZWwgdW5pdCB0ZXN0cyAoS1VuaXQpLCBhIGxpZ2h0d2VpZ2h0IHVu
aXQKKwkgIHRlc3RpbmcgYW5kIG1vY2tpbmcgZnJhbWV3b3JrIGZvciB0aGUgTGludXgga2VybmVs
LiBUaGVzZSB0ZXN0cyBhcmUKKwkgIGFibGUgdG8gYmUgcnVuIGxvY2FsbHkgb24gYSBkZXZlbG9w
ZXIncyB3b3Jrc3RhdGlvbiB3aXRob3V0IGEgVk0gb3IKKwkgIHNwZWNpYWwgaGFyZHdhcmUgd2hl
biB1c2luZyBVTUwuIENhbiBhbHNvIGJlIHVzZWQgb24gbW9zdCBvdGhlcgorCSAgYXJjaGl0ZWN0
dXJlcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSBzZWUKKwkgIERvY3VtZW50YXRpb24v
ZGV2LXRvb2xzL2t1bml0Ly4KKworZW5kbWVudQpkaWZmIC0tZ2l0IGEva3VuaXQvTWFrZWZpbGUg
Yi9rdW5pdC9NYWtlZmlsZQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAw
Li41ZWZkYzRkZWEyYzA4Ci0tLSAvZGV2L251bGwKKysrIGIva3VuaXQvTWFrZWZpbGUKQEAgLTAs
MCArMSBAQAorb2JqLSQoQ09ORklHX0tVTklUKSArPQkJCXRlc3QubwpkaWZmIC0tZ2l0IGEva3Vu
aXQvdGVzdC5jIGIva3VuaXQvdGVzdC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAw
MDAwMDAwMDAuLmQwNWQyNTRmMTUyMWYKLS0tIC9kZXYvbnVsbAorKysgYi9rdW5pdC90ZXN0LmMK
QEAgLTAsMCArMSwyMTAgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisv
KgorICogQmFzZSB1bml0IHRlc3QgKEtVbml0KSBBUEkuCisgKgorICogQ29weXJpZ2h0IChDKSAy
MDE5LCBHb29nbGUgTExDLgorICogQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdn
aW5zQGdvb2dsZS5jb20+CisgKi8KKworI2luY2x1ZGUgPGxpbnV4L3NjaGVkL2RlYnVnLmg+Cisj
aW5jbHVkZSA8a3VuaXQvdGVzdC5oPgorCitzdGF0aWMgYm9vbCBrdW5pdF9nZXRfc3VjY2Vzcyhz
dHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlib29sIHN1Y2Nl
c3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmdGVzdC0+bG9jaywgZmxhZ3MpOworCXN1Y2Nlc3Mg
PSB0ZXN0LT5zdWNjZXNzOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnRlc3QtPmxvY2ssIGZs
YWdzKTsKKworCXJldHVybiBzdWNjZXNzOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9zZXRfc3Vj
Y2VzcyhzdHJ1Y3Qga3VuaXQgKnRlc3QsIGJvb2wgc3VjY2VzcykKK3sKKwl1bnNpZ25lZCBsb25n
IGZsYWdzOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnRlc3QtPmxvY2ssIGZsYWdzKTsKKwl0ZXN0
LT5zdWNjZXNzID0gc3VjY2VzczsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0ZXN0LT5sb2Nr
LCBmbGFncyk7Cit9CisKK3N0YXRpYyBpbnQga3VuaXRfdnByaW50a19lbWl0KGludCBsZXZlbCwg
Y29uc3QgY2hhciAqZm10LCB2YV9saXN0IGFyZ3MpCit7CisJcmV0dXJuIHZwcmludGtfZW1pdCgw
LCBsZXZlbCwgTlVMTCwgMCwgZm10LCBhcmdzKTsKK30KKworc3RhdGljIGludCBrdW5pdF9wcmlu
dGtfZW1pdChpbnQgbGV2ZWwsIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQoreworCXZhX2xpc3QgYXJn
czsKKwlpbnQgcmV0OworCisJdmFfc3RhcnQoYXJncywgZm10KTsKKwlyZXQgPSBrdW5pdF92cHJp
bnRrX2VtaXQobGV2ZWwsIGZtdCwgYXJncyk7CisJdmFfZW5kKGFyZ3MpOworCisJcmV0dXJuIHJl
dDsKK30KKworc3RhdGljIHZvaWQga3VuaXRfdnByaW50ayhjb25zdCBzdHJ1Y3Qga3VuaXQgKnRl
c3QsCisJCQkgIGNvbnN0IGNoYXIgKmxldmVsLAorCQkJICBzdHJ1Y3QgdmFfZm9ybWF0ICp2YWYp
Cit7CisJa3VuaXRfcHJpbnRrX2VtaXQobGV2ZWxbMV0gLSAnMCcsICJcdCMgJXM6ICVwViIsIHRl
c3QtPm5hbWUsIHZhZik7Cit9CisKK3N0YXRpYyBib29sIGt1bml0X2hhc19wcmludGVkX3RhcF92
ZXJzaW9uOworCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF90YXBfdmVyc2lvbih2b2lkKQorewor
CWlmICgha3VuaXRfaGFzX3ByaW50ZWRfdGFwX3ZlcnNpb24pIHsKKwkJa3VuaXRfcHJpbnRrX2Vt
aXQoTE9HTEVWRUxfSU5GTywgIlRBUCB2ZXJzaW9uIDE0XG4iKTsKKwkJa3VuaXRfaGFzX3ByaW50
ZWRfdGFwX3ZlcnNpb24gPSB0cnVlOworCX0KK30KKworc3RhdGljIHNpemVfdCBrdW5pdF90ZXN0
X2Nhc2VzX2xlbihzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlcykKK3sKKwlzdHJ1Y3Qga3Vu
aXRfY2FzZSAqdGVzdF9jYXNlOworCXNpemVfdCBsZW4gPSAwOworCisJZm9yICh0ZXN0X2Nhc2Ug
PSB0ZXN0X2Nhc2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNlOyB0ZXN0X2Nhc2UrKykKKwkJbGVuKys7
CisKKwlyZXR1cm4gbGVuOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF9zdWJ0ZXN0X3N0
YXJ0KHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSkKK3sKKwlrdW5pdF9wcmludF90YXBfdmVy
c2lvbigpOworCWt1bml0X3ByaW50a19lbWl0KExPR0xFVkVMX0lORk8sICJcdCMgU3VidGVzdDog
JXNcbiIsIG1vZHVsZS0+bmFtZSk7CisJa3VuaXRfcHJpbnRrX2VtaXQoTE9HTEVWRUxfSU5GTywK
KwkJCSAgIlx0MS4uJXpkXG4iLAorCQkJICBrdW5pdF90ZXN0X2Nhc2VzX2xlbihtb2R1bGUtPnRl
c3RfY2FzZXMpKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfcHJpbnRfb2tfbm90X29rKGJvb2wg
c2hvdWxkX2luZGVudCwKKwkJCQkgIGJvb2wgaXNfb2ssCisJCQkJICBzaXplX3QgdGVzdF9udW1i
ZXIsCisJCQkJICBjb25zdCBjaGFyICpkZXNjcmlwdGlvbikKK3sKKwljb25zdCBjaGFyICppbmRl
bnQsICpva19ub3Rfb2s7CisKKwlpZiAoc2hvdWxkX2luZGVudCkKKwkJaW5kZW50ID0gIlx0IjsK
KwllbHNlCisJCWluZGVudCA9ICIiOworCisJaWYgKGlzX29rKQorCQlva19ub3Rfb2sgPSAib2si
OworCWVsc2UKKwkJb2tfbm90X29rID0gIm5vdCBvayI7CisKKwlrdW5pdF9wcmludGtfZW1pdChM
T0dMRVZFTF9JTkZPLAorCQkJICAiJXMlcyAlemQgLSAlc1xuIiwKKwkJCSAgaW5kZW50LCBva19u
b3Rfb2ssIHRlc3RfbnVtYmVyLCBkZXNjcmlwdGlvbik7Cit9CisKK3N0YXRpYyBib29sIGt1bml0
X21vZHVsZV9oYXNfc3VjY2VlZGVkKHN0cnVjdCBrdW5pdF9tb2R1bGUgKm1vZHVsZSkKK3sKKwlj
b25zdCBzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNlOworCWJvb2wgc3VjY2VzcyA9IHRydWU7
CisKKwlmb3IgKHRlc3RfY2FzZSA9IG1vZHVsZS0+dGVzdF9jYXNlczsgdGVzdF9jYXNlLT5ydW5f
Y2FzZTsgdGVzdF9jYXNlKyspCisJCWlmICghdGVzdF9jYXNlLT5zdWNjZXNzKSB7CisJCQlzdWNj
ZXNzID0gZmFsc2U7CisJCQlicmVhazsKKwkJfQorCisJcmV0dXJuIHN1Y2Nlc3M7Cit9CisKK3N0
YXRpYyBzaXplX3Qga3VuaXRfbW9kdWxlX2NvdW50ZXIgPSAxOworCitzdGF0aWMgdm9pZCBrdW5p
dF9wcmludF9zdWJ0ZXN0X2VuZChzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUpCit7CisJa3Vu
aXRfcHJpbnRfb2tfbm90X29rKGZhbHNlLAorCQkJICAgICAga3VuaXRfbW9kdWxlX2hhc19zdWNj
ZWVkZWQobW9kdWxlKSwKKwkJCSAgICAgIGt1bml0X21vZHVsZV9jb3VudGVyKyssCisJCQkgICAg
ICBtb2R1bGUtPm5hbWUpOworfQorCitzdGF0aWMgdm9pZCBrdW5pdF9wcmludF90ZXN0X2Nhc2Vf
b2tfbm90X29rKHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UsCisJCQkJCSAgICBzaXplX3Qg
dGVzdF9udW1iZXIpCit7CisJa3VuaXRfcHJpbnRfb2tfbm90X29rKHRydWUsCisJCQkgICAgICB0
ZXN0X2Nhc2UtPnN1Y2Nlc3MsCisJCQkgICAgICB0ZXN0X251bWJlciwKKwkJCSAgICAgIHRlc3Rf
Y2FzZS0+bmFtZSk7Cit9CisKK3ZvaWQga3VuaXRfaW5pdF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVz
dCwgY29uc3QgY2hhciAqbmFtZSkKK3sKKwlzcGluX2xvY2tfaW5pdCgmdGVzdC0+bG9jayk7CisJ
dGVzdC0+bmFtZSA9IG5hbWU7CisJdGVzdC0+c3VjY2VzcyA9IHRydWU7Cit9CisKKy8qCisgKiBQ
ZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEgdGVzdCBjYXNlLgorICovCitzdGF0aWMgdm9pZCBr
dW5pdF9ydW5fY2FzZShzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUsCisJCQkgICBzdHJ1Y3Qg
a3VuaXRfY2FzZSAqdGVzdF9jYXNlKQoreworCXN0cnVjdCBrdW5pdCB0ZXN0OworCWludCByZXQg
PSAwOworCisJa3VuaXRfaW5pdF90ZXN0KCZ0ZXN0LCB0ZXN0X2Nhc2UtPm5hbWUpOworCisJaWYg
KG1vZHVsZS0+aW5pdCkgeworCQlyZXQgPSBtb2R1bGUtPmluaXQoJnRlc3QpOworCQlpZiAocmV0
KSB7CisJCQlrdW5pdF9lcnIoJnRlc3QsICJmYWlsZWQgdG8gaW5pdGlhbGl6ZTogJWRcbiIsIHJl
dCk7CisJCQlrdW5pdF9zZXRfc3VjY2VzcygmdGVzdCwgZmFsc2UpOworCQkJcmV0dXJuOworCQl9
CisJfQorCisJaWYgKCFyZXQpCisJCXRlc3RfY2FzZS0+cnVuX2Nhc2UoJnRlc3QpOworCisJaWYg
KG1vZHVsZS0+ZXhpdCkKKwkJbW9kdWxlLT5leGl0KCZ0ZXN0KTsKKworCXRlc3RfY2FzZS0+c3Vj
Y2VzcyA9IGt1bml0X2dldF9zdWNjZXNzKCZ0ZXN0KTsKK30KKworaW50IGt1bml0X3J1bl90ZXN0
cyhzdHJ1Y3Qga3VuaXRfbW9kdWxlICptb2R1bGUpCit7CisJc3RydWN0IGt1bml0X2Nhc2UgKnRl
c3RfY2FzZTsKKwlzaXplX3QgdGVzdF9jYXNlX2NvdW50ID0gMTsKKworCWt1bml0X3ByaW50X3N1
YnRlc3Rfc3RhcnQobW9kdWxlKTsKKworCWZvciAodGVzdF9jYXNlID0gbW9kdWxlLT50ZXN0X2Nh
c2VzOyB0ZXN0X2Nhc2UtPnJ1bl9jYXNlOyB0ZXN0X2Nhc2UrKykgeworCQlrdW5pdF9ydW5fY2Fz
ZShtb2R1bGUsIHRlc3RfY2FzZSk7CisJCWt1bml0X3ByaW50X3Rlc3RfY2FzZV9va19ub3Rfb2so
dGVzdF9jYXNlLCB0ZXN0X2Nhc2VfY291bnQrKyk7CisJfQorCisJa3VuaXRfcHJpbnRfc3VidGVz
dF9lbmQobW9kdWxlKTsKKworCXJldHVybiAwOworfQorCit2b2lkIGt1bml0X3ByaW50ayhjb25z
dCBjaGFyICpsZXZlbCwKKwkJICBjb25zdCBzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCSAgY29uc3Qg
Y2hhciAqZm10LCAuLi4pCit7CisJc3RydWN0IHZhX2Zvcm1hdCB2YWY7CisJdmFfbGlzdCBhcmdz
OworCisJdmFfc3RhcnQoYXJncywgZm10KTsKKworCXZhZi5mbXQgPSBmbXQ7CisJdmFmLnZhID0g
JmFyZ3M7CisKKwlrdW5pdF92cHJpbnRrKHRlc3QsIGxldmVsLCAmdmFmKTsKKworCXZhX2VuZChh
cmdzKTsKK30KLS0gCjIuMjIuMC40MTAuZ2Q4ZmRiZTIxYjUtZ29vZwoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApk
cmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
