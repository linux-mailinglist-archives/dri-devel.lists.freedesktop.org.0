Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id CA3AA25BDCD
	for <lists+dri-devel@lfdr.de>; Thu,  3 Sep 2020 10:50:34 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 67ADB6E59B;
	Thu,  3 Sep 2020 08:50:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from hqnvemgate25.nvidia.com (hqnvemgate25.nvidia.com
 [216.228.121.64])
 by gabe.freedesktop.org (Postfix) with ESMTPS id EF8076E4D0
 for <dri-devel@lists.freedesktop.org>; Wed,  2 Sep 2020 17:37:03 +0000 (UTC)
Received: from hqpgpgate102.nvidia.com (Not Verified[216.228.121.13]) by
 hqnvemgate25.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
 id <B5f4fd8100003>; Wed, 02 Sep 2020 10:36:16 -0700
Received: from hqmail.nvidia.com ([172.20.161.6])
 by hqpgpgate102.nvidia.com (PGP Universal service);
 Wed, 02 Sep 2020 10:37:03 -0700
X-PGP-Universal: processed;
 by hqpgpgate102.nvidia.com on Wed, 02 Sep 2020 10:37:03 -0700
Received: from lenny.nvidia.com (10.124.1.5) by HQMAIL107.nvidia.com
 (172.20.187.13) with Microsoft SMTP Server (TLS) id 15.0.1473.3; Wed, 2 Sep
 2020 17:37:02 +0000
From: Daniel Dadap <ddadap@nvidia.com>
To: <platform-driver-x86@vger.kernel.org>
Subject: [PATCH v4] platform/x86: Add new vga-switcheroo gmux driver for
 ACPI-driven muxes
Date: Wed, 2 Sep 2020 12:38:51 -0500
Message-ID: <20200902173851.224368-1-ddadap@nvidia.com>
X-Mailer: git-send-email 2.18.4
In-Reply-To: <c7dcb052-0ccf-dae3-49dd-1518f5ab182e@nvidia.com>
References: <c7dcb052-0ccf-dae3-49dd-1518f5ab182e@nvidia.com>
MIME-Version: 1.0
X-NVConfidentiality: public
X-Originating-IP: [10.124.1.5]
X-ClientProxiedBy: HQMAIL101.nvidia.com (172.20.187.10) To
 HQMAIL107.nvidia.com (172.20.187.13)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
 t=1599068177; bh=MU5NTNzSDxHUHj68r7uccHcOMuN3AN5o2gbio14ecB4=;
 h=X-PGP-Universal:From:To:CC:Subject:Date:Message-ID:X-Mailer:
 In-Reply-To:References:MIME-Version:X-NVConfidentiality:
 X-Originating-IP:X-ClientProxiedBy:Content-Type:
 Content-Transfer-Encoding;
 b=oqWRzQQRuoO/CDp8a28TteBYRLvjtvX2iDE4qJKOqw1oW7IjQMnYmibndGGH0F017
 3pzyAHPF2tuGG2hx8k5yi536ODiUvl7b5/XsmyQi32ePGlrHVrk+cuoKXw2DKDF2/8
 gOR18QCsM6kj1ptE9CJiJJ4hYsWDSUlX878H6Y8tKOlkCbdSjw4B3ufIUPFW9iF3m7
 ec3ByBIL3R8Asqw5tFUY/W4iA0qn/6F2bbR3zIIQMDPkTNClxU+P0jis2j18bouFMw
 VrTUIb+1qRZIlK+1apuGLjqQTpFs74Qs40yBABdiTUFkzWjKR3gcspMv+WCfI2tpiu
 K19V2Q6/136TA==
X-Mailman-Approved-At: Thu, 03 Sep 2020 08:50:07 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Daniel Dadap <ddadap@nvidia.com>, dri-devel@lists.freedesktop.org,
 pobrn@protonmail.com, peter@lekensteyn.nl, dvhart@infradead.org,
 andy@infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

U29tZSB1cGNvbWluZyBub3RlYm9vayBkZXNpZ25zIHV0aWxpemUgZGlzcGxheSBtdXhlcyBkcml2
ZW4gYnkgYQpwYWlyIG9mIEFDUEkgbWV0aG9kcywgTVhETSB0byBxdWVyeSBhbmQgY29uZmlndXJl
IHRoZSBvcGVyYXRpb25hbAptb2RlIG9mIHRoZSBtdXggKGludGVncmF0ZWQgb25seSwgZGlzY3Jl
dGUgb25seSwgaHlicmlkIG5vbi1tdXhlZCwKaHlicmlkIHdpdGggZHluYW1pYyBtdXggc3dpdGNo
aW5nKSwgYW5kIE1YRFMgdG8gcXVlcnkgYW5kIHNldCB0aGUKbXV4IHN0YXRlIHdoZW4gcnVubmlu
ZyBpbiBkeW5hbWljIHN3aXRjaCBtb2RlLgoKQWRkIGEgdmdhLXN3aXRjaGVyb28gZHJpdmVyIHRv
IHN1cHBvcnQgc3dpdGNoaW5nIHRoZSBtdXggb24gc3lzdGVtcwp3aXRoIHRoZSBBQ1BJIE1YRE0v
TVhEUyBpbnRlcmZhY2UuIFRoZSBtdXggbW9kZSBjYW5ub3QgYmUgY2hhbmdlZApkeW5hbWljYWxs
eSAoY2FsbGluZyBNWERNIHRvIGNoYW5nZSB0aGUgbW9kZSB3b24ndCBoYXZlIGVmZmVjdCB1bnRp
bAp0aGUgbmV4dCBib290LCBhbmQgY2FsbGluZyBNWERNIHRvIHJlYWQgdGhlIG11eCBtb2RlIHJl
dHVybnMgdGhlCmFjdGl2ZSBtb2RlLCBub3QgdGhlIG1vZGUgdGhhdCB3aWxsIGJlIGVuYWJsZWQg
b24gbmV4dCBib290KSwgYW5kCk1YRFMgb25seSB3b3JrcyB3aGVuIHRoZSBtdXggbW9kZSBpcyBz
ZXQgdG8gZHluYW1pYyBzd2l0Y2gsIHNvIHRoaXMKZHJpdmVyIHdpbGwgZmFpbCB0byBsb2FkIHdo
ZW4gTVhETSByZXBvcnRzIGFueSBub24tZHluYW1pYyBtb2RlLgoKVGhpcyBkcml2ZXIgY3VycmVu
dGx5IG9ubHkgc3VwcG9ydHMgc3lzdGVtcyB3aXRoIEludGVsIGludGVncmF0ZWQKZ3JhcGhpY3Mg
YW5kIE5WSURJQSBkaXNjcmV0ZSBncmFwaGljcy4gSXQgd2lsbCBuZWVkIHRvIGJlIHVwZGF0ZWQg
aWYKZGVzaWducyBhcmUgZGV2ZWxvcGVkIHVzaW5nIHRoZSBzYW1lIGludGVyZmFjZXMgd2hpY2gg
dXRpbGl6ZSBHUFVzCmZyb20gb3RoZXIgdmVuZG9ycy4KCnYyLHYzOiBtaXNjLiBmaXhlcyBzdWdn
ZXN0ZWQgYnkgQmFybmFiw6FzIFDFkWN6ZSA8cG9icm5AcHJvdG9ubWFpbC5jb20+CnY0OiBtaXNj
LiBjaGFuZ2VzIHN1Z2dlc3RlZCBieSBMdWthcyBXdW5uZXIgPGx1a2FzQHd1bm5lci5kZT4KClNp
Z25lZC1vZmYtYnk6IERhbmllbCBEYWRhcCA8ZGRhZGFwQG52aWRpYS5jb20+Ci0tLQogTUFJTlRB
SU5FUlMgICAgICAgICAgICAgICAgICAgICAgfCAgIDYgKwogZHJpdmVycy9wbGF0Zm9ybS94ODYv
S2NvbmZpZyAgICAgfCAgIDkgKysKIGRyaXZlcnMvcGxhdGZvcm0veDg2L01ha2VmaWxlICAgIHwg
ICAyICsKIGRyaXZlcnMvcGxhdGZvcm0veDg2L214ZHMtZ211eC5jIHwgMjY1ICsrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysKIDQgZmlsZXMgY2hhbmdlZCwgMjgyIGluc2VydGlvbnMoKykK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL3BsYXRmb3JtL3g4Ni9teGRzLWdtdXguYwoKZGlm
ZiAtLWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggZWVmZjU1NTYwNzU5Li42
MzZjOTI1OWIzNDUgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBA
IC0xMTUxMCw2ICsxMTUxMCwxMiBAQCBMOglsaW51eC11c2JAdmdlci5rZXJuZWwub3JnCiBTOglN
YWludGFpbmVkCiBGOglkcml2ZXJzL3VzYi9tdXNiLwogCitNWERTIEdNVVggRFJJVkVSCitNOglE
YW5pZWwgRGFkYXAgPGRkYWRhcEBudmlkaWEuY29tPgorTDoJcGxhdGZvcm0tZHJpdmVyLXg4NkB2
Z2VyLmtlcm5lbC5vcmcKK1M6CVN1cHBvcnRlZAorRjoJZHJpdmVycy9wbGF0Zm9ybS94ODYvbXhk
cy1nbXV4LmMKKwogTVhMMzAxUkYgTUVESUEgRFJJVkVSCiBNOglBa2loaXJvIFRzdWthZGEgPHRz
a2QwOEBnbWFpbC5jb20+CiBMOglsaW51eC1tZWRpYUB2Z2VyLmtlcm5lbC5vcmcKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvcGxhdGZvcm0veDg2L0tjb25maWcgYi9kcml2ZXJzL3BsYXRmb3JtL3g4Ni9L
Y29uZmlnCmluZGV4IDBhZDdhZDhjZjhlMS4uNWQwMGFkMWZmYzBlIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3BsYXRmb3JtL3g4Ni9LY29uZmlnCisrKyBiL2RyaXZlcnMvcGxhdGZvcm0veDg2L0tjb25m
aWcKQEAgLTEzNjgsNiArMTM2OCwxNSBAQCBjb25maWcgSU5URUxfVEVMRU1FVFJZCiAJICBkaXJl
Y3RseSB2aWEgZGVidWdmcyBmaWxlcy4gVmFyaW91cyB0b29scyBtYXkgdXNlCiAJICB0aGlzIGlu
dGVyZmFjZSBmb3IgU29DIHN0YXRlIG1vbml0b3JpbmcuCiAKK2NvbmZpZyBNWERTX0dNVVgKKwl0
cmlzdGF0ZSAiQUNQSSBNWERTIEdtdXggRHJpdmVyIgorCWRlcGVuZHMgb24gQUNQSV9XTUkKKwlk
ZXBlbmRzIG9uIEFDUEkKKwlkZXBlbmRzIG9uIFZHQV9TV0lUQ0hFUk9PCisJaGVscAorCSAgVGhp
cyBkcml2ZXIgcHJvdmlkZXMgc3VwcG9ydCBmb3IgQUNQSS1kcml2ZW4gZ211eCBkZXZpY2VzIHdo
aWNoIGFyZQorCSAgcHJlc2VudCBvbiBzb21lIG5vdGVib29rIGRlc2lnbnMgd2l0aCBoeWJyaWQg
Z3JhcGhpY3MuCisKIGVuZGlmICMgWDg2X1BMQVRGT1JNX0RFVklDRVMKIAogY29uZmlnIFBNQ19B
VE9NCmRpZmYgLS1naXQgYS9kcml2ZXJzL3BsYXRmb3JtL3g4Ni9NYWtlZmlsZSBiL2RyaXZlcnMv
cGxhdGZvcm0veDg2L01ha2VmaWxlCmluZGV4IDUzNDA4ZDk2NTg3NC4uYjc5MDAwNzMzZmFlIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3BsYXRmb3JtL3g4Ni9NYWtlZmlsZQorKysgYi9kcml2ZXJzL3Bs
YXRmb3JtL3g4Ni9NYWtlZmlsZQpAQCAtMTQ2LDMgKzE0Niw1IEBAIG9iai0kKENPTkZJR19JTlRF
TF9URUxFTUVUUlkpCQkrPSBpbnRlbF90ZWxlbWV0cnlfY29yZS5vIFwKIAkJCQkJICAgaW50ZWxf
dGVsZW1ldHJ5X3BsdGRydi5vIFwKIAkJCQkJICAgaW50ZWxfdGVsZW1ldHJ5X2RlYnVnZnMubwog
b2JqLSQoQ09ORklHX1BNQ19BVE9NKQkJCSs9IHBtY19hdG9tLm8KKworb2JqLSQoQ09ORklHX01Y
RFNfR01VWCkJCQkrPSBteGRzLWdtdXgubwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9wbGF0Zm9ybS94
ODYvbXhkcy1nbXV4LmMgYi9kcml2ZXJzL3BsYXRmb3JtL3g4Ni9teGRzLWdtdXguYwpuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmRkN2Y2ZWRhZjBmMwotLS0gL2Rldi9u
dWxsCisrKyBiL2RyaXZlcnMvcGxhdGZvcm0veDg2L214ZHMtZ211eC5jCkBAIC0wLDAgKzEsMjY1
IEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CisvKgorICogbXhk
cy1nbXV4OiB2Z2Ffc3dpdGNoZXJvbyBtdXggaGFuZGxlciBmb3IgQUNQSSBNWERTIG11eGVzCisg
KgorICogQ29weXJpZ2h0IChDKSAyMDIwIE5WSURJQSBDb3Jwb3JhdGlvbgorICoKKyAqIFRoaXMg
cHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3Ig
bW9kaWZ5IGl0CisgKiB1bmRlciB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhlIEdOVSBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlLAorICogdmVyc2lvbiAyLCBhcyBwdWJsaXNoZWQgYnkgdGhl
IEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbi4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJp
YnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQKKyAq
IEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNI
QU5UQUJJTElUWSBvcgorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUg
dGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvcgorICogbW9yZSBkZXRhaWxzLgorICoK
KyAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1
YmxpYyBMaWNlbnNlCisgKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCBzZWUgPGh0
dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcz4uCisgKgorICovCisKKyNkZWZpbmUgcHJfZm10KGZt
dCkgS0JVSUxEX01PRE5BTUUgIjogIiBmbXQKKworI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgor
I2luY2x1ZGUgPGxpbnV4L2FjcGkuaD4KKyNpbmNsdWRlIDxsaW51eC9wY2kuaD4KKyNpbmNsdWRl
IDxsaW51eC92Z2Ffc3dpdGNoZXJvby5oPgorI2luY2x1ZGUgPGxpbnV4L2RlbGF5Lmg+CisKK01P
RFVMRV9MSUNFTlNFKCJHUEwgdjIiKTsKK01PRFVMRV9ERVNDUklQVElPTigidmdhX3N3aXRjaGVy
b28gbXV4IGhhbmRsZXIgZm9yIEFDUEkgTVhEUyBtdXhlcyIpOworTU9EVUxFX0FVVEhPUigiRGFu
aWVsIERhZGFwIDxkZGFkYXBAbnZpZGlhLmNvbT4iKTsKKworLyoKKyAqIFRoZSBtdXggZG9lc24n
dCBoYXZlIGl0cyBvd24gQUNQSSBISUQvQ0lELCBvciBXTUkgd3JhcHBlciwgc28ga2V5IG9mZiBv
ZgorICogdGhlIFdNSSB3cmFwcGVyIGZvciB0aGUgcmVsYXRlZCBXTUFBIG1ldGhvZCBmb3IgYmFj
a2xpZ2h0IGNvbnRyb2wuCisgKi8KK01PRFVMRV9BTElBUygid21pOjYwM0U5NjEzLUVGMjUtNDMz
OC1BM0QwLUM0NjE3NzUxNkRCNyIpOworCitzdGF0aWMgc3RydWN0IHBjaV9kZXYgKmlnX2Rldiwg
KmRnX2RldjsKK3N0YXRpYyBhY3BpX2hhbmRsZSBpbnRlcm5hbF9tdXhfaGFuZGxlOworc3RhdGlj
IGFjcGlfaGFuZGxlIGV4dGVybmFsX211eF9oYW5kbGU7CisKK2VudW0gYWNwaV9tZXRob2Qgewor
CU1YRE0gPSAwLAorCU1YRFMsCisJTlVNX0FDUElfTUVUSE9EUworfTsKKworc3RhdGljIGNoYXIg
KmFjcGlfbWV0aG9kc1tOVU1fQUNQSV9NRVRIT0RTXSA9IHsKKwlbTVhETV0gPSAiTVhETSIsCisJ
W01YRFNdID0gIk1YRFMiLAorfTsKKworZW51bSBtdXhfbW9kZV9jb21tYW5kIHsKKwlNVVhfTU9E
RV9HRVQgPSAwLAorfTsKKworZW51bSBtdXhfbW9kZSB7CisJTVVYX01PREVfREdQVV9PTkxZID0g
MSwKKwlNVVhfTU9ERV9JR1BVX09OTFkgPSAyLAorCU1VWF9NT0RFX01TSFlCUklEID0gMywJLyog
RHVhbCBHUFUsIG11eCBzd2l0Y2hlZCB0byBpR1BVICovCisJTVVYX01PREVfRFlOQU1JQyA9IDQs
CS8qIER1YWwgR1BVLCBkeW5hbWljIG11eCBzd2l0Y2hpbmcgKi8KK307CisKKy8qCisgKiBDYWxs
IE1YRFMgd2l0aCBhcmd1bWVudCB2YWx1ZSAwIHRvIHJlYWQgdGhlIGN1cnJlbnQgc3RhdGUuCisg
KiBXaGVuIHJlYWRpbmcsIGEgcmV0dXJuIHZhbHVlIG9mIDEgbWVhbnMgaUdQVSBhbmQgMiBtZWFu
cyBkR1BVLgorICogQ2FsbCBNWERTIHdpdGggYml0IDAgc2V0IHRvIGNoYW5nZSB0aGUgY3VycmVu
dCBzdGF0ZS4KKyAqIFdoZW4gY2hhbmdpbmcgc3RhdGUsIGNsZWFyIGJpdCA0IGZvciBpR1BVIGFu
ZCBzZXQgYml0IDQgZm9yIGRHUFUuCisgKi8KKworZW51bSBtdXhfc3RhdGUgeworCU1VWF9TVEFU
RV9JR1BVID0gMSwKKwlNVVhfU1RBVEVfREdQVSA9IDIsCit9OworCitlbnVtIG11eF9zdGF0ZV9j
b21tYW5kIHsKKwlNVVhfU1RBVEVfR0VUID0gMCwKKwlNVVhfU1RBVEVfU0VUX0lHUFUgPSBCSVQo
MCksCisJTVVYX1NUQVRFX1NFVF9ER1BVID0gQklUKDQpIHwgQklUKDApLAorfTsKKworc3RhdGlj
IGFjcGlfaW50ZWdlciBhY3BpX2hlbHBlcihhY3BpX2hhbmRsZSBoYW5kbGUsIGVudW0gYWNwaV9t
ZXRob2QgbWV0aG9kLAorCQkJCWFjcGlfaW50ZWdlciBhY3Rpb24pCit7CisJdW5pb24gYWNwaV9v
YmplY3QgYXJnID0geworCQkuaW50ZWdlciA9IHsgLnR5cGUgPSBBQ1BJX1RZUEVfSU5URUdFUiwg
LnZhbHVlID0gYWN0aW9uIH0KKwl9OworCXN0cnVjdCBhY3BpX29iamVjdF9saXN0IGluID0gey5j
b3VudCA9IDEsIC5wb2ludGVyID0gJmFyZ307CisJYWNwaV9pbnRlZ2VyIHJldDsKKwlhY3BpX3N0
YXR1cyBzdGF0dXM7CisKKwlzdGF0dXMgPSBhY3BpX2V2YWx1YXRlX2ludGVnZXIoaGFuZGxlLCBh
Y3BpX21ldGhvZHNbbWV0aG9kXSwgJmluLCAmcmV0KTsKKworCWlmIChBQ1BJX0ZBSUxVUkUoc3Rh
dHVzKSkgeworCQlwcl9lcnIoIkFDUEkgJXMgZmFpbGVkOiAlc1xuIiwgYWNwaV9tZXRob2RzW21l
dGhvZF0sCisJCQlhY3BpX2Zvcm1hdF9leGNlcHRpb24oc3RhdHVzKSk7CisJCXJldHVybiAwOwor
CX0KKworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBhY3BpX2ludGVnZXIgZ2V0X211eF9tb2Rl
KGFjcGlfaGFuZGxlIGhhbmRsZSkKK3sKKwlyZXR1cm4gYWNwaV9oZWxwZXIoaGFuZGxlLCBNWERN
LCBNVVhfTU9ERV9HRVQpOworfQorCitzdGF0aWMgYWNwaV9pbnRlZ2VyIGdldF9tdXhfc3RhdGUo
YWNwaV9oYW5kbGUgaGFuZGxlKQoreworCXJldHVybiBhY3BpX2hlbHBlcihoYW5kbGUsIE1YRFMs
IE1VWF9TVEFURV9HRVQpOworfQorCitzdGF0aWMgdm9pZCBzZXRfbXV4X3N0YXRlKGFjcGlfaGFu
ZGxlIGhhbmRsZSwgZW51bSBtdXhfc3RhdGUgc3RhdGUpCit7CisJZW51bSBtdXhfc3RhdGVfY29t
bWFuZCBjb21tYW5kOworCisJc3dpdGNoIChzdGF0ZSkgeworCWNhc2UgTVVYX1NUQVRFX0lHUFU6
CisJCWNvbW1hbmQgPSBNVVhfU1RBVEVfU0VUX0lHUFU7CisJCWJyZWFrOworCWNhc2UgTVVYX1NU
QVRFX0RHUFU6CisJCWNvbW1hbmQgPSBNVVhfU1RBVEVfU0VUX0RHUFU7CisJCWJyZWFrOworCWRl
ZmF1bHQ6CisJCXJldHVybjsKKwl9CisKKwlhY3BpX2hlbHBlcihoYW5kbGUsIE1YRFMsIGNvbW1h
bmQpOworfQorCitzdGF0aWMgaW50IG14ZHNfZ211eF9zd2l0Y2h0byhlbnVtIHZnYV9zd2l0Y2hl
cm9vX2NsaWVudF9pZCBpZCkKK3sKKwllbnVtIG11eF9zdGF0ZSBzdGF0ZTsKKworCXN3aXRjaCAo
aWQpIHsKKwljYXNlIFZHQV9TV0lUQ0hFUk9PX0lHRDoKKwkJc3RhdGUgPSBNVVhfU1RBVEVfSUdQ
VTsKKwkJYnJlYWs7CisJY2FzZSBWR0FfU1dJVENIRVJPT19ESVM6CisJCXN0YXRlID0gTVVYX1NU
QVRFX0RHUFU7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldHVybiAtRUlOVkFMOworCX0KKwor
CWlmIChpbnRlcm5hbF9tdXhfaGFuZGxlKSB7CisJCXNldF9tdXhfc3RhdGUoaW50ZXJuYWxfbXV4
X2hhbmRsZSwgc3RhdGUpOworCQlpZiAoZ2V0X211eF9zdGF0ZShpbnRlcm5hbF9tdXhfaGFuZGxl
KSAhPSBzdGF0ZSkKKwkJCXJldHVybiAtRUFHQUlOOworCX0KKworCWlmIChleHRlcm5hbF9tdXhf
aGFuZGxlKSB7CisJCXNldF9tdXhfc3RhdGUoZXh0ZXJuYWxfbXV4X2hhbmRsZSwgc3RhdGUpOwor
CQlpZiAoZ2V0X211eF9zdGF0ZShleHRlcm5hbF9tdXhfaGFuZGxlKSAhPSBzdGF0ZSkKKwkJCXJl
dHVybiAtRUFHQUlOOworCX0KKworCS8qIERQIEFVWCBjYW4gdGFrZSB1cCB0byAxMDBtcyB0byBz
ZXR0bGUgYWZ0ZXIgbXV4IHN3aXRjaCAqLworCW1kZWxheSgxMDApOworCisJcmV0dXJuIDA7Cit9
CisKK3N0YXRpYyBlbnVtIHZnYV9zd2l0Y2hlcm9vX2NsaWVudF9pZCBteGRzX2dtdXhfZ2V0X2Ns
aWVudF9pZCgKKwlzdHJ1Y3QgcGNpX2RldiAqZGV2KQoreworCWlmIChkZXYgPT0gaWdfZGV2KQor
CQlyZXR1cm4gVkdBX1NXSVRDSEVST09fSUdEOworCWlmIChkZXYgPT0gZGdfZGV2KQorCQlyZXR1
cm4gVkdBX1NXSVRDSEVST09fRElTOworCisJcmV0dXJuIFZHQV9TV0lUQ0hFUk9PX1VOS05PV05f
SUQ7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgdmdhX3N3aXRjaGVyb29faGFuZGxlciBoYW5k
bGVyID0geworCS5zd2l0Y2h0byA9IG14ZHNfZ211eF9zd2l0Y2h0bywKKwkuZ2V0X2NsaWVudF9p
ZCA9IG14ZHNfZ211eF9nZXRfY2xpZW50X2lkLAorfTsKKworc3RhdGljIGFjcGlfc3RhdHVzIGZp
bmRfYWNwaV9tZXRob2RzKAorCWFjcGlfaGFuZGxlIG9iamVjdCwgdTMyIG5lc3RpbmdfbGV2ZWws
IHZvaWQgKmNvbnRleHQsCisJdm9pZCAqKnJldHVybl92YWx1ZSkKK3sKKwlhY3BpX2hhbmRsZSBz
ZWFyY2g7CisKKwkvKiBJZiBlaXRoZXIgTVhETSBvciBNWERTIGlzIG1pc3NpbmcsIHdlIGNhbid0
IHVzZSB0aGlzIG9iamVjdCAqLworCWlmIChhY3BpX2dldF9oYW5kbGUob2JqZWN0LCAiTVhETSIs
ICZzZWFyY2gpKQorCQlyZXR1cm4gQUVfT0s7CisJaWYgKGFjcGlfZ2V0X2hhbmRsZShvYmplY3Qs
ICJNWERTIiwgJnNlYXJjaCkpCisJCXJldHVybiBBRV9PSzsKKworCS8qIE1YRFMgb25seSB3b3Jr
cyB3aGVuIE1YRE0gaW5kaWNhdGVzIGR5bmFtaWMgbW9kZSAqLworCWlmIChnZXRfbXV4X21vZGUo
b2JqZWN0KSAhPSBNVVhfTU9ERV9EWU5BTUlDKQorCQlyZXR1cm4gQUVfT0s7CisKKwkvKiBJbnRl
cm5hbCBkaXNwbGF5IGhhcyBfQkNMOyBleHRlcm5hbCBkb2VzIG5vdCAqLworCWlmIChhY3BpX2dl
dF9oYW5kbGUob2JqZWN0LCAiX0JDTCIsICZzZWFyY2gpKQorCQlleHRlcm5hbF9tdXhfaGFuZGxl
ID0gb2JqZWN0OworCWVsc2UKKwkJaW50ZXJuYWxfbXV4X2hhbmRsZSA9IG9iamVjdDsKKworCXJl
dHVybiBBRV9PSzsKK30KKworc3RhdGljIGludCBfX2luaXQgbXhkc19nbXV4X2luaXQodm9pZCkK
K3sKKwlpbnQgcmV0ID0gMDsKKwlzdHJ1Y3QgcGNpX2RldiAqZGV2ID0gTlVMTDsKKworCS8qIEN1
cnJlbnRseSBvbmx5IHN1cHBvcnRzIEludGVsIGludGVncmF0ZWQgYW5kIE5WSURJQSBkaXNjcmV0
ZSBHUFVzICovCisJd2hpbGUgKChkZXYgPSBwY2lfZ2V0X2NsYXNzKFBDSV9DTEFTU19ESVNQTEFZ
X1ZHQSA8PCA4LCBkZXYpKSkgeworCQkvKiBJZ25vcmUgZUdQVSAqLworCQlpZiAocGNpX2lzX3Ro
dW5kZXJib2x0X2F0dGFjaGVkKGRldikpCisJCQljb250aW51ZTsKKworCQlzd2l0Y2ggKGRldi0+
dmVuZG9yKSB7CisJCWNhc2UgUENJX1ZFTkRPUl9JRF9JTlRFTDoKKwkJCXBjaV9kZXZfcHV0KGln
X2Rldik7CisJCQlpZ19kZXYgPSBwY2lfZGV2X2dldChkZXYpOworCQkJYnJlYWs7CisJCWNhc2Ug
UENJX1ZFTkRPUl9JRF9OVklESUE6CisJCQlwY2lfZGV2X3B1dChkZ19kZXYpOworCQkJZGdfZGV2
ID0gcGNpX2Rldl9nZXQoZGV2KTsKKwkJCWJyZWFrOworCQlkZWZhdWx0OgorCQkJYnJlYWs7CisJ
CX0KKwl9CisKKwkvKiBSZXF1aXJlIGJvdGggaW50ZWdyYXRlZCBhbmQgZGlzY3JldGUgR1BVcyAq
LworCWlmICghaWdfZGV2IHx8ICFkZ19kZXYpIHsKKwkJcmV0ID0gLUVOT0RFVjsKKwkJZ290byBk
b25lOworCX0KKworCWFjcGlfd2Fsa19uYW1lc3BhY2UoQUNQSV9UWVBFX0RFVklDRSwgQUNQSV9S
T09UX09CSkVDVCwgQUNQSV9VSU5UMzJfTUFYLAorCQlmaW5kX2FjcGlfbWV0aG9kcywgTlVMTCwg
TlVMTCwgTlVMTCk7CisKKwkvKiBSZXF1aXJlIGF0IGxlYXN0IG9uZSBtdXggKi8KKwlpZiAoIWlu
dGVybmFsX211eF9oYW5kbGUgJiYgIWV4dGVybmFsX211eF9oYW5kbGUpIHsKKwkJcmV0ID0gLUVO
T0RFVjsKKwkJZ290byBkb25lOworCX0KKworCXJldCA9IHZnYV9zd2l0Y2hlcm9vX3JlZ2lzdGVy
X2hhbmRsZXIoJmhhbmRsZXIsIDApOworCitkb25lOgorCisJaWYgKHJldCkgeworCQlwY2lfZGV2
X3B1dChpZ19kZXYpOworCQlwY2lfZGV2X3B1dChkZ19kZXYpOworCX0KKworCXJldHVybiByZXQ7
Cit9Cittb2R1bGVfaW5pdChteGRzX2dtdXhfaW5pdCk7CisKK3N0YXRpYyB2b2lkIF9fZXhpdCBt
eGRzX2dtdXhfZXhpdCh2b2lkKQoreworCXZnYV9zd2l0Y2hlcm9vX3VucmVnaXN0ZXJfaGFuZGxl
cigpOworCXBjaV9kZXZfcHV0KGlnX2Rldik7CisJcGNpX2Rldl9wdXQoZGdfZGV2KTsKK30KK21v
ZHVsZV9leGl0KG14ZHNfZ211eF9leGl0KTsKLS0gCjIuMTguNAoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmkt
ZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVsCg==
