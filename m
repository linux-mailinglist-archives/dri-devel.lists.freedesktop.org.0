Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 248C51ABDA
	for <lists+dri-devel@lfdr.de>; Sun, 12 May 2019 12:49:07 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2193989A56;
	Sun, 12 May 2019 10:49:02 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from honk.sigxcpu.org (honk.sigxcpu.org [24.134.29.49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D14DB89A1A
 for <dri-devel@lists.freedesktop.org>; Sun, 12 May 2019 10:49:00 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by honk.sigxcpu.org (Postfix) with ESMTP id 874BEFB02;
 Sun, 12 May 2019 12:48:59 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at honk.sigxcpu.org
Received: from honk.sigxcpu.org ([127.0.0.1])
 by localhost (honk.sigxcpu.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id oakrKwCjTNAG; Sun, 12 May 2019 12:48:55 +0200 (CEST)
Received: by bogon.sigxcpu.org (Postfix, from userid 1000)
 id 94CDB47D5B; Sun, 12 May 2019 12:48:51 +0200 (CEST)
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
To: Kishon Vijay Abraham I <kishon@ti.com>, Rob Herring <robh+dt@kernel.org>,
 Mark Rutland <mark.rutland@arm.com>, Shawn Guo <shawnguo@kernel.org>,
 Sascha Hauer <s.hauer@pengutronix.de>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Fabio Estevam <festevam@gmail.com>, NXP Linux Team <linux-imx@nxp.com>,
 Thierry Reding <treding@nvidia.com>,
 =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>,
 Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
 Heiko Stuebner <heiko@sntech.de>, Johan Hovold <johan@kernel.org>,
 Lucas Stach <l.stach@pengutronix.de>, Abel Vesa <abel.vesa@nxp.com>,
 Li Jun <jun.li@nxp.com>, linux-kernel@vger.kernel.org,
 devicetree@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 dri-devel@lists.freedesktop.org, Robert Chiras <robert.chiras@nxp.com>,
 Sam Ravnborg <sam@ravnborg.org>, Maxime Ripard <maxime.ripard@bootlin.com>
Subject: [PATCH v11 2/2] phy: Add driver for mixel mipi dphy found on NXP's
 i.MX8 SoCs
Date: Sun, 12 May 2019 12:48:51 +0200
Message-Id: <2000bc4564175abd7966207a5e9fbb9bb7d82059.1557657814.git.agx@sigxcpu.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1557657814.git.agx@sigxcpu.org>
References: <cover.1557657814.git.agx@sigxcpu.org>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBhZGRzIHN1cHBvcnQgZm9yIHRoZSBNaXhlbCBEUEhZIGFzIGZvdW5kIG9uIGkuTVg4IENQ
VXMgYnV0IHNpbmNlCnRoaXMgaXMgYW4gSVAgY29yZSBpdCB3aWxsIGxpa2VseSBiZSBmb3VuZCBv
biBvdGhlcnMgaW4gdGhlIGZ1dHVyZS4gU28KaW5zdGVhZCBvZiBhZGRpbmcgdGhpcyB0byB0aGUg
bndsIGhvc3QgZHJpdmVyIG1ha2UgaXQgYSBnZW5lcmljIFBIWQpkcml2ZXIuCgpUaGUgZHJpdmVy
IHN1cHBvcnRzIHRoZSBpLk1YOE1RLiBTdXBwb3J0IGZvciBpLk1YOFFNIGFuZCBpLk1YOFFYUCBj
YW4gYmUKYWRkZWQgb25jZSB0aGUgbmVjZXNzYXJ5IHN5c3RlbSBjb250cm9sbGVyIGJpdHMgYXJl
IGluIHZpYQptaXhlbF9kcGh5X2RldmRhdGEuCgpTaWduZWQtb2ZmLWJ5OiBHdWlkbyBHw7xudGhl
ciA8YWd4QHNpZ3hjcHUub3JnPgpDby1kZXZlbG9wZWQtYnk6IFJvYmVydCBDaGlyYXMgPHJvYmVy
dC5jaGlyYXNAbnhwLmNvbT4KU2lnbmVkLW9mZi1ieTogUm9iZXJ0IENoaXJhcyA8cm9iZXJ0LmNo
aXJhc0BueHAuY29tPgpSZXZpZXdlZC1ieTogRmFiaW8gRXN0ZXZhbSA8ZmVzdGV2YW1AZ21haWwu
Y29tPgpSZXZpZXdlZC1ieTogU2FtIFJhdm5ib3JnIDxzYW1AcmF2bmJvcmcub3JnPgotLS0KIGRy
aXZlcnMvcGh5L2ZyZWVzY2FsZS9LY29uZmlnICAgICAgICAgICAgICAgICB8ICAxMCArCiBkcml2
ZXJzL3BoeS9mcmVlc2NhbGUvTWFrZWZpbGUgICAgICAgICAgICAgICAgfCAgIDEgKwogLi4uL3Bo
eS9mcmVlc2NhbGUvcGh5LWZzbC1pbXg4LW1pcGktZHBoeS5jICAgIHwgNTAwICsrKysrKysrKysr
KysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCA1MTEgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUg
MTAwNjQ0IGRyaXZlcnMvcGh5L2ZyZWVzY2FsZS9waHktZnNsLWlteDgtbWlwaS1kcGh5LmMKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3BoeS9mcmVlc2NhbGUvS2NvbmZpZyBiL2RyaXZlcnMvcGh5L2Zy
ZWVzY2FsZS9LY29uZmlnCmluZGV4IDgzMjY3MGI0OTUyYi4uMjQ3YmU2MmQwOTgxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL3BoeS9mcmVlc2NhbGUvS2NvbmZpZworKysgYi9kcml2ZXJzL3BoeS9mcmVl
c2NhbGUvS2NvbmZpZwpAQCAtMywzICszLDEzIEBAIGNvbmZpZyBQSFlfRlNMX0lNWDhNUV9VU0IK
IAlkZXBlbmRzIG9uIE9GICYmIEhBU19JT01FTQogCXNlbGVjdCBHRU5FUklDX1BIWQogCWRlZmF1
bHQgQVJDSF9NWEMgJiYgQVJNNjQKKworY29uZmlnIFBIWV9NSVhFTF9NSVBJX0RQSFkKKwl0cmlz
dGF0ZSAiTWl4ZWwgTUlQSSBEU0kgUEhZIHN1cHBvcnQiCisJZGVwZW5kcyBvbiBPRiAmJiBIQVNf
SU9NRU0KKwlzZWxlY3QgR0VORVJJQ19QSFkKKwlzZWxlY3QgR0VORVJJQ19QSFlfTUlQSV9EUEhZ
CisJc2VsZWN0IFJFR01BUF9NTUlPCisJaGVscAorCSAgRW5hYmxlIHRoaXMgdG8gYWRkIHN1cHBv
cnQgZm9yIHRoZSBNaXhlbCBEU0kgUEhZIGFzIGZvdW5kCisJICBvbiBOWFAncyBpLk1YOCBmYW1p
bHkgb2YgU09Dcy4KZGlmZiAtLWdpdCBhL2RyaXZlcnMvcGh5L2ZyZWVzY2FsZS9NYWtlZmlsZSBi
L2RyaXZlcnMvcGh5L2ZyZWVzY2FsZS9NYWtlZmlsZQppbmRleCBkYzJiM2YxZjJmODAuLjA3NDkx
YzkyNmEyYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9waHkvZnJlZXNjYWxlL01ha2VmaWxlCisrKyBi
L2RyaXZlcnMvcGh5L2ZyZWVzY2FsZS9NYWtlZmlsZQpAQCAtMSArMSwyIEBACiBvYmotJChDT05G
SUdfUEhZX0ZTTF9JTVg4TVFfVVNCKQkrPSBwaHktZnNsLWlteDhtcS11c2Iubworb2JqLSQoQ09O
RklHX1BIWV9NSVhFTF9NSVBJX0RQSFkpCSs9IHBoeS1mc2wtaW14OC1taXBpLWRwaHkubwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9waHkvZnJlZXNjYWxlL3BoeS1mc2wtaW14OC1taXBpLWRwaHkuYyBi
L2RyaXZlcnMvcGh5L2ZyZWVzY2FsZS9waHktZnNsLWlteDgtbWlwaS1kcGh5LmMKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5hMmVjOGI3OTI0OWQKLS0tIC9kZXYvbnVs
bAorKysgYi9kcml2ZXJzL3BoeS9mcmVlc2NhbGUvcGh5LWZzbC1pbXg4LW1pcGktZHBoeS5jCkBA
IC0wLDAgKzEsNTAwIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCsKKy8q
CisgKiBDb3B5cmlnaHQgMjAxNywyMDE4IE5YUAorICogQ29weXJpZ2h0IDIwMTkgUHVyaXNtIFNQ
QworICovCisKKyNpbmNsdWRlIDxsaW51eC9jbGsuaD4KKyNpbmNsdWRlIDxsaW51eC9jbGstcHJv
dmlkZXIuaD4KKyNpbmNsdWRlIDxsaW51eC9kZWxheS5oPgorI2luY2x1ZGUgPGxpbnV4L2lvLmg+
CisjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+Cisj
aW5jbHVkZSA8bGludXgvb2YuaD4KKyNpbmNsdWRlIDxsaW51eC9vZl9wbGF0Zm9ybS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3BoeS9waHkuaD4KKyNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kZXZpY2Uu
aD4KKyNpbmNsdWRlIDxsaW51eC9yZWdtYXAuaD4KKworLyogRFBIWSByZWdpc3RlcnMgKi8KKyNk
ZWZpbmUgRFBIWV9QRF9EUEhZCQkJMHgwMAorI2RlZmluZSBEUEhZX01fUFJHX0hTX1BSRVBBUkUJ
CTB4MDQKKyNkZWZpbmUgRFBIWV9NQ19QUkdfSFNfUFJFUEFSRQkJMHgwOAorI2RlZmluZSBEUEhZ
X01fUFJHX0hTX1pFUk8JCTB4MGMKKyNkZWZpbmUgRFBIWV9NQ19QUkdfSFNfWkVSTwkJMHgxMAor
I2RlZmluZSBEUEhZX01fUFJHX0hTX1RSQUlMCQkweDE0CisjZGVmaW5lIERQSFlfTUNfUFJHX0hT
X1RSQUlMCQkweDE4CisjZGVmaW5lIERQSFlfUERfUExMCQkJMHgxYworI2RlZmluZSBEUEhZX1RT
VAkJCTB4MjAKKyNkZWZpbmUgRFBIWV9DTgkJCQkweDI0CisjZGVmaW5lIERQSFlfQ00JCQkJMHgy
OAorI2RlZmluZSBEUEhZX0NPCQkJCTB4MmMKKyNkZWZpbmUgRFBIWV9MT0NLCQkJMHgzMAorI2Rl
ZmluZSBEUEhZX0xPQ0tfQllQCQkJMHgzNAorI2RlZmluZSBEUEhZX1JFR19CWVBBU1NfUExMCQkw
eDRDCisKKyNkZWZpbmUgTUJQUyh4KSAoKHgpICogMTAwMDAwMCkKKworI2RlZmluZSBEQVRBX1JB
VEVfTUFYX1NQRUVEIE1CUFMoMTUwMCkKKyNkZWZpbmUgREFUQV9SQVRFX01JTl9TUEVFRCBNQlBT
KDgwKQorCisjZGVmaW5lIFBMTF9MT0NLX1NMRUVQIDEwCisjZGVmaW5lIFBMTF9MT0NLX1RJTUVP
VVQgMTAwMAorCisjZGVmaW5lIENOX0JVRgkweGNiN2E4OWMwCisjZGVmaW5lIENPX0JVRgkweDYz
CisjZGVmaW5lIENNKHgpCSgJCQkJICBcCisJCSgoeCkgPAkzMikgPyAweGUwIHwgKCh4KSAtIDE2
KSA6IFwKKwkJKCh4KSA8CTY0KSA/IDB4YzAgfCAoKHgpIC0gMzIpIDogXAorCQkoKHgpIDwgMTI4
KSA/IDB4ODAgfCAoKHgpIC0gNjQpIDogXAorCQkoKHgpIC0gMTI4KSkKKyNkZWZpbmUgQ04oeCkJ
KCgoeCkgPT0gMSkgPyAweDFmIDogKCgoQ05fQlVGKSA+PiAoKHgpIC0gMSkpICYgMHgxZikpCisj
ZGVmaW5lIENPKHgpCSgoQ09fQlVGKSA+PiAoOCAtICh4KSkgJiAweDAzKQorCisvKiBQSFkgcG93
ZXIgb24gaXMgYWN0aXZlIGxvdyAqLworI2RlZmluZSBQV1JfT04JMAorI2RlZmluZSBQV1JfT0ZG
CTEKKworZW51bSBtaXhlbF9kcGh5X2RldnR5cGUgeworCU1JWEVMX0lNWDhNUSwKK307CisKK3N0
cnVjdCBtaXhlbF9kcGh5X2RldmRhdGEgeworCXU4IHJlZ190eF9yY2FsOworCXU4IHJlZ19hdXRv
X3BkX2VuOworCXU4IHJlZ19yeGxwcnA7CisJdTggcmVnX3J4Y2RycDsKKwl1OCByZWdfcnhoc19z
ZXR0bGU7Cit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IG1peGVsX2RwaHlfZGV2ZGF0YSBtaXhl
bF9kcGh5X2RldmRhdGFbXSA9IHsKKwlbTUlYRUxfSU1YOE1RXSA9IHsKKwkJLnJlZ190eF9yY2Fs
ID0gMHgzOCwKKwkJLnJlZ19hdXRvX3BkX2VuID0gMHgzYywKKwkJLnJlZ19yeGxwcnAgPSAweDQw
LAorCQkucmVnX3J4Y2RycCA9IDB4NDQsCisJCS5yZWdfcnhoc19zZXR0bGUgPSAweDQ4LAorCX0s
Cit9OworCitzdHJ1Y3QgbWl4ZWxfZHBoeV9jZmcgeworCS8qIERQSFkgUExMIHBhcmFtZXRlcnMg
Ki8KKwl1MzIgY207CisJdTMyIGNuOworCXUzMiBjbzsKKwkvKiBEUEhZIHJlZ2lzdGVyIHZhbHVl
cyAqLworCXU4IG1jX3ByZ19oc19wcmVwYXJlOworCXU4IG1fcHJnX2hzX3ByZXBhcmU7CisJdTgg
bWNfcHJnX2hzX3plcm87CisJdTggbV9wcmdfaHNfemVybzsKKwl1OCBtY19wcmdfaHNfdHJhaWw7
CisJdTggbV9wcmdfaHNfdHJhaWw7CisJdTggcnhoc19zZXR0bGU7Cit9OworCitzdHJ1Y3QgbWl4
ZWxfZHBoeV9wcml2IHsKKwlzdHJ1Y3QgbWl4ZWxfZHBoeV9jZmcgY2ZnOworCXN0cnVjdCByZWdt
YXAgKnJlZ21hcDsKKwlzdHJ1Y3QgY2xrICpwaHlfcmVmX2NsazsKKwljb25zdCBzdHJ1Y3QgbWl4
ZWxfZHBoeV9kZXZkYXRhICpkZXZkYXRhOworfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCByZWdt
YXBfY29uZmlnIG1peGVsX2RwaHlfcmVnbWFwX2NvbmZpZyA9IHsKKwkucmVnX2JpdHMgPSA4LAor
CS52YWxfYml0cyA9IDMyLAorCS5yZWdfc3RyaWRlID0gNCwKKwkubWF4X3JlZ2lzdGVyID0gRFBI
WV9SRUdfQllQQVNTX1BMTCwKKwkubmFtZSA9ICJtaXBpLWRwaHkiLAorfTsKKworc3RhdGljIGlu
dCBwaHlfd3JpdGUoc3RydWN0IHBoeSAqcGh5LCB1MzIgdmFsdWUsIHVuc2lnbmVkIGludCByZWcp
Cit7CisJc3RydWN0IG1peGVsX2RwaHlfcHJpdiAqcHJpdiA9IHBoeV9nZXRfZHJ2ZGF0YShwaHkp
OworCWludCByZXQ7CisKKwlyZXQgPSByZWdtYXBfd3JpdGUocHJpdi0+cmVnbWFwLCByZWcsIHZh
bHVlKTsKKwlpZiAocmV0IDwgMCkKKwkJZGV2X2VycigmcGh5LT5kZXYsICJGYWlsZWQgdG8gd3Jp
dGUgRFBIWSByZWcgJWQ6ICVkXG4iLCByZWcsCisJCQlyZXQpOworCXJldHVybiByZXQ7Cit9CisK
Ky8qCisgKiBGaW5kIGEgcmF0aW8gY2xvc2UgdG8gdGhlIGRlc2lyZWQgb25lIHVzaW5nIGNvbnRp
bnVlZCBmcmFjdGlvbgorICogYXBwcm94aW1hdGlvbiBlbmRpbmcgZWl0aGVyIGF0IGV4YWN0IG1h
dGNoIG9yIG1heGltdW0gYWxsb3dlZAorICogbm9taW5hdG9yLCBkZW5vbWluYXRvci4KKyAqLwor
c3RhdGljIHZvaWQgZ2V0X2Jlc3RfcmF0aW8odTMyICpwbnVtLCB1MzIgKnBkZW5vbSwgdTMyIG1h
eF9uLCB1MzIgbWF4X2QpCit7CisJdTMyIGEgPSAqcG51bTsKKwl1MzIgYiA9ICpwZGVub207CisJ
dTMyIGM7CisJdTMyIG5bXSA9IHswLCAxfTsKKwl1MzIgZFtdID0gezEsIDB9OworCXUzMiB3aG9s
ZTsKKwl1bnNpZ25lZCBpbnQgaSA9IDE7CisKKwl3aGlsZSAoYikgeworCQlpIF49IDE7CisJCXdo
b2xlID0gYSAvIGI7CisJCW5baV0gKz0gKG5baSBeIDFdICogd2hvbGUpOworCQlkW2ldICs9IChk
W2kgXiAxXSAqIHdob2xlKTsKKwkJaWYgKChuW2ldID4gbWF4X24pIHx8IChkW2ldID4gbWF4X2Qp
KSB7CisJCQlpIF49IDE7CisJCQlicmVhazsKKwkJfQorCQljID0gYSAtIChiICogd2hvbGUpOwor
CQlhID0gYjsKKwkJYiA9IGM7CisJfQorCSpwbnVtID0gbltpXTsKKwkqcGRlbm9tID0gZFtpXTsK
K30KKworc3RhdGljIGludCBtaXhlbF9kcGh5X2NvbmZpZ19mcm9tX29wdHMoc3RydWN0IHBoeSAq
cGh5LAorCSAgICAgICBzdHJ1Y3QgcGh5X2NvbmZpZ3VyZV9vcHRzX21pcGlfZHBoeSAqZHBoeV9v
cHRzLAorCSAgICAgICBzdHJ1Y3QgbWl4ZWxfZHBoeV9jZmcgKmNmZykKK3sKKwlzdHJ1Y3QgbWl4
ZWxfZHBoeV9wcml2ICpwcml2ID0gZGV2X2dldF9kcnZkYXRhKHBoeS0+ZGV2LnBhcmVudCk7CisJ
dW5zaWduZWQgbG9uZyByZWZfY2xrID0gY2xrX2dldF9yYXRlKHByaXYtPnBoeV9yZWZfY2xrKTsK
Kwl1MzIgbHBfdCwgbnVtZXJhdG9yLCBkZW5vbWluYXRvcjsKKwl1bnNpZ25lZCBsb25nIGxvbmcg
dG1wOworCXUzMiBuOworCWludCBpOworCisJaWYgKGRwaHlfb3B0cy0+aHNfY2xrX3JhdGUgPiBE
QVRBX1JBVEVfTUFYX1NQRUVEIHx8CisJICAgIGRwaHlfb3B0cy0+aHNfY2xrX3JhdGUgPCBEQVRB
X1JBVEVfTUlOX1NQRUVEKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCW51bWVyYXRvciA9IGRwaHlf
b3B0cy0+aHNfY2xrX3JhdGU7CisJZGVub21pbmF0b3IgPSByZWZfY2xrOworCWdldF9iZXN0X3Jh
dGlvKCZudW1lcmF0b3IsICZkZW5vbWluYXRvciwgMjU1LCAyNTYpOworCWlmICghbnVtZXJhdG9y
IHx8ICFkZW5vbWluYXRvcikgeworCQlkZXZfZXJyKCZwaHktPmRldiwgIkludmFsaWQgJWQvJWQg
Zm9yICVsZC8lbGRcbiIsCisJCQludW1lcmF0b3IsIGRlbm9taW5hdG9yLAorCQkJZHBoeV9vcHRz
LT5oc19jbGtfcmF0ZSwgcmVmX2Nsayk7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCXdoaWxl
ICgobnVtZXJhdG9yIDwgMTYpICYmIChkZW5vbWluYXRvciA8PSAxMjgpKSB7CisJCW51bWVyYXRv
ciA8PD0gMTsKKwkJZGVub21pbmF0b3IgPDw9IDE7CisJfQorCS8qCisJICogQ00gcmFuZ2VzIGJl
dHdlZW4gMTYgYW5kIDI1NQorCSAqIENOIHJhbmdlcyBiZXR3ZWVuIDEgYW5kIDMyCisJICogQ08g
aXMgcG93ZXIgb2YgMjogMSwgMiwgNCwgOAorCSAqLworCWkgPSBfX2ZmcyhkZW5vbWluYXRvcik7
CisJaWYgKGkgPiAzKQorCQlpID0gMzsKKwljZmctPmNuID0gZGVub21pbmF0b3IgPj4gaTsKKwlj
ZmctPmNvID0gMSA8PCBpOworCWNmZy0+Y20gPSBudW1lcmF0b3I7CisKKwlpZiAoY2ZnLT5jbSA8
IDE2IHx8IGNmZy0+Y20gPiAyNTUgfHwKKwkgICAgY2ZnLT5jbiA8IDEgfHwgY2ZnLT5jbiA+IDMy
IHx8CisJICAgIGNmZy0+Y28gPCAxIHx8IGNmZy0+Y28gPiA4KSB7CisJCWRldl9lcnIoJnBoeS0+
ZGV2LCAiSW52YWxpZCBDTS9DTi9DTyB2YWx1ZXM6ICV1LyV1LyV1XG4iLAorCQkJY2ZnLT5jbSwg
Y2ZnLT5jbiwgY2ZnLT5jbyk7CisJCWRldl9lcnIoJnBoeS0+ZGV2LCAiZm9yIGhzX2Nsay9yZWZf
Y2xrPSVsZC8lbGQgfiAlZC8lZFxuIiwKKwkJCWRwaHlfb3B0cy0+aHNfY2xrX3JhdGUsIHJlZl9j
bGssCisJCQludW1lcmF0b3IsIGRlbm9taW5hdG9yKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQor
CisJZGV2X2RiZygmcGh5LT5kZXYsICJoc19jbGsvcmVmX2Nsaz0lbGQvJWxkIH4gJWQvJWRcbiIs
CisJCWRwaHlfb3B0cy0+aHNfY2xrX3JhdGUsIHJlZl9jbGssIG51bWVyYXRvciwgZGVub21pbmF0
b3IpOworCisJLyogTFAgY2xvY2sgcGVyaW9kICovCisJdG1wID0gMTAwMDAwMDAwMDAwMExMOwor
CWRvX2Rpdih0bXAsIGRwaHlfb3B0cy0+bHBfY2xrX3JhdGUpOyAvKiBwcyAqLworCWlmICh0bXAg
PiBVTE9OR19NQVgpCisJCXJldHVybiAtRUlOVkFMOworCisJbHBfdCA9IHRtcDsKKwlkZXZfZGJn
KCZwaHktPmRldiwgIkxQIGNsb2NrICVsdSwgcGVyaW9kOiAldSBwc1xuIiwKKwkJZHBoeV9vcHRz
LT5scF9jbGtfcmF0ZSwgbHBfdCk7CisKKwkvKiBoc19wcmVwYXJlOiBpbiBscCBjbG9jayBwZXJp
b2RzICovCisJaWYgKDIgKiBkcGh5X29wdHMtPmhzX3ByZXBhcmUgPiA1ICogbHBfdCkgeworCQlk
ZXZfZXJyKCZwaHktPmRldiwKKwkJCSJoc19wcmVwYXJlICgldSkgPiAyLjUgKiBscCBjbG9jayBw
ZXJpb2QgKCV1KVxuIiwKKwkJCWRwaHlfb3B0cy0+aHNfcHJlcGFyZSwgbHBfdCk7CisJCXJldHVy
biAtRUlOVkFMOworCX0KKwkvKiAwMDogbHBfdCwgMDE6IDEuNSAqIGxwX3QsIDEwOiAyICogbHBf
dCwgMTE6IDIuNSAqIGxwX3QgKi8KKwlpZiAoZHBoeV9vcHRzLT5oc19wcmVwYXJlIDwgbHBfdCkg
eworCQluID0gMDsKKwl9IGVsc2UgeworCQl0bXAgPSAyICogKGRwaHlfb3B0cy0+aHNfcHJlcGFy
ZSAtIGxwX3QpOworCQlkb19kaXYodG1wLCBscF90KTsKKwkJbiA9IHRtcDsKKwl9CisJY2ZnLT5t
X3ByZ19oc19wcmVwYXJlID0gbjsKKworCS8qIGNsa19wcmVwYXJlOiBpbiBscCBjbG9jayBwZXJp
b2RzICovCisJaWYgKDIgKiBkcGh5X29wdHMtPmNsa19wcmVwYXJlID4gMyAqIGxwX3QpIHsKKwkJ
ZGV2X2VycigmcGh5LT5kZXYsCisJCQkiY2xrX3ByZXBhcmUgKCV1KSA+IDEuNSAqIGxwIGNsb2Nr
IHBlcmlvZCAoJXUpXG4iLAorCQkJZHBoeV9vcHRzLT5jbGtfcHJlcGFyZSwgbHBfdCk7CisJCXJl
dHVybiAtRUlOVkFMOworCX0KKwkvKiAwMDogbHBfdCwgMDE6IDEuNSAqIGxwX3QgKi8KKwljZmct
Pm1jX3ByZ19oc19wcmVwYXJlID0gZHBoeV9vcHRzLT5jbGtfcHJlcGFyZSA+IGxwX3QgPyAxIDog
MDsKKworCS8qIGhzX3plcm86IGZvcm11bGEgZnJvbSBOWFAgQlNQICovCisJbiA9ICgxNDQgKiAo
ZHBoeV9vcHRzLT5oc19jbGtfcmF0ZSAvIDEwMDAwMDApIC0gNDc1MDApIC8gMTAwMDA7CisJY2Zn
LT5tX3ByZ19oc196ZXJvID0gbiA8IDEgPyAxIDogbjsKKworCS8qIGNsa196ZXJvOiBmb3JtdWxh
IGZyb20gTlhQIEJTUCAqLworCW4gPSAoMzQgKiAoZHBoeV9vcHRzLT5oc19jbGtfcmF0ZSAvIDEw
MDAwMDApIC0gMjUwMCkgLyAxMDAwOworCWNmZy0+bWNfcHJnX2hzX3plcm8gPSBuIDwgMSA/IDEg
OiBuOworCisJLyogY2xrX3RyYWlsLCBoc190cmFpbDogZm9ybXVsYSBmcm9tIE5YUCBCU1AgKi8K
KwluID0gKDEwMyAqIChkcGh5X29wdHMtPmhzX2Nsa19yYXRlIC8gMTAwMDAwMCkgKyAxMDAwMCkg
LyAxMDAwMDsKKwlpZiAobiA+IDE1KQorCQluID0gMTU7CisJaWYgKG4gPCAxKQorCQluID0gMTsK
KwljZmctPm1fcHJnX2hzX3RyYWlsID0gbjsKKwljZmctPm1jX3ByZ19oc190cmFpbCA9IG47CisK
KwkvKiByeGhzX3NldHRsZTogZm9ybXVsYSBmcm9tIE5YUCBCU1AgKi8KKwlpZiAoZHBoeV9vcHRz
LT5oc19jbGtfcmF0ZSA8IE1CUFMoODApKQorCQljZmctPnJ4aHNfc2V0dGxlID0gMHgwZDsKKwll
bHNlIGlmIChkcGh5X29wdHMtPmhzX2Nsa19yYXRlIDwgTUJQUyg5MCkpCisJCWNmZy0+cnhoc19z
ZXR0bGUgPSAweDBjOworCWVsc2UgaWYgKGRwaHlfb3B0cy0+aHNfY2xrX3JhdGUgPCBNQlBTKDEy
NSkpCisJCWNmZy0+cnhoc19zZXR0bGUgPSAweDBiOworCWVsc2UgaWYgKGRwaHlfb3B0cy0+aHNf
Y2xrX3JhdGUgPCBNQlBTKDE1MCkpCisJCWNmZy0+cnhoc19zZXR0bGUgPSAweDBhOworCWVsc2Ug
aWYgKGRwaHlfb3B0cy0+aHNfY2xrX3JhdGUgPCBNQlBTKDIyNSkpCisJCWNmZy0+cnhoc19zZXR0
bGUgPSAweDA5OworCWVsc2UgaWYgKGRwaHlfb3B0cy0+aHNfY2xrX3JhdGUgPCBNQlBTKDUwMCkp
CisJCWNmZy0+cnhoc19zZXR0bGUgPSAweDA4OworCWVsc2UKKwkJY2ZnLT5yeGhzX3NldHRsZSA9
IDB4MDc7CisKKwlkZXZfZGJnKCZwaHktPmRldiwgImhzX3ByZXBhcmU6ICV1LCBjbGtfcHJlcGFy
ZTogJXUsICIKKwkJImhzX3plcm86ICV1LCBjbGtfemVybzogJXUsICIKKwkJImhzX3RyYWlsOiAl
dSwgY2xrX3RyYWlsOiAldSwgIgorCQkicnhoc19zZXR0bGU6ICV1XG4iLAorCQljZmctPm1fcHJn
X2hzX3ByZXBhcmUsIGNmZy0+bWNfcHJnX2hzX3ByZXBhcmUsCisJCWNmZy0+bV9wcmdfaHNfemVy
bywgY2ZnLT5tY19wcmdfaHNfemVybywKKwkJY2ZnLT5tX3ByZ19oc190cmFpbCwgY2ZnLT5tY19w
cmdfaHNfdHJhaWwsCisJCWNmZy0+cnhoc19zZXR0bGUpOworCisJcmV0dXJuIDA7Cit9CisKK3N0
YXRpYyB2b2lkIG1peGVsX3BoeV9zZXRfaHNfdGltaW5ncyhzdHJ1Y3QgcGh5ICpwaHkpCit7CisJ
c3RydWN0IG1peGVsX2RwaHlfcHJpdiAqcHJpdiA9IHBoeV9nZXRfZHJ2ZGF0YShwaHkpOworCisJ
cGh5X3dyaXRlKHBoeSwgcHJpdi0+Y2ZnLm1fcHJnX2hzX3ByZXBhcmUsIERQSFlfTV9QUkdfSFNf
UFJFUEFSRSk7CisJcGh5X3dyaXRlKHBoeSwgcHJpdi0+Y2ZnLm1jX3ByZ19oc19wcmVwYXJlLCBE
UEhZX01DX1BSR19IU19QUkVQQVJFKTsKKwlwaHlfd3JpdGUocGh5LCBwcml2LT5jZmcubV9wcmdf
aHNfemVybywgRFBIWV9NX1BSR19IU19aRVJPKTsKKwlwaHlfd3JpdGUocGh5LCBwcml2LT5jZmcu
bWNfcHJnX2hzX3plcm8sIERQSFlfTUNfUFJHX0hTX1pFUk8pOworCXBoeV93cml0ZShwaHksIHBy
aXYtPmNmZy5tX3ByZ19oc190cmFpbCwgRFBIWV9NX1BSR19IU19UUkFJTCk7CisJcGh5X3dyaXRl
KHBoeSwgcHJpdi0+Y2ZnLm1jX3ByZ19oc190cmFpbCwgRFBIWV9NQ19QUkdfSFNfVFJBSUwpOwor
CXBoeV93cml0ZShwaHksIHByaXYtPmNmZy5yeGhzX3NldHRsZSwgcHJpdi0+ZGV2ZGF0YS0+cmVn
X3J4aHNfc2V0dGxlKTsKK30KKworc3RhdGljIGludCBtaXhlbF9kcGh5X3NldF9wbGxfcGFyYW1z
KHN0cnVjdCBwaHkgKnBoeSkKK3sKKwlzdHJ1Y3QgbWl4ZWxfZHBoeV9wcml2ICpwcml2ID0gZGV2
X2dldF9kcnZkYXRhKHBoeS0+ZGV2LnBhcmVudCk7CisKKwlpZiAocHJpdi0+Y2ZnLmNtIDwgMTYg
fHwgcHJpdi0+Y2ZnLmNtID4gMjU1IHx8CisJICAgIHByaXYtPmNmZy5jbiA8IDEgfHwgcHJpdi0+
Y2ZnLmNuID4gMzIgfHwKKwkgICAgcHJpdi0+Y2ZnLmNvIDwgMSB8fCBwcml2LT5jZmcuY28gPiA4
KSB7CisJCWRldl9lcnIoJnBoeS0+ZGV2LCAiSW52YWxpZCBDTS9DTi9DTyB2YWx1ZXMhICgldS8l
dS8ldSlcbiIsCisJCQlwcml2LT5jZmcuY20sIHByaXYtPmNmZy5jbiwgcHJpdi0+Y2ZnLmNvKTsK
KwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCWRldl9kYmcoJnBoeS0+ZGV2LCAiVXNpbmcgQ006JXUg
Q046JXUgQ086JXVcbiIsCisJCXByaXYtPmNmZy5jbSwgcHJpdi0+Y2ZnLmNuLCBwcml2LT5jZmcu
Y28pOworCXBoeV93cml0ZShwaHksIENNKHByaXYtPmNmZy5jbSksIERQSFlfQ00pOworCXBoeV93
cml0ZShwaHksIENOKHByaXYtPmNmZy5jbiksIERQSFlfQ04pOworCXBoeV93cml0ZShwaHksIENP
KHByaXYtPmNmZy5jbyksIERQSFlfQ08pOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IG1p
eGVsX2RwaHlfY29uZmlndXJlKHN0cnVjdCBwaHkgKnBoeSwgdW5pb24gcGh5X2NvbmZpZ3VyZV9v
cHRzICpvcHRzKQoreworCXN0cnVjdCBtaXhlbF9kcGh5X3ByaXYgKnByaXYgPSBwaHlfZ2V0X2Ry
dmRhdGEocGh5KTsKKwlzdHJ1Y3QgbWl4ZWxfZHBoeV9jZmcgY2ZnID0geyAwIH07CisJaW50IHJl
dDsKKworCXJldCA9IG1peGVsX2RwaHlfY29uZmlnX2Zyb21fb3B0cyhwaHksICZvcHRzLT5taXBp
X2RwaHksICZjZmcpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKiBVcGRhdGUgdGhl
IGNvbmZpZ3VyYXRpb24gKi8KKwltZW1jcHkoJnByaXYtPmNmZywgJmNmZywgc2l6ZW9mKHN0cnVj
dCBtaXhlbF9kcGh5X2NmZykpOworCisJcGh5X3dyaXRlKHBoeSwgMHgwMCwgRFBIWV9MT0NLX0JZ
UCk7CisJcGh5X3dyaXRlKHBoeSwgMHgwMSwgcHJpdi0+ZGV2ZGF0YS0+cmVnX3R4X3JjYWwpOwor
CXBoeV93cml0ZShwaHksIDB4MDAsIHByaXYtPmRldmRhdGEtPnJlZ19hdXRvX3BkX2VuKTsKKwlw
aHlfd3JpdGUocGh5LCAweDAyLCBwcml2LT5kZXZkYXRhLT5yZWdfcnhscHJwKTsKKwlwaHlfd3Jp
dGUocGh5LCAweDAyLCBwcml2LT5kZXZkYXRhLT5yZWdfcnhjZHJwKTsKKwlwaHlfd3JpdGUocGh5
LCAweDI1LCBEUEhZX1RTVCk7CisKKwltaXhlbF9waHlfc2V0X2hzX3RpbWluZ3MocGh5KTsKKwly
ZXQgPSBtaXhlbF9kcGh5X3NldF9wbGxfcGFyYW1zKHBoeSk7CisJaWYgKHJldCA8IDApCisJCXJl
dHVybiByZXQ7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBtaXhlbF9kcGh5X3ZhbGlk
YXRlKHN0cnVjdCBwaHkgKnBoeSwgZW51bSBwaHlfbW9kZSBtb2RlLCBpbnQgc3VibW9kZSwKKwkJ
CSAgICAgICB1bmlvbiBwaHlfY29uZmlndXJlX29wdHMgKm9wdHMpCit7CisJc3RydWN0IG1peGVs
X2RwaHlfY2ZnIGNmZyA9IHsgMCB9OworCisJaWYgKG1vZGUgIT0gUEhZX01PREVfTUlQSV9EUEhZ
KQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXJldHVybiBtaXhlbF9kcGh5X2NvbmZpZ19mcm9tX29w
dHMocGh5LCAmb3B0cy0+bWlwaV9kcGh5LCAmY2ZnKTsKK30KKworc3RhdGljIGludCBtaXhlbF9k
cGh5X2luaXQoc3RydWN0IHBoeSAqcGh5KQoreworCXBoeV93cml0ZShwaHksIFBXUl9PRkYsIERQ
SFlfUERfUExMKTsKKwlwaHlfd3JpdGUocGh5LCBQV1JfT0ZGLCBEUEhZX1BEX0RQSFkpOworCisJ
cmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgbWl4ZWxfZHBoeV9leGl0KHN0cnVjdCBwaHkgKnBo
eSkKK3sKKwlwaHlfd3JpdGUocGh5LCAwLCBEUEhZX0NNKTsKKwlwaHlfd3JpdGUocGh5LCAwLCBE
UEhZX0NOKTsKKwlwaHlfd3JpdGUocGh5LCAwLCBEUEhZX0NPKTsKKworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW50IG1peGVsX2RwaHlfcG93ZXJfb24oc3RydWN0IHBoeSAqcGh5KQoreworCXN0
cnVjdCBtaXhlbF9kcGh5X3ByaXYgKnByaXYgPSBwaHlfZ2V0X2RydmRhdGEocGh5KTsKKwl1MzIg
bG9ja2VkOworCWludCByZXQ7CisKKwlyZXQgPSBjbGtfcHJlcGFyZV9lbmFibGUocHJpdi0+cGh5
X3JlZl9jbGspOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJcGh5X3dyaXRlKHBo
eSwgUFdSX09OLCBEUEhZX1BEX1BMTCk7CisJcmV0ID0gcmVnbWFwX3JlYWRfcG9sbF90aW1lb3V0
KHByaXYtPnJlZ21hcCwgRFBIWV9MT0NLLCBsb2NrZWQsCisJCQkJICAgICAgIGxvY2tlZCwgUExM
X0xPQ0tfU0xFRVAsCisJCQkJICAgICAgIFBMTF9MT0NLX1RJTUVPVVQpOworCWlmIChyZXQgPCAw
KSB7CisJCWRldl9lcnIoJnBoeS0+ZGV2LCAiQ291bGQgbm90IGdldCBEUEhZIGxvY2sgKCVkKSFc
biIsIHJldCk7CisJCWdvdG8gY2xvY2tfZGlzYWJsZTsKKwl9CisJcGh5X3dyaXRlKHBoeSwgUFdS
X09OLCBEUEhZX1BEX0RQSFkpOworCisJcmV0dXJuIDA7CitjbG9ja19kaXNhYmxlOgorCWNsa19k
aXNhYmxlX3VucHJlcGFyZShwcml2LT5waHlfcmVmX2Nsayk7CisJcmV0dXJuIHJldDsKK30KKwor
c3RhdGljIGludCBtaXhlbF9kcGh5X3Bvd2VyX29mZihzdHJ1Y3QgcGh5ICpwaHkpCit7CisJc3Ry
dWN0IG1peGVsX2RwaHlfcHJpdiAqcHJpdiA9IHBoeV9nZXRfZHJ2ZGF0YShwaHkpOworCisJcGh5
X3dyaXRlKHBoeSwgUFdSX09GRiwgRFBIWV9QRF9QTEwpOworCXBoeV93cml0ZShwaHksIFBXUl9P
RkYsIERQSFlfUERfRFBIWSk7CisKKwljbGtfZGlzYWJsZV91bnByZXBhcmUocHJpdi0+cGh5X3Jl
Zl9jbGspOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgcGh5X29wcyBt
aXhlbF9kcGh5X3BoeV9vcHMgPSB7CisJLmluaXQgPSBtaXhlbF9kcGh5X2luaXQsCisJLmV4aXQg
PSBtaXhlbF9kcGh5X2V4aXQsCisJLnBvd2VyX29uID0gbWl4ZWxfZHBoeV9wb3dlcl9vbiwKKwku
cG93ZXJfb2ZmID0gbWl4ZWxfZHBoeV9wb3dlcl9vZmYsCisJLmNvbmZpZ3VyZSA9IG1peGVsX2Rw
aHlfY29uZmlndXJlLAorCS52YWxpZGF0ZSA9IG1peGVsX2RwaHlfdmFsaWRhdGUsCisJLm93bmVy
ID0gVEhJU19NT0RVTEUsCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCBt
aXhlbF9kcGh5X29mX21hdGNoW10gPSB7CisJeyAuY29tcGF0aWJsZSA9ICJmc2wsaW14OG1xLW1p
cGktZHBoeSIsCisJICAuZGF0YSA9ICZtaXhlbF9kcGh5X2RldmRhdGFbTUlYRUxfSU1YOE1RXSB9
LAorCXsgLyogc2VudGluZWwgKi8gfSwKK307CitNT0RVTEVfREVWSUNFX1RBQkxFKG9mLCBtaXhl
bF9kcGh5X29mX21hdGNoKTsKKworc3RhdGljIGludCBtaXhlbF9kcGh5X3Byb2JlKHN0cnVjdCBw
bGF0Zm9ybV9kZXZpY2UgKnBkZXYpCit7CisJc3RydWN0IGRldmljZSAqZGV2ID0gJnBkZXYtPmRl
djsKKwlzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wID0gZGV2LT5vZl9ub2RlOworCXN0cnVjdCBwaHlf
cHJvdmlkZXIgKnBoeV9wcm92aWRlcjsKKwlzdHJ1Y3QgbWl4ZWxfZHBoeV9wcml2ICpwcml2Owor
CXN0cnVjdCByZXNvdXJjZSAqcmVzOworCXN0cnVjdCBwaHkgKnBoeTsKKwl2b2lkIF9faW9tZW0g
KmJhc2U7CisKKwlpZiAoIW5wKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCXByaXYgPSBkZXZtX2t6
YWxsb2MoZGV2LCBzaXplb2YoKnByaXYpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXByaXYpCisJCXJl
dHVybiAtRU5PTUVNOworCisJcHJpdi0+ZGV2ZGF0YSA9IG9mX2RldmljZV9nZXRfbWF0Y2hfZGF0
YSgmcGRldi0+ZGV2KTsKKwlpZiAoIXByaXYtPmRldmRhdGEpCisJCXJldHVybiAtRUlOVkFMOwor
CisJcmVzID0gcGxhdGZvcm1fZ2V0X3Jlc291cmNlKHBkZXYsIElPUkVTT1VSQ0VfTUVNLCAwKTsK
KwliYXNlID0gZGV2bV9pb3JlbWFwX3Jlc291cmNlKGRldiwgcmVzKTsKKwlpZiAoSVNfRVJSKGJh
c2UpKQorCQlyZXR1cm4gUFRSX0VSUihiYXNlKTsKKworCXByaXYtPnJlZ21hcCA9IGRldm1fcmVn
bWFwX2luaXRfbW1pbygmcGRldi0+ZGV2LCBiYXNlLAorCQkJCQkgICAgICZtaXhlbF9kcGh5X3Jl
Z21hcF9jb25maWcpOworCWlmIChJU19FUlIocHJpdi0+cmVnbWFwKSkgeworCQlkZXZfZXJyKGRl
diwgIkNvdWxkbid0IGNyZWF0ZSB0aGUgRFBIWSByZWdtYXBcbiIpOworCQlyZXR1cm4gUFRSX0VS
Uihwcml2LT5yZWdtYXApOworCX0KKworCXByaXYtPnBoeV9yZWZfY2xrID0gZGV2bV9jbGtfZ2V0
KCZwZGV2LT5kZXYsICJwaHlfcmVmIik7CisJaWYgKElTX0VSUihwcml2LT5waHlfcmVmX2Nsaykp
IHsKKwkJZGV2X2VycihkZXYsICJObyBwaHlfcmVmIGNsb2NrIGZvdW5kXG4iKTsKKwkJcmV0dXJu
IFBUUl9FUlIocHJpdi0+cGh5X3JlZl9jbGspOworCX0KKwlkZXZfZGJnKGRldiwgInBoeV9yZWYg
Y2xvY2sgcmF0ZTogJWx1XG4iLAorCQljbGtfZ2V0X3JhdGUocHJpdi0+cGh5X3JlZl9jbGspKTsK
KworCWRldl9zZXRfZHJ2ZGF0YShkZXYsIHByaXYpOworCisJcGh5ID0gZGV2bV9waHlfY3JlYXRl
KGRldiwgbnAsICZtaXhlbF9kcGh5X3BoeV9vcHMpOworCWlmIChJU19FUlIocGh5KSkgeworCQlk
ZXZfZXJyKGRldiwgIkZhaWxlZCB0byBjcmVhdGUgcGh5ICVsZFxuIiwgUFRSX0VSUihwaHkpKTsK
KwkJcmV0dXJuIFBUUl9FUlIocGh5KTsKKwl9CisJcGh5X3NldF9kcnZkYXRhKHBoeSwgcHJpdik7
CisKKwlwaHlfcHJvdmlkZXIgPSBkZXZtX29mX3BoeV9wcm92aWRlcl9yZWdpc3RlcihkZXYsIG9m
X3BoeV9zaW1wbGVfeGxhdGUpOworCisJcmV0dXJuIFBUUl9FUlJfT1JfWkVSTyhwaHlfcHJvdmlk
ZXIpOworfQorCitzdGF0aWMgc3RydWN0IHBsYXRmb3JtX2RyaXZlciBtaXhlbF9kcGh5X2RyaXZl
ciA9IHsKKwkucHJvYmUJPSBtaXhlbF9kcGh5X3Byb2JlLAorCS5kcml2ZXIgPSB7CisJCS5uYW1l
ID0gIm1peGVsLW1pcGktZHBoeSIsCisJCS5vZl9tYXRjaF90YWJsZQk9IG1peGVsX2RwaHlfb2Zf
bWF0Y2gsCisJfQorfTsKK21vZHVsZV9wbGF0Zm9ybV9kcml2ZXIobWl4ZWxfZHBoeV9kcml2ZXIp
OworCitNT0RVTEVfQVVUSE9SKCJOWFAgU2VtaWNvbmR1Y3RvciIpOworTU9EVUxFX0RFU0NSSVBU
SU9OKCJNaXhlbCBNSVBJLURTSSBQSFkgZHJpdmVyIik7CitNT0RVTEVfTElDRU5TRSgiR1BMIik7
Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZl
bA==
