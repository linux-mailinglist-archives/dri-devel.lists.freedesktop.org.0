Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id AF19BBD8FB
	for <lists+dri-devel@lfdr.de>; Wed, 25 Sep 2019 09:20:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 802946EA90;
	Wed, 25 Sep 2019 07:19:31 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0FF4C6EADA;
 Tue, 24 Sep 2019 18:13:14 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 71267ABBD;
 Tue, 24 Sep 2019 18:13:11 +0000 (UTC)
From: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
To: robh+dt@kernel.org, devicetree@vger.kernel.org, frowand.list@gmail.com,
 linux-arm-kernel@lists.infradead.org, linux-wireless@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-arm-msm@vger.kernel.org,
 dmaengine@vger.kernel.org, etnaviv@lists.freedesktop.org,
 dri-devel@lists.freedesktop.org, xen-devel@lists.xenproject.org,
 linux-tegra@vger.kernel.org, linux-media@vger.kernel.org,
 linux-pci@vger.kernel.org, Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 "Rafael J. Wysocki" <rafael@kernel.org>,
 =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <zajec5@gmail.com>,
 Sinan Kaya <okaya@kernel.org>, Andy Gross <agross@kernel.org>,
 Lucas Stach <l.stach@pengutronix.de>,
 Russell King <linux+etnaviv@armlinux.org.uk>,
 Christian Gmeiner <christian.gmeiner@gmail.com>,
 Maxime Ripard <mripard@kernel.org>, Chen-Yu Tsai <wens@csie.org>,
 Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>,
 Thierry Reding <thierry.reding@gmail.com>,
 Stanimir Varbanov <stanimir.varbanov@linaro.org>,
 Kyungmin Park <kyungmin.park@samsung.com>, Kamil Debski <kamil@wypas.org>,
 Jeongtae Park <jtp.park@samsung.com>, Andrzej Hajda <a.hajda@samsung.com>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>
Subject: [PATCH 11/11] of: simplify of_dma_config()'s arguments
Date: Tue, 24 Sep 2019 20:12:42 +0200
Message-Id: <20190924181244.7159-12-nsaenzjulienne@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190924181244.7159-1-nsaenzjulienne@suse.de>
References: <20190924181244.7159-1-nsaenzjulienne@suse.de>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 25 Sep 2019 07:19:29 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: freedreno@lists.freedesktop.org, f.fainelli@gmail.com,
 David Airlie <airlied@linux.ie>, Sean Paul <sean@poorly.run>,
 Vinod Koul <vkoul@kernel.org>, mbrugger@suse.com, wahrenst@gmx.net,
 james.quinlan@broadcom.com, Dan Williams <dan.j.williams@intel.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>, robin.murphy@arm.com,
 Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIHdpZGVzcHJlYWQgdXNlIGNhc2UgZm9yIG9mX2RtYV9jb25maWcoKSBoaWdobGlnaHRzIGEg
cmVkdW5kYW50CmFyZ3VtZW50LiBNb3N0IGNhbGxlcnMgcHJvdmlkZSBib3RoICdkZXYnIGFuZCAn
ZGV2LT5vZl9ub2RlJy4gVGhlIHJlc3QKb2YgdXNlcnMgdXNlIGl0IHRvIGNvcHkgc29tZSBkZXZp
Y2UncyAgRE1BIGNvbmZpZ3VyYXRpb24gaW50byBhIGRldmljZQpub3QgcmVwcmVzZW50ZWQgaW4g
RFQuCgpJbiBvcmRlciB0byBzaW1wbGlmeSB0aGUgY29tbW9uIHVzZSBjYXNlLCBhbmQgbWFrZSBj
b2RlIGEgbGl0dGxlIG1vcmUKZXhwbGljaXQsIGNyZWF0ZSBvZl9kbWFfY29uZmlnX2NvcHkoKSB3
aGljaCB3aWxsIHRha2UgYW5vdGhlciBkZXZpY2UncwpEVCBub2RlIGFzIGFuIGFyZ3VtZW50IGFu
ZCBzaW1wbGlmeSBvZl9kbWFfY29uZmlnKCkgYnkgcmVtb3Zpbmcgb25lIG9mCml0J3MgcmVkdW5k
YW50IGFyZ3VtZW50cy4KClNpZ25lZC1vZmYtYnk6IE5pY29sYXMgU2FlbnogSnVsaWVubmUgPG5z
YWVuemp1bGllbm5lQHN1c2UuZGU+CgotLS0KCiBkcml2ZXJzL2Jhc2UvcGxhdGZvcm0uYyAgICAg
ICAgICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2JjbWEvbWFpbi5jICAgICAgICAgICAg
ICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2RtYS9xY29tL2hpZG1hX21nbXQuYyAgICAg
ICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5j
ICAgICAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vbXNtL2FkcmVuby9hNnh4X2dtdS5jICAg
ICAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vc3VuNGkvc3VuNGlfYmFja2VuZC5jICAgICAg
ICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0veGVuL3hlbl9kcm1fZnJvbnQuYyAgICAgICAgICB8
ICAyICstCiBkcml2ZXJzL2dwdS9ob3N0MXgvYnVzLmMgICAgICAgICAgICAgICAgICAgICB8ICAy
ICstCiBkcml2ZXJzL21lZGlhL3BsYXRmb3JtL3Fjb20vdmVudXMvZmlybXdhcmUuYyB8ICAyICst
CiBkcml2ZXJzL21lZGlhL3BsYXRmb3JtL3M1cC1tZmMvczVwX21mYy5jICAgICB8ICAyICstCiBk
cml2ZXJzL29mL2RldmljZS5jICAgICAgICAgICAgICAgICAgICAgICAgICB8IDMwICsrKysrKysr
KysrKysrKysrKy0tCiBkcml2ZXJzL3hlbi9nbnRkZXYuYyAgICAgICAgICAgICAgICAgICAgICAg
ICB8ICAyICstCiBpbmNsdWRlL2xpbnV4L29mX2RldmljZS5oICAgICAgICAgICAgICAgICAgICB8
IDEyICsrKysrKy0tCiAxMyBmaWxlcyBjaGFuZ2VkLCA0OCBpbnNlcnRpb25zKCspLCAxNiBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2Jhc2UvcGxhdGZvcm0uYyBiL2RyaXZlcnMv
YmFzZS9wbGF0Zm9ybS5jCmluZGV4IGI2YzZjN2Q5N2Q1Yi4uNGUyNTIwMjhhZWU5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2Jhc2UvcGxhdGZvcm0uYworKysgYi9kcml2ZXJzL2Jhc2UvcGxhdGZvcm0u
YwpAQCAtMTIyMSw3ICsxMjIxLDcgQEAgaW50IHBsYXRmb3JtX2RtYV9jb25maWd1cmUoc3RydWN0
IGRldmljZSAqZGV2KQogCWludCByZXQgPSAwOwogCiAJaWYgKGRldi0+b2Zfbm9kZSkgewotCQly
ZXQgPSBvZl9kbWFfY29uZmlndXJlKGRldiwgZGV2LT5vZl9ub2RlLCB0cnVlKTsKKwkJcmV0ID0g
b2ZfZG1hX2NvbmZpZ3VyZShkZXYsIHRydWUpOwogCX0gZWxzZSBpZiAoaGFzX2FjcGlfY29tcGFu
aW9uKGRldikpIHsKIAkJYXR0ciA9IGFjcGlfZ2V0X2RtYV9hdHRyKHRvX2FjcGlfZGV2aWNlX25v
ZGUoZGV2LT5md25vZGUpKTsKIAkJcmV0ID0gYWNwaV9kbWFfY29uZmlndXJlKGRldiwgYXR0cik7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2JjbWEvbWFpbi5jIGIvZHJpdmVycy9iY21hL21haW4uYwpp
bmRleCA2NTM1NjE0YTdkYzEuLjRjN2U4YjM1NTI1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9iY21h
L21haW4uYworKysgYi9kcml2ZXJzL2JjbWEvbWFpbi5jCkBAIC0yMDcsNyArMjA3LDcgQEAgc3Rh
dGljIHZvaWQgYmNtYV9vZl9maWxsX2RldmljZShzdHJ1Y3QgZGV2aWNlICpwYXJlbnQsCiAKIAlj
b3JlLT5pcnEgPSBiY21hX29mX2dldF9pcnEocGFyZW50LCBjb3JlLCAwKTsKIAotCW9mX2RtYV9j
b25maWd1cmUoJmNvcmUtPmRldiwgbm9kZSwgZmFsc2UpOworCW9mX2RtYV9jb25maWd1cmUoJmNv
cmUtPmRldiwgZmFsc2UpOwogfQogCiB1bnNpZ25lZCBpbnQgYmNtYV9jb3JlX2lycShzdHJ1Y3Qg
YmNtYV9kZXZpY2UgKmNvcmUsIGludCBudW0pCmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS9xY29t
L2hpZG1hX21nbXQuYyBiL2RyaXZlcnMvZG1hL3Fjb20vaGlkbWFfbWdtdC5jCmluZGV4IDgwNmNh
MDJjNTJkNy4uNGVhOTAxNTM3OTAyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS9xY29tL2hpZG1h
X21nbXQuYworKysgYi9kcml2ZXJzL2RtYS9xY29tL2hpZG1hX21nbXQuYwpAQCAtMzg4LDcgKzM4
OCw3IEBAIHN0YXRpYyBpbnQgX19pbml0IGhpZG1hX21nbXRfb2ZfcG9wdWxhdGVfY2hhbm5lbHMo
c3RydWN0IGRldmljZV9ub2RlICpucCkKIAkJCWdvdG8gb3V0OwogCQl9CiAJCW5ld19wZGV2LT5k
ZXYub2Zfbm9kZSA9IGNoaWxkOwotCQlvZl9kbWFfY29uZmlndXJlKCZuZXdfcGRldi0+ZGV2LCBj
aGlsZCwgdHJ1ZSk7CisJCW9mX2RtYV9jb25maWd1cmUoJm5ld19wZGV2LT5kZXYsIHRydWUpOwog
CQkvKgogCQkgKiBJdCBpcyBhc3N1bWVkIHRoYXQgY2FsbGluZyBvZl9tc2lfY29uZmlndXJlIGlz
IHNhZmUgb24KIAkJICogcGxhdGZvcm1zIHdpdGggb3Igd2l0aG91dCBNU0kgc3VwcG9ydC4KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZHJ2LmMgYi9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5jCmluZGV4IDFmOWMwMWJlNDBkNy4uMTM3NWY0
MTU5M2VmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X2Rydi5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfZHJ2LmMKQEAgLTcwNiw3ICs3
MDYsNyBAQCBzdGF0aWMgaW50IF9faW5pdCBldG5hdml2X2luaXQodm9pZCkKIAkJICogZGV2aWNl
IGFzIHRoZSBHUFUgd2UgZm91bmQuIFRoaXMgYXNzdW1lcyB0aGF0IGFsbCBWaXZhbnRlCiAJCSAq
IEdQVXMgaW4gdGhlIHN5c3RlbSBzaGFyZSB0aGUgc2FtZSBETUEgY29uc3RyYWludHMuCiAJCSAq
LwotCQlvZl9kbWFfY29uZmlndXJlKCZwZGV2LT5kZXYsIG5wLCB0cnVlKTsKKwkJb2ZfZG1hX2Nv
bmZpZ3VyZV9jb3B5KCZwZGV2LT5kZXYsIG5wLCB0cnVlKTsKIAogCQlyZXQgPSBwbGF0Zm9ybV9k
ZXZpY2VfYWRkKHBkZXYpOwogCQlpZiAocmV0KSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vbXNtL2FkcmVuby9hNnh4X2dtdS5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYTZ4
eF9nbXUuYwppbmRleCA4NWYxNGZlYWZkZWMuLjgyNWZjZGM3MmJkOSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL21zbS9hZHJlbm8vYTZ4eF9nbXUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
bXNtL2FkcmVuby9hNnh4X2dtdS5jCkBAIC0xMjY4LDcgKzEyNjgsNyBAQCBpbnQgYTZ4eF9nbXVf
aW5pdChzdHJ1Y3QgYTZ4eF9ncHUgKmE2eHhfZ3B1LCBzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUp
CiAKIAlnbXUtPmRldiA9ICZwZGV2LT5kZXY7CiAKLQlvZl9kbWFfY29uZmlndXJlKGdtdS0+ZGV2
LCBub2RlLCB0cnVlKTsKKwlvZl9kbWFfY29uZmlndXJlKGdtdS0+ZGV2LCB0cnVlKTsKIAogCS8q
IEZvdyBub3csIGRvbid0IGRvIGFueXRoaW5nIGZhbmN5IHVudGlsIHdlIGdldCBvdXIgZmVldCB1
bmRlciB1cyAqLwogCWdtdS0+aWRsZV9sZXZlbCA9IEdNVV9JRExFX1NUQVRFX0FDVElWRTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9zdW40aS9zdW40aV9iYWNrZW5kLmMgYi9kcml2ZXJz
L2dwdS9kcm0vc3VuNGkvc3VuNGlfYmFja2VuZC5jCmluZGV4IDRlMjlmNGZlNGEwNS4uOTdkZDVk
MzFlMzhkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vc3VuNGkvc3VuNGlfYmFja2VuZC5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9zdW40aS9zdW40aV9iYWNrZW5kLmMKQEAgLTgwMiw3ICs4
MDIsNyBAQCBzdGF0aWMgaW50IHN1bjRpX2JhY2tlbmRfYmluZChzdHJ1Y3QgZGV2aWNlICpkZXYs
IHN0cnVjdCBkZXZpY2UgKm1hc3RlciwKIAkJICogZm9yIHVzLCBhbmQgRFJNIGRvZXNuJ3QgZG8g
cGVyLWRldmljZSBhbGxvY2F0aW9uIGVpdGhlciwgc28KIAkJICogd2Ugd291bGQgbmVlZCB0byBm
aXggRFJNIGZpcnN0Li4uCiAJCSAqLwotCQlyZXQgPSBvZl9kbWFfY29uZmlndXJlKGRybS0+ZGV2
LCBkZXYtPm9mX25vZGUsIHRydWUpOworCQlyZXQgPSBvZl9kbWFfY29uZmlndXJlX2NvcHkoZHJt
LT5kZXYsIGRldi0+b2Zfbm9kZSwgdHJ1ZSk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0Owog
CX0gZWxzZSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0veGVuL3hlbl9kcm1fZnJvbnQu
YyBiL2RyaXZlcnMvZ3B1L2RybS94ZW4veGVuX2RybV9mcm9udC5jCmluZGV4IGJhMTgyOGFjZDhj
OS4uZmEwYmZkNjUxN2ZhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0veGVuL3hlbl9kcm1f
ZnJvbnQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0veGVuL3hlbl9kcm1fZnJvbnQuYwpAQCAtNzI2
LDcgKzcyNiw3IEBAIHN0YXRpYyBpbnQgeGVuX2Rydl9wcm9iZShzdHJ1Y3QgeGVuYnVzX2Rldmlj
ZSAqeGJfZGV2LAogCSAqIG5vZGUgdG8gc2V0IGRlZmF1bHQgRE1BIG9wcy4KIAkgKi8KIAlkZXYt
PmNvaGVyZW50X2RtYV9tYXNrID0gRE1BX0JJVF9NQVNLKDMyKTsKLQlyZXQgPSBvZl9kbWFfY29u
ZmlndXJlKGRldiwgTlVMTCwgdHJ1ZSk7CisJcmV0ID0gb2ZfZG1hX2NvbmZpZ3VyZShkZXYsIHRy
dWUpOwogCWlmIChyZXQgPCAwKSB7CiAJCURSTV9FUlJPUigiQ2Fubm90IHNldHVwIERNQSBvcHMs
IHJldCAlZCIsIHJldCk7CiAJCXJldHVybiByZXQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9o
b3N0MXgvYnVzLmMgYi9kcml2ZXJzL2dwdS9ob3N0MXgvYnVzLmMKaW5kZXggMmZkYzA0MzgzYTYw
Li40ZWI1MzE5MDZlNGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2hvc3QxeC9idXMuYworKysg
Yi9kcml2ZXJzL2dwdS9ob3N0MXgvYnVzLmMKQEAgLTMzNyw3ICszMzcsNyBAQCBzdGF0aWMgaW50
IGhvc3QxeF9kZXZpY2VfdWV2ZW50KHN0cnVjdCBkZXZpY2UgKmRldiwKIAogc3RhdGljIGludCBo
b3N0MXhfZG1hX2NvbmZpZ3VyZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiB7Ci0JcmV0dXJuIG9mX2Rt
YV9jb25maWd1cmUoZGV2LCBkZXYtPm9mX25vZGUsIHRydWUpOworCXJldHVybiBvZl9kbWFfY29u
ZmlndXJlKGRldiwgdHJ1ZSk7CiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZGV2X3BtX29wcyBo
b3N0MXhfZGV2aWNlX3BtX29wcyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWVkaWEvcGxhdGZv
cm0vcWNvbS92ZW51cy9maXJtd2FyZS5jIGIvZHJpdmVycy9tZWRpYS9wbGF0Zm9ybS9xY29tL3Zl
bnVzL2Zpcm13YXJlLmMKaW5kZXggZDNkMTc0OGE3ZWY2Li44MmY0MzMyMThkOTkgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvbWVkaWEvcGxhdGZvcm0vcWNvbS92ZW51cy9maXJtd2FyZS5jCisrKyBiL2Ry
aXZlcnMvbWVkaWEvcGxhdGZvcm0vcWNvbS92ZW51cy9maXJtd2FyZS5jCkBAIC0yMzgsNyArMjM4
LDcgQEAgaW50IHZlbnVzX2Zpcm13YXJlX2luaXQoc3RydWN0IHZlbnVzX2NvcmUgKmNvcmUpCiAK
IAlwZGV2LT5kZXYub2Zfbm9kZSA9IG5wOwogCi0JcmV0ID0gb2ZfZG1hX2NvbmZpZ3VyZSgmcGRl
di0+ZGV2LCBucCwgdHJ1ZSk7CisJcmV0ID0gb2ZfZG1hX2NvbmZpZ3VyZSgmcGRldi0+ZGV2LCB0
cnVlKTsKIAlpZiAocmV0KSB7CiAJCWRldl9lcnIoY29yZS0+ZGV2LCAiZG1hIGNvbmZpZ3VyZSBm
YWlsXG4iKTsKIAkJZ290byBlcnJfdW5yZWdpc3RlcjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbWVk
aWEvcGxhdGZvcm0vczVwLW1mYy9zNXBfbWZjLmMgYi9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL3M1
cC1tZmMvczVwX21mYy5jCmluZGV4IGI3NzZmODNlMzk1ZS4uYWQzM2U3YTY1NWFhIDEwMDY0NAot
LS0gYS9kcml2ZXJzL21lZGlhL3BsYXRmb3JtL3M1cC1tZmMvczVwX21mYy5jCisrKyBiL2RyaXZl
cnMvbWVkaWEvcGxhdGZvcm0vczVwLW1mYy9zNXBfbWZjLmMKQEAgLTEwOTUsNyArMTA5NSw3IEBA
IHN0YXRpYyBzdHJ1Y3QgZGV2aWNlICpzNXBfbWZjX2FsbG9jX21lbWRldihzdHJ1Y3QgZGV2aWNl
ICpkZXYsCiAJICogdG8gYmUgdHJlYXRlZCBhcyB2YWxpZCBETUEgbWFzdGVycyB3ZSBuZWVkIGEg
Yml0IG9mIGEgaGFjayB0byBmb3JjZQogCSAqIHRoZW0gdG8gaW5oZXJpdCB0aGUgTUZDIG5vZGUn
cyBETUEgY29uZmlndXJhdGlvbi4KIAkgKi8KLQlvZl9kbWFfY29uZmlndXJlKGNoaWxkLCBkZXYt
Pm9mX25vZGUsIHRydWUpOworCW9mX2RtYV9jb25maWd1cmVfY29weShjaGlsZCwgZGV2LT5vZl9u
b2RlLCB0cnVlKTsKIAogCWlmIChkZXZpY2VfYWRkKGNoaWxkKSA9PSAwKSB7CiAJCXJldCA9IG9m
X3Jlc2VydmVkX21lbV9kZXZpY2VfaW5pdF9ieV9pZHgoY2hpbGQsIGRldi0+b2Zfbm9kZSwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvb2YvZGV2aWNlLmMgYi9kcml2ZXJzL29mL2RldmljZS5jCmluZGV4
IDFkMGIxMTI3ZDA1ZS4uNjY3MjZhMjQ5OWQzIDEwMDY0NAotLS0gYS9kcml2ZXJzL29mL2Rldmlj
ZS5jCisrKyBiL2RyaXZlcnMvb2YvZGV2aWNlLmMKQEAgLTc1LDE5ICs3NSwxOCBAQCBpbnQgb2Zf
ZGV2aWNlX2FkZChzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpvZmRldikKIC8qKgogICogb2ZfZG1h
X2NvbmZpZ3VyZSAtIFNldHVwIERNQSBjb25maWd1cmF0aW9uCiAgKiBAZGV2OglEZXZpY2UgdG8g
YXBwbHkgRE1BIGNvbmZpZ3VyYXRpb24KLSAqIEBucDoJCVBvaW50ZXIgdG8gT0Ygbm9kZSBoYXZp
bmcgRE1BIGNvbmZpZ3VyYXRpb24KICAqIEBmb3JjZV9kbWE6ICBXaGV0aGVyIGRldmljZSBpcyB0
byBiZSBzZXQgdXAgYnkgb2ZfZG1hX2NvbmZpZ3VyZSgpIGV2ZW4gaWYKICAqCQlETUEgY2FwYWJp
bGl0eSBpcyBub3QgZXhwbGljaXRseSBkZXNjcmliZWQgYnkgZmlybXdhcmUuCiAgKgogICogVHJ5
IHRvIGdldCBkZXZpY2VzJ3MgRE1BIGNvbmZpZ3VyYXRpb24gZnJvbSBEVCBhbmQgdXBkYXRlIGl0
CiAgKiBhY2NvcmRpbmdseS4KICAqLwotaW50IG9mX2RtYV9jb25maWd1cmUoc3RydWN0IGRldmlj
ZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLCBib29sIGZvcmNlX2RtYSkKK2ludCBvZl9k
bWFfY29uZmlndXJlKHN0cnVjdCBkZXZpY2UgKmRldiwgYm9vbCBmb3JjZV9kbWEpCiB7CiAJc3Ry
dWN0IGRldmljZV9ub2RlICpkbWFfcGFyZW50OwogCWludCByZXQ7CiAKLQlkbWFfcGFyZW50ID0g
X19vZl9nZXRfZG1hX3BhcmVudChucCk7CisJZG1hX3BhcmVudCA9IF9fb2ZfZ2V0X2RtYV9wYXJl
bnQoZGV2LT5vZl9ub2RlKTsKIAlyZXQgPSBvZl9kbWFfY29uZmlndXJlX3BhcmVudChkZXYsIGRt
YV9wYXJlbnQsIGZvcmNlX2RtYSk7CiAJb2Zfbm9kZV9wdXQoZG1hX3BhcmVudCk7CiAKQEAgLTk1
LDYgKzk0LDMxIEBAIGludCBvZl9kbWFfY29uZmlndXJlKHN0cnVjdCBkZXZpY2UgKmRldiwgc3Ry
dWN0IGRldmljZV9ub2RlICpucCwgYm9vbCBmb3JjZV9kbWEpCiB9CiBFWFBPUlRfU1lNQk9MX0dQ
TChvZl9kbWFfY29uZmlndXJlKTsKIAorLyoqCisgKiBvZl9kbWFfY29uZmlndXJlX2NvcHkgLSBT
ZXR1cCBETUEgY29uZmlndXJhdGlvbiBiYXNlZCBvbiBhbm90aGVyIGRldmljZSdzIERUCisgKgkJ
CSAgIG5vZGUKKyAqIEBkZXY6CURldmljZSB0byBhcHBseSBETUEgY29uZmlndXJhdGlvbgorICog
QG5wOgkJRGV2aWNlIG5vZGUgdG8gY29weSB0aGUgY29uZmlndXJhdGlvbiBmcm9tCisgKiBAZm9y
Y2VfZG1hOiAgV2hldGhlciBkZXZpY2UgaXMgdG8gYmUgc2V0IHVwIGJ5IG9mX2RtYV9jb25maWd1
cmUoKSBldmVuIGlmCisgKgkJRE1BIGNhcGFiaWxpdHkgaXMgbm90IGV4cGxpY2l0bHkgZGVzY3Jp
YmVkIGJ5IGZpcm13YXJlLgorICoKKyAqIFRyeSB0byBnZXQgZGV2aWNlcydzIERNQSBjb25maWd1
cmF0aW9uIGZyb20gRFQgYW5kIHVwZGF0ZSBpdAorICogYWNjb3JkaW5nbHkuCisgKi8KK2ludCBv
Zl9kbWFfY29uZmlndXJlX2NvcHkoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2aWNlX25v
ZGUgKm5wLAorCQkJICBib29sIGZvcmNlX2RtYSkKK3sKKwlzdHJ1Y3QgZGV2aWNlX25vZGUgKmRt
YV9wYXJlbnQ7CisJaW50IHJldDsKKworCWRtYV9wYXJlbnQgPSBfX29mX2dldF9kbWFfcGFyZW50
KG5wKTsKKwlyZXQgPSBvZl9kbWFfY29uZmlndXJlX3BhcmVudChkZXYsIGRtYV9wYXJlbnQsIGZv
cmNlX2RtYSk7CisJb2Zfbm9kZV9wdXQoZG1hX3BhcmVudCk7CisKKwlyZXR1cm4gcmV0OworfQor
RVhQT1JUX1NZTUJPTF9HUEwob2ZfZG1hX2NvbmZpZ3VyZV9jb3B5KTsKKwogLyoqCiAgKiBvZl9k
bWFfY29uZmlndXJlX3BhcmVudCAtIFNldHVwIERNQSBjb25maWd1cmF0aW9uIGJhc2VkIG9uIGEg
cGFyZW50IGJ1cycKICAqCQkJICAgICBEVCBub2RlCmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9n
bnRkZXYuYyBiL2RyaXZlcnMveGVuL2dudGRldi5jCmluZGV4IGE0NDZhNzIyMWUxMy4uMTE1ZTM5
ZjlmNjdhIDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9nbnRkZXYuYworKysgYi9kcml2ZXJzL3hl
bi9nbnRkZXYuYwpAQCAtNjMyLDcgKzYzMiw3IEBAIHN0YXRpYyBpbnQgZ250ZGV2X29wZW4oc3Ry
dWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZsaXApCiAJICogRml4IHRoaXMgYnkgY2Fs
bGluZyBvZl9kbWFfY29uZmlndXJlKCkgd2l0aCBhIE5VTEwgbm9kZSB0byBzZXQKIAkgKiBkZWZh
dWx0IERNQSBvcHMuCiAJICovCi0Jb2ZfZG1hX2NvbmZpZ3VyZShwcml2LT5kbWFfZGV2LCBOVUxM
LCB0cnVlKTsKKwlvZl9kbWFfY29uZmlndXJlKHByaXYtPmRtYV9kZXYsIHRydWUpOwogI2VuZGlm
CiAJcHJfZGVidWcoInByaXYgJXBcbiIsIHByaXYpOwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L29mX2RldmljZS5oIGIvaW5jbHVkZS9saW51eC9vZl9kZXZpY2UuaAppbmRleCA4ZjMxOWI4
YzlkZWIuLmIwNWE4NmZkMzVhNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9vZl9kZXZpY2Uu
aAorKysgYi9pbmNsdWRlL2xpbnV4L29mX2RldmljZS5oCkBAIC01NSw3ICs1NSw5IEBAIHN0YXRp
YyBpbmxpbmUgc3RydWN0IGRldmljZV9ub2RlICpvZl9jcHVfZGV2aWNlX25vZGVfZ2V0KGludCBj
cHUpCiAJcmV0dXJuIG9mX25vZGVfZ2V0KGNwdV9kZXYtPm9mX25vZGUpOwogfQogCi1pbnQgb2Zf
ZG1hX2NvbmZpZ3VyZShzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBkZXZjZV9ub2RlICpucCwg
Ym9vbCBmb3JjZV9kbWEpOworaW50IG9mX2RtYV9jb25maWd1cmUoc3RydWN0IGRldmljZSAqZGV2
LCBib29sIGZvcmNlX2RtYSk7CitpbnQgb2ZfZG1hX2NvbmZpZ3VyZV9jb3B5KHN0cnVjdCBkZXZp
Y2UgKmRldiwgc3RydWN0IGRldmljZV9ub2RlICpucCwKKwkJCSAgYm9vbCBmb3JjZV9kbWEpOwog
aW50IG9mX2RtYV9jb25maWd1cmVfcGFyZW50KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRl
dmljZV9ub2RlICpwYXJlbnQsCiAJCQkgICAgYm9vbCBmb3JjZV9kbWEpOwogI2Vsc2UgLyogQ09O
RklHX09GICovCkBAIC0xMDcsMTIgKzEwOSwxOCBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBkZXZp
Y2Vfbm9kZSAqb2ZfY3B1X2RldmljZV9ub2RlX2dldChpbnQgY3B1KQogfQogCiBzdGF0aWMgaW5s
aW5lIGludCBvZl9kbWFfY29uZmlndXJlKHN0cnVjdCBkZXZpY2UgKmRldiwKLQkJCQkgICBzdHJ1
Y3QgZGV2aWNlX25vZGUgKm5wLAogCQkJCSAgIGJvb2wgZm9yY2VfZG1hKQogewogCXJldHVybiAw
OwogfQogCitzdGF0aWMgaW5saW5lIGludCBvZl9kbWFfY29uZmlndXJlX2NvcHkoc3RydWN0IGRl
dmljZSAqZGV2LAorCQkJCQlzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLAorCQkJCQlib29sIGZvcmNl
X2RtYSkKK3sKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGlubGluZSBpbnQgb2ZfZG1hX2NvbmZp
Z3VyZV9wYXJlbnQoc3RydWN0IGRldmljZSAqZGV2LAogCQkJCQkgIHN0cnVjdCBkZXZpY2Vfbm9k
ZSAqcGFyZW50LAogCQkJCQkgIGJvb2wgZm9yY2VfZG1hKQotLSAKMi4yMy4wCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBs
aXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
