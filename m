Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id F3DBA38468
	for <lists+dri-devel@lfdr.de>; Fri,  7 Jun 2019 08:36:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6CB51899EA;
	Fri,  7 Jun 2019 06:36:33 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 23684899E8
 for <dri-devel@lists.freedesktop.org>; Fri,  7 Jun 2019 06:36:31 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 06 Jun 2019 23:36:31 -0700
X-ExtLoop1: 1
Received: from pg-eswbuild-angstrom-alpha.altera.com ([10.142.34.148])
 by fmsmga007.fm.intel.com with ESMTP; 06 Jun 2019 23:36:28 -0700
From: "Hean-Loong, Ong" <hean.loong.ong@intel.com>
To: Rob Herring <robh+dt@kernel.org>, Dinh Nguyen <dinguyen@kernel.org>,
 Daniel Vetter <daniel.vetter@ffwll.ch>,
 Randy Dunlap <rdunlap@infradead.org>
Subject: [PATCHv16 3/3] ARM:drm ivip Intel FPGA Video and Image Processing
 Suite
Date: Fri,  7 Jun 2019 22:30:22 +0800
Message-Id: <20190607143022.427-4-hean.loong.ong@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190607143022.427-1-hean.loong.ong@intel.com>
References: <20190607143022.427-1-hean.loong.ong@intel.com>
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: devicetree@vger.kernel.org, hean.loong.ong@intel.com,
	chin.liang.see@intel.com, linux-kernel@vger.kernel.org,
	dri-devel@lists.freedesktop.org, Ong@freedesktop.org,
	linux-arm-kernel@lists.infradead.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogIk9uZywgSGVhbiBMb29uZyIgPGhlYW4ubG9vbmcub25nQGludGVsLmNvbT4KCkRyaXZl
ciBmb3IgSW50ZWwgRlBHQSBWaWRlbyBhbmQgSW1hZ2UgUHJvY2Vzc2luZyBTdWl0ZSBGcmFtZSBC
dWZmZXIgSUkuClRoZSBkcml2ZXIgb25seSBzdXBwb3J0cyB0aGUgSW50ZWwgQXJyaWExMCBkZXZr
aXQgYW5kIGl0cyB2YXJpYW50cy4KVGhpcyBkcml2ZXIgY2FuIGJlIGVpdGhlciBsb2FkZWQgc3Rh
dGljbGx5IG9yIGluIG1vZHVsZXMuClRoZSBPRiBkZXZpY2UgdHJlZSBiaW5kaW5nIGlzIGxvY2F0
ZWQgYXQ6CkRvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9kaXNwbGF5L2FsdHIsdmlw
LWZiMi50eHQKClNpZ25lZC1vZmYtYnk6IE9uZywgSGVhbiBMb29uZyA8aGVhbi5sb29uZy5vbmdA
aW50ZWwuY29tPgpBY2tlZC1ieTogQWNrZWQtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0
ZXJAZmZ3bGwuY2g+CgpWMTU6CkZpeCBpbmRlbnRhdGlvbiBpc3N1ZXMKClYxNDoKRml4IGluZGVu
dGF0aW9uIGlzc3VlcwoKVjEzOgpGaXggZHJtLW1pc2MgYnVpbGQgZmFpbHVyZQoKVjEyOgpGaXgg
Y29tbWVudHMKClYxMToKbW92ZSB0byBkcm0tbWlzYwoKVjEwOgpGaXggQnVpbGQgZmFpbHVyZQoK
Vjk6CkZpeCBCdWlsZCBmYWlsdXJlCgpWODoKQ2hhbmdlcyB0byBkZXZpY2UgdHJlZSBkb2NzCgpW
NjoKQ2hhbmdlcyB0byBkZXZpY2UgdHJlZSBkb2NzCgpWNzoKQ2hhbmdlcyB0byBkZXZpY2UgdHJl
ZSBkb2NzCgpWNjoKRml4IGNvbW1lbnRzCgpWNToKRml4IGNvbW1lbnRzCgpWNDoKRml4IGNvbW1l
bnRzCgpWMzoKRml4IGNvbW1lbnRzCgpWMjoKTW92ZSB0byBzaW1wbGUgZHJtCgpWMToKSW5pdGlh
bCBjaGFuZ2VzCi0tLQogTUFJTlRBSU5FUlMgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAg
OSArCiBkcml2ZXJzL2dwdS9kcm0vS2NvbmZpZyAgICAgICAgICAgICAgIHwgICAyICsKIGRyaXZl
cnMvZ3B1L2RybS9NYWtlZmlsZSAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJt
L2l2aXAvS2NvbmZpZyAgICAgICAgICB8ICAxNCArKwogZHJpdmVycy9ncHUvZHJtL2l2aXAvTWFr
ZWZpbGUgICAgICAgICB8ICAgNiArCiBkcml2ZXJzL2dwdS9kcm0vaXZpcC9pbnRlbF92aXBfY29u
bi5jIHwgIDkzICsrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuYyAg
fCAzMzUgKysrKysrKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pdmlwL2lu
dGVsX3ZpcF9kcnYuaCAgfCAgNzMgKysrKysrCiA4IGZpbGVzIGNoYW5nZWQsIDUzMyBpbnNlcnRp
b25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2l2aXAvS2NvbmZpZwog
Y3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pdmlwL01ha2VmaWxlCiBjcmVhdGUg
bW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2l2aXAvaW50ZWxfdmlwX2Nvbm4uYwogY3JlYXRl
IG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuYwogY3JlYXRl
IG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuaAoKZGlmZiAt
LWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggZTdlODFmYWRmZjY1Li4wZmRl
YzUyYTM1NmEgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBAIC01
MjI5LDYgKzUyMjksMTUgQEAgTDoJZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwogRjoJ
aW5jbHVkZS9kcm0vdHRtLwogRjoJZHJpdmVycy9ncHUvZHJtL3R0bS8KIAorRFJNIElOVEVMIElW
SVAKK006CUhlYW4gTG9vbmcsIE9uZyA8aGFuLmxvb25nLm9uZ0BpbnRlbC5jb20+CitMOiAgICAg
IGRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKK1Q6ICAgICAgZ2l0IGdpdDovL2Fub25n
aXQuZnJlZWRlc2t0b3Aub3JnL2RybS9kcm0tbWlzYworUzoJTWFpbnRhaW5lZAorRjoJaW50ZWxf
dmlwX2Nvbm4uYworRjoJaW50ZWxfdmlwX2Rydi5jCitGOiAJaW50ZWxfdmlwX2Rydi5oCisKIERT
QlIxMDAgVVNCIEZNIFJBRElPIERSSVZFUgogTToJQWxleGV5IEtsaW1vdiA8a2xpbW92LmxpbnV4
QGdtYWlsLmNvbT4KIEw6CWxpbnV4LW1lZGlhQHZnZXIua2VybmVsLm9yZwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL0tjb25maWcgYi9kcml2ZXJzL2dwdS9kcm0vS2NvbmZpZwppbmRleCBi
ZDk0M2E3MTc1NmMuLjNkYjAxZTk5NDc5YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL0tj
b25maWcKKysrIGIvZHJpdmVycy9ncHUvZHJtL0tjb25maWcKQEAgLTIzMSw2ICsyMzEsOCBAQCBz
b3VyY2UgImRyaXZlcnMvZ3B1L2RybS9ub3V2ZWF1L0tjb25maWciCiAKIHNvdXJjZSAiZHJpdmVy
cy9ncHUvZHJtL2k5MTUvS2NvbmZpZyIKIAorc291cmNlICJkcml2ZXJzL2dwdS9kcm0vaXZpcC9L
Y29uZmlnIgorCiBjb25maWcgRFJNX1ZHRU0KIAl0cmlzdGF0ZSAiVmlydHVhbCBHRU0gcHJvdmlk
ZXIiCiAJZGVwZW5kcyBvbiBEUk0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmls
ZSBiL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZQppbmRleCAxYWM1NWM2NWVhYzAuLmU4YWM0ZTNk
ZTljNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL01ha2VmaWxlCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9NYWtlZmlsZQpAQCAtNjMsNiArNjMsNyBAQCBvYmotJChDT05GSUdfRFJNX0FNREdQ
VSkrPSBhbWQvYW1kZ3B1Lwogb2JqLSQoQ09ORklHX0RSTV9NR0EpCSs9IG1nYS8KIG9iai0kKENP
TkZJR19EUk1fSTgxMCkJKz0gaTgxMC8KIG9iai0kKENPTkZJR19EUk1fSTkxNSkJKz0gaTkxNS8K
K29iai0kKENPTkZJR19EUk1fSVZJUCkJKz0gaXZpcC8KIG9iai0kKENPTkZJR19EUk1fTUdBRzIw
MCkgKz0gbWdhZzIwMC8KIG9iai0kKENPTkZJR19EUk1fVjNEKSAgKz0gdjNkLwogb2JqLSQoQ09O
RklHX0RSTV9WQzQpICArPSB2YzQvCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaXZpcC9L
Y29uZmlnIGIvZHJpdmVycy9ncHUvZHJtL2l2aXAvS2NvbmZpZwpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwMDAwMDAuLjFiMmFmODVmZTc1NwotLS0gL2Rldi9udWxsCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pdmlwL0tjb25maWcKQEAgLTAsMCArMSwxNCBAQAorY29uZmlnIERSTV9J
VklQCisgICAgICAgIHRyaXN0YXRlICJJbnRlbCBGR1BBIFZpZGVvIGFuZCBJbWFnZSBQcm9jZXNz
aW5nIgorICAgICAgICBkZXBlbmRzIG9uIERSTSAmJiBPRgorICAgICAgICBzZWxlY3QgRFJNX0dF
TV9DTUFfSEVMUEVSCisgICAgICAgIHNlbGVjdCBEUk1fS01TX0hFTFBFUgorICAgICAgICBzZWxl
Y3QgRFJNX0tNU19GQl9IRUxQRVIKKyAgICAgICAgc2VsZWN0IERSTV9LTVNfQ01BX0hFTFBFUgor
ICAgICAgICBoZWxwCisJCUNob29zZSB0aGlzIG9wdGlvbiBpZiB5b3UgaGF2ZSBhbiBJbnRlbCBG
UEdBIEFycmlhIDEwIHN5c3RlbQorCQlhbmQgYWJvdmUgd2l0aCBhbiBJbnRlbCBEaXNwbGF5IFBv
cnQgSVAuIFRoaXMgZG9lcyBub3Qgc3VwcG9ydAorCQlsZWdhY3kgSW50ZWwgRlBHQSBDeWNsb25l
IFYgZGlzcGxheSBwb3J0LiBDdXJyZW50bHkgb25seSBzaW5nbGUKKwkJZnJhbWUgYnVmZmVyIGlz
IHN1cHBvcnRlZC4gTm90ZSB0aGF0IEFDUEkgYW5kIFhfODYgYXJjaGl0ZWN0dXJlCisJCWlzIG5v
dCBzdXBwb3J0ZWQgZm9yIEFycmlhMTAuIElmIE0gaXMgc2VsZWN0ZWQgdGhlIG1vZHVsZSB3aWxs
IGJlCisJCWNhbGxlZCBpdmlwLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2l2aXAvTWFr
ZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vaXZpcC9NYWtlZmlsZQpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwMDAwMDAuLjhjNTRlMTFkYWVjYQotLS0gL2Rldi9udWxsCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pdmlwL01ha2VmaWxlCkBAIC0wLDAgKzEsNiBAQAorIworIyBNYWtlZmls
ZSBmb3IgdGhlIGRybSBkZXZpY2UgZHJpdmVyLiAgVGhpcyBkcml2ZXIgcHJvdmlkZXMgc3VwcG9y
dCBmb3IgdGhlCisjIERpcmVjdCBSZW5kZXJpbmcgSW5mcmFzdHJ1Y3R1cmUgKERSSSkgaW4gWEZy
ZWU4NiA0LjEuMCBhbmQgaGlnaGVyLgorCitvYmotJChDT05GSUdfRFJNX0lWSVApICs9IGl2aXAu
bworaXZpcC1vYmpzIDo9IGludGVsX3ZpcF9kcnYubyBpbnRlbF92aXBfY29ubi5vCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaXZpcC9pbnRlbF92aXBfY29ubi5jIGIvZHJpdmVycy9ncHUv
ZHJtL2l2aXAvaW50ZWxfdmlwX2Nvbm4uYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwMDAuLjA0MWI3YTU3Njk4MwotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pdmlwL2ludGVsX3ZpcF9jb25uLmMKQEAgLTAsMCArMSw5MyBAQAorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBDb3B5cmlnaHQgKEMpIDIwMTkgSW50ZWwgQ29y
cG9yYXRpb24uCisgKgorICogaW50ZWxfdmlwX2Nvbm4uYyAtLSBJbnRlbCBWaWRlbyBhbmQgSW1h
Z2UgUHJvY2Vzc2luZyhWSVApCisgKiBGcmFtZSBCdWZmZXIgSUkgZHJpdmVyCisgKgorICogVGhp
cyBkcml2ZXIgc3VwcG9ydHMgdGhlIEludGVsIFZJUCBGcmFtZSBSZWFkZXIgY29tcG9uZW50Lgor
ICogTW9yZSBpbmZvIG9uIHRoZSBoYXJkd2FyZSBjYW4gYmUgZm91bmQgaW4gdGhlIEludGVsIFZp
ZGVvCisgKiBhbmQgSW1hZ2UgUHJvY2Vzc2luZyBTdWl0ZSBVc2VyIEd1aWRlIGF0IHRoaXMgYWRk
cmVzcworICogaHR0cDovL3d3dy5hbHRlcmEuY29tL2xpdGVyYXR1cmUvdWcvdWdfdmlwLnBkZi4K
KyAqCisgKiBBdXRob3JzOgorICogV2FsdGVyIEdvb3NzZW5zIDx3YWx0ZXJnb29zc2Vuc0Bob21l
Lm5sPgorICogVGhvbWFzIENob3UgPHRob21hc0B3eXRyb24uY29tLnR3PgorICogQ2hyaXMgUmF1
ZXIgPGNyYXVlckBhbHRlcmEuY29tPgorICogT25nLCBIZWFuLUxvb25nIDxoZWFuLmxvb25nLm9u
Z0BpbnRlbC5jb20+CisgKgorICovCisKKyNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CisjaW5jbHVk
ZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9hdG9taWNfaGVscGVyLmg+Cisj
aW5jbHVkZSA8ZHJtL2RybV9jcnRjX2hlbHBlci5oPgorI2luY2x1ZGUgPGRybS9kcm1fZGV2aWNl
Lmg+CisjaW5jbHVkZSA8ZHJtL2RybV9lbmNvZGVyX3NsYXZlLmg+CisjaW5jbHVkZSA8ZHJtL2Ry
bV9wbGFuZV9oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX3Byb2JlX2hlbHBlci5oPgorCitz
dGF0aWMgZW51bSBkcm1fY29ubmVjdG9yX3N0YXR1cworaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9y
X2RldGVjdChzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLCBib29sIGZvcmNlKQorewor
CXJldHVybiBjb25uZWN0b3Jfc3RhdHVzX2Nvbm5lY3RlZDsKK30KKworc3RhdGljIHZvaWQgaW50
ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2Rlc3Ryb3koc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvcikKK3sKKwlkcm1fY29ubmVjdG9yX3VucmVnaXN0ZXIoY29ubmVjdG9yKTsKKwlkcm1fY29u
bmVjdG9yX2NsZWFudXAoY29ubmVjdG9yKTsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1f
Y29ubmVjdG9yX2Z1bmNzIGludGVsdmlwZmJfZHJtX2Nvbm5lY3Rvcl9mdW5jcyA9IHsKKwkuZGV0
ZWN0ID0gaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2RldGVjdCwKKwkucmVzZXQgPSBkcm1fYXRv
bWljX2hlbHBlcl9jb25uZWN0b3JfcmVzZXQsCisJLmZpbGxfbW9kZXMgPSBkcm1faGVscGVyX3By
b2JlX3NpbmdsZV9jb25uZWN0b3JfbW9kZXMsCisJLmF0b21pY19kdXBsaWNhdGVfc3RhdGUgPSBk
cm1fYXRvbWljX2hlbHBlcl9jb25uZWN0b3JfZHVwbGljYXRlX3N0YXRlLAorCS5hdG9taWNfZGVz
dHJveV9zdGF0ZSA9IGRybV9hdG9taWNfaGVscGVyX2Nvbm5lY3Rvcl9kZXN0cm95X3N0YXRlLAor
CS5kZXN0cm95ID0gaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2Rlc3Ryb3ksCit9OworCitzdGF0
aWMgaW50IGludGVsdmlwZmJfZHJtX2Nvbm5lY3Rvcl9nZXRfbW9kZXMoc3RydWN0IGRybV9jb25u
ZWN0b3IgKmNvbm5lY3RvcikKK3sKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZHJtID0gY29ubmVjdG9y
LT5kZXY7CisJaW50IGNvdW50OworCisJY291bnQgPSBkcm1fYWRkX21vZGVzX25vZWRpZChjb25u
ZWN0b3IsIGRybS0+bW9kZV9jb25maWcubWF4X3dpZHRoLAorCQkJZHJtLT5tb2RlX2NvbmZpZy5t
YXhfaGVpZ2h0KTsKKwlkcm1fc2V0X3ByZWZlcnJlZF9tb2RlKGNvbm5lY3RvciwgZHJtLT5tb2Rl
X2NvbmZpZy5tYXhfd2lkdGgsCisJCQlkcm0tPm1vZGVfY29uZmlnLm1heF9oZWlnaHQpOworCXJl
dHVybiBjb3VudDsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX2hlbHBl
cl9mdW5jcworaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2hlbHBlcl9mdW5jcyA9IHsKKwkuZ2V0
X21vZGVzID0gaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2dldF9tb2RlcywKK307CisKK3N0cnVj
dCBkcm1fY29ubmVjdG9yICoKK2ludGVsdmlwZmJfY29ubl9zZXR1cChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZHJtKQoreworCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uOworCWludCByZXQ7CisKKwlj
b25uID0gZGV2bV9remFsbG9jKGRybS0+ZGV2LCBzaXplb2YoKmNvbm4pLCBHRlBfS0VSTkVMKTsK
KwlpZiAoSVNfRVJSKGNvbm4pKQorCQlyZXR1cm4gTlVMTDsKKworCWRybV9jb25uZWN0b3JfaGVs
cGVyX2FkZChjb25uLCAmaW50ZWx2aXBmYl9kcm1fY29ubmVjdG9yX2hlbHBlcl9mdW5jcyk7CisJ
cmV0ID0gZHJtX2Nvbm5lY3Rvcl9pbml0KGRybSwgY29ubiwgJmludGVsdmlwZmJfZHJtX2Nvbm5l
Y3Rvcl9mdW5jcywKKwkJCURSTV9NT0RFX0NPTk5FQ1RPUl9EaXNwbGF5UG9ydCk7CisJaWYgKHJl
dCA8IDApIHsKKwkJZGV2X2Vycihkcm0tPmRldiwgImZhaWxlZCB0byBpbml0aWFsaXplIGRybSBj
b25uZWN0b3JcbiIpOworCQlyZXQgPSAtRU5PTUVNOworCQlnb3RvIGVycm9yX2Nvbm5lY3Rvcl9j
bGVhbnVwOworCX0KKworCXJldHVybiBjb25uOworCitlcnJvcl9jb25uZWN0b3JfY2xlYW51cDoK
Kwlkcm1fY29ubmVjdG9yX2NsZWFudXAoY29ubik7CisKKwlyZXR1cm4gTlVMTDsKK30KZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwMDAuLjU5MjE4M2QwYjA5MAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pdmlwL2ludGVsX3ZpcF9kcnYuYwpAQCAtMCwwICsxLDMzNSBAQAorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBDb3B5cmlnaHQgKEMpIDIwMTkgSW50ZWwgQ29y
cG9yYXRpb24uCisgKgorICogaW50ZWxfdmlwX2NvcmUuYyAtLSBJbnRlbCBWaWRlbyBhbmQgSW1h
Z2UgUHJvY2Vzc2luZyhWSVApCisgKiBGcmFtZSBCdWZmZXIgSUkgZHJpdmVyCisgKgorICogVGhp
cyBkcml2ZXIgc3VwcG9ydHMgdGhlIEludGVsIFZJUCBGcmFtZSBSZWFkZXIgY29tcG9uZW50Lgor
ICogTW9yZSBpbmZvIG9uIHRoZSBoYXJkd2FyZSBjYW4gYmUgZm91bmQgaW4gdGhlIEludGVsIFZp
ZGVvCisgKiBhbmQgSW1hZ2UgUHJvY2Vzc2luZyBTdWl0ZSBVc2VyIEd1aWRlIGF0IHRoaXMgYWRk
cmVzcworICogaHR0cDovL3d3dy5hbHRlcmEuY29tL2xpdGVyYXR1cmUvdWcvdWdfdmlwLnBkZi4K
KyAqCisgKiBBdXRob3JzOgorICogV2FsdGVyIEdvb3NzZW5zIDx3YWx0ZXJnb29zc2Vuc0Bob21l
Lm5sPgorICogVGhvbWFzIENob3UgPHRob21hc0B3eXRyb24uY29tLnR3PgorICogQ2hyaXMgUmF1
ZXIgPGNyYXVlckBhbHRlcmEuY29tPgorICogT25nLCBIZWFuLUxvb25nIDxoZWFuLmxvb25nLm9u
Z0BpbnRlbC5jb20+CisgKgorICovCisKKyNpbmNsdWRlIDxkcm0vZHJtX2F0b21pYy5oPgorI2lu
Y2x1ZGUgPGRybS9kcm1fYXRvbWljX2hlbHBlci5oPgorI2luY2x1ZGUgPGRybS9kcm1fY3J0Y19o
ZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2RldmljZS5oPgorI2luY2x1ZGUgPGRybS9kcm1f
ZHJ2Lmg+CisjaW5jbHVkZSA8ZHJtL2RybV9mYl9oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJt
X2ZiX2NtYV9oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2dlbV9jbWFfaGVscGVyLmg+Cisj
aW5jbHVkZSA8ZHJtL2RybV9nZW1fZnJhbWVidWZmZXJfaGVscGVyLmg+CisjaW5jbHVkZSA8ZHJt
L2RybV9vZi5oPgorI2luY2x1ZGUgPGRybS9kcm1fcGxhbmVfaGVscGVyLmg+CisjaW5jbHVkZSA8
ZHJtL2RybV9zaW1wbGVfa21zX2hlbHBlci5oPgorI2luY2x1ZGUgPGRybS9kcm1fdmJsYW5rLmg+
CisKKyNpbmNsdWRlIDxsaW51eC9jb21wb25lbnQuaD4KKyNpbmNsdWRlIDxsaW51eC9kbWEtbWFw
cGluZy5oPgorI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KKyNpbmNsdWRlIDxsaW51eC9rZXJuZWwu
aD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KKyNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9k
ZXZpY2UuaD4KKworI2luY2x1ZGUgImludGVsX3ZpcF9kcnYuaCIKKworc3RhdGljIGlubGluZSBz
dHJ1Y3QgaW50ZWx2aXBmYl9wcml2ICoKK3BpcGVfdG9faW50ZWx2aXBkcm0oc3RydWN0IGRybV9z
aW1wbGVfZGlzcGxheV9waXBlICpwaXBlKQoreworCXJldHVybiBjb250YWluZXJfb2YocGlwZSwg
c3RydWN0IGludGVsdmlwZmJfcHJpdiwgcGlwZSk7Cit9CisKK0RFRklORV9EUk1fR0VNX0NNQV9G
T1BTKGRybV9mb3BzKTsKKworc3RhdGljIHN0cnVjdCBkcm1fZHJpdmVyIGludGVsdmlwZmJfZHJt
ID0geworCS5kcml2ZXJfZmVhdHVyZXMgPQorCQkJRFJJVkVSX01PREVTRVQgfCBEUklWRVJfR0VN
IHwKKwkJCURSSVZFUl9QUklNRSB8IERSSVZFUl9BVE9NSUMsCisJLmdlbV9mcmVlX29iamVjdF91
bmxvY2tlZCA9IGRybV9nZW1fY21hX2ZyZWVfb2JqZWN0LAorCS5nZW1fdm1fb3BzID0gJmRybV9n
ZW1fY21hX3ZtX29wcywKKwkuZHVtYl9jcmVhdGUgPSBkcm1fZ2VtX2NtYV9kdW1iX2NyZWF0ZSwK
KwkuZHVtYl9kZXN0cm95ID0gZHJtX2dlbV9kdW1iX2Rlc3Ryb3ksCisJLnByaW1lX2hhbmRsZV90
b19mZCA9IGRybV9nZW1fcHJpbWVfaGFuZGxlX3RvX2ZkLAorCS5wcmltZV9mZF90b19oYW5kbGUg
PSBkcm1fZ2VtX3ByaW1lX2ZkX3RvX2hhbmRsZSwKKwkuZ2VtX3ByaW1lX2V4cG9ydCA9IGRybV9n
ZW1fcHJpbWVfZXhwb3J0LAorCS5nZW1fcHJpbWVfaW1wb3J0ID0gZHJtX2dlbV9wcmltZV9pbXBv
cnQsCisJLmdlbV9wcmltZV9nZXRfc2dfdGFibGUgPSBkcm1fZ2VtX2NtYV9wcmltZV9nZXRfc2df
dGFibGUsCisJLmdlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUgPSBkcm1fZ2VtX2NtYV9wcmltZV9p
bXBvcnRfc2dfdGFibGUsCisJLmdlbV9wcmltZV92bWFwID0gZHJtX2dlbV9jbWFfcHJpbWVfdm1h
cCwKKwkuZ2VtX3ByaW1lX3Z1bm1hcCA9IGRybV9nZW1fY21hX3ByaW1lX3Z1bm1hcCwKKwkuZ2Vt
X3ByaW1lX21tYXAgPSBkcm1fZ2VtX2NtYV9wcmltZV9tbWFwLAorCS5uYW1lID0gRFJJVkVSX05B
TUUsCisJLmRhdGUgPSAiMjAxOTAxMjkiLAorCS5kZXNjID0gIkludGVsIEZQR0EgVklQIFNVSVRF
IiwKKwkubWFqb3IgPSAxLAorCS5taW5vciA9IDAsCisJLmlvY3RscyA9IE5VTEwsCisJLnBhdGNo
bGV2ZWwgPSAwLAorCS5mb3BzID0gJmRybV9mb3BzLAorfTsKKworLyoKKyAqIFNldHRpbmcgdXAg
aW5mb3JtYXRpb24gZGVyaXZlZCBmcm9tIE9GIERldmljZSBUcmVlIE5vZGVzCisgKiBtYXgtd2lk
dGgsIG1heC1oZWlnaHQsIGJpdHMgcGVyIHBpeGVsLCBtZW1vcnkgcG9ydCB3aWR0aAorICovCisK
K3N0YXRpYyBpbnQgaW50ZWx2aXBmYl9kcm1fc2V0dXAoc3RydWN0IGRldmljZSAqZGV2LAorCQkJ
CQlzdHJ1Y3QgaW50ZWx2aXBmYl9wcml2ICpwcml2KQoreworCXN0cnVjdCBkcm1fZGV2aWNlICpk
cm0gPSAmcHJpdi0+ZHJtOworCXN0cnVjdCBkZXZpY2Vfbm9kZSAqbnAgPSBkZXYtPm9mX25vZGU7
CisJaW50IG1lbV93b3JkX3dpZHRoOworCWludCBtYXhfaCwgbWF4X3c7CisJaW50IHJldDsKKwor
CXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyKG5wLCAiYWx0cixtYXgtd2lkdGgiLCAmbWF4X3cp
OworCWlmIChyZXQpIHsKKwkJZGV2X2VycihkZXYsCisJCQkiTWlzc2luZyByZXF1aXJlZCBwYXJh
bWV0ZXIgJ2FsdHIsbWF4LXdpZHRoJyIpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldCA9IG9m
X3Byb3BlcnR5X3JlYWRfdTMyKG5wLCAiYWx0cixtYXgtaGVpZ2h0IiwgJm1heF9oKTsKKwlpZiAo
cmV0KSB7CisJCWRldl9lcnIoZGV2LAorCQkJIk1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdh
bHRyLG1heC1oZWlnaHQnIik7CisJCXJldHVybiByZXQ7CisJfQorCisJcmV0ID0gb2ZfcHJvcGVy
dHlfcmVhZF91MzIobnAsICJhbHRyLG1lbS1wb3J0LXdpZHRoIiwgJm1lbV93b3JkX3dpZHRoKTsK
KwlpZiAocmV0KSB7CisJCWRldl9lcnIoZGV2LCAiTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIg
J2FsdHIsbWVtLXBvcnQtd2lkdGggJyIpOworCQlyZXR1cm4gcmV0OworCX0KKworCWlmICghKG1l
bV93b3JkX3dpZHRoID49IDMyICYmIG1lbV93b3JkX3dpZHRoICUgMzIgPT0gMCkpIHsKKwkJZGV2
X2VycihkZXYsCisJCQkibWVtLXdvcmQtd2lkdGggaXMgc2V0IHRvICVpLiBtdXN0IGJlID49IDMy
IGFuZCBtdWx0aXBsZSBvZiAzMi4iLAorCQkJIG1lbV93b3JkX3dpZHRoKTsKKwkJcmV0dXJuIC1F
Tk9ERVY7CisJfQorCisJZHJtLT5tb2RlX2NvbmZpZy5taW5fd2lkdGggPSA2NDA7CisJZHJtLT5t
b2RlX2NvbmZpZy5taW5faGVpZ2h0ID0gNDgwOworCWRybS0+bW9kZV9jb25maWcubWF4X3dpZHRo
ID0gbWF4X3c7CisJZHJtLT5tb2RlX2NvbmZpZy5tYXhfaGVpZ2h0ID0gbWF4X2g7CisJZHJtLT5t
b2RlX2NvbmZpZy5wcmVmZXJyZWRfZGVwdGggPSAzMjsKKworCXJldHVybiAwOworfQorCitzdGF0
aWMgaW50IGludGVsdmlwZmJfb2ZfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikK
K3sKKwlpbnQgcmV0dmFsOworCXN0cnVjdCByZXNvdXJjZSAqcmVnX3JlczsKKwlzdHJ1Y3QgaW50
ZWx2aXBmYl9wcml2ICpwcml2OworCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZwZGV2LT5kZXY7CisJ
c3RydWN0IGRybV9kZXZpY2UgKmRybTsKKworCXByaXYgPSBremFsbG9jKHNpemVvZigqcHJpdiks
IEdGUF9LRVJORUwpOworCWlmICghcHJpdikKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlkcm0gPSAm
cHJpdi0+ZHJtOworCisJLyogc2V0dXAgRFJNICovCisJcmV0dmFsID0gZHJtX2Rldl9pbml0KGRy
bSwgJmludGVsdmlwZmJfZHJtLCBkZXYpOworCWlmIChyZXR2YWwpIHsKKwkJZGV2X2VycihkZXYs
ICJbIiBEUk1fTkFNRSAiOiVzXSBkcm1fZGV2X2luaXQgZmFpbGVkOiAlZFxuIiwKKwkJCV9fZnVu
Y19fLCByZXR2YWwpOworCQlyZXR1cm4gLUVOT0RFVjsKKwl9CisKKwlyZXR2YWwgPSBkbWFfc2V0
X21hc2tfYW5kX2NvaGVyZW50KGRybS0+ZGV2LCBETUFfQklUX01BU0soMzIpKTsKKwlpZiAocmV0
dmFsKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCXJlZ19yZXMgPSBwbGF0Zm9ybV9nZXRfcmVzb3Vy
Y2UocGRldiwgSU9SRVNPVVJDRV9NRU0sIDApOworCWlmICghcmVnX3JlcykKKwkJcmV0dXJuIC1F
Tk9NRU07CisKKwlwcml2LT5iYXNlID0gZGV2bV9pb3JlbWFwX3Jlc291cmNlKGRldiwgcmVnX3Jl
cyk7CisKKwlpZiAoSVNfRVJSKHByaXYtPmJhc2UpKSB7CisJCWRldl9lcnIoZGV2LCAiZGV2bV9p
b3JlbWFwX3Jlc291cmNlIGZhaWxlZFxuIik7CisJCXJldHZhbCA9IFBUUl9FUlIocHJpdi0+YmFz
ZSk7CisJCXJldHVybiAtRU5PTUVNOworCX0KKworCWludGVsdmlwZmJfZHJtX3NldHVwKGRldiwg
cHJpdik7CisKKwlkZXZfc2V0X2RydmRhdGEoZGV2LCBwcml2KTsKKworCXJldHVybiBpbnRlbHZp
cGZiX3Byb2JlKGRldik7Cit9CisKK3N0YXRpYyBpbnQgaW50ZWx2aXBmYl9vZl9yZW1vdmUoc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlyZXR1cm4gaW50ZWx2aXBmYl9yZW1vdmUo
JnBkZXYtPmRldik7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsdmlwZmJfZW5hYmxlKHN0cnVjdCBk
cm1fc2ltcGxlX2Rpc3BsYXlfcGlwZSAqcGlwZSwKKwkJCQlzdHJ1Y3QgZHJtX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCisJCQkJc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqCisJCQkJcGxhbmVfc3Rh
dGUpCit7CisJLyoKKwkgKiBUaGUgZnJhbWVpbmZvIHZhcmlhYmxlIGhhcyB0byBjb3JyZXNwb25k
IHRvIHRoZSBzaXplIG9mIHRoZSBWSVAgU3VpdGUKKwkgKiBGcmFtZSBSZWFkZXIgcmVnaXN0ZXIg
NyB3aGljaCB3aWxsIGRldGVybWluZSB0aGUgbWF4aW11bSBzaXplIHVzZWQKKwkgKiBpbiB0aGlz
IGZyYW1laW5mbworCSAqLworCXN0cnVjdCBpbnRlbHZpcGZiX3ByaXYgKnByaXYgPSBwaXBlX3Rv
X2ludGVsdmlwZHJtKHBpcGUpOworCXUzMiBmcmFtZWluZm87CisJdm9pZCBfX2lvbWVtICpiYXNl
ID0gcHJpdi0+YmFzZTsKKwlzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpzdGF0ZSA9IHBpcGUtPnBs
YW5lLnN0YXRlOworCWRtYV9hZGRyX3QgYWRkcjsKKworCWFkZHIgPSBkcm1fZmJfY21hX2dldF9n
ZW1fYWRkcihzdGF0ZS0+ZmIsIHN0YXRlLCAwKTsKKworCWZyYW1laW5mbyA9CisJCXJlYWRsKGJh
c2UgKyBJTlRFTFZJUEZCX0ZSQU1FX1JFQURFUikgJiAweDAwZmZmZmZmOworCXdyaXRlbChmcmFt
ZWluZm8sIGJhc2UgKyBJTlRFTFZJUEZCX0ZSQU1FX0lORk8pOworCXdyaXRlbChhZGRyLCBiYXNl
ICsgSU5URUxWSVBGQl9GUkFNRV9TVEFSVCk7CisJLyogRmluYWxseSBzZXQgdGhlIGNvbnRyb2wg
cmVnaXN0ZXIgdG8gMSB0byBzdGFydCBzdHJlYW1pbmcgKi8KKwl3cml0ZWwoMSwgYmFzZSArIElO
VEVMVklQRkJfQ09OVFJPTCk7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsdmlwZmJfZGlzYWJsZShz
dHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUpCit7CisJc3RydWN0IGludGVsdmlw
ZmJfcHJpdiAqcHJpdiA9IHBpcGVfdG9faW50ZWx2aXBkcm0ocGlwZSk7CisJdm9pZCBfX2lvbWVt
ICpiYXNlID0gcHJpdi0+YmFzZTsKKwkvKiBzZXQgdGhlIGNvbnRyb2wgcmVnaXN0ZXIgdG8gMCB0
byBzdG9wIHN0cmVhbWluZyAqLworCXdyaXRlbCgwLCBiYXNlICsgSU5URUxWSVBGQl9DT05UUk9M
KTsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fbW9kZV9jb25maWdfZnVuY3MgaW50ZWx2
aXBmYl9tb2RlX2NvbmZpZ19mdW5jcyA9IHsKKwkuZmJfY3JlYXRlID0gZHJtX2dlbV9mYl9jcmVh
dGUsCisJLmF0b21pY19jaGVjayA9IGRybV9hdG9taWNfaGVscGVyX2NoZWNrLAorCS5hdG9taWNf
Y29tbWl0ID0gZHJtX2F0b21pY19oZWxwZXJfY29tbWl0LAorfTsKKworc3RhdGljIHZvaWQgaW50
ZWx2aXBmYl9zZXR1cF9tb2RlX2NvbmZpZyhzdHJ1Y3QgZHJtX2RldmljZSAqZHJtKQoreworCWRy
bV9tb2RlX2NvbmZpZ19pbml0KGRybSk7CisJZHJtLT5tb2RlX2NvbmZpZy5mdW5jcyA9ICZpbnRl
bHZpcGZiX21vZGVfY29uZmlnX2Z1bmNzOworfQorCit2b2lkIGludGVsdmlwZmJfZGlzcGxheV9w
aXBlX3VwZGF0ZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUsCisJCQkJICAg
IHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKm9sZF9zdGF0ZSkKK3sKKwlzdHJ1Y3QgaW50ZWx2aXBm
Yl9wcml2ICpwcml2ID0gcGlwZV90b19pbnRlbHZpcGRybShwaXBlKTsKKwlzdHJ1Y3QgZHJtX2Ny
dGMgKmNydGMgPSAmcHJpdi0+cGlwZS5jcnRjOworCisJaWYgKGNydGMtPnN0YXRlLT5ldmVudCkg
eworCQlzcGluX2xvY2tfaXJxKCZjcnRjLT5kZXYtPmV2ZW50X2xvY2spOworCQlkcm1fY3J0Y19z
ZW5kX3ZibGFua19ldmVudChjcnRjLCBjcnRjLT5zdGF0ZS0+ZXZlbnQpOworCQlzcGluX3VubG9j
a19pcnEoJmNydGMtPmRldi0+ZXZlbnRfbG9jayk7CisJCWNydGMtPnN0YXRlLT5ldmVudCA9IE5V
TEw7CisJfQorfQorRVhQT1JUX1NZTUJPTChpbnRlbHZpcGZiX2Rpc3BsYXlfcGlwZV91cGRhdGUp
OworCitzdGF0aWMgc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlX2Z1bmNzIHByaXZfZnVu
Y3MgPSB7CisJLnByZXBhcmVfZmIgPSBkcm1fZ2VtX2ZiX3NpbXBsZV9kaXNwbGF5X3BpcGVfcHJl
cGFyZV9mYiwKKwkudXBkYXRlID0gaW50ZWx2aXBmYl9kaXNwbGF5X3BpcGVfdXBkYXRlLAorCS5l
bmFibGUgPSBpbnRlbHZpcGZiX2VuYWJsZSwKKwkuZGlzYWJsZSA9IGludGVsdmlwZmJfZGlzYWJs
ZQorfTsKKworaW50IGludGVsdmlwZmJfcHJvYmUoc3RydWN0IGRldmljZSAqZGV2KQoreworCWlu
dCByZXR2YWw7CisJc3RydWN0IGRybV9kZXZpY2UgKmRybTsKKwlzdHJ1Y3QgaW50ZWx2aXBmYl9w
cml2ICpwcml2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7CisJc3RydWN0IGRybV9jb25uZWN0b3Ig
KmNvbm5lY3RvcjsKKwl1MzIgZm9ybWF0c1tdID0ge0RSTV9GT1JNQVRfWFJHQjg4ODh9OworCisJ
ZHJtID0gJnByaXYtPmRybTsKKworCWludGVsdmlwZmJfc2V0dXBfbW9kZV9jb25maWcoZHJtKTsK
KworCWNvbm5lY3RvciA9IGludGVsdmlwZmJfY29ubl9zZXR1cChkcm0pOworCWlmICghY29ubmVj
dG9yKSB7CisJCWRldl9lcnIoZHJtLT5kZXYsICJDb25uZWN0b3Igc2V0dXAgZmFpbGVkXG4iKTsK
KwkJZ290byBlcnJfbW9kZV9jb25maWc7CisJfQorCisJcmV0dmFsID0gZHJtX3NpbXBsZV9kaXNw
bGF5X3BpcGVfaW5pdChkcm0sCisJCQkJCQkmcHJpdi0+cGlwZSwKKwkJCQkJCSZwcml2X2Z1bmNz
LAorCQkJCQkJZm9ybWF0cywKKwkJCQkJCUFSUkFZX1NJWkUoZm9ybWF0cyksCisJCQkJCQlOVUxM
LCBjb25uZWN0b3IpOworCisJaWYgKHJldHZhbCA8IDApIHsKKwkJZGV2X2Vycihkcm0tPmRldiwg
IkNhbm5vdCBzZXR1cCBzaW1wbGUgZGlzcGxheSBwaXBlXG4iKTsKKwkJZ290byBlcnJfbW9kZV9j
b25maWc7CisJfQorCisJZHJtX21vZGVfY29uZmlnX3Jlc2V0KGRybSk7CisKKwlkcm1fZGV2X3Jl
Z2lzdGVyKGRybSwgMCk7CisKKwlkcm1fZmJkZXZfZ2VuZXJpY19zZXR1cChkcm0sIDMyKTsKKwor
CWRldl9pbmZvKGRybS0+ZGV2LCAiaXZpcDogU3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgZmJcbiIpOwor
CisJcmV0dXJuIHJldHZhbDsKKworZXJyX21vZGVfY29uZmlnOgorCisJZHJtX21vZGVfY29uZmln
X2NsZWFudXAoZHJtKTsKKwlyZXR1cm4gLUVOT0RFVjsKK30KKworaW50IGludGVsdmlwZmJfcmVt
b3ZlKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlzdHJ1Y3QgaW50ZWx2aXBmYl9wcml2ICpwcml2
ID0gZGV2X2dldF9kcnZkYXRhKGRldik7CisJc3RydWN0IGRybV9kZXZpY2UgKmRybSA9ICAmcHJp
di0+ZHJtOworCisJZHJtX2Rldl91bnJlZ2lzdGVyKGRybSk7CisKKwlkcm1fbW9kZV9jb25maWdf
Y2xlYW51cChkcm0pOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgb2Zf
ZGV2aWNlX2lkIGludGVsdmlwZmJfb2ZfbWF0Y2hbXSA9IHsKKwl7IC5jb21wYXRpYmxlID0gImFs
dHIsdmlwLWZyYW1lLWJ1ZmZlci0yLjAiIH0sCisJe30sCisvKgorICogVGhlIG5hbWUgdmlwLWZy
YW1lLWJ1ZmZlci0yLjAgaXMgZGVyaXZlZCBmcm9tCisgKiBodHRwOi8vd3d3LmFsdGVyYS5jb20v
bGl0ZXJhdHVyZS91Zy91Z192aXAucGRmCisgKiBmcmFtZSBidWZmZXIgSVAgY29yZXMgc2VjdGlv
biAxNAorICovCit9OworCitNT0RVTEVfREVWSUNFX1RBQkxFKG9mLCBpbnRlbHZpcGZiX29mX21h
dGNoKTsKKworc3RhdGljIHN0cnVjdCBwbGF0Zm9ybV9kcml2ZXIgaW50ZWx2aXBmYl9kcml2ZXIg
PSB7CisJLnByb2JlID0gaW50ZWx2aXBmYl9vZl9wcm9iZSwKKwkucmVtb3ZlID0gaW50ZWx2aXBm
Yl9vZl9yZW1vdmUsCisJLmRyaXZlciA9IHsKKwkJLm5hbWUgPSBEUklWRVJfTkFNRSwKKwkJLm9m
X21hdGNoX3RhYmxlID0gaW50ZWx2aXBmYl9vZl9tYXRjaCwKKwl9LAorfTsKKworbW9kdWxlX3Bs
YXRmb3JtX2RyaXZlcihpbnRlbHZpcGZiX2RyaXZlcik7CisKKy8qIE9yaWdpbmFsIGF1dGhvciBv
ZiBBbHRlcmEgRnJhbWUgQnVmZmVyKi8KK01PRFVMRV9BVVRIT1IoIldhbHRlciBHb29zc2VucyA8
d2FsdGVyZ29vc3NlbnNAaG9tZS5ubD4iKTsKK01PRFVMRV9BVVRIT1IoIlRob21hcyBDaG91IDx0
aG9tYXNAd3l0cm9uLmNvbS50dz4iKTsKK01PRFVMRV9BVVRIT1IoIkNocmlzIFJhdWVyIDxjcmF1
ZXJAYWx0ZXJhLmNvbT4iKTsKKy8qIEF1dGhvciBvZiBJbnRlbCBGUEdBIEZyYW1lIEJ1ZmZlciBJ
SSovCitNT0RVTEVfQVVUSE9SKCJPbmcsIEhlYW4tTG9vbmcgPGhlYW4ubG9vbmcub25nQGludGVs
LmNvbT4iKTsKK01PRFVMRV9ERVNDUklQVElPTigiSW50ZWwgVklQIEZyYW1lIEJ1ZmZlciBJSSBk
cml2ZXIiKTsKK01PRFVMRV9MSUNFTlNFKCJHUEwgdjIiKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pdmlwL2ludGVsX3ZpcF9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVs
X3ZpcF9kcnYuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmE4ZTNh
NjYwM2UyNgotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pdmlwL2ludGVsX3Zp
cF9kcnYuaApAQCAtMCwwICsxLDczIEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BM
LTIuMCAqLworLyoKKyAqIENvcHlyaWdodCAoQykgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbi4KKyAq
CisgKiBJbnRlbCBWaWRlbyBhbmQgSW1hZ2UgUHJvY2Vzc2luZyhWSVApIEZyYW1lIEJ1ZmZlciBJ
SSBkcml2ZXIuCisgKiBGcmFtZSBCdWZmZXIgSUkgZHJpdmVyCisgKgorICogVGhpcyBkcml2ZXIg
c3VwcG9ydHMgdGhlIEludGVsIFZJUCBGcmFtZSBSZWFkZXIgY29tcG9uZW50LgorICogTW9yZSBp
bmZvIG9uIHRoZSBoYXJkd2FyZSBjYW4gYmUgZm91bmQgaW4gdGhlIEludGVsIFZpZGVvCisgKiBh
bmQgSW1hZ2UgUHJvY2Vzc2luZyBTdWl0ZSBVc2VyIEd1aWRlIGF0IHRoaXMgYWRkcmVzcworICog
aHR0cDovL3d3dy5hbHRlcmEuY29tL2xpdGVyYXR1cmUvdWcvdWdfdmlwLnBkZi4KKyAqCisgKiBB
dXRob3JzOgorICogV2FsdGVyIEdvb3NzZW5zIDx3YWx0ZXJnb29zc2Vuc0Bob21lLm5sPgorICog
VGhvbWFzIENob3UgPHRob21hc0B3eXRyb24uY29tLnR3PgorICogQ2hyaXMgUmF1ZXIgPGNyYXVl
ckBhbHRlcmEuY29tPgorICogT25nLCBIZWFuLUxvb25nIDxoZWFuLmxvb25nLm9uZ0BpbnRlbC5j
b20+CisgKgorICovCisjaWZuZGVmIF9JTlRFTF9WSVBfRFJWX0gKKyNkZWZpbmUgX0lOVEVMX1ZJ
UF9EUlZfSAorCisjZGVmaW5lIERSSVZFUl9OQU1FICAgICJpbnRlbHZpcGZiIgorI2RlZmluZSBC
WVRFU19QRVJfUElYRUwJIDQKKyNkZWZpbmUgQ1JUQ19OVU0JICAgICAgICAxCisjZGVmaW5lIENP
Tk5fTlVNCSAgICAgICAgMQorCisvKiBjb250cm9sIHJlZ2lzdGVycyAqLworI2RlZmluZSBJTlRF
TFZJUEZCX0NPTlRST0wJICAgICAgMAorI2RlZmluZSBJTlRFTFZJUEZCX1NUQVRVUwkgICAgICAg
MHg0CisjZGVmaW5lIElOVEVMVklQRkJfSU5URVJSVVBUCSAgICAweDgKKyNkZWZpbmUgSU5URUxW
SVBGQl9GUkFNRV9DT1VOVEVSCTB4QworI2RlZmluZSBJTlRFTFZJUEZCX0ZSQU1FX0RST1AJICAg
MHgxMAorI2RlZmluZSBJTlRFTFZJUEZCX0ZSQU1FX0lORk8JICAgMHgxNAorI2RlZmluZSBJTlRF
TFZJUEZCX0ZSQU1FX1NUQVJUCSAgMHgxOAorI2RlZmluZSBJTlRFTFZJUEZCX0ZSQU1FX1JFQURF
UgkgICAgICAgICAweDFDCisKK2ludCBpbnRlbHZpcGZiX3Byb2JlKHN0cnVjdCBkZXZpY2UgKmRl
dik7CitpbnQgaW50ZWx2aXBmYl9yZW1vdmUoc3RydWN0IGRldmljZSAqZGV2KTsKK2ludCBpbnRl
bHZpcGZiX3NldHVwX2NydGMoc3RydWN0IGRybV9kZXZpY2UgKmRybSk7CitzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqaW50ZWx2aXBmYl9jb25uX3NldHVwKHN0cnVjdCBkcm1fZGV2aWNlICpkcm0pOwor
CitzdHJ1Y3QgaW50ZWx2aXBmYl9wcml2IHsKKwkvKioKKwkgKiBAcGlwZTogRGlzcGxheSBwaXBl
IHN0cnVjdHVyZQorCSAqLworCXN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZSBwaXBlOwor
CisJLyoqCisJICogQGRybTogRFJNIGRldmljZQorCSAqLworCXN0cnVjdCBkcm1fZGV2aWNlIGRy
bTsKKworCS8qKgorCSAqIEBkaXJ0eV9sb2NrOiBTZXJpYWxpemVzIGZyYW1lYnVmZmVyIGZsdXNo
aW5nCisJICovCisJc3RydWN0IG11dGV4IGRpcnR5X2xvY2s7CisKKwkvKioKKwkgKiBAYmFzZTog
QmFzZSBtZW1vcnkgZm9yIHRoZSBmcmFtZWJ1ZmZlcgorCSAqLworCXZvaWQgICAgX19pb21lbSAq
YmFzZTsKKworCS8qKgorCSAqIEBmYl9kaXJ0eTogRnJhbWVidWZmZXIgZGlydHkgY2FsbGJhY2sK
KwkgKi8KKwlpbnQgKCpmYl9kaXJ0eSkoc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZnJhbWVidWZm
ZXIsCisJCQlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGVfcHJpdiwgdW5zaWduZWQgaW50IGZsYWdzLAor
CQkJdW5zaWduZWQgaW50IGNvbG9yLCBzdHJ1Y3QgZHJtX2NsaXBfcmVjdCAqY2xpcHMsCisJCQl1
bnNpZ25lZCBpbnQgbnVtX2NsaXBzKTsKK307CisKKyNlbmRpZgotLSAKMi4xNy4xCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGlu
ZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
