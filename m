Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0C2A6F4BA5
	for <lists+dri-devel@lfdr.de>; Fri,  8 Nov 2019 13:33:46 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BFD246E0EF;
	Fri,  8 Nov 2019 12:33:40 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D8CE86E0E4
 for <dri-devel@lists.freedesktop.org>; Fri,  8 Nov 2019 12:33:37 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 5B001B220;
 Fri,  8 Nov 2019 12:33:36 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@redhat.com, sean@poorly.run, daniel@ffwll.ch,
 b.zolnierkie@samsung.com, noralf@tronnes.org, kraxel@redhat.com,
 sam@ravnborg.org, emil.velikov@collabora.com
Subject: [PATCH 1/4] drm/udl: Replace fbdev code with generic emulation
Date: Fri,  8 Nov 2019 13:33:30 +0100
Message-Id: <20191108123333.25274-2-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191108123333.25274-1-tzimmermann@suse.de>
References: <20191108123333.25274-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Thomas Zimmermann <tzimmermann@suse.de>,
 dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIHVkbCBkcml2ZXIgY2FuIHVzZSB0aGUgZ2VuZXJpYyBmYmRldiBpbXBsZW1lbnRhdGlvbi4g
Q29udmVydCBpdC4KClNpZ25lZC1vZmYtYnk6IFRob21hcyBaaW1tZXJtYW5uIDx0emltbWVybWFu
bkBzdXNlLmRlPgotLS0KIGRyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jICAgICB8ICAgNCAr
LQogZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmggICAgIHwgICA1IC0KIGRyaXZlcnMvZ3B1
L2RybS91ZGwvdWRsX2ZiLmMgICAgICB8IDI3MCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KIGRyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21haW4uYyAgICB8ICAgMiAtCiBkcml2ZXJzL2dw
dS9kcm0vdWRsL3VkbF9tb2Rlc2V0LmMgfCAgIDMgKy0KIDUgZmlsZXMgY2hhbmdlZCwgNyBpbnNl
cnRpb25zKCspLCAyNzcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L3VkbC91ZGxfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuYwppbmRleCA1NjNj
YzU4MDllNTYuLjU1YzBmOWRmZWUyOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3VkbC91
ZGxfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMKQEAgLTcsNiArNyw3
IEBACiAKICNpbmNsdWRlIDxkcm0vZHJtX2NydGNfaGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2Ry
bV9kcnYuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9k
cm1fZmlsZS5oPgogI2luY2x1ZGUgPGRybS9kcm1fZ2VtX3NobWVtX2hlbHBlci5oPgogI2luY2x1
ZGUgPGRybS9kcm1faW9jdGwuaD4KQEAgLTQ3LDYgKzQ4LDggQEAgc3RhdGljIHN0cnVjdCBkcm1f
ZHJpdmVyIGRyaXZlciA9IHsKIAkuZHJpdmVyX2ZlYXR1cmVzID0gRFJJVkVSX01PREVTRVQgfCBE
UklWRVJfR0VNLAogCS5yZWxlYXNlID0gdWRsX2RyaXZlcl9yZWxlYXNlLAogCisJLmxhc3RjbG9z
ZSA9IGRybV9mYl9oZWxwZXJfbGFzdGNsb3NlLAorCiAJLyogZ2VtIGhvb2tzICovCiAJLmdlbV9j
cmVhdGVfb2JqZWN0ID0gdWRsX2RyaXZlcl9nZW1fY3JlYXRlX29iamVjdCwKIApAQCAtMTE5LDcg
KzEyMiw2IEBAIHN0YXRpYyB2b2lkIHVkbF91c2JfZGlzY29ubmVjdChzdHJ1Y3QgdXNiX2ludGVy
ZmFjZSAqaW50ZXJmYWNlKQogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSB1c2JfZ2V0X2ludGZk
YXRhKGludGVyZmFjZSk7CiAKIAlkcm1fa21zX2hlbHBlcl9wb2xsX2Rpc2FibGUoZGV2KTsKLQl1
ZGxfZmJkZXZfdW5wbHVnKGRldik7CiAJdWRsX2Ryb3BfdXNiKGRldik7CiAJZHJtX2Rldl91bnBs
dWcoZGV2KTsKIAlkcm1fZGV2X3B1dChkZXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L3VkbC91ZGxfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaAppbmRleCA5ODdk
OTlhZTJkZmEuLjViZGM1Nzc3OWY5NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3VkbC91
ZGxfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmgKQEAgLTQ3LDggKzQ3
LDYgQEAgc3RydWN0IHVyYl9saXN0IHsKIAlzaXplX3Qgc2l6ZTsKIH07CiAKLXN0cnVjdCB1ZGxf
ZmJkZXY7Ci0KIHN0cnVjdCB1ZGxfZGV2aWNlIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSBkcm07CiAJ
c3RydWN0IGRldmljZSAqZGV2OwpAQCAtNjIsNyArNjAsNiBAQCBzdHJ1Y3QgdWRsX2RldmljZSB7
CiAJc3RydWN0IHVyYl9saXN0IHVyYnM7CiAJYXRvbWljX3QgbG9zdF9waXhlbHM7IC8qIDEgPSBh
IHJlbmRlciBvcCBmYWlsZWQuIE5lZWQgc2NyZWVuIHJlZnJlc2ggKi8KIAotCXN0cnVjdCB1ZGxf
ZmJkZXYgKmZiZGV2OwogCWNoYXIgbW9kZV9idWZbMTAyNF07CiAJdWludDMyX3QgbW9kZV9idWZf
bGVuOwogCWF0b21pY190IGJ5dGVzX3JlbmRlcmVkOyAvKiByYXcgcGl4ZWwtYnl0ZXMgZHJpdmVy
IGFza2VkIHRvIHJlbmRlciAqLwpAQCAtOTgsOCArOTUsNiBAQCBpbnQgdWRsX2luaXQoc3RydWN0
IHVkbF9kZXZpY2UgKnVkbCk7CiB2b2lkIHVkbF9maW5pKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
OwogCiBpbnQgdWRsX2ZiZGV2X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldik7Ci12b2lkIHVk
bF9mYmRldl9jbGVhbnVwKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpOwotdm9pZCB1ZGxfZmJkZXZf
dW5wbHVnKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpOwogc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAq
CiB1ZGxfZmJfdXNlcl9mYl9jcmVhdGUoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJICAgICAg
c3RydWN0IGRybV9maWxlICpmaWxlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3VkbC91
ZGxfZmIuYyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2ZiLmMKaW5kZXggZjgxNTNiNzI2MzQz
Li5hZmU3NGY4OTJhMmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2ZiLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZmIuYwpAQCAtMjAsMTkgKzIwLDkgQEAKIAog
I2luY2x1ZGUgInVkbF9kcnYuaCIKIAotI2RlZmluZSBETF9ERUZJT19XUklURV9ERUxBWSAgICAo
SFovMjApIC8qIGZiX2RlZmVycmVkX2lvLmRlbGF5IGluIGppZmZpZXMgKi8KLQotc3RhdGljIGlu
dCBmYl9kZWZpbyA9IDA7ICAvKiBPcHRpb25hbGx5IGVuYWJsZSBleHBlcmltZW50YWwgZmJfZGVm
aW8gbW1hcCBzdXBwb3J0ICovCiBzdGF0aWMgaW50IGZiX2JwcCA9IDE2OwogCiBtb2R1bGVfcGFy
YW0oZmJfYnBwLCBpbnQsIFNfSVdVU1IgfCBTX0lSVVNSIHwgU19JV0dSUCB8IFNfSVJHUlApOwot
bW9kdWxlX3BhcmFtKGZiX2RlZmlvLCBpbnQsIFNfSVdVU1IgfCBTX0lSVVNSIHwgU19JV0dSUCB8
IFNfSVJHUlApOwotCi1zdHJ1Y3QgdWRsX2ZiZGV2IHsKLQlzdHJ1Y3QgZHJtX2ZiX2hlbHBlciBo
ZWxwZXI7IC8qIG11c3QgYmUgZmlyc3QgKi8KLQlzdHJ1Y3QgdWRsX2ZyYW1lYnVmZmVyIHVmYjsK
LQlpbnQgZmJfY291bnQ7Ci19OwogCiAjZGVmaW5lIERMX0FMSUdOX1VQKHgsIGEpIEFMSUdOKHgs
IGEpCiAjZGVmaW5lIERMX0FMSUdOX0RPV04oeCwgYSkgQUxJR05fRE9XTih4LCBhKQpAQCAtMTU2
LDEyMyArMTQ2LDYgQEAgaW50IHVkbF9oYW5kbGVfZGFtYWdlKHN0cnVjdCB1ZGxfZnJhbWVidWZm
ZXIgKmZiLCBpbnQgeCwgaW50IHksCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgdWRsX2Zi
X21tYXAoc3RydWN0IGZiX2luZm8gKmluZm8sIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQot
ewotCXVuc2lnbmVkIGxvbmcgc3RhcnQgPSB2bWEtPnZtX3N0YXJ0OwotCXVuc2lnbmVkIGxvbmcg
c2l6ZSA9IHZtYS0+dm1fZW5kIC0gdm1hLT52bV9zdGFydDsKLQl1bnNpZ25lZCBsb25nIG9mZnNl
dDsKLQl1bnNpZ25lZCBsb25nIHBhZ2UsIHBvczsKLQotCWlmICh2bWEtPnZtX3Bnb2ZmID4gKH4w
VUwgPj4gUEFHRV9TSElGVCkpCi0JCXJldHVybiAtRUlOVkFMOwotCi0Jb2Zmc2V0ID0gdm1hLT52
bV9wZ29mZiA8PCBQQUdFX1NISUZUOwotCi0JaWYgKG9mZnNldCA+IGluZm8tPmZpeC5zbWVtX2xl
biB8fCBzaXplID4gaW5mby0+Zml4LnNtZW1fbGVuIC0gb2Zmc2V0KQotCQlyZXR1cm4gLUVJTlZB
TDsKLQotCXBvcyA9ICh1bnNpZ25lZCBsb25nKWluZm8tPmZpeC5zbWVtX3N0YXJ0ICsgb2Zmc2V0
OwotCi0JcHJfZGVidWcoIm1tYXAoKSBmcmFtZWJ1ZmZlciBhZGRyOiVsdSBzaXplOiVsdVxuIiwK
LQkJICBwb3MsIHNpemUpOwotCi0JLyogV2UgZG9uJ3Qgd2FudCB0aGUgZnJhbWVidWZmZXIgdG8g
YmUgbWFwcGVkIGVuY3J5cHRlZCAqLwotCXZtYS0+dm1fcGFnZV9wcm90ID0gcGdwcm90X2RlY3J5
cHRlZCh2bWEtPnZtX3BhZ2VfcHJvdCk7Ci0KLQl3aGlsZSAoc2l6ZSA+IDApIHsKLQkJcGFnZSA9
IHZtYWxsb2NfdG9fcGZuKCh2b2lkICopcG9zKTsKLQkJaWYgKHJlbWFwX3Bmbl9yYW5nZSh2bWEs
IHN0YXJ0LCBwYWdlLCBQQUdFX1NJWkUsIFBBR0VfU0hBUkVEKSkKLQkJCXJldHVybiAtRUFHQUlO
OwotCi0JCXN0YXJ0ICs9IFBBR0VfU0laRTsKLQkJcG9zICs9IFBBR0VfU0laRTsKLQkJaWYgKHNp
emUgPiBQQUdFX1NJWkUpCi0JCQlzaXplIC09IFBBR0VfU0laRTsKLQkJZWxzZQotCQkJc2l6ZSA9
IDA7Ci0JfQotCi0JLyogVk1fSU8gfCBWTV9ET05URVhQQU5EIHwgVk1fRE9OVERVTVAgYXJlIHNl
dCBieSByZW1hcF9wZm5fcmFuZ2UoKSAqLwotCXJldHVybiAwOwotfQotCi0vKgotICogSXQncyBj
b21tb24gZm9yIHNldmVyYWwgY2xpZW50cyB0byBoYXZlIGZyYW1lYnVmZmVyIG9wZW4gc2ltdWx0
YW5lb3VzbHkuCi0gKiBlLmcuIGJvdGggZmJjb24gYW5kIFguIE1ha2VzIHRoaW5ncyBpbnRlcmVz
dGluZy4KLSAqIEFzc3VtZXMgY2FsbGVyIGlzIGhvbGRpbmcgaW5mby0+bG9jayAoZm9yIG9wZW4g
YW5kIHJlbGVhc2UgYXQgbGVhc3QpCi0gKi8KLXN0YXRpYyBpbnQgdWRsX2ZiX29wZW4oc3RydWN0
IGZiX2luZm8gKmluZm8sIGludCB1c2VyKQotewotCXN0cnVjdCB1ZGxfZmJkZXYgKnVmYmRldiA9
IGluZm8tPnBhcjsKLQlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gdWZiZGV2LT51ZmIuYmFzZS5k
ZXY7Ci0Jc3RydWN0IHVkbF9kZXZpY2UgKnVkbCA9IHRvX3VkbChkZXYpOwotCi0JLyogSWYgdGhl
IFVTQiBkZXZpY2UgaXMgZ29uZSwgd2UgZG9uJ3QgYWNjZXB0IG5ldyBvcGVucyAqLwotCWlmIChk
cm1fZGV2X2lzX3VucGx1Z2dlZCgmdWRsLT5kcm0pKQotCQlyZXR1cm4gLUVOT0RFVjsKLQotCXVm
YmRldi0+ZmJfY291bnQrKzsKLQotI2lmZGVmIENPTkZJR19EUk1fRkJERVZfRU1VTEFUSU9OCi0J
aWYgKGZiX2RlZmlvICYmIChpbmZvLT5mYmRlZmlvID09IE5VTEwpKSB7Ci0JCS8qIGVuYWJsZSBk
ZWZpbyBhdCBsYXN0IG1vbWVudCBpZiBub3QgZGlzYWJsZWQgYnkgY2xpZW50ICovCi0KLQkJc3Ry
dWN0IGZiX2RlZmVycmVkX2lvICpmYmRlZmlvOwotCi0JCWZiZGVmaW8gPSBremFsbG9jKHNpemVv
ZihzdHJ1Y3QgZmJfZGVmZXJyZWRfaW8pLCBHRlBfS0VSTkVMKTsKLQotCQlpZiAoZmJkZWZpbykg
ewotCQkJZmJkZWZpby0+ZGVsYXkgPSBETF9ERUZJT19XUklURV9ERUxBWTsKLQkJCWZiZGVmaW8t
PmRlZmVycmVkX2lvID0gZHJtX2ZiX2hlbHBlcl9kZWZlcnJlZF9pbzsKLQkJfQotCi0JCWluZm8t
PmZiZGVmaW8gPSBmYmRlZmlvOwotCQlmYl9kZWZlcnJlZF9pb19pbml0KGluZm8pOwotCX0KLSNl
bmRpZgotCi0JcHJfZGVidWcoIm9wZW4gL2Rldi9mYiVkIHVzZXI9JWQgZmJfaW5mbz0lcCBjb3Vu
dD0lZFxuIiwKLQkJICBpbmZvLT5ub2RlLCB1c2VyLCBpbmZvLCB1ZmJkZXYtPmZiX2NvdW50KTsK
LQotCXJldHVybiAwOwotfQotCi0KLS8qCi0gKiBBc3N1bWVzIGNhbGxlciBpcyBob2xkaW5nIGlu
Zm8tPmxvY2sgbXV0ZXggKGZvciBvcGVuIGFuZCByZWxlYXNlIGF0IGxlYXN0KQotICovCi1zdGF0
aWMgaW50IHVkbF9mYl9yZWxlYXNlKHN0cnVjdCBmYl9pbmZvICppbmZvLCBpbnQgdXNlcikKLXsK
LQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXYgPSBpbmZvLT5wYXI7Ci0KLQl1ZmJkZXYtPmZiX2Nv
dW50LS07Ci0KLSNpZmRlZiBDT05GSUdfRFJNX0ZCREVWX0VNVUxBVElPTgotCWlmICgodWZiZGV2
LT5mYl9jb3VudCA9PSAwKSAmJiAoaW5mby0+ZmJkZWZpbykpIHsKLQkJZmJfZGVmZXJyZWRfaW9f
Y2xlYW51cChpbmZvKTsKLQkJa2ZyZWUoaW5mby0+ZmJkZWZpbyk7Ci0JCWluZm8tPmZiZGVmaW8g
PSBOVUxMOwotCQlpbmZvLT5mYm9wcy0+ZmJfbW1hcCA9IHVkbF9mYl9tbWFwOwotCX0KLSNlbmRp
ZgotCi0JcHJfZGVidWcoInJlbGVhc2VkIC9kZXYvZmIlZCB1c2VyPSVkIGNvdW50PSVkXG4iLAot
CQlpbmZvLT5ub2RlLCB1c2VyLCB1ZmJkZXYtPmZiX2NvdW50KTsKLQotCXJldHVybiAwOwotfQot
Ci1zdGF0aWMgc3RydWN0IGZiX29wcyB1ZGxmYl9vcHMgPSB7Ci0JLm93bmVyID0gVEhJU19NT0RV
TEUsCi0JRFJNX0ZCX0hFTFBFUl9ERUZBVUxUX09QUywKLQkuZmJfZmlsbHJlY3QgPSBkcm1fZmJf
aGVscGVyX3N5c19maWxscmVjdCwKLQkuZmJfY29weWFyZWEgPSBkcm1fZmJfaGVscGVyX3N5c19j
b3B5YXJlYSwKLQkuZmJfaW1hZ2VibGl0ID0gZHJtX2ZiX2hlbHBlcl9zeXNfaW1hZ2VibGl0LAot
CS5mYl9tbWFwID0gdWRsX2ZiX21tYXAsCi0JLmZiX29wZW4gPSB1ZGxfZmJfb3BlbiwKLQkuZmJf
cmVsZWFzZSA9IHVkbF9mYl9yZWxlYXNlLAotfTsKLQogc3RhdGljIGludCB1ZGxfdXNlcl9mcmFt
ZWJ1ZmZlcl9kaXJ0eShzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKIAkJCQkgICAgICBzdHJ1
Y3QgZHJtX2ZpbGUgKmZpbGUsCiAJCQkJICAgICAgdW5zaWduZWQgZmxhZ3MsIHVuc2lnbmVkIGNv
bG9yLApAQCAtMzQ3LDE1NCArMjIwLDE1IEBAIHVkbF9mcmFtZWJ1ZmZlcl9pbml0KHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsCiAJcmV0dXJuIHJldDsKIH0KIAotCi1zdGF0aWMgaW50IHVkbGZiX2Ny
ZWF0ZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyLAotCQkJc3RydWN0IGRybV9mYl9oZWxw
ZXJfc3VyZmFjZV9zaXplICpzaXplcykKLXsKLQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXYgPQot
CQljb250YWluZXJfb2YoaGVscGVyLCBzdHJ1Y3QgdWRsX2ZiZGV2LCBoZWxwZXIpOwotCXN0cnVj
dCBkcm1fZGV2aWNlICpkZXYgPSB1ZmJkZXYtPmhlbHBlci5kZXY7Ci0Jc3RydWN0IGZiX2luZm8g
KmluZm87Ci0Jc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmI7Ci0Jc3RydWN0IGRybV9tb2RlX2Zi
X2NtZDIgbW9kZV9jbWQ7Ci0Jc3RydWN0IGRybV9nZW1fc2htZW1fb2JqZWN0ICpzaG1lbTsKLQl2
b2lkICp2YWRkcjsKLQl1aW50MzJfdCBzaXplOwotCWludCByZXQgPSAwOwotCi0JaWYgKHNpemVz
LT5zdXJmYWNlX2JwcCA9PSAyNCkKLQkJc2l6ZXMtPnN1cmZhY2VfYnBwID0gMzI7Ci0KLQltb2Rl
X2NtZC53aWR0aCA9IHNpemVzLT5zdXJmYWNlX3dpZHRoOwotCW1vZGVfY21kLmhlaWdodCA9IHNp
emVzLT5zdXJmYWNlX2hlaWdodDsKLQltb2RlX2NtZC5waXRjaGVzWzBdID0gbW9kZV9jbWQud2lk
dGggKiAoKHNpemVzLT5zdXJmYWNlX2JwcCArIDcpIC8gOCk7Ci0KLQltb2RlX2NtZC5waXhlbF9m
b3JtYXQgPSBkcm1fbW9kZV9sZWdhY3lfZmJfZm9ybWF0KHNpemVzLT5zdXJmYWNlX2JwcCwKLQkJ
CQkJCQkgIHNpemVzLT5zdXJmYWNlX2RlcHRoKTsKLQotCXNpemUgPSBtb2RlX2NtZC5waXRjaGVz
WzBdICogbW9kZV9jbWQuaGVpZ2h0OwotCXNpemUgPSBBTElHTihzaXplLCBQQUdFX1NJWkUpOwot
Ci0Jc2htZW0gPSBkcm1fZ2VtX3NobWVtX2NyZWF0ZShkZXYsIHNpemUpOwotCWlmIChJU19FUlIo
c2htZW0pKSB7Ci0JCXJldCA9IFBUUl9FUlIoc2htZW0pOwotCQlnb3RvIG91dDsKLQl9Ci0KLQl2
YWRkciA9IGRybV9nZW1fc2htZW1fdm1hcCgmc2htZW0tPmJhc2UpOwotCWlmIChJU19FUlIodmFk
ZHIpKSB7Ci0JCXJldCA9IFBUUl9FUlIodmFkZHIpOwotCQlEUk1fRVJST1IoImZhaWxlZCB0byB2
bWFwIGZiXG4iKTsKLQkJZ290byBvdXRfZ2ZyZWU7Ci0JfQotCi0JaW5mbyA9IGRybV9mYl9oZWxw
ZXJfYWxsb2NfZmJpKGhlbHBlcik7Ci0JaWYgKElTX0VSUihpbmZvKSkgewotCQlyZXQgPSBQVFJf
RVJSKGluZm8pOwotCQlnb3RvIG91dF9nZnJlZTsKLQl9Ci0KLQlyZXQgPSB1ZGxfZnJhbWVidWZm
ZXJfaW5pdChkZXYsICZ1ZmJkZXYtPnVmYiwgJm1vZGVfY21kLCBzaG1lbSk7Ci0JaWYgKHJldCkK
LQkJZ290byBvdXRfZ2ZyZWU7Ci0KLQlmYiA9ICZ1ZmJkZXYtPnVmYi5iYXNlOwotCi0JdWZiZGV2
LT5oZWxwZXIuZmIgPSBmYjsKLQotCWluZm8tPnNjcmVlbl9iYXNlID0gdmFkZHI7Ci0JaW5mby0+
Zml4LnNtZW1fbGVuID0gc2l6ZTsKLQlpbmZvLT5maXguc21lbV9zdGFydCA9ICh1bnNpZ25lZCBs
b25nKXZhZGRyOwotCi0JaW5mby0+ZmJvcHMgPSAmdWRsZmJfb3BzOwotCWRybV9mYl9oZWxwZXJf
ZmlsbF9pbmZvKGluZm8sICZ1ZmJkZXYtPmhlbHBlciwgc2l6ZXMpOwotCi0JRFJNX0RFQlVHX0tN
UygiYWxsb2NhdGVkICVkeCVkIHZtYWwgJXBcbiIsCi0JCSAgICAgIGZiLT53aWR0aCwgZmItPmhl
aWdodCwKLQkJICAgICAgdWZiZGV2LT51ZmIuc2htZW0tPnZhZGRyKTsKLQotCXJldHVybiByZXQ7
Ci1vdXRfZ2ZyZWU6Ci0JZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZ1ZmJkZXYtPnVmYi5z
aG1lbS0+YmFzZSk7Ci1vdXQ6Ci0JcmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGNvbnN0IHN0cnVj
dCBkcm1fZmJfaGVscGVyX2Z1bmNzIHVkbF9mYl9oZWxwZXJfZnVuY3MgPSB7Ci0JLmZiX3Byb2Jl
ID0gdWRsZmJfY3JlYXRlLAotfTsKLQotc3RhdGljIHZvaWQgdWRsX2ZiZGV2X2Rlc3Ryb3koc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwKLQkJCSAgICAgIHN0cnVjdCB1ZGxfZmJkZXYgKnVmYmRldikK
LXsKLQlkcm1fZmJfaGVscGVyX3VucmVnaXN0ZXJfZmJpKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JZHJt
X2ZiX2hlbHBlcl9maW5pKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JaWYgKHVmYmRldi0+dWZiLnNobWVt
KSB7Ci0JCWRybV9mcmFtZWJ1ZmZlcl91bnJlZ2lzdGVyX3ByaXZhdGUoJnVmYmRldi0+dWZiLmJh
c2UpOwotCQlkcm1fZnJhbWVidWZmZXJfY2xlYW51cCgmdWZiZGV2LT51ZmIuYmFzZSk7Ci0JCWRy
bV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZCgmdWZiZGV2LT51ZmIuc2htZW0tPmJhc2UpOwotCX0K
LX0KLQogaW50IHVkbF9mYmRldl9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiB7Ci0Jc3Ry
dWN0IHVkbF9kZXZpY2UgKnVkbCA9IHRvX3VkbChkZXYpOwogCWludCBicHBfc2VsID0gZmJfYnBw
OwotCXN0cnVjdCB1ZGxfZmJkZXYgKnVmYmRldjsKIAlpbnQgcmV0OwogCi0JdWZiZGV2ID0ga3ph
bGxvYyhzaXplb2Yoc3RydWN0IHVkbF9mYmRldiksIEdGUF9LRVJORUwpOwotCWlmICghdWZiZGV2
KQotCQlyZXR1cm4gLUVOT01FTTsKLQotCXVkbC0+ZmJkZXYgPSB1ZmJkZXY7Ci0KLQlkcm1fZmJf
aGVscGVyX3ByZXBhcmUoZGV2LCAmdWZiZGV2LT5oZWxwZXIsICZ1ZGxfZmJfaGVscGVyX2Z1bmNz
KTsKLQotCXJldCA9IGRybV9mYl9oZWxwZXJfaW5pdChkZXYsICZ1ZmJkZXYtPmhlbHBlciwgMSk7
Ci0JaWYgKHJldCkKLQkJZ290byBmcmVlOwotCi0JcmV0ID0gZHJtX2ZiX2hlbHBlcl9zaW5nbGVf
YWRkX2FsbF9jb25uZWN0b3JzKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JaWYgKHJldCkKLQkJZ290byBm
aW5pOwotCi0JLyogZGlzYWJsZSBhbGwgdGhlIHBvc3NpYmxlIG91dHB1dHMvY3J0Y3MgYmVmb3Jl
IGVudGVyaW5nIEtNUyBtb2RlICovCi0JZHJtX2hlbHBlcl9kaXNhYmxlX3VudXNlZF9mdW5jdGlv
bnMoZGV2KTsKLQotCXJldCA9IGRybV9mYl9oZWxwZXJfaW5pdGlhbF9jb25maWcoJnVmYmRldi0+
aGVscGVyLCBicHBfc2VsKTsKKwlyZXQgPSBkcm1fZmJkZXZfZ2VuZXJpY19zZXR1cChkZXYsIGJw
cF9zZWwpOwogCWlmIChyZXQpCi0JCWdvdG8gZmluaTsKLQorCQlyZXR1cm4gcmV0OwogCXJldHVy
biAwOwotCi1maW5pOgotCWRybV9mYl9oZWxwZXJfZmluaSgmdWZiZGV2LT5oZWxwZXIpOwotZnJl
ZToKLQlrZnJlZSh1ZmJkZXYpOwotCXJldHVybiByZXQ7Ci19Ci0KLXZvaWQgdWRsX2ZiZGV2X2Ns
ZWFudXAoc3RydWN0IGRybV9kZXZpY2UgKmRldikKLXsKLQlzdHJ1Y3QgdWRsX2RldmljZSAqdWRs
ID0gdG9fdWRsKGRldik7Ci0JaWYgKCF1ZGwtPmZiZGV2KQotCQlyZXR1cm47Ci0KLQl1ZGxfZmJk
ZXZfZGVzdHJveShkZXYsIHVkbC0+ZmJkZXYpOwotCWtmcmVlKHVkbC0+ZmJkZXYpOwotCXVkbC0+
ZmJkZXYgPSBOVUxMOwotfQotCi12b2lkIHVkbF9mYmRldl91bnBsdWcoc3RydWN0IGRybV9kZXZp
Y2UgKmRldikKLXsKLQlzdHJ1Y3QgdWRsX2RldmljZSAqdWRsID0gdG9fdWRsKGRldik7Ci0Jc3Ry
dWN0IHVkbF9mYmRldiAqdWZiZGV2OwotCWlmICghdWRsLT5mYmRldikKLQkJcmV0dXJuOwotCi0J
dWZiZGV2ID0gdWRsLT5mYmRldjsKLQlkcm1fZmJfaGVscGVyX3VubGlua19mYmkoJnVmYmRldi0+
aGVscGVyKTsKIH0KIAogc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWluLmMgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWlu
LmMKaW5kZXggNGU4NTRlMDE3MzkwLi4yYTYzOTkyOTBmMDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS91ZGwvdWRsX21haW4uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWlu
LmMKQEAgLTM2Nyw2ICszNjcsNCBAQCB2b2lkIHVkbF9maW5pKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpCiAKIAlpZiAodWRsLT51cmJzLmNvdW50KQogCQl1ZGxfZnJlZV91cmJfbGlzdChkZXYpOwot
Ci0JdWRsX2ZiZGV2X2NsZWFudXAoZGV2KTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS91ZGwvdWRsX21vZGVzZXQuYyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21vZGVzZXQuYwpp
bmRleCBiYzFhYjYwNjBkYzYuLjE1MTdkNWU4ODFiOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL3VkbC91ZGxfbW9kZXNldC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21vZGVz
ZXQuYwpAQCAtMTAsNiArMTAsNyBAQAogICovCiAKICNpbmNsdWRlIDxkcm0vZHJtX2NydGNfaGVs
cGVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9mYl9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJt
X21vZGVzZXRfaGVscGVyX3Z0YWJsZXMuaD4KICNpbmNsdWRlIDxkcm0vZHJtX3ZibGFuay5oPgog
CkBAIC00MjIsNyArNDIzLDcgQEAgc3RhdGljIGludCB1ZGxfY3J0Y19pbml0KHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYpCiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZHJtX21vZGVfY29uZmlnX2Z1bmNz
IHVkbF9tb2RlX2Z1bmNzID0gewogCS5mYl9jcmVhdGUgPSB1ZGxfZmJfdXNlcl9mYl9jcmVhdGUs
Ci0JLm91dHB1dF9wb2xsX2NoYW5nZWQgPSBOVUxMLAorCS5vdXRwdXRfcG9sbF9jaGFuZ2VkID0g
ZHJtX2ZiX2hlbHBlcl9vdXRwdXRfcG9sbF9jaGFuZ2VkLAogfTsKIAogaW50IHVkbF9tb2Rlc2V0
X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldikKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApk
cmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
