Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 85625D8988
	for <lists+dri-devel@lfdr.de>; Wed, 16 Oct 2019 09:34:19 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9C6BA6E8DF;
	Wed, 16 Oct 2019 07:33:48 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-io1-xd43.google.com (mail-io1-xd43.google.com
 [IPv6:2607:f8b0:4864:20::d43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AFB406E879
 for <dri-devel@lists.freedesktop.org>; Tue, 15 Oct 2019 18:16:13 +0000 (UTC)
Received: by mail-io1-xd43.google.com with SMTP id v2so48170415iob.10
 for <dri-devel@lists.freedesktop.org>; Tue, 15 Oct 2019 11:16:13 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=61L/7JVQYlLLQF3pSRCfeQUUbhycAuceMr8wKv52LZ4=;
 b=iDWQkjx+RNk/SndEmUQMQdCEfZ/DL5bBDbmWRPvu0gvyKaqYmkME8fYTLX90ys3rjV
 C6RTDnoeQoj7SPT6jqrYGCWYf+SOU/3w5rEb6zGXCwSjBfo3/mGHuNm1avRh4UFXDNS2
 gpXQ76gLHoa2FWiEO1FaiuCsGu3oF4YwV87DVLcayM2qwjZtaGWA8uA4OFRg5uWvypZ+
 6IbJq4oBBTC6rk+dbe1uL3gnpJxZsrJuZXU+QW7XsBgCL7WqnO5/qhKt+JURInXm0HX1
 v41+XHERhm4uabl6m4waOAwLV0p/yRJdEIWH8kH6jmltgkrsbz/o7S42gZNJ+r27Tunz
 sh5A==
X-Gm-Message-State: APjAAAXTvvL8Pp8nJ+4nae4rZEV3IxZIQ37SZLHba0dr8zwtJVO1++O1
 5NcnhkXd82U6k7qYtl7s+c+oOw==
X-Google-Smtp-Source: APXvYqwQlHHIlmunkDIx+lEH3PfXFYQTIHf0kWuQ5aKgheLpVGIowWoTQv4+rIypqRHadZfoCcpuVA==
X-Received: by 2002:a92:1604:: with SMTP id r4mr7088375ill.253.1571163372227; 
 Tue, 15 Oct 2019 11:16:12 -0700 (PDT)
Received: from ziepe.ca ([24.114.26.129])
 by smtp.gmail.com with ESMTPSA id t26sm13662258ios.20.2019.10.15.11.16.11
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Tue, 15 Oct 2019 11:16:11 -0700 (PDT)
Received: from jgg by jggl.ziepe.ca with local (Exim 4.90_1)
 (envelope-from <jgg@ziepe.ca>)
 id 1iKRJT-0002C6-E0; Tue, 15 Oct 2019 15:12:51 -0300
From: Jason Gunthorpe <jgg@ziepe.ca>
To: Jerome Glisse <jglisse@redhat.com>, Ralph Campbell <rcampbell@nvidia.com>,
 John Hubbard <jhubbard@nvidia.com>, Felix.Kuehling@amd.com
Subject: [PATCH hmm 05/15] RDMA/odp: Use mmu_range_notifier_insert()
Date: Tue, 15 Oct 2019 15:12:32 -0300
Message-Id: <20191015181242.8343-6-jgg@ziepe.ca>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191015181242.8343-1-jgg@ziepe.ca>
References: <20191015181242.8343-1-jgg@ziepe.ca>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 16 Oct 2019 07:33:45 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=ziepe.ca; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=61L/7JVQYlLLQF3pSRCfeQUUbhycAuceMr8wKv52LZ4=;
 b=VEiXzt4rM5l0+W+NpcfhmlfkNG/OirOl0wx+yrPLtAwSYjjysetvmlJ3ezWzWZPfgF
 QN7edtybP/9YXRggtkau9Zonp4aPrRqIqpCjtU9H+5n2ZcCpeSARHZ2FCc0xPVLfQWoQ
 IHjhhYSlpOW5kzybwabFBHcq7r3YlM3sPlzBJj5vHAg8ioLRr8dciZ4Hc6tLo4Lf8SDD
 tOcwmN3S8s4DgHtYeiQDKxRLzLq2qBZt87Qw8NKVDHb58l1JAeezfTMosGi3hT0YuR2a
 9yuHr7dXLxc6zu7+ZtIJoCyy+jiMS/nSKjYFNFLVlpWwIEQRmPbREGvjXymFBZdB2HnC
 Ox8A==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Andrea Arcangeli <aarcange@redhat.com>, linux-rdma@vger.kernel.org,
 amd-gfx@lists.freedesktop.org, linux-mm@kvack.org,
 Jason Gunthorpe <jgg@mellanox.com>, dri-devel@lists.freedesktop.org,
 Ben Skeggs <bskeggs@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSmFzb24gR3VudGhvcnBlIDxqZ2dAbWVsbGFub3guY29tPgoKUmVwbGFjZSB0aGUgaW50
ZXJuYWwgaW50ZXJ2YWwgdHJlZSBiYXNlZCBtbXUgbm90aWZpZXIgd2l0aCB0aGUgbmV3IGNvbW1v
bgptbXVfcmFuZ2Vfbm90aWZpZXJfaW5zZXJ0KCkgQVBJLiBUaGlzIHJlbW92ZXMgYSBsb3Qgb2Yg
Y29kZSBhbmQgZml4ZXMgYQpkZWFkbG9jayB0aGF0IGNhbiBiZSB0cmlnZ2VyZWQgaW4gT0RQOgoK
IHphcF9wYWdlX3JhbmdlKCkKICBtbXVfbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgp
CiAgIFsuLl0KICAgIGliX3VtZW1fbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgpCiAg
ICAgICBkb3duX3JlYWQoJnBlcl9tbS0+dW1lbV9yd3NlbSkKICB1bm1hcF9zaW5nbGVfdm1hKCkK
ICAgIFsuLl0KICAgICAgX19zcGxpdF9odWdlX3BhZ2VfcG1kKCkKICAgICAgICBtbXVfbm90aWZp
ZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgpCiAgICAgICAgWy4uXQogICAgICAgICAgIGliX3Vt
ZW1fbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgpCiAgICAgICAgICAgICAgZG93bl9y
ZWFkKCZwZXJfbW0tPnVtZW1fcndzZW0pICAgLy8gREVBRExPQ0sKCiAgICAgICAgbW11X25vdGlm
aWVyX2ludmFsaWRhdGVfcmFuZ2VfZW5kKCkKICAgICAgICAgICB1cF9yZWFkKCZwZXJfbW0tPnVt
ZW1fcndzZW0pCiAgbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2VfZW5kKCkKICAgICB1cF9y
ZWFkKCZwZXJfbW0tPnVtZW1fcndzZW0pCgpUaGUgdW1lbV9yd3NlbSBpcyBoZWxkIGFjcm9zcyB0
aGUgcmFuZ2Vfc3RhcnQvZW5kIGFzIHRoZSBPRFAgYWxnb3JpdGhtIGZvcgppbnZhbGlkYXRlX3Jh
bmdlX2VuZCBjYW5ub3QgdG9sZXJhdGUgY2hhbmdlcyB0byB0aGUgaW50ZXJ2YWwKdHJlZS4gSG93
ZXZlciwgZHVlIHRvIHRoZSBuZXN0ZWQgaW52YWxpZGF0aW9uIHJlZ2lvbnMgdGhlIHNlY29uZApk
b3duX3JlYWQoKSBjYW4gZGVhZGxvY2sgaWYgdGhlcmUgYXJlIGNvbXBldGluZyB3cml0ZXJzLiBU
aGUgbmV3IGNvcmUgY29kZQpwcm92aWRlcyBhbiBhbHRlcm5hdGl2ZSBzY2hlbWUgdG8gc29sdmUg
dGhpcyBwcm9ibGVtLgoKRml4ZXM6IGNhNzQ4YzM5ZWEzZiAoIlJETUEvdW1lbTogR2V0IHJpZCBv
ZiBwZXJfbW0tPm5vdGlmaWVyX2NvdW50IikKU2lnbmVkLW9mZi1ieTogSmFzb24gR3VudGhvcnBl
IDxqZ2dAbWVsbGFub3guY29tPgotLS0KIGRyaXZlcnMvaW5maW5pYmFuZC9jb3JlL2RldmljZS5j
ICAgICB8ICAgMSAtCiBkcml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtX29kcC5jICAgfCAyODgg
KysrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2luZmluaWJhbmQvaHcvbWx4NS9t
bHg1X2liLmggfCAgIDcgKy0KIGRyaXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L21yLmMgICAgICB8
ICAgMyArLQogZHJpdmVycy9pbmZpbmliYW5kL2h3L21seDUvb2RwLmMgICAgIHwgIDQ4ICsrLS0t
CiBpbmNsdWRlL3JkbWEvaWJfdW1lbV9vZHAuaCAgICAgICAgICAgfCAgNjUgKystLS0tCiBpbmNs
dWRlL3JkbWEvaWJfdmVyYnMuaCAgICAgICAgICAgICAgfCAgIDIgLQogNyBmaWxlcyBjaGFuZ2Vk
LCA2NyBpbnNlcnRpb25zKCspLCAzNDcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9pbmZpbmliYW5kL2NvcmUvZGV2aWNlLmMgYi9kcml2ZXJzL2luZmluaWJhbmQvY29yZS9kZXZp
Y2UuYwppbmRleCAyZGQyY2ZlOWI1NjEzNi4uYWM3OTI0YjNjNzNhYmUgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvaW5maW5pYmFuZC9jb3JlL2RldmljZS5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9j
b3JlL2RldmljZS5jCkBAIC0yNjE3LDcgKzI2MTcsNiBAQCB2b2lkIGliX3NldF9kZXZpY2Vfb3Bz
KHN0cnVjdCBpYl9kZXZpY2UgKmRldiwgY29uc3Qgc3RydWN0IGliX2RldmljZV9vcHMgKm9wcykK
IAlTRVRfREVWSUNFX09QKGRldl9vcHMsIGdldF92Zl9jb25maWcpOwogCVNFVF9ERVZJQ0VfT1Ao
ZGV2X29wcywgZ2V0X3ZmX3N0YXRzKTsKIAlTRVRfREVWSUNFX09QKGRldl9vcHMsIGluaXRfcG9y
dCk7Ci0JU0VUX0RFVklDRV9PUChkZXZfb3BzLCBpbnZhbGlkYXRlX3JhbmdlKTsKIAlTRVRfREVW
SUNFX09QKGRldl9vcHMsIGl3X2FjY2VwdCk7CiAJU0VUX0RFVklDRV9PUChkZXZfb3BzLCBpd19h
ZGRfcmVmKTsKIAlTRVRfREVWSUNFX09QKGRldl9vcHMsIGl3X2Nvbm5lY3QpOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9pbmZpbmliYW5kL2NvcmUvdW1lbV9vZHAuYyBiL2RyaXZlcnMvaW5maW5pYmFu
ZC9jb3JlL3VtZW1fb2RwLmMKaW5kZXggZDdkNWZhZGYwODk5YWQuLjYxMzJiODEyN2U4NDM1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtX29kcC5jCisrKyBiL2RyaXZl
cnMvaW5maW5pYmFuZC9jb3JlL3VtZW1fb2RwLmMKQEAgLTQ4LDE5NyArNDgsMzIgQEAKIAogI2lu
Y2x1ZGUgInV2ZXJicy5oIgogCi1zdGF0aWMgdm9pZCBpYl91bWVtX25vdGlmaWVyX3N0YXJ0X2Fj
Y291bnQoc3RydWN0IGliX3VtZW1fb2RwICp1bWVtX29kcCkKLXsKLQltdXRleF9sb2NrKCZ1bWVt
X29kcC0+dW1lbV9tdXRleCk7Ci0JaWYgKHVtZW1fb2RwLT5ub3RpZmllcnNfY291bnQrKyA9PSAw
KQotCQkvKgotCQkgKiBJbml0aWFsaXplIHRoZSBjb21wbGV0aW9uIG9iamVjdCBmb3Igd2FpdGlu
ZyBvbgotCQkgKiBub3RpZmllcnMuIFNpbmNlIG5vdGlmaWVyX2NvdW50IGlzIHplcm8sIG5vIG9u
ZSBzaG91bGQgYmUKLQkJICogd2FpdGluZyByaWdodCBub3cuCi0JCSAqLwotCQlyZWluaXRfY29t
cGxldGlvbigmdW1lbV9vZHAtPm5vdGlmaWVyX2NvbXBsZXRpb24pOwotCW11dGV4X3VubG9jaygm
dW1lbV9vZHAtPnVtZW1fbXV0ZXgpOwotfQotCi1zdGF0aWMgdm9pZCBpYl91bWVtX25vdGlmaWVy
X2VuZF9hY2NvdW50KHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHApCi17Ci0JbXV0ZXhfbG9j
aygmdW1lbV9vZHAtPnVtZW1fbXV0ZXgpOwotCS8qCi0JICogVGhpcyBzZXF1ZW5jZSBpbmNyZWFz
ZSB3aWxsIG5vdGlmeSB0aGUgUVAgcGFnZSBmYXVsdCB0aGF0IHRoZSBwYWdlCi0JICogdGhhdCBp
cyBnb2luZyB0byBiZSBtYXBwZWQgaW4gdGhlIHNwdGUgY291bGQgaGF2ZSBiZWVuIGZyZWVkLgot
CSAqLwotCSsrdW1lbV9vZHAtPm5vdGlmaWVyc19zZXE7Ci0JaWYgKC0tdW1lbV9vZHAtPm5vdGlm
aWVyc19jb3VudCA9PSAwKQotCQljb21wbGV0ZV9hbGwoJnVtZW1fb2RwLT5ub3RpZmllcl9jb21w
bGV0aW9uKTsKLQltdXRleF91bmxvY2soJnVtZW1fb2RwLT51bWVtX211dGV4KTsKLX0KLQotc3Rh
dGljIHZvaWQgaWJfdW1lbV9ub3RpZmllcl9yZWxlYXNlKHN0cnVjdCBtbXVfbm90aWZpZXIgKm1u
LAotCQkJCSAgICAgc3RydWN0IG1tX3N0cnVjdCAqbW0pCi17Ci0Jc3RydWN0IGliX3Vjb250ZXh0
X3Blcl9tbSAqcGVyX21tID0KLQkJY29udGFpbmVyX29mKG1uLCBzdHJ1Y3QgaWJfdWNvbnRleHRf
cGVyX21tLCBtbik7Ci0Jc3RydWN0IHJiX25vZGUgKm5vZGU7Ci0KLQlkb3duX3JlYWQoJnBlcl9t
bS0+dW1lbV9yd3NlbSk7Ci0JaWYgKCFwZXJfbW0tPm1uLnVzZXJzKQotCQlnb3RvIG91dDsKLQot
CWZvciAobm9kZSA9IHJiX2ZpcnN0X2NhY2hlZCgmcGVyX21tLT51bWVtX3RyZWUpOyBub2RlOwot
CSAgICAgbm9kZSA9IHJiX25leHQobm9kZSkpIHsKLQkJc3RydWN0IGliX3VtZW1fb2RwICp1bWVt
X29kcCA9Ci0JCQlyYl9lbnRyeShub2RlLCBzdHJ1Y3QgaWJfdW1lbV9vZHAsIGludGVydmFsX3Ry
ZWUucmIpOwotCi0JCS8qCi0JCSAqIEluY3JlYXNlIHRoZSBudW1iZXIgb2Ygbm90aWZpZXJzIHJ1
bm5pbmcsIHRvIHByZXZlbnQgYW55Ci0JCSAqIGZ1cnRoZXIgZmF1bHQgaGFuZGxpbmcgb24gdGhp
cyBNUi4KLQkJICovCi0JCWliX3VtZW1fbm90aWZpZXJfc3RhcnRfYWNjb3VudCh1bWVtX29kcCk7
Ci0JCWNvbXBsZXRlX2FsbCgmdW1lbV9vZHAtPm5vdGlmaWVyX2NvbXBsZXRpb24pOwotCQl1bWVt
X29kcC0+dW1lbS5pYmRldi0+b3BzLmludmFsaWRhdGVfcmFuZ2UoCi0JCQl1bWVtX29kcCwgaWJf
dW1lbV9zdGFydCh1bWVtX29kcCksCi0JCQlpYl91bWVtX2VuZCh1bWVtX29kcCkpOwotCX0KLQot
b3V0OgotCXVwX3JlYWQoJnBlcl9tbS0+dW1lbV9yd3NlbSk7Ci19Ci0KLXN0YXRpYyBpbnQgaW52
YWxpZGF0ZV9yYW5nZV9zdGFydF90cmFtcG9saW5lKHN0cnVjdCBpYl91bWVtX29kcCAqaXRlbSwK
LQkJCQkJICAgICB1NjQgc3RhcnQsIHU2NCBlbmQsIHZvaWQgKmNvb2tpZSkKLXsKLQlpYl91bWVt
X25vdGlmaWVyX3N0YXJ0X2FjY291bnQoaXRlbSk7Ci0JaXRlbS0+dW1lbS5pYmRldi0+b3BzLmlu
dmFsaWRhdGVfcmFuZ2UoaXRlbSwgc3RhcnQsIGVuZCk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRp
YyBpbnQgaWJfdW1lbV9ub3RpZmllcl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0KHN0cnVjdCBtbXVf
bm90aWZpZXIgKm1uLAotCQkJCWNvbnN0IHN0cnVjdCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdl
KQotewotCXN0cnVjdCBpYl91Y29udGV4dF9wZXJfbW0gKnBlcl9tbSA9Ci0JCWNvbnRhaW5lcl9v
Zihtbiwgc3RydWN0IGliX3Vjb250ZXh0X3Blcl9tbSwgbW4pOwotCWludCByYzsKLQotCWlmICht
bXVfbm90aWZpZXJfcmFuZ2VfYmxvY2thYmxlKHJhbmdlKSkKLQkJZG93bl9yZWFkKCZwZXJfbW0t
PnVtZW1fcndzZW0pOwotCWVsc2UgaWYgKCFkb3duX3JlYWRfdHJ5bG9jaygmcGVyX21tLT51bWVt
X3J3c2VtKSkKLQkJcmV0dXJuIC1FQUdBSU47Ci0KLQlpZiAoIXBlcl9tbS0+bW4udXNlcnMpIHsK
LQkJdXBfcmVhZCgmcGVyX21tLT51bWVtX3J3c2VtKTsKLQkJLyoKLQkJICogQXQgdGhpcyBwb2lu
dCB1c2VycyBpcyBwZXJtYW5lbnRseSB6ZXJvIGFuZCB2aXNpYmxlIHRvIHRoaXMKLQkJICogQ1BV
IHdpdGhvdXQgYSBsb2NrLCB0aGF0IGZhY3QgaXMgcmVsaWVkIG9uIHRvIHNraXAgdGhlIHVubG9j
awotCQkgKiBpbiByYW5nZV9lbmQuCi0JCSAqLwotCQlyZXR1cm4gMDsKLQl9Ci0KLQlyYyA9IHJi
dF9pYl91bWVtX2Zvcl9lYWNoX2luX3JhbmdlKCZwZXJfbW0tPnVtZW1fdHJlZSwgcmFuZ2UtPnN0
YXJ0LAotCQkJCQkgICByYW5nZS0+ZW5kLAotCQkJCQkgICBpbnZhbGlkYXRlX3JhbmdlX3N0YXJ0
X3RyYW1wb2xpbmUsCi0JCQkJCSAgIG1tdV9ub3RpZmllcl9yYW5nZV9ibG9ja2FibGUocmFuZ2Up
LAotCQkJCQkgICBOVUxMKTsKLQlpZiAocmMpCi0JCXVwX3JlYWQoJnBlcl9tbS0+dW1lbV9yd3Nl
bSk7Ci0JcmV0dXJuIHJjOwotfQotCi1zdGF0aWMgaW50IGludmFsaWRhdGVfcmFuZ2VfZW5kX3Ry
YW1wb2xpbmUoc3RydWN0IGliX3VtZW1fb2RwICppdGVtLCB1NjQgc3RhcnQsCi0JCQkJCSAgIHU2
NCBlbmQsIHZvaWQgKmNvb2tpZSkKLXsKLQlpYl91bWVtX25vdGlmaWVyX2VuZF9hY2NvdW50KGl0
ZW0pOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMgdm9pZCBpYl91bWVtX25vdGlmaWVyX2ludmFs
aWRhdGVfcmFuZ2VfZW5kKHN0cnVjdCBtbXVfbm90aWZpZXIgKm1uLAotCQkJCWNvbnN0IHN0cnVj
dCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdlKQotewotCXN0cnVjdCBpYl91Y29udGV4dF9wZXJf
bW0gKnBlcl9tbSA9Ci0JCWNvbnRhaW5lcl9vZihtbiwgc3RydWN0IGliX3Vjb250ZXh0X3Blcl9t
bSwgbW4pOwotCi0JaWYgKHVubGlrZWx5KCFwZXJfbW0tPm1uLnVzZXJzKSkKLQkJcmV0dXJuOwot
Ci0JcmJ0X2liX3VtZW1fZm9yX2VhY2hfaW5fcmFuZ2UoJnBlcl9tbS0+dW1lbV90cmVlLCByYW5n
ZS0+c3RhcnQsCi0JCQkJICAgICAgcmFuZ2UtPmVuZCwKLQkJCQkgICAgICBpbnZhbGlkYXRlX3Jh
bmdlX2VuZF90cmFtcG9saW5lLCB0cnVlLCBOVUxMKTsKLQl1cF9yZWFkKCZwZXJfbW0tPnVtZW1f
cndzZW0pOwotfQotCi1zdGF0aWMgc3RydWN0IG1tdV9ub3RpZmllciAqaWJfdW1lbV9hbGxvY19u
b3RpZmllcihzdHJ1Y3QgbW1fc3RydWN0ICptbSkKLXsKLQlzdHJ1Y3QgaWJfdWNvbnRleHRfcGVy
X21tICpwZXJfbW07Ci0KLQlwZXJfbW0gPSBremFsbG9jKHNpemVvZigqcGVyX21tKSwgR0ZQX0tF
Uk5FTCk7Ci0JaWYgKCFwZXJfbW0pCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCi0JcGVy
X21tLT51bWVtX3RyZWUgPSBSQl9ST09UX0NBQ0hFRDsKLQlpbml0X3J3c2VtKCZwZXJfbW0tPnVt
ZW1fcndzZW0pOwotCi0JV0FSTl9PTihtbSAhPSBjdXJyZW50LT5tbSk7Ci0JcmN1X3JlYWRfbG9j
aygpOwotCXBlcl9tbS0+dGdpZCA9IGdldF90YXNrX3BpZChjdXJyZW50LT5ncm91cF9sZWFkZXIs
IFBJRFRZUEVfUElEKTsKLQlyY3VfcmVhZF91bmxvY2soKTsKLQlyZXR1cm4gJnBlcl9tbS0+bW47
Ci19Ci0KLXN0YXRpYyB2b2lkIGliX3VtZW1fZnJlZV9ub3RpZmllcihzdHJ1Y3QgbW11X25vdGlm
aWVyICptbikKLXsKLQlzdHJ1Y3QgaWJfdWNvbnRleHRfcGVyX21tICpwZXJfbW0gPQotCQljb250
YWluZXJfb2YobW4sIHN0cnVjdCBpYl91Y29udGV4dF9wZXJfbW0sIG1uKTsKLQotCVdBUk5fT04o
IVJCX0VNUFRZX1JPT1QoJnBlcl9tbS0+dW1lbV90cmVlLnJiX3Jvb3QpKTsKLQotCXB1dF9waWQo
cGVyX21tLT50Z2lkKTsKLQlrZnJlZShwZXJfbW0pOwotfQotCi1zdGF0aWMgY29uc3Qgc3RydWN0
IG1tdV9ub3RpZmllcl9vcHMgaWJfdW1lbV9ub3RpZmllcnMgPSB7Ci0JLnJlbGVhc2UgICAgICAg
ICAgICAgICAgICAgID0gaWJfdW1lbV9ub3RpZmllcl9yZWxlYXNlLAotCS5pbnZhbGlkYXRlX3Jh
bmdlX3N0YXJ0ICAgICA9IGliX3VtZW1fbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydCwK
LQkuaW52YWxpZGF0ZV9yYW5nZV9lbmQgICAgICAgPSBpYl91bWVtX25vdGlmaWVyX2ludmFsaWRh
dGVfcmFuZ2VfZW5kLAotCS5hbGxvY19ub3RpZmllcgkJICAgID0gaWJfdW1lbV9hbGxvY19ub3Rp
ZmllciwKLQkuZnJlZV9ub3RpZmllcgkJICAgID0gaWJfdW1lbV9mcmVlX25vdGlmaWVyLAotfTsK
LQogc3RhdGljIGlubGluZSBpbnQgaWJfaW5pdF91bWVtX29kcChzdHJ1Y3QgaWJfdW1lbV9vZHAg
KnVtZW1fb2RwKQogewotCXN0cnVjdCBpYl91Y29udGV4dF9wZXJfbW0gKnBlcl9tbTsKLQlzdHJ1
Y3QgbW11X25vdGlmaWVyICptbjsKIAlpbnQgcmV0OwogCiAJdW1lbV9vZHAtPnVtZW0uaXNfb2Rw
ID0gMTsKKwltdXRleF9pbml0KCZ1bWVtX29kcC0+dW1lbV9tdXRleCk7CisKIAlpZiAoIXVtZW1f
b2RwLT5pc19pbXBsaWNpdF9vZHApIHsKIAkJc2l6ZV90IHBhZ2Vfc2l6ZSA9IDFVTCA8PCB1bWVt
X29kcC0+cGFnZV9zaGlmdDsKKwkJdW5zaWduZWQgbG9uZyBzdGFydDsKKwkJdW5zaWduZWQgbG9u
ZyBlbmQ7CiAJCXNpemVfdCBwYWdlczsKIAotCQl1bWVtX29kcC0+aW50ZXJ2YWxfdHJlZS5zdGFy
dCA9Ci0JCQlBTElHTl9ET1dOKHVtZW1fb2RwLT51bWVtLmFkZHJlc3MsIHBhZ2Vfc2l6ZSk7CisJ
CXN0YXJ0ID0gQUxJR05fRE9XTih1bWVtX29kcC0+dW1lbS5hZGRyZXNzLCBwYWdlX3NpemUpOwog
CQlpZiAoY2hlY2tfYWRkX292ZXJmbG93KHVtZW1fb2RwLT51bWVtLmFkZHJlc3MsCiAJCQkJICAg
ICAgICh1bnNpZ25lZCBsb25nKXVtZW1fb2RwLT51bWVtLmxlbmd0aCwKLQkJCQkgICAgICAgJnVt
ZW1fb2RwLT5pbnRlcnZhbF90cmVlLmxhc3QpKQorCQkJCSAgICAgICAmZW5kKSkKIAkJCXJldHVy
biAtRU9WRVJGTE9XOwotCQl1bWVtX29kcC0+aW50ZXJ2YWxfdHJlZS5sYXN0ID0KLQkJCUFMSUdO
KHVtZW1fb2RwLT5pbnRlcnZhbF90cmVlLmxhc3QsIHBhZ2Vfc2l6ZSk7Ci0JCWlmICh1bmxpa2Vs
eSh1bWVtX29kcC0+aW50ZXJ2YWxfdHJlZS5sYXN0IDwgcGFnZV9zaXplKSkKKwkJZW5kID0gQUxJ
R04oZW5kLCBwYWdlX3NpemUpOworCQlpZiAodW5saWtlbHkoZW5kIDwgcGFnZV9zaXplKSkKIAkJ
CXJldHVybiAtRU9WRVJGTE9XOwogCi0JCXBhZ2VzID0gKHVtZW1fb2RwLT5pbnRlcnZhbF90cmVl
Lmxhc3QgLQotCQkJIHVtZW1fb2RwLT5pbnRlcnZhbF90cmVlLnN0YXJ0KSA+PgotCQkJdW1lbV9v
ZHAtPnBhZ2Vfc2hpZnQ7CisJCXBhZ2VzID0gKGVuZCAtIHN0YXJ0KSA+PiB1bWVtX29kcC0+cGFn
ZV9zaGlmdDsKIAkJaWYgKCFwYWdlcykKIAkJCXJldHVybiAtRUlOVkFMOwogCi0JCS8qCi0JCSAq
IE5vdGUgdGhhdCB0aGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIGludGVydmFscyBpbiB0aGUKLQkJ
ICogaW50ZXJ2YWwgdHJlZSBjb25zaWRlcnMgdGhlIGVuZGluZyBwb2ludCBhcyBjb250YWluZWQg
aW4KLQkJICogdGhlIGludGVydmFsLgotCQkgKi8KLQkJdW1lbV9vZHAtPmludGVydmFsX3RyZWUu
bGFzdC0tOwotCiAJCXVtZW1fb2RwLT5wYWdlX2xpc3QgPSBrdmNhbGxvYygKIAkJCXBhZ2VzLCBz
aXplb2YoKnVtZW1fb2RwLT5wYWdlX2xpc3QpLCBHRlBfS0VSTkVMKTsKIAkJaWYgKCF1bWVtX29k
cC0+cGFnZV9saXN0KQpAQCAtMjUwLDI2ICs4NSwxNSBAQCBzdGF0aWMgaW5saW5lIGludCBpYl9p
bml0X3VtZW1fb2RwKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHApCiAJCQlyZXQgPSAtRU5P
TUVNOwogCQkJZ290byBvdXRfcGFnZV9saXN0OwogCQl9Ci0JfQogCi0JbW4gPSBtbXVfbm90aWZp
ZXJfZ2V0KCZpYl91bWVtX25vdGlmaWVycywgdW1lbV9vZHAtPnVtZW0ub3duaW5nX21tKTsKLQlp
ZiAoSVNfRVJSKG1uKSkgewotCQlyZXQgPSBQVFJfRVJSKG1uKTsKLQkJZ290byBvdXRfZG1hX2xp
c3Q7Ci0JfQotCXVtZW1fb2RwLT5wZXJfbW0gPSBwZXJfbW0gPQotCQljb250YWluZXJfb2YobW4s
IHN0cnVjdCBpYl91Y29udGV4dF9wZXJfbW0sIG1uKTsKLQotCW11dGV4X2luaXQoJnVtZW1fb2Rw
LT51bWVtX211dGV4KTsKLQlpbml0X2NvbXBsZXRpb24oJnVtZW1fb2RwLT5ub3RpZmllcl9jb21w
bGV0aW9uKTsKKwkJcmV0ID0gbW11X3JhbmdlX25vdGlmaWVyX2luc2VydCgmdW1lbV9vZHAtPm5v
dGlmaWVyLCBzdGFydCwKKwkJCQkJCWVuZCAtIHN0YXJ0LCBjdXJyZW50LT5tbSk7CisJCWlmIChy
ZXQpCisJCQlnb3RvIG91dF9kbWFfbGlzdDsKIAotCWlmICghdW1lbV9vZHAtPmlzX2ltcGxpY2l0
X29kcCkgewotCQlkb3duX3dyaXRlKCZwZXJfbW0tPnVtZW1fcndzZW0pOwotCQlpbnRlcnZhbF90
cmVlX2luc2VydCgmdW1lbV9vZHAtPmludGVydmFsX3RyZWUsCi0JCQkJICAgICAmcGVyX21tLT51
bWVtX3RyZWUpOwotCQl1cF93cml0ZSgmcGVyX21tLT51bWVtX3J3c2VtKTsKKwkJdW1lbV9vZHAt
PnRnaWQgPQorCQkJZ2V0X3Rhc2tfcGlkKGN1cnJlbnQtPmdyb3VwX2xlYWRlciwgUElEVFlQRV9Q
SUQpOwogCX0KLQltbWdyYWIodW1lbV9vZHAtPnVtZW0ub3duaW5nX21tKTsKIAogCXJldHVybiAw
OwogCkBAIC0yOTAsOCArMTE0LDggQEAgc3RhdGljIGlubGluZSBpbnQgaWJfaW5pdF91bWVtX29k
cChzdHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1fb2RwKQogICogQHVkYXRhOiB1ZGF0YSBmcm9tIHRo
ZSBzeXNjYWxsIGJlaW5nIHVzZWQgdG8gY3JlYXRlIHRoZSB1bWVtCiAgKiBAYWNjZXNzOiBpYl9y
ZWdfbXIgYWNjZXNzIGZsYWdzCiAgKi8KLXN0cnVjdCBpYl91bWVtX29kcCAqaWJfdW1lbV9vZHBf
YWxsb2NfaW1wbGljaXQoc3RydWN0IGliX3VkYXRhICp1ZGF0YSwKLQkJCQkJICAgICAgIGludCBh
Y2Nlc3MpCitzdHJ1Y3QgaWJfdW1lbV9vZHAgKgoraWJfdW1lbV9vZHBfYWxsb2NfaW1wbGljaXQo
c3RydWN0IGliX3VkYXRhICp1ZGF0YSwgaW50IGFjY2VzcykKIHsKIAlzdHJ1Y3QgaWJfdWNvbnRl
eHQgKmNvbnRleHQgPQogCQljb250YWluZXJfb2YodWRhdGEsIHN0cnVjdCB1dmVyYnNfYXR0cl9i
dW5kbGUsIGRyaXZlcl91ZGF0YSkKQEAgLTMwNSw4ICsxMjksNiBAQCBzdHJ1Y3QgaWJfdW1lbV9v
ZHAgKmliX3VtZW1fb2RwX2FsbG9jX2ltcGxpY2l0KHN0cnVjdCBpYl91ZGF0YSAqdWRhdGEsCiAK
IAlpZiAoIWNvbnRleHQpCiAJCXJldHVybiBFUlJfUFRSKC1FSU8pOwotCWlmIChXQVJOX09OX09O
Q0UoIWNvbnRleHQtPmRldmljZS0+b3BzLmludmFsaWRhdGVfcmFuZ2UpKQotCQlyZXR1cm4gRVJS
X1BUUigtRUlOVkFMKTsKIAogCXVtZW1fb2RwID0ga3phbGxvYyhzaXplb2YoKnVtZW1fb2RwKSwg
R0ZQX0tFUk5FTCk7CiAJaWYgKCF1bWVtX29kcCkKQEAgLTMzNiw4ICsxNTgsOSBAQCBFWFBPUlRf
U1lNQk9MKGliX3VtZW1fb2RwX2FsbG9jX2ltcGxpY2l0KTsKICAqIEBhZGRyOiBUaGUgc3RhcnRp
bmcgdXNlcnNwYWNlIFZBCiAgKiBAc2l6ZTogVGhlIGxlbmd0aCBvZiB0aGUgdXNlcnNwYWNlIFZB
CiAgKi8KLXN0cnVjdCBpYl91bWVtX29kcCAqaWJfdW1lbV9vZHBfYWxsb2NfY2hpbGQoc3RydWN0
IGliX3VtZW1fb2RwICpyb290LAotCQkJCQkgICAgdW5zaWduZWQgbG9uZyBhZGRyLCBzaXplX3Qg
c2l6ZSkKK3N0cnVjdCBpYl91bWVtX29kcCAqCitpYl91bWVtX29kcF9hbGxvY19jaGlsZChzdHJ1
Y3QgaWJfdW1lbV9vZHAgKnJvb3QsIHVuc2lnbmVkIGxvbmcgYWRkciwKKwkJCXNpemVfdCBzaXpl
LCBjb25zdCBzdHJ1Y3QgbW11X3JhbmdlX25vdGlmaWVyX29wcyAqb3BzKQogewogCS8qCiAJICog
Q2FsbGVyIG11c3QgZW5zdXJlIHRoYXQgcm9vdCBjYW5ub3QgYmUgZnJlZWQgZHVyaW5nIHRoZSBj
YWxsIHRvCkBAIC0zNjAsNiArMTgzLDcgQEAgc3RydWN0IGliX3VtZW1fb2RwICppYl91bWVtX29k
cF9hbGxvY19jaGlsZChzdHJ1Y3QgaWJfdW1lbV9vZHAgKnJvb3QsCiAJdW1lbS0+d3JpdGFibGUg
ICA9IHJvb3QtPnVtZW0ud3JpdGFibGU7CiAJdW1lbS0+b3duaW5nX21tICA9IHJvb3QtPnVtZW0u
b3duaW5nX21tOwogCW9kcF9kYXRhLT5wYWdlX3NoaWZ0ID0gUEFHRV9TSElGVDsKKwlvZHBfZGF0
YS0+bm90aWZpZXIub3BzID0gb3BzOwogCiAJcmV0ID0gaWJfaW5pdF91bWVtX29kcChvZHBfZGF0
YSk7CiAJaWYgKHJldCkgewpAQCAtMzgzLDcgKzIwNyw4IEBAIEVYUE9SVF9TWU1CT0woaWJfdW1l
bV9vZHBfYWxsb2NfY2hpbGQpOwogICogY29uanVuY3Rpb24gd2l0aCBNTVUgbm90aWZpZXJzLgog
ICovCiBzdHJ1Y3QgaWJfdW1lbV9vZHAgKmliX3VtZW1fb2RwX2dldChzdHJ1Y3QgaWJfdWRhdGEg
KnVkYXRhLCB1bnNpZ25lZCBsb25nIGFkZHIsCi0JCQkJICAgIHNpemVfdCBzaXplLCBpbnQgYWNj
ZXNzKQorCQkJCSAgICBzaXplX3Qgc2l6ZSwgaW50IGFjY2VzcywKKwkJCQkgICAgY29uc3Qgc3Ry
dWN0IG1tdV9yYW5nZV9ub3RpZmllcl9vcHMgKm9wcykKIHsKIAlzdHJ1Y3QgaWJfdW1lbV9vZHAg
KnVtZW1fb2RwOwogCXN0cnVjdCBpYl91Y29udGV4dCAqY29udGV4dDsKQEAgLTM5OCw4ICsyMjMs
NyBAQCBzdHJ1Y3QgaWJfdW1lbV9vZHAgKmliX3VtZW1fb2RwX2dldChzdHJ1Y3QgaWJfdWRhdGEg
KnVkYXRhLCB1bnNpZ25lZCBsb25nIGFkZHIsCiAJaWYgKCFjb250ZXh0KQogCQlyZXR1cm4gRVJS
X1BUUigtRUlPKTsKIAotCWlmIChXQVJOX09OX09OQ0UoIShhY2Nlc3MgJiBJQl9BQ0NFU1NfT05f
REVNQU5EKSkgfHwKLQkgICAgV0FSTl9PTl9PTkNFKCFjb250ZXh0LT5kZXZpY2UtPm9wcy5pbnZh
bGlkYXRlX3JhbmdlKSkKKwlpZiAoV0FSTl9PTl9PTkNFKCEoYWNjZXNzICYgSUJfQUNDRVNTX09O
X0RFTUFORCkpKQogCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKIAogCXVtZW1fb2RwID0ga3ph
bGxvYyhzaXplb2Yoc3RydWN0IGliX3VtZW1fb2RwKSwgR0ZQX0tFUk5FTCk7CkBAIC00MTEsNiAr
MjM1LDcgQEAgc3RydWN0IGliX3VtZW1fb2RwICppYl91bWVtX29kcF9nZXQoc3RydWN0IGliX3Vk
YXRhICp1ZGF0YSwgdW5zaWduZWQgbG9uZyBhZGRyLAogCXVtZW1fb2RwLT51bWVtLmFkZHJlc3Mg
PSBhZGRyOwogCXVtZW1fb2RwLT51bWVtLndyaXRhYmxlID0gaWJfYWNjZXNzX3dyaXRhYmxlKGFj
Y2Vzcyk7CiAJdW1lbV9vZHAtPnVtZW0ub3duaW5nX21tID0gbW0gPSBjdXJyZW50LT5tbTsKKwl1
bWVtX29kcC0+bm90aWZpZXIub3BzID0gb3BzOwogCiAJdW1lbV9vZHAtPnBhZ2Vfc2hpZnQgPSBQ
QUdFX1NISUZUOwogCWlmIChhY2Nlc3MgJiBJQl9BQ0NFU1NfSFVHRVRMQikgewpAQCAtNDQyLDgg
KzI2Nyw2IEBAIEVYUE9SVF9TWU1CT0woaWJfdW1lbV9vZHBfZ2V0KTsKIAogdm9pZCBpYl91bWVt
X29kcF9yZWxlYXNlKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHApCiB7Ci0Jc3RydWN0IGli
X3Vjb250ZXh0X3Blcl9tbSAqcGVyX21tID0gdW1lbV9vZHAtPnBlcl9tbTsKLQogCS8qCiAJICog
RW5zdXJlIHRoYXQgbm8gbW9yZSBwYWdlcyBhcmUgbWFwcGVkIGluIHRoZSB1bWVtLgogCSAqCkBA
IC00NTUsMjggKzI3OCwxMSBAQCB2b2lkIGliX3VtZW1fb2RwX3JlbGVhc2Uoc3RydWN0IGliX3Vt
ZW1fb2RwICp1bWVtX29kcCkKIAkJaWJfdW1lbV9vZHBfdW5tYXBfZG1hX3BhZ2VzKHVtZW1fb2Rw
LCBpYl91bWVtX3N0YXJ0KHVtZW1fb2RwKSwKIAkJCQkJICAgIGliX3VtZW1fZW5kKHVtZW1fb2Rw
KSk7CiAJCW11dGV4X3VubG9jaygmdW1lbV9vZHAtPnVtZW1fbXV0ZXgpOworCQltbXVfcmFuZ2Vf
bm90aWZpZXJfcmVtb3ZlKCZ1bWVtX29kcC0+bm90aWZpZXIpOwogCQlrdmZyZWUodW1lbV9vZHAt
PmRtYV9saXN0KTsKIAkJa3ZmcmVlKHVtZW1fb2RwLT5wYWdlX2xpc3QpOworCQlwdXRfcGlkKHVt
ZW1fb2RwLT50Z2lkKTsKIAl9Ci0KLQlkb3duX3dyaXRlKCZwZXJfbW0tPnVtZW1fcndzZW0pOwot
CWlmICghdW1lbV9vZHAtPmlzX2ltcGxpY2l0X29kcCkgewotCQlpbnRlcnZhbF90cmVlX3JlbW92
ZSgmdW1lbV9vZHAtPmludGVydmFsX3RyZWUsCi0JCQkJICAgICAmcGVyX21tLT51bWVtX3RyZWUp
OwotCQljb21wbGV0ZV9hbGwoJnVtZW1fb2RwLT5ub3RpZmllcl9jb21wbGV0aW9uKTsKLQl9Ci0J
LyoKLQkgKiBOT1RFISBtbXVfbm90aWZpZXJfdW5yZWdpc3RlcigpIGNhbiBoYXBwZW4gYmV0d2Vl
biBhIHN0YXJ0L2VuZAotCSAqIGNhbGxiYWNrLCByZXN1bHRpbmcgaW4gYSBtaXNzaW5nIGVuZCwg
YW5kIHRodXMgYW4gdW5iYWxhbmNlZAotCSAqIGxvY2suIFRoaXMgZG9lc24ndCByZWFsbHkgbWF0
dGVyIHRvIHVzIHNpbmNlIHdlIGFyZSBhYm91dCB0byBrZnJlZQotCSAqIHRoZSBtZW1vcnkgdGhh
dCBob2xkcyB0aGUgbG9jaywgaG93ZXZlciBMT0NLREVQIGRvZXNuJ3QgbGlrZSB0aGlzLgotCSAq
IFRodXMgd2UgY2FsbCB0aGUgbW11X25vdGlmaWVyX3B1dCB1bmRlciB0aGUgcndzZW0gYW5kIHRl
c3QgdGhlCi0JICogaW50ZXJuYWwgdXNlcnMgY291bnQgdG8gcmVsaWFibHkgc2VlIGlmIHdlIGFy
ZSBwYXN0IHRoaXMgcG9pbnQuCi0JICovCi0JbW11X25vdGlmaWVyX3B1dCgmcGVyX21tLT5tbik7
Ci0JdXBfd3JpdGUoJnBlcl9tbS0+dW1lbV9yd3NlbSk7Ci0KLQltbWRyb3AodW1lbV9vZHAtPnVt
ZW0ub3duaW5nX21tKTsKIAlrZnJlZSh1bWVtX29kcCk7CiB9CiBFWFBPUlRfU1lNQk9MKGliX3Vt
ZW1fb2RwX3JlbGVhc2UpOwpAQCAtNTAxLDcgKzMwNyw3IEBAIEVYUE9SVF9TWU1CT0woaWJfdW1l
bV9vZHBfcmVsZWFzZSk7CiAgKi8KIHN0YXRpYyBpbnQgaWJfdW1lbV9vZHBfbWFwX2RtYV9zaW5n
bGVfcGFnZSgKIAkJc3RydWN0IGliX3VtZW1fb2RwICp1bWVtX29kcCwKLQkJaW50IHBhZ2VfaW5k
ZXgsCisJCXVuc2lnbmVkIGludCBwYWdlX2luZGV4LAogCQlzdHJ1Y3QgcGFnZSAqcGFnZSwKIAkJ
dTY0IGFjY2Vzc19tYXNrLAogCQl1bnNpZ25lZCBsb25nIGN1cnJlbnRfc2VxKQpAQCAtNTEwLDEy
ICszMTYsNyBAQCBzdGF0aWMgaW50IGliX3VtZW1fb2RwX21hcF9kbWFfc2luZ2xlX3BhZ2UoCiAJ
ZG1hX2FkZHJfdCBkbWFfYWRkcjsKIAlpbnQgcmV0ID0gMDsKIAotCS8qCi0JICogTm90ZTogd2Ug
YXZvaWQgd3JpdGluZyBpZiBzZXEgaXMgZGlmZmVyZW50IGZyb20gdGhlIGluaXRpYWwgc2VxLCB0
bwotCSAqIGhhbmRsZSBjYXNlIG9mIGEgcmFjaW5nIG5vdGlmaWVyLiBUaGlzIGNoZWNrIGFsc28g
YWxsb3dzIHVzIHRvIGJhaWwKLQkgKiBlYXJseSBpZiB3ZSBoYXZlIGEgbm90aWZpZXIgcnVubmlu
ZyBpbiBwYXJhbGxlbCB3aXRoIHVzLgotCSAqLwotCWlmIChpYl91bWVtX21tdV9ub3RpZmllcl9y
ZXRyeSh1bWVtX29kcCwgY3VycmVudF9zZXEpKSB7CisJaWYgKG1tdV9yYW5nZV9jaGVja19yZXRy
eSgmdW1lbV9vZHAtPm5vdGlmaWVyLCBjdXJyZW50X3NlcSkpIHsKIAkJcmV0ID0gLUVBR0FJTjsK
IAkJZ290byBvdXQ7CiAJfQpAQCAtNjE4LDcgKzQxOSw3IEBAIGludCBpYl91bWVtX29kcF9tYXBf
ZG1hX3BhZ2VzKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHAsIHU2NCB1c2VyX3ZpcnQsCiAJ
ICogZXhpc3RpbmcgYmV5b25kIHRoZSBsaWZldGltZSBvZiB0aGUgb3JpZ2luYXRpbmcgcHJvY2Vz
cy4uIFByZXN1bWFibHkKIAkgKiBtbWdldF9ub3RfemVybyB3aWxsIGZhaWwgaW4gdGhpcyBjYXNl
LgogCSAqLwotCW93bmluZ19wcm9jZXNzID0gZ2V0X3BpZF90YXNrKHVtZW1fb2RwLT5wZXJfbW0t
PnRnaWQsIFBJRFRZUEVfUElEKTsKKwlvd25pbmdfcHJvY2VzcyA9IGdldF9waWRfdGFzayh1bWVt
X29kcC0+dGdpZCwgUElEVFlQRV9QSUQpOwogCWlmICghb3duaW5nX3Byb2Nlc3MgfHwgIW1tZ2V0
X25vdF96ZXJvKG93bmluZ19tbSkpIHsKIAkJcmV0ID0gLUVJTlZBTDsKIAkJZ290byBvdXRfcHV0
X3Rhc2s7CkBAIC03NjIsMzIgKzU2MywzIEBAIHZvaWQgaWJfdW1lbV9vZHBfdW5tYXBfZG1hX3Bh
Z2VzKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHAsIHU2NCB2aXJ0LAogCX0KIH0KIEVYUE9S
VF9TWU1CT0woaWJfdW1lbV9vZHBfdW5tYXBfZG1hX3BhZ2VzKTsKLQotLyogQGxhc3QgaXMgbm90
IGEgcGFydCBvZiB0aGUgaW50ZXJ2YWwuIFNlZSBjb21tZW50IGZvciBmdW5jdGlvbgotICogbm9k
ZV9sYXN0LgotICovCi1pbnQgcmJ0X2liX3VtZW1fZm9yX2VhY2hfaW5fcmFuZ2Uoc3RydWN0IHJi
X3Jvb3RfY2FjaGVkICpyb290LAotCQkJCSAgdTY0IHN0YXJ0LCB1NjQgbGFzdCwKLQkJCQkgIHVt
ZW1fY2FsbF9iYWNrIGNiLAotCQkJCSAgYm9vbCBibG9ja2FibGUsCi0JCQkJICB2b2lkICpjb29r
aWUpCi17Ci0JaW50IHJldF92YWwgPSAwOwotCXN0cnVjdCBpbnRlcnZhbF90cmVlX25vZGUgKm5v
ZGUsICpuZXh0OwotCXN0cnVjdCBpYl91bWVtX29kcCAqdW1lbTsKLQotCWlmICh1bmxpa2VseShz
dGFydCA9PSBsYXN0KSkKLQkJcmV0dXJuIHJldF92YWw7Ci0KLQlmb3IgKG5vZGUgPSBpbnRlcnZh
bF90cmVlX2l0ZXJfZmlyc3Qocm9vdCwgc3RhcnQsIGxhc3QgLSAxKTsKLQkJCW5vZGU7IG5vZGUg
PSBuZXh0KSB7Ci0JCS8qIFRPRE8gbW92ZSB0aGUgYmxvY2thYmxlIGRlY2lzaW9uIHVwIHRvIHRo
ZSBjYWxsYmFjayAqLwotCQlpZiAoIWJsb2NrYWJsZSkKLQkJCXJldHVybiAtRUFHQUlOOwotCQlu
ZXh0ID0gaW50ZXJ2YWxfdHJlZV9pdGVyX25leHQobm9kZSwgc3RhcnQsIGxhc3QgLSAxKTsKLQkJ
dW1lbSA9IGNvbnRhaW5lcl9vZihub2RlLCBzdHJ1Y3QgaWJfdW1lbV9vZHAsIGludGVydmFsX3Ry
ZWUpOwotCQlyZXRfdmFsID0gY2IodW1lbSwgc3RhcnQsIGxhc3QsIGNvb2tpZSkgfHwgcmV0X3Zh
bDsKLQl9Ci0KLQlyZXR1cm4gcmV0X3ZhbDsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW5maW5p
YmFuZC9ody9tbHg1L21seDVfaWIuaCBiL2RyaXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L21seDVf
aWIuaAppbmRleCBmNjFkNDAwNWM2YzM3OS4uYzcxOWYwOGIzNTE2NzAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L21seDVfaWIuaAorKysgYi9kcml2ZXJzL2luZmluaWJh
bmQvaHcvbWx4NS9tbHg1X2liLmgKQEAgLTEyNjMsOCArMTI2Myw2IEBAIGludCBtbHg1X2liX29k
cF9pbml0X29uZShzdHJ1Y3QgbWx4NV9pYl9kZXYgKmliZGV2KTsKIHZvaWQgbWx4NV9pYl9vZHBf
Y2xlYW51cF9vbmUoc3RydWN0IG1seDVfaWJfZGV2ICppYmRldik7CiBpbnQgX19pbml0IG1seDVf
aWJfb2RwX2luaXQodm9pZCk7CiB2b2lkIG1seDVfaWJfb2RwX2NsZWFudXAodm9pZCk7Ci12b2lk
IG1seDVfaWJfaW52YWxpZGF0ZV9yYW5nZShzdHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1fb2RwLCB1
bnNpZ25lZCBsb25nIHN0YXJ0LAotCQkJICAgICAgdW5zaWduZWQgbG9uZyBlbmQpOwogdm9pZCBt
bHg1X29kcF9pbml0X21yX2NhY2hlX2VudHJ5KHN0cnVjdCBtbHg1X2NhY2hlX2VudCAqZW50KTsK
IHZvaWQgbWx4NV9vZHBfcG9wdWxhdGVfa2xtKHN0cnVjdCBtbHg1X2tsbSAqcGtsbSwgc2l6ZV90
IG9mZnNldCwKIAkJCSAgIHNpemVfdCBuZW50cmllcywgc3RydWN0IG1seDVfaWJfbXIgKm1yLCBp
bnQgZmxhZ3MpOwpAQCAtMTI5NCwxMSArMTI5MiwxMCBAQCBtbHg1X2liX2FkdmlzZV9tcl9wcmVm
ZXRjaChzdHJ1Y3QgaWJfcGQgKnBkLAogewogCXJldHVybiAtRU9QTk9UU1VQUDsKIH0KLXN0YXRp
YyBpbmxpbmUgdm9pZCBtbHg1X2liX2ludmFsaWRhdGVfcmFuZ2Uoc3RydWN0IGliX3VtZW1fb2Rw
ICp1bWVtX29kcCwKLQkJCQkJICAgIHVuc2lnbmVkIGxvbmcgc3RhcnQsCi0JCQkJCSAgICB1bnNp
Z25lZCBsb25nIGVuZCl7fTsKICNlbmRpZiAvKiBDT05GSUdfSU5GSU5JQkFORF9PTl9ERU1BTkRf
UEFHSU5HICovCiAKK2V4dGVybiBjb25zdCBzdHJ1Y3QgbW11X3JhbmdlX25vdGlmaWVyX29wcyBt
bHg1X21uX29wczsKKwogLyogTmVlZGVkIGZvciByZXAgcHJvZmlsZSAqLwogdm9pZCBfX21seDVf
aWJfcmVtb3ZlKHN0cnVjdCBtbHg1X2liX2RldiAqZGV2LAogCQkgICAgICBjb25zdCBzdHJ1Y3Qg
bWx4NV9pYl9wcm9maWxlICpwcm9maWxlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9pbmZpbmliYW5k
L2h3L21seDUvbXIuYyBiL2RyaXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L21yLmMKaW5kZXggMTk5
Zjc5NTlhYWE1MTAuLmZiZTMxODMwYjIyODA3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2luZmluaWJh
bmQvaHcvbWx4NS9tci5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L21yLmMKQEAg
LTc0Myw3ICs3NDMsOCBAQCBzdGF0aWMgaW50IG1yX3VtZW1fZ2V0KHN0cnVjdCBtbHg1X2liX2Rl
diAqZGV2LCBzdHJ1Y3QgaWJfdWRhdGEgKnVkYXRhLAogCWlmIChhY2Nlc3NfZmxhZ3MgJiBJQl9B
Q0NFU1NfT05fREVNQU5EKSB7CiAJCXN0cnVjdCBpYl91bWVtX29kcCAqb2RwOwogCi0JCW9kcCA9
IGliX3VtZW1fb2RwX2dldCh1ZGF0YSwgc3RhcnQsIGxlbmd0aCwgYWNjZXNzX2ZsYWdzKTsKKwkJ
b2RwID0gaWJfdW1lbV9vZHBfZ2V0KHVkYXRhLCBzdGFydCwgbGVuZ3RoLCBhY2Nlc3NfZmxhZ3Ms
CisJCQkJICAgICAgJm1seDVfbW5fb3BzKTsKIAkJaWYgKElTX0VSUihvZHApKSB7CiAJCQltbHg1
X2liX2RiZyhkZXYsICJ1bWVtIGdldCBmYWlsZWQgKCVsZClcbiIsCiAJCQkJICAgIFBUUl9FUlIo
b2RwKSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQvaHcvbWx4NS9vZHAuYyBiL2Ry
aXZlcnMvaW5maW5pYmFuZC9ody9tbHg1L29kcC5jCmluZGV4IGZkMjMwNmFmZjc4YWQ3Li45OGIx
MDA5YzVjMGUwMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9pbmZpbmliYW5kL2h3L21seDUvb2RwLmMK
KysrIGIvZHJpdmVycy9pbmZpbmliYW5kL2h3L21seDUvb2RwLmMKQEAgLTI0NiwxNiArMjQ2LDIz
IEBAIHN0YXRpYyB2b2lkIGRlc3Ryb3lfdW51c2VkX2ltcGxpY2l0X2NoaWxkX21yKHN0cnVjdCBt
bHg1X2liX21yICptcikKIAl4YV91bmxvY2soJmltci0+aW1wbGljaXRfY2hpbGRyZW4pOwogfQog
Ci12b2lkIG1seDVfaWJfaW52YWxpZGF0ZV9yYW5nZShzdHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1f
b2RwLCB1bnNpZ25lZCBsb25nIHN0YXJ0LAotCQkJICAgICAgdW5zaWduZWQgbG9uZyBlbmQpCitz
dGF0aWMgYm9vbCBtbHg1X2liX2ludmFsaWRhdGVfcmFuZ2Uoc3RydWN0IG1tdV9yYW5nZV9ub3Rp
ZmllciAqbXJuLAorCQkJCSAgICAgY29uc3Qgc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFu
Z2UpCiB7CisJc3RydWN0IGliX3VtZW1fb2RwICp1bWVtX29kcCA9CisJCWNvbnRhaW5lcl9vZiht
cm4sIHN0cnVjdCBpYl91bWVtX29kcCwgbm90aWZpZXIpOwogCXN0cnVjdCBtbHg1X2liX21yICpt
cjsKIAljb25zdCB1NjQgdW1yX2Jsb2NrX21hc2sgPSAoTUxYNV9VTVJfTVRUX0FMSUdOTUVOVCAv
CiAJCQkJICAgIHNpemVvZihzdHJ1Y3QgbWx4NV9tdHQpKSAtIDE7CiAJdTY0IGlkeCA9IDAsIGJs
a19zdGFydF9pZHggPSAwOworCXVuc2lnbmVkIGxvbmcgc3RhcnQ7CisJdW5zaWduZWQgbG9uZyBl
bmQ7CiAJaW50IGluX2Jsb2NrID0gMDsKIAl1NjQgYWRkcjsKIAorCWlmICghbW11X25vdGlmaWVy
X3JhbmdlX2Jsb2NrYWJsZShyYW5nZSkpCisJCXJldHVybiBmYWxzZTsKKwogCW11dGV4X2xvY2so
JnVtZW1fb2RwLT51bWVtX211dGV4KTsKIAkvKgogCSAqIElmIG5wYWdlcyBpcyB6ZXJvIHRoZW4g
dW1lbV9vZHAtPnByaXZhdGUgbWF5IG5vdCBiZSBzZXR1cCB5ZXQuIFRoaXMKQEAgLTI2NSw4ICsy
NzIsOCBAQCB2b2lkIG1seDVfaWJfaW52YWxpZGF0ZV9yYW5nZShzdHJ1Y3QgaWJfdW1lbV9vZHAg
KnVtZW1fb2RwLCB1bnNpZ25lZCBsb25nIHN0YXJ0LAogCQlnb3RvIG91dDsKIAltciA9IHVtZW1f
b2RwLT5wcml2YXRlOwogCi0Jc3RhcnQgPSBtYXhfdCh1NjQsIGliX3VtZW1fc3RhcnQodW1lbV9v
ZHApLCBzdGFydCk7Ci0JZW5kID0gbWluX3QodTY0LCBpYl91bWVtX2VuZCh1bWVtX29kcCksIGVu
ZCk7CisJc3RhcnQgPSBtYXhfdCh1NjQsIGliX3VtZW1fc3RhcnQodW1lbV9vZHApLCByYW5nZS0+
c3RhcnQpOworCWVuZCA9IG1pbl90KHU2NCwgaWJfdW1lbV9lbmQodW1lbV9vZHApLCByYW5nZS0+
ZW5kKTsKIAogCS8qCiAJICogSXRlcmF0aW9uIG9uZSAtIHphcCB0aGUgSFcncyBNVFRzLiBUaGUg
bm90aWZpZXJzX2NvdW50IGVuc3VyZXMgdGhhdApAQCAtMzE3LDggKzMyNCwxMyBAQCB2b2lkIG1s
eDVfaWJfaW52YWxpZGF0ZV9yYW5nZShzdHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1fb2RwLCB1bnNp
Z25lZCBsb25nIHN0YXJ0LAogCQlkZXN0cm95X3VudXNlZF9pbXBsaWNpdF9jaGlsZF9tcihtcik7
CiBvdXQ6CiAJbXV0ZXhfdW5sb2NrKCZ1bWVtX29kcC0+dW1lbV9tdXRleCk7CisJcmV0dXJuIHRy
dWU7CiB9CiAKK2NvbnN0IHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXJfb3BzIG1seDVfbW5fb3Bz
ID0geworCS5pbnZhbGlkYXRlID0gbWx4NV9pYl9pbnZhbGlkYXRlX3JhbmdlLAorfTsKKwogdm9p
ZCBtbHg1X2liX2ludGVybmFsX2ZpbGxfb2RwX2NhcHMoc3RydWN0IG1seDVfaWJfZGV2ICpkZXYp
CiB7CiAJc3RydWN0IGliX29kcF9jYXBzICpjYXBzID0gJmRldi0+b2RwX2NhcHM7CkBAIC00MTks
NyArNDMxLDcgQEAgc3RhdGljIHN0cnVjdCBtbHg1X2liX21yICppbXBsaWNpdF9nZXRfY2hpbGRf
bXIoc3RydWN0IG1seDVfaWJfbXIgKmltciwKIAogCW9kcCA9IGliX3VtZW1fb2RwX2FsbG9jX2No
aWxkKHRvX2liX3VtZW1fb2RwKGltci0+dW1lbSksCiAJCQkJICAgICAgaWR4ICogTUxYNV9JTVJf
TVRUX1NJWkUsCi0JCQkJICAgICAgTUxYNV9JTVJfTVRUX1NJWkUpOworCQkJCSAgICAgIE1MWDVf
SU1SX01UVF9TSVpFLCAmbWx4NV9tbl9vcHMpOwogCWlmIChJU19FUlIob2RwKSkKIAkJcmV0dXJu
IEVSUl9DQVNUKG9kcCk7CiAKQEAgLTYwNSw4ICs2MTcsOSBAQCBzdGF0aWMgaW50IHBhZ2VmYXVs
dF9yZWFsX21yKHN0cnVjdCBtbHg1X2liX21yICptciwgc3RydWN0IGliX3VtZW1fb2RwICpvZHAs
CiAJCQkgICAgIHU2NCB1c2VyX3ZhLCBzaXplX3QgYmNudCwgdTMyICpieXRlc19tYXBwZWQsCiAJ
CQkgICAgIHUzMiBmbGFncykKIHsKLQlpbnQgY3VycmVudF9zZXEsIHBhZ2Vfc2hpZnQsIHJldCwg
bnA7CisJaW50IHBhZ2Vfc2hpZnQsIHJldCwgbnA7CiAJYm9vbCBkb3duZ3JhZGUgPSBmbGFncyAm
IE1MWDVfUEZfRkxBR1NfRE9XTkdSQURFOworCXVuc2lnbmVkIGxvbmcgY3VycmVudF9zZXE7CiAJ
dTY0IGFjY2Vzc19tYXNrOwogCXU2NCBzdGFydF9pZHgsIHBhZ2VfbWFzazsKIApAQCAtNjE4LDEy
ICs2MzEsNyBAQCBzdGF0aWMgaW50IHBhZ2VmYXVsdF9yZWFsX21yKHN0cnVjdCBtbHg1X2liX21y
ICptciwgc3RydWN0IGliX3VtZW1fb2RwICpvZHAsCiAJaWYgKG9kcC0+dW1lbS53cml0YWJsZSAm
JiAhZG93bmdyYWRlKQogCQlhY2Nlc3NfbWFzayB8PSBPRFBfV1JJVEVfQUxMT1dFRF9CSVQ7CiAK
LQljdXJyZW50X3NlcSA9IFJFQURfT05DRShvZHAtPm5vdGlmaWVyc19zZXEpOwotCS8qCi0JICog
RW5zdXJlIHRoZSBzZXF1ZW5jZSBudW1iZXIgaXMgdmFsaWQgZm9yIHNvbWUgdGltZSBiZWZvcmUg
d2UgY2FsbAotCSAqIGd1cC4KLQkgKi8KLQlzbXBfcm1iKCk7CisJY3VycmVudF9zZXEgPSBtbXVf
cmFuZ2VfcmVhZF9iZWdpbigmb2RwLT5ub3RpZmllcik7CiAKIAlucCA9IGliX3VtZW1fb2RwX21h
cF9kbWFfcGFnZXMob2RwLCB1c2VyX3ZhLCBiY250LCBhY2Nlc3NfbWFzaywKIAkJCQkgICAgICAg
Y3VycmVudF9zZXEpOwpAQCAtNjMxLDcgKzYzOSw3IEBAIHN0YXRpYyBpbnQgcGFnZWZhdWx0X3Jl
YWxfbXIoc3RydWN0IG1seDVfaWJfbXIgKm1yLCBzdHJ1Y3QgaWJfdW1lbV9vZHAgKm9kcCwKIAkJ
cmV0dXJuIG5wOwogCiAJbXV0ZXhfbG9jaygmb2RwLT51bWVtX211dGV4KTsKLQlpZiAoIWliX3Vt
ZW1fbW11X25vdGlmaWVyX3JldHJ5KG9kcCwgY3VycmVudF9zZXEpKSB7CisJaWYgKCFtbXVfcmFu
Z2VfcmVhZF9yZXRyeSgmb2RwLT5ub3RpZmllciwgY3VycmVudF9zZXEpKSB7CiAJCS8qCiAJCSAq
IE5vIG5lZWQgdG8gY2hlY2sgd2hldGhlciB0aGUgTVRUcyByZWFsbHkgYmVsb25nIHRvCiAJCSAq
IHRoaXMgTVIsIHNpbmNlIGliX3VtZW1fb2RwX21hcF9kbWFfcGFnZXMgYWxyZWFkeQpAQCAtNjYx
LDE5ICs2NjksNiBAQCBzdGF0aWMgaW50IHBhZ2VmYXVsdF9yZWFsX21yKHN0cnVjdCBtbHg1X2li
X21yICptciwgc3RydWN0IGliX3VtZW1fb2RwICpvZHAsCiAJcmV0dXJuIG5wIDw8IChwYWdlX3No
aWZ0IC0gUEFHRV9TSElGVCk7CiAKIG91dDoKLQlpZiAocmV0ID09IC1FQUdBSU4pIHsKLQkJdW5z
aWduZWQgbG9uZyB0aW1lb3V0ID0gbXNlY3NfdG9famlmZmllcyhNTVVfTk9USUZJRVJfVElNRU9V
VCk7Ci0KLQkJaWYgKCF3YWl0X2Zvcl9jb21wbGV0aW9uX3RpbWVvdXQoJm9kcC0+bm90aWZpZXJf
Y29tcGxldGlvbiwKLQkJCQkJCSB0aW1lb3V0KSkgewotCQkJbWx4NV9pYl93YXJuKAotCQkJCW1y
LT5kZXYsCi0JCQkJInRpbWVvdXQgd2FpdGluZyBmb3IgbW11IG5vdGlmaWVyLiBzZXEgJWQgYWdh
aW5zdCAlZC4gbm90aWZpZXJzX2NvdW50PSVkXG4iLAotCQkJCWN1cnJlbnRfc2VxLCBvZHAtPm5v
dGlmaWVyc19zZXEsCi0JCQkJb2RwLT5ub3RpZmllcnNfY291bnQpOwotCQl9Ci0JfQotCiAJcmV0
dXJuIHJldDsKIH0KIApAQCAtMTYxNCw3ICsxNjA5LDYgQEAgdm9pZCBtbHg1X29kcF9pbml0X21y
X2NhY2hlX2VudHJ5KHN0cnVjdCBtbHg1X2NhY2hlX2VudCAqZW50KQogCiBzdGF0aWMgY29uc3Qg
c3RydWN0IGliX2RldmljZV9vcHMgbWx4NV9pYl9kZXZfb2RwX29wcyA9IHsKIAkuYWR2aXNlX21y
ID0gbWx4NV9pYl9hZHZpc2VfbXIsCi0JLmludmFsaWRhdGVfcmFuZ2UgPSBtbHg1X2liX2ludmFs
aWRhdGVfcmFuZ2UsCiB9OwogCiBpbnQgbWx4NV9pYl9vZHBfaW5pdF9vbmUoc3RydWN0IG1seDVf
aWJfZGV2ICpkZXYpCmRpZmYgLS1naXQgYS9pbmNsdWRlL3JkbWEvaWJfdW1lbV9vZHAuaCBiL2lu
Y2x1ZGUvcmRtYS9pYl91bWVtX29kcC5oCmluZGV4IDA5YjBlNDQ5NDk4NmE5Li45OGVkNTQzNWFm
Y2NkOSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9yZG1hL2liX3VtZW1fb2RwLmgKKysrIGIvaW5jbHVk
ZS9yZG1hL2liX3VtZW1fb2RwLmgKQEAgLTM1LDExICszNSwxMSBAQAogCiAjaW5jbHVkZSA8cmRt
YS9pYl91bWVtLmg+CiAjaW5jbHVkZSA8cmRtYS9pYl92ZXJicy5oPgotI2luY2x1ZGUgPGxpbnV4
L2ludGVydmFsX3RyZWUuaD4KIAogc3RydWN0IGliX3VtZW1fb2RwIHsKIAlzdHJ1Y3QgaWJfdW1l
bSB1bWVtOwotCXN0cnVjdCBpYl91Y29udGV4dF9wZXJfbW0gKnBlcl9tbTsKKwlzdHJ1Y3QgbW11
X3JhbmdlX25vdGlmaWVyIG5vdGlmaWVyOworCXN0cnVjdCBwaWQgKnRnaWQ7CiAKIAkvKgogCSAq
IEFuIGFycmF5IG9mIHRoZSBwYWdlcyBpbmNsdWRlZCBpbiB0aGUgb24tZGVtYW5kIHBhZ2luZyB1
bWVtLgpAQCAtNjIsMTMgKzYyLDggQEAgc3RydWN0IGliX3VtZW1fb2RwIHsKIAlzdHJ1Y3QgbXV0
ZXgJCXVtZW1fbXV0ZXg7CiAJdm9pZAkJCSpwcml2YXRlOyAvKiBmb3IgdGhlIEhXIGRyaXZlciB0
byB1c2UuICovCiAKLQlpbnQgbm90aWZpZXJzX3NlcTsKLQlpbnQgbm90aWZpZXJzX2NvdW50Owog
CWludCBucGFnZXM7CiAKLQkvKiBUcmVlIHRyYWNraW5nICovCi0Jc3RydWN0IGludGVydmFsX3Ry
ZWVfbm9kZSBpbnRlcnZhbF90cmVlOwotCiAJLyoKIAkgKiBBbiBpbXBsaWNpdCBvZHAgdW1lbSBj
YW5ub3QgYmUgRE1BIG1hcHBlZCwgaGFzIDAgbGVuZ3RoLCBhbmQgc2VydmVzCiAJICogb25seSBh
cyBhbiBhbmNob3IgZm9yIHRoZSBkcml2ZXIgdG8gaG9sZCBvbnRvIHRoZSBwZXJfbW0uIEZJWE1F
OgpAQCAtNzcsNyArNzIsNiBAQCBzdHJ1Y3QgaWJfdW1lbV9vZHAgewogCSAqLwogCWJvb2wgaXNf
aW1wbGljaXRfb2RwOwogCi0Jc3RydWN0IGNvbXBsZXRpb24Jbm90aWZpZXJfY29tcGxldGlvbjsK
IAl1bnNpZ25lZCBpbnQJCXBhZ2Vfc2hpZnQ7CiB9OwogCkBAIC04OSwxMyArODMsMTMgQEAgc3Rh
dGljIGlubGluZSBzdHJ1Y3QgaWJfdW1lbV9vZHAgKnRvX2liX3VtZW1fb2RwKHN0cnVjdCBpYl91
bWVtICp1bWVtKQogLyogUmV0dXJucyB0aGUgZmlyc3QgcGFnZSBvZiBhbiBPRFAgdW1lbS4gKi8K
IHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBpYl91bWVtX3N0YXJ0KHN0cnVjdCBpYl91bWVt
X29kcCAqdW1lbV9vZHApCiB7Ci0JcmV0dXJuIHVtZW1fb2RwLT5pbnRlcnZhbF90cmVlLnN0YXJ0
OworCXJldHVybiB1bWVtX29kcC0+bm90aWZpZXIuaW50ZXJ2YWxfdHJlZS5zdGFydDsKIH0KIAog
LyogUmV0dXJucyB0aGUgYWRkcmVzcyBvZiB0aGUgcGFnZSBhZnRlciB0aGUgbGFzdCBvbmUgb2Yg
YW4gT0RQIHVtZW0uICovCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgaWJfdW1lbV9lbmQo
c3RydWN0IGliX3VtZW1fb2RwICp1bWVtX29kcCkKIHsKLQlyZXR1cm4gdW1lbV9vZHAtPmludGVy
dmFsX3RyZWUubGFzdCArIDE7CisJcmV0dXJuIHVtZW1fb2RwLT5ub3RpZmllci5pbnRlcnZhbF90
cmVlLmxhc3QgKyAxOwogfQogCiBzdGF0aWMgaW5saW5lIHNpemVfdCBpYl91bWVtX29kcF9udW1f
cGFnZXMoc3RydWN0IGliX3VtZW1fb2RwICp1bWVtX29kcCkKQEAgLTExOSwyMSArMTEzLDE0IEBA
IHN0YXRpYyBpbmxpbmUgc2l6ZV90IGliX3VtZW1fb2RwX251bV9wYWdlcyhzdHJ1Y3QgaWJfdW1l
bV9vZHAgKnVtZW1fb2RwKQogCiAjaWZkZWYgQ09ORklHX0lORklOSUJBTkRfT05fREVNQU5EX1BB
R0lORwogCi1zdHJ1Y3QgaWJfdWNvbnRleHRfcGVyX21tIHsKLQlzdHJ1Y3QgbW11X25vdGlmaWVy
IG1uOwotCXN0cnVjdCBwaWQgKnRnaWQ7Ci0KLQlzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgdW1lbV90
cmVlOwotCS8qIFByb3RlY3RzIHVtZW1fdHJlZSAqLwotCXN0cnVjdCByd19zZW1hcGhvcmUgdW1l
bV9yd3NlbTsKLX07Ci0KIHN0cnVjdCBpYl91bWVtX29kcCAqaWJfdW1lbV9vZHBfZ2V0KHN0cnVj
dCBpYl91ZGF0YSAqdWRhdGEsIHVuc2lnbmVkIGxvbmcgYWRkciwKLQkJCQkgICAgc2l6ZV90IHNp
emUsIGludCBhY2Nlc3MpOworCQkJCSAgICBzaXplX3Qgc2l6ZSwgaW50IGFjY2VzcywKKwkJCQkg
ICAgY29uc3Qgc3RydWN0IG1tdV9yYW5nZV9ub3RpZmllcl9vcHMgKm9wcyk7CiBzdHJ1Y3QgaWJf
dW1lbV9vZHAgKmliX3VtZW1fb2RwX2FsbG9jX2ltcGxpY2l0KHN0cnVjdCBpYl91ZGF0YSAqdWRh
dGEsCiAJCQkJCSAgICAgICBpbnQgYWNjZXNzKTsKLXN0cnVjdCBpYl91bWVtX29kcCAqaWJfdW1l
bV9vZHBfYWxsb2NfY2hpbGQoc3RydWN0IGliX3VtZW1fb2RwICpyb290X3VtZW0sCi0JCQkJCSAg
ICB1bnNpZ25lZCBsb25nIGFkZHIsIHNpemVfdCBzaXplKTsKK3N0cnVjdCBpYl91bWVtX29kcCAq
CitpYl91bWVtX29kcF9hbGxvY19jaGlsZChzdHJ1Y3QgaWJfdW1lbV9vZHAgKnJvb3RfdW1lbSwg
dW5zaWduZWQgbG9uZyBhZGRyLAorCQkJc2l6ZV90IHNpemUsIGNvbnN0IHN0cnVjdCBtbXVfcmFu
Z2Vfbm90aWZpZXJfb3BzICpvcHMpOwogdm9pZCBpYl91bWVtX29kcF9yZWxlYXNlKHN0cnVjdCBp
Yl91bWVtX29kcCAqdW1lbV9vZHApOwogCiBpbnQgaWJfdW1lbV9vZHBfbWFwX2RtYV9wYWdlcyhz
dHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1fb2RwLCB1NjQgc3RhcnRfb2Zmc2V0LApAQCAtMTQzLDM5
ICsxMzAsMTEgQEAgaW50IGliX3VtZW1fb2RwX21hcF9kbWFfcGFnZXMoc3RydWN0IGliX3VtZW1f
b2RwICp1bWVtX29kcCwgdTY0IHN0YXJ0X29mZnNldCwKIHZvaWQgaWJfdW1lbV9vZHBfdW5tYXBf
ZG1hX3BhZ2VzKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHAsIHU2NCBzdGFydF9vZmZzZXQs
CiAJCQkJIHU2NCBib3VuZCk7CiAKLXR5cGVkZWYgaW50ICgqdW1lbV9jYWxsX2JhY2spKHN0cnVj
dCBpYl91bWVtX29kcCAqaXRlbSwgdTY0IHN0YXJ0LCB1NjQgZW5kLAotCQkJICAgICAgdm9pZCAq
Y29va2llKTsKLS8qCi0gKiBDYWxsIHRoZSBjYWxsYmFjayBvbiBlYWNoIGliX3VtZW0gaW4gdGhl
IHJhbmdlLiBSZXR1cm5zIHRoZSBsb2dpY2FsIG9yIG9mCi0gKiB0aGUgcmV0dXJuIHZhbHVlcyBv
ZiB0aGUgZnVuY3Rpb25zIGNhbGxlZC4KLSAqLwotaW50IHJidF9pYl91bWVtX2Zvcl9lYWNoX2lu
X3JhbmdlKHN0cnVjdCByYl9yb290X2NhY2hlZCAqcm9vdCwKLQkJCQkgIHU2NCBzdGFydCwgdTY0
IGVuZCwKLQkJCQkgIHVtZW1fY2FsbF9iYWNrIGNiLAotCQkJCSAgYm9vbCBibG9ja2FibGUsIHZv
aWQgKmNvb2tpZSk7Ci0KLXN0YXRpYyBpbmxpbmUgaW50IGliX3VtZW1fbW11X25vdGlmaWVyX3Jl
dHJ5KHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHAsCi0JCQkJCSAgICAgdW5zaWduZWQgbG9u
ZyBtbXVfc2VxKQotewotCS8qCi0JICogVGhpcyBjb2RlIGlzIHN0cm9uZ2x5IGJhc2VkIG9uIHRo
ZSBLVk0gY29kZSBmcm9tCi0JICogbW11X25vdGlmaWVyX3JldHJ5LiBTaG91bGQgYmUgY2FsbGVk
IHdpdGgKLQkgKiB0aGUgcmVsZXZhbnQgbG9ja3MgdGFrZW4gKHVtZW1fb2RwLT51bWVtX211dGV4
Ci0JICogYW5kIHRoZSB1Y29udGV4dCB1bWVtX211dGV4IHNlbWFwaG9yZSBsb2NrZWQgZm9yIHJl
YWQpLgotCSAqLwotCi0JaWYgKHVubGlrZWx5KHVtZW1fb2RwLT5ub3RpZmllcnNfY291bnQpKQot
CQlyZXR1cm4gMTsKLQlpZiAodW1lbV9vZHAtPm5vdGlmaWVyc19zZXEgIT0gbW11X3NlcSkKLQkJ
cmV0dXJuIDE7Ci0JcmV0dXJuIDA7Ci19Ci0KICNlbHNlIC8qIENPTkZJR19JTkZJTklCQU5EX09O
X0RFTUFORF9QQUdJTkcgKi8KIAotc3RhdGljIGlubGluZSBzdHJ1Y3QgaWJfdW1lbV9vZHAgKmli
X3VtZW1fb2RwX2dldChzdHJ1Y3QgaWJfdWRhdGEgKnVkYXRhLAotCQkJCQkJICB1bnNpZ25lZCBs
b25nIGFkZHIsCi0JCQkJCQkgIHNpemVfdCBzaXplLCBpbnQgYWNjZXNzKQorc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgaWJfdW1lbV9vZHAgKgoraWJfdW1lbV9vZHBfZ2V0KHN0cnVjdCBpYl91ZGF0YSAq
dWRhdGEsIHVuc2lnbmVkIGxvbmcgYWRkciwgc2l6ZV90IHNpemUsCisJCWludCBhY2Nlc3MsIGNv
bnN0IHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXJfb3BzICpvcHMpCiB7CiAJcmV0dXJuIEVSUl9Q
VFIoLUVJTlZBTCk7CiB9CmRpZmYgLS1naXQgYS9pbmNsdWRlL3JkbWEvaWJfdmVyYnMuaCBiL2lu
Y2x1ZGUvcmRtYS9pYl92ZXJicy5oCmluZGV4IDZhNDdiYTg1YzU0YzExLi4yYzMwYzg1OWFlMGQx
MyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9yZG1hL2liX3ZlcmJzLmgKKysrIGIvaW5jbHVkZS9yZG1h
L2liX3ZlcmJzLmgKQEAgLTI0MjIsOCArMjQyMiw2IEBAIHN0cnVjdCBpYl9kZXZpY2Vfb3BzIHsK
IAkJCSAgICB1NjQgaW92YSk7CiAJaW50ICgqdW5tYXBfZm1yKShzdHJ1Y3QgbGlzdF9oZWFkICpm
bXJfbGlzdCk7CiAJaW50ICgqZGVhbGxvY19mbXIpKHN0cnVjdCBpYl9mbXIgKmZtcik7Ci0Jdm9p
ZCAoKmludmFsaWRhdGVfcmFuZ2UpKHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHAsCi0JCQkJ
IHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgZW5kKTsKIAlpbnQgKCphdHRhY2hf
bWNhc3QpKHN0cnVjdCBpYl9xcCAqcXAsIHVuaW9uIGliX2dpZCAqZ2lkLCB1MTYgbGlkKTsKIAlp
bnQgKCpkZXRhY2hfbWNhc3QpKHN0cnVjdCBpYl9xcCAqcXAsIHVuaW9uIGliX2dpZCAqZ2lkLCB1
MTYgbGlkKTsKIAlzdHJ1Y3QgaWJfeHJjZCAqKCphbGxvY194cmNkKShzdHJ1Y3QgaWJfZGV2aWNl
ICpkZXZpY2UsCi0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZv
L2RyaS1kZXZlbA==
