Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id F041332B808
	for <lists+dri-devel@lfdr.de>; Wed,  3 Mar 2021 14:32:38 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DF9CE89B11;
	Wed,  3 Mar 2021 13:32:34 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5E3D589AA6
 for <dri-devel@lists.freedesktop.org>; Wed,  3 Mar 2021 13:32:33 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id DB371AE44;
 Wed,  3 Mar 2021 13:32:31 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: daniel@ffwll.ch, airlied@linux.ie, maarten.lankhorst@linux.intel.com,
 mripard@kernel.org, sumit.semwal@linaro.org, christian.koenig@amd.com,
 gregkh@linuxfoundation.org, hdegoede@redhat.com, sean@poorly.run,
 noralf@tronnes.org, stern@rowland.harvard.edu, dan.carpenter@oracle.com
Subject: [PATCH v8] drm: Use USB controller's DMA mask when importing dmabufs
Date: Wed,  3 Mar 2021 14:32:29 +0100
Message-Id: <20210303133229.3288-1-tzimmermann@suse.de>
X-Mailer: git-send-email 2.30.1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, stable@vger.kernel.org,
 dri-devel@lists.freedesktop.org, Pavel Machek <pavel@ucw.cz>,
 Christoph Hellwig <hch@lst.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VVNCIGRldmljZXMgY2Fubm90IHBlcmZvcm0gRE1BIGFuZCBoZW5jZSBoYXZlIG5vIGRtYV9tYXNr
IHNldCBpbiB0aGVpcgpkZXZpY2Ugc3RydWN0dXJlLiBUaGVyZWZvcmUgaW1wb3J0aW5nIGRtYWJ1
ZiBpbnRvIGEgVVNCLWJhc2VkIGRyaXZlcgpmYWlscywgd2hpY2ggYnJlYWtzIGpvaW5pbmcgYW5k
IG1pcnJvcmluZyBvZiBkaXNwbGF5IGluIFgxMS4KCkZvciBVU0IgZGV2aWNlcywgcGljayB0aGUg
YXNzb2NpYXRlZCBVU0IgY29udHJvbGxlciBhcyBhdHRhY2htZW50IGRldmljZS4KVGhpcyBhbGxv
d3MgdGhlIERSTSBpbXBvcnQgaGVscGVycyB0byBwZXJmb3JtIHRoZSBETUEgc2V0dXAuIElmIHRo
ZSBETUEKY29udHJvbGxlciBkb2VzIG5vdCBzdXBwb3J0IERNQSB0cmFuc2ZlcnMsIHdlJ3JlIG91
dCBvZiBsdWNrIGFuZCBjYW5ub3QKaW1wb3J0LiBPdXIgY3VycmVudCBVU0ItYmFzZWQgRFJNIGRy
aXZlcnMgZG9uJ3QgdXNlIERNQSwgc28gdGhlIGFjdHVhbApETUEgZGV2aWNlIGlzIG5vdCBpbXBv
cnRhbnQuCgpUZXN0ZWQgYnkgam9pbmluZy9taXJyb3JpbmcgZGlzcGxheXMgb2YgdWRsIGFuZCBy
YWRlb24gdW5kZXIgR25vbWUvWDExLgoKdjg6CgkqIHJlbGVhc2UgZG1hZGV2IGlmIGRldmljZSBp
bml0aWFsaXphdGlvbiBmYWlscyAoTm9yYWxmKQoJKiBmaXggY29tbWl0IGRlc2NyaXB0aW9uIChO
b3JhbGYpCnY3OgoJKiBmaXggdXNlLWJlZm9yZS1pbml0IGJ1ZyBpbiBnbTEydTMyMCAoRGFuKQp2
NjoKCSogaW1wbGVtZW50IHdvcmthcm91bmQgaW4gRFJNIGRyaXZlcnMgYW5kIGhvbGQgcmVmZXJl
bmNlIHRvCgkgIERNQSBkZXZpY2Ugd2hpbGUgVVNCIGRldmljZSBpcyBpbiB1c2UKCSogcmVtb3Zl
IGRldl9pc191c2IoKSAoR3JlZykKCSogY29sbGFwc2UgVVNCIGhlbHBlciBpbnRvIHVzYl9pbnRm
X2dldF9kbWFfZGV2aWNlKCkgKEFsYW4pCgkqIGludGVncmF0ZSBEYW5pZWwncyBUT0RPIHN0YXRl
bWVudCAoRGFuaWVsKQoJKiBmaXggdHlwb3MgKEdyZWcpCnY1OgoJKiBwcm92aWRlIGEgaGVscGVy
IGZvciBVU0IgaW50ZXJmYWNlcyAoQWxhbikKCSogYWRkIEZJWE1FIGl0ZW0gdG8gZG9jdW1lbnRh
dGlvbiBhbmQgVE9ETyBsaXN0IChEYW5pZWwpCnY0OgoJKiBpbXBsZW1lbnQgd29ya2Fyb3VuZCB3
aXRoIFVTQiBoZWxwZXIgZnVuY3Rpb25zIChHcmVnKQoJKiB1c2Ugc3RydWN0IHVzYl9kZXZpY2Ut
PmJ1cy0+c3lzZGV2IGFzIERNQSBkZXZpY2UgKFRha2FzaGkpCnYzOgoJKiBkcm9wIGdlbV9jcmVh
dGVfb2JqZWN0CgkqIHVzZSBETUEgbWFzayBvZiBVU0IgY29udHJvbGxlciwgaWYgYW55IChEYW5p
ZWwsIENocmlzdGlhbiwgTm9yYWxmKQp2MjoKCSogbW92ZSBmaXggdG8gaW1wb3J0ZXIgc2lkZSAo
Q2hyaXN0aWFuLCBEYW5pZWwpCgkqIHVwZGF0ZSBTSE1FTSBhbmQgQ01BIGhlbHBlcnMgZm9yIG5l
dyBQUklNRSBjYWxsYmFja3MKClNpZ25lZC1vZmYtYnk6IFRob21hcyBaaW1tZXJtYW5uIDx0emlt
bWVybWFubkBzdXNlLmRlPgpGaXhlczogNmViMDIzM2VjMmQwICgidXNiOiBkb24ndCBpbmhlcml0
eSBETUEgcHJvcGVydGllcyBmb3IgVVNCIGRldmljZXMiKQpUZXN0ZWQtYnk6IFBhdmVsIE1hY2hl
ayA8cGF2ZWxAdWN3LmN6PgpSZXZpZXdlZC1ieTogR3JlZyBLcm9haC1IYXJ0bWFuIDxncmVna2hA
bGludXhmb3VuZGF0aW9uLm9yZz4KQWNrZWQtYnk6IENocmlzdGlhbiBLw7ZuaWcgPGNocmlzdGlh
bi5rb2VuaWdAYW1kLmNvbT4KQWNrZWQtYnk6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJA
ZmZ3bGwuY2g+CkNjOiBDaHJpc3RvcGggSGVsbHdpZyA8aGNoQGxzdC5kZT4KQ2M6IEdyZWcgS3Jv
YWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+CkNjOiA8c3RhYmxlQHZnZXIu
a2VybmVsLm9yZz4gIyB2NS4xMCsKU2lnbmVkLW9mZi1ieTogVGhvbWFzIFppbW1lcm1hbm4gPHR6
aW1tZXJtYW5uQHN1c2UuZGU+Ci0tLQogRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QgICAgICB8
IDIxICsrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS90aW55L2dtMTJ1MzIwLmMgfCA0
NCArKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS91ZGwv
dWRsX2Rydi5jICAgfCAxNyArKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9k
cnYuaCAgIHwgIDEgKwogZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jICB8IDEwICsrKysr
KysrCiBkcml2ZXJzL3VzYi9jb3JlL3VzYi5jICAgICAgICAgIHwgMzIgKysrKysrKysrKysrKysr
KysrKysrKysrCiBpbmNsdWRlL2xpbnV4L3VzYi5oICAgICAgICAgICAgIHwgIDIgKysKIDcgZmls
ZXMgY2hhbmdlZCwgMTE5IGluc2VydGlvbnMoKyksIDggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QgYi9Eb2N1bWVudGF0aW9uL2dwdS90b2RvLnJz
dAppbmRleCAwNjMxYjliMzIzZDUuLmZkZmQ2YTEwODFlYyAxMDA2NDQKLS0tIGEvRG9jdW1lbnRh
dGlvbi9ncHUvdG9kby5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9ncHUvdG9kby5yc3QKQEAgLTU3
MSw2ICs1NzEsMjcgQEAgQ29udGFjdDogRGFuaWVsIFZldHRlcgogCiBMZXZlbDogSW50ZXJtZWRp
YXRlCiAKK1JlbW92ZSBhdXRvbWF0aWMgcGFnZSBtYXBwaW5nIGZyb20gZG1hLWJ1ZiBpbXBvcnRp
bmcKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K
KworV2hlbiBpbXBvcnRpbmcgZG1hLWJ1ZnMsIHRoZSBkbWEtYnVmIGFuZCBQUklNRSBmcmFtZXdv
cmtzIGF1dG9tYXRpY2FsbHkgbWFwCitpbXBvcnRlZCBwYWdlcyBpbnRvIHRoZSBpbXBvcnRlcidz
IERNQSBhcmVhLiBkcm1fZ2VtX3ByaW1lX2ZkX3RvX2hhbmRsZSgpIGFuZAorZHJtX2dlbV9wcmlt
ZV9oYW5kbGVfdG9fZmQoKSByZXF1aXJlIHRoYXQgaW1wb3J0ZXJzIGNhbGwgZG1hX2J1Zl9hdHRh
Y2goKQorZXZlbiBpZiB0aGV5IG5ldmVyIGRvIGFjdHVhbCBkZXZpY2UgRE1BLCBidXQgb25seSBD
UFUgYWNjZXNzIHRocm91Z2gKK2RtYV9idWZfdm1hcCgpLiBUaGlzIGlzIGEgcHJvYmxlbSBmb3Ig
VVNCIGRldmljZXMsIHdoaWNoIGRvIG5vdCBzdXBwb3J0IERNQQorb3BlcmF0aW9ucy4KKworVG8g
Zml4IHRoZSBpc3N1ZSwgYXV0b21hdGljIHBhZ2UgbWFwcGluZ3Mgc2hvdWxkIGJlIHJlbW92ZWQg
ZnJvbSB0aGUKK2J1ZmZlci1zaGFyaW5nIGNvZGUuIEZpeGluZyB0aGlzIGlzIGEgYml0IG1vcmUg
aW52b2x2ZWQsIHNpbmNlIHRoZSBpbXBvcnQvZXhwb3J0CitjYWNoZSBpcyBhbHNvIHRpZWQgdG8g
JmRybV9nZW1fb2JqZWN0LmltcG9ydF9hdHRhY2guIE1lYW53aGlsZSB3ZSBwYXBlciBvdmVyCit0
aGlzIHByb2JsZW0gZm9yIFVTQiBkZXZpY2VzIGJ5IGZpc2hpbmcgb3V0IHRoZSBVU0IgaG9zdCBj
b250cm9sbGVyIGRldmljZSwgYXMKK2xvbmcgYXMgdGhhdCBzdXBwb3J0cyBETUEuIE90aGVyd2lz
ZSBpbXBvcnRpbmcgY2FuIHN0aWxsIG5lZWRsZXNzbHkgZmFpbC4KKworQ29udGFjdDogVGhvbWFz
IFppbW1lcm1hbm4gPHR6aW1tZXJtYW5uQHN1c2UuZGU+LCBEYW5pZWwgVmV0dGVyCisKK0xldmVs
OiBBZHZhbmNlZAorCisKIEJldHRlciBUZXN0aW5nCiA9PT09PT09PT09PT09PQogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vdGlueS9nbTEydTMyMC5jIGIvZHJpdmVycy9ncHUvZHJtL3Rp
bnkvZ20xMnUzMjAuYwppbmRleCAwYjRmNGYyYWYxZWYuLmEyMzNjODZkNDI4YiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL3RpbnkvZ20xMnUzMjAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
dGlueS9nbTEydTMyMC5jCkBAIC04NCw2ICs4NCw3IEBAIE1PRFVMRV9QQVJNX0RFU0MoZWNvX21v
ZGUsICJUdXJuIG9uIEVjbyBtb2RlIChsZXNzIGJyaWdodCwgbW9yZSBzaWxlbnQpIik7CiAKIHN0
cnVjdCBnbTEydTMyMF9kZXZpY2UgewogCXN0cnVjdCBkcm1fZGV2aWNlCSAgICAgICAgIGRldjsK
KwlzdHJ1Y3QgZGV2aWNlICAgICAgICAgICAgICAgICAgICpkbWFkZXY7CiAJc3RydWN0IGRybV9z
aW1wbGVfZGlzcGxheV9waXBlICAgcGlwZTsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvcgkgICAgICAg
ICBjb25uOwogCXVuc2lnbmVkIGNoYXIgICAgICAgICAgICAgICAgICAgKmNtZF9idWY7CkBAIC01
OTksNiArNjAwLDIyIEBAIHN0YXRpYyBjb25zdCB1aW50NjRfdCBnbTEydTMyMF9waXBlX21vZGlm
aWVyc1tdID0gewogCURSTV9GT1JNQVRfTU9EX0lOVkFMSUQKIH07CiAKKy8qCisgKiBGSVhNRTog
RG1hLWJ1ZiBzaGFyaW5nIHJlcXVpcmVzIERNQSBzdXBwb3J0IGJ5IHRoZSBpbXBvcnRpbmcgZGV2
aWNlLgorICogICAgICAgIFRoaXMgZnVuY3Rpb24gaXMgYSB3b3JrYXJvdW5kIHRvIG1ha2UgVVNC
IGRldmljZXMgd29yayBhcyB3ZWxsLgorICogICAgICAgIFNlZSB0b2RvLnJzdCBmb3IgaG93IHRv
IGZpeCB0aGUgaXNzdWUgaW4gdGhlIGRtYS1idWYgZnJhbWV3b3JrLgorICovCitzdGF0aWMgc3Ry
dWN0IGRybV9nZW1fb2JqZWN0ICpnbTEydTMyMF9nZW1fcHJpbWVfaW1wb3J0KHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsCisJCQkJCQkJc3RydWN0IGRtYV9idWYgKmRtYV9idWYpCit7CisJc3RydWN0
IGdtMTJ1MzIwX2RldmljZSAqZ20xMnUzMjAgPSB0b19nbTEydTMyMChkZXYpOworCisJaWYgKCFn
bTEydTMyMC0+ZG1hZGV2KQorCQlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKKworCXJldHVybiBk
cm1fZ2VtX3ByaW1lX2ltcG9ydF9kZXYoZGV2LCBkbWFfYnVmLCBnbTEydTMyMC0+ZG1hZGV2KTsK
K30KKwogREVGSU5FX0RSTV9HRU1fRk9QUyhnbTEydTMyMF9mb3BzKTsKIAogc3RhdGljIGNvbnN0
IHN0cnVjdCBkcm1fZHJpdmVyIGdtMTJ1MzIwX2RybV9kcml2ZXIgPSB7CkBAIC02MTIsNiArNjI5
LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fZHJpdmVyIGdtMTJ1MzIwX2RybV9kcml2ZXIg
PSB7CiAKIAkuZm9wcwkJID0gJmdtMTJ1MzIwX2ZvcHMsCiAJRFJNX0dFTV9TSE1FTV9EUklWRVJf
T1BTLAorCS5nZW1fcHJpbWVfaW1wb3J0ID0gZ20xMnUzMjBfZ2VtX3ByaW1lX2ltcG9ydCwKIH07
CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZHJtX21vZGVfY29uZmlnX2Z1bmNzIGdtMTJ1MzIwX21v
ZGVfY29uZmlnX2Z1bmNzID0gewpAQCAtNjM4LDE1ICs2NTYsMTggQEAgc3RhdGljIGludCBnbTEy
dTMyMF91c2JfcHJvYmUoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGVyZmFjZSwKIAkJCQkgICAg
ICBzdHJ1Y3QgZ20xMnUzMjBfZGV2aWNlLCBkZXYpOwogCWlmIChJU19FUlIoZ20xMnUzMjApKQog
CQlyZXR1cm4gUFRSX0VSUihnbTEydTMyMCk7CisJZGV2ID0gJmdtMTJ1MzIwLT5kZXY7CisKKwln
bTEydTMyMC0+ZG1hZGV2ID0gdXNiX2ludGZfZ2V0X2RtYV9kZXZpY2UodG9fdXNiX2ludGVyZmFj
ZShkZXYtPmRldikpOworCWlmICghZ20xMnUzMjAtPmRtYWRldikKKwkJZHJtX3dhcm4oZGV2LCAi
YnVmZmVyIHNoYXJpbmcgbm90IHN1cHBvcnRlZCIpOyAvKiBub3QgYW4gZXJyb3IgKi8KIAogCUlO
SVRfREVMQVlFRF9XT1JLKCZnbTEydTMyMC0+ZmJfdXBkYXRlLndvcmssIGdtMTJ1MzIwX2ZiX3Vw
ZGF0ZV93b3JrKTsKIAltdXRleF9pbml0KCZnbTEydTMyMC0+ZmJfdXBkYXRlLmxvY2spOwogCi0J
ZGV2ID0gJmdtMTJ1MzIwLT5kZXY7Ci0KIAlyZXQgPSBkcm1tX21vZGVfY29uZmlnX2luaXQoZGV2
KTsKIAlpZiAocmV0KQotCQlyZXR1cm4gcmV0OworCQlnb3RvIGVycl9wdXRfZGV2aWNlOwogCiAJ
ZGV2LT5tb2RlX2NvbmZpZy5taW5fd2lkdGggPSBHTTEyVTMyMF9VU0VSX1dJRFRIOwogCWRldi0+
bW9kZV9jb25maWcubWF4X3dpZHRoID0gR00xMlUzMjBfVVNFUl9XSURUSDsKQEAgLTY1NiwxNSAr
Njc3LDE1IEBAIHN0YXRpYyBpbnQgZ20xMnUzMjBfdXNiX3Byb2JlKHN0cnVjdCB1c2JfaW50ZXJm
YWNlICppbnRlcmZhY2UsCiAKIAlyZXQgPSBnbTEydTMyMF91c2JfYWxsb2MoZ20xMnUzMjApOwog
CWlmIChyZXQpCi0JCXJldHVybiByZXQ7CisJCWdvdG8gZXJyX3B1dF9kZXZpY2U7CiAKIAlyZXQg
PSBnbTEydTMyMF9zZXRfZWNvbW9kZShnbTEydTMyMCk7CiAJaWYgKHJldCkKLQkJcmV0dXJuIHJl
dDsKKwkJZ290byBlcnJfcHV0X2RldmljZTsKIAogCXJldCA9IGdtMTJ1MzIwX2Nvbm5faW5pdChn
bTEydTMyMCk7CiAJaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKKwkJZ290byBlcnJfcHV0X2Rldmlj
ZTsKIAogCXJldCA9IGRybV9zaW1wbGVfZGlzcGxheV9waXBlX2luaXQoJmdtMTJ1MzIwLT5kZXYs
CiAJCQkJCSAgICZnbTEydTMyMC0+cGlwZSwKQEAgLTY3NCwyNCArNjk1LDMxIEBAIHN0YXRpYyBp
bnQgZ20xMnUzMjBfdXNiX3Byb2JlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UsCiAJ
CQkJCSAgIGdtMTJ1MzIwX3BpcGVfbW9kaWZpZXJzLAogCQkJCQkgICAmZ20xMnUzMjAtPmNvbm4p
OwogCWlmIChyZXQpCi0JCXJldHVybiByZXQ7CisJCWdvdG8gZXJyX3B1dF9kZXZpY2U7CiAKIAlk
cm1fbW9kZV9jb25maWdfcmVzZXQoZGV2KTsKIAogCXVzYl9zZXRfaW50ZmRhdGEoaW50ZXJmYWNl
LCBkZXYpOwogCXJldCA9IGRybV9kZXZfcmVnaXN0ZXIoZGV2LCAwKTsKIAlpZiAocmV0KQotCQly
ZXR1cm4gcmV0OworCQlnb3RvIGVycl9wdXRfZGV2aWNlOwogCiAJZHJtX2ZiZGV2X2dlbmVyaWNf
c2V0dXAoZGV2LCAwKTsKIAogCXJldHVybiAwOworCitlcnJfcHV0X2RldmljZToKKwlwdXRfZGV2
aWNlKGdtMTJ1MzIwLT5kbWFkZXYpOworCXJldHVybiByZXQ7CiB9CiAKIHN0YXRpYyB2b2lkIGdt
MTJ1MzIwX3VzYl9kaXNjb25uZWN0KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UpCiB7
CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHVzYl9nZXRfaW50ZmRhdGEoaW50ZXJmYWNlKTsK
KwlzdHJ1Y3QgZ20xMnUzMjBfZGV2aWNlICpnbTEydTMyMCA9IHRvX2dtMTJ1MzIwKGRldik7CiAK
KwlwdXRfZGV2aWNlKGdtMTJ1MzIwLT5kbWFkZXYpOworCWdtMTJ1MzIwLT5kbWFkZXYgPSBOVUxM
OwogCWRybV9kZXZfdW5wbHVnKGRldik7CiAJZHJtX2F0b21pY19oZWxwZXJfc2h1dGRvd24oZGV2
KTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jIGIvZHJpdmVy
cy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMKaW5kZXggOTI2OTA5MjY5N2Q4Li41NzAzMjc3YzZmNTIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS91ZGwvdWRsX2Rydi5jCkBAIC0zMiw2ICszMiwyMiBAQCBzdGF0aWMgaW50IHVkbF91
c2JfcmVzdW1lKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UpCiAJcmV0dXJuIGRybV9t
b2RlX2NvbmZpZ19oZWxwZXJfcmVzdW1lKGRldik7CiB9CiAKKy8qCisgKiBGSVhNRTogRG1hLWJ1
ZiBzaGFyaW5nIHJlcXVpcmVzIERNQSBzdXBwb3J0IGJ5IHRoZSBpbXBvcnRpbmcgZGV2aWNlLgor
ICogICAgICAgIFRoaXMgZnVuY3Rpb24gaXMgYSB3b3JrYXJvdW5kIHRvIG1ha2UgVVNCIGRldmlj
ZXMgd29yayBhcyB3ZWxsLgorICogICAgICAgIFNlZSB0b2RvLnJzdCBmb3IgaG93IHRvIGZpeCB0
aGUgaXNzdWUgaW4gdGhlIGRtYS1idWYgZnJhbWV3b3JrLgorICovCitzdGF0aWMgc3RydWN0IGRy
bV9nZW1fb2JqZWN0ICp1ZGxfZHJpdmVyX2dlbV9wcmltZV9pbXBvcnQoc3RydWN0IGRybV9kZXZp
Y2UgKmRldiwKKwkJCQkJCQkgIHN0cnVjdCBkbWFfYnVmICpkbWFfYnVmKQoreworCXN0cnVjdCB1
ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwoZGV2KTsKKworCWlmICghdWRsLT5kbWFkZXYpCisJCXJl
dHVybiBFUlJfUFRSKC1FTk9ERVYpOworCisJcmV0dXJuIGRybV9nZW1fcHJpbWVfaW1wb3J0X2Rl
dihkZXYsIGRtYV9idWYsIHVkbC0+ZG1hZGV2KTsKK30KKwogREVGSU5FX0RSTV9HRU1fRk9QUyh1
ZGxfZHJpdmVyX2ZvcHMpOwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVy
ID0gewpAQCAtNDAsNiArNTYsNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9kcml2ZXIgZHJp
dmVyID0gewogCS8qIEdFTSBob29rcyAqLwogCS5mb3BzID0gJnVkbF9kcml2ZXJfZm9wcywKIAlE
Uk1fR0VNX1NITUVNX0RSSVZFUl9PUFMsCisJLmdlbV9wcmltZV9pbXBvcnQgPSB1ZGxfZHJpdmVy
X2dlbV9wcmltZV9pbXBvcnQsCiAKIAkubmFtZSA9IERSSVZFUl9OQU1FLAogCS5kZXNjID0gRFJJ
VkVSX0RFU0MsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaCBiL2Ry
aXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5oCmluZGV4IDg3NWU3MzU1MWFlOS4uY2MxNmExMzMx
NmU0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaApAQCAtNTAsNiArNTAsNyBAQCBzdHJ1Y3QgdXJiX2xp
c3Qgewogc3RydWN0IHVkbF9kZXZpY2UgewogCXN0cnVjdCBkcm1fZGV2aWNlIGRybTsKIAlzdHJ1
Y3QgZGV2aWNlICpkZXY7CisJc3RydWN0IGRldmljZSAqZG1hZGV2OwogCiAJc3RydWN0IGRybV9z
aW1wbGVfZGlzcGxheV9waXBlIGRpc3BsYXlfcGlwZTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL3VkbC91ZGxfbWFpbi5jIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jCmlu
ZGV4IDBlMmEzNzZjYjA3NS4uODUzZjE0NzAzNmY2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vdWRsL3VkbF9tYWluLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jCkBA
IC0zMTUsNiArMzE1LDEwIEBAIGludCB1ZGxfaW5pdChzdHJ1Y3QgdWRsX2RldmljZSAqdWRsKQog
CiAJRFJNX0RFQlVHKCJcbiIpOwogCisJdWRsLT5kbWFkZXYgPSB1c2JfaW50Zl9nZXRfZG1hX2Rl
dmljZSh0b191c2JfaW50ZXJmYWNlKGRldi0+ZGV2KSk7CisJaWYgKCF1ZGwtPmRtYWRldikKKwkJ
ZHJtX3dhcm4oZGV2LCAiYnVmZmVyIHNoYXJpbmcgbm90IHN1cHBvcnRlZCIpOyAvKiBub3QgYW4g
ZXJyb3IgKi8KKwogCW11dGV4X2luaXQoJnVkbC0+Z2VtX2xvY2spOwogCiAJaWYgKCF1ZGxfcGFy
c2VfdmVuZG9yX2Rlc2NyaXB0b3IodWRsKSkgewpAQCAtMzQzLDEyICszNDcsMTggQEAgaW50IHVk
bF9pbml0KHN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwpCiBlcnI6CiAJaWYgKHVkbC0+dXJicy5jb3Vu
dCkKIAkJdWRsX2ZyZWVfdXJiX2xpc3QoZGV2KTsKKwlwdXRfZGV2aWNlKHVkbC0+ZG1hZGV2KTsK
IAlEUk1fRVJST1IoIiVkXG4iLCByZXQpOwogCXJldHVybiByZXQ7CiB9CiAKIGludCB1ZGxfZHJv
cF91c2Ioc3RydWN0IGRybV9kZXZpY2UgKmRldikKIHsKKwlzdHJ1Y3QgdWRsX2RldmljZSAqdWRs
ID0gdG9fdWRsKGRldik7CisKIAl1ZGxfZnJlZV91cmJfbGlzdChkZXYpOworCXB1dF9kZXZpY2Uo
dWRsLT5kbWFkZXYpOworCXVkbC0+ZG1hZGV2ID0gTlVMTDsKKwogCXJldHVybiAwOwogfQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy91c2IvY29yZS91c2IuYyBiL2RyaXZlcnMvdXNiL2NvcmUvdXNiLmMK
aW5kZXggOGYwN2IwNTE2MTAwLi5hNTY2YmI0OTRlMjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdXNi
L2NvcmUvdXNiLmMKKysrIGIvZHJpdmVycy91c2IvY29yZS91c2IuYwpAQCAtNzQ4LDYgKzc0OCwz
OCBAQCB2b2lkIHVzYl9wdXRfaW50ZihzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZikKIH0KIEVY
UE9SVF9TWU1CT0xfR1BMKHVzYl9wdXRfaW50Zik7CiAKKy8qKgorICogdXNiX2ludGZfZ2V0X2Rt
YV9kZXZpY2UgLSBhY3F1aXJlIGEgcmVmZXJlbmNlIG9uIHRoZSB1c2IgaW50ZXJmYWNlJ3MgRE1B
IGVuZHBvaW50CisgKiBAaW50ZjogdGhlIHVzYiBpbnRlcmZhY2UKKyAqCisgKiBXaGlsZSBhIFVT
QiBkZXZpY2UgY2Fubm90IHBlcmZvcm0gRE1BIG9wZXJhdGlvbnMgYnkgaXRzZWxmLCBtYW55IFVT
QgorICogY29udHJvbGxlcnMgY2FuLiBBIGNhbGwgdG8gdXNiX2ludGZfZ2V0X2RtYV9kZXZpY2Uo
KSByZXR1cm5zIHRoZSBETUEgZW5kcG9pbnQKKyAqIGZvciB0aGUgZ2l2ZW4gVVNCIGludGVyZmFj
ZSwgaWYgYW55LiBUaGUgcmV0dXJuZWQgZGV2aWNlIHN0cnVjdHVyZSBtdXN0IGJlCisgKiByZWxl
YXNlZCB3aXRoIHB1dF9kZXZpY2UoKS4KKyAqCisgKiBTZWUgYWxzbyB1c2JfZ2V0X2RtYV9kZXZp
Y2UoKS4KKyAqCisgKiBSZXR1cm5zOiBBIHJlZmVyZW5jZSB0byB0aGUgdXNiIGludGVyZmFjZSdz
IERNQSBlbmRwb2ludDsgb3IgTlVMTCBpZiBub25lCisgKiAgICAgICAgICBleGlzdHMuCisgKi8K
K3N0cnVjdCBkZXZpY2UgKnVzYl9pbnRmX2dldF9kbWFfZGV2aWNlKHN0cnVjdCB1c2JfaW50ZXJm
YWNlICppbnRmKQoreworCXN0cnVjdCB1c2JfZGV2aWNlICp1ZGV2ID0gaW50ZXJmYWNlX3RvX3Vz
YmRldihpbnRmKTsKKwlzdHJ1Y3QgZGV2aWNlICpkbWFkZXY7CisKKwlpZiAoIXVkZXYtPmJ1cykK
KwkJcmV0dXJuIE5VTEw7CisKKwlkbWFkZXYgPSBnZXRfZGV2aWNlKHVkZXYtPmJ1cy0+c3lzZGV2
KTsKKwlpZiAoIWRtYWRldiB8fCAhZG1hZGV2LT5kbWFfbWFzaykgeworCQlwdXRfZGV2aWNlKGRt
YWRldik7CisJCXJldHVybiBOVUxMOworCX0KKworCXJldHVybiBkbWFkZXY7Cit9CitFWFBPUlRf
U1lNQk9MX0dQTCh1c2JfaW50Zl9nZXRfZG1hX2RldmljZSk7CisKIC8qCQkJVVNCIGRldmljZSBs
b2NraW5nCiAgKgogICogVVNCIGRldmljZXMgYW5kIGludGVyZmFjZXMgYXJlIGxvY2tlZCB1c2lu
ZyB0aGUgc2VtYXBob3JlIGluIHRoZWlyCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3VzYi5o
IGIvaW5jbHVkZS9saW51eC91c2IuaAppbmRleCA3ZDcyYzRlMDcxM2MuLmQ2YTQxODQxYjkzZSAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC91c2IuaAorKysgYi9pbmNsdWRlL2xpbnV4L3VzYi5o
CkBAIC03NDYsNiArNzQ2LDggQEAgZXh0ZXJuIGludCB1c2JfbG9ja19kZXZpY2VfZm9yX3Jlc2V0
KHN0cnVjdCB1c2JfZGV2aWNlICp1ZGV2LAogZXh0ZXJuIGludCB1c2JfcmVzZXRfZGV2aWNlKHN0
cnVjdCB1c2JfZGV2aWNlICpkZXYpOwogZXh0ZXJuIHZvaWQgdXNiX3F1ZXVlX3Jlc2V0X2Rldmlj
ZShzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqZGV2KTsKIAorZXh0ZXJuIHN0cnVjdCBkZXZpY2UgKnVz
Yl9pbnRmX2dldF9kbWFfZGV2aWNlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmKTsKKwogI2lm
ZGVmIENPTkZJR19BQ1BJCiBleHRlcm4gaW50IHVzYl9hY3BpX3NldF9wb3dlcl9zdGF0ZShzdHJ1
Y3QgdXNiX2RldmljZSAqaGRldiwgaW50IGluZGV4LAogCWJvb2wgZW5hYmxlKTsKCmJhc2UtY29t
bWl0OiBiODAxODJiOWJmZmI1MTQ2MGU0YTJhZDdkOTY3MzdlY2Q0OTEyNmRjCnByZXJlcXVpc2l0
ZS1wYXRjaC1pZDogYzJiMmYwOGYwZWNjYzlmNWRmMGMwZGE0OWZhMWQzNjI2N2RlYjExZAotLSAK
Mi4zMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpk
cmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
