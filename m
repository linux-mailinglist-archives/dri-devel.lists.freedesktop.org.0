Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 703D8B1AD1
	for <lists+dri-devel@lfdr.de>; Fri, 13 Sep 2019 11:32:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2FBC06EEF0;
	Fri, 13 Sep 2019 09:32:40 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from pio-pvt-msa1.bahnhof.se (pio-pvt-msa1.bahnhof.se [79.136.2.40])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 323E26EEEC
 for <dri-devel@lists.freedesktop.org>; Fri, 13 Sep 2019 09:32:34 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by pio-pvt-msa1.bahnhof.se (Postfix) with ESMTP id 4B6C63F869;
 Fri, 13 Sep 2019 11:32:32 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from pio-pvt-msa1.bahnhof.se ([127.0.0.1])
 by localhost (pio-pvt-msa1.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id Q890zPw1_FT7; Fri, 13 Sep 2019 11:32:31 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by pio-pvt-msa1.bahnhof.se (Postfix) with ESMTPA id 656523FA2C;
 Fri, 13 Sep 2019 11:32:29 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 601DC360327;
 Fri, 13 Sep 2019 11:32:28 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org
Subject: [RFC PATCH 6/7] drm/vmwgfx: Implement an infrastructure for
 read-coherent resources
Date: Fri, 13 Sep 2019 11:32:12 +0200
Message-Id: <20190913093213.27254-7-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190913093213.27254-1-thomas_os@shipmail.org>
References: <20190913093213.27254-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1568367148; bh=84AFIt/JY1gugFWWeqhnV8DwzcLd3ns5xBlXXh35zwg=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=iKueg4dO5Y6mMM227tmPO42/NfbIlg3RKL3I5mnSDLH7h+EVv7/YGtC+KAXFopYa/
 HvXoT3XmAZZBxsy6S8ek7P43XTepVMDhdfS3F+z/JmMMsagk8BqCfClnDXO8ciE+sh
 PyPLGbezXFS7MqbI57zQrJ7kcl/KAEYPUKFbPdSw=
X-Mailman-Original-Authentication-Results: pio-pvt-msa1.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b="iKueg4dO";
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 Matthew Wilcox <willy@infradead.org>, Christoph Hellwig <hch@infradead.org>,
 Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>,
 Deepak Rawat <drawat@vmware.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKU2ltaWxhciB0
byB3cml0ZS1jb2hlcmVudCByZXNvdXJjZXMsIG1ha2Ugc3VyZSB0aGF0IGZyb20gdGhlIHVzZXIt
c3BhY2UKcG9pbnQgb2YgdmlldywgR1BVIHJlbmRlcmVkIGNvbnRlbnRzIGlzIGF1dG9tYXRpY2Fs
bHkgYXZhaWxhYmxlIGZvcgpyZWFkaW5nIGJ5IHRoZSBDUFUuCgpDYzogQW5kcmV3IE1vcnRvbiA8
YWtwbUBsaW51eC1mb3VuZGF0aW9uLm9yZz4KQ2M6IE1hdHRoZXcgV2lsY294IDx3aWxseUBpbmZy
YWRlYWQub3JnPgpDYzogV2lsbCBEZWFjb24gPHdpbGwuZGVhY29uQGFybS5jb20+CkNjOiBQZXRl
ciBaaWpsc3RyYSA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiBSaWsgdmFuIFJpZWwgPHJpZWxA
c3VycmllbC5jb20+CkNjOiBNaW5jaGFuIEtpbSA8bWluY2hhbkBrZXJuZWwub3JnPgpDYzogTWlj
aGFsIEhvY2tvIDxtaG9ja29Ac3VzZS5jb20+CkNjOiBIdWFuZyBZaW5nIDx5aW5nLmh1YW5nQGlu
dGVsLmNvbT4KQ2M6IFNvdXB0aWNrIEpvYXJkZXIgPGpyZHIubGludXhAZ21haWwuY29tPgpDYzog
IkrDqXLDtG1lIEdsaXNzZSIgPGpnbGlzc2VAcmVkaGF0LmNvbT4KQ2M6ICJDaHJpc3RpYW4gS8O2
bmlnIiA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgpDYzogQ2hyaXN0b3BoIEhlbGx3aWcgPGhj
aEBpbmZyYWRlYWQub3JnPgpTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgSGVsbHN0cm9tIDx0aGVsbHN0
cm9tQHZtd2FyZS5jb20+ClJldmlld2VkLWJ5OiBEZWVwYWsgUmF3YXQgPGRyYXdhdEB2bXdhcmUu
Y29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2Rydi5oICAgICAgICAgICB8
ICAgNyArLQogZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcGFnZV9kaXJ0eS5jICAgIHwg
IDc1ICsrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNl
LmMgICAgICB8IDEwMyArKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS92bXdnZngv
dm13Z2Z4X3Jlc291cmNlX3ByaXYuaCB8ICAgMiArCiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Zt
d2dmeF92YWxpZGF0aW9uLmMgICAgfCAgIDMgKy0KIDUgZmlsZXMgY2hhbmdlZCwgMTc5IGluc2Vy
dGlvbnMoKyksIDExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92
bXdnZngvdm13Z2Z4X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2LmgK
aW5kZXggZjhjYjllZDkwODYyLi4zZDY4Yjc1YzdhM2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS92bXdnZngvdm13Z2Z4X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13
Z2Z4X2Rydi5oCkBAIC02ODMsNyArNjgzLDggQEAgZXh0ZXJuIHZvaWQgdm13X3Jlc291cmNlX3Vu
cmVmZXJlbmNlKHN0cnVjdCB2bXdfcmVzb3VyY2UgKipwX3Jlcyk7CiBleHRlcm4gc3RydWN0IHZt
d19yZXNvdXJjZSAqdm13X3Jlc291cmNlX3JlZmVyZW5jZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpy
ZXMpOwogZXh0ZXJuIHN0cnVjdCB2bXdfcmVzb3VyY2UgKgogdm13X3Jlc291cmNlX3JlZmVyZW5j
ZV91bmxlc3NfZG9vbWVkKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7Ci1leHRlcm4gaW50IHZt
d19yZXNvdXJjZV92YWxpZGF0ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsIGJvb2wgaW50cik7
CitleHRlcm4gaW50IHZtd19yZXNvdXJjZV92YWxpZGF0ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpy
ZXMsIGJvb2wgaW50ciwKKwkJCQkgYm9vbCBkaXJ0eWluZyk7CiBleHRlcm4gaW50IHZtd19yZXNv
dXJjZV9yZXNlcnZlKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcywgYm9vbCBpbnRlcnJ1cHRpYmxl
LAogCQkJCWJvb2wgbm9fYmFja3VwKTsKIGV4dGVybiBib29sIHZtd19yZXNvdXJjZV9uZWVkc19i
YWNrdXAoY29uc3Qgc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKQEAgLTcyNyw2ICs3MjgsOCBA
QCB2b2lkIHZtd19yZXNvdXJjZV9tb2JfYXR0YWNoKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7
CiB2b2lkIHZtd19yZXNvdXJjZV9tb2JfZGV0YWNoKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7
CiB2b2lkIHZtd19yZXNvdXJjZV9kaXJ0eV91cGRhdGUoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVz
LCBwZ29mZl90IHN0YXJ0LAogCQkJICAgICAgIHBnb2ZmX3QgZW5kKTsKK2ludCB2bXdfcmVzb3Vy
Y2VzX2NsZWFuKHN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvLCBwZ29mZl90IHN0YXJ0LAor
CQkJcGdvZmZfdCBlbmQsIHBnb2ZmX3QgKm51bV9wcmVmYXVsdCk7CiAKIC8qKgogICogdm13X3Jl
c291cmNlX21vYl9hdHRhY2hlZCAtIFdoZXRoZXIgYSByZXNvdXJjZSBjdXJyZW50bHkgaGFzIGEg
bW9iIGF0dGFjaGVkCkBAIC0xNDIwLDYgKzE0MjMsOCBAQCBpbnQgdm13X2JvX2RpcnR5X2FkZChz
dHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7CiB2b2lkIHZtd19ib19kaXJ0eV90cmFuc2Zl
cl90b19yZXMoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKIHZvaWQgdm13X2JvX2RpcnR5X2Ns
ZWFyX3JlcyhzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMpOwogdm9pZCB2bXdfYm9fZGlydHlfcmVs
ZWFzZShzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7Cit2b2lkIHZtd19ib19kaXJ0eV91
bm1hcChzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibywKKwkJCXBnb2ZmX3Qgc3RhcnQsIHBn
b2ZmX3QgZW5kKTsKIHZtX2ZhdWx0X3Qgdm13X2JvX3ZtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAq
dm1mKTsKIHZtX2ZhdWx0X3Qgdm13X2JvX3ZtX21rd3JpdGUoc3RydWN0IHZtX2ZhdWx0ICp2bWYp
OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9wYWdlX2RpcnR5
LmMgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9wYWdlX2RpcnR5LmMKaW5kZXggYmUz
MzAyYThlMzA5Li4xOTE0ZDM0YzE4M2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdn
Zngvdm13Z2Z4X3BhZ2VfZGlydHkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dm
eF9wYWdlX2RpcnR5LmMKQEAgLTE1Myw3ICsxNTMsNiBAQCBzdGF0aWMgdm9pZCB2bXdfYm9fZGly
dHlfc2Nhbl9ta3dyaXRlKHN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvKQogCX0KIH0KIAot
CiAvKioKICAqIHZtd19ib19kaXJ0eV9zY2FuIC0gU2NhbiBmb3IgZGlydHkgcGFnZXMgYW5kIGFk
ZCB0aGVtIHRvIHRoZSBkaXJ0eQogICogdHJhY2tpbmcgc3RydWN0dXJlCkBAIC0xNzEsNiArMTcw
LDUxIEBAIHZvaWQgdm13X2JvX2RpcnR5X3NjYW4oc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2
Ym8pCiAJCXZtd19ib19kaXJ0eV9zY2FuX21rd3JpdGUodmJvKTsKIH0KIAorLyoqCisgKiB2bXdf
Ym9fZGlydHlfcHJlX3VubWFwIC0gd3JpdGUtcHJvdGVjdCBhbmQgcGljayB1cCBkaXJ0eSBwYWdl
cyBiZWZvcmUKKyAqIGFuIHVubWFwX21hcHBpbmdfcmFuZ2Ugb3BlcmF0aW9uLgorICogQHZibzog
VGhlIGJ1ZmZlciBvYmplY3QsCisgKiBAc3RhcnQ6IEZpcnN0IHBhZ2Ugb2YgdGhlIHJhbmdlIHdp
dGhpbiB0aGUgYnVmZmVyIG9iamVjdC4KKyAqIEBlbmQ6IExhc3QgcGFnZSBvZiB0aGUgcmFuZ2Ug
d2l0aGluIHRoZSBidWZmZXIgb2JqZWN0ICsgMS4KKyAqCisgKiBJZiB3ZSdyZSB1c2luZyB0aGUg
X1BBR0VUQUJMRSBzY2FuIG1ldGhvZCwgd2UgbWF5IGxlYWsgZGlydHkgcGFnZXMKKyAqIHdoZW4g
Y2FsbGluZyB1bm1hcF9tYXBwaW5nX3JhbmdlKCkuIFRoaXMgZnVuY3Rpb24gbWFrZXMgc3VyZSB3
ZSBwaWNrCisgKiB1cCBhbGwgZGlydHkgcGFnZXMuCisgKi8KK3N0YXRpYyB2b2lkIHZtd19ib19k
aXJ0eV9wcmVfdW5tYXAoc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8sCisJCQkJICAgcGdv
ZmZfdCBzdGFydCwgcGdvZmZfdCBlbmQpCit7CisJc3RydWN0IHZtd19ib19kaXJ0eSAqZGlydHkg
PSB2Ym8tPmRpcnR5OworCXVuc2lnbmVkIGxvbmcgb2Zmc2V0ID0gZHJtX3ZtYV9ub2RlX3N0YXJ0
KCZ2Ym8tPmJhc2UuYmFzZS52bWFfbm9kZSk7CisJc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBp
bmcgPSB2Ym8tPmJhc2UuYmRldi0+ZGV2X21hcHBpbmc7CisKKwlpZiAoZGlydHktPm1ldGhvZCAh
PSBWTVdfQk9fRElSVFlfUEFHRVRBQkxFIHx8IHN0YXJ0ID49IGVuZCkKKwkJcmV0dXJuOworCisJ
YXBwbHlfYXNfd3Jwcm90ZWN0KG1hcHBpbmcsIHN0YXJ0ICsgb2Zmc2V0LCBlbmQgLSBzdGFydCk7
CisJYXBwbHlfYXNfY2xlYW4obWFwcGluZywgc3RhcnQgKyBvZmZzZXQsIGVuZCAtIHN0YXJ0LCBv
ZmZzZXQsCisJCSAgICAgICAmZGlydHktPmJpdG1hcFswXSwgJmRpcnR5LT5zdGFydCwgJmRpcnR5
LT5lbmQpOworfQorCisvKioKKyAqIHZtd19ib19kaXJ0eV91bm1hcCAtIENsZWFyIGFsbCBwdGVz
IHBvaW50aW5nIHRvIGEgcmFuZ2Ugd2l0aGluIGEgYm8KKyAqIEB2Ym86IFRoZSBidWZmZXIgb2Jq
ZWN0LAorICogQHN0YXJ0OiBGaXJzdCBwYWdlIG9mIHRoZSByYW5nZSB3aXRoaW4gdGhlIGJ1ZmZl
ciBvYmplY3QuCisgKiBAZW5kOiBMYXN0IHBhZ2Ugb2YgdGhlIHJhbmdlIHdpdGhpbiB0aGUgYnVm
ZmVyIG9iamVjdCArIDEuCisgKgorICogVGhpcyBpcyBzaW1pbGFyIHRvIHR0bV9ib191bm1hcF92
aXJ0dWFsX2xvY2tlZCgpIGV4Y2VwdCBpdCB0YWtlcyBhIHN1YnJhbmdlLgorICovCit2b2lkIHZt
d19ib19kaXJ0eV91bm1hcChzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibywKKwkJCXBnb2Zm
X3Qgc3RhcnQsIHBnb2ZmX3QgZW5kKQoreworCXVuc2lnbmVkIGxvbmcgb2Zmc2V0ID0gZHJtX3Zt
YV9ub2RlX3N0YXJ0KCZ2Ym8tPmJhc2UuYmFzZS52bWFfbm9kZSk7CisJc3RydWN0IGFkZHJlc3Nf
c3BhY2UgKm1hcHBpbmcgPSB2Ym8tPmJhc2UuYmRldi0+ZGV2X21hcHBpbmc7CisKKwl2bXdfYm9f
ZGlydHlfcHJlX3VubWFwKHZibywgc3RhcnQsIGVuZCk7CisJdW5tYXBfc2hhcmVkX21hcHBpbmdf
cmFuZ2UobWFwcGluZywgKG9mZnNldCArIHN0YXJ0KSA8PCBQQUdFX1NISUZULAorCQkJCSAgIChs
b2ZmX3QpIChlbmQgLSBzdGFydCkgPDwgUEFHRV9TSElGVCk7Cit9CisKIC8qKgogICogdm13X2Jv
X2RpcnR5X2FkZCAtIEFkZCBhIGRpcnR5LXRyYWNraW5nIHVzZXIgdG8gYSBidWZmZXIgb2JqZWN0
CiAgKiBAdmJvOiBUaGUgYnVmZmVyIG9iamVjdApAQCAtMzk3LDIxICs0NDEsNDIgQEAgdm1fZmF1
bHRfdCB2bXdfYm9fdm1fZmF1bHQoc3RydWN0IHZtX2ZhdWx0ICp2bWYpCiAJaWYgKHJldCkKIAkJ
cmV0dXJuIHJldDsKIAorCW51bV9wcmVmYXVsdCA9ICh2bWEtPnZtX2ZsYWdzICYgVk1fUkFORF9S
RUFEKSA/IDEgOgorCQlUVE1fQk9fVk1fTlVNX1BSRUZBVUxUOworCisJaWYgKHZiby0+ZGlydHkp
IHsKKwkJcGdvZmZfdCBhbGxvd2VkX3ByZWZhdWx0OworCQl1bnNpZ25lZCBsb25nIHBhZ2Vfb2Zm
c2V0OworCisJCXBhZ2Vfb2Zmc2V0ID0gdm1mLT5wZ29mZiAtCisJCQlkcm1fdm1hX25vZGVfc3Rh
cnQoJmJvLT5iYXNlLnZtYV9ub2RlKTsKKwkJaWYgKHBhZ2Vfb2Zmc2V0ID49IGJvLT5udW1fcGFn
ZXMgfHwKKwkJICAgIHZtd19yZXNvdXJjZXNfY2xlYW4odmJvLCBwYWdlX29mZnNldCwKKwkJCQkJ
cGFnZV9vZmZzZXQgKyBQQUdFX1NJWkUsCisJCQkJCSZhbGxvd2VkX3ByZWZhdWx0KSkgeworCQkJ
cmV0ID0gVk1fRkFVTFRfU0lHQlVTOworCQkJZ290byBvdXRfdW5sb2NrOworCQl9CisKKwkJbnVt
X3ByZWZhdWx0ID0gbWluKG51bV9wcmVmYXVsdCwgYWxsb3dlZF9wcmVmYXVsdCk7CisJfQorCiAJ
LyoKLQkgKiBUaGlzIHdpbGwgY2F1c2UgbWt3cml0ZSgpIHRvIGJlIGNhbGxlZCBmb3IgZWFjaCBw
dGUgb24KLQkgKiB3cml0ZS1lbmFibGUgdm1hcy4KKwkgKiBJZiB3ZSBkb24ndCB0cmFjayBkaXJ0
eSB1c2luZyB0aGUgTUtXUklURSBtZXRob2QsIG1ha2Ugc3VyZQorCSAqIHN1cmUgdGhlIHBhZ2Ug
cHJvdGVjdGlvbiBpcyB3cml0ZS1lbmFibGVkIHNvIHdlIGRvbid0IGdldAorCSAqIGEgbG90IG9m
IHVubmVjZXNzYXJ5IHdyaXRlIGZhdWx0cy4KIAkgKi8KIAlpZiAodmJvLT5kaXJ0eSAmJiB2Ym8t
PmRpcnR5LT5tZXRob2QgPT0gVk1XX0JPX0RJUlRZX01LV1JJVEUpCiAJCXByb3QgPSB2bWEtPnZt
X3BhZ2VfcHJvdDsKIAllbHNlCiAJCXByb3QgPSB2bV9nZXRfcGFnZV9wcm90KHZtYS0+dm1fZmxh
Z3MpOwogCi0JbnVtX3ByZWZhdWx0ID0gKHZtYS0+dm1fZmxhZ3MgJiBWTV9SQU5EX1JFQUQpID8g
MCA6Ci0JCVRUTV9CT19WTV9OVU1fUFJFRkFVTFQ7CiAJcmV0ID0gdHRtX2JvX3ZtX2ZhdWx0X3Jl
c2VydmVkKHZtZiwgcHJvdCwgbnVtX3ByZWZhdWx0KTsKIAlpZiAocmV0ID09IFZNX0ZBVUxUX1JF
VFJZICYmICEodm1mLT5mbGFncyAmIEZBVUxUX0ZMQUdfUkVUUllfTk9XQUlUKSkKIAkJcmV0dXJu
IHJldDsKIAorb3V0X3VubG9jazoKIAlkbWFfcmVzdl91bmxvY2soYm8tPmJhc2UucmVzdik7CisK
IAlyZXR1cm4gcmV0OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdn
ZnhfcmVzb3VyY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMK
aW5kZXggMzI4YWQ0NjA3NmZmLi5jNzZmYWYzMzk3MmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dm
eC92bXdnZnhfcmVzb3VyY2UuYwpAQCAtMzkzLDcgKzM5Myw4IEBAIHN0YXRpYyBpbnQgdm13X3Jl
c291cmNlX2J1Zl9hbGxvYyhzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsCiAgKiBzaG91bGQgYmUg
cmV0cmllZCBvbmNlIHJlc291cmNlcyBoYXZlIGJlZW4gZnJlZWQgdXAuCiAgKi8KIHN0YXRpYyBp
bnQgdm13X3Jlc291cmNlX2RvX3ZhbGlkYXRlKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcywKLQkJ
CQkgICAgc3RydWN0IHR0bV92YWxpZGF0ZV9idWZmZXIgKnZhbF9idWYpCisJCQkJICAgIHN0cnVj
dCB0dG1fdmFsaWRhdGVfYnVmZmVyICp2YWxfYnVmLAorCQkJCSAgICBib29sIGRpcnR5aW5nKQog
ewogCWludCByZXQgPSAwOwogCWNvbnN0IHN0cnVjdCB2bXdfcmVzX2Z1bmMgKmZ1bmMgPSByZXMt
PmZ1bmM7CkBAIC00MzUsNiArNDM2LDE1IEBAIHN0YXRpYyBpbnQgdm13X3Jlc291cmNlX2RvX3Zh
bGlkYXRlKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcywKIAkgKiB0aGUgcmVzb3VyY2UuCiAJICov
CiAJaWYgKHJlcy0+ZGlydHkpIHsKKwkJaWYgKGRpcnR5aW5nICYmICFyZXMtPnJlc19kaXJ0eSkg
eworCQkJcGdvZmZfdCBzdGFydCA9IHJlcy0+YmFja3VwX29mZnNldCA+PiBQQUdFX1NISUZUOwor
CQkJcGdvZmZfdCBlbmQgPSBfX0tFUk5FTF9ESVZfUk9VTkRfVVAKKwkJCQkocmVzLT5iYWNrdXBf
b2Zmc2V0ICsgcmVzLT5iYWNrdXBfc2l6ZSwKKwkJCQkgUEFHRV9TSVpFKTsKKworCQkJdm13X2Jv
X2RpcnR5X3VubWFwKHJlcy0+YmFja3VwLCBzdGFydCwgZW5kKTsKKwkJfQorCiAJCXZtd19ib19k
aXJ0eV90cmFuc2Zlcl90b19yZXMocmVzKTsKIAkJcmV0dXJuIGZ1bmMtPmRpcnR5X3N5bmMocmVz
KTsKIAl9CkBAIC02NzksNiArNjg5LDcgQEAgc3RhdGljIGludCB2bXdfcmVzb3VyY2VfZG9fZXZp
Y3Qoc3RydWN0IHd3X2FjcXVpcmVfY3R4ICp0aWNrZXQsCiAgKiAgICAgICAgICAgICAgICAgICAg
ICAgICB0byB0aGUgZGV2aWNlLgogICogQHJlczogVGhlIHJlc291cmNlIHRvIG1ha2UgdmlzaWJs
ZSB0byB0aGUgZGV2aWNlLgogICogQGludHI6IFBlcmZvcm0gd2FpdHMgaW50ZXJydXB0aWJsZSBp
ZiBwb3NzaWJsZS4KKyAqIEBkaXJ0eWluZzogUGVuZGluZyBHUFUgb3BlcmF0aW9uIHdpbGwgZGly
dHkgdGhlIHJlc291cmNlCiAgKgogICogT24gc3VjY2VzZnVsIHJldHVybiwgYW55IGJhY2t1cCBE
TUEgYnVmZmVyIHBvaW50ZWQgdG8gYnkgQHJlcy0+YmFja3VwIHdpbGwKICAqIGJlIHJlc2VydmVk
IGFuZCB2YWxpZGF0ZWQuCkBAIC02ODgsNyArNjk5LDggQEAgc3RhdGljIGludCB2bXdfcmVzb3Vy
Y2VfZG9fZXZpY3Qoc3RydWN0IHd3X2FjcXVpcmVfY3R4ICp0aWNrZXQsCiAgKiBSZXR1cm46IFpl
cm8gb24gc3VjY2VzcywgLUVSRVNUQVJUU1lTIGlmIGludGVycnVwdGVkLCBuZWdhdGl2ZSBlcnJv
ciBjb2RlCiAgKiBvbiBmYWlsdXJlLgogICovCi1pbnQgdm13X3Jlc291cmNlX3ZhbGlkYXRlKHN0
cnVjdCB2bXdfcmVzb3VyY2UgKnJlcywgYm9vbCBpbnRyKQoraW50IHZtd19yZXNvdXJjZV92YWxp
ZGF0ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsIGJvb2wgaW50ciwKKwkJCSAgYm9vbCBkaXJ0
eWluZykKIHsKIAlpbnQgcmV0OwogCXN0cnVjdCB2bXdfcmVzb3VyY2UgKmV2aWN0X3JlczsKQEAg
LTcwNSw3ICs3MTcsNyBAQCBpbnQgdm13X3Jlc291cmNlX3ZhbGlkYXRlKHN0cnVjdCB2bXdfcmVz
b3VyY2UgKnJlcywgYm9vbCBpbnRyKQogCWlmIChyZXMtPmJhY2t1cCkKIAkJdmFsX2J1Zi5ibyA9
ICZyZXMtPmJhY2t1cC0+YmFzZTsKIAlkbyB7Ci0JCXJldCA9IHZtd19yZXNvdXJjZV9kb192YWxp
ZGF0ZShyZXMsICZ2YWxfYnVmKTsKKwkJcmV0ID0gdm13X3Jlc291cmNlX2RvX3ZhbGlkYXRlKHJl
cywgJnZhbF9idWYsIGRpcnR5aW5nKTsKIAkJaWYgKGxpa2VseShyZXQgIT0gLUVCVVNZKSkKIAkJ
CWJyZWFrOwogCkBAIC0xMDA1LDcgKzEwMTcsNyBAQCBpbnQgdm13X3Jlc291cmNlX3BpbihzdHJ1
Y3Qgdm13X3Jlc291cmNlICpyZXMsIGJvb2wgaW50ZXJydXB0aWJsZSkKIAkJCS8qIERvIHdlIHJl
YWxseSBuZWVkIHRvIHBpbiB0aGUgTU9CIGFzIHdlbGw/ICovCiAJCQl2bXdfYm9fcGluX3Jlc2Vy
dmVkKHZibywgdHJ1ZSk7CiAJCX0KLQkJcmV0ID0gdm13X3Jlc291cmNlX3ZhbGlkYXRlKHJlcywg
aW50ZXJydXB0aWJsZSk7CisJCXJldCA9IHZtd19yZXNvdXJjZV92YWxpZGF0ZShyZXMsIGludGVy
cnVwdGlibGUsIHRydWUpOwogCQlpZiAodmJvKQogCQkJdHRtX2JvX3VucmVzZXJ2ZSgmdmJvLT5i
YXNlKTsKIAkJaWYgKHJldCkKQEAgLTEwODAsMyArMTA5Miw4NiBAQCB2b2lkIHZtd19yZXNvdXJj
ZV9kaXJ0eV91cGRhdGUoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzLCBwZ29mZl90IHN0YXJ0LAog
CQlyZXMtPmZ1bmMtPmRpcnR5X3JhbmdlX2FkZChyZXMsIHN0YXJ0IDw8IFBBR0VfU0hJRlQsCiAJ
CQkJCSAgIGVuZCA8PCBQQUdFX1NISUZUKTsKIH0KKworLyoqCisgKiB2bXdfcmVzb3VyY2VzX2Ns
ZWFuIC0gQ2xlYW4gcmVzb3VyY2VzIGludGVyc2VjdGluZyBhIG1vYiByYW5nZQorICogQHZibzog
VGhlIG1vYiBidWZmZXIgb2JqZWN0CisgKiBAc3RhcnQ6IFRoZSBtb2IgcGFnZSBvZmZzZXQgc3Rh
cnRpbmcgdGhlIHJhbmdlCisgKiBAZW5kOiBUaGUgbW9iIHBhZ2Ugb2Zmc2V0IGVuZGluZyB0aGUg
cmFuZ2UKKyAqIEBudW1fcHJlZmF1bHQ6IFJldHVybnMgaG93IG1hbnkgcGFnZXMgaW5jbHVkaW5n
IHRoZSBmaXJzdCBoYXZlIGJlZW4KKyAqIGNsZWFuZWQgYW5kIGFyZSBvayB0byBwcmVmYXVsdAor
ICovCitpbnQgdm13X3Jlc291cmNlc19jbGVhbihzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZi
bywgcGdvZmZfdCBzdGFydCwKKwkJCXBnb2ZmX3QgZW5kLCBwZ29mZl90ICpudW1fcHJlZmF1bHQp
Cit7CisJc3RydWN0IHJiX25vZGUgKmN1ciA9IHZiby0+cmVzX3RyZWUucmJfbm9kZTsKKwlzdHJ1
Y3Qgdm13X3Jlc291cmNlICpmb3VuZCA9IE5VTEw7CisJdW5zaWduZWQgbG9uZyByZXNfc3RhcnQg
PSBzdGFydCA8PCBQQUdFX1NISUZUOworCXVuc2lnbmVkIGxvbmcgcmVzX2VuZCA9IGVuZCA8PCBQ
QUdFX1NISUZUOworCXVuc2lnbmVkIGxvbmcgbGFzdF9jbGVhbmVkID0gMDsKKworCS8qCisJICog
RmluZCB0aGUgcmVzb3VyY2Ugd2l0aCBsb3dlc3QgYmFja3VwX29mZnNldCB0aGF0IGludGVyc2Vj
dHMgdGhlCisJICogcmFuZ2UuCisJICovCisJd2hpbGUgKGN1cikgeworCQlzdHJ1Y3Qgdm13X3Jl
c291cmNlICpjdXJfcmVzID0KKwkJCWNvbnRhaW5lcl9vZihjdXIsIHN0cnVjdCB2bXdfcmVzb3Vy
Y2UsIG1vYl9ub2RlKTsKKworCQlpZiAoY3VyX3Jlcy0+YmFja3VwX29mZnNldCA+PSByZXNfZW5k
KSB7CisJCQljdXIgPSBjdXItPnJiX2xlZnQ7CisJCX0gZWxzZSBpZiAoY3VyX3Jlcy0+YmFja3Vw
X29mZnNldCArIGN1cl9yZXMtPmJhY2t1cF9zaXplIDw9CisJCQkgICByZXNfc3RhcnQpIHsKKwkJ
CWN1ciA9IGN1ci0+cmJfcmlnaHQ7CisJCX0gZWxzZSB7CisJCQlmb3VuZCA9IGN1cl9yZXM7CisJ
CQljdXIgPSBjdXItPnJiX2xlZnQ7CisJCQkvKiBDb250aW51ZSB0byBsb29rIGZvciByZXNvdXJj
ZXMgd2l0aCBsb3dlciBvZmZzZXRzICovCisJCX0KKwl9CisKKwkvKgorCSAqIEluIG9yZGVyIG9m
IGluY3JlYXNpbmcgYmFja3VwX29mZnNldCwgY2xlYW4gZGlydHkgcmVzb3JjZXMKKwkgKiBpbnRl
cnNlY3RpbmcgdGhlIHJhbmdlLgorCSAqLworCXdoaWxlIChmb3VuZCkgeworCQlpZiAoZm91bmQt
PnJlc19kaXJ0eSkgeworCQkJaW50IHJldDsKKworCQkJaWYgKCFmb3VuZC0+ZnVuYy0+Y2xlYW4p
CisJCQkJcmV0dXJuIC1FSU5WQUw7CisKKwkJCXJldCA9IGZvdW5kLT5mdW5jLT5jbGVhbihmb3Vu
ZCk7CisJCQlpZiAocmV0KQorCQkJCXJldHVybiByZXQ7CisKKwkJCWZvdW5kLT5yZXNfZGlydHkg
PSBmYWxzZTsKKwkJfQorCQlsYXN0X2NsZWFuZWQgPSBmb3VuZC0+YmFja3VwX29mZnNldCArIGZv
dW5kLT5iYWNrdXBfc2l6ZTsKKwkJY3VyID0gcmJfbmV4dCgmZm91bmQtPm1vYl9ub2RlKTsKKwkJ
aWYgKCFjdXIpCisJCQlicmVhazsKKworCQlmb3VuZCA9IGNvbnRhaW5lcl9vZihjdXIsIHN0cnVj
dCB2bXdfcmVzb3VyY2UsIG1vYl9ub2RlKTsKKwkJaWYgKGZvdW5kLT5iYWNrdXBfb2Zmc2V0ID49
IHJlc19lbmQpCisJCQlicmVhazsKKwl9CisKKwkvKgorCSAqIFNldCBudW1iZXIgb2YgcGFnZXMg
YWxsb3dlZCBwcmVmYXVsdGluZyBhbmQgZmVuY2UgdGhlIGJ1ZmZlciBvYmplY3QKKwkgKi8KKwkq
bnVtX3ByZWZhdWx0ID0gMTsKKwlpZiAobGFzdF9jbGVhbmVkID4gcmVzX3N0YXJ0KSB7CisJCXN0
cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8gPSAmdmJvLT5iYXNlOworCisJCSpudW1fcHJlZmF1
bHQgPSBfX0tFUk5FTF9ESVZfUk9VTkRfVVAobGFzdF9jbGVhbmVkIC0gcmVzX3N0YXJ0LAorCQkJ
CQkJICAgICAgUEFHRV9TSVpFKTsKKwkJdm13X2JvX2ZlbmNlX3NpbmdsZShibywgTlVMTCk7CisJ
CWlmIChiby0+bW92aW5nKQorCQkJZG1hX2ZlbmNlX3B1dChiby0+bW92aW5nKTsKKwkJYm8tPm1v
dmluZyA9IGRtYV9mZW5jZV9nZXQKKwkJCShkbWFfcmVzdl9nZXRfZXhjbChiby0+YmFzZS5yZXN2
KSk7CisJfQorCisJcmV0dXJuIDA7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13
Z2Z4L3Ztd2dmeF9yZXNvdXJjZV9wcml2LmggYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dm
eF9yZXNvdXJjZV9wcml2LmgKaW5kZXggYzg1MTQ0Mjg2Y2ZlLi4zYjc0MzhiMmQyODkgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlX3ByaXYuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9yZXNvdXJjZV9wcml2LmgKQEAgLTc3LDYg
Kzc3LDcgQEAgc3RydWN0IHZtd191c2VyX3Jlc291cmNlX2NvbnYgewogICogQGRpcnR5X3N5bmM6
ICAgICAgICBVcGxvYWQgdGhlIGRpcnR5IG1vYiBjb250ZW50cyB0byB0aGUgcmVzb3VyY2UuCiAg
KiBAZGlydHlfYWRkX3JhbmdlOiAgIEFkZCBhIHNlcXVlbnRpYWwgZGlydHkgcmFuZ2UgdG8gdGhl
IHJlc291cmNlCiAgKiAgICAgICAgICAgICAgICAgICAgIGRpcnR5IHRyYWNrZXIuCisgKiBAY2xl
YW46ICAgICAgICAgICAgIENsZWFuIHRoZSByZXNvdXJjZS4KICAqLwogc3RydWN0IHZtd19yZXNf
ZnVuYyB7CiAJZW51bSB2bXdfcmVzX3R5cGUgcmVzX3R5cGU7CkBAIC0xMDEsNiArMTAyLDcgQEAg
c3RydWN0IHZtd19yZXNfZnVuYyB7CiAJaW50ICgqZGlydHlfc3luYykoc3RydWN0IHZtd19yZXNv
dXJjZSAqcmVzKTsKIAl2b2lkICgqZGlydHlfcmFuZ2VfYWRkKShzdHJ1Y3Qgdm13X3Jlc291cmNl
ICpyZXMsIHNpemVfdCBzdGFydCwKIAkJCQkgc2l6ZV90IGVuZCk7CisJaW50ICgqY2xlYW4pKHN0
cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7CiB9OwogCiAvKioKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uYyBiL2RyaXZlcnMvZ3B1L2RybS92bXdn
Zngvdm13Z2Z4X3ZhbGlkYXRpb24uYwppbmRleCA3MTM0OWE3YmFlOTAuLjlhYWY4MDdlZDczYyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uYwpAQCAtNjQxLDcg
KzY0MSw4IEBAIGludCB2bXdfdmFsaWRhdGlvbl9yZXNfdmFsaWRhdGUoc3RydWN0IHZtd192YWxp
ZGF0aW9uX2NvbnRleHQgKmN0eCwgYm9vbCBpbnRyKQogCQlzdHJ1Y3Qgdm13X3Jlc291cmNlICpy
ZXMgPSB2YWwtPnJlczsKIAkJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICpiYWNrdXAgPSByZXMt
PmJhY2t1cDsKIAotCQlyZXQgPSB2bXdfcmVzb3VyY2VfdmFsaWRhdGUocmVzLCBpbnRyKTsKKwkJ
cmV0ID0gdm13X3Jlc291cmNlX3ZhbGlkYXRlKHJlcywgaW50ciwgdmFsLT5kaXJ0eV9zZXQgJiYK
KwkJCQkJICAgIHZhbC0+ZGlydHkpOwogCQlpZiAocmV0KSB7CiAJCQlpZiAocmV0ICE9IC1FUkVT
VEFSVFNZUykKIAkJCQlEUk1fRVJST1IoIkZhaWxlZCB0byB2YWxpZGF0ZSByZXNvdXJjZS5cbiIp
OwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2
ZWw=
