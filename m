Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1BA10173A6
	for <lists+dri-devel@lfdr.de>; Wed,  8 May 2019 10:27:06 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DADF189745;
	Wed,  8 May 2019 08:26:48 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B7EEA8970E
 for <dri-devel@lists.freedesktop.org>; Wed,  8 May 2019 08:26:40 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 449DCAECB;
 Wed,  8 May 2019 08:26:39 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: daniel@ffwll.ch, airlied@linux.ie, kraxel@redhat.com,
 christian.koenig@amd.com, ray.huang@amd.com, hdegoede@redhat.com,
 noralf@tronnes.org, sam@ravnborg.org, z.liuxinliang@hisilicon.com,
 zourongrong@gmail.com, kong.kongxinwei@hisilicon.com,
 puck.chen@hisilicon.com
Subject: [PATCH v5 08/20] drm: Integrate VRAM MM into struct drm_device
Date: Wed,  8 May 2019 10:26:18 +0200
Message-Id: <20190508082630.15116-9-tzimmermann@suse.de>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190508082630.15116-1-tzimmermann@suse.de>
References: <20190508082630.15116-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>, dri-devel@lists.freedesktop.org,
 virtualization@lists.linux-foundation.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlcmUncyBub3cgYSBwb2ludGVyIHRvIHN0cnVjdCBkcm1fdnJhbV9tbSBzdG9yZWQgaW4gc3Ry
dWN0IGRybV9kZXZpY2UuCkRSTSBkcml2ZXJzIHRoYXQgdXNlIFZSQU0gTU0gc2hvdWxkIHVzZSB0
aGlzIGZpZWxkIHRvIHJlZmVyIHRvIHRoZWlyCmluc3RhbmNlIG9mIHRoZSBkYXRhIHN0cnVjdHVy
ZS4gQXBwcm9wcmlhdGUgaGVscGVycyBhcmUgbm93IHByb3ZpZGVkIGFzCndlbGwuCgpBZGRpbmcg
c3RydWN0IGRybV92cmFtX21tIHRvIHN0cnVjdCBkcm1fZGV2aWNlIGZ1cnRoZXIgYXZvaWRzIHdy
YXBwZXJzCmFuZCBib2lsZXJwbGF0ZSBjb2RlIGluIGRyaXZlcnMuIFRoaXMgcGF0Y2ggaW1wbGVt
ZW50cyBkZWZhdWx0IGZ1bmN0aW9ucwpmb3IgY2FsbGJhY2tzIGluIHN0cnVjdCBkcm1fZHJpdmVy
IGFuZCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHRoYXQgdXNlCnRoZSBzdHJ1Y3QgZHJtX3ZyYW1f
bW0gc3RvcmVkIGluIHN0cnVjdCBkcm1fZGV2aWNlLiBEcml2ZXJzIHRoYXQgbmVlZCB0bwpwcm92
aWRlIHRoZWlyIG93biBpbXBsZW1lbnRhdGlvbnMgY2FuIHN0aWxsIGRvIHNvLgoKVGhlIHBhdGNo
IGFsc28gYWRkcyBkb2N1bWVudGF0aW9uIGZvciB0aGUgVlJBTSBoZWxwZXIgbGlicmFyeSBpbiBn
ZW5lcmFsLgoKdjU6CgkqIHNldCAubGxzZWVrIHRvIG5vX2xsc2VlaygpIGZyb20gRFJNX1ZSQU1f
TU1fRklMRV9PUEVSQVRJT05TCnY0OgoJKiBjbGVhbnVwcyBmcm9tIGNoZWNrcGF0Y2gucGwKCSog
ZG9jdW1lbnQgVlJBTSBoZWxwZXIgbGlicmFyeQoKU2lnbmVkLW9mZi1ieTogVGhvbWFzIFppbW1l
cm1hbm4gPHR6aW1tZXJtYW5uQHN1c2UuZGU+Ci0tLQogRG9jdW1lbnRhdGlvbi9ncHUvZHJtLW1t
LnJzdCAgICAgICAgICAgICB8ICA2ICsrCiBkcml2ZXJzL2dwdS9kcm0vZHJtX2dlbV92cmFtX2hl
bHBlci5jICAgIHwgMjggKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9kcm1fdnJhbV9oZWxwZXJf
Y29tbW9uLmMgfCA5MiArKysrKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9k
cm1fdnJhbV9tbV9oZWxwZXIuYyAgICAgfCA4NSArKysrKysrKysrKysrKysrKysrKysrCiBpbmNs
dWRlL2RybS9kcm1fZGV2aWNlLmggICAgICAgICAgICAgICAgIHwgIDQgKysKIGluY2x1ZGUvZHJt
L2RybV9nZW1fdnJhbV9oZWxwZXIuaCAgICAgICAgfCAxOSArKysrLQogaW5jbHVkZS9kcm0vZHJt
X3ZyYW1fbW1faGVscGVyLmggICAgICAgICB8IDMzICsrKysrKysrKwogNyBmaWxlcyBjaGFuZ2Vk
LCAyNjYgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50
YXRpb24vZ3B1L2RybS1tbS5yc3QgYi9Eb2N1bWVudGF0aW9uL2dwdS9kcm0tbW0ucnN0CmluZGV4
IGViYTUwYWZiZGE0Mi4uYzhlYmQ0ZjY2YTZhIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2dw
dS9kcm0tbW0ucnN0CisrKyBiL0RvY3VtZW50YXRpb24vZ3B1L2RybS1tbS5yc3QKQEAgLTM4Miw2
ICszODIsMTIgQEAgR0VNIENNQSBIZWxwZXIgRnVuY3Rpb25zIFJlZmVyZW5jZQogVlJBTSBIZWxw
ZXIgRnVuY3Rpb24gUmVmZXJlbmNlCiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIAor
Li4ga2VybmVsLWRvYzo6IGRyaXZlcnMvZ3B1L2RybS9kcm1fdnJhbV9oZWxwZXJfY29tbW9uLmMK
KyAgIDpkb2M6IG92ZXJ2aWV3CisKKy4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL2RybS9kcm1fZ2Vt
X3ZyYW1faGVscGVyLmgKKyAgIDppbnRlcm5hbDoKKwogR0VNIFZSQU0gSGVscGVyIEZ1bmN0aW9u
cyBSZWZlcmVuY2UKIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX3ZyYW1faGVscGVyLmMgYi9kcml2ZXJzL2dw
dS9kcm0vZHJtX2dlbV92cmFtX2hlbHBlci5jCmluZGV4IGMyMWIxZjkyMGUwYS4uOGYxNDJiODEw
ZWI0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2dlbV92cmFtX2hlbHBlci5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fZ2VtX3ZyYW1faGVscGVyLmMKQEAgLTEsNiArMSw3IEBA
CiAvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgogCiAjaW5jbHVk
ZSA8ZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2RldmljZS5o
PgogI2luY2x1ZGUgPGRybS9kcm1fbW9kZS5oPgogI2luY2x1ZGUgPGRybS9kcm1fcHJpbWUuaD4K
ICNpbmNsdWRlIDxkcm0vZHJtX3ZyYW1fbW1faGVscGVyLmg+CkBAIC01NTUsNiArNTU2LDMzIEBA
IHZvaWQgZHJtX2dlbV92cmFtX2RyaXZlcl9nZW1fZnJlZV9vYmplY3RfdW5sb2NrZWQoc3RydWN0
IGRybV9nZW1fb2JqZWN0ICpnZW0pCiB9CiBFWFBPUlRfU1lNQk9MKGRybV9nZW1fdnJhbV9kcml2
ZXJfZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2VkKTsKIAorLyoqCisgKiBkcm1fZ2VtX3ZyYW1fZHJp
dmVyX2NyZWF0ZV9kdW1iKCkgLSBcCisJSW1wbGVtZW50cyAmc3RydWN0IGRybV9kcml2ZXIuZHVt
Yl9jcmVhdGUKKyAqIEBmaWxlOgkJdGhlIERSTSBmaWxlCisgKiBAZGV2OgkJdGhlIERSTSBkZXZp
Y2UKKyAqIEBhcmdzOgkJdGhlIGFyZ3VtZW50cyBhcyBwcm92aWRlZCB0byBcCisJCQkJJnN0cnVj
dCBkcm1fZHJpdmVyLmR1bWJfY3JlYXRlCisgKgorICogVGhpcyBmdW5jdGlvbiByZXF1aXJlcyB0
aGUgZHJpdmVyIHRvIHVzZSBAZHJtX2RldmljZS52cmFtX21tIGZvciBpdHMKKyAqIGluc3RhbmNl
IG9mIFZSQU0gTU0uCisgKgorICogUmV0dXJuczoKKyAqIDAgb24gc3VjY2Vzcywgb3IKKyAqIGEg
bmVnYXRpdmUgZXJyb3IgY29kZSBvdGhlcndpc2UuCisgKi8KK2ludCBkcm1fZ2VtX3ZyYW1fZHJp
dmVyX2R1bWJfY3JlYXRlKHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKKwkJCQkgICAgc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwKKwkJCQkgICAgc3RydWN0IGRybV9tb2RlX2NyZWF0ZV9kdW1iICphcmdz
KQoreworCWlmIChXQVJOX09OQ0UoIWRldi0+dnJhbV9tbSwgIlZSQU0gTU0gbm90IGluaXRpYWxp
emVkIikpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIGRybV9nZW1fdnJhbV9maWxsX2Ny
ZWF0ZV9kdW1iKGZpbGUsIGRldiwgJmRldi0+dnJhbV9tbS0+YmRldiwgMCwKKwkJCQkJICAgICBm
YWxzZSwgYXJncyk7Cit9CitFWFBPUlRfU1lNQk9MKGRybV9nZW1fdnJhbV9kcml2ZXJfZHVtYl9j
cmVhdGUpOworCiAvKioKICAqIGRybV9nZW1fdnJhbV9kcml2ZXJfZHVtYl9tbWFwX29mZnNldCgp
IC0gXAogCUltcGxlbWVudHMgJnN0cnVjdCBkcm1fZHJpdmVyLmR1bWJfbW1hcF9vZmZzZXQKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fdnJhbV9oZWxwZXJfY29tbW9uLmMgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX3ZyYW1faGVscGVyX2NvbW1vbi5jCmluZGV4IDdjMjVkYWNhMThkMC4u
M2I0N2Y3MDAyMTE1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJtX3ZyYW1faGVscGVy
X2NvbW1vbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fdnJhbV9oZWxwZXJfY29tbW9uLmMK
QEAgLTIsNSArMiw5NyBAQAogCiAjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CiAKKy8qKgorICog
RE9DOiBvdmVydmlldworICoKKyAqIFRoaXMgbGlicmFyeSBwcm92aWRlcyAmc3RydWN0IGRybV9n
ZW1fdnJhbV9vYmplY3QgKEdFTSBWUkFNKSwgYSBHRU0KKyAqIGJ1ZmZlciBvYmplY3QgdGhhdCBp
cyBiYWNrZWQgYnkgdmlkZW8gUkFNLiBJdCBjYW4gYmUgdXNlZCBmb3IKKyAqIGZyYW1lYnVmZmVy
IGRldmljZXMgd2l0aCBkZWRpY2F0ZWQgbWVtb3J5LiBUaGUgdmlkZW8gUkFNIGNhbiBiZQorICog
bWFuYWdlZCB3aXRoICZzdHJ1Y3QgZHJtX3ZyYW1fbW0gKFZSQU0gTU0pLiBCb3RoIGRhdGEgc3Ry
dWN0dXJlcyBhcmUKKyAqIHN1cHBvc2VkIHRvIGJlIHVzZWQgdG9nZXRoZXIsIGJ1dCBjYW4gYWxz
byBiZSB1c2VkIGluZGl2aWR1YWxseS4KKyAqCisgKiBXaXRoIHRoZSBHRU0gaW50ZXJmYWNlIHVz
ZXJzcGFjZSBhcHBsaWNhdGlvbnMgY3JlYXRlLCBtYW5hZ2UgYW5kIGRlc3Ryb3kKKyAqIGdyYXBo
aWNzIGJ1ZmZlcnMsIHN1Y2ggYXMgYW4gb24tc2NyZWVuIGZyYW1lYnVmZmVyLiBHRU0gZG9lcyBu
b3QgcHJvdmlkZQorICogYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlc2UgaW50ZXJmYWNlcy4gSXQn
cyB1cCB0byB0aGUgRFJNIGRyaXZlciB0bworICogcHJvdmlkZSBhbiBpbXBsZW1lbnRhdGlvbiB0
aGF0IHN1aXRzIHRoZSBoYXJkd2FyZS4gSWYgdGhlIGhhcmR3YXJlIGRldmljZQorICogY29udGFp
bnMgZGVkaWNhdGVkIHZpZGVvIG1lbW9yeSwgdGhlIERSTSBkcml2ZXIgY2FuIHVzZSB0aGUgVlJB
TSBoZWxwZXIKKyAqIGxpYnJhcnkuIEVhY2ggYWN0aXZlIGJ1ZmZlciBvYmplY3QgaXMgc3RvcmVk
IGluIHZpZGVvIFJBTS4gQWN0aXZlCisgKiBidWZmZXIgYXJlIHVzZWQgZm9yIGRyYXdpbmcgdGhl
IGN1cnJlbnQgZnJhbWUsIHR5cGljYWxseSBzb21ldGhpbmcgbGlrZQorICogdGhlIGZyYW1lJ3Mg
c2Nhbm91dCBidWZmZXIgb3IgdGhlIGN1cnNvciBpbWFnZS4gSWYgdGhlcmUncyBubyBtb3JlIHNw
YWNlCisgKiBsZWZ0IGluIFZSQU0sIGluYWN0aXZlIEdFTSBvYmplY3RzIGNhbiBiZSBtb3ZlZCB0
byBzeXN0ZW0gbWVtb3J5LgorICoKKyAqIFRoZSBlYXNpZXN0IHdheSB0byB1c2UgdGhlIFZSQU0g
aGVscGVyIGxpYnJhcnkgaXMgdG8gY2FsbAorICogZHJtX3ZyYW1faGVscGVyX2FsbG9jX21tKCku
IFRoZSBmdW5jdGlvbiBhbGxvY2F0ZXMgYW5kIGluaXRpYWxpemVzIGFuCisgKiBpbnN0YW5jZSBv
ZiAmc3RydWN0IGRybV92cmFtX21tIGluICZzdHJ1Y3QgZHJtX2RldmljZS52cmFtX21tIC4gVXNl
CisgKiAmRFJNX0dFTV9WUkFNX0RSSVZFUiB0byBpbml0aWFsaXplICZzdHJ1Y3QgZHJtX2RyaXZl
ciBhbmQKKyAqICZEUk1fVlJBTV9NTV9GSUxFX09QRVJBVElPTlMgdG8gaW5pdGlhbGl6ZSAmc3Ry
dWN0IGZpbGVfb3BlcmF0aW9uczsKKyAqIGFzIGlsbHVzdHJhdGVkIGJlbG93LgorICoKKyAqIC4u
IGNvZGUtYmxvY2s6OiBjCisgKgorICoJc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBmb3BzID17Cisg
KgkJLm93bmVyID0gVEhJU19NT0RVTEUsCisgKgkJRFJNX1ZSQU1fTU1fRklMRV9PUEVSQVRJT04K
KyAqCX07CisgKglzdHJ1Y3QgZHJtX2RyaXZlciBkcnYgPSB7CisgKgkJLmRyaXZlcl9mZWF0dXJl
ID0gRFJNXyAuLi4gLAorICoJCS5mb3BzID0gJmZvcHMsCisgKgkJRFJNX0dFTV9WUkFNX0RSSVZF
UgorICoJfTsKKyAqCisgKglpbnQgaW5pdF9kcm1fZHJpdmVyKCkKKyAqCXsKKyAqCQlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2OworICoJCXVpbnQ2NF90IHZyYW1fYmFzZTsKKyAqCQl1bnNpZ25lZCBs
b25nIHZyYW1fc2l6ZTsKKyAqCQlpbnQgcmV0OworICoKKyAqCQkvLyBzZXR1cCBkZXZpY2UsIHZy
YW0gYmFzZSBhbmQgc2l6ZQorICoJCS8vIC4uLgorICoKKyAqCQlyZXQgPSBkcm1fdnJhbV9oZWxw
ZXJfYWxsb2NfbW0oZGV2LCB2cmFtX2Jhc2UsIHZyYW1fc2l6ZSwKKyAqCQkJCQkgICAgICAgJmRy
bV9nZW1fdnJhbV9tbV9mdW5jcyk7CisgKgkJaWYgKHJldCkKKyAqCQkJcmV0dXJuIHJldDsKKyAq
CQlyZXR1cm4gMDsKKyAqCX0KKyAqCisgKiBUaGlzIGNyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgJnN0
cnVjdCBkcm1fdnJhbV9tbSwgZXhwb3J0cyBEUk0gdXNlcnNwYWNlCisgKiBpbnRlcmZhY2VzIGZv
ciBHRU0gYnVmZmVyIG1hbmFnZW1lbnQgYW5kIGluaXRpYWxpemVzIGZpbGUgb3BlcmF0aW9ucyB0
bworICogYWxsb3cgZm9yIGFjY2Vzc2luZyBjcmVhdGVkIEdFTSBidWZmZXJzLiBXaXRoIHRoaXMg
c2V0dXAsIHRoZSBEUk0gZHJpdmVyCisgKiBtYW5hZ2VzIGFuIGFyZWEgb2YgdmlkZW8gUkFNIHdp
dGggVlJBTSBNTSBhbmQgcHJvdmlkZXMgR0VNIFZSQU0gb2JqZWN0cworICogdG8gdXNlcnNwYWNl
LgorICoKKyAqIFRvIGNsZWFuIHVwIHRoZSBWUkFNIG1lbW9yeSBtYW5hZ2VtZW50LCBjYWxsIGRy
bV92cmFtX2hlbHBlcl9yZWxlYXNlX21tKCkKKyAqIGluIHRoZSBkcml2ZXIncyBjbGVhbi11cCBj
b2RlLgorICoKKyAqIC4uIGNvZGUtYmxvY2s6OiBjCisgKgorICoJdm9pZCBmaW5pX2RybV9kcml2
ZXIoKQorICoJeworICoJCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSAuLi47CisgKgorICoJCWRy
bV92cmFtX2hlbHBlcl9yZWxlYXNlX21tKGRldik7CisgKgl9CisgKgorICogRm9yIGRyYXdpbmcg
b3Igc2Nhbm91dCBvcGVyYXRpb25zLCBidWZmZXIgb2JqZWN0IGhhdmUgdG8gYmUgcGlubmVkIGlu
IHZpZGVvCisgKiBSQU0uIENhbGwgZHJtX2dlbV92cmFtX3BpbigpIHdpdGggJkRSTV9HRU1fVlJB
TV9QTF9GTEFHX1ZSQU0gb3IKKyAqICZEUk1fR0VNX1ZSQU1fUExfRkxBR19TWVNURU0gdG8gcGlu
IGEgYnVmZmVyIG9iamVjdCBpbiB2aWRlbyBSQU0gb3Igc3lzdGVtCisgKiBtZW1vcnkuIENhbGwg
ZHJtX2dlbV92cmFtX3VucGluKCkgdG8gcmVsZWFzZSB0aGUgcGlubmVkIG9iamVjdCBhZnRlcndh
cmRzLgorICogSWYgeW91IGhhdmUgdG8gZXZpY3QgYSBidWZmZXIgb2JqZWN0IGZyb20gdmlkZW8g
UkFNIChlLmcuLCBmb3IgZnJlZWluZyB1cAorICogbWVtb3J5KSwgdW5waW4gdGhlIGJ1ZmZlciBh
bmQgY2FsbCBkcm1fZ2VtX3ZyYW1fcHVzaF90b19zeXN0ZW0oKS4KKyAqCisgKiBBIGJ1ZmZlciBv
YmplY3QgdGhhdCBpcyBwaW5uZWQgaW4gdmlkZW8gUkFNIGhhcyBhIGZpeGVkIGFkZHJlc3Mgd2l0
aGluIHRoYXQKKyAqIG1lbW9yeSByZWdpb24uIENhbGwgZHJtX2dlbV92cmFtX29mZnNldCgpIHRv
IHJldHJpZXZlIHRoaXMgdmFsdWUuIFR5cGljYWxseQorICogaXQncyB1c2VkIHRvIHByb2dyYW0g
dGhlIGhhcmR3YXJlJ3Mgc2Nhbm91dCBlbmdpbmUgZm9yIGZyYW1lYnVmZmVycywgc2V0CisgKiB0
aGUgY3Vyc29yIG92ZXJsYXkncyBpbWFnZSBmb3IgYSBtb3VzZSBjdXJzb3IsIG9yIHVzZSBpdCBh
cyBpbnB1dCB0byB0aGUKKyAqIGhhcmR3YXJlJ3MgZHJhaW5nIGVuZ2luZS4KKyAqCisgKiBUbyBh
Y2Nlc3MgYSBidWZmZXIgb2JqZWN0J3MgbWVtb3J5IGZyb20gdGhlIERSTSBkcml2ZXIsIGNhbGwK
KyAqIGRybV9nZW1fdnJhbV9rbWFwKCkuIEl0IChvcHRpb25hbGx5KSBtYXBzIHRoZSBidWZmZXIg
aW50byBrZXJuZWwgYWRkcmVzcworICogc3BhY2UgYW5kIHJldHVybnMgdGhlIG1lbW9yeSBhZGRy
ZXNzLiBVc2UgZHJtX2dlbV92cmFtX2t1bm1hcCgpIHRvCisgKiByZWxlYXNlIHRoZSBtYXBwaW5n
LgorICovCisKIE1PRFVMRV9ERVNDUklQVElPTigiRFJNIFZSQU0gbWVtb3J5LW1hbmFnZW1lbnQg
aGVscGVycyIpOwogTU9EVUxFX0xJQ0VOU0UoIkdQTCIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2RybV92cmFtX21tX2hlbHBlci5jIGIvZHJpdmVycy9ncHUvZHJtL2RybV92cmFtX21t
X2hlbHBlci5jCmluZGV4IGQxN2M1MTY5YjAxOC4uYzk0YTZkYzVhZGU3IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vZHJtX3ZyYW1fbW1faGVscGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2RybV92cmFtX21tX2hlbHBlci5jCkBAIC0yMDgsMyArMjA4LDg4IEBAIGludCBkcm1fdnJhbV9t
bV9tbWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKIAly
ZXR1cm4gdHRtX2JvX21tYXAoZmlscCwgdm1hLCAmdm1tLT5iZGV2KTsKIH0KIEVYUE9SVF9TWU1C
T0woZHJtX3ZyYW1fbW1fbW1hcCk7CisKKy8qCisgKiBIZWxwZXJzIGZvciBpbnRlZ3JhdGlvbiB3
aXRoIHN0cnVjdCBkcm1fZGV2aWNlCisgKi8KKworLyoqCisgKiBkcm1fdnJhbV9oZWxwZXJfYWxs
b2NfbW0gLSBBbGxvY2F0ZXMgYSBkZXZpY2UncyBpbnN0YW5jZSBvZiBcCisJJnN0cnVjdCBkcm1f
dnJhbV9tbQorICogQGRldjoJdGhlIERSTSBkZXZpY2UKKyAqIEB2cmFtX2Jhc2U6CXRoZSBiYXNl
IGFkZHJlc3Mgb2YgdGhlIHZpZGVvIG1lbW9yeQorICogQHZyYW1fc2l6ZToJdGhlIHNpemUgb2Yg
dGhlIHZpZGVvIG1lbW9yeSBpbiBieXRlcworICogQGZ1bmNzOgljYWxsYmFjayBmdW5jdGlvbnMg
Zm9yIGJ1ZmZlciBvYmplY3RzCisgKgorICogUmV0dXJuczoKKyAqIFRoZSBuZXcgaW5zdGFuY2Ug
b2YgJnN0cnVjdCBkcm1fdnJhbV9tbSBvbiBzdWNjZXNzLCBvcgorICogYW4gRVJSX1BUUigpLWVu
Y29kZWQgZXJybm8gY29kZSBvdGhlcndpc2UuCisgKi8KK3N0cnVjdCBkcm1fdnJhbV9tbSAqZHJt
X3ZyYW1faGVscGVyX2FsbG9jX21tKAorCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHVpbnQ2NF90
IHZyYW1fYmFzZSwgc2l6ZV90IHZyYW1fc2l6ZSwKKwljb25zdCBzdHJ1Y3QgZHJtX3ZyYW1fbW1f
ZnVuY3MgKmZ1bmNzKQoreworCWludCByZXQ7CisKKwlpZiAoV0FSTl9PTihkZXYtPnZyYW1fbW0p
KQorCQlyZXR1cm4gZGV2LT52cmFtX21tOworCisJZGV2LT52cmFtX21tID0ga3phbGxvYyhzaXpl
b2YoKmRldi0+dnJhbV9tbSksIEdGUF9LRVJORUwpOworCWlmICghZGV2LT52cmFtX21tKQorCQly
ZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKworCXJldCA9IGRybV92cmFtX21tX2luaXQoZGV2LT52
cmFtX21tLCBkZXYsIHZyYW1fYmFzZSwgdnJhbV9zaXplLCBmdW5jcyk7CisJaWYgKHJldCkKKwkJ
Z290byBlcnJfa2ZyZWU7CisKKwlyZXR1cm4gZGV2LT52cmFtX21tOworCitlcnJfa2ZyZWU6CisJ
a2ZyZWUoZGV2LT52cmFtX21tKTsKKwlkZXYtPnZyYW1fbW0gPSBOVUxMOworCXJldHVybiBFUlJf
UFRSKHJldCk7Cit9CitFWFBPUlRfU1lNQk9MKGRybV92cmFtX2hlbHBlcl9hbGxvY19tbSk7CisK
Ky8qKgorICogZHJtX3ZyYW1faGVscGVyX3JlbGVhc2VfbW0gLSBSZWxlYXNlcyBhIGRldmljZSdz
IGluc3RhbmNlIG9mIFwKKwkmc3RydWN0IGRybV92cmFtX21tCisgKiBAZGV2Ogl0aGUgRFJNIGRl
dmljZQorICovCit2b2lkIGRybV92cmFtX2hlbHBlcl9yZWxlYXNlX21tKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYpCit7CisJaWYgKCFkZXYtPnZyYW1fbW0pCisJCXJldHVybjsKKworCWRybV92cmFt
X21tX2NsZWFudXAoZGV2LT52cmFtX21tKTsKKwlrZnJlZShkZXYtPnZyYW1fbW0pOworCWRldi0+
dnJhbV9tbSA9IE5VTEw7Cit9CitFWFBPUlRfU1lNQk9MKGRybV92cmFtX2hlbHBlcl9yZWxlYXNl
X21tKTsKKworLyoKKyAqIEhlbHBlcnMgZm9yICZzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zCisgKi8K
KworLyoqCisgKiBkcm1fdnJhbV9tbV9maWxlX29wZXJhdGlvbnNfbW1hcCgpIC0gXAorCUltcGxl
bWVudHMgJnN0cnVjdCBmaWxlX29wZXJhdGlvbnMubW1hcCgpCisgKiBAZmlscDoJdGhlIG1hcHBp
bmcncyBmaWxlIHN0cnVjdHVyZQorICogQHZtYToJdGhlIG1hcHBpbmcncyBtZW1vcnkgYXJlYQor
ICoKKyAqIFJldHVybnM6CisgKiAwIG9uIHN1Y2Nlc3MsIG9yCisgKiBhIG5lZ2F0aXZlIGVycm9y
IGNvZGUgb3RoZXJ3aXNlLgorICovCitpbnQgZHJtX3ZyYW1fbW1fZmlsZV9vcGVyYXRpb25zX21t
YXAoCisJc3RydWN0IGZpbGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQorewor
CXN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2ID0gZmlscC0+cHJpdmF0ZV9kYXRhOworCXN0cnVj
dCBkcm1fZGV2aWNlICpkZXYgPSBmaWxlX3ByaXYtPm1pbm9yLT5kZXY7CisKKwlpZiAoV0FSTl9P
TkNFKCFkZXYtPnZyYW1fbW0sICJWUkFNIE1NIG5vdCBpbml0aWFsaXplZCIpKQorCQlyZXR1cm4g
LUVJTlZBTDsKKworCXJldHVybiBkcm1fdnJhbV9tbV9tbWFwKGZpbHAsIHZtYSwgZGV2LT52cmFt
X21tKTsKK30KK0VYUE9SVF9TWU1CT0woZHJtX3ZyYW1fbW1fZmlsZV9vcGVyYXRpb25zX21tYXAp
OwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9kcm0vZHJtX2RldmljZS5oIGIvaW5jbHVkZS9kcm0vZHJt
X2RldmljZS5oCmluZGV4IDdmOWVmNzA5YjJiNi4uMWFjZmMzYmJkM2ZiIDEwMDY0NAotLS0gYS9p
bmNsdWRlL2RybS9kcm1fZGV2aWNlLmgKKysrIGIvaW5jbHVkZS9kcm0vZHJtX2RldmljZS5oCkBA
IC0xNyw2ICsxNyw3IEBAIHN0cnVjdCBkcm1fdmJsYW5rX2NydGM7CiBzdHJ1Y3QgZHJtX3NnX21l
bTsKIHN0cnVjdCBkcm1fbG9jYWxfbWFwOwogc3RydWN0IGRybV92bWFfb2Zmc2V0X21hbmFnZXI7
CitzdHJ1Y3QgZHJtX3ZyYW1fbW07CiBzdHJ1Y3QgZHJtX2ZiX2hlbHBlcjsKIAogc3RydWN0IGlu
b2RlOwpAQCAtMjg2LDYgKzI4Nyw5IEBAIHN0cnVjdCBkcm1fZGV2aWNlIHsKIAkvKiogQHZtYV9v
ZmZzZXRfbWFuYWdlcjogR0VNIGluZm9ybWF0aW9uICovCiAJc3RydWN0IGRybV92bWFfb2Zmc2V0
X21hbmFnZXIgKnZtYV9vZmZzZXRfbWFuYWdlcjsKIAorCS8qKiBAdnJhbV9tbTogVlJBTSBNTSBt
ZW1vcnkgbWFuYWdlciAqLworCXN0cnVjdCBkcm1fdnJhbV9tbSAqdnJhbV9tbTsKKwogCS8qKgog
CSAqIEBzd2l0Y2hfcG93ZXJfc3RhdGU6CiAJICoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2Ry
bV9nZW1fdnJhbV9oZWxwZXIuaCBiL2luY2x1ZGUvZHJtL2RybV9nZW1fdnJhbV9oZWxwZXIuaApp
bmRleCA3OTcxNjU2YWZlODcuLmIwNTZmMTg5YmE2MiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9kcm0v
ZHJtX2dlbV92cmFtX2hlbHBlci5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV9nZW1fdnJhbV9oZWxw
ZXIuaApAQCAtMTEsNiArMTEsNyBAQAogc3RydWN0IGRybV9tb2RlX2NyZWF0ZV9kdW1iOwogc3Ry
dWN0IGRybV92cmFtX21tX2Z1bmNzOwogc3RydWN0IGZpbHA7CitzdHJ1Y3Qgdm1fYXJlYV9zdHJ1
Y3Q7CiAKICNkZWZpbmUgRFJNX0dFTV9WUkFNX1BMX0ZMQUdfVlJBTQlUVE1fUExfRkxBR19WUkFN
CiAjZGVmaW5lIERSTV9HRU1fVlJBTV9QTF9GTEFHX1NZU1RFTQlUVE1fUExfRkxBR19TWVNURU0K
QEAgLTExNSwxMCArMTE2LDI2IEBAIGV4dGVybiBjb25zdCBzdHJ1Y3QgZHJtX3ZyYW1fbW1fZnVu
Y3MgZHJtX2dlbV92cmFtX21tX2Z1bmNzOwogICovCiAKIHZvaWQgZHJtX2dlbV92cmFtX2RyaXZl
cl9nZW1fZnJlZV9vYmplY3RfdW5sb2NrZWQoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnZW0pOwot
CitpbnQgZHJtX2dlbV92cmFtX2RyaXZlcl9kdW1iX2NyZWF0ZShzdHJ1Y3QgZHJtX2ZpbGUgKmZp
bGUsCisJCQkJICAgIHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJICAgIHN0cnVjdCBkcm1f
bW9kZV9jcmVhdGVfZHVtYiAqYXJncyk7CiBpbnQgZHJtX2dlbV92cmFtX2RyaXZlcl9kdW1iX21t
YXBfb2Zmc2V0KHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKIAkJCQkJIHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsCiAJCQkJCSB1aW50MzJfdCBoYW5kbGUsIHVpbnQ2NF90ICpvZmZzZXQpOworCisvKioK
KyAqIGRlZmluZSBEUk1fR0VNX1ZSQU1fRFJJVkVSIC0gZGVmYXVsdCBjYWxsYmFjayBmdW5jdGlv
bnMgZm9yIFwKKwkmc3RydWN0IGRybV9kcml2ZXIKKyAqCisgKiBEcml2ZXJzIHRoYXQgdXNlIFZS
QU0gTU0gYW5kIEdFTSBWUkFNIGNhbiB1c2UgdGhpcyBtYWNybyB0byBpbml0aWFsaXplCisgKiAm
c3RydWN0IGRybV9kcml2ZXIgd2l0aCBkZWZhdWx0IGZ1bmN0aW9ucy4KKyAqLworI2RlZmluZSBE
Uk1fR0VNX1ZSQU1fRFJJVkVSIFwKKwkuZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2VkID0gXAorCQlk
cm1fZ2VtX3ZyYW1fZHJpdmVyX2dlbV9mcmVlX29iamVjdF91bmxvY2tlZCwgXAorCS5kdW1iX2Ny
ZWF0ZQkJICA9IGRybV9nZW1fdnJhbV9kcml2ZXJfZHVtYl9jcmVhdGUsIFwKKwkuZHVtYl9tYXBf
b2Zmc2V0CSAgPSBkcm1fZ2VtX3ZyYW1fZHJpdmVyX2R1bWJfbW1hcF9vZmZzZXQKKwogLyoKICAq
IFBSSU1FIGhlbHBlcnMgZm9yIHN0cnVjdCBkcm1fZHJpdmVyCiAgKi8KZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oIGIvaW5jbHVkZS9kcm0vZHJtX3ZyYW1fbW1f
aGVscGVyLmgKaW5kZXggNWQ0NWM2NDQ3ZmE0Li5hOGZmZDg1OTliMDggMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvZHJtL2RybV92cmFtX21tX2hlbHBlci5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV92cmFt
X21tX2hlbHBlci5oCkBAIC02Niw0ICs2NiwzNyBAQCB2b2lkIGRybV92cmFtX21tX2NsZWFudXAo
c3RydWN0IGRybV92cmFtX21tICp2bW0pOwogaW50IGRybV92cmFtX21tX21tYXAoc3RydWN0IGZp
bGUgKmZpbHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAogCQkgICAgIHN0cnVjdCBkcm1f
dnJhbV9tbSAqdm1tKTsKIAorLyoKKyAqIEhlbHBlcnMgZm9yIGludGVncmF0aW9uIHdpdGggc3Ry
dWN0IGRybV9kZXZpY2UKKyAqLworCitzdHJ1Y3QgZHJtX3ZyYW1fbW0gKmRybV92cmFtX2hlbHBl
cl9hbGxvY19tbSgKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1aW50NjRfdCB2cmFtX2Jhc2Us
IHNpemVfdCB2cmFtX3NpemUsCisJY29uc3Qgc3RydWN0IGRybV92cmFtX21tX2Z1bmNzICpmdW5j
cyk7Cit2b2lkIGRybV92cmFtX2hlbHBlcl9yZWxlYXNlX21tKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpOworCisvKgorICogSGVscGVycyBmb3IgJnN0cnVjdCBmaWxlX29wZXJhdGlvbnMKKyAqLwor
CitpbnQgZHJtX3ZyYW1fbW1fZmlsZV9vcGVyYXRpb25zX21tYXAoCisJc3RydWN0IGZpbGUgKmZp
bHAsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKTsKKworLyoqCisgKiBkZWZpbmUgRFJNX1ZS
QU1fTU1fRklMRV9PUEVSQVRJT05TIC0gZGVmYXVsdCBjYWxsYmFjayBmdW5jdGlvbnMgZm9yIFwK
Kwkmc3RydWN0IGZpbGVfb3BlcmF0aW9ucworICoKKyAqIERyaXZlcnMgdGhhdCB1c2UgVlJBTSBN
TSBjYW4gdXNlIHRoaXMgbWFjcm8gdG8gaW5pdGlhbGl6ZQorICogJnN0cnVjdCBmaWxlX29wZXJh
dGlvbnMgd2l0aCBkZWZhdWx0IGZ1bmN0aW9ucy4KKyAqLworI2RlZmluZSBEUk1fVlJBTV9NTV9G
SUxFX09QRVJBVElPTlMgXAorCS5sbHNlZWsJCT0gbm9fbGxzZWVrLCBcCisJLnJlYWQJCT0gZHJt
X3JlYWQsIFwKKwkucG9sbAkJPSBkcm1fcG9sbCwgXAorCS51bmxvY2tlZF9pb2N0bCA9IGRybV9p
b2N0bCwgXAorCS5jb21wYXRfaW9jdGwJPSBkcm1fY29tcGF0X2lvY3RsLCBcCisJLm1tYXAJCT0g
ZHJtX3ZyYW1fbW1fZmlsZV9vcGVyYXRpb25zX21tYXAsIFwKKwkub3BlbgkJPSBkcm1fb3Blbiwg
XAorCS5yZWxlYXNlCT0gZHJtX3JlbGVhc2UgXAorCiAjZW5kaWYKLS0gCjIuMjEuMAoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxp
bmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
