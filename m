Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id F2BF2327AC9
	for <lists+dri-devel@lfdr.de>; Mon,  1 Mar 2021 10:31:37 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0C98E6E546;
	Mon,  1 Mar 2021 09:31:36 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 54AA46E546
 for <dri-devel@lists.freedesktop.org>; Mon,  1 Mar 2021 09:31:34 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id D802DAAC5;
 Mon,  1 Mar 2021 09:31:32 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: daniel@ffwll.ch, airlied@linux.ie, maarten.lankhorst@linux.intel.com,
 mripard@kernel.org, sumit.semwal@linaro.org, christian.koenig@amd.com,
 gregkh@linuxfoundation.org, hdegoede@redhat.com, sean@poorly.run,
 noralf@tronnes.org, stern@rowland.harvard.edu
Subject: [PATCH v6] drm: Use USB controller's DMA mask when importing dmabufs
Date: Mon,  1 Mar 2021 10:31:27 +0100
Message-Id: <20210301093127.11028-1-tzimmermann@suse.de>
X-Mailer: git-send-email 2.30.1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Zimmermann <tzimmermann@suse.de>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, stable@vger.kernel.org,
 dri-devel@lists.freedesktop.org, Pavel Machek <pavel@ucw.cz>,
 Christoph Hellwig <hch@lst.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VVNCIGRldmljZXMgY2Fubm90IHBlcmZvcm0gRE1BIGFuZCBoZW5jZSBoYXZlIG5vIGRtYV9tYXNr
IHNldCBpbiB0aGVpcgpkZXZpY2Ugc3RydWN0dXJlLiBUaGVyZWZvcmUgaW1wb3J0aW5nIGRtYWJ1
ZiBpbnRvIGEgVVNCLWJhc2VkIGRyaXZlcgpmYWlscywgd2hpY2ggYnJlYWtzIGpvaW5pbmcgYW5k
IG1pcnJvcmluZyBvZiBkaXNwbGF5IGluIFgxMS4KCkZvciBVU0IgZGV2aWNlcywgcGljayB0aGUg
YXNzb2NpYXRlZCBVU0IgY29udHJvbGxlciBhcyBhdHRhY2htZW50IGRldmljZS4KVGhpcyBhbGxv
d3MgdGhlIERSTSBpbXBvcnQgaGVscGVycyB0byBwZXJmb3JtIHRoZSBETUEgc2V0dXAuIElmIHRo
ZSBETUEKY29udHJvbGxlciBkb2VzIG5vdCBzdXBwb3J0IERNQSB0cmFuc2ZlcnMsIHdlJ3JlIG91
dCBvZiBsdWNrIGFuZCBjYW5ub3QKaW1wb3J0LiBPdXIgY3VycmVudCBVU0ItYmFzZWQgRFJNIGRy
aXZlcnMgZG9uJ3QgdXNlIERNQSwgc28gdGhlIGFjdHVhbApETUEgZGV2aWNlIGlzIG5vdCBpbXBv
cnRhbnQuCgpEcml2ZXJzIHNob3VsZCB1c2UgRFJNX0dFTV9TSE1FTV9EUk9WRVJfT1BTX1VTQiB0
byBpbml0aWFsaXplIHRoZWlyCmluc3RhbmNlIG9mIHN0cnVjdCBkcm1fZHJpdmVyLgoKVGVzdGVk
IGJ5IGpvaW5pbmcvbWlycm9yaW5nIGRpc3BsYXlzIG9mIHVkbCBhbmQgcmFkZW9uIHVuIGRlciBH
bm9tZS9YMTEuCgp2NjoKCSogaW1wbGVtZW50IHdvcmthcm91bmQgaW4gRFJNIGRyaXZlcnMgYW5k
IGhvbGQgcmVmZXJlbmNlIHRvCgkgIERNQSBkZXZpY2Ugd2hpbGUgVVNCIGRldmljZSBpcyBpbiB1
c2UKCSogcmVtb3ZlIGRldl9pc191c2IoKSAoR3JlZykKCSogY29sbGFwc2UgVVNCIGhlbHBlciBp
bnRvIHVzYl9pbnRmX2dldF9kbWFfZGV2aWNlKCkgKEFsYW4pCgkqIGludGVncmF0ZSBEYW5pZWwn
cyBUT0RPIHN0YXRlbWVudCAoRGFuaWVsKQoJKiBmaXggdHlwb3MgKEdyZWcpCnY1OgoJKiBwcm92
aWRlIGEgaGVscGVyIGZvciBVU0IgaW50ZXJmYWNlcyAoQWxhbikKCSogYWRkIEZJWE1FIGl0ZW0g
dG8gZG9jdW1lbnRhdGlvbiBhbmQgVE9ETyBsaXN0IChEYW5pZWwpCnY0OgoJKiBpbXBsZW1lbnQg
d29ya2Fyb3VuZCB3aXRoIFVTQiBoZWxwZXIgZnVuY3Rpb25zIChHcmVnKQoJKiB1c2Ugc3RydWN0
IHVzYl9kZXZpY2UtPmJ1cy0+c3lzZGV2IGFzIERNQSBkZXZpY2UgKFRha2FzaGkpCnYzOgoJKiBk
cm9wIGdlbV9jcmVhdGVfb2JqZWN0CgkqIHVzZSBETUEgbWFzayBvZiBVU0IgY29udHJvbGxlciwg
aWYgYW55IChEYW5pZWwsIENocmlzdGlhbiwgTm9yYWxmKQp2MjoKCSogbW92ZSBmaXggdG8gaW1w
b3J0ZXIgc2lkZSAoQ2hyaXN0aWFuLCBEYW5pZWwpCgkqIHVwZGF0ZSBTSE1FTSBhbmQgQ01BIGhl
bHBlcnMgZm9yIG5ldyBQUklNRSBjYWxsYmFja3MKClNpZ25lZC1vZmYtYnk6IFRob21hcyBaaW1t
ZXJtYW5uIDx0emltbWVybWFubkBzdXNlLmRlPgpGaXhlczogNmViMDIzM2VjMmQwICgidXNiOiBk
b24ndCBpbmhlcml0eSBETUEgcHJvcGVydGllcyBmb3IgVVNCIGRldmljZXMiKQpUZXN0ZWQtYnk6
IFBhdmVsIE1hY2hlayA8cGF2ZWxAdWN3LmN6PgpBY2tlZC1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8
Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgpBY2tlZC1ieTogRGFuaWVsIFZldHRlciA8ZGFuaWVs
LnZldHRlckBmZndsbC5jaD4KQ2M6IENocmlzdG9waCBIZWxsd2lnIDxoY2hAbHN0LmRlPgpDYzog
R3JlZyBLcm9haC1IYXJ0bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KQ2M6IDxzdGFi
bGVAdmdlci5rZXJuZWwub3JnPiAjIHY1LjEwKwpTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgWmltbWVy
bWFubiA8dHppbW1lcm1hbm5Ac3VzZS5kZT4KLS0tCiBEb2N1bWVudGF0aW9uL2dwdS90b2RvLnJz
dCAgICAgIHwgMjEgKysrKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vdGlueS9n
bTEydTMyMC5jIHwgMjUgKysrKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJt
L3VkbC91ZGxfZHJ2LmMgICB8IDE3ICsrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0v
dWRsL3VkbF9kcnYuaCAgIHwgIDEgKwogZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jICB8
ICA5ICsrKysrKysrKwogZHJpdmVycy91c2IvY29yZS91c2IuYyAgICAgICAgICB8IDMyICsrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L3VzYi5oICAgICAgICAg
ICAgIHwgIDIgKysKIDcgZmlsZXMgY2hhbmdlZCwgMTA3IGluc2VydGlvbnMoKykKCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL2dwdS90b2RvLnJzdCBiL0RvY3VtZW50YXRpb24vZ3B1L3RvZG8u
cnN0CmluZGV4IDA2MzFiOWIzMjNkNS4uZmRmZDZhMTA4MWVjIDEwMDY0NAotLS0gYS9Eb2N1bWVu
dGF0aW9uL2dwdS90b2RvLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2dwdS90b2RvLnJzdApAQCAt
NTcxLDYgKzU3MSwyNyBAQCBDb250YWN0OiBEYW5pZWwgVmV0dGVyCiAKIExldmVsOiBJbnRlcm1l
ZGlhdGUKIAorUmVtb3ZlIGF1dG9tYXRpYyBwYWdlIG1hcHBpbmcgZnJvbSBkbWEtYnVmIGltcG9y
dGluZworLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQorCitXaGVuIGltcG9ydGluZyBkbWEtYnVmcywgdGhlIGRtYS1idWYgYW5kIFBSSU1FIGZyYW1l
d29ya3MgYXV0b21hdGljYWxseSBtYXAKK2ltcG9ydGVkIHBhZ2VzIGludG8gdGhlIGltcG9ydGVy
J3MgRE1BIGFyZWEuIGRybV9nZW1fcHJpbWVfZmRfdG9faGFuZGxlKCkgYW5kCitkcm1fZ2VtX3By
aW1lX2hhbmRsZV90b19mZCgpIHJlcXVpcmUgdGhhdCBpbXBvcnRlcnMgY2FsbCBkbWFfYnVmX2F0
dGFjaCgpCitldmVuIGlmIHRoZXkgbmV2ZXIgZG8gYWN0dWFsIGRldmljZSBETUEsIGJ1dCBvbmx5
IENQVSBhY2Nlc3MgdGhyb3VnaAorZG1hX2J1Zl92bWFwKCkuIFRoaXMgaXMgYSBwcm9ibGVtIGZv
ciBVU0IgZGV2aWNlcywgd2hpY2ggZG8gbm90IHN1cHBvcnQgRE1BCitvcGVyYXRpb25zLgorCitU
byBmaXggdGhlIGlzc3VlLCBhdXRvbWF0aWMgcGFnZSBtYXBwaW5ncyBzaG91bGQgYmUgcmVtb3Zl
ZCBmcm9tIHRoZQorYnVmZmVyLXNoYXJpbmcgY29kZS4gRml4aW5nIHRoaXMgaXMgYSBiaXQgbW9y
ZSBpbnZvbHZlZCwgc2luY2UgdGhlIGltcG9ydC9leHBvcnQKK2NhY2hlIGlzIGFsc28gdGllZCB0
byAmZHJtX2dlbV9vYmplY3QuaW1wb3J0X2F0dGFjaC4gTWVhbndoaWxlIHdlIHBhcGVyIG92ZXIK
K3RoaXMgcHJvYmxlbSBmb3IgVVNCIGRldmljZXMgYnkgZmlzaGluZyBvdXQgdGhlIFVTQiBob3N0
IGNvbnRyb2xsZXIgZGV2aWNlLCBhcworbG9uZyBhcyB0aGF0IHN1cHBvcnRzIERNQS4gT3RoZXJ3
aXNlIGltcG9ydGluZyBjYW4gc3RpbGwgbmVlZGxlc3NseSBmYWlsLgorCitDb250YWN0OiBUaG9t
YXMgWmltbWVybWFubiA8dHppbW1lcm1hbm5Ac3VzZS5kZT4sIERhbmllbCBWZXR0ZXIKKworTGV2
ZWw6IEFkdmFuY2VkCisKKwogQmV0dGVyIFRlc3RpbmcKID09PT09PT09PT09PT09CiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS90aW55L2dtMTJ1MzIwLmMgYi9kcml2ZXJzL2dwdS9kcm0v
dGlueS9nbTEydTMyMC5jCmluZGV4IDBiNGY0ZjJhZjFlZi4uNDhiNWIwNmY3MGU4IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vdGlueS9nbTEydTMyMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS90aW55L2dtMTJ1MzIwLmMKQEAgLTg0LDYgKzg0LDcgQEAgTU9EVUxFX1BBUk1fREVTQyhlY29f
bW9kZSwgIlR1cm4gb24gRWNvIG1vZGUgKGxlc3MgYnJpZ2h0LCBtb3JlIHNpbGVudCkiKTsKIAog
c3RydWN0IGdtMTJ1MzIwX2RldmljZSB7CiAJc3RydWN0IGRybV9kZXZpY2UJICAgICAgICAgZGV2
OworCXN0cnVjdCBkZXZpY2UgICAgICAgICAgICAgICAgICAgKmRtYWRldjsKIAlzdHJ1Y3QgZHJt
X3NpbXBsZV9kaXNwbGF5X3BpcGUgICBwaXBlOwogCXN0cnVjdCBkcm1fY29ubmVjdG9yCSAgICAg
ICAgIGNvbm47CiAJdW5zaWduZWQgY2hhciAgICAgICAgICAgICAgICAgICAqY21kX2J1ZjsKQEAg
LTU5OSw2ICs2MDAsMjIgQEAgc3RhdGljIGNvbnN0IHVpbnQ2NF90IGdtMTJ1MzIwX3BpcGVfbW9k
aWZpZXJzW10gPSB7CiAJRFJNX0ZPUk1BVF9NT0RfSU5WQUxJRAogfTsKIAorLyoKKyAqIEZJWE1F
OiBEbWEtYnVmIHNoYXJpbmcgcmVxdWlyZXMgRE1BIHN1cHBvcnQgYnkgdGhlIGltcG9ydGluZyBk
ZXZpY2UuCisgKiAgICAgICAgVGhpcyBmdW5jdGlvbiBpcyBhIHdvcmthcm91bmQgdG8gbWFrZSBV
U0IgZGV2aWNlcyB3b3JrIGFzIHdlbGwuCisgKiAgICAgICAgU2VlIHRvZG8ucnN0IGZvciBob3cg
dG8gZml4IHRoZSBpc3N1ZSBpbiB0aGUgZG1hLWJ1ZiBmcmFtZXdvcmsuCisgKi8KK3N0YXRpYyBz
dHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmdtMTJ1MzIwX2dlbV9wcmltZV9pbXBvcnQoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwKKwkJCQkJCQlzdHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1ZikKK3sKKwlzdHJ1
Y3QgZ20xMnUzMjBfZGV2aWNlICpnbTEydTMyMCA9IHRvX2dtMTJ1MzIwKGRldik7CisKKwlpZiAo
IWdtMTJ1MzIwLT5kbWFkZXYpCisJCXJldHVybiBFUlJfUFRSKC1FTk9ERVYpOworCisJcmV0dXJu
IGRybV9nZW1fcHJpbWVfaW1wb3J0X2RldihkZXYsIGRtYV9idWYsIGdtMTJ1MzIwLT5kbWFkZXYp
OworfQorCiBERUZJTkVfRFJNX0dFTV9GT1BTKGdtMTJ1MzIwX2ZvcHMpOwogCiBzdGF0aWMgY29u
c3Qgc3RydWN0IGRybV9kcml2ZXIgZ20xMnUzMjBfZHJtX2RyaXZlciA9IHsKQEAgLTYxMiw2ICs2
MjksNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9kcml2ZXIgZ20xMnUzMjBfZHJtX2RyaXZl
ciA9IHsKIAogCS5mb3BzCQkgPSAmZ20xMnUzMjBfZm9wcywKIAlEUk1fR0VNX1NITUVNX0RSSVZF
Ul9PUFMsCisJLmdlbV9wcmltZV9pbXBvcnQgPSBnbTEydTMyMF9nZW1fcHJpbWVfaW1wb3J0LAog
fTsKIAogc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fbW9kZV9jb25maWdfZnVuY3MgZ20xMnUzMjBf
bW9kZV9jb25maWdfZnVuY3MgPSB7CkBAIC02MzksNiArNjU3LDEwIEBAIHN0YXRpYyBpbnQgZ20x
MnUzMjBfdXNiX3Byb2JlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UsCiAJaWYgKElT
X0VSUihnbTEydTMyMCkpCiAJCXJldHVybiBQVFJfRVJSKGdtMTJ1MzIwKTsKIAorCWdtMTJ1MzIw
LT5kbWFkZXYgPSB1c2JfaW50Zl9nZXRfZG1hX2RldmljZSh0b191c2JfaW50ZXJmYWNlKGRldi0+
ZGV2KSk7CisJaWYgKCFnbTEydTMyMC0+ZG1hZGV2KQorCQlkcm1fd2FybihkZXYsICJidWZmZXIg
c2hhcmluZyBub3Qgc3VwcG9ydGVkIik7IC8qIG5vdCBhbiBlcnJvciAqLworCiAJSU5JVF9ERUxB
WUVEX1dPUksoJmdtMTJ1MzIwLT5mYl91cGRhdGUud29yaywgZ20xMnUzMjBfZmJfdXBkYXRlX3dv
cmspOwogCW11dGV4X2luaXQoJmdtMTJ1MzIwLT5mYl91cGRhdGUubG9jayk7CiAKQEAgLTY5MSw3
ICs3MTMsMTAgQEAgc3RhdGljIGludCBnbTEydTMyMF91c2JfcHJvYmUoc3RydWN0IHVzYl9pbnRl
cmZhY2UgKmludGVyZmFjZSwKIHN0YXRpYyB2b2lkIGdtMTJ1MzIwX3VzYl9kaXNjb25uZWN0KHN0
cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRl
diA9IHVzYl9nZXRfaW50ZmRhdGEoaW50ZXJmYWNlKTsKKwlzdHJ1Y3QgZ20xMnUzMjBfZGV2aWNl
ICpnbTEydTMyMCA9IHRvX2dtMTJ1MzIwKGRldik7CiAKKwlwdXRfZGV2aWNlKGdtMTJ1MzIwLT5k
bWFkZXYpOworCWdtMTJ1MzIwLT5kbWFkZXYgPSBOVUxMOwogCWRybV9kZXZfdW5wbHVnKGRldik7
CiAJZHJtX2F0b21pY19oZWxwZXJfc2h1dGRvd24oZGV2KTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMK
aW5kZXggOTI2OTA5MjY5N2Q4Li41NzAzMjc3YzZmNTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS91ZGwvdWRsX2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCkBA
IC0zMiw2ICszMiwyMiBAQCBzdGF0aWMgaW50IHVkbF91c2JfcmVzdW1lKHN0cnVjdCB1c2JfaW50
ZXJmYWNlICppbnRlcmZhY2UpCiAJcmV0dXJuIGRybV9tb2RlX2NvbmZpZ19oZWxwZXJfcmVzdW1l
KGRldik7CiB9CiAKKy8qCisgKiBGSVhNRTogRG1hLWJ1ZiBzaGFyaW5nIHJlcXVpcmVzIERNQSBz
dXBwb3J0IGJ5IHRoZSBpbXBvcnRpbmcgZGV2aWNlLgorICogICAgICAgIFRoaXMgZnVuY3Rpb24g
aXMgYSB3b3JrYXJvdW5kIHRvIG1ha2UgVVNCIGRldmljZXMgd29yayBhcyB3ZWxsLgorICogICAg
ICAgIFNlZSB0b2RvLnJzdCBmb3IgaG93IHRvIGZpeCB0aGUgaXNzdWUgaW4gdGhlIGRtYS1idWYg
ZnJhbWV3b3JrLgorICovCitzdGF0aWMgc3RydWN0IGRybV9nZW1fb2JqZWN0ICp1ZGxfZHJpdmVy
X2dlbV9wcmltZV9pbXBvcnQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKKwkJCQkJCQkgIHN0cnVj
dCBkbWFfYnVmICpkbWFfYnVmKQoreworCXN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwo
ZGV2KTsKKworCWlmICghdWRsLT5kbWFkZXYpCisJCXJldHVybiBFUlJfUFRSKC1FTk9ERVYpOwor
CisJcmV0dXJuIGRybV9nZW1fcHJpbWVfaW1wb3J0X2RldihkZXYsIGRtYV9idWYsIHVkbC0+ZG1h
ZGV2KTsKK30KKwogREVGSU5FX0RSTV9HRU1fRk9QUyh1ZGxfZHJpdmVyX2ZvcHMpOwogCiBzdGF0
aWMgY29uc3Qgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVyID0gewpAQCAtNDAsNiArNTYsNyBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVyID0gewogCS8qIEdFTSBob29rcyAq
LwogCS5mb3BzID0gJnVkbF9kcml2ZXJfZm9wcywKIAlEUk1fR0VNX1NITUVNX0RSSVZFUl9PUFMs
CisJLmdlbV9wcmltZV9pbXBvcnQgPSB1ZGxfZHJpdmVyX2dlbV9wcmltZV9pbXBvcnQsCiAKIAku
bmFtZSA9IERSSVZFUl9OQU1FLAogCS5kZXNjID0gRFJJVkVSX0RFU0MsCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Ry
di5oCmluZGV4IDg3NWU3MzU1MWFlOS4uY2MxNmExMzMxNmU0IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vdWRsL3VkbF9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYu
aApAQCAtNTAsNiArNTAsNyBAQCBzdHJ1Y3QgdXJiX2xpc3Qgewogc3RydWN0IHVkbF9kZXZpY2Ug
ewogCXN0cnVjdCBkcm1fZGV2aWNlIGRybTsKIAlzdHJ1Y3QgZGV2aWNlICpkZXY7CisJc3RydWN0
IGRldmljZSAqZG1hZGV2OwogCiAJc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlIGRpc3Bs
YXlfcGlwZTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jIGIv
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jCmluZGV4IDBlMmEzNzZjYjA3NS4uN2MwMzM4
YmNhZGVhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWluLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jCkBAIC0zMTUsNiArMzE1LDEwIEBAIGludCB1
ZGxfaW5pdChzdHJ1Y3QgdWRsX2RldmljZSAqdWRsKQogCiAJRFJNX0RFQlVHKCJcbiIpOwogCisJ
dWRsLT5kbWFkZXYgPSB1c2JfaW50Zl9nZXRfZG1hX2RldmljZSh0b191c2JfaW50ZXJmYWNlKGRl
di0+ZGV2KSk7CisJaWYgKCF1ZGwtPmRtYWRldikKKwkJZHJtX3dhcm4oZGV2LCAiYnVmZmVyIHNo
YXJpbmcgbm90IHN1cHBvcnRlZCIpOyAvKiBub3QgYW4gZXJyb3IgKi8KKwogCW11dGV4X2luaXQo
JnVkbC0+Z2VtX2xvY2spOwogCiAJaWYgKCF1ZGxfcGFyc2VfdmVuZG9yX2Rlc2NyaXB0b3IodWRs
KSkgewpAQCAtMzQ5LDYgKzM1MywxMSBAQCBpbnQgdWRsX2luaXQoc3RydWN0IHVkbF9kZXZpY2Ug
KnVkbCkKIAogaW50IHVkbF9kcm9wX3VzYihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogeworCXN0
cnVjdCB1ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwoZGV2KTsKKwogCXVkbF9mcmVlX3VyYl9saXN0
KGRldik7CisJcHV0X2RldmljZSh1ZGwtPmRtYWRldik7CisJdWRsLT5kbWFkZXYgPSBOVUxMOwor
CiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL3VzYi9jb3JlL3VzYi5jIGIvZHJp
dmVycy91c2IvY29yZS91c2IuYwppbmRleCA4ZjA3YjA1MTYxMDAuLmE1NjZiYjQ5NGUyNCAxMDA2
NDQKLS0tIGEvZHJpdmVycy91c2IvY29yZS91c2IuYworKysgYi9kcml2ZXJzL3VzYi9jb3JlL3Vz
Yi5jCkBAIC03NDgsNiArNzQ4LDM4IEBAIHZvaWQgdXNiX3B1dF9pbnRmKHN0cnVjdCB1c2JfaW50
ZXJmYWNlICppbnRmKQogfQogRVhQT1JUX1NZTUJPTF9HUEwodXNiX3B1dF9pbnRmKTsKIAorLyoq
CisgKiB1c2JfaW50Zl9nZXRfZG1hX2RldmljZSAtIGFjcXVpcmUgYSByZWZlcmVuY2Ugb24gdGhl
IHVzYiBpbnRlcmZhY2UncyBETUEgZW5kcG9pbnQKKyAqIEBpbnRmOiB0aGUgdXNiIGludGVyZmFj
ZQorICoKKyAqIFdoaWxlIGEgVVNCIGRldmljZSBjYW5ub3QgcGVyZm9ybSBETUEgb3BlcmF0aW9u
cyBieSBpdHNlbGYsIG1hbnkgVVNCCisgKiBjb250cm9sbGVycyBjYW4uIEEgY2FsbCB0byB1c2Jf
aW50Zl9nZXRfZG1hX2RldmljZSgpIHJldHVybnMgdGhlIERNQSBlbmRwb2ludAorICogZm9yIHRo
ZSBnaXZlbiBVU0IgaW50ZXJmYWNlLCBpZiBhbnkuIFRoZSByZXR1cm5lZCBkZXZpY2Ugc3RydWN0
dXJlIG11c3QgYmUKKyAqIHJlbGVhc2VkIHdpdGggcHV0X2RldmljZSgpLgorICoKKyAqIFNlZSBh
bHNvIHVzYl9nZXRfZG1hX2RldmljZSgpLgorICoKKyAqIFJldHVybnM6IEEgcmVmZXJlbmNlIHRv
IHRoZSB1c2IgaW50ZXJmYWNlJ3MgRE1BIGVuZHBvaW50OyBvciBOVUxMIGlmIG5vbmUKKyAqICAg
ICAgICAgIGV4aXN0cy4KKyAqLworc3RydWN0IGRldmljZSAqdXNiX2ludGZfZ2V0X2RtYV9kZXZp
Y2Uoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGYpCit7CisJc3RydWN0IHVzYl9kZXZpY2UgKnVk
ZXYgPSBpbnRlcmZhY2VfdG9fdXNiZGV2KGludGYpOworCXN0cnVjdCBkZXZpY2UgKmRtYWRldjsK
KworCWlmICghdWRldi0+YnVzKQorCQlyZXR1cm4gTlVMTDsKKworCWRtYWRldiA9IGdldF9kZXZp
Y2UodWRldi0+YnVzLT5zeXNkZXYpOworCWlmICghZG1hZGV2IHx8ICFkbWFkZXYtPmRtYV9tYXNr
KSB7CisJCXB1dF9kZXZpY2UoZG1hZGV2KTsKKwkJcmV0dXJuIE5VTEw7CisJfQorCisJcmV0dXJu
IGRtYWRldjsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKHVzYl9pbnRmX2dldF9kbWFfZGV2aWNlKTsK
KwogLyoJCQlVU0IgZGV2aWNlIGxvY2tpbmcKICAqCiAgKiBVU0IgZGV2aWNlcyBhbmQgaW50ZXJm
YWNlcyBhcmUgbG9ja2VkIHVzaW5nIHRoZSBzZW1hcGhvcmUgaW4gdGhlaXIKZGlmZiAtLWdpdCBh
L2luY2x1ZGUvbGludXgvdXNiLmggYi9pbmNsdWRlL2xpbnV4L3VzYi5oCmluZGV4IDdkNzJjNGUw
NzEzYy4uZDZhNDE4NDFiOTNlIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3VzYi5oCisrKyBi
L2luY2x1ZGUvbGludXgvdXNiLmgKQEAgLTc0Niw2ICs3NDYsOCBAQCBleHRlcm4gaW50IHVzYl9s
b2NrX2RldmljZV9mb3JfcmVzZXQoc3RydWN0IHVzYl9kZXZpY2UgKnVkZXYsCiBleHRlcm4gaW50
IHVzYl9yZXNldF9kZXZpY2Uoc3RydWN0IHVzYl9kZXZpY2UgKmRldik7CiBleHRlcm4gdm9pZCB1
c2JfcXVldWVfcmVzZXRfZGV2aWNlKHN0cnVjdCB1c2JfaW50ZXJmYWNlICpkZXYpOwogCitleHRl
cm4gc3RydWN0IGRldmljZSAqdXNiX2ludGZfZ2V0X2RtYV9kZXZpY2Uoc3RydWN0IHVzYl9pbnRl
cmZhY2UgKmludGYpOworCiAjaWZkZWYgQ09ORklHX0FDUEkKIGV4dGVybiBpbnQgdXNiX2FjcGlf
c2V0X3Bvd2VyX3N0YXRlKHN0cnVjdCB1c2JfZGV2aWNlICpoZGV2LCBpbnQgaW5kZXgsCiAJYm9v
bCBlbmFibGUpOwotLSAKMi4zMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5m
by9kcmktZGV2ZWwK
