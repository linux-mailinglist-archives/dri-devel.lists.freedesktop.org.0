Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CF9878A5E1
	for <lists+dri-devel@lfdr.de>; Mon, 12 Aug 2019 20:25:12 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AC5B16E5B1;
	Mon, 12 Aug 2019 18:25:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-vk1-xa49.google.com (mail-vk1-xa49.google.com
 [IPv6:2607:f8b0:4864:20::a49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B9E986E5B2
 for <dri-devel@lists.freedesktop.org>; Mon, 12 Aug 2019 18:25:06 +0000 (UTC)
Received: by mail-vk1-xa49.google.com with SMTP id d21so3327526vkf.5
 for <dri-devel@lists.freedesktop.org>; Mon, 12 Aug 2019 11:25:06 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=gvOeNTlcklsgFg5eAj43KffAagqjk+iTpWJgew6GQ/c=;
 b=Ljvc8X7l3c946BoQM45SXBHRDdYHEvxzgDMEGaqHmXwHo/DkEkHfx6U0r23NmrLEtD
 fqf5HJyJVxY4airOfMcAGZuv4M6FzZovV5u+S9tkEP6wbF5yofprPI9QTXqKgGhQEylD
 o+fFiysuNUWFeHTTdLm3dITZ8/XvK1Np36rnLuZ36OtVy8A4J0rBrjihFjxplob4JCtP
 bJN8E4BABXHuGCvufZwrJcZoFKDHvCyDMebP9Z4b0xv4wPDUBgcQJr0tGA8fsJ9ibfw5
 Bls0l9mgzhPfPSR4xCaeFC18SchU0JpP8P9/6uDHSlwfZnD5DAsjqSzzM4EawTZPhd55
 jYXA==
X-Gm-Message-State: APjAAAWdIuDyQ6xC5qBd3fUmyxjV3KVbdbudLNLOn+8JtETFnFRFbxeh
 7cf0VsmQ4MCA3RhMhH9Jw4tCFdXvTOuJRErInvoLNQ==
X-Google-Smtp-Source: APXvYqyAY7IrA2KuZIkHRm3S0iTgxA57sy1P2xwz8YyG8+fJj+UQNMQCq/VVsMgW64riGqwBEFPPtRyuCDuGhTFrp8dCuQ==
X-Received: by 2002:a67:eb12:: with SMTP id a18mr22906383vso.119.1565634303599; 
 Mon, 12 Aug 2019 11:25:03 -0700 (PDT)
Date: Mon, 12 Aug 2019 11:24:12 -0700
In-Reply-To: <20190812182421.141150-1-brendanhiggins@google.com>
Message-Id: <20190812182421.141150-10-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190812182421.141150-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.rc1.153.gdeed80330f-goog
Subject: [PATCH v12 09/18] kunit: test: add support for test abort
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=gvOeNTlcklsgFg5eAj43KffAagqjk+iTpWJgew6GQ/c=;
 b=DRB4VCrtC8+LRoiKbn1RIL5Xr2qIbMumjZVfI66VbGILMTT9/08NakHlJpEAxSPmeI
 PecuQo3ABR2+qy5g+4KuLirMlh+CJbj4DM8zGKTrIYp4wtEucweWtq6aRcu3bR3ZQKaa
 n7C8Dp/I+hTm7CGyw2Dz1b7KFHDkH6O3+Ukqt5M1gkJr2D2uApeEBiiBFMd3rETuw9WX
 Uqts4zamelKC/B6KqVEpyGuK4KHgfb2m7xWINnUPscnV6jbAUiL6POEhlJT6D5y8FOSL
 M9XaN+74A+JFcqBGoFrH5E1JZoebwwHCdeUZBGw7yTRaZgbtGHt1SoRwaEOISv4tcrnt
 889A==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, kunit-dev@googlegroups.com,
 richard@nod.at, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFib3J0aW5nL2JhaWxpbmcgb3V0IG9mIHRlc3QgY2FzZXMsIHdoaWNo
IGlzIG5lZWRlZCBmb3IKaW1wbGVtZW50aW5nIGFzc2VydGlvbnMuCgpBbiBhc3NlcnRpb24gaXMg
bGlrZSBhbiBleHBlY3RhdGlvbiwgYnV0IGJhaWxzIG91dCBvZiB0aGUgdGVzdCBjYXNlCmVhcmx5
IGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IG1ldC4gVGhlIGlkZWEgd2l0aCBhc3NlcnRpb25zIGlz
IHRoYXQgeW91CnVzZSB0aGVtIHRvIHN0YXRlIGFsbCB0aGUgcHJlY29uZGl0aW9ucyBmb3IgeW91
ciB0ZXN0LiBMb2dpY2FsbHkKc3BlYWtpbmcsIHRoZXNlIGFyZSB0aGUgcHJlbWlzZXMgb2YgdGhl
IHRlc3QgY2FzZSwgc28gaWYgYSBwcmVtaXNlIGlzbid0CnRydWUsIHRoZXJlIGlzIG5vIHBvaW50
IGluIGNvbnRpbnVpbmcgdGhlIHRlc3QgY2FzZSBiZWNhdXNlIHRoZXJlIGFyZSBubwpjb25jbHVz
aW9ucyB0aGF0IGNhbiBiZSBkcmF3biB3aXRob3V0IHRoZSBwcmVtaXNlcy4gV2hlcmVhcywgdGhl
CmV4cGVjdGF0aW9uIGlzIHRoZSB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBwcm92ZS4KClNpZ25l
ZC1vZmYtYnk6IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KUmV2
aWV3ZWQtYnk6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+
ClJldmlld2VkLWJ5OiBMb2dhbiBHdW50aG9ycGUgPGxvZ2FuZ0BkZWx0YXRlZS5jb20+Ci0tLQog
aW5jbHVkZS9rdW5pdC90ZXN0LmggICAgICB8ICAxNCArKysKIGluY2x1ZGUva3VuaXQvdHJ5LWNh
dGNoLmggfCAgNjkgKysrKysrKysrKysrKysrCiBrdW5pdC9NYWtlZmlsZSAgICAgICAgICAgIHwg
ICAzICstCiBrdW5pdC90ZXN0LmMgICAgICAgICAgICAgIHwgMTc5ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKystLS0tCiBrdW5pdC90cnktY2F0Y2guYyAgICAgICAgIHwgIDk1ICsr
KysrKysrKysrKysrKysrKysrCiA1IGZpbGVzIGNoYW5nZWQsIDM0NCBpbnNlcnRpb25zKCspLCAx
NiBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2t1bml0L3RyeS1jYXRj
aC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQga3VuaXQvdHJ5LWNhdGNoLmMKCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2t1bml0L3Rlc3QuaCBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCmluZGV4IDI2MjViY2Zl
YjE5YWMuLjkzMzgxZjg0MWUwOWYgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUva3VuaXQvdGVzdC5oCisr
KyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC0xMyw2ICsxMyw3IEBACiAjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiAjaW5jbHVkZSA8a3VuaXQvYXNz
ZXJ0Lmg+CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNoLmg+CiAKIHN0cnVjdCBrdW5pdF9yZXNv
dXJjZTsKIApAQCAtMTY3LDYgKzE2OCw3IEBAIHN0cnVjdCBrdW5pdCB7CiAKIAkvKiBwcml2YXRl
OiBpbnRlcm5hbCB1c2Ugb25seS4gKi8KIAljb25zdCBjaGFyICpuYW1lOyAvKiBSZWFkIG9ubHkg
YWZ0ZXIgaW5pdGlhbGl6YXRpb24hICovCisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCB0cnlfY2F0
Y2g7CiAJLyoKIAkgKiBzdWNjZXNzIHN0YXJ0cyBhcyB0cnVlLCBhbmQgbWF5IG9ubHkgYmUgc2V0
IHRvIGZhbHNlIGR1cmluZyBhIHRlc3QKIAkgKiBjYXNlOyB0aHVzLCBpdCBpcyBzYWZlIHRvIHVw
ZGF0ZSB0aGlzIGFjcm9zcyBtdWx0aXBsZSB0aHJlYWRzIHVzaW5nCkBAIC0xNzYsNiArMTc4LDEx
IEBAIHN0cnVjdCBrdW5pdCB7CiAJICovCiAJYm9vbCBzdWNjZXNzOyAvKiBSZWFkIG9ubHkgYWZ0
ZXIgdGVzdF9jYXNlIGZpbmlzaGVzISAqLwogCXNwaW5sb2NrX3QgbG9jazsgLyogR2F1cmRzIGFs
bCBtdXRhYmxlIHRlc3Qgc3RhdGUuICovCisJLyoKKwkgKiBkZWF0aF90ZXN0IG1heSBiZSBib3Ro
IHNldCBhbmQgdW5zZXQgZnJvbSBtdWx0aXBsZSB0aHJlYWRzIGluIGEgdGVzdAorCSAqIGNhc2Uu
CisJICovCisJYm9vbCBkZWF0aF90ZXN0OyAvKiBQcm90ZWN0ZWQgYnkgbG9jay4gKi8KIAkvKgog
CSAqIEJlY2F1c2UgcmVzb3VyY2VzIGlzIGEgbGlzdCB0aGF0IG1heSBiZSB1cGRhdGVkIG11bHRp
cGxlIHRpbWVzICh3aXRoCiAJICogbmV3IHJlc291cmNlcykgZnJvbSBhbnkgdGhyZWFkIGFzc29j
aWF0ZWQgd2l0aCBhIHRlc3QgY2FzZSwgd2UgbXVzdApAQCAtMTg0LDYgKzE5MSwxMyBAQCBzdHJ1
Y3Qga3VuaXQgewogCXN0cnVjdCBsaXN0X2hlYWQgcmVzb3VyY2VzOyAvKiBQcm90ZWN0ZWQgYnkg
bG9jay4gKi8KIH07CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBrdW5pdF9zZXRfZGVhdGhfdGVzdChz
dHJ1Y3Qga3VuaXQgKnRlc3QsIGJvb2wgZGVhdGhfdGVzdCkKK3sKKwlzcGluX2xvY2soJnRlc3Qt
PmxvY2spOworCXRlc3QtPmRlYXRoX3Rlc3QgPSBkZWF0aF90ZXN0OworCXNwaW5fdW5sb2NrKCZ0
ZXN0LT5sb2NrKTsKK30KKwogdm9pZCBrdW5pdF9pbml0X3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0
LCBjb25zdCBjaGFyICpuYW1lKTsKIAogaW50IGt1bml0X3J1bl90ZXN0cyhzdHJ1Y3Qga3VuaXRf
c3VpdGUgKnN1aXRlKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUva3VuaXQvdHJ5LWNhdGNoLmggYi9p
bmNsdWRlL2t1bml0L3RyeS1jYXRjaC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAw
MDAwMDAwMDAuLjhhNDE0YTlhZjBiNjQKLS0tIC9kZXYvbnVsbAorKysgYi9pbmNsdWRlL2t1bml0
L3RyeS1jYXRjaC5oCkBAIC0wLDAgKzEsNjkgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBHUEwtMi4wICovCisvKgorICogQW4gQVBJIHRvIGFsbG93IGEgZnVuY3Rpb24sIHRoYXQgbWF5
IGZhaWwsIHRvIGJlIGV4ZWN1dGVkLCBhbmQgcmVjb3ZlciBpbiBhCisgKiBjb250cm9sbGVkIG1h
bm5lci4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2dsZSBMTEMuCisgKiBBdXRob3I6
IEJyZW5kYW4gSGlnZ2lucyA8YnJlbmRhbmhpZ2dpbnNAZ29vZ2xlLmNvbT4KKyAqLworCisjaWZu
ZGVmIF9LVU5JVF9UUllfQ0FUQ0hfSAorI2RlZmluZSBfS1VOSVRfVFJZX0NBVENIX0gKKworI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKK3R5cGVkZWYgdm9pZCAoKmt1bml0X3RyeV9jYXRjaF9m
dW5jX3QpKHZvaWQgKik7CisKK3N0cnVjdCBrdW5pdDsKKworLyoKKyAqIHN0cnVjdCBrdW5pdF90
cnlfY2F0Y2ggLSBwcm92aWRlcyBhIGdlbmVyaWMgd2F5IHRvIHJ1biBjb2RlIHdoaWNoIG1pZ2h0
IGZhaWwuCisgKiBAY29udGV4dDogdXNlZCB0byBwYXNzIHVzZXIgZGF0YSB0byB0aGUgdHJ5IGFu
ZCBjYXRjaCBmdW5jdGlvbnMuCisgKgorICoga3VuaXRfdHJ5X2NhdGNoIHByb3ZpZGVzIGEgZ2Vu
ZXJpYywgYXJjaGl0ZWN0dXJlIGluZGVwZW5kZW50IHdheSB0byBleGVjdXRlCisgKiBhbiBhcmJp
dHJhcnkgZnVuY3Rpb24gb2YgdHlwZSBrdW5pdF90cnlfY2F0Y2hfZnVuY190IHdoaWNoIG1heSBi
YWlsIG91dCBieQorICogY2FsbGluZyBrdW5pdF90cnlfY2F0Y2hfdGhyb3coKS4gSWYga3VuaXRf
dHJ5X2NhdGNoX3Rocm93KCkgaXMgY2FsbGVkLCBAdHJ5CisgKiBpcyBzdG9wcGVkIGF0IHRoZSBz
aXRlIG9mIGludm9jYXRpb24gYW5kIEBjYXRjaCBpcyBjYXRjaCBpcyBjYWxsZWQuCisgKgorICog
c3RydWN0IGt1bml0X3RyeV9jYXRjaCBwcm92aWRlcyBhIGdlbmVyaWMgaW50ZXJmYWNlIGZvciB0
aGUgZnVuY3Rpb25hbGl0eQorICogbmVlZGVkIHRvIGltcGxlbWVudCBrdW5pdC0+YWJvcnQoKSB3
aGljaCBpbiB0dXJuIGlzIG5lZWRlZCBmb3IgaW1wbGVtZW50aW5nCisgKiBhc3NlcnRpb25zLiBB
c3NlcnRpb25zIGFsbG93IHN0YXRpbmcgYSBwcmVjb25kaXRpb24gZm9yIGEgdGVzdCBzaW1wbGlm
eWluZworICogaG93IHRlc3QgY2FzZXMgYXJlIHdyaXR0ZW4gYW5kIHByZXNlbnRlZC4KKyAqCisg
KiBBc3NlcnRpb25zIGFyZSBsaWtlIGV4cGVjdGF0aW9ucywgZXhjZXB0IHRoZXkgYWJvcnQgKGNh
bGwKKyAqIGt1bml0X3RyeV9jYXRjaF90aHJvdygpKSB3aGVuIHRoZSBzcGVjaWZpZWQgY29uZGl0
aW9uIGlzIG5vdCBtZXQuIFRoaXMgaXMKKyAqIHVzZWZ1bCB3aGVuIHlvdSBsb29rIGF0IGEgdGVz
dCBjYXNlIGFzIGEgbG9naWNhbCBzdGF0ZW1lbnQgYWJvdXQgc29tZSBwaWVjZQorICogb2YgY29k
ZSwgd2hlcmUgYXNzZXJ0aW9ucyBhcmUgdGhlIHByZW1pc2VzIGZvciB0aGUgdGVzdCBjYXNlLCBh
bmQgdGhlCisgKiBjb25jbHVzaW9uIGlzIGEgc2V0IG9mIHByZWRpY2F0ZXMsIHJhdGhlciBleHBl
Y3RhdGlvbnMsIHRoYXQgbXVzdCBhbGwgYmUKKyAqIHRydWUuIElmIHlvdXIgcHJlbWlzZXMgYXJl
IHZpb2xhdGVkLCBpdCBkb2VzIG5vdCBtYWtlcyBzZW5zZSB0byBjb250aW51ZS4KKyAqLworc3Ry
dWN0IGt1bml0X3RyeV9jYXRjaCB7CisJLyogcHJpdmF0ZTogaW50ZXJuYWwgdXNlIG9ubHkuICov
CisJc3RydWN0IGt1bml0ICp0ZXN0OworCXN0cnVjdCBjb21wbGV0aW9uICp0cnlfY29tcGxldGlv
bjsKKwlpbnQgdHJ5X3Jlc3VsdDsKKwlrdW5pdF90cnlfY2F0Y2hfZnVuY190IHRyeTsKKwlrdW5p
dF90cnlfY2F0Y2hfZnVuY190IGNhdGNoOworCXZvaWQgKmNvbnRleHQ7Cit9OworCit2b2lkIGt1
bml0X3RyeV9jYXRjaF9pbml0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCwKKwkJ
CSAgc3RydWN0IGt1bml0ICp0ZXN0LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IHRyeSwK
KwkJCSAga3VuaXRfdHJ5X2NhdGNoX2Z1bmNfdCBjYXRjaCk7CisKK3ZvaWQga3VuaXRfdHJ5X2Nh
dGNoX3J1bihzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2gsIHZvaWQgKmNvbnRleHQp
OworCit2b2lkIF9fbm9yZXR1cm4ga3VuaXRfdHJ5X2NhdGNoX3Rocm93KHN0cnVjdCBrdW5pdF90
cnlfY2F0Y2ggKnRyeV9jYXRjaCk7CisKK3N0YXRpYyBpbmxpbmUgaW50IGt1bml0X3RyeV9jYXRj
aF9nZXRfcmVzdWx0KHN0cnVjdCBrdW5pdF90cnlfY2F0Y2ggKnRyeV9jYXRjaCkKK3sKKwlyZXR1
cm4gdHJ5X2NhdGNoLT50cnlfcmVzdWx0OworfQorCisvKgorICogRXhwb3NlZCBmb3IgdGVzdGlu
ZyBvbmx5LgorICovCit2b2lkIGt1bml0X2dlbmVyaWNfdHJ5X2NhdGNoX2luaXQoc3RydWN0IGt1
bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoKTsKKworI2VuZGlmIC8qIF9LVU5JVF9UUllfQ0FUQ0hf
SCAqLwpkaWZmIC0tZ2l0IGEva3VuaXQvTWFrZWZpbGUgYi9rdW5pdC9NYWtlZmlsZQppbmRleCA0
ZTQ2NDUwYmNiM2E4Li5jOTE3NmM5YzU3OGM2IDEwMDY0NAotLS0gYS9rdW5pdC9NYWtlZmlsZQor
KysgYi9rdW5pdC9NYWtlZmlsZQpAQCAtMSw2ICsxLDcgQEAKIG9iai0kKENPTkZJR19LVU5JVCkg
Kz0JCQl0ZXN0Lm8gXAogCQkJCQlzdHJpbmctc3RyZWFtLm8gXAotCQkJCQlhc3NlcnQubworCQkJ
CQlhc3NlcnQubyBcCisJCQkJCXRyeS1jYXRjaC5vCiAKIG9iai0kKENPTkZJR19LVU5JVF9URVNU
KSArPQkJc3RyaW5nLXN0cmVhbS10ZXN0Lm8KIApkaWZmIC0tZ2l0IGEva3VuaXQvdGVzdC5jIGIv
a3VuaXQvdGVzdC5jCmluZGV4IGU1MDgwYTJjNmIyOWMuLjk5NWNiNTNmZTRlZTkgMTAwNjQ0Ci0t
LSBhL2t1bml0L3Rlc3QuYworKysgYi9rdW5pdC90ZXN0LmMKQEAgLTcsMTMgKzcsMjYgQEAKICAq
LwogCiAjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQvZGVi
dWcuaD4KICNpbmNsdWRlIDxrdW5pdC90ZXN0Lmg+CisjaW5jbHVkZSA8a3VuaXQvdHJ5LWNhdGNo
Lmg+CiAKIHN0YXRpYyB2b2lkIGt1bml0X3NldF9mYWlsdXJlKHN0cnVjdCBrdW5pdCAqdGVzdCkK
IHsKIAlXUklURV9PTkNFKHRlc3QtPnN1Y2Nlc3MsIGZhbHNlKTsKIH0KIAorc3RhdGljIGJvb2wg
a3VuaXRfZ2V0X2RlYXRoX3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWJvb2wgZGVhdGhf
dGVzdDsKKworCXNwaW5fbG9jaygmdGVzdC0+bG9jayk7CisJZGVhdGhfdGVzdCA9IHRlc3QtPmRl
YXRoX3Rlc3Q7CisJc3Bpbl91bmxvY2soJnRlc3QtPmxvY2spOworCisJcmV0dXJuIGRlYXRoX3Rl
c3Q7Cit9CisKIHN0YXRpYyBpbnQga3VuaXRfdnByaW50a19lbWl0KGludCBsZXZlbCwgY29uc3Qg
Y2hhciAqZm10LCB2YV9saXN0IGFyZ3MpCiB7CiAJcmV0dXJuIHZwcmludGtfZW1pdCgwLCBsZXZl
bCwgTlVMTCwgMCwgZm10LCBhcmdzKTsKQEAgLTE1OCw2ICsxNzEsMjEgQEAgc3RhdGljIHZvaWQg
a3VuaXRfZmFpbChzdHJ1Y3Qga3VuaXQgKnRlc3QsIHN0cnVjdCBrdW5pdF9hc3NlcnQgKmFzc2Vy
dCkKIAlrdW5pdF9wcmludF9zdHJpbmdfc3RyZWFtKHRlc3QsIHN0cmVhbSk7CiB9CiAKK3ZvaWQg
X19ub3JldHVybiBrdW5pdF9hYm9ydChzdHJ1Y3Qga3VuaXQgKnRlc3QpCit7CisJa3VuaXRfc2V0
X2RlYXRoX3Rlc3QodGVzdCwgdHJ1ZSk7CisKKwlrdW5pdF90cnlfY2F0Y2hfdGhyb3coJnRlc3Qt
PnRyeV9jYXRjaCk7CisKKwkvKgorCSAqIFRocm93IGNvdWxkIG5vdCBhYm9ydCBmcm9tIHRlc3Qu
CisJICoKKwkgKiBYWFg6IHdlIHNob3VsZCBuZXZlciByZWFjaCB0aGlzIGxpbmUhIEFzIGt1bml0
X3RyeV9jYXRjaF90aHJvdyBpcworCSAqIG1hcmtlZCBfX25vcmV0dXJuLgorCSAqLworCVdBUk5f
T05DRSh0cnVlLCAiVGhyb3cgY291bGQgbm90IGFib3J0IGZyb20gdGVzdCFcbiIpOworfQorCiB2
b2lkIGt1bml0X2RvX2Fzc2VydGlvbihzdHJ1Y3Qga3VuaXQgKnRlc3QsCiAJCQlzdHJ1Y3Qga3Vu
aXRfYXNzZXJ0ICphc3NlcnQsCiAJCQlib29sIHBhc3MsCkBAIC0xNzYsNiArMjA0LDkgQEAgdm9p
ZCBrdW5pdF9kb19hc3NlcnRpb24oc3RydWN0IGt1bml0ICp0ZXN0LAogCWt1bml0X2ZhaWwodGVz
dCwgYXNzZXJ0KTsKIAogCXZhX2VuZChhcmdzKTsKKworCWlmIChhc3NlcnQtPnR5cGUgPT0gS1VO
SVRfQVNTRVJUSU9OKQorCQlrdW5pdF9hYm9ydCh0ZXN0KTsKIH0KIAogdm9pZCBrdW5pdF9pbml0
X3Rlc3Qoc3RydWN0IGt1bml0ICp0ZXN0LCBjb25zdCBjaGFyICpuYW1lKQpAQCAtMTg0LDM2ICsy
MTUsMTU0IEBAIHZvaWQga3VuaXRfaW5pdF90ZXN0KHN0cnVjdCBrdW5pdCAqdGVzdCwgY29uc3Qg
Y2hhciAqbmFtZSkKIAlJTklUX0xJU1RfSEVBRCgmdGVzdC0+cmVzb3VyY2VzKTsKIAl0ZXN0LT5u
YW1lID0gbmFtZTsKIAl0ZXN0LT5zdWNjZXNzID0gdHJ1ZTsKKwl0ZXN0LT5kZWF0aF90ZXN0ID0g
ZmFsc2U7CiB9CiAKIC8qCi0gKiBQZXJmb3JtcyBhbGwgbG9naWMgdG8gcnVuIGEgdGVzdCBjYXNl
LgorICogSW5pdGlhbGl6ZXMgYW5kIHJ1bnMgdGVzdCBjYXNlLiBEb2VzIG5vdCBjbGVhbiB1cCBv
ciBkbyBwb3N0IHZhbGlkYXRpb25zLgogICovCi1zdGF0aWMgdm9pZCBrdW5pdF9ydW5fY2FzZShz
dHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlLAotCQkJICAgc3RydWN0IGt1bml0X2Nhc2UgKnRlc3Rf
Y2FzZSkKK3N0YXRpYyB2b2lkIGt1bml0X3J1bl9jYXNlX2ludGVybmFsKHN0cnVjdCBrdW5pdCAq
dGVzdCwKKwkJCQkgICAgc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZSwKKwkJCQkgICAgc3RydWN0
IGt1bml0X2Nhc2UgKnRlc3RfY2FzZSkKIHsKLQlzdHJ1Y3Qga3VuaXQgdGVzdDsKLQotCWt1bml0
X2luaXRfdGVzdCgmdGVzdCwgdGVzdF9jYXNlLT5uYW1lKTsKLQogCWlmIChzdWl0ZS0+aW5pdCkg
ewogCQlpbnQgcmV0OwogCi0JCXJldCA9IHN1aXRlLT5pbml0KCZ0ZXN0KTsKKwkJcmV0ID0gc3Vp
dGUtPmluaXQodGVzdCk7CiAJCWlmIChyZXQpIHsKLQkJCWt1bml0X2VycigmdGVzdCwgImZhaWxl
ZCB0byBpbml0aWFsaXplOiAlZFxuIiwgcmV0KTsKLQkJCWt1bml0X3NldF9mYWlsdXJlKCZ0ZXN0
KTsKLQkJCXRlc3RfY2FzZS0+c3VjY2VzcyA9IHRlc3Quc3VjY2VzczsKKwkJCWt1bml0X2Vycih0
ZXN0LCAiZmFpbGVkIHRvIGluaXRpYWxpemU6ICVkXG4iLCByZXQpOworCQkJa3VuaXRfc2V0X2Zh
aWx1cmUodGVzdCk7CiAJCQlyZXR1cm47CiAJCX0KIAl9CiAKLQl0ZXN0X2Nhc2UtPnJ1bl9jYXNl
KCZ0ZXN0KTsKKwl0ZXN0X2Nhc2UtPnJ1bl9jYXNlKHRlc3QpOworfQorCitzdGF0aWMgdm9pZCBr
dW5pdF9jYXNlX2ludGVybmFsX2NsZWFudXAoc3RydWN0IGt1bml0ICp0ZXN0KQoreworCWt1bml0
X2NsZWFudXAodGVzdCk7Cit9CiAKKy8qCisgKiBQZXJmb3JtcyBwb3N0IHZhbGlkYXRpb25zIGFu
ZCBjbGVhbnVwIGFmdGVyIGEgdGVzdCBjYXNlIHdhcyBydW4uCisgKiBYWFg6IFNob3VsZCBPTkxZ
IEJFIENBTExFRCBBRlRFUiBrdW5pdF9ydW5fY2FzZV9pbnRlcm5hbCEKKyAqLworc3RhdGljIHZv
aWQga3VuaXRfcnVuX2Nhc2VfY2xlYW51cChzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkJICAgc3Ry
dWN0IGt1bml0X3N1aXRlICpzdWl0ZSkKK3sKIAlpZiAoc3VpdGUtPmV4aXQpCi0JCXN1aXRlLT5l
eGl0KCZ0ZXN0KTsKKwkJc3VpdGUtPmV4aXQodGVzdCk7CisKKwlrdW5pdF9jYXNlX2ludGVybmFs
X2NsZWFudXAodGVzdCk7Cit9CisKKy8qCisgKiBIYW5kbGVzIGFuIHVuZXhwZWN0ZWQgY3Jhc2gg
aW4gYSB0ZXN0IGNhc2UuCisgKi8KK3N0YXRpYyB2b2lkIGt1bml0X2hhbmRsZV90ZXN0X2NyYXNo
KHN0cnVjdCBrdW5pdCAqdGVzdCwKKwkJCQkgICBzdHJ1Y3Qga3VuaXRfc3VpdGUgKnN1aXRlLAor
CQkJCSAgIHN0cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCit7CisJa3VuaXRfZXJyKHRlc3Qs
ICJrdW5pdCB0ZXN0IGNhc2UgY3Jhc2hlZCEiKTsKKwkvKgorCSAqIFRPRE8oYnJlbmRhbmhpZ2dp
bnNAZ29vZ2xlLmNvbSk6IFRoaXMgcHJpbnRzIHRoZSBzdGFjayB0cmFjZSB1cAorCSAqIHRocm91
Z2ggdGhpcyBmcmFtZSwgbm90IHVwIHRvIHRoZSBmcmFtZSB0aGF0IGNhdXNlZCB0aGUgY3Jhc2gu
CisJICovCisJc2hvd19zdGFjayhOVUxMLCBOVUxMKTsKKworCWt1bml0X2Nhc2VfaW50ZXJuYWxf
Y2xlYW51cCh0ZXN0KTsKK30KKworc3RydWN0IGt1bml0X3RyeV9jYXRjaF9jb250ZXh0IHsKKwlz
dHJ1Y3Qga3VuaXQgKnRlc3Q7CisJc3RydWN0IGt1bml0X3N1aXRlICpzdWl0ZTsKKwlzdHJ1Y3Qg
a3VuaXRfY2FzZSAqdGVzdF9jYXNlOworfTsKKworc3RhdGljIHZvaWQga3VuaXRfdHJ5X3J1bl9j
YXNlKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaF9jb250ZXh0ICpjdHgg
PSBkYXRhOworCXN0cnVjdCBrdW5pdCAqdGVzdCA9IGN0eC0+dGVzdDsKKwlzdHJ1Y3Qga3VuaXRf
c3VpdGUgKnN1aXRlID0gY3R4LT5zdWl0ZTsKKwlzdHJ1Y3Qga3VuaXRfY2FzZSAqdGVzdF9jYXNl
ID0gY3R4LT50ZXN0X2Nhc2U7CisKKwkvKgorCSAqIGt1bml0X3J1bl9jYXNlX2ludGVybmFsIG1h
eSBlbmNvdW50ZXIgYSBmYXRhbCBlcnJvcjsgaWYgaXQgZG9lcywKKwkgKiBhYm9ydCB3aWxsIGJl
IGNhbGxlZCwgdGhpcyB0aHJlYWQgd2lsbCBleGl0LCBhbmQgZmluYWxseSB0aGUgcGFyZW50CisJ
ICogdGhyZWFkIHdpbGwgcmVzdW1lIGNvbnRyb2wgYW5kIGhhbmRsZSBhbnkgbmVjZXNzYXJ5IGNs
ZWFuIHVwLgorCSAqLworCWt1bml0X3J1bl9jYXNlX2ludGVybmFsKHRlc3QsIHN1aXRlLCB0ZXN0
X2Nhc2UpOworCS8qIFRoaXMgbGluZSBtYXkgbmV2ZXIgYmUgcmVhY2hlZC4gKi8KKwlrdW5pdF9y
dW5fY2FzZV9jbGVhbnVwKHRlc3QsIHN1aXRlKTsKK30KKworc3RhdGljIHZvaWQga3VuaXRfY2F0
Y2hfcnVuX2Nhc2Uodm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoX2NvbnRl
eHQgKmN0eCA9IGRhdGE7CisJc3RydWN0IGt1bml0ICp0ZXN0ID0gY3R4LT50ZXN0OworCXN0cnVj
dCBrdW5pdF9zdWl0ZSAqc3VpdGUgPSBjdHgtPnN1aXRlOworCXN0cnVjdCBrdW5pdF9jYXNlICp0
ZXN0X2Nhc2UgPSBjdHgtPnRlc3RfY2FzZTsKKwlpbnQgdHJ5X2V4aXRfY29kZSA9IGt1bml0X3Ry
eV9jYXRjaF9nZXRfcmVzdWx0KCZ0ZXN0LT50cnlfY2F0Y2gpOworCisJaWYgKHRyeV9leGl0X2Nv
ZGUpIHsKKwkJa3VuaXRfc2V0X2ZhaWx1cmUodGVzdCk7CisJCS8qCisJCSAqIFRlc3QgY2FzZSBj
b3VsZCBub3QgZmluaXNoLCB3ZSBoYXZlIG5vIGlkZWEgd2hhdCBzdGF0ZSBpdCBpcworCQkgKiBp
biwgc28gZG9uJ3QgZG8gY2xlYW4gdXAuCisJCSAqLworCQlpZiAodHJ5X2V4aXRfY29kZSA9PSAt
RVRJTUVET1VUKQorCQkJa3VuaXRfZXJyKHRlc3QsICJ0ZXN0IGNhc2UgdGltZWQgb3V0XG4iKTsK
KwkJLyoKKwkJICogVW5rbm93biBpbnRlcm5hbCBlcnJvciBvY2N1cnJlZCBwcmV2ZW50aW5nIHRl
c3QgY2FzZSBmcm9tCisJCSAqIHJ1bm5pbmcsIHNvIHRoZXJlIGlzIG5vdGhpbmcgdG8gY2xlYW4g
dXAuCisJCSAqLworCQllbHNlCisJCQlrdW5pdF9lcnIodGVzdCwgImludGVybmFsIGVycm9yIG9j
Y3VycmVkIHByZXZlbnRpbmcgdGVzdCBjYXNlIGZyb20gcnVubmluZzogJWRcbiIsCisJCQkJICB0
cnlfZXhpdF9jb2RlKTsKKwkJcmV0dXJuOworCX0KKworCWlmIChrdW5pdF9nZXRfZGVhdGhfdGVz
dCh0ZXN0KSkgeworCQkvKgorCQkgKiBFWFBFQ1RFRCBERUFUSDoga3VuaXRfcnVuX2Nhc2VfaW50
ZXJuYWwgZW5jb3VudGVyZWQKKwkJICogYW50aWNpcGF0ZWQgZmF0YWwgZXJyb3IuIEV2ZXJ5dGhp
bmcgc2hvdWxkIGJlIGluIGEgc2FmZQorCQkgKiBzdGF0ZS4KKwkJICovCisJCWt1bml0X3J1bl9j
YXNlX2NsZWFudXAodGVzdCwgc3VpdGUpOworCX0gZWxzZSB7CisJCS8qCisJCSAqIFVORVhQRUNU
RUQgREVBVEg6IGt1bml0X3J1bl9jYXNlX2ludGVybmFsIGVuY291bnRlcmVkIGFuCisJCSAqIHVu
YW50aWNpcGF0ZWQgZmF0YWwgZXJyb3IuIFdlIGhhdmUgbm8gaWRlYSB3aGF0IHRoZSBzdGF0ZSBv
ZgorCQkgKiB0aGUgdGVzdCBjYXNlIGlzIGluLgorCQkgKi8KKwkJa3VuaXRfaGFuZGxlX3Rlc3Rf
Y3Jhc2godGVzdCwgc3VpdGUsIHRlc3RfY2FzZSk7CisJCWt1bml0X3NldF9mYWlsdXJlKHRlc3Qp
OworCX0KK30KKworLyoKKyAqIFBlcmZvcm1zIGFsbCBsb2dpYyB0byBydW4gYSB0ZXN0IGNhc2Uu
IEl0IGFsc28gY2F0Y2hlcyBtb3N0IGVycm9ycyB0aGF0CisgKiBvY2N1cnMgaW4gYSB0ZXN0IGNh
c2UgYW5kIHJlcG9ydHMgdGhlbSBhcyBmYWlsdXJlcy4KKyAqLworc3RhdGljIHZvaWQga3VuaXRf
cnVuX2Nhc2VfY2F0Y2hfZXJyb3JzKHN0cnVjdCBrdW5pdF9zdWl0ZSAqc3VpdGUsCisJCQkJCXN0
cnVjdCBrdW5pdF9jYXNlICp0ZXN0X2Nhc2UpCit7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaF9j
b250ZXh0IGNvbnRleHQ7CisJc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoOworCXN0
cnVjdCBrdW5pdCB0ZXN0OworCisJa3VuaXRfaW5pdF90ZXN0KCZ0ZXN0LCB0ZXN0X2Nhc2UtPm5h
bWUpOworCXRyeV9jYXRjaCA9ICZ0ZXN0LnRyeV9jYXRjaDsKIAotCWt1bml0X2NsZWFudXAoJnRl
c3QpOworCWt1bml0X3RyeV9jYXRjaF9pbml0KHRyeV9jYXRjaCwKKwkJCSAgICAgJnRlc3QsCisJ
CQkgICAgIGt1bml0X3RyeV9ydW5fY2FzZSwKKwkJCSAgICAga3VuaXRfY2F0Y2hfcnVuX2Nhc2Up
OworCWNvbnRleHQudGVzdCA9ICZ0ZXN0OworCWNvbnRleHQuc3VpdGUgPSBzdWl0ZTsKKwljb250
ZXh0LnRlc3RfY2FzZSA9IHRlc3RfY2FzZTsKKwlrdW5pdF90cnlfY2F0Y2hfcnVuKHRyeV9jYXRj
aCwgJmNvbnRleHQpOwogCiAJdGVzdF9jYXNlLT5zdWNjZXNzID0gdGVzdC5zdWNjZXNzOwogfQpA
QCAtMjI2LDcgKzM3NSw3IEBAIGludCBrdW5pdF9ydW5fdGVzdHMoc3RydWN0IGt1bml0X3N1aXRl
ICpzdWl0ZSkKIAlrdW5pdF9wcmludF9zdWJ0ZXN0X3N0YXJ0KHN1aXRlKTsKIAogCWZvciAodGVz
dF9jYXNlID0gc3VpdGUtPnRlc3RfY2FzZXM7IHRlc3RfY2FzZS0+cnVuX2Nhc2U7IHRlc3RfY2Fz
ZSsrKSB7Ci0JCWt1bml0X3J1bl9jYXNlKHN1aXRlLCB0ZXN0X2Nhc2UpOworCQlrdW5pdF9ydW5f
Y2FzZV9jYXRjaF9lcnJvcnMoc3VpdGUsIHRlc3RfY2FzZSk7CiAJCWt1bml0X3ByaW50X3Rlc3Rf
Y2FzZV9va19ub3Rfb2sodGVzdF9jYXNlLCB0ZXN0X2Nhc2VfY291bnQrKyk7CiAJfQogCmRpZmYg
LS1naXQgYS9rdW5pdC90cnktY2F0Y2guYyBiL2t1bml0L3RyeS1jYXRjaC5jCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMDAuLmRlNTgwZjA3NDM4N2IKLS0tIC9kZXYvbnVs
bAorKysgYi9rdW5pdC90cnktY2F0Y2guYwpAQCAtMCwwICsxLDk1IEBACisvLyBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMAorLyoKKyAqIEFuIEFQSSB0byBhbGxvdyBhIGZ1bmN0aW9u
LCB0aGF0IG1heSBmYWlsLCB0byBiZSBleGVjdXRlZCwgYW5kIHJlY292ZXIgaW4gYQorICogY29u
dHJvbGxlZCBtYW5uZXIuCisgKgorICogQ29weXJpZ2h0IChDKSAyMDE5LCBHb29nbGUgTExDLgor
ICogQXV0aG9yOiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+Cisg
Ki8KKworI2luY2x1ZGUgPGt1bml0L3RyeS1jYXRjaC5oPgorI2luY2x1ZGUgPGt1bml0L3Rlc3Qu
aD4KKyNpbmNsdWRlIDxsaW51eC9jb21wbGV0aW9uLmg+CisjaW5jbHVkZSA8bGludXgva3RocmVh
ZC5oPgorCit2b2lkIF9fbm9yZXR1cm4ga3VuaXRfdHJ5X2NhdGNoX3Rocm93KHN0cnVjdCBrdW5p
dF90cnlfY2F0Y2ggKnRyeV9jYXRjaCkKK3sKKwl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAtRUZB
VUxUOworCWNvbXBsZXRlX2FuZF9leGl0KHRyeV9jYXRjaC0+dHJ5X2NvbXBsZXRpb24sIC1FRkFV
TFQpOworfQorCitzdGF0aWMgaW50IGt1bml0X2dlbmVyaWNfcnVuX3RocmVhZGZuX2FkYXB0ZXIo
dm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qga3VuaXRfdHJ5X2NhdGNoICp0cnlfY2F0Y2ggPSBkYXRh
OworCisJdHJ5X2NhdGNoLT50cnkodHJ5X2NhdGNoLT5jb250ZXh0KTsKKworCWNvbXBsZXRlX2Fu
ZF9leGl0KHRyeV9jYXRjaC0+dHJ5X2NvbXBsZXRpb24sIDApOworfQorCit2b2lkIGt1bml0X3Ry
eV9jYXRjaF9ydW4oc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoLCB2b2lkICpjb250
ZXh0KQoreworCURFQ0xBUkVfQ09NUExFVElPTl9PTlNUQUNLKHRyeV9jb21wbGV0aW9uKTsKKwlz
dHJ1Y3Qga3VuaXQgKnRlc3QgPSB0cnlfY2F0Y2gtPnRlc3Q7CisJc3RydWN0IHRhc2tfc3RydWN0
ICp0YXNrX3N0cnVjdDsKKwlpbnQgZXhpdF9jb2RlLCBzdGF0dXM7CisKKwl0cnlfY2F0Y2gtPmNv
bnRleHQgPSBjb250ZXh0OworCXRyeV9jYXRjaC0+dHJ5X2NvbXBsZXRpb24gPSAmdHJ5X2NvbXBs
ZXRpb247CisJdHJ5X2NhdGNoLT50cnlfcmVzdWx0ID0gMDsKKwl0YXNrX3N0cnVjdCA9IGt0aHJl
YWRfcnVuKGt1bml0X2dlbmVyaWNfcnVuX3RocmVhZGZuX2FkYXB0ZXIsCisJCQkJICB0cnlfY2F0
Y2gsCisJCQkJICAia3VuaXRfdHJ5X2NhdGNoX3RocmVhZCIpOworCWlmIChJU19FUlIodGFza19z
dHJ1Y3QpKSB7CisJCXRyeV9jYXRjaC0+Y2F0Y2godHJ5X2NhdGNoLT5jb250ZXh0KTsKKwkJcmV0
dXJuOworCX0KKworCS8qCisJICogVE9ETyhicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tKTogV2Ug
c2hvdWxkIHByb2JhYmx5IGhhdmUgc29tZSB0eXBlIG9mCisJICogdmFyaWFibGUgdGltZW91dCBo
ZXJlLiBUaGUgb25seSBxdWVzdGlvbiBpcyB3aGF0IHRoYXQgdGltZW91dCB2YWx1ZQorCSAqIHNo
b3VsZCBiZS4KKwkgKgorCSAqIFRoZSBpbnRlbnRpb24gaGFzIGFsd2F5cyBiZWVuLCBhdCBzb21l
IHBvaW50LCB0byBiZSBhYmxlIHRvIGxhYmVsCisJICogdGVzdHMgd2l0aCBzb21lIHR5cGUgb2Yg
c2l6ZSBidWNrZXQgKHVuaXQvc21hbGwsIGludGVncmF0aW9uL21lZGl1bSwKKwkgKiBsYXJnZS9z
eXN0ZW0vZW5kLXRvLWVuZCwgZXRjKSwgd2hlcmUgZWFjaCBzaXplIGJ1Y2tldCB3b3VsZCBnZXQg
YQorCSAqIGRlZmF1bHQgdGltZW91dCB2YWx1ZSBraW5kIG9mIGxpa2Ugd2hhdCBCYXplbCBkb2Vz
OgorCSAqIGh0dHBzOi8vZG9jcy5iYXplbC5idWlsZC92ZXJzaW9ucy9tYXN0ZXIvYmUvY29tbW9u
LWRlZmluaXRpb25zLmh0bWwjdGVzdC5zaXplCisJICogVGhlcmUgaXMgc3RpbGwgc29tZSBkZWJh
dGUgdG8gYmUgaGFkIG9uIGV4YWN0bHkgaG93IHdlIGRvIHRoaXMuIChGb3IKKwkgKiBvbmUsIHdl
IHByb2JhYmx5IHdhbnQgdG8gaGF2ZSBzb21lIHNvcnQgb2YgdGVzdCBydW5uZXIgbGV2ZWwKKwkg
KiB0aW1lb3V0LikKKwkgKgorCSAqIEZvciBtb3JlIGJhY2tncm91bmQgb24gdGhpcyB0b3BpYywg
c2VlOgorCSAqIGh0dHBzOi8vbWlrZS1ibGFuZC5jb20vMjAxMS8xMS8wMS9zbWFsbC1tZWRpdW0t
bGFyZ2UuaHRtbAorCSAqLworCXN0YXR1cyA9IHdhaXRfZm9yX2NvbXBsZXRpb25fdGltZW91dCgm
dHJ5X2NvbXBsZXRpb24sCisJCQkJCSAgICAgMzAwICogTVNFQ19QRVJfU0VDKTsgLyogNSBtaW4g
Ki8KKwlpZiAoc3RhdHVzIDwgMCkgeworCQlrdW5pdF9lcnIodGVzdCwgInRyeSB0aW1lZCBvdXRc
biIpOworCQl0cnlfY2F0Y2gtPnRyeV9yZXN1bHQgPSAtRVRJTUVET1VUOworCX0KKworCWV4aXRf
Y29kZSA9IHRyeV9jYXRjaC0+dHJ5X3Jlc3VsdDsKKworCWlmICghZXhpdF9jb2RlKQorCQlyZXR1
cm47CisKKwlpZiAoZXhpdF9jb2RlID09IC1FRkFVTFQpCisJCXRyeV9jYXRjaC0+dHJ5X3Jlc3Vs
dCA9IDA7CisJZWxzZSBpZiAoZXhpdF9jb2RlID09IC1FSU5UUikKKwkJa3VuaXRfZXJyKHRlc3Qs
ICJ3YWtlX3VwX3Byb2Nlc3MoKSB3YXMgbmV2ZXIgY2FsbGVkXG4iKTsKKwllbHNlIGlmIChleGl0
X2NvZGUpCisJCWt1bml0X2Vycih0ZXN0LCAiVW5rbm93biBlcnJvcjogJWRcbiIsIGV4aXRfY29k
ZSk7CisKKwl0cnlfY2F0Y2gtPmNhdGNoKHRyeV9jYXRjaC0+Y29udGV4dCk7Cit9CisKK3ZvaWQg
a3VuaXRfdHJ5X2NhdGNoX2luaXQoc3RydWN0IGt1bml0X3RyeV9jYXRjaCAqdHJ5X2NhdGNoLAor
CQkJICBzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkgIGt1bml0X3RyeV9jYXRjaF9mdW5jX3QgdHJ5
LAorCQkJICBrdW5pdF90cnlfY2F0Y2hfZnVuY190IGNhdGNoKQoreworCXRyeV9jYXRjaC0+dGVz
dCA9IHRlc3Q7CisJdHJ5X2NhdGNoLT50cnkgPSB0cnk7CisJdHJ5X2NhdGNoLT5jYXRjaCA9IGNh
dGNoOworfQotLSAKMi4yMy4wLnJjMS4xNTMuZ2RlZWQ4MDMzMGYtZ29vZwoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlz
dApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
