Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6683971EF0
	for <lists+dri-devel@lfdr.de>; Tue, 23 Jul 2019 20:19:12 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0A29A6E33C;
	Tue, 23 Jul 2019 18:19:10 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-vk1-xa49.google.com (mail-vk1-xa49.google.com
 [IPv6:2607:f8b0:4864:20::a49])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E38B66E329
 for <dri-devel@lists.freedesktop.org>; Tue, 23 Jul 2019 17:59:06 +0000 (UTC)
Received: by mail-vk1-xa49.google.com with SMTP id b85so19463112vke.22
 for <dri-devel@lists.freedesktop.org>; Tue, 23 Jul 2019 10:59:06 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:message-id:mime-version:subject:from:to:cc;
 bh=lfK9PM0iV5015ssJsOLZ75ytHguHzFWZ5l8GKq/s9nM=;
 b=PxaMNhe0YsvI5wufzJh00d+G5xoCZ8jDFF2ZcfP1+5kK4WvQKG2u9qp4uhL3gOgyyo
 k6kVxxxDLFYEyDPU9wmJQMgfKBm2fRmFKrxNHHNxjjSmdc3fR83amkNDrSL2Lam+zWlE
 hNzDhzvE0Zw/6bgw+LFBdbHMxPzTehrmwmFM+50onMJCrlBhLalBi1nXtM5WlQUY7K30
 C191DEuvqkZIOHxbjwRai3Nvp89cO2oSEXeXla1v6Z3mfODdpnpJDiuvPBLSTf7mDsh2
 9zi4JUqUjICZjXrgZHTkSBuozdSU+VM213bqjbcLA1EUUHt3rfiO863Q5pG7y5tLeeCa
 Wa7w==
X-Gm-Message-State: APjAAAV7NDQxEV9mnQYSn/Sjax2L8yEnu+ys4QGVQOsSAuFukWQgabA/
 Dfl3xnmgiriJRoOvBI/oFuWxm/zo2496C3b0
X-Google-Smtp-Source: APXvYqx44n2YStIzN7NuQPeuSz18+mXOfADDN+N4juRQa2rUox8ntqpSq1g7X9IGauGCI+ZpTov23IwQacPu4RVg
X-Received: by 2002:ab0:751a:: with SMTP id m26mr38816428uap.11.1563904745676; 
 Tue, 23 Jul 2019 10:59:05 -0700 (PDT)
Date: Tue, 23 Jul 2019 19:58:37 +0200
Message-Id: <cover.1563904656.git.andreyknvl@google.com>
Mime-Version: 1.0
X-Mailer: git-send-email 2.22.0.709.g102302147b-goog
Subject: [PATCH v19 00/15] arm64: untag user pointers passed to the kernel
From: Andrey Konovalov <andreyknvl@google.com>
To: linux-arm-kernel@lists.infradead.org, linux-mm@kvack.org, 
 linux-kernel@vger.kernel.org, amd-gfx@lists.freedesktop.org, 
 dri-devel@lists.freedesktop.org, linux-rdma@vger.kernel.org, 
 linux-media@vger.kernel.org, kvm@vger.kernel.org, 
 linux-kselftest@vger.kernel.org
X-Mailman-Approved-At: Tue, 23 Jul 2019 18:19:08 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:message-id:mime-version:subject:from:to:cc;
 bh=lfK9PM0iV5015ssJsOLZ75ytHguHzFWZ5l8GKq/s9nM=;
 b=gIhYgpLvYM8o2KSJRf0YwXAVpkgjoQoThy0HxmludelyQCLjm/rGVSvnbgRzXJr8rk
 N6XtPW6cRSqSSKHsQzpdLAgcRvfxywBBmMYHY53hQ59/3TvCtodXMUuNr3kRDn3ng4Hs
 C9BJGR7anugJtiZIzE0R4BGLfoM+wh/fhoxHmMV/hLTqNemnVDXlXp/8iUO4iShSPjhh
 U6GGrUsXDmv4xRIxZ9qveFsQFu2JLpzwlZP+o4icwqsYORDobmAXm0GA60FFFk55RnBA
 Ic33wBwpclZUiJKwDMmP8xYatoQm0//62OrW8s7AgiMzNdLAGSNKnAWOzqpU1gCOm+/b
 qenw==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, Szabolcs Nagy <Szabolcs.Nagy@arm.com>,
 Catalin Marinas <catalin.marinas@arm.com>, Will Deacon <will.deacon@arm.com>,
 Kostya Serebryany <kcc@google.com>, Khalid Aziz <khalid.aziz@oracle.com>,
 Felix Kuehling <Felix.Kuehling@amd.com>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 Christoph Hellwig <hch@infradead.org>, Jason Gunthorpe <jgg@ziepe.ca>,
 Dave Martin <Dave.Martin@arm.com>, Evgeniy Stepanov <eugenis@google.com>,
 Kevin Brodsky <kevin.brodsky@arm.com>, Kees Cook <keescook@chromium.org>,
 Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Andrey Konovalov <andreyknvl@google.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>, Dmitry Vyukov <dvyukov@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Yishai Hadas <yishaih@mellanox.com>,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, enh <enh@google.com>,
 Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

PT09IE92ZXJ2aWV3Cgphcm02NCBoYXMgYSBmZWF0dXJlIGNhbGxlZCBUb3AgQnl0ZSBJZ25vcmUs
IHdoaWNoIGFsbG93cyB0byBlbWJlZCBwb2ludGVyCnRhZ3MgaW50byB0aGUgdG9wIGJ5dGUgb2Yg
ZWFjaCBwb2ludGVyLiBVc2Vyc3BhY2UgcHJvZ3JhbXMgKHN1Y2ggYXMKSFdBU2FuLCBhIG1lbW9y
eSBkZWJ1Z2dpbmcgdG9vbCBbMV0pIG1pZ2h0IHVzZSB0aGlzIGZlYXR1cmUgYW5kIHBhc3MKdGFn
Z2VkIHVzZXIgcG9pbnRlcnMgdG8gdGhlIGtlcm5lbCB0aHJvdWdoIHN5c2NhbGxzIG9yIG90aGVy
IGludGVyZmFjZXMuCgpSaWdodCBub3cgdGhlIGtlcm5lbCBpcyBhbHJlYWR5IGFibGUgdG8gaGFu
ZGxlIHVzZXIgZmF1bHRzIHdpdGggdGFnZ2VkCnBvaW50ZXJzLCBkdWUgdG8gdGhlc2UgcGF0Y2hl
czoKCjEuIDgxY2RkZDY1ICgiYXJtNjQ6IHRyYXBzOiBmaXggdXNlcnNwYWNlIGNhY2hlIG1haW50
ZW5hbmNlIGVtdWxhdGlvbiBvbiBhCiAgICAgICAgICAgICB0YWdnZWQgcG9pbnRlciIpCjIuIDdk
Y2Q5ZGQ4ICgiYXJtNjQ6IGh3X2JyZWFrcG9pbnQ6IGZpeCB3YXRjaHBvaW50IG1hdGNoaW5nIGZv
ciB0YWdnZWQKCSAgICAgIHBvaW50ZXJzIikKMy4gMjc2ZTkzMjcgKCJhcm02NDogZW50cnk6IGlt
cHJvdmUgZGF0YSBhYm9ydCBoYW5kbGluZyBvZiB0YWdnZWQKCSAgICAgIHBvaW50ZXJzIikKClRo
aXMgcGF0Y2hzZXQgZXh0ZW5kcyB0YWdnZWQgcG9pbnRlciBzdXBwb3J0IHRvIHN5c2NhbGwgYXJn
dW1lbnRzLgoKQXMgcGVyIHRoZSBwcm9wb3NlZCBBQkkgY2hhbmdlIFszXSwgdGFnZ2VkIHBvaW50
ZXJzIGFyZSBvbmx5IGFsbG93ZWQgdG8gYmUKcGFzc2VkIHRvIHN5c2NhbGxzIHdoZW4gdGhleSBw
b2ludCB0byBtZW1vcnkgcmFuZ2VzIG9idGFpbmVkIGJ5IGFub255bW91cwptbWFwKCkgb3Igc2Jy
aygpIChzZWUgdGhlIHBhdGNoc2V0IFszXSBmb3IgbW9yZSBkZXRhaWxzKS4KCkZvciBub24tbWVt
b3J5IHN5c2NhbGxzIHRoaXMgaXMgZG9uZSBieSB1bnRhZ2luZyB1c2VyIHBvaW50ZXJzIHdoZW4g
dGhlCmtlcm5lbCBwZXJmb3JtcyBwb2ludGVyIGNoZWNraW5nIHRvIGZpbmQgb3V0IHdoZXRoZXIg
dGhlIHBvaW50ZXIgY29tZXMKZnJvbSB1c2Vyc3BhY2UgKG1vc3Qgbm90YWJseSBpbiBhY2Nlc3Nf
b2spLiBUaGUgdW50YWdnaW5nIGlzIGRvbmUgb25seQp3aGVuIHRoZSBwb2ludGVyIGlzIGJlaW5n
IGNoZWNrZWQsIHRoZSB0YWcgaXMgcHJlc2VydmVkIGFzIHRoZSBwb2ludGVyCm1ha2VzIGl0cyB3
YXkgdGhyb3VnaCB0aGUga2VybmVsIGFuZCBzdGF5cyB0YWdnZWQgd2hlbiB0aGUga2VybmVsCmRl
cmVmZXJlbmNlcyB0aGUgcG9pbnRlciB3aGVuIHBlcmZvbWluZyB1c2VyIG1lbW9yeSBhY2Nlc3Nl
cy4KClRoZSBtbWFwIGFuZCBtcmVtYXAgKG9ubHkgbmV3X2FkZHIpIHN5c2NhbGxzIGRvIG5vdCBj
dXJyZW50bHkgYWNjZXB0CnRhZ2dlZCBhZGRyZXNzZXMuIEFyY2hpdGVjdHVyZXMgbWF5IGludGVy
cHJldCB0aGUgdGFnIGFzIGEgYmFja2dyb3VuZApjb2xvdXIgZm9yIHRoZSBjb3JyZXNwb25kaW5n
IHZtYS4KCk90aGVyIG1lbW9yeSBzeXNjYWxscyAobXByb3RlY3QsIGV0Yy4pIGRvbid0IGRvIHVz
ZXIgbWVtb3J5IGFjY2Vzc2VzIGJ1dApyYXRoZXIgZGVhbCB3aXRoIG1lbW9yeSByYW5nZXMsIGFu
ZCB1bnRhZ2dlZCBwb2ludGVycyBhcmUgYmV0dGVyIHN1aXRlZCB0bwpkZXNjcmliZSBtZW1vcnkg
cmFuZ2VzIGludGVybmFsbHkuIFRodXMgZm9yIG1lbW9yeSBzeXNjYWxscyB3ZSB1bnRhZwpwb2lu
dGVycyBjb21wbGV0ZWx5IHdoZW4gdGhleSBlbnRlciB0aGUga2VybmVsLgoKPT09IE90aGVyIGFw
cHJvYWNoZXMKCk9uZSBvZiB0aGUgYWx0ZXJuYXRpdmUgYXBwcm9hY2hlcyB0byB1bnRhZ2dpbmcg
dGhhdCB3YXMgY29uc2lkZXJlZCBpcyB0bwpjb21wbGV0ZWx5IHN0cmlwIHRoZSBwb2ludGVyIHRh
ZyBhcyB0aGUgcG9pbnRlciBlbnRlcnMgdGhlIGtlcm5lbCB3aXRoCnNvbWUga2luZCBvZiBhIHN5
c2NhbGwgd3JhcHBlciwgYnV0IHRoYXQgd29uJ3Qgd29yayB3aXRoIHRoZSBjb3VudGxlc3MKbnVt
YmVyIG9mIGRpZmZlcmVudCBpb2N0bCBjYWxscy4gV2l0aCB0aGlzIGFwcHJvYWNoIHdlIHdvdWxk
IG5lZWQgYSBjdXN0b20Kd3JhcHBlciBmb3IgZWFjaCBpb2N0bCB2YXJpYXRpb24sIHdoaWNoIGRv
ZXNuJ3Qgc2VlbSBwcmFjdGljYWwuCgpBbiBhbHRlcm5hdGl2ZSBhcHByb2FjaCB0byB1bnRhZ2dp
bmcgcG9pbnRlcnMgaW4gbWVtb3J5IHN5c2NhbGxzIHByb2xvZ3VlcwppcyB0byBpbnNwZWFkIGFs
bG93IHRhZ2dlZCBwb2ludGVycyB0byBiZSBwYXNzZWQgdG8gZmluZF92bWEoKSAoYW5kIG90aGVy
CnZtYSByZWxhdGVkIGZ1bmN0aW9ucykgYW5kIHVudGFnIHRoZW0gdGhlcmUuIFVuZm9ydHVuYXRl
bHksIGEgbG90IG9mCmZpbmRfdm1hKCkgY2FsbGVycyB0aGVuIGNvbXBhcmUgb3Igc3VidHJhY3Qg
dGhlIHJldHVybmVkIHZtYSBzdGFydCBhbmQgZW5kCmZpZWxkcyBhZ2FpbnN0IHRoZSBwb2ludGVy
IHRoYXQgd2FzIGJlaW5nIHNlYXJjaGVkLiBUaHVzIHRoaXMgYXBwcm9hY2gKd291bGQgc3RpbGwg
cmVxdWlyZSBjaGFuZ2luZyBhbGwgZmluZF92bWEoKSBjYWxsZXJzLgoKPT09IFRlc3RpbmcKClRo
ZSBmb2xsb3dpbmcgdGVzdGluZyBhcHByb2FjaGVzIGhhcyBiZWVuIHRha2VuIHRvIGZpbmQgcG90
ZW50aWFsIGlzc3Vlcwp3aXRoIHVzZXIgcG9pbnRlciB1bnRhZ2dpbmc6CgoxLiBTdGF0aWMgdGVz
dGluZyAod2l0aCBzcGFyc2UgWzJdIGFuZCBzZXBhcmF0ZWx5IHdpdGggYSBjdXN0b20gc3RhdGlj
CiAgIGFuYWx5emVyIGJhc2VkIG9uIENsYW5nKSB0byB0cmFjayBjYXN0cyBvZiBfX3VzZXIgcG9p
bnRlcnMgdG8gaW50ZWdlcgogICB0eXBlcyB0byBmaW5kIHBsYWNlcyB3aGVyZSB1bnRhZ2dpbmcg
bmVlZHMgdG8gYmUgZG9uZS4KCjIuIFN0YXRpYyB0ZXN0aW5nIHdpdGggZ3JlcCB0byBmaW5kIHBh
cnRzIG9mIHRoZSBrZXJuZWwgdGhhdCBjYWxsCiAgIGZpbmRfdm1hKCkgKGFuZCBvdGhlciBzaW1p
bGFyIGZ1bmN0aW9ucykgb3IgZGlyZWN0bHkgY29tcGFyZSBhZ2FpbnN0CiAgIHZtX3N0YXJ0L3Zt
X2VuZCBmaWVsZHMgb2Ygdm1hLgoKMy4gU3RhdGljIHRlc3Rpbmcgd2l0aCBncmVwIHRvIGZpbmQg
cGFydHMgb2YgdGhlIGtlcm5lbCB0aGF0IGNvbXBhcmUKICAgdXNlciBwb2ludGVycyB3aXRoIFRB
U0tfU0laRSBvciBvdGhlciBzaW1pbGFyIGNvbnN0cyBhbmQgbWFjcm9zLgoKNC4gRHluYW1pYyB0
ZXN0aW5nOiBhZGRpbmcgQlVHX09OKGhhc190YWcoYWRkcikpIHRvIGZpbmRfdm1hKCkgYW5kIHJ1
bm5pbmcKICAgYSBtb2RpZmllZCBzeXprYWxsZXIgdmVyc2lvbiB0aGF0IHBhc3NlcyB0YWdnZWQg
cG9pbnRlcnMgdG8gdGhlIGtlcm5lbC4KCkJhc2VkIG9uIHRoZSByZXN1bHRzIG9mIHRoZSB0ZXN0
aW5nIHRoZSByZXF1cmllZCBwYXRjaGVzIGhhdmUgYmVlbiBhZGRlZAp0byB0aGUgcGF0Y2hzZXQu
Cgo9PT0gTm90ZXMKClRoaXMgcGF0Y2hzZXQgaXMgbWVhbnQgdG8gYmUgbWVyZ2VkIHRvZ2V0aGVy
IHdpdGggImFybTY0IHJlbGF4ZWQgQUJJIiBbM10uCgpUaGlzIHBhdGNoc2V0IGlzIGEgcHJlcmVx
dWlzaXRlIGZvciBBUk0ncyBtZW1vcnkgdGFnZ2luZyBoYXJkd2FyZSBmZWF0dXJlCnN1cHBvcnQg
WzRdLgoKVGhpcyBwYXRjaHNldCBoYXMgYmVlbiBtZXJnZWQgaW50byB0aGUgUGl4ZWwgMiAmIDMg
a2VybmVsIHRyZWVzIGFuZCBpcwpub3cgYmVpbmcgdXNlZCB0byBlbmFibGUgdGVzdGluZyBvZiBQ
aXhlbCBwaG9uZXMgd2l0aCBIV0FTYW4uCgpUaGFua3MhCgpbMV0gaHR0cDovL2NsYW5nLmxsdm0u
b3JnL2RvY3MvSGFyZHdhcmVBc3Npc3RlZEFkZHJlc3NTYW5pdGl6ZXJEZXNpZ24uaHRtbAoKWzJd
IGh0dHBzOi8vZ2l0aHViLmNvbS9sdWN2b28vc3BhcnNlLWRldi9jb21taXQvNWY5NjBjYjEwZjU2
ZWMyMDE3YzEyOGVmOWQxNjA2MGUwMTQ1ZjI5MgoKWzNdIGh0dHBzOi8vbGttbC5vcmcvbGttbC8y
MDE5LzYvMTIvNzQ1CgpbNF0gaHR0cHM6Ly9jb21tdW5pdHkuYXJtLmNvbS9wcm9jZXNzb3JzL2Iv
YmxvZy9wb3N0cy9hcm0tYS1wcm9maWxlLWFyY2hpdGVjdHVyZS0yMDE4LWRldmVsb3BtZW50cy1h
cm12ODVhCgo9PT0gSGlzdG9yeQoKQ2hhbmdlcyBpbiB2MTk6Ci0gUmViYXNlZCBvbnRvIDdiNWNm
NzAxICg1LjMtcmMxKykuCgpDaGFuZ2VzIGluIHYxODoKLSBSZXZlcnRlZCB0aGUgc2VsZnRlc3Qg
YmFjayB0byBub3QgdXNpbmcgdGhlIExEX1BSRUxPQUQgYXBwcm9hY2guCi0gQWRkZWQgcHJjdGwo
UFJfU0VUX1RBR0dFRF9BRERSX0NUUkwpIGNhbGwgdG8gdGhlIHNlbGZ0ZXN0LgotIFJld29yZGVk
IHRoZSBwYXRjaCBkZXNjcmlwdGlvbnMgdG8gbWFrZSB0aGVtIGxlc3Mgb3JpZW50ZWQgb24gYXJt
NjQKICBvbmx5LgotIENhdGFsaW4ncyBwYXRjaDogIkkgYWRkZWQgYSBLY29uZmlnIG9wdGlvbiBh
bmQgZHJvcHBlZCB0aGUgcHJjdGwgYXJncwogIHplcm8gY2hlY2suIFRoZXJlIGlzIHNvbWUgbWlu
b3IgY2xlYW4tdXAgYXMgd2VsbCIuCgpDaGFuZ2VzIGluIHYxNzoKLSBUaGUgInVhY2Nlc3M6IGFk
ZCBub29wIHVudGFnZ2VkX2FkZHIgZGVmaW5pdGlvbiIgcGF0Y2ggaXMgZHJvcHBlZCwgYXMgaXQK
ICB3YXMgbWVyZ2VkIGludG8gdXBzdHJlYW0gbmFtZWQgYXMgInVhY2Nlc3M6IGFkZCBub29wIHVu
dGFnZ2VkX2FkZHIKICBkZWZpbml0aW9uIi4KLSBNZXJnZWQgIm1tLCBhcm02NDogdW50YWcgdXNl
ciBwb2ludGVycyBpbiBkb19wYWdlc19tb3ZlIiBpbnRvCiAgIm1tLCBhcm02NDogdW50YWcgdXNl
ciBwb2ludGVycyBwYXNzZWQgdG8gbWVtb3J5IHN5c2NhbGxzIi4KLSBBZGRlZCAiYXJtNjQ6IElu
dHJvZHVjZSBwcmN0bCgpIG9wdGlvbnMgdG8gY29udHJvbCB0aGUgdGFnZ2VkIHVzZXIKICBhZGRy
ZXNzZXMgQUJJIiBwYXRjaCBmcm9tIENhdGFsaW4uCi0gQWRkIHRhZ3NfbGliLnNvIHRvIHRvb2xz
L3Rlc3Rpbmcvc2VsZnRlc3RzL2FybTY0Ly5naXRpZ25vcmUuCi0gQWRkZWQgYSBjb21tZW50IGNs
YXJpZnlpbmcgdW50YWdnZWQgaW4gbXJlbWFwLgotIE1vdmVkIHVudGFnZ2luZyBiYWNrIGludG8g
bWx4NF9nZXRfdW1lbV9tcigpIGZvciB0aGUgSUIgcGF0Y2guCgpDaGFuZ2VzIGluIHYxNjoKLSBN
b3ZlZCB1bnRhZ2dpbmcgZm9yIG1lbW9yeSBzeXNjYWxscyBmcm9tIGFybTY0IHdyYXBwZXJzIGJh
Y2sgdG8gZ2VuZXJpYwogIGNvZGUuCi0gRHJvcHBlZCB1bnRhZ2dpbmcgZm9yIHRoZSBmb2xsb3dp
bmcgbWVtb3J5IHN5c2NhbGxzOiBicmssIG1tYXAsIG11bm1hcDsKICBtcmVtYXAgKG9ubHkgZHJv
cHBlZCBmb3IgbmV3X2FkZHJlc3MpOyBtbWFwX3Bnb2ZmIChub3QgdXNlZCBvbiBhcm02NCk7CiAg
cmVtYXBfZmlsZV9wYWdlcyAoZGVwcmVjYXRlZCk7IHNobWF0LCBzaG1kdCAod29yayBvbiBzaGFy
ZWQgbWVtb3J5KS4KLSBDaGFuZ2VkIGtzZWxmdGVzdCB0byBMRF9QUkVMT0FEIGEgc2hhcmVkIGxp
YnJhcnkgdGhhdCBvdmVycmlkZXMgbWFsbG9jCiAgdG8gcmV0dXJuIHRhZ2dlZCBwb2ludGVycy4K
LSBSZWJhc2VkIG9udG8gNS4yLXJjMy4KCkNoYW5nZXMgaW4gdjE1OgotIFJlbW92ZWQgdW5uZWNl
c3NhcnkgdW50YWdnaW5nIGZyb20gcmFkZW9uX3R0bV90dF9zZXRfdXNlcnB0cigpLgotIFJlbW92
ZWQgdW5uZWNlc3NhcnkgdW50YWdnaW5nIGZyb20gYW1kZ3B1X3R0bV90dF9zZXRfdXNlcnB0cigp
LgotIE1vdmVkIHVudGFnZ2luZyB0byB2YWxpZGF0ZV9yYW5nZSgpIGluIHVzZXJmYXVsdGZkIGNv
ZGUuCi0gTW92ZWQgdW50YWdnaW5nIHRvIGliX3V2ZXJic18ocmUpcmVnX21yKCkgZnJvbSBtbHg0
X2dldF91bWVtX21yKCkuCi0gUmViYXNlZCBvbnRvIDUuMS4KCkNoYW5nZXMgaW4gdjE0OgotIE1v
dmVkIHVudGFnZ2luZyBmb3IgbW9zdCBtZW1vcnkgc3lzY2FsbHMgdG8gYW4gYXJtNjQgc3BlY2lm
aWMKICBpbXBsZW1lbnRhdGlvbiwgaW5zdGVhZCBvZiBkb2luZyB0aGF0IGluIHRoZSBjb21tb24g
Y29kZS4KLSBEcm9wcGVkICJuZXQsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIGluIHRjcF96
ZXJvY29weV9yZWNlaXZlIiwgc2luY2UKICB0aGUgcHJvdmlkZWQgdXNlciBwb2ludGVycyBkb24n
dCBjb21lIGZyb20gYW4gYW5vbnltb3VzIG1hcCBhbmQgdGh1cyBhcmUKICBub3QgY292ZXJlZCBi
eSB0aGlzIEFCSSByZWxheGF0aW9uLgotIERyb3BwZWQgImtlcm5lbCwgYXJtNjQ6IHVudGFnIHVz
ZXIgcG9pbnRlcnMgaW4gcHJjdGxfc2V0X21tKiIuCi0gTW92ZWQgdW50YWdnaW5nIGZyb20gX19j
aGVja19tZW1fdHlwZSgpIHRvIHRlZV9zaG1fcmVnaXN0ZXIoKS4KLSBVcGRhdGVkIHVudGFnZ2lu
ZyBmb3IgdGhlIGFtZGdwdSBhbmQgcmFkZW9uIGRyaXZlcnMgdG8gY292ZXIgdGhlIE1NVQogIG5v
dGlmaWVyLCBhcyBzdWdnZXN0ZWQgYnkgRmVsaXguCi0gU2luY2UgdGhpcyBBQkkgcmVsYXhhdGlv
biBkb2Vzbid0IGFjdHVhbGx5IGFsbG93IHRhZ2dlZCBpbnN0cnVjdGlvbgogIHBvaW50ZXJzLCBk
cm9wcGVkIHRoZSBmb2xsb3dpbmcgcGF0Y2hlczoKLSBEcm9wcGVkICJ0cmFjaW5nLCBhcm02NDog
dW50YWcgdXNlciBwb2ludGVycyBpbiBzZXFfcHJpbnRfdXNlcl9pcCIuCi0gRHJvcHBlZCAidXBy
b2JlcywgYXJtNjQ6IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4gZmluZF9hY3RpdmVfdXByb2JlIi4K
LSBEcm9wcGVkICJicGYsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIGluIHN0YWNrX21hcF9n
ZXRfYnVpbGRfaWRfb2Zmc2V0Ii4KLSBSZWJhc2VkIG9udG8gNS4xLXJjNyAoMzc2MjRiNTgpLgoK
Q2hhbmdlcyBpbiB2MTM6Ci0gU2ltcGxpZmllZCB1bnRhZ2dpbmcgaW4gdGNwX3plcm9jb3B5X3Jl
Y2VpdmUoKS4KLSBMb29rZWQgYXQgZmluZF92bWEoKSBjYWxsZXJzIGluIGRyaXZlcnMvLCB3aGlj
aCBhbGxvd2VkIHRvIGlkZW50aWZ5IGEKICBmZXcgb3RoZXIgcGxhY2VzIHdoZXJlIHVudGFnZ2lu
ZyBpcyBuZWVkZWQuCi0gQWRkZWQgcGF0Y2ggIm1tLCBhcm02NDogdW50YWcgdXNlciBwb2ludGVy
cyBpbiBnZXRfdmFkZHJfZnJhbWVzIi4KLSBBZGRlZCBwYXRjaCAiZHJtL2FtZGdwdSwgYXJtNjQ6
IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4KICBhbWRncHVfdHRtX3R0X2dldF91c2VyX3BhZ2VzIi4K
LSBBZGRlZCBwYXRjaCAiZHJtL3JhZGVvbiwgYXJtNjQ6IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4K
ICByYWRlb25fdHRtX3R0X3Bpbl91c2VycHRyIi4KLSBBZGRlZCBwYXRjaCAiSUIvbWx4NCwgYXJt
NjQ6IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4gbWx4NF9nZXRfdW1lbV9tciIuCi0gQWRkZWQgcGF0
Y2ggIm1lZGlhL3Y0bDItY29yZSwgYXJtNjQ6IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4KICB2aWRl
b2J1Zl9kbWFfY29udGlnX3VzZXJfZ2V0Ii4KLSBBZGRlZCBwYXRjaCAidGVlL29wdGVlLCBhcm02
NDogdW50YWcgdXNlciBwb2ludGVycyBpbiBjaGVja19tZW1fdHlwZSIuCi0gQWRkZWQgcGF0Y2gg
InZmaW8vdHlwZTEsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIi4KCkNoYW5nZXMgaW4gdjEy
OgotIENoYW5nZWQgdW50YWdnaW5nIGluIHRjcF96ZXJvY29weV9yZWNlaXZlKCkgdG8gYWxzbyB1
bnRhZyB6Yy0+YWRkcmVzcy4KLSBGaXhlZCB1bnRhZ2dpbmcgaW4gcHJjdGxfc2V0X21tKiB0byBv
bmx5IHVudGFnIHBvaW50ZXJzIGZvciB2bWEgbG9va3VwcwogIGFuZCB2YWxpZGl0eSBjaGVja3Ms
IGJ1dCBsZWF2ZSB0aGVtIGFzIGlzIGZvciBhY3R1YWwgdXNlciBzcGFjZSBhY2Nlc3Nlcy4KLSBV
cGRhdGVkIHRoZSBsaW5rIHRvIHRoZSB2MiBvZiB0aGUgImFybTY0IHJlbGF4ZWQgQUJJIiBwYXRj
aHNldCBbM10uCi0gRHJvcHBlZCB0aGUgZG9jdW1lbnRhdGlvbiBwYXRjaCwgYXMgdGhlICJhcm02
NCByZWxheGVkIEFCSSIgcGF0Y2hzZXQgWzNdCiAgaGFuZGxlcyB0aGF0LgoKQ2hhbmdlcyBpbiB2
MTE6Ci0gQWRkZWQgInVwcm9iZXMsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIGluIGZpbmRf
YWN0aXZlX3Vwcm9iZSIgcGF0Y2guCi0gQWRkZWQgImJwZiwgYXJtNjQ6IHVudGFnIHVzZXIgcG9p
bnRlcnMgaW4gc3RhY2tfbWFwX2dldF9idWlsZF9pZF9vZmZzZXQiCiAgcGF0Y2guCi0gRml4ZWQg
InRyYWNpbmcsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIGluIHNlcV9wcmludF91c2VyX2lw
IiB0bwogIGNvcnJlY3RseSBwZXJmb3JtIHN1YnRyYXRpb24gd2l0aCBhIHRhZ2dlZCBhZGRyLgot
IE1vdmVkIHVudGFnZ2VkX2FkZHIoKSBmcm9tIFNZU0NBTExfREVGSU5FMyhtcHJvdGVjdCkgYW5k
CiAgU1lTQ0FMTF9ERUZJTkU0KHBrZXlfbXByb3RlY3QpIHRvIGRvX21wcm90ZWN0X3BrZXkoKS4K
LSBNb3ZlZCB1bnRhZ2dlZF9hZGRyKCkgZGVmaW5pdGlvbiBmb3Igb3RoZXIgYXJjaGVzIGZyb20K
ICBpbmNsdWRlL2xpbnV4L21lbW9yeS5oIHRvIGluY2x1ZGUvbGludXgvbW0uaC4KLSBDaGFuZ2Vk
IHVudGFnZ2luZyBpbiBzdHJuKl91c2VyKCkgdG8gcGVyZm9ybSB1c2Vyc3BhY2UgYWNjZXNzZXMg
dGhyb3VnaAogIHRhZ2dlZCBwb2ludGVycy4KLSBVcGRhdGVkIHRoZSBkb2N1bWVudGF0aW9uIHRv
IG1lbnRpb24gdGhhdCBwYXNzaW5nIHRhZ2dlZCBwb2ludGVycyB0bwogIG1lbW9yeSBzeXNjYWxs
cyBpcyBhbGxvd2VkLgotIFVwZGF0ZWQgdGhlIHRlc3QgdG8gdXNlIG1hbGxvYydlZCBtZW1vcnkg
aW5zdGVhZCBvZiBzdGFjayBtZW1vcnkuCgpDaGFuZ2VzIGluIHYxMDoKLSBBZGRlZCAibW0sIGFy
bTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIHBhc3NlZCB0byBtZW1vcnkgc3lzY2FsbHMiIGJhY2su
Ci0gTmV3IHBhdGNoICJmcywgYXJtNjQ6IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4gZnMvdXNlcmZh
dWx0ZmQuYyIuCi0gTmV3IHBhdGNoICJuZXQsIGFybTY0OiB1bnRhZyB1c2VyIHBvaW50ZXJzIGlu
IHRjcF96ZXJvY29weV9yZWNlaXZlIi4KLSBOZXcgcGF0Y2ggImtlcm5lbCwgYXJtNjQ6IHVudGFn
IHVzZXIgcG9pbnRlcnMgaW4gcHJjdGxfc2V0X21tKiIuCi0gTmV3IHBhdGNoICJ0cmFjaW5nLCBh
cm02NDogdW50YWcgdXNlciBwb2ludGVycyBpbiBzZXFfcHJpbnRfdXNlcl9pcCIuCgpDaGFuZ2Vz
IGluIHY5OgotIFJlYmFzZWQgb250byA0LjIwLXJjNi4KLSBVc2VkIHU2NCBpbnN0ZWFkIG9mIF9f
dTY0IGluIHR5cGUgY2FzdHMgaW4gdGhlIHVudGFnZ2VkX2FkZHIgbWFjcm8gZm9yCiAgYXJtNjQu
Ci0gQWRkZWQgYnJhY2VzIGFyb3VuZCAoYWRkcikgaW4gdGhlIHVudGFnZ2VkX2FkZHIgbWFjcm8g
Zm9yIG90aGVyIGFyY2hlcy4KCkNoYW5nZXMgaW4gdjg6Ci0gUmViYXNlZCBvbnRvIDY1MTAyMjM4
ICg0LjIwLXJjMSkuCi0gQWRkZWQgYSBub3RlIHRvIHRoZSBjb3ZlciBsZXR0ZXIgb24gd2h5IHN5
c2NhbGwgd3JhcHBlcnMvc2hpbXMgdGhhdCB1bnRhZwogIHVzZXIgcG9pbnRlcnMgd29uJ3Qgd29y
ay4KLSBBZGRlZCBhIG5vdGUgdG8gdGhlIGNvdmVyIGxldHRlciB0aGF0IHRoaXMgcGF0Y2hzZXQg
aGFzIGJlZW4gbWVyZ2VkIGludG8KICB0aGUgUGl4ZWwgMiBrZXJuZWwgdHJlZS4KLSBEb2N1bWVu
dGF0aW9uIGZpeGVzLCBpbiBwYXJ0aWN1bGFyIGFkZGVkIGEgbGlzdCBvZiBzeXNjYWxscyB0aGF0
IGRvbid0CiAgc3VwcG9ydCB0YWdnZWQgdXNlciBwb2ludGVycy4KCkNoYW5nZXMgaW4gdjc6Ci0g
UmViYXNlZCBvbnRvIDE3YjU3YjE4ICg0LjE5LXJjNikuCi0gRHJvcHBlZCB0aGUgImFybTY0OiB1
bnRhZyB1c2VyIGFkZHJlc3MgaW4gX19kb191c2VyX2ZhdWx0IiBwYXRjaCwgc2luY2UKICB0aGUg
ZXhpc3RpbmcgcGF0Y2hlcyBhbHJlYWR5IGhhbmRsZSB1c2VyIGZhdWx0cyBwcm9wZXJseS4KLSBE
cm9wcGVkIHRoZSAidXNiLCBhcm02NDogdW50YWcgdXNlciBhZGRyZXNzZXMgaW4gZGV2aW8iIHBh
dGNoLCBzaW5jZSB0aGUKICBwYXNzZWQgcG9pbnRlciBtdXN0IGNvbWUgZnJvbSBhIHZtYSBhbmQg
dGhlcmVmb3JlIGJlIHVudGFnZ2VkLgotIERyb3BwZWQgdGhlICJhcm02NDogYW5ub3RhdGUgdXNl
ciBwb2ludGVycyBjYXN0cyBkZXRlY3RlZCBieSBzcGFyc2UiCiAgcGF0Y2ggKHNlZSB0aGUgZGlz
Y3Vzc2lvbiB0byB0aGUgcmVwbGllcyBvZiB0aGUgdjYgb2YgdGhpcyBwYXRjaHNldCkuCi0gQWRk
ZWQgbW9yZSBjb250ZXh0IHRvIHRoZSBjb3ZlciBsZXR0ZXIuCi0gVXBkYXRlZCBEb2N1bWVudGF0
aW9uL2FybTY0L3RhZ2dlZC1wb2ludGVycy50eHQuCgpDaGFuZ2VzIGluIHY2OgotIEFkZGVkIGFu
bm90YXRpb25zIGZvciB1c2VyIHBvaW50ZXIgY2FzdHMgZm91bmQgYnkgc3BhcnNlLgotIFJlYmFz
ZWQgb250byAwNTBjZGM2YyAoNC4xOS1yYzErKS4KCkNoYW5nZXMgaW4gdjU6Ci0gQWRkZWQgMyBu
ZXcgcGF0Y2hlcyB0aGF0IGFkZCB1bnRhZ2dpbmcgdG8gcGxhY2VzIGZvdW5kIHdpdGggc3RhdGlj
CiAgYW5hbHlzaXMuCi0gUmViYXNlZCBvbnRvIDQ0YzkyOWUxICg0LjE4LXJjOCkuCgpDaGFuZ2Vz
IGluIHY0OgotIEFkZGVkIGEgc2VsZnRlc3QgZm9yIGNoZWNraW5nIHRoYXQgcGFzc2luZyB0YWdn
ZWQgcG9pbnRlcnMgdG8gdGhlCiAga2VybmVsIHN1Y2NlZWRzLgotIFJlYmFzZWQgb250byA4MWU5
N2YwMTMgKDQuMTgtcmMxKykuCgpDaGFuZ2VzIGluIHYzOgotIFJlYmFzZWQgb250byBlNWM1MWYz
MCAoNC4xNy1yYzYrKS4KLSBBZGRlZCBsaW51eC1hcmNoQCB0byB0aGUgbGlzdCBvZiByZWNpcGll
bnRzLgoKQ2hhbmdlcyBpbiB2MjoKLSBSZWJhc2VkIG9udG8gMmQ2MThiZGYgKDQuMTctcmMzKyku
Ci0gUmVtb3ZlZCBleGNlc3NpdmUgdW50YWdnaW5nIGluIGd1cC5jLgotIFJlbW92ZWQgdW50YWdn
aW5nIHBvaW50ZXJzIHJldHVybmVkIGZyb20gX191YWNjZXNzX21hc2tfcHRyLgoKQ2hhbmdlcyBp
biB2MToKLSBSZWJhc2VkIG9udG8gNC4xNy1yYzEuCgpDaGFuZ2VzIGluIFJGQyB2MjoKLSBBZGRl
ZCAiI2lmbmRlZiB1bnRhZ2dlZF9hZGRyLi4uIiBmYWxsYmFjayBpbiBsaW51eC91YWNjZXNzLmgg
aW5zdGVhZCBvZgogIGRlZmluaW5nIGl0IGZvciBlYWNoIGFyY2ggaW5kaXZpZHVhbGx5LgotIFVw
ZGF0ZWQgRG9jdW1lbnRhdGlvbi9hcm02NC90YWdnZWQtcG9pbnRlcnMudHh0LgotIERyb3BwZWQg
Im1tLCBhcm02NDogdW50YWcgdXNlciBhZGRyZXNzZXMgaW4gbWVtb3J5IHN5c2NhbGxzIi4KLSBS
ZWJhc2VkIG9udG8gM2ViMmNlODIgKDQuMTYtcmM3KS4KClNpZ25lZC1vZmYtYnk6IEFuZHJleSBL
b25vdmFsb3YgPGFuZHJleWtudmxAZ29vZ2xlLmNvbT4KCkFuZHJleSBLb25vdmFsb3YgKDE0KToK
ICBhcm02NDogdW50YWcgdXNlciBwb2ludGVycyBpbiBhY2Nlc3Nfb2sgYW5kIF9fdWFjY2Vzc19t
YXNrX3B0cgogIGxpYjogdW50YWcgdXNlciBwb2ludGVycyBpbiBzdHJuKl91c2VyCiAgbW06IHVu
dGFnIHVzZXIgcG9pbnRlcnMgcGFzc2VkIHRvIG1lbW9yeSBzeXNjYWxscwogIG1tOiB1bnRhZyB1
c2VyIHBvaW50ZXJzIGluIG1tL2d1cC5jCiAgbW06IHVudGFnIHVzZXIgcG9pbnRlcnMgaW4gZ2V0
X3ZhZGRyX2ZyYW1lcwogIGZzL25hbWVzcGFjZTogdW50YWcgdXNlciBwb2ludGVycyBpbiBjb3B5
X21vdW50X29wdGlvbnMKICB1c2VyZmF1bHRmZDogdW50YWcgdXNlciBwb2ludGVycwogIGRybS9h
bWRncHU6IHVudGFnIHVzZXIgcG9pbnRlcnMKICBkcm0vcmFkZW9uOiB1bnRhZyB1c2VyIHBvaW50
ZXJzIGluIHJhZGVvbl9nZW1fdXNlcnB0cl9pb2N0bAogIElCL21seDQ6IHVudGFnIHVzZXIgcG9p
bnRlcnMgaW4gbWx4NF9nZXRfdW1lbV9tcgogIG1lZGlhL3Y0bDItY29yZTogdW50YWcgdXNlciBw
b2ludGVycyBpbiB2aWRlb2J1Zl9kbWFfY29udGlnX3VzZXJfZ2V0CiAgdGVlL3NobTogdW50YWcg
dXNlciBwb2ludGVycyBpbiB0ZWVfc2htX3JlZ2lzdGVyCiAgdmZpby90eXBlMTogdW50YWcgdXNl
ciBwb2ludGVycyBpbiB2YWRkcl9nZXRfcGZuCiAgc2VsZnRlc3RzLCBhcm02NDogYWRkIGEgc2Vs
ZnRlc3QgZm9yIHBhc3NpbmcgdGFnZ2VkIHBvaW50ZXJzIHRvIGtlcm5lbAoKQ2F0YWxpbiBNYXJp
bmFzICgxKToKICBhcm02NDogSW50cm9kdWNlIHByY3RsKCkgb3B0aW9ucyB0byBjb250cm9sIHRo
ZSB0YWdnZWQgdXNlciBhZGRyZXNzZXMKICAgIEFCSQoKIGFyY2gvYXJtNjQvS2NvbmZpZyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICA5ICsrKwogYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9w
cm9jZXNzb3IuaCAgICAgICAgICAgIHwgIDggKysKIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vdGhy
ZWFkX2luZm8uaCAgICAgICAgICB8ICAxICsKIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vdWFjY2Vz
cy5oICAgICAgICAgICAgICB8IDEyICsrLQogYXJjaC9hcm02NC9rZXJuZWwvcHJvY2Vzcy5jICAg
ICAgICAgICAgICAgICAgIHwgNzMgKysrKysrKysrKysrKysrKysrKwogLi4uL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMgIHwgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9nZW0uYyAgICAgICB8ICAyICsKIGRyaXZlcnMvZ3B1L2RybS9yYWRl
b24vcmFkZW9uX2dlbS5jICAgICAgICAgICB8ICAyICsKIGRyaXZlcnMvaW5maW5pYmFuZC9ody9t
bHg0L21yLmMgICAgICAgICAgICAgICB8ICA3ICstCiBkcml2ZXJzL21lZGlhL3Y0bDItY29yZS92
aWRlb2J1Zi1kbWEtY29udGlnLmMgfCAgOSArKy0KIGRyaXZlcnMvdGVlL3RlZV9zaG0uYyAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAxICsKIGRyaXZlcnMvdmZpby92ZmlvX2lvbW11X3R5cGUx
LmMgICAgICAgICAgICAgICB8ICAyICsKIGZzL25hbWVzcGFjZS5jICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICB8ICAyICstCiBmcy91c2VyZmF1bHRmZC5jICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAyMiArKystLS0KIGluY2x1ZGUvdWFwaS9saW51eC9wcmN0bC5oICAgICAg
ICAgICAgICAgICAgICB8ICA1ICsrCiBrZXJuZWwvc3lzLmMgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAxMiArKysKIGxpYi9zdHJuY3B5X2Zyb21fdXNlci5jICAgICAgICAgICAg
ICAgICAgICAgICB8ICAzICstCiBsaWIvc3Rybmxlbl91c2VyLmMgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgfCAgMyArLQogbW0vZnJhbWVfdmVjdG9yLmMgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHwgIDIgKwogbW0vZ3VwLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHwgIDQgKwogbW0vbWFkdmlzZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IHwgIDIgKwogbW0vbWVtcG9saWN5LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwg
IDMgKwogbW0vbWlncmF0ZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIg
Ky0KIG1tL21pbmNvcmUuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICsK
IG1tL21sb2NrLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA0ICsKIG1t
L21wcm90ZWN0LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICsKIG1tL21y
ZW1hcC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA3ICsrCiBtbS9tc3lu
Yy5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiArCiB0b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9hcm02NC8uZ2l0aWdub3JlICAgICAgfCAgMSArCiB0b29scy90ZXN0aW5n
L3NlbGZ0ZXN0cy9hcm02NC9NYWtlZmlsZSAgICAgICAgfCAxMSArKysKIC4uLi90ZXN0aW5nL3Nl
bGZ0ZXN0cy9hcm02NC9ydW5fdGFnc190ZXN0LnNoICB8IDEyICsrKwogdG9vbHMvdGVzdGluZy9z
ZWxmdGVzdHMvYXJtNjQvdGFnc190ZXN0LmMgICAgIHwgMjkgKysrKysrKysKIDMyIGZpbGVzIGNo
YW5nZWQsIDIzMyBpbnNlcnRpb25zKCspLCAyNSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEw
MDY0NCB0b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9hcm02NC8uZ2l0aWdub3JlCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvYXJtNjQvTWFrZWZpbGUKIGNyZWF0ZSBt
b2RlIDEwMDc1NSB0b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9hcm02NC9ydW5fdGFnc190ZXN0LnNo
CiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvYXJtNjQvdGFnc190
ZXN0LmMKCi0tIAoyLjIyLjAuNzA5LmcxMDIzMDIxNDdiLWdvb2cKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJp
LWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
