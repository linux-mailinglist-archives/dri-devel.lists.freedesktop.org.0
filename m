Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5889B339DC4
	for <lists+dri-devel@lfdr.de>; Sat, 13 Mar 2021 12:26:14 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 69BE96E113;
	Sat, 13 Mar 2021 11:26:07 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from asav21.altibox.net (asav21.altibox.net [109.247.116.8])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 40C4A6E0A2
 for <dri-devel@lists.freedesktop.org>; Sat, 13 Mar 2021 11:26:01 +0000 (UTC)
Received: from localhost.localdomain (unknown [81.166.168.211])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: noralf.tronnes@ebnett.no)
 by asav21.altibox.net (Postfix) with ESMTPSA id 256CA80075;
 Sat, 13 Mar 2021 12:25:59 +0100 (CET)
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v8 3/3] drm: Add GUD USB Display driver
Date: Sat, 13 Mar 2021 12:25:45 +0100
Message-Id: <20210313112545.37527-4-noralf@tronnes.org>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20210313112545.37527-1-noralf@tronnes.org>
References: <20210313112545.37527-1-noralf@tronnes.org>
MIME-Version: 1.0
X-CMAE-Score: 0
X-CMAE-Analysis: v=2.3 cv=PJ4hB8iC c=1 sm=1 tr=0
 a=OYZzhG0JTxDrWp/F2OJbnw==:117 a=OYZzhG0JTxDrWp/F2OJbnw==:17
 a=IkcTkHD0fZMA:10 a=M51BFTxLslgA:10 a=SJz97ENfAAAA:8 a=gAmX6pxEAAAA:20
 a=e5mUnYsNAAAA:8 a=20KFwNOVAAAA:8 a=VwQbUJbxAAAA:8 a=pGLkceISAAAA:8
 a=cLRfuYG-vExzrqLf76UA:9 a=tlUQ-LNmudi35nYt:21 a=pYDUiRM0TatpUZ2T:21
 a=QEXdDO2ut3YA:10 a=vFet0B0WnEQeilDPIY6i:22 a=Vxmtnl_E_bksehYqCbjh:22
 a=AjGcO6oz07-iQ99wixmX:22 a=pHzHmUro8NiASowvMSCR:22
 a=Ew2E2A-JSTLzCXPT_086:22
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: hudson@trmm.net, markus@raatikainen.cc, sam@ravnborg.org,
 linux-usb@vger.kernel.org, th020394@gmail.com, lkundrak@v3.sk,
 pontus.fuchs@gmail.com, Daniel Vetter <daniel.vetter@ffwll.ch>, peter@stuge.se
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBhZGRzIGEgVVNCIGRpc3BsYXkgZHJpdmVyIHdpdGggdGhlIGludGVudGlvbiB0aGF0IGl0
IGNhbiBiZQp1c2VkIHdpdGggZnV0dXJlIFVTQiBpbnRlcmZhY2VkIGxvdyBlbmQgZGlzcGxheXMv
YWRhcHRlcnMuIFRoZSBMaW51eApnYWRnZXQgZGV2aWNlIGRyaXZlciB3aWxsIHNlcnZlIGFzIHRo
ZSBjYW5vbmljYWwgZGV2aWNlIGltcGxlbWVudGF0aW9uLgoKVGhlIGZvbGxvd2luZyBEUk0gcHJv
cGVydGllcyBhcmUgc3VwcG9ydGVkOgotIFBsYW5lIHJvdGF0aW9uCi0gQ29ubmVjdG9yIFRWIHBy
b3BlcnRpZXMKClRoZXJlIGlzIGFsc28gc3VwcG9ydCBmb3IgYmFja2xpZ2h0IGJyaWdodG5lc3Mg
ZXhwb3NlZCBhcyBhIGJhY2tsaWdodApkZXZpY2UuCgpEaXNwbGF5IG1vZGVzIGNhbiBiZSBtYWRl
IGF2YWlsYWJsZSB0byB0aGUgaG9zdCBkcml2ZXIgZWl0aGVyIGFzIERSTQpkaXNwbGF5IG1vZGVz
IG9yIHRocm91Z2ggRURJRC4gSWYgYm90aCBhcmUgcHJlc2VudCwgRURJRCBpcyBqdXN0IHBhc3Nl
ZApvbiB0byB1c2Vyc3BhY2UuCgpQZXJmb3JtYW5jZSBpcyBwcmVmZXJyZWQgb3ZlciBjb2xvciBk
ZXB0aCwgc28gaWYgdGhlIGRldmljZSBzdXBwb3J0cwpSR0I1NjUsIERSTV9DQVBfRFVNQl9QUkVG
RVJSRURfREVQVEggd2lsbCByZXR1cm4gMTYuCgpJZiB0aGUgZGV2aWNlIHRyYW5zZmVyIGJ1ZmZl
ciBjYW4ndCBmaXQgYW4gdW5jb21wcmVzc2VkIGZyYW1lYnVmZmVyCnVwZGF0ZSwgdGhlIHVwZGF0
ZSBpcyBzcGxpdCB1cCBpbnRvIHBhcnRzIHRoYXQgZG8gZml0LgoKT3B0aW1hbCB1c2VyIGV4cGVy
aWVuY2UgaXMgYWNoaWV2ZWQgYnkgcHJvdmlkaW5nIGRhbWFnZSByZXBvcnRzIGVpdGhlciBieQpz
ZXR0aW5nIEZCX0RBTUFHRV9DTElQUyBvbiBwYWdlZmxpcHMgb3IgY2FsbGluZyBEUk1fSU9DVExf
TU9ERV9ESVJUWUZCLgoKTFo0IGNvbXByZXNzaW9uIGlzIHVzZWQgaWYgdGhlIGRldmljZSBzdXBw
b3J0cyBpdC4KClRoZSBkcml2ZXIgc3VwcG9ydHMgYSBvbmUgYml0IG1vbm9jaHJvbWUgdHJhbnNm
ZXIgZm9ybWF0OiBSMS4gVGhpcyBpcyBub3QKaW1wbGVtZW50ZWQgaW4gdGhlIGdhZGdldCBkcml2
ZXIuIEl0IGlzIGFkZGVkIGluIHByZXBhcmF0aW9uIGZvciBmdXR1cmUKbW9ub2Nocm9tZSBlLWlu
ayBkaXNwbGF5cy4KClRoZSBkcml2ZXIgaXMgTUlUIGxpY2Vuc2VkIHRvIHNtb290aCB0aGUgcGF0
aCBmb3IgYW55IEJTRCBwb3J0IG9mIHRoZQpkcml2ZXIuCgp2MjoKLSBVc2UgZGV2bV9kcm1fZGV2
X2FsbG9jKCkgYW5kIGRybW1fbW9kZV9jb25maWdfaW5pdCgpCi0gZHJtX2ZiZGV2X2dlbmVyaWNf
c2V0dXA6IFVzZSBwcmVmZXJyZWRfYnBwPTAsIDE2IHdhcyBhIGNvcHkgcGFzdGUgZXJyb3IKLSBU
aGUgZHJtX2JhY2tsaWdodF9oZWxwZXIgaXMgZHJvcHBlZCwgY29weSBpbiB0aGUgY29kZQotIFN1
cHBvcnQgcHJvdG9jb2wgdmVyc2lvbiBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3IgZGV2aWNl
Cgp2MzoKLSBVc2UgZG9uYXRlZCBPcGVubW9rbyBVU0IgcGlkCi0gVXNlIGRpcmVjdCBjb21wcmVz
c2lvbiBmcm9tIGZyYW1lYnVmZmVyIHdoZW4gcGl0Y2ggbWF0Y2hlcywgbm90IG9ubHkgb24KICBm
dWxsIGZyYW1lcywgc28gc3BsaXQgdXBkYXRlcyBjYW4gYmVuZWZpdAotIFVzZSBfX2xlMTYgaW4g
c3RydWN0IGd1ZF9kcm1fcmVxX2dldF9jb25uZWN0b3Jfc3RhdHVzCi0gU2V0IGVkaWQgcHJvcGVy
dHkgd2hlbiB0aGUgZGV2aWNlIG9ubHkgcHJvdmlkZXMgZWRpZAotIENsZWFyIGNvbXByZXNzaW9u
IGZpZWxkcyBpbiBzdHJ1Y3QgZ3VkX2RybV9yZXFfc2V0X2J1ZmZlcgotIEZpeCBwcm90b2NvbCB2
ZXJzaW9uIG5lZ290aWF0aW9uCi0gUmVtb3ZlIG1vZGUtPnZyZWZyZXNoLCBpdCdzIGNhbGN1bGF0
ZWQKCnY0OgotIERyb3AgdGhlIHN0YXR1cyByZXEgcG9sbGluZyB3aGljaCB3YXMgYSB3b3JrYXJv
dW5kIGZvciBzb21ldGhpbmcgdGhhdAogIHR1cm5lZCBvdXQgdG8gYmUgYSBkd2MyIHVkYyBkcml2
ZXIgcHJvYmxlbQotIEFkZCBhIGZsYWcgZm9yIHRoZSBMaW51eCBnYWRnZXQgdG8gcmVxdWlyZSBh
IHN0YXR1cyByZXF1ZXN0IG9uCiAgU0VUIG9wZXJhdGlvbnMuIE90aGVyIGRldmljZXMgd2lsbCBv
bmx5IGdldCBzdGF0dXMgcmVxIG9uIFNUQUxMIGVycm9ycwotIFVzZSBwcm90b2NvbCBzcGVjaWZp
YyBlcnJvciBjb2RlcyAoUGV0ZXIpCi0gQWRkIGEgZmxhZyBmb3IgZGV2aWNlcyB0aGF0IHdhbnQg
dG8gcmVjZWl2ZSB0aGUgZW50aXJlIGZyYW1lYnVmZmVyIG9uCiAgZWFjaCBmbHVzaCAoTHVib21p
cikKLSBSZXRyeSBhIGZhaWxlZCBmcmFtZWJ1ZmZlciBmbHVzaAotIElmIG1vZGUgaGFzIGNoYW5n
ZWQgd2FpdCBmb3Igd29ya2VyIGFuZCBjbGVhciBwZW5kaW5nIGRhbWFnZSBiZWZvcmUKICBxdWV1
aW5nIHVwIG5ldyBkYW1hZ2UsIGZiIHdpZHRoL2hlaWdodCBtaWdodCBoYXZlIGNoYW5nZWQKLSBJ
bmNyZWFzZSBlcnJvciBjb3VudGVyIG9uIGJ1bGsgdHJhbnNmZXIgZmFpbHVyZXMKLSBVc2UgRFJN
X01PREVfQ09OTkVDVE9SX1VTQgotIEhhbmRsZSBSMSBrbWFsbG9jIGVycm9yIChQZXRlcikKLSBE
b24ndCB0cnkgYW5kIHJlcGxpY2F0ZSB0aGUgVVNCIGdldCBkZXNjcmlwdG9yIHJlcXVlc3Qgc3Rh
bmRhcmQgZm9yIHRoZQogIGRpc3BsYXkgZGVzY3JpcHRvciAoUGV0ZXIpCi0gTWFrZSBtYXhfYnVm
ZmVyX3NpemUgb3B0aW9uYWwgKFBldGVyKSwgZHJvcCB0aGUgcG93MiByZXF1aXJlbWVudCBzaW5j
ZQogIGl0J3Mgbm90IG5lY2Vzc2FyeSBhbnltb3JlLgotIERvbid0IHByZS1hbGxvYyBhIGNvbnRy
b2wgcmVxdWVzdCBidWZmZXIsIGl0IHdhcyBvbmx5IDRrCi0gTGV0IGd1ZC5oIGRlc2NyaWJlIHRo
ZSB3aG9sZSBwcm90b2NvbCBleHBsaWNpdGx5IGFuZCBkb24ndCBsZXQgRFJNCiAgbGVhayBpbnRv
IGl0IChQZXRlcikKLSBEcm9wIGRpc3BsYXkgbW9kZSAuaHNrZXcgYW5kIC52c2NhbiBmcm9tIHRo
ZSBwcm90b2NvbAotIFNob3J0ZW4gbmFtZXM6IHMvR1VEX0RSTV8vR1VEXy8gcy9ndWRfZHJtXy9n
dWRfLyAoUGV0ZXIpCi0gRml4IGd1ZF9waXBlX2NoZWNrKCkgY29ubmVjdG9yIHBpY2tpbmcgd2hl
biBzd2l0Y2hpbmcgY29ubmVjdG9yCi0gRHJvcCBndWRfZHJtX2RyaXZlcl9nZW1fY3JlYXRlX29i
amVjdCgpIGNhY2hlZCBpcyBkZWZhdWx0IG5vdwotIFJldHJpZXZlIFVTQiBkZXZpY2UgZnJvbSBz
dHJ1Y3QgZHJtX2RldmljZS5kZXYgaW5zdGVhZCBvZiBrZWVwaW5nIGEKICBwb2ludGVyCi0gSG9u
b3VyIGZiLT5vZmZzZXRzWzBdCi0gRml4IG1vZGUgZmV0Y2hpbmcgd2hlbiBjb25uZWN0b3Igc3Rh
dHVzIGlzIGZvcmNlZAotIENoZWNrIEVESUQgbGVuZ3RoIHJlcG9ydGVkIGJ5IHRoZSBkZXZpY2UK
LSBVc2UgZHJtX2RvX2dldF9lZGlkKCkgc28gdXNlcnNwYWNlIGNhbiBvdmVycnJpZGUgRURJRAot
IFNldCBlcG9jaCBjb3VudGVyIHRvIHNpZ25hbCBjb25uZWN0b3Igc3RhdHVzIGNoYW5nZQotIGd1
ZF9kcm1fZHJpdmVyIGNhbiBiZSBjb25zdCBub3cKCnY1OgotIEdVRF9EUk1fRk9STUFUX1IxOiBV
c2Ugbm9uLWh1bWFuIGFzY2lpIHZhbHVlcyAoRGFuaWVsKQotIENoYW5nZSBuYW1lIHRvOiBHVUQg
VVNCIERpc3BsYXkgKFRob21hcywgU2ltb24pCi0gQ2hhbmdlIG9uZSBfX3UzMiAtPiBfX2xlMzIg
aW4gcHJvdG9jb2wgaGVhZGVyCi0gQWx3YXlzIGxvZyBmYiBmbHVzaCBlcnJvcnMsIHVubGVzcyB0
aGUgcHJldmlvdXMgb25lIGZhaWxlZAotIFJ1biBiYWNrbGlnaHQgdXBkYXRlIGluIGEgd29ya2Vy
IHRvIGF2b2lkIHVwc2V0dGluZyBsb2NrZGVwIChEYW5pZWwpCi0gRHJvcCBiYWNrbGlnaHRfb3Bz
LmdldF9icmlnaHRuZXNzLCB0aGVyZSdzIG5vIHJlYWRiYWNrIGZyb20gdGhlIGRldmljZQogIHNv
IGl0IGRvZXNuJ3QgcmVhbGx5IGFkZCBhbnl0aGluZy4KLSBTZXQgZG1hIG1hc2ssIG5lZWRlZCBi
eSBkbWEtYnVmIGltcG9ydGVycwoKdjY6Ci0gVXNlIG9iai15IGluIE1ha2VmaWxlIChQZXRlcikK
LSBGaXggbWlzc2luZyBsZTMyX3RvX2NwdSgpIHdoZW4gdXNpbmcgR1VEX0RJU1BMQVlfTUFHSUMg
KFBldGVyKQotIFNldCBpbml0aWFsIGJyaWdodG5lc3Mgb24gYmFja2xpZ2h0IGRldmljZQoKdjc6
Ci0gTFo0X2NvbXByZXNzX2RlZmF1bHQoKSBjYW4gcmV0dXJuIHplcm8sIGNoZWNrIGZvciB0aGF0
Ci0gRml4IG1lbW9yeSBsZWFrIGluIGd1ZF9waXBlX2NoZWNrKCkgZXJyb3IgcGF0aCAoUGV0ZXIp
Ci0gSW1wcm92ZSBkZWJ1ZyBhbmQgZXJyb3IgbWVzc2FnZXMgKFBldGVyKQotIERvbid0IHBhc3Mg
bGVuZ3RoIGluIHByb3RvY29sIHN0cnVjdHMgKFBldGVyKQotIFBhc3MgVVNCIGludGVyZmFjZSB0
byBndWRfdXNiX2NvbnRyb2xfbXNnKCkgZXQgYWwuIChQZXRlcikKLSBJbXByb3ZlIGd1ZF9jb25u
ZWN0b3JfZmlsbF9wcm9wZXJ0aWVzKCkgKFBldGVyKQotIEFkZCBHVURfUElYRUxfRk9STUFUX1JH
QjExMSAoUGV0ZXIpCi0gUmVtb3ZlIEdVRF9SRVFfU0VUX1ZFUlNJT04gKFBldGVyKQotIEZpeCBE
Uk1fSU9DVExfTU9ERV9PQkpfU0VUUFJPUEVSVFkgYW5kIHRoZSByb3RhdGlvbiBwcm9wZXJ0eQot
IEZpeCBkbWEtYnVmIGltcG9ydCAoVGhvbWFzKQoKdjg6Ci0gRm9yZ290IHRvIGZpbHRlciBSR0Ix
MTEgZnJvbSByZWFjaGluZyB1c2Vyc3BhY2UKLSBIYW5kbGUgYSBkZXZpY2UgdGhhdCBvbmx5IHJl
dHVybnMgdW5rbm93biBkZXZpY2UgcHJvcGVydGllcyAoUGV0ZXIpCi0gcy9HVURfUElYRUxfRk9S
TUFUX1JHQjExMS9HVURfUElYRUxfRk9STUFUX1hSR0IxMTExLyAoUGV0ZXIpCi0gRml4IFIxIGFu
ZCBYUkdCMTExMSBmb3JtYXQgY29udmVyc2lvbgotIEFkZCBGSVhNRSBhYm91dCBCaWcgRW5kaWFu
IGJlaW5nIGJyb2tlbiAoUGV0ZXIsIElsaWEpCgpDYzogTHVib21pciBSaW50ZWwgPGxrdW5kcmFr
QHYzLnNrPgpBY2tlZC1ieTogRGFuaWVsIFZldHRlciA8ZGFuaWVsLnZldHRlckBmZndsbC5jaD4K
UmV2aWV3ZWQtYnk6IFBldGVyIFN0dWdlIDxwZXRlckBzdHVnZS5zZT4KVGVzdGVkLWJ5OiBQZXRl
ciBTdHVnZSA8cGV0ZXJAc3R1Z2Uuc2U+ClNpZ25lZC1vZmYtYnk6IE5vcmFsZiBUcsO4bm5lcyA8
bm9yYWxmQHRyb25uZXMub3JnPgotLS0KIE1BSU5UQUlORVJTICAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9LY29uZmlnICAgICAgICAgICAgIHwgICAyICsK
IGRyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZSAgICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1
L2RybS9ndWQvS2NvbmZpZyAgICAgICAgIHwgIDE0ICsKIGRyaXZlcnMvZ3B1L2RybS9ndWQvTWFr
ZWZpbGUgICAgICAgIHwgICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9ndWQvZ3VkX2Nvbm5lY3Rvci5j
IHwgNzI5ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9ndWQv
Z3VkX2Rydi5jICAgICAgIHwgNjYxICsrKysrKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMv
Z3B1L2RybS9ndWQvZ3VkX2ludGVybmFsLmggIHwgMTU0ICsrKysrKwogZHJpdmVycy9ncHUvZHJt
L2d1ZC9ndWRfcGlwZS5jICAgICAgfCA1NTIgKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRl
L2RybS9ndWQuaCAgICAgICAgICAgICAgICAgICB8IDMzMyArKysrKysrKysrKysrCiAxMCBmaWxl
cyBjaGFuZ2VkLCAyNDU4IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJz
L2dwdS9kcm0vZ3VkL0tjb25maWcKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0v
Z3VkL01ha2VmaWxlCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2d1ZC9ndWRf
Y29ubmVjdG9yLmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9k
cnYuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9ndWQvZ3VkX2ludGVybmFs
LmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9waXBlLmMKIGNy
ZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2RybS9ndWQuaAoKZGlmZiAtLWdpdCBhL01BSU5UQUlO
RVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggMDAxMTJjMDQ0NjA4Li5lN2Y3MWFjNTVmMDggMTAwNjQ0
Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBAIC01NTI1LDYgKzU1MjUsMTQg
QEAgUzoJTWFpbnRhaW5lZAogRjoJRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL2Rp
c3BsYXkvcGFuZWwvZmVpeWFuZyxmeTA3MDI0ZGkyNmEzMGQueWFtbAogRjoJZHJpdmVycy9ncHUv
ZHJtL3BhbmVsL3BhbmVsLWZlaXlhbmctZnkwNzAyNGRpMjZhMzBkLmMKIAorRFJNIERSSVZFUiBG
T1IgR0VORVJJQyBVU0IgRElTUExBWQorTToJTm9yYWxmIFRyw7hubmVzIDxub3JhbGZAdHJvbm5l
cy5vcmc+CitTOglNYWludGFpbmVkCitXOglodHRwczovL2dpdGh1Yi5jb20vbm90cm8vZ3VkL3dp
a2kKK1Q6CWdpdCBnaXQ6Ly9hbm9uZ2l0LmZyZWVkZXNrdG9wLm9yZy9kcm0vZHJtLW1pc2MKK0Y6
CWRyaXZlcnMvZ3B1L2RybS9ndWQvCitGOglpbmNsdWRlL2RybS9ndWQuaAorCiBEUk0gRFJJVkVS
IEZPUiBHUkFJTiBNRURJQSBHTTEyVTMyMCBQUk9KRUNUT1JTCiBNOglIYW5zIGRlIEdvZWRlIDxo
ZGVnb2VkZUByZWRoYXQuY29tPgogUzoJTWFpbnRhaW5lZApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL0tjb25maWcgYi9kcml2ZXJzL2dwdS9kcm0vS2NvbmZpZwppbmRleCAxNDdkNjFiOTY3
NGUuLjZkM2Y0NzkzM2U1MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL0tjb25maWcKKysr
IGIvZHJpdmVycy9ncHUvZHJtL0tjb25maWcKQEAgLTM4OCw2ICszODgsOCBAQCBzb3VyY2UgImRy
aXZlcnMvZ3B1L2RybS90aWRzcy9LY29uZmlnIgogCiBzb3VyY2UgImRyaXZlcnMvZ3B1L2RybS94
bG54L0tjb25maWciCiAKK3NvdXJjZSAiZHJpdmVycy9ncHUvZHJtL2d1ZC9LY29uZmlnIgorCiAj
IEtlZXAgbGVnYWN5IGRyaXZlcnMgbGFzdAogCiBtZW51Y29uZmlnIERSTV9MRUdBQ1kKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmls
ZQppbmRleCA4MTU2OTAwOWY4ODQuLjc4ZGQ4ZTEyNTI1ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9NYWtlZmlsZQpAQCAtMTI0LDMg
KzEyNCw0IEBAIG9iai0kKENPTkZJR19EUk1fQVNQRUVEX0dGWCkgKz0gYXNwZWVkLwogb2JqLSQo
Q09ORklHX0RSTV9NQ0RFKSArPSBtY2RlLwogb2JqLSQoQ09ORklHX0RSTV9USURTUykgKz0gdGlk
c3MvCiBvYmoteQkJCSs9IHhsbngvCitvYmoteQkJCSs9IGd1ZC8KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9ndWQvS2NvbmZpZyBiL2RyaXZlcnMvZ3B1L2RybS9ndWQvS2NvbmZpZwpuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjFjODYwMWJmNGQ5MQotLS0gL2Rl
di9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ndWQvS2NvbmZpZwpAQCAtMCwwICsxLDE0IEBA
CisjIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisKK2NvbmZpZyBEUk1fR1VECisJ
dHJpc3RhdGUgIkdVRCBVU0IgRGlzcGxheSIKKwlkZXBlbmRzIG9uIERSTSAmJiBVU0IKKwlzZWxl
Y3QgTFo0X0NPTVBSRVNTCisJc2VsZWN0IERSTV9LTVNfSEVMUEVSCisJc2VsZWN0IERSTV9HRU1f
U0hNRU1fSEVMUEVSCisJc2VsZWN0IEJBQ0tMSUdIVF9DTEFTU19ERVZJQ0UKKwloZWxwCisJICBU
aGlzIGlzIGEgRFJNIGRpc3BsYXkgZHJpdmVyIGZvciBHVUQgVVNCIERpc3BsYXlzIG9yIGRpc3Bs
YXkKKwkgIGFkYXB0ZXJzLgorCisJICBJZiBNIGlzIHNlbGVjdGVkIHRoZSBtb2R1bGUgd2lsbCBi
ZSBjYWxsZWQgZ3VkLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2d1ZC9NYWtlZmlsZSBi
L2RyaXZlcnMvZ3B1L2RybS9ndWQvTWFrZWZpbGUKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMDAwMDAwLi42OGExYzYyMmNmMzMKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vZ3VkL01ha2VmaWxlCkBAIC0wLDAgKzEsNCBAQAorIyBTUERYLUxpY2Vuc2UtSWRlbnRp
ZmllcjogR1BMLTIuMAorCitndWQteQkJCQk6PSBndWRfZHJ2Lm8gZ3VkX3BpcGUubyBndWRfY29u
bmVjdG9yLm8KK29iai0kKENPTkZJR19EUk1fR1VEKQkJKz0gZ3VkLm8KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9ndWQvZ3VkX2Nvbm5lY3Rvci5jIGIvZHJpdmVycy9ncHUvZHJtL2d1ZC9n
dWRfY29ubmVjdG9yLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5l
YzQ5NWRjZDYxMjIKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9j
b25uZWN0b3IuYwpAQCAtMCwwICsxLDcyOSBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IE1JVAorLyoKKyAqIENvcHlyaWdodCAyMDIwIE5vcmFsZiBUcsO4bm5lcworICovCisKKyNpbmNs
dWRlIDxsaW51eC9iYWNrbGlnaHQuaD4KKyNpbmNsdWRlIDxsaW51eC93b3JrcXVldWUuaD4KKwor
I2luY2x1ZGUgPGRybS9kcm1fYXRvbWljLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9hdG9taWNfc3Rh
dGVfaGVscGVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9jb25uZWN0b3IuaD4KKyNpbmNsdWRlIDxk
cm0vZHJtX2Rydi5oPgorI2luY2x1ZGUgPGRybS9kcm1fZW5jb2Rlci5oPgorI2luY2x1ZGUgPGRy
bS9kcm1fZmlsZS5oPgorI2luY2x1ZGUgPGRybS9kcm1fbW9kZXNldF9oZWxwZXJfdnRhYmxlcy5o
PgorI2luY2x1ZGUgPGRybS9kcm1fcHJpbnQuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX3Byb2JlX2hl
bHBlci5oPgorI2luY2x1ZGUgPGRybS9kcm1fc2ltcGxlX2ttc19oZWxwZXIuaD4KKyNpbmNsdWRl
IDxkcm0vZ3VkLmg+CisKKyNpbmNsdWRlICJndWRfaW50ZXJuYWwuaCIKKworc3RydWN0IGd1ZF9j
b25uZWN0b3IgeworCXN0cnVjdCBkcm1fY29ubmVjdG9yIGNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJt
X2VuY29kZXIgZW5jb2RlcjsKKwlzdHJ1Y3QgYmFja2xpZ2h0X2RldmljZSAqYmFja2xpZ2h0Owor
CXN0cnVjdCB3b3JrX3N0cnVjdCBiYWNrbGlnaHRfd29yazsKKworCS8qIFN1cHBvcnRlZCBwcm9w
ZXJ0aWVzICovCisJdTE2ICpwcm9wZXJ0aWVzOworCXVuc2lnbmVkIGludCBudW1fcHJvcGVydGll
czsKKworCS8qIEluaXRpYWwgZ2FkZ2V0IHR2IHN0YXRlIGlmIGFwcGxpY2FibGUsIGFwcGxpZWQg
b24gc3RhdGUgcmVzZXQgKi8KKwlzdHJ1Y3QgZHJtX3R2X2Nvbm5lY3Rvcl9zdGF0ZSBpbml0aWFs
X3R2X3N0YXRlOworCisJLyoKKwkgKiBJbml0aWFsIGdhZGdldCBiYWNrbGlnaHQgYnJpZ2h0bmVz
cyBpZiBhcHBsaWNhYmxlLCBhcHBsaWVkIG9uIHN0YXRlIHJlc2V0LgorCSAqIFRoZSB2YWx1ZSAt
RU5PREVWIGlzIHVzZWQgdG8gc2lnbmFsIG5vIGJhY2tsaWdodC4KKwkgKi8KKwlpbnQgaW5pdGlh
bF9icmlnaHRuZXNzOworfTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3QgZ3VkX2Nvbm5lY3RvciAq
dG9fZ3VkX2Nvbm5lY3RvcihzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQoreworCXJl
dHVybiBjb250YWluZXJfb2YoY29ubmVjdG9yLCBzdHJ1Y3QgZ3VkX2Nvbm5lY3RvciwgY29ubmVj
dG9yKTsKK30KKworc3RhdGljIHZvaWQgZ3VkX2Nvbm5fZXJyKHN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3IsIGNvbnN0IGNoYXIgKm1zZywgaW50IHJldCkKK3sKKwlkZXZfZXJyKGNvbm5l
Y3Rvci0+ZGV2LT5kZXYsICIlczogJXMgKHJldD0lZClcbiIsIGNvbm5lY3Rvci0+bmFtZSwgbXNn
LCByZXQpOworfQorCisvKgorICogVXNlIGEgd29ya2VyIHRvIGF2b2lkIHRha2luZyBrbXMgbG9j
a3MgaW5zaWRlIHRoZSBiYWNrbGlnaHQgbG9jay4KKyAqIE90aGVyIGRpc3BsYXkgZHJpdmVycyB1
c2UgYmFja2xpZ2h0IHdpdGhpbiB0aGVpciBrbXMgbG9ja3MuCisgKiBUaGlzIGF2b2lkcyBpbmNv
bnNpc3RlbnQgbG9ja2luZyBydWxlcywgd2hpY2ggd291bGQgdXBzZXQgbG9ja2RlcC4KKyAqLwor
c3RhdGljIHZvaWQgZ3VkX2Nvbm5lY3Rvcl9iYWNrbGlnaHRfdXBkYXRlX3N0YXR1c193b3JrKHN0
cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKK3sKKwlzdHJ1Y3QgZ3VkX2Nvbm5lY3RvciAqZ2Nvbm4g
PSBjb250YWluZXJfb2Yod29yaywgc3RydWN0IGd1ZF9jb25uZWN0b3IsIGJhY2tsaWdodF93b3Jr
KTsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yID0gJmdjb25uLT5jb25uZWN0b3I7
CisJc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5lY3Rvcl9zdGF0ZTsKKwlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZHJtID0gY29ubmVjdG9yLT5kZXY7CisJc3RydWN0IGRybV9tb2Rlc2V0X2Fj
cXVpcmVfY3R4IGN0eDsKKwlzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGU7CisJaW50IGlk
eCwgcmV0OworCisJaWYgKCFkcm1fZGV2X2VudGVyKGRybSwgJmlkeCkpCisJCXJldHVybjsKKwor
CXN0YXRlID0gZHJtX2F0b21pY19zdGF0ZV9hbGxvYyhkcm0pOworCWlmICghc3RhdGUpIHsKKwkJ
cmV0ID0gLUVOT01FTTsKKwkJZ290byBleGl0OworCX0KKworCWRybV9tb2Rlc2V0X2FjcXVpcmVf
aW5pdCgmY3R4LCAwKTsKKwlzdGF0ZS0+YWNxdWlyZV9jdHggPSAmY3R4OworcmV0cnk6CisJY29u
bmVjdG9yX3N0YXRlID0gZHJtX2F0b21pY19nZXRfY29ubmVjdG9yX3N0YXRlKHN0YXRlLCBjb25u
ZWN0b3IpOworCWlmIChJU19FUlIoY29ubmVjdG9yX3N0YXRlKSkgeworCQlyZXQgPSBQVFJfRVJS
KGNvbm5lY3Rvcl9zdGF0ZSk7CisJCWdvdG8gb3V0OworCX0KKworCS8qIFJldXNlIHR2LmJyaWdo
dG5lc3MgdG8gYXZvaWQgaGF2aW5nIHRvIHN1YmNsYXNzICovCisJY29ubmVjdG9yX3N0YXRlLT50
di5icmlnaHRuZXNzID0gZ2Nvbm4tPmJhY2tsaWdodC0+cHJvcHMuYnJpZ2h0bmVzczsKKworCXJl
dCA9IGRybV9hdG9taWNfY29tbWl0KHN0YXRlKTsKK291dDoKKwlpZiAocmV0ID09IC1FREVBRExL
KSB7CisJCWRybV9hdG9taWNfc3RhdGVfY2xlYXIoc3RhdGUpOworCQlkcm1fbW9kZXNldF9iYWNr
b2ZmKCZjdHgpOworCQlnb3RvIHJldHJ5OworCX0KKworCWRybV9hdG9taWNfc3RhdGVfcHV0KHN0
YXRlKTsKKworCWRybV9tb2Rlc2V0X2Ryb3BfbG9ja3MoJmN0eCk7CisJZHJtX21vZGVzZXRfYWNx
dWlyZV9maW5pKCZjdHgpOworZXhpdDoKKwlkcm1fZGV2X2V4aXQoaWR4KTsKKworCWlmIChyZXQp
CisJCWRldl9lcnIoZHJtLT5kZXYsICJGYWlsZWQgdG8gdXBkYXRlIGJhY2tsaWdodCwgZXJyPSVk
XG4iLCByZXQpOworfQorCitzdGF0aWMgaW50IGd1ZF9jb25uZWN0b3JfYmFja2xpZ2h0X3VwZGF0
ZV9zdGF0dXMoc3RydWN0IGJhY2tsaWdodF9kZXZpY2UgKmJkKQoreworCXN0cnVjdCBkcm1fY29u
bmVjdG9yICpjb25uZWN0b3IgPSBibF9nZXRfZGF0YShiZCk7CisJc3RydWN0IGd1ZF9jb25uZWN0
b3IgKmdjb25uID0gdG9fZ3VkX2Nvbm5lY3Rvcihjb25uZWN0b3IpOworCisJLyogVGhlIFVTQiB0
aW1lb3V0IGlzIDUgc2Vjb25kcyBzbyB1c2Ugc3lzdGVtX2xvbmdfd3EgZm9yIHdvcnN0IGNhc2Ug
c2NlbmFyaW8gKi8KKwlxdWV1ZV93b3JrKHN5c3RlbV9sb25nX3dxLCAmZ2Nvbm4tPmJhY2tsaWdo
dF93b3JrKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IGJhY2tsaWdo
dF9vcHMgZ3VkX2Nvbm5lY3Rvcl9iYWNrbGlnaHRfb3BzID0geworCS51cGRhdGVfc3RhdHVzCT0g
Z3VkX2Nvbm5lY3Rvcl9iYWNrbGlnaHRfdXBkYXRlX3N0YXR1cywKK307CisKK3N0YXRpYyBpbnQg
Z3VkX2Nvbm5lY3Rvcl9iYWNrbGlnaHRfcmVnaXN0ZXIoc3RydWN0IGd1ZF9jb25uZWN0b3IgKmdj
b25uKQoreworCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IgPSAmZ2Nvbm4tPmNvbm5l
Y3RvcjsKKwlzdHJ1Y3QgYmFja2xpZ2h0X2RldmljZSAqYmQ7CisJY29uc3QgY2hhciAqbmFtZTsK
Kwljb25zdCBzdHJ1Y3QgYmFja2xpZ2h0X3Byb3BlcnRpZXMgcHJvcHMgPSB7CisJCS50eXBlID0g
QkFDS0xJR0hUX1JBVywKKwkJLnNjYWxlID0gQkFDS0xJR0hUX1NDQUxFX05PTl9MSU5FQVIsCisJ
CS5tYXhfYnJpZ2h0bmVzcyA9IDEwMCwKKwkJLmJyaWdodG5lc3MgPSBnY29ubi0+aW5pdGlhbF9i
cmlnaHRuZXNzLAorCX07CisKKwluYW1lID0ga2FzcHJpbnRmKEdGUF9LRVJORUwsICJjYXJkJWQt
JXMtYmFja2xpZ2h0IiwKKwkJCSBjb25uZWN0b3ItPmRldi0+cHJpbWFyeS0+aW5kZXgsIGNvbm5l
Y3Rvci0+bmFtZSk7CisJaWYgKCFuYW1lKQorCQlyZXR1cm4gLUVOT01FTTsKKworCWJkID0gYmFj
a2xpZ2h0X2RldmljZV9yZWdpc3RlcihuYW1lLCBjb25uZWN0b3ItPmtkZXYsIGNvbm5lY3RvciwK
KwkJCQkgICAgICAgJmd1ZF9jb25uZWN0b3JfYmFja2xpZ2h0X29wcywgJnByb3BzKTsKKwlrZnJl
ZShuYW1lKTsKKwlpZiAoSVNfRVJSKGJkKSkKKwkJcmV0dXJuIFBUUl9FUlIoYmQpOworCisJZ2Nv
bm4tPmJhY2tsaWdodCA9IGJkOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgZ3VkX2Nv
bm5lY3Rvcl9kZXRlY3Qoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKKwkJCQlzdHJ1
Y3QgZHJtX21vZGVzZXRfYWNxdWlyZV9jdHggKmN0eCwgYm9vbCBmb3JjZSkKK3sKKwlzdHJ1Y3Qg
Z3VkX2RldmljZSAqZ2RybSA9IHRvX2d1ZF9kZXZpY2UoY29ubmVjdG9yLT5kZXYpOworCWludCBp
ZHgsIHJldDsKKwl1OCBzdGF0dXM7CisKKwlpZiAoIWRybV9kZXZfZW50ZXIoY29ubmVjdG9yLT5k
ZXYsICZpZHgpKQorCQlyZXR1cm4gY29ubmVjdG9yX3N0YXR1c19kaXNjb25uZWN0ZWQ7CisKKwlp
ZiAoZm9yY2UpIHsKKwkJcmV0ID0gZ3VkX3VzYl9zZXQoZ2RybSwgR1VEX1JFUV9TRVRfQ09OTkVD
VE9SX0ZPUkNFX0RFVEVDVCwKKwkJCQkgIGNvbm5lY3Rvci0+aW5kZXgsIE5VTEwsIDApOworCQlp
ZiAocmV0KSB7CisJCQlyZXQgPSBjb25uZWN0b3Jfc3RhdHVzX3Vua25vd247CisJCQlnb3RvIGV4
aXQ7CisJCX0KKwl9CisKKwlyZXQgPSBndWRfdXNiX2dldF91OChnZHJtLCBHVURfUkVRX0dFVF9D
T05ORUNUT1JfU1RBVFVTLCBjb25uZWN0b3ItPmluZGV4LCAmc3RhdHVzKTsKKwlpZiAocmV0KSB7
CisJCXJldCA9IGNvbm5lY3Rvcl9zdGF0dXNfdW5rbm93bjsKKwkJZ290byBleGl0OworCX0KKwor
CXN3aXRjaCAoc3RhdHVzICYgR1VEX0NPTk5FQ1RPUl9TVEFUVVNfQ09OTkVDVEVEX01BU0spIHsK
KwljYXNlIEdVRF9DT05ORUNUT1JfU1RBVFVTX0RJU0NPTk5FQ1RFRDoKKwkJcmV0ID0gY29ubmVj
dG9yX3N0YXR1c19kaXNjb25uZWN0ZWQ7CisJCWJyZWFrOworCWNhc2UgR1VEX0NPTk5FQ1RPUl9T
VEFUVVNfQ09OTkVDVEVEOgorCQlyZXQgPSBjb25uZWN0b3Jfc3RhdHVzX2Nvbm5lY3RlZDsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJcmV0ID0gY29ubmVjdG9yX3N0YXR1c191bmtub3duOworCQli
cmVhazsKKwl9OworCisJaWYgKHN0YXR1cyAmIEdVRF9DT05ORUNUT1JfU1RBVFVTX0NIQU5HRUQp
CisJCWNvbm5lY3Rvci0+ZXBvY2hfY291bnRlciArPSAxOworZXhpdDoKKwlkcm1fZGV2X2V4aXQo
aWR4KTsKKworCXJldHVybiByZXQ7Cit9CisKK3N0cnVjdCBndWRfY29ubmVjdG9yX2dldF9lZGlk
X2N0eCB7CisJdm9pZCAqYnVmOworCXNpemVfdCBsZW47CisJYm9vbCBlZGlkX292ZXJyaWRlOwor
fTsKKworc3RhdGljIGludCBndWRfY29ubmVjdG9yX2dldF9lZGlkX2Jsb2NrKHZvaWQgKmRhdGEs
IHU4ICpidWYsIHVuc2lnbmVkIGludCBibG9jaywgc2l6ZV90IGxlbikKK3sKKwlzdHJ1Y3QgZ3Vk
X2Nvbm5lY3Rvcl9nZXRfZWRpZF9jdHggKmN0eCA9IGRhdGE7CisJc2l6ZV90IHN0YXJ0ID0gYmxv
Y2sgKiBFRElEX0xFTkdUSDsKKworCWN0eC0+ZWRpZF9vdmVycmlkZSA9IGZhbHNlOworCisJaWYg
KHN0YXJ0ICsgbGVuID4gY3R4LT5sZW4pCisJCXJldHVybiAtMTsKKworCW1lbWNweShidWYsIGN0
eC0+YnVmICsgc3RhcnQsIGxlbik7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBndWRf
Y29ubmVjdG9yX2dldF9tb2RlcyhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQorewor
CXN0cnVjdCBndWRfZGV2aWNlICpnZHJtID0gdG9fZ3VkX2RldmljZShjb25uZWN0b3ItPmRldik7
CisJc3RydWN0IGd1ZF9kaXNwbGF5X21vZGVfcmVxICpyZXFtb2RlcyA9IE5VTEw7CisJc3RydWN0
IGd1ZF9jb25uZWN0b3JfZ2V0X2VkaWRfY3R4IGVkaWRfY3R4OworCXVuc2lnbmVkIGludCBpLCBu
dW1fbW9kZXMgPSAwOworCXN0cnVjdCBlZGlkICplZGlkID0gTlVMTDsKKwlpbnQgaWR4LCByZXQ7
CisKKwlpZiAoIWRybV9kZXZfZW50ZXIoY29ubmVjdG9yLT5kZXYsICZpZHgpKQorCQlyZXR1cm4g
MDsKKworCWVkaWRfY3R4LmVkaWRfb3ZlcnJpZGUgPSB0cnVlOworCWVkaWRfY3R4LmJ1ZiA9IGtt
YWxsb2MoR1VEX0NPTk5FQ1RPUl9NQVhfRURJRF9MRU4sIEdGUF9LRVJORUwpOworCWlmICghZWRp
ZF9jdHguYnVmKQorCQlnb3RvIG91dDsKKworCXJldCA9IGd1ZF91c2JfZ2V0KGdkcm0sIEdVRF9S
RVFfR0VUX0NPTk5FQ1RPUl9FRElELCBjb25uZWN0b3ItPmluZGV4LAorCQkJICBlZGlkX2N0eC5i
dWYsIEdVRF9DT05ORUNUT1JfTUFYX0VESURfTEVOKTsKKwlpZiAocmV0ID4gMCAmJiByZXQgJSBF
RElEX0xFTkdUSCkgeworCQlndWRfY29ubl9lcnIoY29ubmVjdG9yLCAiSW52YWxpZCBFRElEIHNp
emUiLCByZXQpOworCX0gZWxzZSBpZiAocmV0ID4gMCkgeworCQllZGlkX2N0eC5sZW4gPSByZXQ7
CisJCWVkaWQgPSBkcm1fZG9fZ2V0X2VkaWQoY29ubmVjdG9yLCBndWRfY29ubmVjdG9yX2dldF9l
ZGlkX2Jsb2NrLCAmZWRpZF9jdHgpOworCX0KKworCWtmcmVlKGVkaWRfY3R4LmJ1Zik7CisJZHJt
X2Nvbm5lY3Rvcl91cGRhdGVfZWRpZF9wcm9wZXJ0eShjb25uZWN0b3IsIGVkaWQpOworCisJaWYg
KGVkaWQgJiYgZWRpZF9jdHguZWRpZF9vdmVycmlkZSkKKwkJZ290byBvdXQ7CisKKwlyZXFtb2Rl
cyA9IGttYWxsb2NfYXJyYXkoR1VEX0NPTk5FQ1RPUl9NQVhfTlVNX01PREVTLCBzaXplb2YoKnJl
cW1vZGVzKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFyZXFtb2RlcykKKwkJZ290byBvdXQ7CisKKwly
ZXQgPSBndWRfdXNiX2dldChnZHJtLCBHVURfUkVRX0dFVF9DT05ORUNUT1JfTU9ERVMsIGNvbm5l
Y3Rvci0+aW5kZXgsCisJCQkgIHJlcW1vZGVzLCBHVURfQ09OTkVDVE9SX01BWF9OVU1fTU9ERVMg
KiBzaXplb2YoKnJlcW1vZGVzKSk7CisJaWYgKHJldCA8PSAwKQorCQlnb3RvIG91dDsKKwlpZiAo
cmV0ICUgc2l6ZW9mKCpyZXFtb2RlcykpIHsKKwkJZ3VkX2Nvbm5fZXJyKGNvbm5lY3RvciwgIklu
dmFsaWQgZGlzcGxheSBtb2RlIGFycmF5IHNpemUiLCByZXQpOworCQlnb3RvIG91dDsKKwl9CisK
KwludW1fbW9kZXMgPSByZXQgLyBzaXplb2YoKnJlcW1vZGVzKTsKKworCWZvciAoaSA9IDA7IGkg
PCBudW1fbW9kZXM7IGkrKykgeworCQlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZTsKKwor
CQltb2RlID0gZHJtX21vZGVfY3JlYXRlKGNvbm5lY3Rvci0+ZGV2KTsKKwkJaWYgKCFtb2RlKSB7
CisJCQludW1fbW9kZXMgPSBpOworCQkJZ290byBvdXQ7CisJCX0KKworCQlndWRfdG9fZGlzcGxh
eV9tb2RlKG1vZGUsICZyZXFtb2Rlc1tpXSk7CisJCWRybV9tb2RlX3Byb2JlZF9hZGQoY29ubmVj
dG9yLCBtb2RlKTsKKwl9CitvdXQ6CisJaWYgKCFudW1fbW9kZXMpCisJCW51bV9tb2RlcyA9IGRy
bV9hZGRfZWRpZF9tb2Rlcyhjb25uZWN0b3IsIGVkaWQpOworCisJa2ZyZWUocmVxbW9kZXMpOwor
CWtmcmVlKGVkaWQpOworCWRybV9kZXZfZXhpdChpZHgpOworCisJcmV0dXJuIG51bV9tb2RlczsK
K30KKworc3RhdGljIGludCBndWRfY29ubmVjdG9yX2F0b21pY19jaGVjayhzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yLAorCQkJCSAgICAgIHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICpz
dGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqbmV3X3N0YXRlOworCXN0cnVj
dCBkcm1fY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7CisJc3RydWN0IGRybV9jb25uZWN0b3Jf
c3RhdGUgKm9sZF9zdGF0ZTsKKworCW5ld19zdGF0ZSA9IGRybV9hdG9taWNfZ2V0X25ld19jb25u
ZWN0b3Jfc3RhdGUoc3RhdGUsIGNvbm5lY3Rvcik7CisJaWYgKCFuZXdfc3RhdGUtPmNydGMpCisJ
CXJldHVybiAwOworCisJb2xkX3N0YXRlID0gZHJtX2F0b21pY19nZXRfb2xkX2Nvbm5lY3Rvcl9z
dGF0ZShzdGF0ZSwgY29ubmVjdG9yKTsKKwluZXdfY3J0Y19zdGF0ZSA9IGRybV9hdG9taWNfZ2V0
X25ld19jcnRjX3N0YXRlKHN0YXRlLCBuZXdfc3RhdGUtPmNydGMpOworCisJaWYgKG9sZF9zdGF0
ZS0+dHYubWFyZ2lucy5sZWZ0ICE9IG5ld19zdGF0ZS0+dHYubWFyZ2lucy5sZWZ0IHx8CisJICAg
IG9sZF9zdGF0ZS0+dHYubWFyZ2lucy5yaWdodCAhPSBuZXdfc3RhdGUtPnR2Lm1hcmdpbnMucmln
aHQgfHwKKwkgICAgb2xkX3N0YXRlLT50di5tYXJnaW5zLnRvcCAhPSBuZXdfc3RhdGUtPnR2Lm1h
cmdpbnMudG9wIHx8CisJICAgIG9sZF9zdGF0ZS0+dHYubWFyZ2lucy5ib3R0b20gIT0gbmV3X3N0
YXRlLT50di5tYXJnaW5zLmJvdHRvbSB8fAorCSAgICBvbGRfc3RhdGUtPnR2Lm1vZGUgIT0gbmV3
X3N0YXRlLT50di5tb2RlIHx8CisJICAgIG9sZF9zdGF0ZS0+dHYuYnJpZ2h0bmVzcyAhPSBuZXdf
c3RhdGUtPnR2LmJyaWdodG5lc3MgfHwKKwkgICAgb2xkX3N0YXRlLT50di5jb250cmFzdCAhPSBu
ZXdfc3RhdGUtPnR2LmNvbnRyYXN0IHx8CisJICAgIG9sZF9zdGF0ZS0+dHYuZmxpY2tlcl9yZWR1
Y3Rpb24gIT0gbmV3X3N0YXRlLT50di5mbGlja2VyX3JlZHVjdGlvbiB8fAorCSAgICBvbGRfc3Rh
dGUtPnR2Lm92ZXJzY2FuICE9IG5ld19zdGF0ZS0+dHYub3ZlcnNjYW4gfHwKKwkgICAgb2xkX3N0
YXRlLT50di5zYXR1cmF0aW9uICE9IG5ld19zdGF0ZS0+dHYuc2F0dXJhdGlvbiB8fAorCSAgICBv
bGRfc3RhdGUtPnR2Lmh1ZSAhPSBuZXdfc3RhdGUtPnR2Lmh1ZSkKKwkJbmV3X2NydGNfc3RhdGUt
PmNvbm5lY3RvcnNfY2hhbmdlZCA9IHRydWU7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGNv
bnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX2hlbHBlcl9mdW5jcyBndWRfY29ubmVjdG9yX2hlbHBl
cl9mdW5jcyA9IHsKKwkuZGV0ZWN0X2N0eCA9IGd1ZF9jb25uZWN0b3JfZGV0ZWN0LAorCS5nZXRf
bW9kZXMgPSBndWRfY29ubmVjdG9yX2dldF9tb2RlcywKKwkuYXRvbWljX2NoZWNrID0gZ3VkX2Nv
bm5lY3Rvcl9hdG9taWNfY2hlY2ssCit9OworCitzdGF0aWMgaW50IGd1ZF9jb25uZWN0b3JfbGF0
ZV9yZWdpc3RlcihzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQoreworCXN0cnVjdCBn
dWRfY29ubmVjdG9yICpnY29ubiA9IHRvX2d1ZF9jb25uZWN0b3IoY29ubmVjdG9yKTsKKworCWlm
IChnY29ubi0+aW5pdGlhbF9icmlnaHRuZXNzIDwgMCkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4g
Z3VkX2Nvbm5lY3Rvcl9iYWNrbGlnaHRfcmVnaXN0ZXIoZ2Nvbm4pOworfQorCitzdGF0aWMgdm9p
ZCBndWRfY29ubmVjdG9yX2Vhcmx5X3VucmVnaXN0ZXIoc3RydWN0IGRybV9jb25uZWN0b3IgKmNv
bm5lY3RvcikKK3sKKwlzdHJ1Y3QgZ3VkX2Nvbm5lY3RvciAqZ2Nvbm4gPSB0b19ndWRfY29ubmVj
dG9yKGNvbm5lY3Rvcik7CisKKwliYWNrbGlnaHRfZGV2aWNlX3VucmVnaXN0ZXIoZ2Nvbm4tPmJh
Y2tsaWdodCk7CisJY2FuY2VsX3dvcmtfc3luYygmZ2Nvbm4tPmJhY2tsaWdodF93b3JrKTsKK30K
Kworc3RhdGljIHZvaWQgZ3VkX2Nvbm5lY3Rvcl9kZXN0cm95KHN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3IpCit7CisJc3RydWN0IGd1ZF9jb25uZWN0b3IgKmdjb25uID0gdG9fZ3VkX2Nv
bm5lY3Rvcihjb25uZWN0b3IpOworCisJZHJtX2Nvbm5lY3Rvcl9jbGVhbnVwKGNvbm5lY3Rvcik7
CisJa2ZyZWUoZ2Nvbm4tPnByb3BlcnRpZXMpOworCWtmcmVlKGdjb25uKTsKK30KKworc3RhdGlj
IHZvaWQgZ3VkX2Nvbm5lY3Rvcl9yZXNldChzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9y
KQoreworCXN0cnVjdCBndWRfY29ubmVjdG9yICpnY29ubiA9IHRvX2d1ZF9jb25uZWN0b3IoY29u
bmVjdG9yKTsKKworCWRybV9hdG9taWNfaGVscGVyX2Nvbm5lY3Rvcl9yZXNldChjb25uZWN0b3Ip
OworCWNvbm5lY3Rvci0+c3RhdGUtPnR2ID0gZ2Nvbm4tPmluaXRpYWxfdHZfc3RhdGU7CisJLyog
U2V0IG1hcmdpbnMgZnJvbSBjb21tYW5kIGxpbmUgKi8KKwlkcm1fYXRvbWljX2hlbHBlcl9jb25u
ZWN0b3JfdHZfcmVzZXQoY29ubmVjdG9yKTsKKwlpZiAoZ2Nvbm4tPmluaXRpYWxfYnJpZ2h0bmVz
cyA+PSAwKQorCQljb25uZWN0b3ItPnN0YXRlLT50di5icmlnaHRuZXNzID0gZ2Nvbm4tPmluaXRp
YWxfYnJpZ2h0bmVzczsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX2Z1
bmNzIGd1ZF9jb25uZWN0b3JfZnVuY3MgPSB7CisJLmZpbGxfbW9kZXMgPSBkcm1faGVscGVyX3By
b2JlX3NpbmdsZV9jb25uZWN0b3JfbW9kZXMsCisJLmxhdGVfcmVnaXN0ZXIgPSBndWRfY29ubmVj
dG9yX2xhdGVfcmVnaXN0ZXIsCisJLmVhcmx5X3VucmVnaXN0ZXIgPSBndWRfY29ubmVjdG9yX2Vh
cmx5X3VucmVnaXN0ZXIsCisJLmRlc3Ryb3kgPSBndWRfY29ubmVjdG9yX2Rlc3Ryb3ksCisJLnJl
c2V0ID0gZ3VkX2Nvbm5lY3Rvcl9yZXNldCwKKwkuYXRvbWljX2R1cGxpY2F0ZV9zdGF0ZSA9IGRy
bV9hdG9taWNfaGVscGVyX2Nvbm5lY3Rvcl9kdXBsaWNhdGVfc3RhdGUsCisJLmF0b21pY19kZXN0
cm95X3N0YXRlID0gZHJtX2F0b21pY19oZWxwZXJfY29ubmVjdG9yX2Rlc3Ryb3lfc3RhdGUsCit9
OworCisvKgorICogVGhlIHR2Lm1vZGUgcHJvcGVydHkgaXMgc2hhcmVkIGFtb25nIHRoZSBjb25u
ZWN0b3JzIGFuZCBpdHMgZW51bSBuYW1lcyBhcmUKKyAqIGRyaXZlciBzcGVjaWZpYy4gVGhpcyBt
ZWFucyB0aGF0IGlmIG1vcmUgdGhhbiBvbmUgY29ubmVjdG9yIHVzZXMgdHYubW9kZSwKKyAqIHRo
ZSBlbnVtIG5hbWVzIGhhcyB0byBiZSB0aGUgc2FtZS4KKyAqLworc3RhdGljIGludCBndWRfY29u
bmVjdG9yX2FkZF90dl9tb2RlKHN0cnVjdCBndWRfZGV2aWNlICpnZHJtLCBzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yKQoreworCXNpemVfdCBidWZfbGVuID0gR1VEX0NPTk5FQ1RPUl9U
Vl9NT0RFX01BWF9OVU0gKiBHVURfQ09OTkVDVE9SX1RWX01PREVfTkFNRV9MRU47CisJY29uc3Qg
Y2hhciAqbW9kZXNbR1VEX0NPTk5FQ1RPUl9UVl9NT0RFX01BWF9OVU1dOworCXVuc2lnbmVkIGlu
dCBpLCBudW1fbW9kZXM7CisJY2hhciAqYnVmOworCWludCByZXQ7CisKKwlidWYgPSBrbWFsbG9j
KGJ1Zl9sZW4sIEdGUF9LRVJORUwpOworCWlmICghYnVmKQorCQlyZXR1cm4gLUVOT01FTTsKKwor
CXJldCA9IGd1ZF91c2JfZ2V0KGdkcm0sIEdVRF9SRVFfR0VUX0NPTk5FQ1RPUl9UVl9NT0RFX1ZB
TFVFUywKKwkJCSAgY29ubmVjdG9yLT5pbmRleCwgYnVmLCBidWZfbGVuKTsKKwlpZiAocmV0IDwg
MCkKKwkJZ290byBmcmVlOworCWlmICghcmV0IHx8IHJldCAlIEdVRF9DT05ORUNUT1JfVFZfTU9E
RV9OQU1FX0xFTikgeworCQlyZXQgPSAtRUlPOworCQlnb3RvIGZyZWU7CisJfQorCisJbnVtX21v
ZGVzID0gcmV0IC8gR1VEX0NPTk5FQ1RPUl9UVl9NT0RFX05BTUVfTEVOOworCWZvciAoaSA9IDA7
IGkgPCBudW1fbW9kZXM7IGkrKykKKwkJbW9kZXNbaV0gPSAmYnVmW2kgKiBHVURfQ09OTkVDVE9S
X1RWX01PREVfTkFNRV9MRU5dOworCisJcmV0ID0gZHJtX21vZGVfY3JlYXRlX3R2X3Byb3BlcnRp
ZXMoY29ubmVjdG9yLT5kZXYsIG51bV9tb2RlcywgbW9kZXMpOworZnJlZToKKwlrZnJlZShidWYp
OworCWlmIChyZXQgPCAwKQorCQlndWRfY29ubl9lcnIoY29ubmVjdG9yLCAiRmFpbGVkIHRvIGFk
ZCBUViBtb2RlcyIsIHJldCk7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgc3RydWN0IGRy
bV9wcm9wZXJ0eSAqCitndWRfY29ubmVjdG9yX3Byb3BlcnR5X2xvb2t1cChzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yLCB1MTYgcHJvcCkKK3sKKwlzdHJ1Y3QgZHJtX21vZGVfY29uZmln
ICpjb25maWcgPSAmY29ubmVjdG9yLT5kZXYtPm1vZGVfY29uZmlnOworCisJc3dpdGNoIChwcm9w
KSB7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfTEVGVF9NQVJHSU46CisJCXJldHVybiBjb25maWct
PnR2X2xlZnRfbWFyZ2luX3Byb3BlcnR5OworCWNhc2UgR1VEX1BST1BFUlRZX1RWX1JJR0hUX01B
UkdJTjoKKwkJcmV0dXJuIGNvbmZpZy0+dHZfcmlnaHRfbWFyZ2luX3Byb3BlcnR5OworCWNhc2Ug
R1VEX1BST1BFUlRZX1RWX1RPUF9NQVJHSU46CisJCXJldHVybiBjb25maWctPnR2X3RvcF9tYXJn
aW5fcHJvcGVydHk7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfQk9UVE9NX01BUkdJTjoKKwkJcmV0
dXJuIGNvbmZpZy0+dHZfYm90dG9tX21hcmdpbl9wcm9wZXJ0eTsKKwljYXNlIEdVRF9QUk9QRVJU
WV9UVl9NT0RFOgorCQlyZXR1cm4gY29uZmlnLT50dl9tb2RlX3Byb3BlcnR5OworCWNhc2UgR1VE
X1BST1BFUlRZX1RWX0JSSUdIVE5FU1M6CisJCXJldHVybiBjb25maWctPnR2X2JyaWdodG5lc3Nf
cHJvcGVydHk7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfQ09OVFJBU1Q6CisJCXJldHVybiBjb25m
aWctPnR2X2NvbnRyYXN0X3Byb3BlcnR5OworCWNhc2UgR1VEX1BST1BFUlRZX1RWX0ZMSUNLRVJf
UkVEVUNUSU9OOgorCQlyZXR1cm4gY29uZmlnLT50dl9mbGlja2VyX3JlZHVjdGlvbl9wcm9wZXJ0
eTsKKwljYXNlIEdVRF9QUk9QRVJUWV9UVl9PVkVSU0NBTjoKKwkJcmV0dXJuIGNvbmZpZy0+dHZf
b3ZlcnNjYW5fcHJvcGVydHk7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfU0FUVVJBVElPTjoKKwkJ
cmV0dXJuIGNvbmZpZy0+dHZfc2F0dXJhdGlvbl9wcm9wZXJ0eTsKKwljYXNlIEdVRF9QUk9QRVJU
WV9UVl9IVUU6CisJCXJldHVybiBjb25maWctPnR2X2h1ZV9wcm9wZXJ0eTsKKwlkZWZhdWx0Ogor
CQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKKwl9Cit9CisKK3N0YXRpYyB1bnNpZ25lZCBpbnQg
Kmd1ZF9jb25uZWN0b3JfdHZfc3RhdGVfdmFsKHUxNiBwcm9wLCBzdHJ1Y3QgZHJtX3R2X2Nvbm5l
Y3Rvcl9zdGF0ZSAqc3RhdGUpCit7CisJc3dpdGNoIChwcm9wKSB7CisJY2FzZSBHVURfUFJPUEVS
VFlfVFZfTEVGVF9NQVJHSU46CisJCXJldHVybiAmc3RhdGUtPm1hcmdpbnMubGVmdDsKKwljYXNl
IEdVRF9QUk9QRVJUWV9UVl9SSUdIVF9NQVJHSU46CisJCXJldHVybiAmc3RhdGUtPm1hcmdpbnMu
cmlnaHQ7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfVE9QX01BUkdJTjoKKwkJcmV0dXJuICZzdGF0
ZS0+bWFyZ2lucy50b3A7CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfQk9UVE9NX01BUkdJTjoKKwkJ
cmV0dXJuICZzdGF0ZS0+bWFyZ2lucy5ib3R0b207CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfTU9E
RToKKwkJcmV0dXJuICZzdGF0ZS0+bW9kZTsKKwljYXNlIEdVRF9QUk9QRVJUWV9UVl9CUklHSFRO
RVNTOgorCQlyZXR1cm4gJnN0YXRlLT5icmlnaHRuZXNzOworCWNhc2UgR1VEX1BST1BFUlRZX1RW
X0NPTlRSQVNUOgorCQlyZXR1cm4gJnN0YXRlLT5jb250cmFzdDsKKwljYXNlIEdVRF9QUk9QRVJU
WV9UVl9GTElDS0VSX1JFRFVDVElPTjoKKwkJcmV0dXJuICZzdGF0ZS0+ZmxpY2tlcl9yZWR1Y3Rp
b247CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfT1ZFUlNDQU46CisJCXJldHVybiAmc3RhdGUtPm92
ZXJzY2FuOworCWNhc2UgR1VEX1BST1BFUlRZX1RWX1NBVFVSQVRJT046CisJCXJldHVybiAmc3Rh
dGUtPnNhdHVyYXRpb247CisJY2FzZSBHVURfUFJPUEVSVFlfVFZfSFVFOgorCQlyZXR1cm4gJnN0
YXRlLT5odWU7CisJZGVmYXVsdDoKKwkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CisJfQorfQor
CitzdGF0aWMgaW50IGd1ZF9jb25uZWN0b3JfYWRkX3Byb3BlcnRpZXMoc3RydWN0IGd1ZF9kZXZp
Y2UgKmdkcm0sIHN0cnVjdCBndWRfY29ubmVjdG9yICpnY29ubikKK3sKKwlzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yID0gJmdjb25uLT5jb25uZWN0b3I7CisJc3RydWN0IGRybV9kZXZp
Y2UgKmRybSA9ICZnZHJtLT5kcm07CisJc3RydWN0IGd1ZF9wcm9wZXJ0eV9yZXEgKnByb3BlcnRp
ZXM7CisJdW5zaWduZWQgaW50IGksIG51bV9wcm9wZXJ0aWVzOworCWludCByZXQ7CisKKwlwcm9w
ZXJ0aWVzID0ga2NhbGxvYyhHVURfQ09OTkVDVE9SX1BST1BFUlRJRVNfTUFYX05VTSwgc2l6ZW9m
KCpwcm9wZXJ0aWVzKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFwcm9wZXJ0aWVzKQorCQlyZXR1cm4g
LUVOT01FTTsKKworCXJldCA9IGd1ZF91c2JfZ2V0KGdkcm0sIEdVRF9SRVFfR0VUX0NPTk5FQ1RP
Ul9QUk9QRVJUSUVTLCBjb25uZWN0b3ItPmluZGV4LAorCQkJICBwcm9wZXJ0aWVzLCBHVURfQ09O
TkVDVE9SX1BST1BFUlRJRVNfTUFYX05VTSAqIHNpemVvZigqcHJvcGVydGllcykpOworCWlmIChy
ZXQgPD0gMCkKKwkJZ290byBvdXQ7CisJaWYgKHJldCAlIHNpemVvZigqcHJvcGVydGllcykpIHsK
KwkJcmV0ID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJbnVtX3Byb3BlcnRpZXMgPSByZXQg
LyBzaXplb2YoKnByb3BlcnRpZXMpOworCXJldCA9IDA7CisKKwlnY29ubi0+cHJvcGVydGllcyA9
IGtjYWxsb2MobnVtX3Byb3BlcnRpZXMsIHNpemVvZigqZ2Nvbm4tPnByb3BlcnRpZXMpLCBHRlBf
S0VSTkVMKTsKKwlpZiAoIWdjb25uLT5wcm9wZXJ0aWVzKSB7CisJCXJldCA9IC1FTk9NRU07CisJ
CWdvdG8gb3V0OworCX0KKworCWZvciAoaSA9IDA7IGkgPCBudW1fcHJvcGVydGllczsgaSsrKSB7
CisJCXUxNiBwcm9wID0gbGUxNl90b19jcHUocHJvcGVydGllc1tpXS5wcm9wKTsKKwkJdTY0IHZh
bCA9IGxlNjRfdG9fY3B1KHByb3BlcnRpZXNbaV0udmFsKTsKKwkJc3RydWN0IGRybV9wcm9wZXJ0
eSAqcHJvcGVydHk7CisJCXVuc2lnbmVkIGludCAqc3RhdGVfdmFsOworCisJCWRybV9kYmcoZHJt
LCAicHJvcGVydHk6ICV1ID0gJWxsdSgweCVsbHgpXG4iLCBwcm9wLCB2YWwsIHZhbCk7CisKKwkJ
c3dpdGNoIChwcm9wKSB7CisJCWNhc2UgR1VEX1BST1BFUlRZX1RWX0xFRlRfTUFSR0lOOgorCQkJ
ZmFsbHRocm91Z2g7CisJCWNhc2UgR1VEX1BST1BFUlRZX1RWX1JJR0hUX01BUkdJTjoKKwkJCWZh
bGx0aHJvdWdoOworCQljYXNlIEdVRF9QUk9QRVJUWV9UVl9UT1BfTUFSR0lOOgorCQkJZmFsbHRo
cm91Z2g7CisJCWNhc2UgR1VEX1BST1BFUlRZX1RWX0JPVFRPTV9NQVJHSU46CisJCQlyZXQgPSBk
cm1fbW9kZV9jcmVhdGVfdHZfbWFyZ2luX3Byb3BlcnRpZXMoZHJtKTsKKwkJCWlmIChyZXQpCisJ
CQkJZ290byBvdXQ7CisJCQlicmVhazsKKwkJY2FzZSBHVURfUFJPUEVSVFlfVFZfTU9ERToKKwkJ
CXJldCA9IGd1ZF9jb25uZWN0b3JfYWRkX3R2X21vZGUoZ2RybSwgY29ubmVjdG9yKTsKKwkJCWlm
IChyZXQpCisJCQkJZ290byBvdXQ7CisJCQlicmVhazsKKwkJY2FzZSBHVURfUFJPUEVSVFlfVFZf
QlJJR0hUTkVTUzoKKwkJCWZhbGx0aHJvdWdoOworCQljYXNlIEdVRF9QUk9QRVJUWV9UVl9DT05U
UkFTVDoKKwkJCWZhbGx0aHJvdWdoOworCQljYXNlIEdVRF9QUk9QRVJUWV9UVl9GTElDS0VSX1JF
RFVDVElPTjoKKwkJCWZhbGx0aHJvdWdoOworCQljYXNlIEdVRF9QUk9QRVJUWV9UVl9PVkVSU0NB
TjoKKwkJCWZhbGx0aHJvdWdoOworCQljYXNlIEdVRF9QUk9QRVJUWV9UVl9TQVRVUkFUSU9OOgor
CQkJZmFsbHRocm91Z2g7CisJCWNhc2UgR1VEX1BST1BFUlRZX1RWX0hVRToKKwkJCS8qIFRoaXMg
aXMgYSBuby1vcCBpZiBhbHJlYWR5IGFkZGVkLiAqLworCQkJcmV0ID0gZHJtX21vZGVfY3JlYXRl
X3R2X3Byb3BlcnRpZXMoZHJtLCAwLCBOVUxMKTsKKwkJCWlmIChyZXQpCisJCQkJZ290byBvdXQ7
CisJCQlicmVhazsKKwkJY2FzZSBHVURfUFJPUEVSVFlfQkFDS0xJR0hUX0JSSUdIVE5FU1M6CisJ
CQlpZiAodmFsID4gMTAwKSB7CisJCQkJcmV0ID0gLUVJTlZBTDsKKwkJCQlnb3RvIG91dDsKKwkJ
CX0KKwkJCWdjb25uLT5pbml0aWFsX2JyaWdodG5lc3MgPSB2YWw7CisJCQlicmVhazsKKwkJZGVm
YXVsdDoKKwkJCS8qIE5ldyBvbmVzIG1pZ2h0IHNob3cgdXAgaW4gZnV0dXJlIGRldmljZXMsIHNr
aXAgdGhvc2Ugd2UgZG9uJ3Qga25vdy4gKi8KKwkJCWRybV9kYmcoZHJtLCAiSWdub3JpbmcgdW5r
bm93biBwcm9wZXJ0eTogJXVcbiIsIHByb3ApOworCQkJY29udGludWU7CisJCX0KKworCQlnY29u
bi0+cHJvcGVydGllc1tnY29ubi0+bnVtX3Byb3BlcnRpZXMrK10gPSBwcm9wOworCisJCWlmIChw
cm9wID09IEdVRF9QUk9QRVJUWV9CQUNLTElHSFRfQlJJR0hUTkVTUykKKwkJCWNvbnRpbnVlOyAv
KiBub3QgYSBEUk0gcHJvcGVydHkgKi8KKworCQlwcm9wZXJ0eSA9IGd1ZF9jb25uZWN0b3JfcHJv
cGVydHlfbG9va3VwKGNvbm5lY3RvciwgcHJvcCk7CisJCWlmIChXQVJOX09OKElTX0VSUihwcm9w
ZXJ0eSkpKQorCQkJY29udGludWU7CisKKwkJc3RhdGVfdmFsID0gZ3VkX2Nvbm5lY3Rvcl90dl9z
dGF0ZV92YWwocHJvcCwgJmdjb25uLT5pbml0aWFsX3R2X3N0YXRlKTsKKwkJaWYgKFdBUk5fT04o
SVNfRVJSKHN0YXRlX3ZhbCkpKQorCQkJY29udGludWU7CisKKwkJKnN0YXRlX3ZhbCA9IHZhbDsK
KwkJZHJtX29iamVjdF9hdHRhY2hfcHJvcGVydHkoJmNvbm5lY3Rvci0+YmFzZSwgcHJvcGVydHks
IDApOworCX0KK291dDoKKwlrZnJlZShwcm9wZXJ0aWVzKTsKKworCXJldHVybiByZXQ7Cit9CisK
K2ludCBndWRfY29ubmVjdG9yX2ZpbGxfcHJvcGVydGllcyhzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9z
dGF0ZSAqY29ubmVjdG9yX3N0YXRlLAorCQkJCSAgc3RydWN0IGd1ZF9wcm9wZXJ0eV9yZXEgKnBy
b3BlcnRpZXMpCit7CisJc3RydWN0IGd1ZF9jb25uZWN0b3IgKmdjb25uID0gdG9fZ3VkX2Nvbm5l
Y3Rvcihjb25uZWN0b3Jfc3RhdGUtPmNvbm5lY3Rvcik7CisJdW5zaWduZWQgaW50IGk7CisKKwlm
b3IgKGkgPSAwOyBpIDwgZ2Nvbm4tPm51bV9wcm9wZXJ0aWVzOyBpKyspIHsKKwkJdTE2IHByb3Ag
PSBnY29ubi0+cHJvcGVydGllc1tpXTsKKwkJdTY0IHZhbDsKKworCQlpZiAocHJvcCA9PSBHVURf
UFJPUEVSVFlfQkFDS0xJR0hUX0JSSUdIVE5FU1MpIHsKKwkJCXZhbCA9IGNvbm5lY3Rvcl9zdGF0
ZS0+dHYuYnJpZ2h0bmVzczsKKwkJfSBlbHNlIHsKKwkJCXVuc2lnbmVkIGludCAqc3RhdGVfdmFs
OworCisJCQlzdGF0ZV92YWwgPSBndWRfY29ubmVjdG9yX3R2X3N0YXRlX3ZhbChwcm9wLCAmY29u
bmVjdG9yX3N0YXRlLT50dik7CisJCQlpZiAoV0FSTl9PTl9PTkNFKElTX0VSUihzdGF0ZV92YWwp
KSkKKwkJCQlyZXR1cm4gUFRSX0VSUihzdGF0ZV92YWwpOworCisJCQl2YWwgPSAqc3RhdGVfdmFs
OworCQl9CisKKwkJcHJvcGVydGllc1tpXS5wcm9wID0gY3B1X3RvX2xlMTYocHJvcCk7CisJCXBy
b3BlcnRpZXNbaV0udmFsID0gY3B1X3RvX2xlNjQodmFsKTsKKwl9CisKKwlyZXR1cm4gZ2Nvbm4t
Pm51bV9wcm9wZXJ0aWVzOworfQorCitzdGF0aWMgaW50IGd1ZF9jb25uZWN0b3JfY3JlYXRlKHN0
cnVjdCBndWRfZGV2aWNlICpnZHJtLCB1bnNpZ25lZCBpbnQgaW5kZXgsCisJCQkJc3RydWN0IGd1
ZF9jb25uZWN0b3JfZGVzY3JpcHRvcl9yZXEgKmRlc2MpCit7CisJc3RydWN0IGRybV9kZXZpY2Ug
KmRybSA9ICZnZHJtLT5kcm07CisJc3RydWN0IGd1ZF9jb25uZWN0b3IgKmdjb25uOworCXN0cnVj
dCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVy
OworCWludCByZXQsIGNvbm5lY3Rvcl90eXBlOworCXUzMiBmbGFnczsKKworCWdjb25uID0ga3ph
bGxvYyhzaXplb2YoKmdjb25uKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFnY29ubikKKwkJcmV0dXJu
IC1FTk9NRU07CisKKwlJTklUX1dPUksoJmdjb25uLT5iYWNrbGlnaHRfd29yaywgZ3VkX2Nvbm5l
Y3Rvcl9iYWNrbGlnaHRfdXBkYXRlX3N0YXR1c193b3JrKTsKKwlnY29ubi0+aW5pdGlhbF9icmln
aHRuZXNzID0gLUVOT0RFVjsKKwlmbGFncyA9IGxlMzJfdG9fY3B1KGRlc2MtPmZsYWdzKTsKKwlj
b25uZWN0b3IgPSAmZ2Nvbm4tPmNvbm5lY3RvcjsKKworCWRybV9kYmcoZHJtLCAiQ29ubmVjdG9y
OiBpbmRleD0ldSB0eXBlPSV1IGZsYWdzPTB4JXhcbiIsIGluZGV4LCBkZXNjLT5jb25uZWN0b3Jf
dHlwZSwgZmxhZ3MpOworCisJc3dpdGNoIChkZXNjLT5jb25uZWN0b3JfdHlwZSkgeworCWNhc2Ug
R1VEX0NPTk5FQ1RPUl9UWVBFX1BBTkVMOgorCQljb25uZWN0b3JfdHlwZSA9IERSTV9NT0RFX0NP
Tk5FQ1RPUl9VU0I7CisJCWJyZWFrOworCWNhc2UgR1VEX0NPTk5FQ1RPUl9UWVBFX1ZHQToKKwkJ
Y29ubmVjdG9yX3R5cGUgPSBEUk1fTU9ERV9DT05ORUNUT1JfVkdBOworCQlicmVhazsKKwljYXNl
IEdVRF9DT05ORUNUT1JfVFlQRV9EVkk6CisJCWNvbm5lY3Rvcl90eXBlID0gRFJNX01PREVfQ09O
TkVDVE9SX0RWSUQ7CisJCWJyZWFrOworCWNhc2UgR1VEX0NPTk5FQ1RPUl9UWVBFX0NPTVBPU0lU
RToKKwkJY29ubmVjdG9yX3R5cGUgPSBEUk1fTU9ERV9DT05ORUNUT1JfQ29tcG9zaXRlOworCQli
cmVhazsKKwljYXNlIEdVRF9DT05ORUNUT1JfVFlQRV9TVklERU86CisJCWNvbm5lY3Rvcl90eXBl
ID0gRFJNX01PREVfQ09OTkVDVE9SX1NWSURFTzsKKwkJYnJlYWs7CisJY2FzZSBHVURfQ09OTkVD
VE9SX1RZUEVfQ09NUE9ORU5UOgorCQljb25uZWN0b3JfdHlwZSA9IERSTV9NT0RFX0NPTk5FQ1RP
Ul9Db21wb25lbnQ7CisJCWJyZWFrOworCWNhc2UgR1VEX0NPTk5FQ1RPUl9UWVBFX0RJU1BMQVlQ
T1JUOgorCQljb25uZWN0b3JfdHlwZSA9IERSTV9NT0RFX0NPTk5FQ1RPUl9EaXNwbGF5UG9ydDsK
KwkJYnJlYWs7CisJY2FzZSBHVURfQ09OTkVDVE9SX1RZUEVfSERNSToKKwkJY29ubmVjdG9yX3R5
cGUgPSBEUk1fTU9ERV9DT05ORUNUT1JfSERNSUE7CisJCWJyZWFrOworCWRlZmF1bHQ6IC8qIGZ1
dHVyZSB0eXBlcyAqLworCQljb25uZWN0b3JfdHlwZSA9IERSTV9NT0RFX0NPTk5FQ1RPUl9VU0I7
CisJCWJyZWFrOworCX07CisKKwlkcm1fY29ubmVjdG9yX2hlbHBlcl9hZGQoY29ubmVjdG9yLCAm
Z3VkX2Nvbm5lY3Rvcl9oZWxwZXJfZnVuY3MpOworCXJldCA9IGRybV9jb25uZWN0b3JfaW5pdChk
cm0sIGNvbm5lY3RvciwgJmd1ZF9jb25uZWN0b3JfZnVuY3MsIGNvbm5lY3Rvcl90eXBlKTsKKwlp
ZiAocmV0KSB7CisJCWtmcmVlKGNvbm5lY3Rvcik7CisJCXJldHVybiByZXQ7CisJfQorCisJaWYg
KFdBUk5fT04oY29ubmVjdG9yLT5pbmRleCAhPSBpbmRleCkpCisJCXJldHVybiAtRUlOVkFMOwor
CisJaWYgKGZsYWdzICYgR1VEX0NPTk5FQ1RPUl9GTEFHU19QT0xMX1NUQVRVUykKKwkJY29ubmVj
dG9yLT5wb2xsZWQgPSAoRFJNX0NPTk5FQ1RPUl9QT0xMX0NPTk5FQ1QgfCBEUk1fQ09OTkVDVE9S
X1BPTExfRElTQ09OTkVDVCk7CisJaWYgKGZsYWdzICYgR1VEX0NPTk5FQ1RPUl9GTEFHU19JTlRF
UkxBQ0UpCisJCWNvbm5lY3Rvci0+aW50ZXJsYWNlX2FsbG93ZWQgPSB0cnVlOworCWlmIChmbGFn
cyAmIEdVRF9DT05ORUNUT1JfRkxBR1NfRE9VQkxFU0NBTikKKwkJY29ubmVjdG9yLT5kb3VibGVz
Y2FuX2FsbG93ZWQgPSB0cnVlOworCisJcmV0ID0gZ3VkX2Nvbm5lY3Rvcl9hZGRfcHJvcGVydGll
cyhnZHJtLCBnY29ubik7CisJaWYgKHJldCkgeworCQlndWRfY29ubl9lcnIoY29ubmVjdG9yLCAi
RmFpbGVkIHRvIGFkZCBwcm9wZXJ0aWVzIiwgcmV0KTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwkv
KiBUaGUgZmlyc3QgY29ubmVjdG9yIGlzIGF0dGFjaGVkIHRvIHRoZSBleGlzdGluZyBzaW1wbGUg
cGlwZSBlbmNvZGVyICovCisJaWYgKCFjb25uZWN0b3ItPmluZGV4KSB7CisJCWVuY29kZXIgPSAm
Z2RybS0+cGlwZS5lbmNvZGVyOworCX0gZWxzZSB7CisJCWVuY29kZXIgPSAmZ2Nvbm4tPmVuY29k
ZXI7CisKKwkJcmV0ID0gZHJtX3NpbXBsZV9lbmNvZGVyX2luaXQoZHJtLCBlbmNvZGVyLCBEUk1f
TU9ERV9FTkNPREVSX05PTkUpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKworCQllbmNv
ZGVyLT5wb3NzaWJsZV9jcnRjcyA9IDE7CisJfQorCisJcmV0dXJuIGRybV9jb25uZWN0b3JfYXR0
YWNoX2VuY29kZXIoY29ubmVjdG9yLCBlbmNvZGVyKTsKK30KKworaW50IGd1ZF9nZXRfY29ubmVj
dG9ycyhzdHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSkKK3sKKwlzdHJ1Y3QgZ3VkX2Nvbm5lY3Rvcl9k
ZXNjcmlwdG9yX3JlcSAqZGVzY3M7CisJdW5zaWduZWQgaW50IGksIG51bV9jb25uZWN0b3JzOwor
CWludCByZXQ7CisKKwlkZXNjcyA9IGttYWxsb2NfYXJyYXkoR1VEX0NPTk5FQ1RPUlNfTUFYX05V
TSwgc2l6ZW9mKCpkZXNjcyksIEdGUF9LRVJORUwpOworCWlmICghZGVzY3MpCisJCXJldHVybiAt
RU5PTUVNOworCisJcmV0ID0gZ3VkX3VzYl9nZXQoZ2RybSwgR1VEX1JFUV9HRVRfQ09OTkVDVE9S
UywgMCwKKwkJCSAgZGVzY3MsIEdVRF9DT05ORUNUT1JTX01BWF9OVU0gKiBzaXplb2YoZGVzY3Mp
KTsKKwlpZiAocmV0IDwgMCkKKwkJZ290byBmcmVlOworCWlmICghcmV0IHx8IHJldCAlIHNpemVv
ZigqZGVzY3MpKSB7CisJCXJldCA9IC1FSU87CisJCWdvdG8gZnJlZTsKKwl9CisKKwludW1fY29u
bmVjdG9ycyA9IHJldCAvIHNpemVvZigqZGVzY3MpOworCisJZm9yIChpID0gMDsgaSA8IG51bV9j
b25uZWN0b3JzOyBpKyspIHsKKwkJcmV0ID0gZ3VkX2Nvbm5lY3Rvcl9jcmVhdGUoZ2RybSwgaSwg
JmRlc2NzW2ldKTsKKwkJaWYgKHJldCkKKwkJCWdvdG8gZnJlZTsKKwl9CitmcmVlOgorCWtmcmVl
KGRlc2NzKTsKKworCXJldHVybiByZXQ7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
Z3VkL2d1ZF9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9ndWQvZ3VkX2Rydi5jCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNzI3NjEyMTI0ZGQwCi0tLSAvZGV2L251bGwK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2d1ZC9ndWRfZHJ2LmMKQEAgLTAsMCArMSw2NjEgQEAKKy8v
IFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKy8qCisgKiBDb3B5cmlnaHQgMjAyMCBOb3Jh
bGYgVHLDuG5uZXMKKyAqLworCisjaW5jbHVkZSA8bGludXgvZG1hLWJ1Zi5oPgorI2luY2x1ZGUg
PGxpbnV4L2RtYS1tYXBwaW5nLmg+CisjaW5jbHVkZSA8bGludXgvbHo0Lmg+CisjaW5jbHVkZSA8
bGludXgvbW9kdWxlLmg+CisjaW5jbHVkZSA8bGludXgvcGxhdGZvcm1fZGV2aWNlLmg+CisjaW5j
bHVkZSA8bGludXgvc3RyaW5nX2hlbHBlcnMuaD4KKyNpbmNsdWRlIDxsaW51eC91c2IuaD4KKyNp
bmNsdWRlIDxsaW51eC92bWFsbG9jLmg+CisjaW5jbHVkZSA8bGludXgvd29ya3F1ZXVlLmg+CisK
KyNpbmNsdWRlIDxkcm0vZHJtX2F0b21pY19oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2Rh
bWFnZV9oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2RlYnVnZnMuaD4KKyNpbmNsdWRlIDxk
cm0vZHJtX2Rydi5oPgorI2luY2x1ZGUgPGRybS9kcm1fZmJfaGVscGVyLmg+CisjaW5jbHVkZSA8
ZHJtL2RybV9mb3VyY2MuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2dlbV9hdG9taWNfaGVscGVyLmg+
CisjaW5jbHVkZSA8ZHJtL2RybV9nZW1fZnJhbWVidWZmZXJfaGVscGVyLmg+CisjaW5jbHVkZSA8
ZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9tYW5hZ2VkLmg+
CisjaW5jbHVkZSA8ZHJtL2RybV9wcmludC5oPgorI2luY2x1ZGUgPGRybS9kcm1fcHJvYmVfaGVs
cGVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9zaW1wbGVfa21zX2hlbHBlci5oPgorI2luY2x1ZGUg
PGRybS9ndWQuaD4KKworI2luY2x1ZGUgImd1ZF9pbnRlcm5hbC5oIgorCisvKiBPbmx5IHVzZWQg
aW50ZXJuYWxseSAqLworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gZ3VkX2Ry
bV9mb3JtYXRfcjEgPSB7CisJLmZvcm1hdCA9IEdVRF9EUk1fRk9STUFUX1IxLAorCS5udW1fcGxh
bmVzID0gMSwKKwkuY2hhcl9wZXJfYmxvY2sgPSB7IDEsIDAsIDAgfSwKKwkuYmxvY2tfdyA9IHsg
OCwgMCwgMCB9LAorCS5ibG9ja19oID0geyAxLCAwLCAwIH0sCisJLmhzdWIgPSAxLAorCS52c3Vi
ID0gMSwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvIGd1ZF9kcm1f
Zm9ybWF0X3hyZ2IxMTExID0geworCS5mb3JtYXQgPSBHVURfRFJNX0ZPUk1BVF9YUkdCMTExMSwK
KwkubnVtX3BsYW5lcyA9IDEsCisJLmNoYXJfcGVyX2Jsb2NrID0geyAxLCAwLCAwIH0sCisJLmJs
b2NrX3cgPSB7IDIsIDAsIDAgfSwKKwkuYmxvY2tfaCA9IHsgMSwgMCwgMCB9LAorCS5oc3ViID0g
MSwKKwkudnN1YiA9IDEsCit9OworCitzdGF0aWMgaW50IGd1ZF91c2JfY29udHJvbF9tc2coc3Ry
dWN0IHVzYl9pbnRlcmZhY2UgKmludGYsIGJvb2wgaW4sCisJCQkgICAgICAgdTggcmVxdWVzdCwg
dTE2IHZhbHVlLCB2b2lkICpidWYsIHNpemVfdCBsZW4pCit7CisJdTggcmVxdWVzdHR5cGUgPSBV
U0JfVFlQRV9WRU5ET1IgfCBVU0JfUkVDSVBfSU5URVJGQUNFOworCXU4IGlmbnVtID0gaW50Zi0+
Y3VyX2FsdHNldHRpbmctPmRlc2MuYkludGVyZmFjZU51bWJlcjsKKwlzdHJ1Y3QgdXNiX2Rldmlj
ZSAqdXNiID0gaW50ZXJmYWNlX3RvX3VzYmRldihpbnRmKTsKKwl1bnNpZ25lZCBpbnQgcGlwZTsK
KworCWlmIChsZW4gJiYgIWJ1ZikKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoaW4pIHsKKwkJ
cGlwZSA9IHVzYl9yY3ZjdHJscGlwZSh1c2IsIDApOworCQlyZXF1ZXN0dHlwZSB8PSBVU0JfRElS
X0lOOworCX0gZWxzZSB7CisJCXBpcGUgPSB1c2Jfc25kY3RybHBpcGUodXNiLCAwKTsKKwkJcmVx
dWVzdHR5cGUgfD0gVVNCX0RJUl9PVVQ7CisJfQorCisJcmV0dXJuIHVzYl9jb250cm9sX21zZyh1
c2IsIHBpcGUsIHJlcXVlc3QsIHJlcXVlc3R0eXBlLCB2YWx1ZSwKKwkJCSAgICAgICBpZm51bSwg
YnVmLCBsZW4sIFVTQl9DVFJMX0dFVF9USU1FT1VUKTsKK30KKworc3RhdGljIGludCBndWRfZ2V0
X2Rpc3BsYXlfZGVzY3JpcHRvcihzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZiwKKwkJCQkgICAg
ICBzdHJ1Y3QgZ3VkX2Rpc3BsYXlfZGVzY3JpcHRvcl9yZXEgKmRlc2MpCit7CisJdm9pZCAqYnVm
OworCWludCByZXQ7CisKKwlidWYgPSBrbWFsbG9jKHNpemVvZigqZGVzYyksIEdGUF9LRVJORUwp
OworCWlmICghYnVmKQorCQlyZXR1cm4gLUVOT01FTTsKKworCXJldCA9IGd1ZF91c2JfY29udHJv
bF9tc2coaW50ZiwgdHJ1ZSwgR1VEX1JFUV9HRVRfREVTQ1JJUFRPUiwgMCwgYnVmLCBzaXplb2Yo
KmRlc2MpKTsKKwltZW1jcHkoZGVzYywgYnVmLCBzaXplb2YoKmRlc2MpKTsKKwlrZnJlZShidWYp
OworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCWlmIChyZXQgIT0gc2l6ZW9mKCpkZXNj
KSkKKwkJcmV0dXJuIC1FSU87CisKKwlpZiAoZGVzYy0+bWFnaWMgIT0gbGUzMl90b19jcHUoR1VE
X0RJU1BMQVlfTUFHSUMpKQorCQlyZXR1cm4gLUVOT0RBVEE7CisKKwlEUk1fREVWX0RFQlVHX0RS
SVZFUigmaW50Zi0+ZGV2LAorCQkJICAgICAidmVyc2lvbj0ldSBmbGFncz0weCV4IGNvbXByZXNz
aW9uPTB4JXggbWF4X2J1ZmZlcl9zaXplPSV1XG4iLAorCQkJICAgICBkZXNjLT52ZXJzaW9uLCBs
ZTMyX3RvX2NwdShkZXNjLT5mbGFncyksIGRlc2MtPmNvbXByZXNzaW9uLAorCQkJICAgICBsZTMy
X3RvX2NwdShkZXNjLT5tYXhfYnVmZmVyX3NpemUpKTsKKworCWlmICghZGVzYy0+dmVyc2lvbiB8
fCAhZGVzYy0+bWF4X3dpZHRoIHx8ICFkZXNjLT5tYXhfaGVpZ2h0IHx8CisJICAgIGxlMzJfdG9f
Y3B1KGRlc2MtPm1pbl93aWR0aCkgPiBsZTMyX3RvX2NwdShkZXNjLT5tYXhfd2lkdGgpIHx8CisJ
ICAgIGxlMzJfdG9fY3B1KGRlc2MtPm1pbl9oZWlnaHQpID4gbGUzMl90b19jcHUoZGVzYy0+bWF4
X2hlaWdodCkpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBp
bnQgZ3VkX3N0YXR1c190b19lcnJubyh1OCBzdGF0dXMpCit7CisJc3dpdGNoIChzdGF0dXMpIHsK
KwljYXNlIEdVRF9TVEFUVVNfT0s6CisJCXJldHVybiAwOworCWNhc2UgR1VEX1NUQVRVU19CVVNZ
OgorCQlyZXR1cm4gLUVCVVNZOworCWNhc2UgR1VEX1NUQVRVU19SRVFVRVNUX05PVF9TVVBQT1JU
RUQ6CisJCXJldHVybiAtRU9QTk9UU1VQUDsKKwljYXNlIEdVRF9TVEFUVVNfUFJPVE9DT0xfRVJS
T1I6CisJCXJldHVybiAtRVBST1RPOworCWNhc2UgR1VEX1NUQVRVU19JTlZBTElEX1BBUkFNRVRF
UjoKKwkJcmV0dXJuIC1FSU5WQUw7CisJY2FzZSBHVURfU1RBVFVTX0VSUk9SOgorCQlyZXR1cm4g
LUVSRU1PVEVJTzsKKwlkZWZhdWx0OgorCQlyZXR1cm4gLUVSRU1PVEVJTzsKKwl9Cit9CisKK3N0
YXRpYyBpbnQgZ3VkX3VzYl9nZXRfc3RhdHVzKHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmKQor
eworCWludCByZXQsIHN0YXR1cyA9IC1FSU87CisJdTggKmJ1ZjsKKworCWJ1ZiA9IGttYWxsb2Mo
c2l6ZW9mKCpidWYpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWJ1ZikKKwkJcmV0dXJuIC1FTk9NRU07
CisKKwlyZXQgPSBndWRfdXNiX2NvbnRyb2xfbXNnKGludGYsIHRydWUsIEdVRF9SRVFfR0VUX1NU
QVRVUywgMCwgYnVmLCBzaXplb2YoKmJ1ZikpOworCWlmIChyZXQgPT0gc2l6ZW9mKCpidWYpKQor
CQlzdGF0dXMgPSBndWRfc3RhdHVzX3RvX2Vycm5vKCpidWYpOworCWtmcmVlKGJ1Zik7CisKKwlp
ZiAocmV0IDwgMCkKKwkJcmV0dXJuIHJldDsKKworCXJldHVybiBzdGF0dXM7Cit9CisKK3N0YXRp
YyBpbnQgZ3VkX3VzYl90cmFuc2ZlcihzdHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSwgYm9vbCBpbiwg
dTggcmVxdWVzdCwgdTE2IGluZGV4LAorCQkJICAgIHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbikKK3sK
KwlzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZiA9IHRvX3VzYl9pbnRlcmZhY2UoZ2RybS0+ZHJt
LmRldik7CisJaW50IGlkeCwgcmV0OworCisJZHJtX2RiZygmZ2RybS0+ZHJtLCAiJXM6IHJlcXVl
c3Q9MHgleCBpbmRleD0ldSBsZW49JXp1XG4iLAorCQlpbiA/ICJnZXQiIDogInNldCIsIHJlcXVl
c3QsIGluZGV4LCBsZW4pOworCisJaWYgKCFkcm1fZGV2X2VudGVyKCZnZHJtLT5kcm0sICZpZHgp
KQorCQlyZXR1cm4gLUVOT0RFVjsKKworCW11dGV4X2xvY2soJmdkcm0tPmN0cmxfbG9jayk7CisK
KwlyZXQgPSBndWRfdXNiX2NvbnRyb2xfbXNnKGludGYsIGluLCByZXF1ZXN0LCBpbmRleCwgYnVm
LCBsZW4pOworCWlmIChyZXQgPT0gLUVQSVBFIHx8ICgoZ2RybS0+ZmxhZ3MgJiBHVURfRElTUExB
WV9GTEFHX1NUQVRVU19PTl9TRVQpICYmICFpbiAmJiByZXQgPj0gMCkpIHsKKwkJaW50IHN0YXR1
czsKKworCQlzdGF0dXMgPSBndWRfdXNiX2dldF9zdGF0dXMoaW50Zik7CisJCWlmIChzdGF0dXMg
PCAwKSB7CisJCQlyZXQgPSBzdGF0dXM7CisJCX0gZWxzZSBpZiAocmV0IDwgMCkgeworCQkJZGV2
X2Vycl9vbmNlKGdkcm0tPmRybS5kZXYsCisJCQkJICAgICAiVW5leHBlY3RlZCBzdGF0dXMgT0sg
Zm9yIGZhaWxlZCB0cmFuc2ZlclxuIik7CisJCQlyZXQgPSAtRVBJUEU7CisJCX0KKwl9CisKKwlp
ZiAocmV0IDwgMCkgeworCQlkcm1fZGJnKCZnZHJtLT5kcm0sICJyZXQ9JWRcbiIsIHJldCk7CisJ
CWdkcm0tPnN0YXRzX251bV9lcnJvcnMrKzsKKwl9CisKKwltdXRleF91bmxvY2soJmdkcm0tPmN0
cmxfbG9jayk7CisJZHJtX2Rldl9leGl0KGlkeCk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKgor
ICogQGJ1ZiBjYW5ub3QgYmUgYWxsb2NhdGVkIG9uIHRoZSBzdGFjay4KKyAqIFJldHVybnMgbnVt
YmVyIG9mIGJ5dGVzIHJlY2VpdmVkIG9yIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4K
KyAqLworaW50IGd1ZF91c2JfZ2V0KHN0cnVjdCBndWRfZGV2aWNlICpnZHJtLCB1OCByZXF1ZXN0
LCB1MTYgaW5kZXgsIHZvaWQgKmJ1Ziwgc2l6ZV90IG1heF9sZW4pCit7CisJcmV0dXJuIGd1ZF91
c2JfdHJhbnNmZXIoZ2RybSwgdHJ1ZSwgcmVxdWVzdCwgaW5kZXgsIGJ1ZiwgbWF4X2xlbik7Cit9
CisKKy8qCisgKiBAYnVmIGNhbiBiZSBhbGxvY2F0ZWQgb24gdGhlIHN0YWNrIG9yIE5VTEwuCisg
KiBSZXR1cm5zIHplcm8gb24gc3VjY2VzcyBvciBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1
cmUuCisgKi8KK2ludCBndWRfdXNiX3NldChzdHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSwgdTggcmVx
dWVzdCwgdTE2IGluZGV4LCB2b2lkICpidWYsIHNpemVfdCBsZW4pCit7CisJdm9pZCAqdHJidWYg
PSBOVUxMOworCWludCByZXQ7CisKKwlpZiAoYnVmICYmIGxlbikgeworCQl0cmJ1ZiA9IGttZW1k
dXAoYnVmLCBsZW4sIEdGUF9LRVJORUwpOworCQlpZiAoIXRyYnVmKQorCQkJcmV0dXJuIC1FTk9N
RU07CisJfQorCisJcmV0ID0gZ3VkX3VzYl90cmFuc2ZlcihnZHJtLCBmYWxzZSwgcmVxdWVzdCwg
aW5kZXgsIHRyYnVmLCBsZW4pOworCWtmcmVlKHRyYnVmKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0
dXJuIHJldDsKKworCXJldHVybiByZXQgIT0gbGVuID8gLUVJTyA6IDA7Cit9CisKKy8qCisgKiBA
dmFsIGNhbiBiZSBhbGxvY2F0ZWQgb24gdGhlIHN0YWNrLgorICogUmV0dXJucyB6ZXJvIG9uIHN1
Y2Nlc3Mgb3IgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgZ3VkX3Vz
Yl9nZXRfdTgoc3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0sIHU4IHJlcXVlc3QsIHUxNiBpbmRleCwg
dTggKnZhbCkKK3sKKwl1OCAqYnVmOworCWludCByZXQ7CisKKwlidWYgPSBrbWFsbG9jKHNpemVv
ZigqdmFsKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFidWYpCisJCXJldHVybiAtRU5PTUVNOworCisJ
cmV0ID0gZ3VkX3VzYl9nZXQoZ2RybSwgcmVxdWVzdCwgaW5kZXgsIGJ1Ziwgc2l6ZW9mKCp2YWwp
KTsKKwkqdmFsID0gKmJ1ZjsKKwlrZnJlZShidWYpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4g
cmV0OworCisJcmV0dXJuIHJldCAhPSBzaXplb2YoKnZhbCkgPyAtRUlPIDogMDsKK30KKworLyog
UmV0dXJucyB6ZXJvIG9uIHN1Y2Nlc3Mgb3IgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJl
LiAqLworaW50IGd1ZF91c2Jfc2V0X3U4KHN0cnVjdCBndWRfZGV2aWNlICpnZHJtLCB1OCByZXF1
ZXN0LCB1OCB2YWwpCit7CisJcmV0dXJuIGd1ZF91c2Jfc2V0KGdkcm0sIHJlcXVlc3QsIDAsICZ2
YWwsIHNpemVvZih2YWwpKTsKK30KKworc3RhdGljIGludCBndWRfZ2V0X3Byb3BlcnRpZXMoc3Ry
dWN0IGd1ZF9kZXZpY2UgKmdkcm0pCit7CisJc3RydWN0IGd1ZF9wcm9wZXJ0eV9yZXEgKnByb3Bl
cnRpZXM7CisJdW5zaWduZWQgaW50IGksIG51bV9wcm9wZXJ0aWVzOworCWludCByZXQ7CisKKwlw
cm9wZXJ0aWVzID0ga2NhbGxvYyhHVURfUFJPUEVSVElFU19NQVhfTlVNLCBzaXplb2YoKnByb3Bl
cnRpZXMpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXByb3BlcnRpZXMpCisJCXJldHVybiAtRU5PTUVN
OworCisJcmV0ID0gZ3VkX3VzYl9nZXQoZ2RybSwgR1VEX1JFUV9HRVRfUFJPUEVSVElFUywgMCwK
KwkJCSAgcHJvcGVydGllcywgR1VEX1BST1BFUlRJRVNfTUFYX05VTSAqIHNpemVvZigqcHJvcGVy
dGllcykpOworCWlmIChyZXQgPD0gMCkKKwkJZ290byBvdXQ7CisJaWYgKHJldCAlIHNpemVvZigq
cHJvcGVydGllcykpIHsKKwkJcmV0ID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJbnVtX3By
b3BlcnRpZXMgPSByZXQgLyBzaXplb2YoKnByb3BlcnRpZXMpOworCXJldCA9IDA7CisKKwlnZHJt
LT5wcm9wZXJ0aWVzID0gZHJtbV9rY2FsbG9jKCZnZHJtLT5kcm0sIG51bV9wcm9wZXJ0aWVzLCBz
aXplb2YoKmdkcm0tPnByb3BlcnRpZXMpLAorCQkJCQlHRlBfS0VSTkVMKTsKKwlpZiAoIWdkcm0t
PnByb3BlcnRpZXMpIHsKKwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBvdXQ7CisJfQorCisJZm9y
IChpID0gMDsgaSA8IG51bV9wcm9wZXJ0aWVzOyBpKyspIHsKKwkJdTE2IHByb3AgPSBsZTE2X3Rv
X2NwdShwcm9wZXJ0aWVzW2ldLnByb3ApOworCQl1NjQgdmFsID0gbGU2NF90b19jcHUocHJvcGVy
dGllc1tpXS52YWwpOworCisJCXN3aXRjaCAocHJvcCkgeworCQljYXNlIEdVRF9QUk9QRVJUWV9S
T1RBVElPTjoKKwkJCS8qCisJCQkgKiBEUk0gVUFQSSBtYXRjaGVzIHRoZSBwcm90b2NvbCBzbyB1
c2UgdGhlIHZhbHVlIGRpcmVjdGx5LAorCQkJICogYnV0IG1hc2sgb3V0IGFueSBhZGRpdGlvbnMg
b24gZnV0dXJlIGRldmljZXMuCisJCQkgKi8KKwkJCXZhbCAmPSBHVURfUk9UQVRJT05fTUFTSzsK
KwkJCXJldCA9IGRybV9wbGFuZV9jcmVhdGVfcm90YXRpb25fcHJvcGVydHkoJmdkcm0tPnBpcGUu
cGxhbmUsCisJCQkJCQkJCSBEUk1fTU9ERV9ST1RBVEVfMCwgdmFsKTsKKwkJCWJyZWFrOworCQlk
ZWZhdWx0OgorCQkJLyogTmV3IG9uZXMgbWlnaHQgc2hvdyB1cCBpbiBmdXR1cmUgZGV2aWNlcywg
c2tpcCB0aG9zZSB3ZSBkb24ndCBrbm93LiAqLworCQkJZHJtX2RiZygmZ2RybS0+ZHJtLCAiSWdu
b3JpbmcgdW5rbm93biBwcm9wZXJ0eTogJXVcbiIsIHByb3ApOworCQkJY29udGludWU7CisJCX0K
KworCQlpZiAocmV0KQorCQkJZ290byBvdXQ7CisKKwkJZ2RybS0+cHJvcGVydGllc1tnZHJtLT5u
dW1fcHJvcGVydGllcysrXSA9IHByb3A7CisJfQorb3V0OgorCWtmcmVlKHByb3BlcnRpZXMpOwor
CisJcmV0dXJuIHJldDsKK30KKworLyoKKyAqIEZJWE1FOiBEbWEtYnVmIHNoYXJpbmcgcmVxdWly
ZXMgRE1BIHN1cHBvcnQgYnkgdGhlIGltcG9ydGluZyBkZXZpY2UuCisgKiAgICAgICAgVGhpcyBm
dW5jdGlvbiBpcyBhIHdvcmthcm91bmQgdG8gbWFrZSBVU0IgZGV2aWNlcyB3b3JrIGFzIHdlbGwu
CisgKiAgICAgICAgU2VlIHRvZG8ucnN0IGZvciBob3cgdG8gZml4IHRoZSBpc3N1ZSBpbiB0aGUg
ZG1hLWJ1ZiBmcmFtZXdvcmsuCisgKi8KK3N0YXRpYyBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmd1
ZF9nZW1fcHJpbWVfaW1wb3J0KHN0cnVjdCBkcm1fZGV2aWNlICpkcm0sIHN0cnVjdCBkbWFfYnVm
ICpkbWFfYnVmKQoreworCXN0cnVjdCBndWRfZGV2aWNlICpnZHJtID0gdG9fZ3VkX2RldmljZShk
cm0pOworCisJaWYgKCFnZHJtLT5kbWFkZXYpCisJCXJldHVybiBFUlJfUFRSKC1FTk9ERVYpOwor
CisJcmV0dXJuIGRybV9nZW1fcHJpbWVfaW1wb3J0X2Rldihkcm0sIGRtYV9idWYsIGdkcm0tPmRt
YWRldik7Cit9CisKK3N0YXRpYyBpbnQgZ3VkX3N0YXRzX2RlYnVnZnMoc3RydWN0IHNlcV9maWxl
ICptLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBkcm1faW5mb19ub2RlICpub2RlID0gbS0+cHJp
dmF0ZTsKKwlzdHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSA9IHRvX2d1ZF9kZXZpY2Uobm9kZS0+bWlu
b3ItPmRldik7CisJY2hhciBidWZbMTBdOworCisJc3RyaW5nX2dldF9zaXplKGdkcm0tPmJ1bGtf
bGVuLCAxLCBTVFJJTkdfVU5JVFNfMiwgYnVmLCBzaXplb2YoYnVmKSk7CisJc2VxX3ByaW50Ziht
LCAiTWF4IGJ1ZmZlciBzaXplOiAlc1xuIiwgYnVmKTsKKwlzZXFfcHJpbnRmKG0sICJOdW1iZXIg
b2YgZXJyb3JzOiAgJXVcbiIsIGdkcm0tPnN0YXRzX251bV9lcnJvcnMpOworCisJc2VxX3B1dHMo
bSwgIkNvbXByZXNzaW9uOiAgICAgICIpOworCWlmIChnZHJtLT5jb21wcmVzc2lvbiAmIEdVRF9D
T01QUkVTU0lPTl9MWjQpCisJCXNlcV9wdXRzKG0sICIgbHo0Iik7CisJaWYgKCFnZHJtLT5jb21w
cmVzc2lvbikKKwkJc2VxX3B1dHMobSwgIiBub25lIik7CisJc2VxX3B1dHMobSwgIlxuIik7CisK
KwlpZiAoZ2RybS0+Y29tcHJlc3Npb24pIHsKKwkJdTY0IHJlbWFpbmRlcjsKKwkJdTY0IHJhdGlv
ID0gZGl2NjRfdTY0X3JlbShnZHJtLT5zdGF0c19sZW5ndGgsIGdkcm0tPnN0YXRzX2FjdHVhbF9s
ZW5ndGgsCisJCQkJCSAgJnJlbWFpbmRlcik7CisJCXU2NCByYXRpb19mcmFjID0gZGl2NjRfdTY0
KHJlbWFpbmRlciAqIDEwLCBnZHJtLT5zdGF0c19hY3R1YWxfbGVuZ3RoKTsKKworCQlzZXFfcHJp
bnRmKG0sICJDb21wcmVzc2lvbiByYXRpbzogJWxsdS4lbGx1XG4iLCByYXRpbywgcmF0aW9fZnJh
Yyk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgZHJtX2luZm9f
bGlzdCBndWRfZGVidWdmc19saXN0W10gPSB7CisJeyAic3RhdHMiLCBndWRfc3RhdHNfZGVidWdm
cywgMCwgTlVMTCB9LAorfTsKKworc3RhdGljIHZvaWQgZ3VkX2RlYnVnZnNfaW5pdChzdHJ1Y3Qg
ZHJtX21pbm9yICptaW5vcikKK3sKKwlkcm1fZGVidWdmc19jcmVhdGVfZmlsZXMoZ3VkX2RlYnVn
ZnNfbGlzdCwgQVJSQVlfU0laRShndWRfZGVidWdmc19saXN0KSwKKwkJCQkgbWlub3ItPmRlYnVn
ZnNfcm9vdCwgbWlub3IpOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9zaW1wbGVfZGlz
cGxheV9waXBlX2Z1bmNzIGd1ZF9waXBlX2Z1bmNzID0geworCS5jaGVjayAgICAgID0gZ3VkX3Bp
cGVfY2hlY2ssCisJLnVwZGF0ZQkgICAgPSBndWRfcGlwZV91cGRhdGUsCisJLnByZXBhcmVfZmIg
PSBkcm1fZ2VtX3NpbXBsZV9kaXNwbGF5X3BpcGVfcHJlcGFyZV9mYiwKK307CisKK3N0YXRpYyBj
b25zdCBzdHJ1Y3QgZHJtX21vZGVfY29uZmlnX2Z1bmNzIGd1ZF9tb2RlX2NvbmZpZ19mdW5jcyA9
IHsKKwkuZmJfY3JlYXRlID0gZHJtX2dlbV9mYl9jcmVhdGVfd2l0aF9kaXJ0eSwKKwkuYXRvbWlj
X2NoZWNrID0gZHJtX2F0b21pY19oZWxwZXJfY2hlY2ssCisJLmF0b21pY19jb21taXQgPSBkcm1f
YXRvbWljX2hlbHBlcl9jb21taXQsCit9OworCitzdGF0aWMgY29uc3QgdTY0IGd1ZF9waXBlX21v
ZGlmaWVyc1tdID0geworCURSTV9GT1JNQVRfTU9EX0xJTkVBUiwKKwlEUk1fRk9STUFUX01PRF9J
TlZBTElECit9OworCitERUZJTkVfRFJNX0dFTV9GT1BTKGd1ZF9mb3BzKTsKKworc3RhdGljIGNv
bnN0IHN0cnVjdCBkcm1fZHJpdmVyIGd1ZF9kcm1fZHJpdmVyID0geworCS5kcml2ZXJfZmVhdHVy
ZXMJPSBEUklWRVJfTU9ERVNFVCB8IERSSVZFUl9HRU0gfCBEUklWRVJfQVRPTUlDLAorCS5mb3Bz
CQkJPSAmZ3VkX2ZvcHMsCisJRFJNX0dFTV9TSE1FTV9EUklWRVJfT1BTLAorCS5nZW1fcHJpbWVf
aW1wb3J0CT0gZ3VkX2dlbV9wcmltZV9pbXBvcnQsCisJLmRlYnVnZnNfaW5pdAkJPSBndWRfZGVi
dWdmc19pbml0LAorCisJLm5hbWUJCQk9ICJndWQiLAorCS5kZXNjCQkJPSAiR2VuZXJpYyBVU0Ig
RGlzcGxheSIsCisJLmRhdGUJCQk9ICIyMDIwMDQyMiIsCisJLm1ham9yCQkJPSAxLAorCS5taW5v
cgkJCT0gMCwKK307CisKK3N0YXRpYyB2b2lkIGd1ZF9mcmVlX2J1ZmZlcnNfYW5kX211dGV4KHN0
cnVjdCBkcm1fZGV2aWNlICpkcm0sIHZvaWQgKnVudXNlZCkKK3sKKwlzdHJ1Y3QgZ3VkX2Rldmlj
ZSAqZ2RybSA9IHRvX2d1ZF9kZXZpY2UoZHJtKTsKKworCXZmcmVlKGdkcm0tPmNvbXByZXNzX2J1
Zik7CisJa2ZyZWUoZ2RybS0+YnVsa19idWYpOworCW11dGV4X2Rlc3Ryb3koJmdkcm0tPmN0cmxf
bG9jayk7CisJbXV0ZXhfZGVzdHJveSgmZ2RybS0+ZGFtYWdlX2xvY2spOworfQorCitzdGF0aWMg
aW50IGd1ZF9wcm9iZShzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZiwgY29uc3Qgc3RydWN0IHVz
Yl9kZXZpY2VfaWQgKmlkKQoreworCWNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKnhyZ2I4
ODg4X2VtdWxhdGlvbl9mb3JtYXQgPSBOVUxMOworCWJvb2wgcmdiNTY1X3N1cHBvcnRlZCA9IGZh
bHNlLCB4cmdiODg4OF9zdXBwb3J0ZWQgPSBmYWxzZTsKKwl1bnNpZ25lZCBpbnQgbnVtX2Zvcm1h
dHNfZGV2LCBudW1fZm9ybWF0cyA9IDA7CisJc3RydWN0IHVzYl9lbmRwb2ludF9kZXNjcmlwdG9y
ICpidWxrX291dDsKKwlzdHJ1Y3QgZ3VkX2Rpc3BsYXlfZGVzY3JpcHRvcl9yZXEgZGVzYzsKKwlz
dHJ1Y3QgZGV2aWNlICpkZXYgPSAmaW50Zi0+ZGV2OworCXNpemVfdCBtYXhfYnVmZmVyX3NpemUg
PSAwOworCXN0cnVjdCBndWRfZGV2aWNlICpnZHJtOworCXN0cnVjdCBkcm1fZGV2aWNlICpkcm07
CisJdTggKmZvcm1hdHNfZGV2OworCXUzMiAqZm9ybWF0czsKKwlpbnQgcmV0LCBpOworCisJcmV0
ID0gdXNiX2ZpbmRfYnVsa19vdXRfZW5kcG9pbnQoaW50Zi0+Y3VyX2FsdHNldHRpbmcsICZidWxr
X291dCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJldCA9IGd1ZF9nZXRfZGlzcGxh
eV9kZXNjcmlwdG9yKGludGYsICZkZXNjKTsKKwlpZiAocmV0KSB7CisJCURSTV9ERVZfREVCVUdf
RFJJVkVSKGRldiwgIk5vdCBhIGRpc3BsYXkgaW50ZXJmYWNlOiByZXQ9JWRcbiIsIHJldCk7CisJ
CXJldHVybiAtRU5PREVWOworCX0KKworCWlmIChkZXNjLnZlcnNpb24gPiAxKSB7CisJCWRldl9l
cnIoZGV2LCAiUHJvdG9jb2wgdmVyc2lvbiAldSBpcyBub3Qgc3VwcG9ydGVkXG4iLCBkZXNjLnZl
cnNpb24pOworCQlyZXR1cm4gLUVOT0RFVjsKKwl9CisKKwlnZHJtID0gZGV2bV9kcm1fZGV2X2Fs
bG9jKGRldiwgJmd1ZF9kcm1fZHJpdmVyLCBzdHJ1Y3QgZ3VkX2RldmljZSwgZHJtKTsKKwlpZiAo
SVNfRVJSKGdkcm0pKQorCQlyZXR1cm4gUFRSX0VSUihnZHJtKTsKKworCWRybSA9ICZnZHJtLT5k
cm07CisJZHJtLT5tb2RlX2NvbmZpZy5mdW5jcyA9ICZndWRfbW9kZV9jb25maWdfZnVuY3M7CisJ
cmV0ID0gZHJtbV9tb2RlX2NvbmZpZ19pbml0KGRybSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJl
dDsKKworCWdkcm0tPmZsYWdzID0gbGUzMl90b19jcHUoZGVzYy5mbGFncyk7CisJZ2RybS0+Y29t
cHJlc3Npb24gPSBkZXNjLmNvbXByZXNzaW9uICYgR1VEX0NPTVBSRVNTSU9OX0xaNDsKKworCWlm
IChnZHJtLT5mbGFncyAmIEdVRF9ESVNQTEFZX0ZMQUdfRlVMTF9VUERBVEUgJiYgZ2RybS0+Y29t
cHJlc3Npb24pCisJCXJldHVybiAtRUlOVkFMOworCisJbXV0ZXhfaW5pdCgmZ2RybS0+Y3RybF9s
b2NrKTsKKwltdXRleF9pbml0KCZnZHJtLT5kYW1hZ2VfbG9jayk7CisJSU5JVF9XT1JLKCZnZHJt
LT53b3JrLCBndWRfZmx1c2hfd29yayk7CisJZ3VkX2NsZWFyX2RhbWFnZShnZHJtKTsKKworCXJl
dCA9IGRybW1fYWRkX2FjdGlvbl9vcl9yZXNldChkcm0sIGd1ZF9mcmVlX2J1ZmZlcnNfYW5kX211
dGV4LCBOVUxMKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJZHJtLT5tb2RlX2NvbmZp
Zy5taW5fd2lkdGggPSBsZTMyX3RvX2NwdShkZXNjLm1pbl93aWR0aCk7CisJZHJtLT5tb2RlX2Nv
bmZpZy5tYXhfd2lkdGggPSBsZTMyX3RvX2NwdShkZXNjLm1heF93aWR0aCk7CisJZHJtLT5tb2Rl
X2NvbmZpZy5taW5faGVpZ2h0ID0gbGUzMl90b19jcHUoZGVzYy5taW5faGVpZ2h0KTsKKwlkcm0t
Pm1vZGVfY29uZmlnLm1heF9oZWlnaHQgPSBsZTMyX3RvX2NwdShkZXNjLm1heF9oZWlnaHQpOwor
CisJZm9ybWF0c19kZXYgPSBkZXZtX2ttYWxsb2MoZGV2LCBHVURfRk9STUFUU19NQVhfTlVNLCBH
RlBfS0VSTkVMKTsKKwkvKiBBZGQgcm9vbSBmb3IgZW11bGF0ZWQgWFJHQjg4ODggKi8KKwlmb3Jt
YXRzID0gZGV2bV9rbWFsbG9jX2FycmF5KGRldiwgR1VEX0ZPUk1BVFNfTUFYX05VTSArIDEsIHNp
emVvZigqZm9ybWF0cyksIEdGUF9LRVJORUwpOworCWlmICghZm9ybWF0c19kZXYgfHwgIWZvcm1h
dHMpCisJCXJldHVybiAtRU5PTUVNOworCisJcmV0ID0gZ3VkX3VzYl9nZXQoZ2RybSwgR1VEX1JF
UV9HRVRfRk9STUFUUywgMCwgZm9ybWF0c19kZXYsIEdVRF9GT1JNQVRTX01BWF9OVU0pOworCWlm
IChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJbnVtX2Zvcm1hdHNfZGV2ID0gcmV0OworCWZv
ciAoaSA9IDA7IGkgPCBudW1fZm9ybWF0c19kZXY7IGkrKykgeworCQljb25zdCBzdHJ1Y3QgZHJt
X2Zvcm1hdF9pbmZvICppbmZvOworCQlzaXplX3QgZm10X2J1Zl9zaXplOworCQl1MzIgZm9ybWF0
OworCisJCWZvcm1hdCA9IGd1ZF90b19mb3VyY2MoZm9ybWF0c19kZXZbaV0pOworCQlpZiAoIWZv
cm1hdCkgeworCQkJZHJtX2RiZyhkcm0sICJVbnN1cHBvcnRlZCBmb3JtYXQ6IDB4JTAyeFxuIiwg
Zm9ybWF0c19kZXZbaV0pOworCQkJY29udGludWU7CisJCX0KKworCQlpZiAoZm9ybWF0ID09IEdV
RF9EUk1fRk9STUFUX1IxKQorCQkJaW5mbyA9ICZndWRfZHJtX2Zvcm1hdF9yMTsKKwkJZWxzZSBp
ZiAoZm9ybWF0ID09IEdVRF9EUk1fRk9STUFUX1hSR0IxMTExKQorCQkJaW5mbyA9ICZndWRfZHJt
X2Zvcm1hdF94cmdiMTExMTsKKwkJZWxzZQorCQkJaW5mbyA9IGRybV9mb3JtYXRfaW5mbyhmb3Jt
YXQpOworCisJCXN3aXRjaCAoZm9ybWF0KSB7CisJCWNhc2UgR1VEX0RSTV9GT1JNQVRfUjE6CisJ
CQlmYWxsdGhyb3VnaDsKKwkJY2FzZSBHVURfRFJNX0ZPUk1BVF9YUkdCMTExMToKKwkJCWlmICgh
eHJnYjg4ODhfZW11bGF0aW9uX2Zvcm1hdCkKKwkJCQl4cmdiODg4OF9lbXVsYXRpb25fZm9ybWF0
ID0gaW5mbzsKKwkJCWJyZWFrOworCQljYXNlIERSTV9GT1JNQVRfUkdCNTY1OgorCQkJcmdiNTY1
X3N1cHBvcnRlZCA9IHRydWU7CisJCQlpZiAoIXhyZ2I4ODg4X2VtdWxhdGlvbl9mb3JtYXQpCisJ
CQkJeHJnYjg4ODhfZW11bGF0aW9uX2Zvcm1hdCA9IGluZm87CisJCQlicmVhazsKKwkJY2FzZSBE
Uk1fRk9STUFUX1hSR0I4ODg4OgorCQkJeHJnYjg4ODhfc3VwcG9ydGVkID0gdHJ1ZTsKKwkJCWJy
ZWFrOworCQl9OworCisJCWZtdF9idWZfc2l6ZSA9IGRybV9mb3JtYXRfaW5mb19taW5fcGl0Y2go
aW5mbywgMCwgZHJtLT5tb2RlX2NvbmZpZy5tYXhfd2lkdGgpICoKKwkJCSAgICAgICBkcm0tPm1v
ZGVfY29uZmlnLm1heF9oZWlnaHQ7CisJCW1heF9idWZmZXJfc2l6ZSA9IG1heChtYXhfYnVmZmVy
X3NpemUsIGZtdF9idWZfc2l6ZSk7CisKKwkJaWYgKGZvcm1hdCA9PSBHVURfRFJNX0ZPUk1BVF9S
MSB8fCBmb3JtYXQgPT0gR1VEX0RSTV9GT1JNQVRfWFJHQjExMTEpCisJCQljb250aW51ZTsgLyog
SW50ZXJuYWwgbm90IGZvciB1c2Vyc3BhY2UgKi8KKworCQlmb3JtYXRzW251bV9mb3JtYXRzKytd
ID0gZm9ybWF0OworCX0KKworCWlmICghbnVtX2Zvcm1hdHMgJiYgIXhyZ2I4ODg4X2VtdWxhdGlv
bl9mb3JtYXQpIHsKKwkJZGV2X2VycihkZXYsICJObyBzdXBwb3J0ZWQgcGl4ZWwgZm9ybWF0cyBm
b3VuZFxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCS8qIFByZWZlciBzcGVlZCBvdmVy
IGNvbG9yIGRlcHRoICovCisJaWYgKHJnYjU2NV9zdXBwb3J0ZWQpCisJCWRybS0+bW9kZV9jb25m
aWcucHJlZmVycmVkX2RlcHRoID0gMTY7CisKKwlpZiAoIXhyZ2I4ODg4X3N1cHBvcnRlZCAmJiB4
cmdiODg4OF9lbXVsYXRpb25fZm9ybWF0KSB7CisJCWdkcm0tPnhyZ2I4ODg4X2VtdWxhdGlvbl9m
b3JtYXQgPSB4cmdiODg4OF9lbXVsYXRpb25fZm9ybWF0OworCQlmb3JtYXRzW251bV9mb3JtYXRz
KytdID0gRFJNX0ZPUk1BVF9YUkdCODg4ODsKKwl9CisKKwlpZiAoZGVzYy5tYXhfYnVmZmVyX3Np
emUpCisJCW1heF9idWZmZXJfc2l6ZSA9IGxlMzJfdG9fY3B1KGRlc2MubWF4X2J1ZmZlcl9zaXpl
KTsKK3JldHJ5OgorCS8qCisJICogVXNlIHBsYWluIGttYWxsb2MgaGVyZSBzaW5jZSBkZXZtX2tt
YWxsb2MoKSBwbGFjZXMgc3RydWN0IGRldnJlcyBhdCB0aGUgYmVnaW5uaW5nCisJICogb2YgdGhl
IGJ1ZmZlciBpdCBhbGxvY2F0ZXMuIFRoaXMgd2FzdGVzIGEgbG90IG9mIG1lbW9yeSB3aGVuIGFs
bG9jYXRpbmcgYmlnIGJ1ZmZlcnMuCisJICogQXNraW5nIGZvciAyTSB3b3VsZCBhY3R1YWxseSBh
bGxvY2F0ZSA0TS4gVGhpcyB3b3VsZCBhbHNvIHByZXZlbnQgZ2V0dGluZyB0aGUgYmlnZ2VzdAor
CSAqIHBvc3NpYmxlIGJ1ZmZlciBwb3RlbnRpYWxseSBsZWFkaW5nIHRvIHNwbGl0IHRyYW5zZmVy
cy4KKwkgKi8KKwlnZHJtLT5idWxrX2J1ZiA9IGttYWxsb2MobWF4X2J1ZmZlcl9zaXplLCBHRlBf
S0VSTkVMIHwgX19HRlBfTk9XQVJOKTsKKwlpZiAoIWdkcm0tPmJ1bGtfYnVmKSB7CisJCW1heF9i
dWZmZXJfc2l6ZSA9IHJvdW5kdXBfcG93X29mX3R3byhtYXhfYnVmZmVyX3NpemUpIC8gMjsKKwkJ
aWYgKG1heF9idWZmZXJfc2l6ZSA8IFNaXzUxMkspCisJCQlyZXR1cm4gLUVOT01FTTsKKwkJZ290
byByZXRyeTsKKwl9CisKKwlnZHJtLT5idWxrX3BpcGUgPSB1c2Jfc25kYnVsa3BpcGUoaW50ZXJm
YWNlX3RvX3VzYmRldihpbnRmKSwgdXNiX2VuZHBvaW50X251bShidWxrX291dCkpOworCWdkcm0t
PmJ1bGtfbGVuID0gbWF4X2J1ZmZlcl9zaXplOworCisJaWYgKGdkcm0tPmNvbXByZXNzaW9uICYg
R1VEX0NPTVBSRVNTSU9OX0xaNCkgeworCQlnZHJtLT5sejRfY29tcF9tZW0gPSBkZXZtX2ttYWxs
b2MoZGV2LCBMWjRfTUVNX0NPTVBSRVNTLCBHRlBfS0VSTkVMKTsKKwkJaWYgKCFnZHJtLT5sejRf
Y29tcF9tZW0pCisJCQlyZXR1cm4gLUVOT01FTTsKKworCQlnZHJtLT5jb21wcmVzc19idWYgPSB2
bWFsbG9jKGdkcm0tPmJ1bGtfbGVuKTsKKwkJaWYgKCFnZHJtLT5jb21wcmVzc19idWYpCisJCQly
ZXR1cm4gLUVOT01FTTsKKwl9CisKKwlyZXQgPSBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZV9pbml0
KGRybSwgJmdkcm0tPnBpcGUsICZndWRfcGlwZV9mdW5jcywKKwkJCQkJICAgZm9ybWF0cywgbnVt
X2Zvcm1hdHMsCisJCQkJCSAgIGd1ZF9waXBlX21vZGlmaWVycywgTlVMTCk7CisJaWYgKHJldCkK
KwkJcmV0dXJuIHJldDsKKworCWRldm1fa2ZyZWUoZGV2LCBmb3JtYXRzKTsKKwlkZXZtX2tmcmVl
KGRldiwgZm9ybWF0c19kZXYpOworCisJcmV0ID0gZ3VkX2dldF9wcm9wZXJ0aWVzKGdkcm0pOwor
CWlmIChyZXQpIHsKKwkJZGV2X2VycihkZXYsICJGYWlsZWQgdG8gZ2V0IHByb3BlcnRpZXMgKGVy
cm9yPSVkKVxuIiwgcmV0KTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwlkcm1fcGxhbmVfZW5hYmxl
X2ZiX2RhbWFnZV9jbGlwcygmZ2RybS0+cGlwZS5wbGFuZSk7CisKKwlyZXQgPSBndWRfZ2V0X2Nv
bm5lY3RvcnMoZ2RybSk7CisJaWYgKHJldCkgeworCQlkZXZfZXJyKGRldiwgIkZhaWxlZCB0byBn
ZXQgY29ubmVjdG9ycyAoZXJyb3I9JWQpXG4iLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKwor
CWRybV9tb2RlX2NvbmZpZ19yZXNldChkcm0pOworCisJdXNiX3NldF9pbnRmZGF0YShpbnRmLCBn
ZHJtKTsKKworCWdkcm0tPmRtYWRldiA9IHVzYl9pbnRmX2dldF9kbWFfZGV2aWNlKGludGYpOwor
CWlmICghZ2RybS0+ZG1hZGV2KQorCQlkZXZfd2FybihkZXYsICJidWZmZXIgc2hhcmluZyBub3Qg
c3VwcG9ydGVkIik7CisKKwlyZXQgPSBkcm1fZGV2X3JlZ2lzdGVyKGRybSwgMCk7CisJaWYgKHJl
dCkgeworCQlwdXRfZGV2aWNlKGdkcm0tPmRtYWRldik7CisJCXJldHVybiByZXQ7CisJfQorCisJ
ZHJtX2ttc19oZWxwZXJfcG9sbF9pbml0KGRybSk7CisKKwlkcm1fZmJkZXZfZ2VuZXJpY19zZXR1
cChkcm0sIDApOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIGd1ZF9kaXNjb25uZWN0
KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UpCit7CisJc3RydWN0IGd1ZF9kZXZpY2Ug
Kmdkcm0gPSB1c2JfZ2V0X2ludGZkYXRhKGludGVyZmFjZSk7CisJc3RydWN0IGRybV9kZXZpY2Ug
KmRybSA9ICZnZHJtLT5kcm07CisKKwlkcm1fZGJnKGRybSwgIiVzOlxuIiwgX19mdW5jX18pOwor
CisJZHJtX2ttc19oZWxwZXJfcG9sbF9maW5pKGRybSk7CisJZHJtX2Rldl91bnBsdWcoZHJtKTsK
Kwlkcm1fYXRvbWljX2hlbHBlcl9zaHV0ZG93bihkcm0pOworCXB1dF9kZXZpY2UoZ2RybS0+ZG1h
ZGV2KTsKKwlnZHJtLT5kbWFkZXYgPSBOVUxMOworfQorCitzdGF0aWMgaW50IGd1ZF9zdXNwZW5k
KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRmLCBwbV9tZXNzYWdlX3QgbWVzc2FnZSkKK3sKKwlz
dHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSA9IHVzYl9nZXRfaW50ZmRhdGEoaW50Zik7CisKKwlyZXR1
cm4gZHJtX21vZGVfY29uZmlnX2hlbHBlcl9zdXNwZW5kKCZnZHJtLT5kcm0pOworfQorCitzdGF0
aWMgaW50IGd1ZF9yZXN1bWUoc3RydWN0IHVzYl9pbnRlcmZhY2UgKmludGYpCit7CisJc3RydWN0
IGd1ZF9kZXZpY2UgKmdkcm0gPSB1c2JfZ2V0X2ludGZkYXRhKGludGYpOworCisJZHJtX21vZGVf
Y29uZmlnX2hlbHBlcl9yZXN1bWUoJmdkcm0tPmRybSk7CisKKwlyZXR1cm4gMDsKK30KKworc3Rh
dGljIGNvbnN0IHN0cnVjdCB1c2JfZGV2aWNlX2lkIGd1ZF9pZF90YWJsZVtdID0geworCXsgVVNC
X0RFVklDRV9JTlRFUkZBQ0VfQ0xBU1MoMHgxZDUwLCAweDYxNGQsIFVTQl9DTEFTU19WRU5ET1Jf
U1BFQykgfSwKKwl7IH0KK307CisKK01PRFVMRV9ERVZJQ0VfVEFCTEUodXNiLCBndWRfaWRfdGFi
bGUpOworCitzdGF0aWMgc3RydWN0IHVzYl9kcml2ZXIgZ3VkX3VzYl9kcml2ZXIgPSB7CisJLm5h
bWUJCT0gImd1ZCIsCisJLnByb2JlCQk9IGd1ZF9wcm9iZSwKKwkuZGlzY29ubmVjdAk9IGd1ZF9k
aXNjb25uZWN0LAorCS5pZF90YWJsZQk9IGd1ZF9pZF90YWJsZSwKKwkuc3VzcGVuZAk9IGd1ZF9z
dXNwZW5kLAorCS5yZXN1bWUJCT0gZ3VkX3Jlc3VtZSwKKwkucmVzZXRfcmVzdW1lCT0gZ3VkX3Jl
c3VtZSwKK307CisKK21vZHVsZV91c2JfZHJpdmVyKGd1ZF91c2JfZHJpdmVyKTsKKworTU9EVUxF
X0FVVEhPUigiTm9yYWxmIFRyw7hubmVzIik7CitNT0RVTEVfTElDRU5TRSgiRHVhbCBNSVQvR1BM
Iik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9pbnRlcm5hbC5oIGIvZHJp
dmVycy9ncHUvZHJtL2d1ZC9ndWRfaW50ZXJuYWwuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLmRlMmYyZDJkYmM2MAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9ndWQvZ3VkX2ludGVybmFsLmgKQEAgLTAsMCArMSwxNTQgQEAKKy8qIFNQRFgtTGlj
ZW5zZS1JZGVudGlmaWVyOiBNSVQgKi8KKworI2lmbmRlZiBfX0xJTlVYX0dVRF9JTlRFUk5BTF9I
CisjZGVmaW5lIF9fTElOVVhfR1VEX0lOVEVSTkFMX0gKKworI2luY2x1ZGUgPGxpbnV4L2xpc3Qu
aD4KKyNpbmNsdWRlIDxsaW51eC9tdXRleC5oPgorI2luY2x1ZGUgPGxpbnV4L3VzYi5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3dvcmtxdWV1ZS5oPgorI2luY2x1ZGUgPHVhcGkvZHJtL2RybV9mb3VyY2Mu
aD4KKworI2luY2x1ZGUgPGRybS9kcm1fbW9kZXMuaD4KKyNpbmNsdWRlIDxkcm0vZHJtX3NpbXBs
ZV9rbXNfaGVscGVyLmg+CisKK3N0cnVjdCBndWRfZGV2aWNlIHsKKwlzdHJ1Y3QgZHJtX2Rldmlj
ZSBkcm07CisJc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlIHBpcGU7CisJc3RydWN0IGRl
dmljZSAqZG1hZGV2OworCXN0cnVjdCB3b3JrX3N0cnVjdCB3b3JrOworCXUzMiBmbGFnczsKKwlj
b25zdCBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvICp4cmdiODg4OF9lbXVsYXRpb25fZm9ybWF0Owor
CisJdTE2ICpwcm9wZXJ0aWVzOworCXVuc2lnbmVkIGludCBudW1fcHJvcGVydGllczsKKworCXVu
c2lnbmVkIGludCBidWxrX3BpcGU7CisJdm9pZCAqYnVsa19idWY7CisJc2l6ZV90IGJ1bGtfbGVu
OworCisJdTggY29tcHJlc3Npb247CisJdm9pZCAqbHo0X2NvbXBfbWVtOworCXZvaWQgKmNvbXBy
ZXNzX2J1ZjsKKworCXU2NCBzdGF0c19sZW5ndGg7CisJdTY0IHN0YXRzX2FjdHVhbF9sZW5ndGg7
CisJdW5zaWduZWQgaW50IHN0YXRzX251bV9lcnJvcnM7CisKKwlzdHJ1Y3QgbXV0ZXggY3RybF9s
b2NrOyAvKiBTZXJpYWxpemUgZ2V0L3NldCBhbmQgc3RhdHVzIHRyYW5zZmVycyAqLworCisJc3Ry
dWN0IG11dGV4IGRhbWFnZV9sb2NrOyAvKiBQcm90ZWN0cyB0aGUgZm9sbG93aW5nIG1lbWJlcnM6
ICovCisJc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmI7CisJc3RydWN0IGRybV9yZWN0IGRhbWFn
ZTsKKwlib29sIHByZXZfZmx1c2hfZmFpbGVkOworfTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3Qg
Z3VkX2RldmljZSAqdG9fZ3VkX2RldmljZShzdHJ1Y3QgZHJtX2RldmljZSAqZHJtKQoreworCXJl
dHVybiBjb250YWluZXJfb2YoZHJtLCBzdHJ1Y3QgZ3VkX2RldmljZSwgZHJtKTsKK30KKworc3Rh
dGljIGlubGluZSBzdHJ1Y3QgdXNiX2RldmljZSAqZ3VkX3RvX3VzYl9kZXZpY2Uoc3RydWN0IGd1
ZF9kZXZpY2UgKmdkcm0pCit7CisJcmV0dXJuIGludGVyZmFjZV90b191c2JkZXYodG9fdXNiX2lu
dGVyZmFjZShnZHJtLT5kcm0uZGV2KSk7Cit9CisKK2ludCBndWRfdXNiX2dldChzdHJ1Y3QgZ3Vk
X2RldmljZSAqZ2RybSwgdTggcmVxdWVzdCwgdTE2IGluZGV4LCB2b2lkICpidWYsIHNpemVfdCBs
ZW4pOworaW50IGd1ZF91c2Jfc2V0KHN0cnVjdCBndWRfZGV2aWNlICpnZHJtLCB1OCByZXF1ZXN0
LCB1MTYgaW5kZXgsIHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbik7CitpbnQgZ3VkX3VzYl9nZXRfdTgo
c3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0sIHU4IHJlcXVlc3QsIHUxNiBpbmRleCwgdTggKnZhbCk7
CitpbnQgZ3VkX3VzYl9zZXRfdTgoc3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0sIHU4IHJlcXVlc3Qs
IHU4IHZhbCk7CisKK3ZvaWQgZ3VkX2NsZWFyX2RhbWFnZShzdHJ1Y3QgZ3VkX2RldmljZSAqZ2Ry
bSk7Cit2b2lkIGd1ZF9mbHVzaF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yayk7CitpbnQg
Z3VkX3BpcGVfY2hlY2soc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBlLAorCQkg
ICBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpuZXdfcGxhbmVfc3RhdGUsCisJCSAgIHN0cnVjdCBk
cm1fY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpOwordm9pZCBndWRfcGlwZV91cGRhdGUoc3Ry
dWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBlLAorCQkgICAgIHN0cnVjdCBkcm1fcGxh
bmVfc3RhdGUgKm9sZF9zdGF0ZSk7CitpbnQgZ3VkX2Nvbm5lY3Rvcl9maWxsX3Byb3BlcnRpZXMo
c3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5lY3Rvcl9zdGF0ZSwKKwkJCQkgIHN0cnVj
dCBndWRfcHJvcGVydHlfcmVxICpwcm9wZXJ0aWVzKTsKK2ludCBndWRfZ2V0X2Nvbm5lY3RvcnMo
c3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0pOworCisvKiBEcml2ZXIgaW50ZXJuYWwgZm91cmNjIHRy
YW5zZmVyIGZvcm1hdHMgKi8KKyNkZWZpbmUgR1VEX0RSTV9GT1JNQVRfUjEJCTB4MDAwMDAxMjIK
KyNkZWZpbmUgR1VEX0RSTV9GT1JNQVRfWFJHQjExMTEJCTB4MDMxMjE3MjIKKworc3RhdGljIGlu
bGluZSB1OCBndWRfZnJvbV9mb3VyY2ModTMyIGZvdXJjYykKK3sKKwlzd2l0Y2ggKGZvdXJjYykg
eworCWNhc2UgR1VEX0RSTV9GT1JNQVRfUjE6CisJCXJldHVybiBHVURfUElYRUxfRk9STUFUX1Ix
OworCWNhc2UgR1VEX0RSTV9GT1JNQVRfWFJHQjExMTE6CisJCXJldHVybiBHVURfUElYRUxfRk9S
TUFUX1hSR0IxMTExOworCWNhc2UgRFJNX0ZPUk1BVF9SR0I1NjU6CisJCXJldHVybiBHVURfUElY
RUxfRk9STUFUX1JHQjU2NTsKKwljYXNlIERSTV9GT1JNQVRfWFJHQjg4ODg6CisJCXJldHVybiBH
VURfUElYRUxfRk9STUFUX1hSR0I4ODg4OworCWNhc2UgRFJNX0ZPUk1BVF9BUkdCODg4ODoKKwkJ
cmV0dXJuIEdVRF9QSVhFTF9GT1JNQVRfQVJHQjg4ODg7CisJfTsKKworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW5saW5lIHUzMiBndWRfdG9fZm91cmNjKHU4IGZvcm1hdCkKK3sKKwlzd2l0Y2gg
KGZvcm1hdCkgeworCWNhc2UgR1VEX1BJWEVMX0ZPUk1BVF9SMToKKwkJcmV0dXJuIEdVRF9EUk1f
Rk9STUFUX1IxOworCWNhc2UgR1VEX1BJWEVMX0ZPUk1BVF9YUkdCMTExMToKKwkJcmV0dXJuIEdV
RF9EUk1fRk9STUFUX1hSR0IxMTExOworCWNhc2UgR1VEX1BJWEVMX0ZPUk1BVF9SR0I1NjU6CisJ
CXJldHVybiBEUk1fRk9STUFUX1JHQjU2NTsKKwljYXNlIEdVRF9QSVhFTF9GT1JNQVRfWFJHQjg4
ODg6CisJCXJldHVybiBEUk1fRk9STUFUX1hSR0I4ODg4OworCWNhc2UgR1VEX1BJWEVMX0ZPUk1B
VF9BUkdCODg4ODoKKwkJcmV0dXJuIERSTV9GT1JNQVRfQVJHQjg4ODg7CisJfTsKKworCXJldHVy
biAwOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZ3VkX2Zyb21fZGlzcGxheV9tb2RlKHN0cnVj
dCBndWRfZGlzcGxheV9tb2RlX3JlcSAqZHN0LAorCQkJCQkgY29uc3Qgc3RydWN0IGRybV9kaXNw
bGF5X21vZGUgKnNyYykKK3sKKwl1MzIgZmxhZ3MgPSBzcmMtPmZsYWdzICYgR1VEX0RJU1BMQVlf
TU9ERV9GTEFHX1VTRVJfTUFTSzsKKworCWlmIChzcmMtPnR5cGUgJiBEUk1fTU9ERV9UWVBFX1BS
RUZFUlJFRCkKKwkJZmxhZ3MgfD0gR1VEX0RJU1BMQVlfTU9ERV9GTEFHX1BSRUZFUlJFRDsKKwor
CWRzdC0+Y2xvY2sgPSBjcHVfdG9fbGUzMihzcmMtPmNsb2NrKTsKKwlkc3QtPmhkaXNwbGF5ID0g
Y3B1X3RvX2xlMTYoc3JjLT5oZGlzcGxheSk7CisJZHN0LT5oc3luY19zdGFydCA9IGNwdV90b19s
ZTE2KHNyYy0+aHN5bmNfc3RhcnQpOworCWRzdC0+aHN5bmNfZW5kID0gY3B1X3RvX2xlMTYoc3Jj
LT5oc3luY19lbmQpOworCWRzdC0+aHRvdGFsID0gY3B1X3RvX2xlMTYoc3JjLT5odG90YWwpOwor
CWRzdC0+dmRpc3BsYXkgPSBjcHVfdG9fbGUxNihzcmMtPnZkaXNwbGF5KTsKKwlkc3QtPnZzeW5j
X3N0YXJ0ID0gY3B1X3RvX2xlMTYoc3JjLT52c3luY19zdGFydCk7CisJZHN0LT52c3luY19lbmQg
PSBjcHVfdG9fbGUxNihzcmMtPnZzeW5jX2VuZCk7CisJZHN0LT52dG90YWwgPSBjcHVfdG9fbGUx
NihzcmMtPnZ0b3RhbCk7CisJZHN0LT5mbGFncyA9IGNwdV90b19sZTMyKGZsYWdzKTsKK30KKwor
c3RhdGljIGlubGluZSB2b2lkIGd1ZF90b19kaXNwbGF5X21vZGUoc3RydWN0IGRybV9kaXNwbGF5
X21vZGUgKmRzdCwKKwkJCQkgICAgICAgY29uc3Qgc3RydWN0IGd1ZF9kaXNwbGF5X21vZGVfcmVx
ICpzcmMpCit7CisJdTMyIGZsYWdzID0gbGUzMl90b19jcHUoc3JjLT5mbGFncyk7CisKKwltZW1z
ZXQoZHN0LCAwLCBzaXplb2YoKmRzdCkpOworCWRzdC0+Y2xvY2sgPSBsZTMyX3RvX2NwdShzcmMt
PmNsb2NrKTsKKwlkc3QtPmhkaXNwbGF5ID0gbGUxNl90b19jcHUoc3JjLT5oZGlzcGxheSk7CisJ
ZHN0LT5oc3luY19zdGFydCA9IGxlMTZfdG9fY3B1KHNyYy0+aHN5bmNfc3RhcnQpOworCWRzdC0+
aHN5bmNfZW5kID0gbGUxNl90b19jcHUoc3JjLT5oc3luY19lbmQpOworCWRzdC0+aHRvdGFsID0g
bGUxNl90b19jcHUoc3JjLT5odG90YWwpOworCWRzdC0+dmRpc3BsYXkgPSBsZTE2X3RvX2NwdShz
cmMtPnZkaXNwbGF5KTsKKwlkc3QtPnZzeW5jX3N0YXJ0ID0gbGUxNl90b19jcHUoc3JjLT52c3lu
Y19zdGFydCk7CisJZHN0LT52c3luY19lbmQgPSBsZTE2X3RvX2NwdShzcmMtPnZzeW5jX2VuZCk7
CisJZHN0LT52dG90YWwgPSBsZTE2X3RvX2NwdShzcmMtPnZ0b3RhbCk7CisJZHN0LT5mbGFncyA9
IGZsYWdzICYgR1VEX0RJU1BMQVlfTU9ERV9GTEFHX1VTRVJfTUFTSzsKKwlkc3QtPnR5cGUgPSBE
Uk1fTU9ERV9UWVBFX0RSSVZFUjsKKwlpZiAoZmxhZ3MgJiBHVURfRElTUExBWV9NT0RFX0ZMQUdf
UFJFRkVSUkVEKQorCQlkc3QtPnR5cGUgfD0gRFJNX01PREVfVFlQRV9QUkVGRVJSRUQ7CisJZHJt
X21vZGVfc2V0X25hbWUoZHN0KTsKK30KKworI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vZ3VkL2d1ZF9waXBlLmMgYi9kcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9waXBlLmMKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5hYjk2YWZiOTQyNDEKLS0tIC9k
ZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vZ3VkL2d1ZF9waXBlLmMKQEAgLTAsMCArMSw1
NTIgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKy8qCisgKiBDb3B5cmlnaHQg
MjAyMCBOb3JhbGYgVHLDuG5uZXMKKyAqLworCisjaW5jbHVkZSA8bGludXgvZG1hLWJ1Zi5oPgor
I2luY2x1ZGUgPGxpbnV4L2x6NC5oPgorI2luY2x1ZGUgPGxpbnV4L3VzYi5oPgorI2luY2x1ZGUg
PGxpbnV4L3dvcmtxdWV1ZS5oPgorCisjaW5jbHVkZSA8ZHJtL2RybV9hdG9taWMuaD4KKyNpbmNs
dWRlIDxkcm0vZHJtX2Nvbm5lY3Rvci5oPgorI2luY2x1ZGUgPGRybS9kcm1fZGFtYWdlX2hlbHBl
ci5oPgorI2luY2x1ZGUgPGRybS9kcm1fZHJ2Lmg+CisjaW5jbHVkZSA8ZHJtL2RybV9mb3JtYXRf
aGVscGVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9mb3VyY2MuaD4KKyNpbmNsdWRlIDxkcm0vZHJt
X2ZyYW1lYnVmZmVyLmg+CisjaW5jbHVkZSA8ZHJtL2RybV9nZW1fc2htZW1faGVscGVyLmg+Cisj
aW5jbHVkZSA8ZHJtL2RybV9wcmludC5oPgorI2luY2x1ZGUgPGRybS9kcm1fcmVjdC5oPgorI2lu
Y2x1ZGUgPGRybS9kcm1fc2ltcGxlX2ttc19oZWxwZXIuaD4KKyNpbmNsdWRlIDxkcm0vZ3VkLmg+
CisKKyNpbmNsdWRlICJndWRfaW50ZXJuYWwuaCIKKworLyoKKyAqIEZJWE1FOiBUaGUgZHJpdmVy
IGlzIHByb2JhYmx5IGJyb2tlbiBvbiBCaWcgRW5kaWFuIG1hY2hpbmVzLgorICogU2VlIGRpc2N1
c3Npb246CisgKiBodHRwczovL2xvcmUua2VybmVsLm9yZy9kcmktZGV2ZWwvQ0FLYjdVdmloTFgw
aGdCT1AzVkJHN08rYXR3WmNVVkNQVnVCZGZtRE1wZzBOalhlLWNRQG1haWwuZ21haWwuY29tLwor
ICovCisKK3N0YXRpYyBib29sIGd1ZF9pc19iaWdfZW5kaWFuKHZvaWQpCit7CisjaWYgZGVmaW5l
ZChfX0JJR19FTkRJQU4pCisJcmV0dXJuIHRydWU7CisjZWxzZQorCXJldHVybiBmYWxzZTsKKyNl
bmRpZgorfQorCitzdGF0aWMgc2l6ZV90IGd1ZF94cmdiODg4OF90b19yMTI0KHU4ICpkc3QsIGNv
bnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmZvcm1hdCwKKwkJCQkgICB2b2lkICpzcmMsIHN0
cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLAorCQkJCSAgIHN0cnVjdCBkcm1fcmVjdCAqcmVjdCkK
K3sKKwl1bnNpZ25lZCBpbnQgYmxvY2tfd2lkdGggPSBkcm1fZm9ybWF0X2luZm9fYmxvY2tfd2lk
dGgoZm9ybWF0LCAwKTsKKwl1bnNpZ25lZCBpbnQgYml0c19wZXJfcGl4ZWwgPSA4IC8gYmxvY2tf
d2lkdGg7CisJdW5zaWduZWQgaW50IHgsIHksIHdpZHRoLCBoZWlnaHQ7CisJdTggcGl4LCAqcGl4
OCwgKmJsb2NrID0gZHN0OyAvKiBBc3NpZ24gdG8gc2lsZW5jZSBjb21waWxlciB3YXJuaW5nICov
CisJc2l6ZV90IGxlbjsKKwl2b2lkICpidWY7CisKKwlXQVJOX09OX09OQ0UoZm9ybWF0LT5jaGFy
X3Blcl9ibG9ja1swXSAhPSAxKTsKKworCS8qIFN0YXJ0IG9uIGEgYnl0ZSBib3VuZGFyeSAqLwor
CXJlY3QtPngxID0gQUxJR05fRE9XTihyZWN0LT54MSwgYmxvY2tfd2lkdGgpOworCXdpZHRoID0g
ZHJtX3JlY3Rfd2lkdGgocmVjdCk7CisJaGVpZ2h0ID0gZHJtX3JlY3RfaGVpZ2h0KHJlY3QpOwor
CWxlbiA9IGRybV9mb3JtYXRfaW5mb19taW5fcGl0Y2goZm9ybWF0LCAwLCB3aWR0aCkgKiBoZWln
aHQ7CisKKwlidWYgPSBrbWFsbG9jKHdpZHRoICogaGVpZ2h0LCBHRlBfS0VSTkVMKTsKKwlpZiAo
IWJ1ZikKKwkJcmV0dXJuIDA7CisKKwlkcm1fZmJfeHJnYjg4ODhfdG9fZ3JheTgoYnVmLCBzcmMs
IGZiLCByZWN0KTsKKwlwaXg4ID0gYnVmOworCisJZm9yICh5ID0gMDsgeSA8IGhlaWdodDsgeSsr
KSB7CisJCWZvciAoeCA9IDA7IHggPCB3aWR0aDsgeCsrKSB7CisJCQl1bnNpZ25lZCBpbnQgcGl4
cG9zID0geCAlIGJsb2NrX3dpZHRoOyAvKiB3aXRoaW4gYnl0ZSBmcm9tIHRoZSBsZWZ0ICovCisJ
CQl1bnNpZ25lZCBpbnQgcGl4c2hpZnQgPSAoYmxvY2tfd2lkdGggLSBwaXhwb3MgLSAxKSAqIGJp
dHNfcGVyX3BpeGVsOworCisJCQlpZiAoIXBpeHBvcykgeworCQkJCWJsb2NrID0gZHN0Kys7CisJ
CQkJKmJsb2NrID0gMDsKKwkJCX0KKworCQkJcGl4ID0gKCpwaXg4KyspID4+ICg4IC0gYml0c19w
ZXJfcGl4ZWwpOworCQkJKmJsb2NrIHw9IHBpeCA8PCBwaXhzaGlmdDsKKwkJfQorCX0KKworCWtm
cmVlKGJ1Zik7CisKKwlyZXR1cm4gbGVuOworfQorCitzdGF0aWMgc2l6ZV90IGd1ZF94cmdiODg4
OF90b19jb2xvcih1OCAqZHN0LCBjb25zdCBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvICpmb3JtYXQs
CisJCQkJICAgIHZvaWQgKnNyYywgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsCisJCQkJICAg
IHN0cnVjdCBkcm1fcmVjdCAqcmVjdCkKK3sKKwl1bnNpZ25lZCBpbnQgYmxvY2tfd2lkdGggPSBk
cm1fZm9ybWF0X2luZm9fYmxvY2tfd2lkdGgoZm9ybWF0LCAwKTsKKwl1bnNpZ25lZCBpbnQgYml0
c19wZXJfcGl4ZWwgPSA4IC8gYmxvY2tfd2lkdGg7CisJdTggciwgZywgYiwgcGl4LCAqYmxvY2sg
PSBkc3Q7IC8qIEFzc2lnbiB0byBzaWxlbmNlIGNvbXBpbGVyIHdhcm5pbmcgKi8KKwl1bnNpZ25l
ZCBpbnQgeCwgeSwgd2lkdGg7CisJdTMyICpwaXgzMjsKKwlzaXplX3QgbGVuOworCisJLyogU3Rh
cnQgb24gYSBieXRlIGJvdW5kYXJ5ICovCisJcmVjdC0+eDEgPSBBTElHTl9ET1dOKHJlY3QtPngx
LCBibG9ja193aWR0aCk7CisJd2lkdGggPSBkcm1fcmVjdF93aWR0aChyZWN0KTsKKwlsZW4gPSBk
cm1fZm9ybWF0X2luZm9fbWluX3BpdGNoKGZvcm1hdCwgMCwgd2lkdGgpICogZHJtX3JlY3RfaGVp
Z2h0KHJlY3QpOworCisJZm9yICh5ID0gcmVjdC0+eTE7IHkgPCByZWN0LT55MjsgeSsrKSB7CisJ
CXBpeDMyID0gc3JjICsgKHkgKiBmYi0+cGl0Y2hlc1swXSk7CisJCXBpeDMyICs9IHJlY3QtPngx
OworCisJCWZvciAoeCA9IDA7IHggPCB3aWR0aDsgeCsrKSB7CisJCQl1bnNpZ25lZCBpbnQgcGl4
cG9zID0geCAlIGJsb2NrX3dpZHRoOyAvKiB3aXRoaW4gYnl0ZSBmcm9tIHRoZSBsZWZ0ICovCisJ
CQl1bnNpZ25lZCBpbnQgcGl4c2hpZnQgPSAoYmxvY2tfd2lkdGggLSBwaXhwb3MgLSAxKSAqIGJp
dHNfcGVyX3BpeGVsOworCisJCQlpZiAoIXBpeHBvcykgeworCQkJCWJsb2NrID0gZHN0Kys7CisJ
CQkJKmJsb2NrID0gMDsKKwkJCX0KKworCQkJciA9ICpwaXgzMiA+PiAxNjsKKwkJCWcgPSAqcGl4
MzIgPj4gODsKKwkJCWIgPSAqcGl4MzIrKzsKKworCQkJc3dpdGNoIChmb3JtYXQtPmZvcm1hdCkg
eworCQkJY2FzZSBHVURfRFJNX0ZPUk1BVF9YUkdCMTExMToKKwkJCQlwaXggPSAoKHIgPj4gNykg
PDwgMikgfCAoKGcgPj4gNykgPDwgMSkgfCAoYiA+PiA3KTsKKwkJCQlicmVhazsKKwkJCWRlZmF1
bHQ6CisJCQkJV0FSTl9PTl9PTkNFKDEpOworCQkJCXJldHVybiBsZW47CisJCQl9OworCisJCQkq
YmxvY2sgfD0gcGl4IDw8IHBpeHNoaWZ0OworCQl9CisJfQorCisJcmV0dXJuIGxlbjsKK30KKwor
c3RhdGljIGludCBndWRfcHJlcF9mbHVzaChzdHJ1Y3QgZ3VkX2RldmljZSAqZ2RybSwgc3RydWN0
IGRybV9mcmFtZWJ1ZmZlciAqZmIsCisJCQkgIGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8g
KmZvcm1hdCwgc3RydWN0IGRybV9yZWN0ICpyZWN0LAorCQkJICBzdHJ1Y3QgZ3VkX3NldF9idWZm
ZXJfcmVxICpyZXEpCit7CisJc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqaW1wb3J0X2F0dGFj
aCA9IGZiLT5vYmpbMF0tPmltcG9ydF9hdHRhY2g7CisJdTggY29tcHJlc3Npb24gPSBnZHJtLT5j
b21wcmVzc2lvbjsKKwlzdHJ1Y3QgZG1hX2J1Zl9tYXAgbWFwOworCXZvaWQgKnZhZGRyLCAqYnVm
OworCXNpemVfdCBwaXRjaCwgbGVuOworCWludCByZXQgPSAwOworCisJcGl0Y2ggPSBkcm1fZm9y
bWF0X2luZm9fbWluX3BpdGNoKGZvcm1hdCwgMCwgZHJtX3JlY3Rfd2lkdGgocmVjdCkpOworCWxl
biA9IHBpdGNoICogZHJtX3JlY3RfaGVpZ2h0KHJlY3QpOworCWlmIChsZW4gPiBnZHJtLT5idWxr
X2xlbikKKwkJcmV0dXJuIC1FMkJJRzsKKworCXJldCA9IGRybV9nZW1fc2htZW1fdm1hcChmYi0+
b2JqWzBdLCAmbWFwKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJdmFkZHIgPSBtYXAu
dmFkZHIgKyBmYi0+b2Zmc2V0c1swXTsKKworCWlmIChpbXBvcnRfYXR0YWNoKSB7CisJCXJldCA9
IGRtYV9idWZfYmVnaW5fY3B1X2FjY2VzcyhpbXBvcnRfYXR0YWNoLT5kbWFidWYsIERNQV9GUk9N
X0RFVklDRSk7CisJCWlmIChyZXQpCisJCQlnb3RvIHZ1bm1hcDsKKwl9CityZXRyeToKKwlpZiAo
Y29tcHJlc3Npb24pCisJCWJ1ZiA9IGdkcm0tPmNvbXByZXNzX2J1ZjsKKwllbHNlCisJCWJ1ZiA9
IGdkcm0tPmJ1bGtfYnVmOworCisJLyoKKwkgKiBJbXBvcnRlZCBidWZmZXJzIGFyZSBhc3N1bWVk
IHRvIGJlIHdyaXRlLWNvbWJpbmVkIGFuZCB0aHVzIHVuY2FjaGVkCisJICogd2l0aCBzbG93IHJl
YWRzIChhdCBsZWFzdCBvbiBBUk0pLgorCSAqLworCWlmIChmb3JtYXQgIT0gZmItPmZvcm1hdCkg
eworCQlpZiAoZm9ybWF0LT5mb3JtYXQgPT0gR1VEX0RSTV9GT1JNQVRfUjEpIHsKKwkJCWxlbiA9
IGd1ZF94cmdiODg4OF90b19yMTI0KGJ1ZiwgZm9ybWF0LCB2YWRkciwgZmIsIHJlY3QpOworCQkJ
aWYgKCFsZW4pIHsKKwkJCQlyZXQgPSAtRU5PTUVNOworCQkJCWdvdG8gZW5kX2NwdV9hY2Nlc3M7
CisJCQl9CisJCX0gZWxzZSBpZiAoZm9ybWF0LT5mb3JtYXQgPT0gRFJNX0ZPUk1BVF9SR0I1NjUp
IHsKKwkJCWRybV9mYl94cmdiODg4OF90b19yZ2I1NjUoYnVmLCB2YWRkciwgZmIsIHJlY3QsIGd1
ZF9pc19iaWdfZW5kaWFuKCkpOworCQl9IGVsc2UgeworCQkJbGVuID0gZ3VkX3hyZ2I4ODg4X3Rv
X2NvbG9yKGJ1ZiwgZm9ybWF0LCB2YWRkciwgZmIsIHJlY3QpOworCQl9CisJfSBlbHNlIGlmIChn
dWRfaXNfYmlnX2VuZGlhbigpICYmIGZvcm1hdC0+Y3BwWzBdID4gMSkgeworCQlkcm1fZmJfc3dh
YihidWYsIHZhZGRyLCBmYiwgcmVjdCwgIWltcG9ydF9hdHRhY2gpOworCX0gZWxzZSBpZiAoY29t
cHJlc3Npb24gJiYgIWltcG9ydF9hdHRhY2ggJiYgcGl0Y2ggPT0gZmItPnBpdGNoZXNbMF0pIHsK
KwkJLyogY2FuIGNvbXByZXNzIGRpcmVjdGx5IGZyb20gdGhlIGZyYW1lYnVmZmVyICovCisJCWJ1
ZiA9IHZhZGRyICsgcmVjdC0+eTEgKiBwaXRjaDsKKwl9IGVsc2UgeworCQlkcm1fZmJfbWVtY3B5
KGJ1ZiwgdmFkZHIsIGZiLCByZWN0KTsKKwl9CisKKwltZW1zZXQocmVxLCAwLCBzaXplb2YoKnJl
cSkpOworCXJlcS0+eCA9IGNwdV90b19sZTMyKHJlY3QtPngxKTsKKwlyZXEtPnkgPSBjcHVfdG9f
bGUzMihyZWN0LT55MSk7CisJcmVxLT53aWR0aCA9IGNwdV90b19sZTMyKGRybV9yZWN0X3dpZHRo
KHJlY3QpKTsKKwlyZXEtPmhlaWdodCA9IGNwdV90b19sZTMyKGRybV9yZWN0X2hlaWdodChyZWN0
KSk7CisJcmVxLT5sZW5ndGggPSBjcHVfdG9fbGUzMihsZW4pOworCisJaWYgKGNvbXByZXNzaW9u
ICYgR1VEX0NPTVBSRVNTSU9OX0xaNCkgeworCQlpbnQgY29tcGxlbjsKKworCQljb21wbGVuID0g
TFo0X2NvbXByZXNzX2RlZmF1bHQoYnVmLCBnZHJtLT5idWxrX2J1ZiwgbGVuLCBsZW4sIGdkcm0t
Pmx6NF9jb21wX21lbSk7CisJCWlmIChjb21wbGVuIDw9IDApIHsKKwkJCWNvbXByZXNzaW9uID0g
MDsKKwkJCWdvdG8gcmV0cnk7CisJCX0KKworCQlyZXEtPmNvbXByZXNzaW9uID0gR1VEX0NPTVBS
RVNTSU9OX0xaNDsKKwkJcmVxLT5jb21wcmVzc2VkX2xlbmd0aCA9IGNwdV90b19sZTMyKGNvbXBs
ZW4pOworCX0KKworZW5kX2NwdV9hY2Nlc3M6CisJaWYgKGltcG9ydF9hdHRhY2gpCisJCWRtYV9i
dWZfZW5kX2NwdV9hY2Nlc3MoaW1wb3J0X2F0dGFjaC0+ZG1hYnVmLCBETUFfRlJPTV9ERVZJQ0Up
OwordnVubWFwOgorCWRybV9nZW1fc2htZW1fdnVubWFwKGZiLT5vYmpbMF0sICZtYXApOworCisJ
cmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBndWRfZmx1c2hfcmVjdChzdHJ1Y3QgZ3VkX2Rl
dmljZSAqZ2RybSwgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsCisJCQkgIGNvbnN0IHN0cnVj
dCBkcm1fZm9ybWF0X2luZm8gKmZvcm1hdCwgc3RydWN0IGRybV9yZWN0ICpyZWN0KQoreworCXN0
cnVjdCB1c2JfZGV2aWNlICp1c2IgPSBndWRfdG9fdXNiX2RldmljZShnZHJtKTsKKwlzdHJ1Y3Qg
Z3VkX3NldF9idWZmZXJfcmVxIHJlcTsKKwlpbnQgcmV0LCBhY3R1YWxfbGVuZ3RoOworCXNpemVf
dCBsZW4sIHRybGVuOworCisJZHJtX2RiZygmZ2RybS0+ZHJtLCAiRmx1c2hpbmcgW0ZCOiVkXSAi
IERSTV9SRUNUX0ZNVCAiXG4iLCBmYi0+YmFzZS5pZCwgRFJNX1JFQ1RfQVJHKHJlY3QpKTsKKwor
CXJldCA9IGd1ZF9wcmVwX2ZsdXNoKGdkcm0sIGZiLCBmb3JtYXQsIHJlY3QsICZyZXEpOworCWlm
IChyZXQpCisJCXJldHVybiByZXQ7CisKKwlsZW4gPSBsZTMyX3RvX2NwdShyZXEubGVuZ3RoKTsK
KworCWlmIChyZXEuY29tcHJlc3Npb24pCisJCXRybGVuID0gbGUzMl90b19jcHUocmVxLmNvbXBy
ZXNzZWRfbGVuZ3RoKTsKKwllbHNlCisJCXRybGVuID0gbGVuOworCisJZ2RybS0+c3RhdHNfbGVu
Z3RoICs9IGxlbjsKKwkvKiBEaWQgaXQgd3JhcCBhcm91bmQ/ICovCisJaWYgKGdkcm0tPnN0YXRz
X2xlbmd0aCA8PSBsZW4gJiYgZ2RybS0+c3RhdHNfYWN0dWFsX2xlbmd0aCkgeworCQlnZHJtLT5z
dGF0c19sZW5ndGggPSBsZW47CisJCWdkcm0tPnN0YXRzX2FjdHVhbF9sZW5ndGggPSAwOworCX0K
KwlnZHJtLT5zdGF0c19hY3R1YWxfbGVuZ3RoICs9IHRybGVuOworCisJaWYgKCEoZ2RybS0+Zmxh
Z3MgJiBHVURfRElTUExBWV9GTEFHX0ZVTExfVVBEQVRFKSB8fCBnZHJtLT5wcmV2X2ZsdXNoX2Zh
aWxlZCkgeworCQlyZXQgPSBndWRfdXNiX3NldChnZHJtLCBHVURfUkVRX1NFVF9CVUZGRVIsIDAs
ICZyZXEsIHNpemVvZihyZXEpKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJ
cmV0ID0gdXNiX2J1bGtfbXNnKHVzYiwgZ2RybS0+YnVsa19waXBlLCBnZHJtLT5idWxrX2J1Ziwg
dHJsZW4sCisJCQkgICAmYWN0dWFsX2xlbmd0aCwgbXNlY3NfdG9famlmZmllcygzMDAwKSk7CisJ
aWYgKCFyZXQgJiYgdHJsZW4gIT0gYWN0dWFsX2xlbmd0aCkKKwkJcmV0ID0gLUVJTzsKKwlpZiAo
cmV0KQorCQlnZHJtLT5zdGF0c19udW1fZXJyb3JzKys7CisKKwlyZXR1cm4gcmV0OworfQorCit2
b2lkIGd1ZF9jbGVhcl9kYW1hZ2Uoc3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0pCit7CisJZ2RybS0+
ZGFtYWdlLngxID0gSU5UX01BWDsKKwlnZHJtLT5kYW1hZ2UueTEgPSBJTlRfTUFYOworCWdkcm0t
PmRhbWFnZS54MiA9IDA7CisJZ2RybS0+ZGFtYWdlLnkyID0gMDsKK30KKworc3RhdGljIHZvaWQg
Z3VkX2FkZF9kYW1hZ2Uoc3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0sIHN0cnVjdCBkcm1fcmVjdCAq
ZGFtYWdlKQoreworCWdkcm0tPmRhbWFnZS54MSA9IG1pbihnZHJtLT5kYW1hZ2UueDEsIGRhbWFn
ZS0+eDEpOworCWdkcm0tPmRhbWFnZS55MSA9IG1pbihnZHJtLT5kYW1hZ2UueTEsIGRhbWFnZS0+
eTEpOworCWdkcm0tPmRhbWFnZS54MiA9IG1heChnZHJtLT5kYW1hZ2UueDIsIGRhbWFnZS0+eDIp
OworCWdkcm0tPmRhbWFnZS55MiA9IG1heChnZHJtLT5kYW1hZ2UueTIsIGRhbWFnZS0+eTIpOwor
fQorCitzdGF0aWMgdm9pZCBndWRfcmV0cnlfZmFpbGVkX2ZsdXNoKHN0cnVjdCBndWRfZGV2aWNl
ICpnZHJtLCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKKwkJCQkgICBzdHJ1Y3QgZHJtX3Jl
Y3QgKmRhbWFnZSkKK3sKKwkvKgorCSAqIHBpcGVfdXBkYXRlIHdhaXRzIGZvciB0aGUgd29ya2Vy
IHdoZW4gdGhlIGRpc3BsYXkgbW9kZSBpcyBnb2luZyB0byBjaGFuZ2UuCisJICogVGhpcyBlbnN1
cmVzIHRoYXQgdGhlIHdpZHRoIGFuZCBoZWlnaHQgaXMgc3RpbGwgdGhlIHNhbWUgbWFraW5nIGl0
IHNhZmUgdG8KKwkgKiBhZGQgYmFjayB0aGUgZGFtYWdlLgorCSAqLworCisJbXV0ZXhfbG9jaygm
Z2RybS0+ZGFtYWdlX2xvY2spOworCWlmICghZ2RybS0+ZmIpIHsKKwkJZHJtX2ZyYW1lYnVmZmVy
X2dldChmYik7CisJCWdkcm0tPmZiID0gZmI7CisJfQorCWd1ZF9hZGRfZGFtYWdlKGdkcm0sIGRh
bWFnZSk7CisJbXV0ZXhfdW5sb2NrKCZnZHJtLT5kYW1hZ2VfbG9jayk7CisKKwkvKiBSZXRyeSBv
bmx5IG9uY2UgdG8gYXZvaWQgYSBwb3NzaWJsZSBzdG9ybSBpbiBjYXNlIG9mIGNvbnRpbnVlcyBl
cnJvcnMuICovCisJaWYgKCFnZHJtLT5wcmV2X2ZsdXNoX2ZhaWxlZCkKKwkJcXVldWVfd29yayhz
eXN0ZW1fbG9uZ193cSwgJmdkcm0tPndvcmspOworCWdkcm0tPnByZXZfZmx1c2hfZmFpbGVkID0g
dHJ1ZTsKK30KKwordm9pZCBndWRfZmx1c2hfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmsp
Cit7CisJc3RydWN0IGd1ZF9kZXZpY2UgKmdkcm0gPSBjb250YWluZXJfb2Yod29yaywgc3RydWN0
IGd1ZF9kZXZpY2UsIHdvcmspOworCWNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmZvcm1h
dDsKKwlzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYjsKKwlzdHJ1Y3QgZHJtX3JlY3QgZGFtYWdl
OworCXVuc2lnbmVkIGludCBpLCBsaW5lczsKKwlpbnQgaWR4LCByZXQgPSAwOworCXNpemVfdCBw
aXRjaDsKKworCWlmICghZHJtX2Rldl9lbnRlcigmZ2RybS0+ZHJtLCAmaWR4KSkKKwkJcmV0dXJu
OworCisJbXV0ZXhfbG9jaygmZ2RybS0+ZGFtYWdlX2xvY2spOworCWZiID0gZ2RybS0+ZmI7CisJ
Z2RybS0+ZmIgPSBOVUxMOworCWRhbWFnZSA9IGdkcm0tPmRhbWFnZTsKKwlndWRfY2xlYXJfZGFt
YWdlKGdkcm0pOworCW11dGV4X3VubG9jaygmZ2RybS0+ZGFtYWdlX2xvY2spOworCisJaWYgKCFm
YikKKwkJZ290byBvdXQ7CisKKwlmb3JtYXQgPSBmYi0+Zm9ybWF0OworCWlmIChmb3JtYXQtPmZv
cm1hdCA9PSBEUk1fRk9STUFUX1hSR0I4ODg4ICYmIGdkcm0tPnhyZ2I4ODg4X2VtdWxhdGlvbl9m
b3JtYXQpCisJCWZvcm1hdCA9IGdkcm0tPnhyZ2I4ODg4X2VtdWxhdGlvbl9mb3JtYXQ7CisKKwkv
KiBTcGxpdCB1cGRhdGUgaWYgaXQncyB0b28gYmlnICovCisJcGl0Y2ggPSBkcm1fZm9ybWF0X2lu
Zm9fbWluX3BpdGNoKGZvcm1hdCwgMCwgZHJtX3JlY3Rfd2lkdGgoJmRhbWFnZSkpOworCWxpbmVz
ID0gZHJtX3JlY3RfaGVpZ2h0KCZkYW1hZ2UpOworCisJaWYgKGdkcm0tPmJ1bGtfbGVuIDwgbGlu
ZXMgKiBwaXRjaCkKKwkJbGluZXMgPSBnZHJtLT5idWxrX2xlbiAvIHBpdGNoOworCisJZm9yIChp
ID0gMDsgaSA8IERJVl9ST1VORF9VUChkcm1fcmVjdF9oZWlnaHQoJmRhbWFnZSksIGxpbmVzKTsg
aSsrKSB7CisJCXN0cnVjdCBkcm1fcmVjdCByZWN0ID0gZGFtYWdlOworCisJCXJlY3QueTEgKz0g
aSAqIGxpbmVzOworCQlyZWN0LnkyID0gbWluX3QodTMyLCByZWN0LnkxICsgbGluZXMsIGRhbWFn
ZS55Mik7CisKKwkJcmV0ID0gZ3VkX2ZsdXNoX3JlY3QoZ2RybSwgZmIsIGZvcm1hdCwgJnJlY3Qp
OworCQlpZiAocmV0KSB7CisJCQlpZiAocmV0ICE9IC1FTk9ERVYgJiYgcmV0ICE9IC1FQ09OTlJF
U0VUICYmCisJCQkgICAgcmV0ICE9IC1FU0hVVERPV04gJiYgcmV0ICE9IC1FUFJPVE8pIHsKKwkJ
CQlib29sIHByZXZfZmx1c2hfZmFpbGVkID0gZ2RybS0+cHJldl9mbHVzaF9mYWlsZWQ7CisKKwkJ
CQlndWRfcmV0cnlfZmFpbGVkX2ZsdXNoKGdkcm0sIGZiLCAmZGFtYWdlKTsKKwkJCQlpZiAoIXBy
ZXZfZmx1c2hfZmFpbGVkKQorCQkJCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGZiLT5kZXYtPmRldiwK
KwkJCQkJCQkgICAgIkZhaWxlZCB0byBmbHVzaCBmcmFtZWJ1ZmZlcjogZXJyb3I9JWRcbiIsIHJl
dCk7CisJCQl9CisJCQlicmVhazsKKwkJfQorCisJCWdkcm0tPnByZXZfZmx1c2hfZmFpbGVkID0g
ZmFsc2U7CisJfQorCisJZHJtX2ZyYW1lYnVmZmVyX3B1dChmYik7CitvdXQ6CisJZHJtX2Rldl9l
eGl0KGlkeCk7Cit9CisKK3N0YXRpYyB2b2lkIGd1ZF9mYl9xdWV1ZV9kYW1hZ2Uoc3RydWN0IGd1
ZF9kZXZpY2UgKmdkcm0sIHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLAorCQkJCXN0cnVjdCBk
cm1fcmVjdCAqZGFtYWdlKQoreworCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKm9sZF9mYiA9IE5V
TEw7CisKKwltdXRleF9sb2NrKCZnZHJtLT5kYW1hZ2VfbG9jayk7CisKKwlpZiAoZmIgIT0gZ2Ry
bS0+ZmIpIHsKKwkJb2xkX2ZiID0gZ2RybS0+ZmI7CisJCWRybV9mcmFtZWJ1ZmZlcl9nZXQoZmIp
OworCQlnZHJtLT5mYiA9IGZiOworCX0KKworCWd1ZF9hZGRfZGFtYWdlKGdkcm0sIGRhbWFnZSk7
CisKKwltdXRleF91bmxvY2soJmdkcm0tPmRhbWFnZV9sb2NrKTsKKworCXF1ZXVlX3dvcmsoc3lz
dGVtX2xvbmdfd3EsICZnZHJtLT53b3JrKTsKKworCWlmIChvbGRfZmIpCisJCWRybV9mcmFtZWJ1
ZmZlcl9wdXQob2xkX2ZiKTsKK30KKworaW50IGd1ZF9waXBlX2NoZWNrKHN0cnVjdCBkcm1fc2lt
cGxlX2Rpc3BsYXlfcGlwZSAqcGlwZSwKKwkJICAgc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqbmV3
X3BsYW5lX3N0YXRlLAorCQkgICBzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRl
KQoreworCXN0cnVjdCBndWRfZGV2aWNlICpnZHJtID0gdG9fZ3VkX2RldmljZShwaXBlLT5jcnRj
LmRldik7CisJc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqb2xkX3BsYW5lX3N0YXRlID0gcGlwZS0+
cGxhbmUuc3RhdGU7CisJY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUgPSAmbmV3
X2NydGNfc3RhdGUtPm1vZGU7CisJc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlID0gbmV3
X3BsYW5lX3N0YXRlLT5zdGF0ZTsKKwlzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpvbGRfZmIgPSBv
bGRfcGxhbmVfc3RhdGUtPmZiOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uZWN0
b3Jfc3RhdGUgPSBOVUxMOworCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gbmV3X3BsYW5l
X3N0YXRlLT5mYjsKKwljb25zdCBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvICpmb3JtYXQgPSBmYi0+
Zm9ybWF0OworCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJdW5zaWduZWQgaW50
IGksIG51bV9wcm9wZXJ0aWVzOworCXN0cnVjdCBndWRfc3RhdGVfcmVxICpyZXE7CisJaW50IGlk
eCwgcmV0OworCXNpemVfdCBsZW47CisKKwlpZiAoV0FSTl9PTl9PTkNFKCFmYikpCisJCXJldHVy
biAtRUlOVkFMOworCisJaWYgKG9sZF9wbGFuZV9zdGF0ZS0+cm90YXRpb24gIT0gbmV3X3BsYW5l
X3N0YXRlLT5yb3RhdGlvbikKKwkJbmV3X2NydGNfc3RhdGUtPm1vZGVfY2hhbmdlZCA9IHRydWU7
CisKKwlpZiAob2xkX2ZiICYmIG9sZF9mYi0+Zm9ybWF0ICE9IGZvcm1hdCkKKwkJbmV3X2NydGNf
c3RhdGUtPm1vZGVfY2hhbmdlZCA9IHRydWU7CisKKwlpZiAoIW5ld19jcnRjX3N0YXRlLT5tb2Rl
X2NoYW5nZWQgJiYgIW5ld19jcnRjX3N0YXRlLT5jb25uZWN0b3JzX2NoYW5nZWQpCisJCXJldHVy
biAwOworCisJLyogT25seSBvbmUgY29ubmVjdG9yIGlzIHN1cHBvcnRlZCAqLworCWlmIChod2Vp
Z2h0MzIobmV3X2NydGNfc3RhdGUtPmNvbm5lY3Rvcl9tYXNrKSAhPSAxKQorCQlyZXR1cm4gLUVJ
TlZBTDsKKworCWlmIChmb3JtYXQtPmZvcm1hdCA9PSBEUk1fRk9STUFUX1hSR0I4ODg4ICYmIGdk
cm0tPnhyZ2I4ODg4X2VtdWxhdGlvbl9mb3JtYXQpCisJCWZvcm1hdCA9IGdkcm0tPnhyZ2I4ODg4
X2VtdWxhdGlvbl9mb3JtYXQ7CisKKwlmb3JfZWFjaF9uZXdfY29ubmVjdG9yX2luX3N0YXRlKHN0
YXRlLCBjb25uZWN0b3IsIGNvbm5lY3Rvcl9zdGF0ZSwgaSkgeworCQlpZiAoY29ubmVjdG9yX3N0
YXRlLT5jcnRjKQorCQkJYnJlYWs7CisJfQorCisJLyoKKwkgKiBEUk1fSU9DVExfTU9ERV9PQkpf
U0VUUFJPUEVSVFkgb24gdGhlIHJvdGF0aW9uIHByb3BlcnR5IHdpbGwgbm90IGhhdmUKKwkgKiB0
aGUgY29ubmVjdG9yIGluY2x1ZGVkIGluIHRoZSBzdGF0ZS4KKwkgKi8KKwlpZiAoIWNvbm5lY3Rv
cl9zdGF0ZSkgeworCQlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9pdGVyOwor
CisJCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKHBpcGUtPmNydGMuZGV2LCAmY29ubl9p
dGVyKTsKKwkJZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJmNvbm5faXRl
cikgeworCQkJaWYgKGNvbm5lY3Rvci0+c3RhdGUtPmNydGMpIHsKKwkJCQljb25uZWN0b3Jfc3Rh
dGUgPSBjb25uZWN0b3ItPnN0YXRlOworCQkJCWJyZWFrOworCQkJfQorCQl9CisJCWRybV9jb25u
ZWN0b3JfbGlzdF9pdGVyX2VuZCgmY29ubl9pdGVyKTsKKwl9CisKKwlpZiAoV0FSTl9PTl9PTkNF
KCFjb25uZWN0b3Jfc3RhdGUpKQorCQlyZXR1cm4gLUVOT0VOVDsKKworCWxlbiA9IHN0cnVjdF9z
aXplKHJlcSwgcHJvcGVydGllcywKKwkJCSAgR1VEX1BST1BFUlRJRVNfTUFYX05VTSArIEdVRF9D
T05ORUNUT1JfUFJPUEVSVElFU19NQVhfTlVNKTsKKwlyZXEgPSBremFsbG9jKGxlbiwgR0ZQX0tF
Uk5FTCk7CisJaWYgKCFyZXEpCisJCXJldHVybiAtRU5PTUVNOworCisJZ3VkX2Zyb21fZGlzcGxh
eV9tb2RlKCZyZXEtPm1vZGUsIG1vZGUpOworCisJcmVxLT5mb3JtYXQgPSBndWRfZnJvbV9mb3Vy
Y2MoZm9ybWF0LT5mb3JtYXQpOworCWlmIChXQVJOX09OX09OQ0UoIXJlcS0+Zm9ybWF0KSkgewor
CQlyZXQgPSAtRUlOVkFMOworCQlnb3RvIG91dDsKKwl9CisKKwlyZXEtPmNvbm5lY3RvciA9IGRy
bV9jb25uZWN0b3JfaW5kZXgoY29ubmVjdG9yX3N0YXRlLT5jb25uZWN0b3IpOworCisJcmV0ID0g
Z3VkX2Nvbm5lY3Rvcl9maWxsX3Byb3BlcnRpZXMoY29ubmVjdG9yX3N0YXRlLCByZXEtPnByb3Bl
cnRpZXMpOworCWlmIChyZXQgPCAwKQorCQlnb3RvIG91dDsKKworCW51bV9wcm9wZXJ0aWVzID0g
cmV0OworCWZvciAoaSA9IDA7IGkgPCBnZHJtLT5udW1fcHJvcGVydGllczsgaSsrKSB7CisJCXUx
NiBwcm9wID0gZ2RybS0+cHJvcGVydGllc1tpXTsKKwkJdTY0IHZhbDsKKworCQlzd2l0Y2ggKHBy
b3ApIHsKKwkJY2FzZSBHVURfUFJPUEVSVFlfUk9UQVRJT046CisJCQkvKiBEUk0gVUFQSSBtYXRj
aGVzIHRoZSBwcm90b2NvbCBzbyB1c2UgdmFsdWUgZGlyZWN0bHkgKi8KKwkJCXZhbCA9IG5ld19w
bGFuZV9zdGF0ZS0+cm90YXRpb247CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCVdBUk5fT05f
T05DRSgxKTsKKwkJCXJldCA9IC1FSU5WQUw7CisJCQlnb3RvIG91dDsKKwkJfQorCisJCXJlcS0+
cHJvcGVydGllc1tudW1fcHJvcGVydGllcyArIGldLnByb3AgPSBjcHVfdG9fbGUxNihwcm9wKTsK
KwkJcmVxLT5wcm9wZXJ0aWVzW251bV9wcm9wZXJ0aWVzICsgaV0udmFsID0gY3B1X3RvX2xlNjQo
dmFsKTsKKwkJbnVtX3Byb3BlcnRpZXMrKzsKKwl9CisKKwlpZiAoZHJtX2Rldl9lbnRlcihmYi0+
ZGV2LCAmaWR4KSkgeworCQlsZW4gPSBzdHJ1Y3Rfc2l6ZShyZXEsIHByb3BlcnRpZXMsIG51bV9w
cm9wZXJ0aWVzKTsKKwkJcmV0ID0gZ3VkX3VzYl9zZXQoZ2RybSwgR1VEX1JFUV9TRVRfU1RBVEVf
Q0hFQ0ssIDAsIHJlcSwgbGVuKTsKKwkJZHJtX2Rldl9leGl0KGlkeCk7CisJfSAgZWxzZSB7CisJ
CXJldCA9IC1FTk9ERVY7CisJfQorb3V0OgorCWtmcmVlKHJlcSk7CisKKwlyZXR1cm4gcmV0Owor
fQorCit2b2lkIGd1ZF9waXBlX3VwZGF0ZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUg
KnBpcGUsCisJCSAgICAgc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqb2xkX3N0YXRlKQoreworCXN0
cnVjdCBkcm1fZGV2aWNlICpkcm0gPSBwaXBlLT5jcnRjLmRldjsKKwlzdHJ1Y3QgZ3VkX2Rldmlj
ZSAqZ2RybSA9IHRvX2d1ZF9kZXZpY2UoZHJtKTsKKwlzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpz
dGF0ZSA9IHBpcGUtPnBsYW5lLnN0YXRlOworCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0g
c3RhdGUtPmZiOworCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9ICZwaXBlLT5jcnRjOworCXN0cnVj
dCBkcm1fcmVjdCBkYW1hZ2U7CisJaW50IGlkeDsKKworCWlmIChjcnRjLT5zdGF0ZS0+bW9kZV9j
aGFuZ2VkIHx8ICFjcnRjLT5zdGF0ZS0+ZW5hYmxlKSB7CisJCWNhbmNlbF93b3JrX3N5bmMoJmdk
cm0tPndvcmspOworCQltdXRleF9sb2NrKCZnZHJtLT5kYW1hZ2VfbG9jayk7CisJCWlmIChnZHJt
LT5mYikgeworCQkJZHJtX2ZyYW1lYnVmZmVyX3B1dChnZHJtLT5mYik7CisJCQlnZHJtLT5mYiA9
IE5VTEw7CisJCX0KKwkJZ3VkX2NsZWFyX2RhbWFnZShnZHJtKTsKKwkJbXV0ZXhfdW5sb2NrKCZn
ZHJtLT5kYW1hZ2VfbG9jayk7CisJfQorCisJaWYgKCFkcm1fZGV2X2VudGVyKGRybSwgJmlkeCkp
CisJCXJldHVybjsKKworCWlmICghb2xkX3N0YXRlLT5mYikKKwkJZ3VkX3VzYl9zZXRfdTgoZ2Ry
bSwgR1VEX1JFUV9TRVRfQ09OVFJPTExFUl9FTkFCTEUsIDEpOworCisJaWYgKGZiICYmIChjcnRj
LT5zdGF0ZS0+bW9kZV9jaGFuZ2VkIHx8IGNydGMtPnN0YXRlLT5jb25uZWN0b3JzX2NoYW5nZWQp
KQorCQlndWRfdXNiX3NldChnZHJtLCBHVURfUkVRX1NFVF9TVEFURV9DT01NSVQsIDAsIE5VTEws
IDApOworCisJaWYgKGNydGMtPnN0YXRlLT5hY3RpdmVfY2hhbmdlZCkKKwkJZ3VkX3VzYl9zZXRf
dTgoZ2RybSwgR1VEX1JFUV9TRVRfRElTUExBWV9FTkFCTEUsIGNydGMtPnN0YXRlLT5hY3RpdmUp
OworCisJaWYgKGRybV9hdG9taWNfaGVscGVyX2RhbWFnZV9tZXJnZWQob2xkX3N0YXRlLCBzdGF0
ZSwgJmRhbWFnZSkpIHsKKwkJaWYgKGdkcm0tPmZsYWdzICYgR1VEX0RJU1BMQVlfRkxBR19GVUxM
X1VQREFURSkKKwkJCWRybV9yZWN0X2luaXQoJmRhbWFnZSwgMCwgMCwgZmItPndpZHRoLCBmYi0+
aGVpZ2h0KTsKKwkJZ3VkX2ZiX3F1ZXVlX2RhbWFnZShnZHJtLCBmYiwgJmRhbWFnZSk7CisJfQor
CisJaWYgKCFjcnRjLT5zdGF0ZS0+ZW5hYmxlKQorCQlndWRfdXNiX3NldF91OChnZHJtLCBHVURf
UkVRX1NFVF9DT05UUk9MTEVSX0VOQUJMRSwgMCk7CisKKwlkcm1fZGV2X2V4aXQoaWR4KTsKK30K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2d1ZC5oIGIvaW5jbHVkZS9kcm0vZ3VkLmgKbmV3IGZp
bGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4wYjQ2YjU0ZmU1NmUKLS0tIC9kZXYv
bnVsbAorKysgYi9pbmNsdWRlL2RybS9ndWQuaApAQCAtMCwwICsxLDMzMyBAQAorLyogU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IE1JVCAqLworLyoKKyAqIENvcHlyaWdodCAyMDIwIE5vcmFsZiBU
csO4bm5lcworICovCisKKyNpZm5kZWYgX19MSU5VWF9HVURfSAorI2RlZmluZSBfX0xJTlVYX0dV
RF9ICisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorCisvKgorICogc3RydWN0IGd1ZF9kaXNw
bGF5X2Rlc2NyaXB0b3JfcmVxIC0gRGlzcGxheSBkZXNjcmlwdG9yCisgKiBAbWFnaWM6IE1hZ2lj
IHZhbHVlIEdVRF9ESVNQTEFZX01BR0lDCisgKiBAdmVyc2lvbjogUHJvdG9jb2wgdmVyc2lvbgor
ICogQGZsYWdzOiBGbGFncworICogICAgICAgICAtIFNUQVRVU19PTl9TRVQ6IEFsd2F5cyBkbyBh
IHN0YXR1cyByZXF1ZXN0IGFmdGVyIGEgU0VUIHJlcXVlc3QuCisgKiAgICAgICAgICAgICAgICAg
ICAgICAgICAgVGhpcyBpcyB1c2VkIGJ5IHRoZSBMaW51eCBnYWRnZXQgZHJpdmVyIHNpbmNlIGl0
IGhhcworICogICAgICAgICAgICAgICAgICAgICAgICAgIG5vIHdheSB0byBjb250cm9sIHRoZSBz
dGF0dXMgc3RhZ2Ugb2YgYSBjb250cm9sIE9VVAorICogICAgICAgICAgICAgICAgICAgICAgICAg
IHJlcXVlc3QgdGhhdCBoYXMgYSBwYXlsb2FkLgorICogICAgICAgICAtIEZVTExfVVBEQVRFOiAg
IEFsd2F5cyBzZW5kIHRoZSBlbnRpcmUgZnJhbWVidWZmZXIgd2hlbiBmbHVzaGluZyBjaGFuZ2Vz
LgorICogICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBHVURfUkVRX1NFVF9CVUZGRVIgcmVx
dWVzdCB3aWxsIG5vdCBiZSBzZW50CisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgYmVmb3Jl
IGVhY2ggYnVsayB0cmFuc2ZlciwgaXQgd2lsbCBvbmx5IGJlIHNlbnQgaWYgdGhlCisgKiAgICAg
ICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMgYnVsayB0cmFuc2ZlciBoYWQgZmFpbGVkLiBU
aGlzIGdpdmVzIHRoZSBkZXZpY2UKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICBhIGNoYW5j
ZSB0byByZXNldCBpdHMgc3RhdGUgbWFjaGluZSBpZiBuZWVkZWQuCisgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgVGhpcyBmbGFnIGNhbiBub3QgYmUgdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRo
IGNvbXByZXNzaW9uLgorICogQGNvbXByZXNzaW9uOiBTdXBwb3J0ZWQgY29tcHJlc3Npb24gdHlw
ZXMKKyAqICAgICAgICAgICAgICAgLSBHVURfQ09NUFJFU1NJT05fTFo0OiBMWjQgbG9zc2xlc3Mg
Y29tcHJlc3Npb24uCisgKiBAbWF4X2J1ZmZlcl9zaXplOiBNYXhpbXVtIGJ1ZmZlciBzaXplIHRo
ZSBkZXZpY2UgY2FuIGhhbmRsZSAob3B0aW9uYWwpLgorICogICAgICAgICAgICAgICAgICAgVGhp
cyBpcyB1c2VmdWwgZm9yIGRldmljZXMgdGhhdCBkb24ndCBoYXZlIGEgYmlnIGVub3VnaAorICog
ICAgICAgICAgICAgICAgICAgYnVmZmVyIHRvIGRlY29tcHJlc3MgdGhlIGVudGlyZSBmcmFtZWJ1
ZmZlciBpbiBvbmUgZ28uCisgKiBAbWluX3dpZHRoOiBNaW5pbXVtIHBpeGVsIHdpZHRoIHRoZSBj
b250cm9sbGVyIGNhbiBoYW5kbGUKKyAqIEBtYXhfd2lkdGg6IE1heGltdW0gd2lkdGgKKyAqIEBt
aW5faGVpZ2h0OiBNaW5pbXVtIGhlaWdodAorICogQG1heF9oZWlnaHQ6IE1heGltdW0gaGVpZ2h0
CisgKgorICogRGV2aWNlcyB0aGF0IGhhdmUgb25seSBvbmUgZGlzcGxheSBtb2RlIHdpbGwgaGF2
ZSBtaW5fd2lkdGggPT0gbWF4X3dpZHRoCisgKiBhbmQgbWluX2hlaWdodCA9PSBtYXhfaGVpZ2h0
LgorICovCitzdHJ1Y3QgZ3VkX2Rpc3BsYXlfZGVzY3JpcHRvcl9yZXEgeworCV9fbGUzMiBtYWdp
YzsKKyNkZWZpbmUgR1VEX0RJU1BMQVlfTUFHSUMJCQkweDFkNTA2MTRkCisJX191OCB2ZXJzaW9u
OworCV9fbGUzMiBmbGFnczsKKyNkZWZpbmUgR1VEX0RJU1BMQVlfRkxBR19TVEFUVVNfT05fU0VU
CQlCSVQoMCkKKyNkZWZpbmUgR1VEX0RJU1BMQVlfRkxBR19GVUxMX1VQREFURQkJQklUKDEpCisJ
X191OCBjb21wcmVzc2lvbjsKKyNkZWZpbmUgR1VEX0NPTVBSRVNTSU9OX0xaNAkJCUJJVCgwKQor
CV9fbGUzMiBtYXhfYnVmZmVyX3NpemU7CisJX19sZTMyIG1pbl93aWR0aDsKKwlfX2xlMzIgbWF4
X3dpZHRoOworCV9fbGUzMiBtaW5faGVpZ2h0OworCV9fbGUzMiBtYXhfaGVpZ2h0OworfSBfX3Bh
Y2tlZDsKKworLyoKKyAqIHN0cnVjdCBndWRfcHJvcGVydHlfcmVxIC0gUHJvcGVydHkKKyAqIEBw
cm9wOiBQcm9wZXJ0eQorICogQHZhbDogVmFsdWUKKyAqLworc3RydWN0IGd1ZF9wcm9wZXJ0eV9y
ZXEgeworCV9fbGUxNiBwcm9wOworCV9fbGU2NCB2YWw7Cit9IF9fcGFja2VkOworCisvKgorICog
c3RydWN0IGd1ZF9kaXNwbGF5X21vZGVfcmVxIC0gRGlzcGxheSBtb2RlCisgKiBAY2xvY2s6IFBp
eGVsIGNsb2NrIGluIGtIegorICogQGhkaXNwbGF5OiBIb3Jpem9udGFsIGRpc3BsYXkgc2l6ZQor
ICogQGhzeW5jX3N0YXJ0OiBIb3Jpem9udGFsIHN5bmMgc3RhcnQKKyAqIEBoc3luY19lbmQ6IEhv
cml6b250YWwgc3luYyBlbmQKKyAqIEBodG90YWw6IEhvcml6b250YWwgdG90YWwgc2l6ZQorICog
QHZkaXNwbGF5OiBWZXJ0aWNhbCBkaXNwbGF5IHNpemUKKyAqIEB2c3luY19zdGFydDogVmVydGlj
YWwgc3luYyBzdGFydAorICogQHZzeW5jX2VuZDogVmVydGljYWwgc3luYyBlbmQKKyAqIEB2dG90
YWw6IFZlcnRpY2FsIHRvdGFsIHNpemUKKyAqIEBmbGFnczogQml0cyAwLTEzIGFyZSB0aGUgc2Ft
ZSBhcyBpbiB0aGUgUmFuZFIgcHJvdG9jb2wgYW5kIGFsc28gd2hhdCBEUk0gdXNlcy4KKyAqICAg
ICAgICAgVGhlIGRlcHJlY2F0ZWQgYml0cyBhcmUgcmV1c2VkIGZvciBpbnRlcm5hbCBwcm90b2Nv
bCBmbGFncyBsZWF2aW5nIHVzCisgKiAgICAgICAgIGZyZWUgdG8gZm9sbG93IERSTSBmb3IgdGhl
IG90aGVyIGJpdHMgaW4gdGhlIGZ1dHVyZS4KKyAqICAgICAgICAgLSBGTEFHX1BSRUZFUlJFRDog
U2V0IG9uIHRoZSBwcmVmZXJyZWQgZGlzcGxheSBtb2RlLgorICovCitzdHJ1Y3QgZ3VkX2Rpc3Bs
YXlfbW9kZV9yZXEgeworCV9fbGUzMiBjbG9jazsKKwlfX2xlMTYgaGRpc3BsYXk7CisJX19sZTE2
IGhzeW5jX3N0YXJ0OworCV9fbGUxNiBoc3luY19lbmQ7CisJX19sZTE2IGh0b3RhbDsKKwlfX2xl
MTYgdmRpc3BsYXk7CisJX19sZTE2IHZzeW5jX3N0YXJ0OworCV9fbGUxNiB2c3luY19lbmQ7CisJ
X19sZTE2IHZ0b3RhbDsKKwlfX2xlMzIgZmxhZ3M7CisjZGVmaW5lIEdVRF9ESVNQTEFZX01PREVf
RkxBR19QSFNZTkMJCUJJVCgwKQorI2RlZmluZSBHVURfRElTUExBWV9NT0RFX0ZMQUdfTkhTWU5D
CQlCSVQoMSkKKyNkZWZpbmUgR1VEX0RJU1BMQVlfTU9ERV9GTEFHX1BWU1lOQwkJQklUKDIpCisj
ZGVmaW5lIEdVRF9ESVNQTEFZX01PREVfRkxBR19OVlNZTkMJCUJJVCgzKQorI2RlZmluZSBHVURf
RElTUExBWV9NT0RFX0ZMQUdfSU5URVJMQUNFCQlCSVQoNCkKKyNkZWZpbmUgR1VEX0RJU1BMQVlf
TU9ERV9GTEFHX0RCTFNDQU4JCUJJVCg1KQorI2RlZmluZSBHVURfRElTUExBWV9NT0RFX0ZMQUdf
Q1NZTkMJCUJJVCg2KQorI2RlZmluZSBHVURfRElTUExBWV9NT0RFX0ZMQUdfUENTWU5DCQlCSVQo
NykKKyNkZWZpbmUgR1VEX0RJU1BMQVlfTU9ERV9GTEFHX05DU1lOQwkJQklUKDgpCisjZGVmaW5l
IEdVRF9ESVNQTEFZX01PREVfRkxBR19IU0tFVwkJQklUKDkpCisvKiBCQ2FzdCBhbmQgUGl4ZWxN
dWx0aXBsZXggYXJlIGRlcHJlY2F0ZWQgKi8KKyNkZWZpbmUgR1VEX0RJU1BMQVlfTU9ERV9GTEFH
X0RCTENMSwkJQklUKDEyKQorI2RlZmluZSBHVURfRElTUExBWV9NT0RFX0ZMQUdfQ0xLRElWMgkJ
QklUKDEzKQorI2RlZmluZSBHVURfRElTUExBWV9NT0RFX0ZMQUdfVVNFUl9NQVNLCQlcCisJCShH
VURfRElTUExBWV9NT0RFX0ZMQUdfUEhTWU5DIHwgR1VEX0RJU1BMQVlfTU9ERV9GTEFHX05IU1lO
QyB8IFwKKwkJR1VEX0RJU1BMQVlfTU9ERV9GTEFHX1BWU1lOQyB8IEdVRF9ESVNQTEFZX01PREVf
RkxBR19OVlNZTkMgfCBcCisJCUdVRF9ESVNQTEFZX01PREVfRkxBR19JTlRFUkxBQ0UgfCBHVURf
RElTUExBWV9NT0RFX0ZMQUdfREJMU0NBTiB8IFwKKwkJR1VEX0RJU1BMQVlfTU9ERV9GTEFHX0NT
WU5DIHwgR1VEX0RJU1BMQVlfTU9ERV9GTEFHX1BDU1lOQyB8IFwKKwkJR1VEX0RJU1BMQVlfTU9E
RV9GTEFHX05DU1lOQyB8IEdVRF9ESVNQTEFZX01PREVfRkxBR19IU0tFVyB8IFwKKwkJR1VEX0RJ
U1BMQVlfTU9ERV9GTEFHX0RCTENMSyB8IEdVRF9ESVNQTEFZX01PREVfRkxBR19DTEtESVYyKQor
LyogSW50ZXJuYWwgcHJvdG9jb2wgZmxhZ3MgKi8KKyNkZWZpbmUgR1VEX0RJU1BMQVlfTU9ERV9G
TEFHX1BSRUZFUlJFRAkJQklUKDEwKQorfSBfX3BhY2tlZDsKKworLyoKKyAqIHN0cnVjdCBndWRf
Y29ubmVjdG9yX2Rlc2NyaXB0b3JfcmVxIC0gQ29ubmVjdG9yIGRlc2NyaXB0b3IKKyAqIEBjb25u
ZWN0b3JfdHlwZTogQ29ubmVjdG9yIHR5cGUgKEdVRF9DT05ORUNUT1JfVFlQRV8qKS4KKyAqICAg
ICAgICAgICAgICAgICAgSWYgdGhlIGhvc3QgZG9lc24ndCBzdXBwb3J0IHRoZSB0eXBlIGl0IHNo
b3VsZCBmYWxsIGJhY2sgdG8gUEFORUwuCisgKiBAZmxhZ3M6IEZsYWdzCisgKiAgICAgICAgIC0g
UE9MTF9TVEFUVVM6IENvbm5lY3RvciBzdGF0dXMgY2FuIGNoYW5nZSAocG9sbGVkIGV2ZXJ5IDEw
IHNlY29uZHMpCisgKiAgICAgICAgIC0gSU5URVJMQUNFOiBJbnRlcmxhY2VkIG1vZGVzIGFyZSBz
dXBwb3J0ZWQKKyAqICAgICAgICAgLSBET1VCTEVTQ0FOOiBEb3VibGVzY2FuIG1vZGVzIGFyZSBz
dXBwb3J0ZWQKKyAqLworc3RydWN0IGd1ZF9jb25uZWN0b3JfZGVzY3JpcHRvcl9yZXEgeworCV9f
dTggY29ubmVjdG9yX3R5cGU7CisjZGVmaW5lIEdVRF9DT05ORUNUT1JfVFlQRV9QQU5FTAkJMAor
I2RlZmluZSBHVURfQ09OTkVDVE9SX1RZUEVfVkdBCQkJMQorI2RlZmluZSBHVURfQ09OTkVDVE9S
X1RZUEVfQ09NUE9TSVRFCQkyCisjZGVmaW5lIEdVRF9DT05ORUNUT1JfVFlQRV9TVklERU8JCTMK
KyNkZWZpbmUgR1VEX0NPTk5FQ1RPUl9UWVBFX0NPTVBPTkVOVAkJNAorI2RlZmluZSBHVURfQ09O
TkVDVE9SX1RZUEVfRFZJCQkJNQorI2RlZmluZSBHVURfQ09OTkVDVE9SX1RZUEVfRElTUExBWVBP
UlQJCTYKKyNkZWZpbmUgR1VEX0NPTk5FQ1RPUl9UWVBFX0hETUkJCQk3CisJX19sZTMyIGZsYWdz
OworI2RlZmluZSBHVURfQ09OTkVDVE9SX0ZMQUdTX1BPTExfU1RBVFVTCQlCSVQoMCkKKyNkZWZp
bmUgR1VEX0NPTk5FQ1RPUl9GTEFHU19JTlRFUkxBQ0UJCUJJVCgxKQorI2RlZmluZSBHVURfQ09O
TkVDVE9SX0ZMQUdTX0RPVUJMRVNDQU4JCUJJVCgyKQorfSBfX3BhY2tlZDsKKworLyoKKyAqIHN0
cnVjdCBndWRfc2V0X2J1ZmZlcl9yZXEgLSBTZXQgYnVmZmVyIHRyYW5zZmVyIGluZm8KKyAqIEB4
OiBYIHBvc2l0aW9uIG9mIHJlY3RhbmdsZQorICogQHk6IFkgcG9zaXRpb24KKyAqIEB3aWR0aDog
UGl4ZWwgd2lkdGggb2YgcmVjdGFuZ2xlCisgKiBAaGVpZ2h0OiBQaXhlbCBoZWlnaHQKKyAqIEBs
ZW5ndGg6IEJ1ZmZlciBsZW5ndGggaW4gYnl0ZXMKKyAqIEBjb21wcmVzc2lvbjogVHJhbnNmZXIg
Y29tcHJlc3Npb24KKyAqIEBjb21wcmVzc2VkX2xlbmd0aDogQ29tcHJlc3NlZCBidWZmZXIgbGVu
Z3RoCisgKgorICogVGhpcyByZXF1ZXN0IGlzIGlzc3VlZCByaWdodCBiZWZvcmUgdGhlIGJ1bGsg
dHJhbnNmZXIuCisgKiBAeCwgQHksIEB3aWR0aCBhbmQgQGhlaWdodCBzcGVjaWZpZXMgdGhlIHJl
Y3RhbmdsZSB3aGVyZSB0aGUgYnVmZmVyIHNob3VsZCBiZQorICogcGxhY2VkIGluc2lkZSB0aGUg
ZnJhbWVidWZmZXIuCisgKi8KK3N0cnVjdCBndWRfc2V0X2J1ZmZlcl9yZXEgeworCV9fbGUzMiB4
OworCV9fbGUzMiB5OworCV9fbGUzMiB3aWR0aDsKKwlfX2xlMzIgaGVpZ2h0OworCV9fbGUzMiBs
ZW5ndGg7CisJX191OCBjb21wcmVzc2lvbjsKKwlfX2xlMzIgY29tcHJlc3NlZF9sZW5ndGg7Cit9
IF9fcGFja2VkOworCisvKgorICogc3RydWN0IGd1ZF9zdGF0ZV9yZXEgLSBEaXNwbGF5IHN0YXRl
CisgKiBAbW9kZTogRGlzcGxheSBtb2RlCisgKiBAZm9ybWF0OiBQaXhlbCBmb3JtYXQgR1VEX1BJ
WEVMX0ZPUk1BVF8qCisgKiBAY29ubmVjdG9yOiBDb25uZWN0b3IgaW5kZXgKKyAqIEBwcm9wZXJ0
aWVzOiBBcnJheSBvZiBwcm9wZXJ0aWVzCisgKgorICogVGhlIGVudGlyZSBzdGF0ZSBpcyB0cmFu
c2ZlcnJlZCBlYWNoIHRpbWUgdGhlcmUncyBhIGNoYW5nZS4KKyAqLworc3RydWN0IGd1ZF9zdGF0
ZV9yZXEgeworCXN0cnVjdCBndWRfZGlzcGxheV9tb2RlX3JlcSBtb2RlOworCV9fdTggZm9ybWF0
OworCV9fdTggY29ubmVjdG9yOworCXN0cnVjdCBndWRfcHJvcGVydHlfcmVxIHByb3BlcnRpZXNb
XTsKK30gX19wYWNrZWQ7CisKKy8qIExpc3Qgb2Ygc3VwcG9ydGVkIGNvbm5lY3RvciBwcm9wZXJ0
aWVzOiAqLworCisvKiBNYXJnaW5zIGluIHBpeGVscyB0byBkZWFsIHdpdGggb3ZlcnNjYW4sIHJh
bmdlIDAtMTAwICovCisjZGVmaW5lIEdVRF9QUk9QRVJUWV9UVl9MRUZUX01BUkdJTgkJCTEKKyNk
ZWZpbmUgR1VEX1BST1BFUlRZX1RWX1JJR0hUX01BUkdJTgkJCTIKKyNkZWZpbmUgR1VEX1BST1BF
UlRZX1RWX1RPUF9NQVJHSU4JCQkzCisjZGVmaW5lIEdVRF9QUk9QRVJUWV9UVl9CT1RUT01fTUFS
R0lOCQkJNAorI2RlZmluZSBHVURfUFJPUEVSVFlfVFZfTU9ERQkJCQk1CisvKiBCcmlnaHRuZXNz
IGluIHBlcmNlbnQsIHJhbmdlIDAtMTAwICovCisjZGVmaW5lIEdVRF9QUk9QRVJUWV9UVl9CUklH
SFRORVNTCQkJNgorLyogQ29udHJhc3QgaW4gcGVyY2VudCwgcmFuZ2UgMC0xMDAgKi8KKyNkZWZp
bmUgR1VEX1BST1BFUlRZX1RWX0NPTlRSQVNUCQkJNworLyogRmxpY2tlciByZWR1Y3Rpb24gaW4g
cGVyY2VudCwgcmFuZ2UgMC0xMDAgKi8KKyNkZWZpbmUgR1VEX1BST1BFUlRZX1RWX0ZMSUNLRVJf
UkVEVUNUSU9OCQk4CisvKiBPdmVyc2NhbiBpbiBwZXJjZW50LCByYW5nZSAwLTEwMCAqLworI2Rl
ZmluZSBHVURfUFJPUEVSVFlfVFZfT1ZFUlNDQU4JCQk5CisvKiBTYXR1cmF0aW9uIGluIHBlcmNl
bnQsIHJhbmdlIDAtMTAwICovCisjZGVmaW5lIEdVRF9QUk9QRVJUWV9UVl9TQVRVUkFUSU9OCQkJ
MTAKKy8qIEh1ZSBpbiBwZXJjZW50LCByYW5nZSAwLTEwMCAqLworI2RlZmluZSBHVURfUFJPUEVS
VFlfVFZfSFVFCQkJCTExCisKKy8qCisgKiBCYWNrbGlnaHQgYnJpZ2h0bmVzcyBpcyBpbiB0aGUg
cmFuZ2UgMC0xMDAgaW5jbHVzaXZlLiBUaGUgdmFsdWUgcmVwcmVzZW50cyB0aGUgaHVtYW4gcGVy
Y2VwdHVhbAorICogYnJpZ2h0bmVzcyBhbmQgbm90IGEgbGluZWFyIFBXTSB2YWx1ZS4gMCBpcyBt
aW5pbXVtIGJyaWdodG5lc3Mgd2hpY2ggc2hvdWxkIG5vdCB0dXJuIHRoZQorICogYmFja2xpZ2h0
IGNvbXBsZXRlbHkgb2ZmLiBUaGUgRFBNUyBjb25uZWN0b3IgcHJvcGVydHkgc2hvdWxkIGJlIHVz
ZWQgdG8gY29udHJvbCBwb3dlciB3aGljaCB3aWxsCisgKiB0cmlnZ2VyIGEgR1VEX1JFUV9TRVRf
RElTUExBWV9FTkFCTEUgcmVxdWVzdC4KKyAqCisgKiBUaGlzIGRvZXMgbm90IG1hcCB0byBhIERS
TSBwcm9wZXJ0eSwgaXQgaXMgdXNlZCB3aXRoIHRoZSBiYWNrbGlnaHQgZGV2aWNlLgorICovCisj
ZGVmaW5lIEdVRF9QUk9QRVJUWV9CQUNLTElHSFRfQlJJR0hUTkVTUwkJMTIKKworLyogTGlzdCBv
ZiBzdXBwb3J0ZWQgcHJvcGVydGllcyB0aGF0IGFyZSBub3QgY29ubmVjdG9yIHByb3BldGllczog
Ki8KKworLyoKKyAqIFBsYW5lIHJvdGF0aW9uLiBTaG91bGQgcmV0dXJuIHRoZSBzdXBwb3J0ZWQg
Yml0bWFzayBvbgorICogR1VEX1JFUV9HRVRfUFJPUEVSVElFUy4gR1VEX1JPVEFUSU9OXzAgaXMg
bWFuZGF0b3J5LgorICoKKyAqIE5vdGU6IFRoaXMgaXMgbm90IGRpc3BsYXkgcm90YXRpb24gc28g
OTAvMjcwIHdpbGwgbmVlZCBzY2FsaW5nIHRvIG1ha2UgaXQgZml0ICh1bmxlc3Mgc3F1YXJlZCku
CisgKi8KKyNkZWZpbmUgR1VEX1BST1BFUlRZX1JPVEFUSU9OCQkJCTUwCisgICNkZWZpbmUgR1VE
X1JPVEFUSU9OXzAJCQlCSVQoMCkKKyAgI2RlZmluZSBHVURfUk9UQVRJT05fOTAJCQlCSVQoMSkK
KyAgI2RlZmluZSBHVURfUk9UQVRJT05fMTgwCQkJQklUKDIpCisgICNkZWZpbmUgR1VEX1JPVEFU
SU9OXzI3MAkJCUJJVCgzKQorICAjZGVmaW5lIEdVRF9ST1RBVElPTl9SRUZMRUNUX1gJCUJJVCg0
KQorICAjZGVmaW5lIEdVRF9ST1RBVElPTl9SRUZMRUNUX1kJCUJJVCg1KQorICAjZGVmaW5lIEdV
RF9ST1RBVElPTl9NQVNLCQkJKEdVRF9ST1RBVElPTl8wIHwgR1VEX1JPVEFUSU9OXzkwIHwgXAor
CQkJCQkJR1VEX1JPVEFUSU9OXzE4MCB8IEdVRF9ST1RBVElPTl8yNzAgfCBcCisJCQkJCQlHVURf
Uk9UQVRJT05fUkVGTEVDVF9YIHwgR1VEX1JPVEFUSU9OX1JFRkxFQ1RfWSkKKworLyogVVNCIENv
bnRyb2wgcmVxdWVzdHM6ICovCisKKy8qIEdldCBzdGF0dXMgZnJvbSB0aGUgbGFzdCBHRVQvU0VU
IGNvbnRyb2wgcmVxdWVzdC4gVmFsdWUgaXMgdTguICovCisjZGVmaW5lIEdVRF9SRVFfR0VUX1NU
QVRVUwkJCQkweDAwCisgIC8qIFN0YXR1cyB2YWx1ZXM6ICovCisgICNkZWZpbmUgR1VEX1NUQVRV
U19PSwkJCQkweDAwCisgICNkZWZpbmUgR1VEX1NUQVRVU19CVVNZCQkJMHgwMQorICAjZGVmaW5l
IEdVRF9TVEFUVVNfUkVRVUVTVF9OT1RfU1VQUE9SVEVECTB4MDIKKyAgI2RlZmluZSBHVURfU1RB
VFVTX1BST1RPQ09MX0VSUk9SCQkweDAzCisgICNkZWZpbmUgR1VEX1NUQVRVU19JTlZBTElEX1BB
UkFNRVRFUgkJMHgwNAorICAjZGVmaW5lIEdVRF9TVEFUVVNfRVJST1IJCQkweDA1CisKKy8qIEdl
dCBkaXNwbGF5IGRlc2NyaXB0b3IgYXMgYSAmZ3VkX2Rpc3BsYXlfZGVzY3JpcHRvcl9yZXEgKi8K
KyNkZWZpbmUgR1VEX1JFUV9HRVRfREVTQ1JJUFRPUgkJCQkweDAxCisKKy8qIEdldCBzdXBwb3J0
ZWQgcGl4ZWwgZm9ybWF0cyBhcyBhIGJ5dGUgYXJyYXkgb2YgR1VEX1BJWEVMX0ZPUk1BVF8qICov
CisjZGVmaW5lIEdVRF9SRVFfR0VUX0ZPUk1BVFMJCQkJMHg0MAorICAjZGVmaW5lIEdVRF9GT1JN
QVRTX01BWF9OVU0JCQkzMgorICAvKiBSMSBpcyBhIDEtYml0IG1vbm9jaHJvbWUgdHJhbnNmZXIg
Zm9ybWF0IHByZXNlbnRlZCB0byB1c2Vyc3BhY2UgYXMgWFJHQjg4ODggKi8KKyAgI2RlZmluZSBH
VURfUElYRUxfRk9STUFUX1IxCQkJMHgwMQorICAjZGVmaW5lIEdVRF9QSVhFTF9GT1JNQVRfWFJH
QjExMTEJCTB4MjAKKyAgI2RlZmluZSBHVURfUElYRUxfRk9STUFUX1JHQjU2NQkJMHg0MAorICAj
ZGVmaW5lIEdVRF9QSVhFTF9GT1JNQVRfWFJHQjg4ODgJCTB4ODAKKyAgI2RlZmluZSBHVURfUElY
RUxfRk9STUFUX0FSR0I4ODg4CQkweDgxCisKKy8qCisgKiBHZXQgc3VwcG9ydGVkIHByb3BlcnRp
ZXMgdGhhdCBhcmUgbm90IGNvbm5lY3RvciBwcm9wZXRpZXMgYXMgYSAmZ3VkX3Byb3BlcnR5X3Jl
cSBhcnJheS4KKyAqIGd1ZF9wcm9wZXJ0eV9yZXEudmFsIG9mdGVuIGNvbnRhaW5zIHRoZSBpbml0
aWFsIHZhbHVlIGZvciB0aGUgcHJvcGVydHkuCisgKi8KKyNkZWZpbmUgR1VEX1JFUV9HRVRfUFJP
UEVSVElFUwkJCQkweDQxCisgICNkZWZpbmUgR1VEX1BST1BFUlRJRVNfTUFYX05VTQkJMzIKKwor
LyogQ29ubmVjdG9yIHJlcXVlc3RzIGhhdmUgdGhlIGNvbm5lY3RvciBpbmRleCBwYXNzZWQgaW4g
dGhlIHdWYWx1ZSBmaWVsZCAqLworCisvKiBHZXQgY29ubmVjdG9yIGRlc2NyaXB0b3JzIGFzIGFu
IGFycmF5IG9mICZndWRfY29ubmVjdG9yX2Rlc2NyaXB0b3JfcmVxICovCisjZGVmaW5lIEdVRF9S
RVFfR0VUX0NPTk5FQ1RPUlMJCQkJMHg1MAorICAjZGVmaW5lIEdVRF9DT05ORUNUT1JTX01BWF9O
VU0JCTMyCisKKy8qCisgKiBHZXQgcHJvcGVydGllcyBzdXBwb3J0ZWQgYnkgdGhlIGNvbm5lY3Rv
ciBhcyBhICZndWRfcHJvcGVydHlfcmVxIGFycmF5LgorICogZ3VkX3Byb3BlcnR5X3JlcS52YWwg
b2Z0ZW4gY29udGFpbnMgdGhlIGluaXRpYWwgdmFsdWUgZm9yIHRoZSBwcm9wZXJ0eS4KKyAqLwor
I2RlZmluZSBHVURfUkVRX0dFVF9DT05ORUNUT1JfUFJPUEVSVElFUwkJMHg1MQorICAjZGVmaW5l
IEdVRF9DT05ORUNUT1JfUFJPUEVSVElFU19NQVhfTlVNCTMyCisKKy8qCisgKiBJc3N1ZWQgd2hl
biB0aGVyZSdzIGEgVFZfTU9ERSBwcm9wZXJ0eSBwcmVzZW50LgorICogR2V0cyBhbiBhcnJheSBv
ZiB0aGUgc3VwcG9ydGVkIFRWX01PREUgbmFtZXMgZWFjaCBlbnRyeSBvZiBsZW5ndGgKKyAqIEdV
RF9DT05ORUNUT1JfVFZfTU9ERV9OQU1FX0xFTi4gTmFtZXMgbXVzdCBiZSBOVUwtdGVybWluYXRl
ZC4KKyAqLworI2RlZmluZSBHVURfUkVRX0dFVF9DT05ORUNUT1JfVFZfTU9ERV9WQUxVRVMJCTB4
NTIKKyAgI2RlZmluZSBHVURfQ09OTkVDVE9SX1RWX01PREVfTkFNRV9MRU4JMTYKKyAgI2RlZmlu
ZSBHVURfQ09OTkVDVE9SX1RWX01PREVfTUFYX05VTQkJMTYKKworLyogV2hlbiB1c2Vyc3BhY2Ug
Y2hlY2tzIGNvbm5lY3RvciBzdGF0dXMsIHRoaXMgaXMgaXNzdWVkIGZpcnN0LCBub3QgdXNlZCBm
b3IgcG9sbCByZXF1ZXN0cy4gKi8KKyNkZWZpbmUgR1VEX1JFUV9TRVRfQ09OTkVDVE9SX0ZPUkNF
X0RFVEVDVAkJMHg1MworCisvKgorICogR2V0IGNvbm5lY3RvciBzdGF0dXMuIFZhbHVlIGlzIHU4
LgorICoKKyAqIFVzZXJzcGFjZSB3aWxsIGdldCBhIEhPVFBMVUcgdWV2ZW50IGlmIG9uZSBvZiB0
aGUgZm9sbG93aW5nIGlzIHRydWU6CisgKiAtIENvbm5lY3Rpb24gc3RhdHVzIGhhcyBjaGFuZ2Vk
IHNpbmNlIGxhc3QKKyAqIC0gQ0hBTkdFRCBpcyBzZXQKKyAqLworI2RlZmluZSBHVURfUkVRX0dF
VF9DT05ORUNUT1JfU1RBVFVTCQkJMHg1NAorICAjZGVmaW5lIEdVRF9DT05ORUNUT1JfU1RBVFVT
X0RJU0NPTk5FQ1RFRAkweDAwCisgICNkZWZpbmUgR1VEX0NPTk5FQ1RPUl9TVEFUVVNfQ09OTkVD
VEVECTB4MDEKKyAgI2RlZmluZSBHVURfQ09OTkVDVE9SX1NUQVRVU19VTktOT1dOCQkweDAyCisg
ICNkZWZpbmUgR1VEX0NPTk5FQ1RPUl9TVEFUVVNfQ09OTkVDVEVEX01BU0sJMHgwMworICAjZGVm
aW5lIEdVRF9DT05ORUNUT1JfU1RBVFVTX0NIQU5HRUQJCUJJVCg3KQorCisvKgorICogRGlzcGxh
eSBtb2RlcyBjYW4gYmUgZmV0Y2hlZCBhcyBlaXRoZXIgRURJRCBkYXRhIG9yIGFuIGFycmF5IG9m
ICZndWRfZGlzcGxheV9tb2RlX3JlcS4KKyAqCisgKiBJZiBHVURfUkVRX0dFVF9DT05ORUNUT1Jf
TU9ERVMgcmV0dXJucyB6ZXJvLCBFRElEIGlzIHVzZWQgdG8gY3JlYXRlIGRpc3BsYXkgbW9kZXMu
CisgKiBJZiBib3RoIGRpc3BsYXkgbW9kZXMgYW5kIEVESUQgYXJlIHJldHVybmVkLCBFRElEIGlz
IGp1c3QgcGFzc2VkIG9uIHRvIHVzZXJzcGFjZQorICogaW4gdGhlIEVESUQgY29ubmVjdG9yIHBy
b3BlcnR5LgorICovCisKKy8qIEdldCAmZ3VkX2Rpc3BsYXlfbW9kZV9yZXEgYXJyYXkgb2Ygc3Vw
cG9ydGVkIGRpc3BsYXkgbW9kZXMgKi8KKyNkZWZpbmUgR1VEX1JFUV9HRVRfQ09OTkVDVE9SX01P
REVTCQkJMHg1NQorICAjZGVmaW5lIEdVRF9DT05ORUNUT1JfTUFYX05VTV9NT0RFUwkJMTI4CisK
Ky8qIEdldCBFeHRlbmRlZCBEaXNwbGF5IElkZW50aWZpY2F0aW9uIERhdGEgKi8KKyNkZWZpbmUg
R1VEX1JFUV9HRVRfQ09OTkVDVE9SX0VESUQJCQkweDU2CisgICNkZWZpbmUgR1VEX0NPTk5FQ1RP
Ul9NQVhfRURJRF9MRU4JCTIwNDgKKworLyogU2V0IGJ1ZmZlciBwcm9wZXJ0aWVzIGJlZm9yZSBi
dWxrIHRyYW5zZmVyIGFzICZndWRfc2V0X2J1ZmZlcl9yZXEgKi8KKyNkZWZpbmUgR1VEX1JFUV9T
RVRfQlVGRkVSCQkJCTB4NjAKKworLyogQ2hlY2sgZGlzcGxheSBjb25maWd1cmF0aW9uIGFzICZn
dWRfc3RhdGVfcmVxICovCisjZGVmaW5lIEdVRF9SRVFfU0VUX1NUQVRFX0NIRUNLCQkJCTB4NjEK
KworLyogQXBwbHkgdGhlIHByZXZpb3VzIFNUQVRFX0NIRUNLIGNvbmZpZ3VyYXRpb24gKi8KKyNk
ZWZpbmUgR1VEX1JFUV9TRVRfU1RBVEVfQ09NTUlUCQkJMHg2MgorCisvKiBFbmFibGUvZGlzYWJs
ZSB0aGUgZGlzcGxheSBjb250cm9sbGVyLCB2YWx1ZSBpcyB1ODogMC8xICovCisjZGVmaW5lIEdV
RF9SRVFfU0VUX0NPTlRST0xMRVJfRU5BQkxFCQkJMHg2MworCisvKiBFbmFibGUvZGlzYWJsZSBk
aXNwbGF5L291dHB1dCAoRFBNUyksIHZhbHVlIGlzIHU4OiAwLzEgKi8KKyNkZWZpbmUgR1VEX1JF
UV9TRVRfRElTUExBWV9FTkFCTEUJCQkweDY0CisKKyNlbmRpZgotLSAKMi4yMy4wCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGlu
ZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
