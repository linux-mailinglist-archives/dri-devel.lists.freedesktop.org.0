Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5F5EDCB553
	for <lists+dri-devel@lfdr.de>; Fri,  4 Oct 2019 09:40:20 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0494B6EAD6;
	Fri,  4 Oct 2019 07:39:08 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 35AD26E064
 for <dri-devel@lists.freedesktop.org>; Thu,  3 Oct 2019 20:20:35 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id AEAD4B03B;
 Thu,  3 Oct 2019 20:20:33 +0000 (UTC)
From: Davidlohr Bueso <dave@stgolabs.net>
To: akpm@linux-foundation.org
Subject: [PATCH 09/11] lib/interval-tree: convert interval_tree to half closed
 intervals
Date: Thu,  3 Oct 2019 13:18:56 -0700
Message-Id: <20191003201858.11666-10-dave@stgolabs.net>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20191003201858.11666-1-dave@stgolabs.net>
References: <20191003201858.11666-1-dave@stgolabs.net>
MIME-Version: 1.0
X-Mailman-Approved-At: Fri, 04 Oct 2019 07:38:50 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 dave@stgolabs.net, Davidlohr Bueso <dbueso@suse.de>, peterz@infradead.org,
 David Airlie <airlied@linux.ie>, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 Doug Ledford <dledford@redhat.com>, Alex Deucher <alexander.deucher@amd.com>,
 walken@google.com,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 linux-rdma@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGdlbmVyaWMgdHJlZSB0cmVlIHJlYWxseSB3YW50cyBbYSwgYikgaW50ZXJ2YWxzLCBub3Qg
ZnVsbHkgY2xvc2VkLgpBcyBzdWNoIGNvbnZlcnQgaXQgdG8gdXNlIHRoZSBuZXcgaW50ZXJ2YWxf
dHJlZV9nZW4uaC4gTW9zdCBvZiB0aGUKY29udmVyc2lvbnMgYXJlIHN0cmFpZ2h0Zm9yd2FyZCwg
d2l0aCB0aGUgZXhjZXB0aW9uIG9mIHBlcmhhcHMKcmFkZW9uX3ZtX2JvX3NldF9hZGRyKCksIGJ1
dCBzZW1hbnRpY3MgaGF2ZSBiZWVuIHRyaWVkIHRvIGJlIGxlZnQKdW50b3VjaGVkLgoKQ2M6ICJD
aHJpc3RpYW4gS8O2bmlnIiA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgpDYzogQWxleCBEZXVj
aGVyIDxhbGV4YW5kZXIuZGV1Y2hlckBhbWQuY29tPgpDYzogRGF2aWQgQWlybGllIDxhaXJsaWVk
QGxpbnV4LmllPgpDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNoPgpDYzogRG91ZyBM
ZWRmb3JkIDxkbGVkZm9yZEByZWRoYXQuY29tPgpDYzogSm9lcmcgUm9lZGVsIDxqb3JvQDhieXRl
cy5vcmc+CkNjOiAiSsOpcsO0bWUgR2xpc3NlIiA8amdsaXNzZUByZWRoYXQuY29tPgpDYzogZHJp
LWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpDYzogbGludXgtcmRtYUB2Z2VyLmtlcm5lbC5v
cmcKU2lnbmVkLW9mZi1ieTogRGF2aWRsb2hyIEJ1ZXNvIDxkYnVlc29Ac3VzZS5kZT4KLS0tCiBk
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfbW4uYyAgICAgIHwgMTIgKysrLS0tLS0t
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdXNlcnB0ci5jIHwgIDUgKy0t
LS0KIGRyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX21uLmMgICAgICAgICAgfCAxMSArKysr
LS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL3JhZGVvbi9yYWRlb25fdHJhY2UuaCAgICAgICB8ICAy
ICstCiBkcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl92bS5jICAgICAgICAgIHwgMjYgKysr
KysrKysrKysrKy0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvaW5maW5pYmFuZC9jb3JlL3VtZW1fb2Rw
LmMgICAgICAgICAgfCAyMSArKysrKysrLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvaW9tbXUvdmly
dGlvLWlvbW11LmMgICAgICAgICAgICAgICAgfCAgNiArKystLS0KIGluY2x1ZGUvbGludXgvaW50
ZXJ2YWxfdHJlZS5oICAgICAgICAgICAgICAgfCAgMiArLQogaW5jbHVkZS9yZG1hL2liX3VtZW1f
b2RwLmggICAgICAgICAgICAgICAgICB8ICA0ICsrLS0KIGxpYi9pbnRlcnZhbF90cmVlLmMgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAgNiArKystLS0KIDEwIGZpbGVzIGNoYW5nZWQsIDM4IGlu
c2VydGlvbnMoKyksIDU3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9tbi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X21uLmMKaW5kZXggMzFkNGRlYjVkMjk0Li40YmJhYTlmZmE1NzAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9tbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9tbi5jCkBAIC0yMDUsOSArMjA1LDYgQEAgYW1kZ3B1X21uX3N5
bmNfcGFnZXRhYmxlc19nZngoc3RydWN0IGhtbV9taXJyb3IgKm1pcnJvciwKIAlib29sIGJsb2Nr
YWJsZSA9IG1tdV9ub3RpZmllcl9yYW5nZV9ibG9ja2FibGUodXBkYXRlKTsKIAlzdHJ1Y3QgaW50
ZXJ2YWxfdHJlZV9ub2RlICppdDsKIAotCS8qIG5vdGlmaWNhdGlvbiBpcyBleGNsdXNpdmUsIGJ1
dCBpbnRlcnZhbCBpcyBpbmNsdXNpdmUgKi8KLQllbmQgLT0gMTsKLQogCS8qIFRPRE8gd2Ugc2hv
dWxkIGJlIGFibGUgdG8gc3BsaXQgbG9ja2luZyBmb3IgaW50ZXJ2YWwgdHJlZSBhbmQKIAkgKiBh
bWRncHVfbW5faW52YWxpZGF0ZV9ub2RlCiAJICovCkBAIC0yNTQsOSArMjUxLDYgQEAgYW1kZ3B1
X21uX3N5bmNfcGFnZXRhYmxlc19oc2Eoc3RydWN0IGhtbV9taXJyb3IgKm1pcnJvciwKIAlib29s
IGJsb2NrYWJsZSA9IG1tdV9ub3RpZmllcl9yYW5nZV9ibG9ja2FibGUodXBkYXRlKTsKIAlzdHJ1
Y3QgaW50ZXJ2YWxfdHJlZV9ub2RlICppdDsKIAotCS8qIG5vdGlmaWNhdGlvbiBpcyBleGNsdXNp
dmUsIGJ1dCBpbnRlcnZhbCBpcyBpbmNsdXNpdmUgKi8KLQllbmQgLT0gMTsKLQogCWlmIChhbWRn
cHVfbW5fcmVhZF9sb2NrKGFtbiwgYmxvY2thYmxlKSkKIAkJcmV0dXJuIC1FQUdBSU47CiAKQEAg
LTM3NCw3ICszNjgsNyBAQCBzdHJ1Y3QgYW1kZ3B1X21uICphbWRncHVfbW5fZ2V0KHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2LAogICovCiBpbnQgYW1kZ3B1X21uX3JlZ2lzdGVyKHN0cnVjdCBh
bWRncHVfYm8gKmJvLCB1bnNpZ25lZCBsb25nIGFkZHIpCiB7Ci0JdW5zaWduZWQgbG9uZyBlbmQg
PSBhZGRyICsgYW1kZ3B1X2JvX3NpemUoYm8pIC0gMTsKKwl1bnNpZ25lZCBsb25nIGVuZCA9IGFk
ZHIgKyBhbWRncHVfYm9fc2l6ZShibyk7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBh
bWRncHVfdHRtX2FkZXYoYm8tPnRiby5iZGV2KTsKIAllbnVtIGFtZGdwdV9tbl90eXBlIHR5cGUg
PQogCQliby0+a2ZkX2JvID8gQU1ER1BVX01OX1RZUEVfSFNBIDogQU1ER1BVX01OX1RZUEVfR0ZY
OwpAQCAtNDAwLDcgKzM5NCw3IEBAIGludCBhbWRncHVfbW5fcmVnaXN0ZXIoc3RydWN0IGFtZGdw
dV9ibyAqYm8sIHVuc2lnbmVkIGxvbmcgYWRkcikKIAkJbm9kZSA9IGNvbnRhaW5lcl9vZihpdCwg
c3RydWN0IGFtZGdwdV9tbl9ub2RlLCBpdCk7CiAJCWludGVydmFsX3RyZWVfcmVtb3ZlKCZub2Rl
LT5pdCwgJmFtbi0+b2JqZWN0cyk7CiAJCWFkZHIgPSBtaW4oaXQtPnN0YXJ0LCBhZGRyKTsKLQkJ
ZW5kID0gbWF4KGl0LT5sYXN0LCBlbmQpOworCQllbmQgPSBtYXgoaXQtPmVuZCwgZW5kKTsKIAkJ
bGlzdF9zcGxpY2UoJm5vZGUtPmJvcywgJmJvcyk7CiAJfQogCkBAIC00MTIsNyArNDA2LDcgQEAg
aW50IGFtZGdwdV9tbl9yZWdpc3RlcihzdHJ1Y3QgYW1kZ3B1X2JvICpibywgdW5zaWduZWQgbG9u
ZyBhZGRyKQogCWJvLT5tbiA9IGFtbjsKIAogCW5vZGUtPml0LnN0YXJ0ID0gYWRkcjsKLQlub2Rl
LT5pdC5sYXN0ID0gZW5kOworCW5vZGUtPml0LmVuZCA9IGVuZDsKIAlJTklUX0xJU1RfSEVBRCgm
bm9kZS0+Ym9zKTsKIAlsaXN0X3NwbGljZSgmYm9zLCAmbm9kZS0+Ym9zKTsKIAlsaXN0X2FkZCgm
Ym8tPm1uX2xpc3QsICZub2RlLT5ib3MpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX3VzZXJwdHIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV91c2VycHRyLmMKaW5kZXggMTFiMjMxYzE4N2M1Li44MThmZjZiMzMxMDIgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV91c2VycHRyLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3VzZXJwdHIuYwpAQCAtOTksOSArOTksNiBA
QCB1c2VycHRyX21uX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnQoc3RydWN0IG1tdV9ub3RpZmllciAq
X21uLAogCWlmIChSQl9FTVBUWV9ST09UKCZtbi0+b2JqZWN0cy5yYl9yb290KSkKIAkJcmV0dXJu
IDA7CiAKLQkvKiBpbnRlcnZhbCByYW5nZXMgYXJlIGluY2x1c2l2ZSwgYnV0IGludmFsaWRhdGUg
cmFuZ2UgaXMgZXhjbHVzaXZlICovCi0JZW5kID0gcmFuZ2UtPmVuZCAtIDE7Ci0KIAlzcGluX2xv
Y2soJm1uLT5sb2NrKTsKIAlpdCA9IGludGVydmFsX3RyZWVfaXRlcl9maXJzdCgmbW4tPm9iamVj
dHMsIHJhbmdlLT5zdGFydCwgZW5kKTsKIAl3aGlsZSAoaXQpIHsKQEAgLTI3NSw3ICsyNzIsNyBA
QCBpOTE1X2dlbV91c2VycHRyX2luaXRfX21tdV9ub3RpZmllcihzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqLAogCW1vLT5tbiA9IG1uOwogCW1vLT5vYmogPSBvYmo7CiAJbW8tPml0LnN0
YXJ0ID0gb2JqLT51c2VycHRyLnB0cjsKLQltby0+aXQubGFzdCA9IG9iai0+dXNlcnB0ci5wdHIg
KyBvYmotPmJhc2Uuc2l6ZSAtIDE7CisJbW8tPml0LmVuZCA9IG9iai0+dXNlcnB0ci5wdHIgKyBv
YmotPmJhc2Uuc2l6ZTsKIAlSQl9DTEVBUl9OT0RFKCZtby0+aXQucmIpOwogCiAJb2JqLT51c2Vy
cHRyLm1tdV9vYmplY3QgPSBtbzsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9yYWRlb24v
cmFkZW9uX21uLmMgYi9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl9tbi5jCmluZGV4IGRi
YWI5YTNhOTY5Yi4uNDgxMDQyMWRhY2MyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vcmFk
ZW9uL3JhZGVvbl9tbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX21uLmMK
QEAgLTY2LDEyICs2Niw5IEBAIHN0YXRpYyBpbnQgcmFkZW9uX21uX2ludmFsaWRhdGVfcmFuZ2Vf
c3RhcnQoc3RydWN0IG1tdV9ub3RpZmllciAqbW4sCiAJc3RydWN0IHJhZGVvbl9tbiAqcm1uID0g
Y29udGFpbmVyX29mKG1uLCBzdHJ1Y3QgcmFkZW9uX21uLCBtbik7CiAJc3RydWN0IHR0bV9vcGVy
YXRpb25fY3R4IGN0eCA9IHsgZmFsc2UsIGZhbHNlIH07CiAJc3RydWN0IGludGVydmFsX3RyZWVf
bm9kZSAqaXQ7Ci0JdW5zaWduZWQgbG9uZyBlbmQ7CisJdW5zaWduZWQgbG9uZyBlbmQgPSByYW5n
ZS0+ZW5kOwogCWludCByZXQgPSAwOwogCi0JLyogbm90aWZpY2F0aW9uIGlzIGV4Y2x1c2l2ZSwg
YnV0IGludGVydmFsIGlzIGluY2x1c2l2ZSAqLwotCWVuZCA9IHJhbmdlLT5lbmQgLSAxOwotCiAJ
LyogVE9ETyB3ZSBzaG91bGQgYmUgYWJsZSB0byBzcGxpdCBsb2NraW5nIGZvciBpbnRlcnZhbCB0
cmVlIGFuZAogCSAqIHRoZSB0ZWFyIGRvd24uCiAJICovCkBAIC0xNzQsNyArMTcxLDcgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBtbXVfbm90aWZpZXJfb3BzIHJhZGVvbl9tbl9vcHMgPSB7CiAgKi8K
IGludCByYWRlb25fbW5fcmVnaXN0ZXIoc3RydWN0IHJhZGVvbl9ibyAqYm8sIHVuc2lnbmVkIGxv
bmcgYWRkcikKIHsKLQl1bnNpZ25lZCBsb25nIGVuZCA9IGFkZHIgKyByYWRlb25fYm9fc2l6ZShi
bykgLSAxOworCXVuc2lnbmVkIGxvbmcgZW5kID0gYWRkciArIHJhZGVvbl9ib19zaXplKGJvKTsK
IAlzdHJ1Y3QgbW11X25vdGlmaWVyICptbjsKIAlzdHJ1Y3QgcmFkZW9uX21uICpybW47CiAJc3Ry
dWN0IHJhZGVvbl9tbl9ub2RlICpub2RlID0gTlVMTDsKQEAgLTE5NSw3ICsxOTIsNyBAQCBpbnQg
cmFkZW9uX21uX3JlZ2lzdGVyKHN0cnVjdCByYWRlb25fYm8gKmJvLCB1bnNpZ25lZCBsb25nIGFk
ZHIpCiAJCW5vZGUgPSBjb250YWluZXJfb2YoaXQsIHN0cnVjdCByYWRlb25fbW5fbm9kZSwgaXQp
OwogCQlpbnRlcnZhbF90cmVlX3JlbW92ZSgmbm9kZS0+aXQsICZybW4tPm9iamVjdHMpOwogCQlh
ZGRyID0gbWluKGl0LT5zdGFydCwgYWRkcik7Ci0JCWVuZCA9IG1heChpdC0+bGFzdCwgZW5kKTsK
KwkJZW5kID0gbWF4KGl0LT5lbmQsIGVuZCk7CiAJCWxpc3Rfc3BsaWNlKCZub2RlLT5ib3MsICZi
b3MpOwogCX0KIApAQCAtMjEwLDcgKzIwNyw3IEBAIGludCByYWRlb25fbW5fcmVnaXN0ZXIoc3Ry
dWN0IHJhZGVvbl9ibyAqYm8sIHVuc2lnbmVkIGxvbmcgYWRkcikKIAliby0+bW4gPSBybW47CiAK
IAlub2RlLT5pdC5zdGFydCA9IGFkZHI7Ci0Jbm9kZS0+aXQubGFzdCA9IGVuZDsKKwlub2RlLT5p
dC5lbmQgPSBlbmQ7CiAJSU5JVF9MSVNUX0hFQUQoJm5vZGUtPmJvcyk7CiAJbGlzdF9zcGxpY2Uo
JmJvcywgJm5vZGUtPmJvcyk7CiAJbGlzdF9hZGQoJmJvLT5tbl9saXN0LCAmbm9kZS0+Ym9zKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX3RyYWNlLmggYi9kcml2
ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl90cmFjZS5oCmluZGV4IGM5M2YzYWIzYzRlMy4uNDMy
NGYzZmM1ZDgyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl90cmFj
ZS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX3RyYWNlLmgKQEAgLTczLDcg
KzczLDcgQEAgVFJBQ0VfRVZFTlQocmFkZW9uX3ZtX2JvX3VwZGF0ZSwKIAogCSAgICBUUF9mYXN0
X2Fzc2lnbigKIAkJCSAgIF9fZW50cnktPnNvZmZzZXQgPSBib192YS0+aXQuc3RhcnQ7Ci0JCQkg
ICBfX2VudHJ5LT5lb2Zmc2V0ID0gYm9fdmEtPml0Lmxhc3QgKyAxOworCQkJICAgX19lbnRyeS0+
ZW9mZnNldCA9IGJvX3ZhLT5pdC5lbmQ7CiAJCQkgICBfX2VudHJ5LT5mbGFncyA9IGJvX3ZhLT5m
bGFnczsKIAkJCSAgICksCiAJICAgIFRQX3ByaW50aygic29mZnM9JTAxMGxseCwgZW9mZnM9JTAx
MGxseCwgZmxhZ3M9JTA4eCIsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3Jh
ZGVvbl92bS5jIGIvZHJpdmVycy9ncHUvZHJtL3JhZGVvbi9yYWRlb25fdm0uYwppbmRleCBlMGFk
NTQ3Nzg2ZTguLmIyYTU0YWZmMjFmNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3JhZGVv
bi9yYWRlb25fdm0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vcmFkZW9uL3JhZGVvbl92bS5jCkBA
IC0zMjksNyArMzI5LDcgQEAgc3RydWN0IHJhZGVvbl9ib192YSAqcmFkZW9uX3ZtX2JvX2FkZChz
dHJ1Y3QgcmFkZW9uX2RldmljZSAqcmRldiwKIAlib192YS0+dm0gPSB2bTsKIAlib192YS0+Ym8g
PSBibzsKIAlib192YS0+aXQuc3RhcnQgPSAwOwotCWJvX3ZhLT5pdC5sYXN0ID0gMDsKKwlib192
YS0+aXQuZW5kID0gMDsKIAlib192YS0+ZmxhZ3MgPSAwOwogCWJvX3ZhLT5yZWZfY291bnQgPSAx
OwogCUlOSVRfTElTVF9IRUFEKCZib192YS0+Ym9fbGlzdCk7CkBAIC00NTYsNyArNDU2LDcgQEAg
aW50IHJhZGVvbl92bV9ib19zZXRfYWRkcihzdHJ1Y3QgcmFkZW9uX2RldmljZSAqcmRldiwKIAog
CWlmIChzb2Zmc2V0KSB7CiAJCS8qIG1ha2Ugc3VyZSBvYmplY3QgZml0IGF0IHRoaXMgb2Zmc2V0
ICovCi0JCWVvZmZzZXQgPSBzb2Zmc2V0ICsgc2l6ZSAtIDE7CisJCWVvZmZzZXQgPSBzb2Zmc2V0
ICsgc2l6ZTsKIAkJaWYgKHNvZmZzZXQgPj0gZW9mZnNldCkgewogCQkJciA9IC1FSU5WQUw7CiAJ
CQlnb3RvIGVycm9yX3VucmVzZXJ2ZTsKQEAgLTQ4NiwxNCArNDg2LDE0IEBAIGludCByYWRlb25f
dm1fYm9fc2V0X2FkZHIoc3RydWN0IHJhZGVvbl9kZXZpY2UgKnJkZXYsCiAJCQkvKiBibyBhbmQg
dG1wIG92ZXJsYXAsIGludmFsaWQgb2Zmc2V0ICovCiAJCQlkZXZfZXJyKHJkZXYtPmRldiwgImJv
ICVwIHZhIDB4JTAxMEx4IGNvbmZsaWN0IHdpdGggIgogCQkJCSIoYm8gJXAgMHglMDEwbHggMHgl
MDEwbHgpXG4iLCBib192YS0+Ym8sCi0JCQkJc29mZnNldCwgdG1wLT5ibywgdG1wLT5pdC5zdGFy
dCwgdG1wLT5pdC5sYXN0KTsKKwkJCQlzb2Zmc2V0LCB0bXAtPmJvLCB0bXAtPml0LnN0YXJ0LCB0
bXAtPml0LmVuZCk7CiAJCQltdXRleF91bmxvY2soJnZtLT5tdXRleCk7CiAJCQlyID0gLUVJTlZB
TDsKIAkJCWdvdG8gZXJyb3JfdW5yZXNlcnZlOwogCQl9CiAJfQogCi0JaWYgKGJvX3ZhLT5pdC5z
dGFydCB8fCBib192YS0+aXQubGFzdCkgeworCWlmIChib192YS0+aXQuc3RhcnQgfHwgYm9fdmEt
Pml0LmVuZCkgewogCQkvKiBhZGQgYSBjbG9uZSBvZiB0aGUgYm9fdmEgdG8gY2xlYXIgdGhlIG9s
ZCBhZGRyZXNzICovCiAJCXN0cnVjdCByYWRlb25fYm9fdmEgKnRtcDsKIAkJdG1wID0ga3phbGxv
YyhzaXplb2Yoc3RydWN0IHJhZGVvbl9ib192YSksIEdGUF9LRVJORUwpOwpAQCAtNTAzLDE0ICs1
MDMsMTQgQEAgaW50IHJhZGVvbl92bV9ib19zZXRfYWRkcihzdHJ1Y3QgcmFkZW9uX2RldmljZSAq
cmRldiwKIAkJCWdvdG8gZXJyb3JfdW5yZXNlcnZlOwogCQl9CiAJCXRtcC0+aXQuc3RhcnQgPSBi
b192YS0+aXQuc3RhcnQ7Ci0JCXRtcC0+aXQubGFzdCA9IGJvX3ZhLT5pdC5sYXN0OworCQl0bXAt
Pml0LmVuZCA9IGJvX3ZhLT5pdC5lbmQ7CiAJCXRtcC0+dm0gPSB2bTsKIAkJdG1wLT5ibyA9IHJh
ZGVvbl9ib19yZWYoYm9fdmEtPmJvKTsKIAogCQlpbnRlcnZhbF90cmVlX3JlbW92ZSgmYm9fdmEt
Pml0LCAmdm0tPnZhKTsKIAkJc3Bpbl9sb2NrKCZ2bS0+c3RhdHVzX2xvY2spOwogCQlib192YS0+
aXQuc3RhcnQgPSAwOwotCQlib192YS0+aXQubGFzdCA9IDA7CisJCWJvX3ZhLT5pdC5lbmQgPSAw
OwogCQlsaXN0X2RlbF9pbml0KCZib192YS0+dm1fc3RhdHVzKTsKIAkJbGlzdF9hZGQoJnRtcC0+
dm1fc3RhdHVzLCAmdm0tPmZyZWVkKTsKIAkJc3Bpbl91bmxvY2soJnZtLT5zdGF0dXNfbG9jayk7
CkBAIC01MTksNyArNTE5LDcgQEAgaW50IHJhZGVvbl92bV9ib19zZXRfYWRkcihzdHJ1Y3QgcmFk
ZW9uX2RldmljZSAqcmRldiwKIAlpZiAoc29mZnNldCB8fCBlb2Zmc2V0KSB7CiAJCXNwaW5fbG9j
aygmdm0tPnN0YXR1c19sb2NrKTsKIAkJYm9fdmEtPml0LnN0YXJ0ID0gc29mZnNldDsKLQkJYm9f
dmEtPml0Lmxhc3QgPSBlb2Zmc2V0OworCQlib192YS0+aXQuZW5kID0gZW9mZnNldDsKIAkJbGlz
dF9hZGQoJmJvX3ZhLT52bV9zdGF0dXMsICZ2bS0+Y2xlYXJlZCk7CiAJCXNwaW5fdW5sb2NrKCZ2
bS0+c3RhdHVzX2xvY2spOwogCQlpbnRlcnZhbF90cmVlX2luc2VydCgmYm9fdmEtPml0LCAmdm0t
PnZhKTsKQEAgLTk2NCw3ICs5NjQsNyBAQCBpbnQgcmFkZW9uX3ZtX2JvX3VwZGF0ZShzdHJ1Y3Qg
cmFkZW9uX2RldmljZSAqcmRldiwKIAogCXRyYWNlX3JhZGVvbl92bV9ib191cGRhdGUoYm9fdmEp
OwogCi0JbnB0ZXMgPSBib192YS0+aXQubGFzdCAtIGJvX3ZhLT5pdC5zdGFydCArIDE7CisJbnB0
ZXMgPSBib192YS0+aXQuZW5kIC0gYm9fdmEtPml0LnN0YXJ0OwogCiAJLyogcmVzZXJ2ZSBzcGFj
ZSBmb3Igb25lIGNvbW1hbmQgZXZlcnkgKDEgPDwgQkxPQ0tfU0laRSkgZW50cmllcwogCSAgIG9y
IDJrIGR3b3JkcyAod2hhdGV2ZXIgaXMgc21hbGxlcikgKi8KQEAgLTEwMTAsNyArMTAxMCw3IEBA
IGludCByYWRlb25fdm1fYm9fdXBkYXRlKHN0cnVjdCByYWRlb25fZGV2aWNlICpyZGV2LAogCX0K
IAogCXIgPSByYWRlb25fdm1fdXBkYXRlX3B0ZXMocmRldiwgdm0sICZpYiwgYm9fdmEtPml0LnN0
YXJ0LAotCQkJCSAgYm9fdmEtPml0Lmxhc3QgKyAxLCBhZGRyLAorCQkJCSAgYm9fdmEtPml0LmVu
ZCwgYWRkciwKIAkJCQkgIHJhZGVvbl92bV9wYWdlX2ZsYWdzKGJvX3ZhLT5mbGFncykpOwogCWlm
IChyKSB7CiAJCXJhZGVvbl9pYl9mcmVlKHJkZXYsICZpYik7CkBAIC0xMDI2LDcgKzEwMjYsNyBA
QCBpbnQgcmFkZW9uX3ZtX2JvX3VwZGF0ZShzdHJ1Y3QgcmFkZW9uX2RldmljZSAqcmRldiwKIAkJ
cmV0dXJuIHI7CiAJfQogCWliLmZlbmNlLT5pc192bV91cGRhdGUgPSB0cnVlOwotCXJhZGVvbl92
bV9mZW5jZV9wdHModm0sIGJvX3ZhLT5pdC5zdGFydCwgYm9fdmEtPml0Lmxhc3QgKyAxLCBpYi5m
ZW5jZSk7CisJcmFkZW9uX3ZtX2ZlbmNlX3B0cyh2bSwgYm9fdmEtPml0LnN0YXJ0LCBib192YS0+
aXQuZW5kLCBpYi5mZW5jZSk7CiAJcmFkZW9uX2ZlbmNlX3VucmVmKCZib192YS0+bGFzdF9wdF91
cGRhdGUpOwogCWJvX3ZhLT5sYXN0X3B0X3VwZGF0ZSA9IHJhZGVvbl9mZW5jZV9yZWYoaWIuZmVu
Y2UpOwogCXJhZGVvbl9pYl9mcmVlKHJkZXYsICZpYik7CkBAIC0xMTI0LDEyICsxMTI0LDEyIEBA
IHZvaWQgcmFkZW9uX3ZtX2JvX3JtdihzdHJ1Y3QgcmFkZW9uX2RldmljZSAqcmRldiwKIAlsaXN0
X2RlbCgmYm9fdmEtPmJvX2xpc3QpOwogCiAJbXV0ZXhfbG9jaygmdm0tPm11dGV4KTsKLQlpZiAo
Ym9fdmEtPml0LnN0YXJ0IHx8IGJvX3ZhLT5pdC5sYXN0KQorCWlmIChib192YS0+aXQuc3RhcnQg
fHwgYm9fdmEtPml0LmVuZCkKIAkJaW50ZXJ2YWxfdHJlZV9yZW1vdmUoJmJvX3ZhLT5pdCwgJnZt
LT52YSk7CiAKIAlzcGluX2xvY2soJnZtLT5zdGF0dXNfbG9jayk7CiAJbGlzdF9kZWwoJmJvX3Zh
LT52bV9zdGF0dXMpOwotCWlmIChib192YS0+aXQuc3RhcnQgfHwgYm9fdmEtPml0Lmxhc3QpIHsK
KwlpZiAoYm9fdmEtPml0LnN0YXJ0IHx8IGJvX3ZhLT5pdC5lbmQpIHsKIAkJYm9fdmEtPmJvID0g
cmFkZW9uX2JvX3JlZihib192YS0+Ym8pOwogCQlsaXN0X2FkZCgmYm9fdmEtPnZtX3N0YXR1cywg
JnZtLT5mcmVlZCk7CiAJfSBlbHNlIHsKQEAgLTExNTgsNyArMTE1OCw3IEBAIHZvaWQgcmFkZW9u
X3ZtX2JvX2ludmFsaWRhdGUoc3RydWN0IHJhZGVvbl9kZXZpY2UgKnJkZXYsCiAJbGlzdF9mb3Jf
ZWFjaF9lbnRyeShib192YSwgJmJvLT52YSwgYm9fbGlzdCkgewogCQlzcGluX2xvY2soJmJvX3Zh
LT52bS0+c3RhdHVzX2xvY2spOwogCQlpZiAobGlzdF9lbXB0eSgmYm9fdmEtPnZtX3N0YXR1cykg
JiYKLQkJICAgIChib192YS0+aXQuc3RhcnQgfHwgYm9fdmEtPml0Lmxhc3QpKQorCQkgICAgKGJv
X3ZhLT5pdC5zdGFydCB8fCBib192YS0+aXQuZW5kKSkKIAkJCWxpc3RfYWRkKCZib192YS0+dm1f
c3RhdHVzLCAmYm9fdmEtPnZtLT5pbnZhbGlkYXRlZCk7CiAJCXNwaW5fdW5sb2NrKCZib192YS0+
dm0tPnN0YXR1c19sb2NrKTsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQvY29y
ZS91bWVtX29kcC5jIGIvZHJpdmVycy9pbmZpbmliYW5kL2NvcmUvdW1lbV9vZHAuYwppbmRleCBm
NjdhMzBmZGExZWQuLjliN2FjOTMyMjNkNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9pbmZpbmliYW5k
L2NvcmUvdW1lbV9vZHAuYworKysgYi9kcml2ZXJzL2luZmluaWJhbmQvY29yZS91bWVtX29kcC5j
CkBAIC0yMTksMjYgKzIxOSwxOSBAQCBzdGF0aWMgaW5saW5lIGludCBpYl9pbml0X3VtZW1fb2Rw
KHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHApCiAJCQlBTElHTl9ET1dOKHVtZW1fb2RwLT51
bWVtLmFkZHJlc3MsIHBhZ2Vfc2l6ZSk7CiAJCWlmIChjaGVja19hZGRfb3ZlcmZsb3codW1lbV9v
ZHAtPnVtZW0uYWRkcmVzcywKIAkJCQkgICAgICAgKHVuc2lnbmVkIGxvbmcpdW1lbV9vZHAtPnVt
ZW0ubGVuZ3RoLAotCQkJCSAgICAgICAmdW1lbV9vZHAtPmludGVydmFsX3RyZWUubGFzdCkpCisJ
CQkJICAgICAgICZ1bWVtX29kcC0+aW50ZXJ2YWxfdHJlZS5lbmQpKQogCQkJcmV0dXJuIC1FT1ZF
UkZMT1c7Ci0JCXVtZW1fb2RwLT5pbnRlcnZhbF90cmVlLmxhc3QgPQotCQkJQUxJR04odW1lbV9v
ZHAtPmludGVydmFsX3RyZWUubGFzdCwgcGFnZV9zaXplKTsKLQkJaWYgKHVubGlrZWx5KHVtZW1f
b2RwLT5pbnRlcnZhbF90cmVlLmxhc3QgPCBwYWdlX3NpemUpKQorCQl1bWVtX29kcC0+aW50ZXJ2
YWxfdHJlZS5lbmQgPQorCQkJQUxJR04odW1lbV9vZHAtPmludGVydmFsX3RyZWUuZW5kLCBwYWdl
X3NpemUpOworCQlpZiAodW5saWtlbHkodW1lbV9vZHAtPmludGVydmFsX3RyZWUuZW5kIDwgcGFn
ZV9zaXplKSkKIAkJCXJldHVybiAtRU9WRVJGTE9XOwogCi0JCXBhZ2VzID0gKHVtZW1fb2RwLT5p
bnRlcnZhbF90cmVlLmxhc3QgLQorCQlwYWdlcyA9ICh1bWVtX29kcC0+aW50ZXJ2YWxfdHJlZS5l
bmQgLQogCQkJIHVtZW1fb2RwLT5pbnRlcnZhbF90cmVlLnN0YXJ0KSA+PgogCQkJdW1lbV9vZHAt
PnBhZ2Vfc2hpZnQ7CiAJCWlmICghcGFnZXMpCiAJCQlyZXR1cm4gLUVJTlZBTDsKIAotCQkvKgot
CQkgKiBOb3RlIHRoYXQgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBpbnRlcnZhbHMgaW4gdGhl
Ci0JCSAqIGludGVydmFsIHRyZWUgY29uc2lkZXJzIHRoZSBlbmRpbmcgcG9pbnQgYXMgY29udGFp
bmVkIGluCi0JCSAqIHRoZSBpbnRlcnZhbC4KLQkJICovCi0JCXVtZW1fb2RwLT5pbnRlcnZhbF90
cmVlLmxhc3QtLTsKLQogCQl1bWVtX29kcC0+cGFnZV9saXN0ID0ga3ZjYWxsb2MoCiAJCQlwYWdl
cywgc2l6ZW9mKCp1bWVtX29kcC0+cGFnZV9saXN0KSwgR0ZQX0tFUk5FTCk7CiAJCWlmICghdW1l
bV9vZHAtPnBhZ2VfbGlzdCkKQEAgLTc3NywxMiArNzcwLDEyIEBAIGludCByYnRfaWJfdW1lbV9m
b3JfZWFjaF9pbl9yYW5nZShzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgKnJvb3QsCiAJaWYgKHVubGlr
ZWx5KHN0YXJ0ID09IGxhc3QpKQogCQlyZXR1cm4gcmV0X3ZhbDsKIAotCWZvciAobm9kZSA9IGlu
dGVydmFsX3RyZWVfaXRlcl9maXJzdChyb290LCBzdGFydCwgbGFzdCAtIDEpOworCWZvciAobm9k
ZSA9IGludGVydmFsX3RyZWVfaXRlcl9maXJzdChyb290LCBzdGFydCwgbGFzdCk7CiAJCQlub2Rl
OyBub2RlID0gbmV4dCkgewogCQkvKiBUT0RPIG1vdmUgdGhlIGJsb2NrYWJsZSBkZWNpc2lvbiB1
cCB0byB0aGUgY2FsbGJhY2sgKi8KIAkJaWYgKCFibG9ja2FibGUpCiAJCQlyZXR1cm4gLUVBR0FJ
TjsKLQkJbmV4dCA9IGludGVydmFsX3RyZWVfaXRlcl9uZXh0KG5vZGUsIHN0YXJ0LCBsYXN0IC0g
MSk7CisJCW5leHQgPSBpbnRlcnZhbF90cmVlX2l0ZXJfbmV4dChub2RlLCBzdGFydCwgbGFzdCk7
CiAJCXVtZW0gPSBjb250YWluZXJfb2Yobm9kZSwgc3RydWN0IGliX3VtZW1fb2RwLCBpbnRlcnZh
bF90cmVlKTsKIAkJcmV0X3ZhbCA9IGNiKHVtZW0sIHN0YXJ0LCBsYXN0LCBjb29raWUpIHx8IHJl
dF92YWw7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pb21tdS92aXJ0aW8taW9tbXUuYyBiL2Ry
aXZlcnMvaW9tbXUvdmlydGlvLWlvbW11LmMKaW5kZXggM2VhOWQ3NjgyOTk5Li43NzE3NDA5ODFm
NDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW9tbXUvdmlydGlvLWlvbW11LmMKKysrIGIvZHJpdmVy
cy9pb21tdS92aXJ0aW8taW9tbXUuYwpAQCAtMzIzLDcgKzMyMyw3IEBAIHN0YXRpYyBpbnQgdmlv
bW11X2FkZF9tYXBwaW5nKHN0cnVjdCB2aW9tbXVfZG9tYWluICp2ZG9tYWluLCB1bnNpZ25lZCBs
b25nIGlvdmEsCiAKIAltYXBwaW5nLT5wYWRkcgkJPSBwYWRkcjsKIAltYXBwaW5nLT5pb3ZhLnN0
YXJ0CT0gaW92YTsKLQltYXBwaW5nLT5pb3ZhLmxhc3QJPSBpb3ZhICsgc2l6ZSAtIDE7CisJbWFw
cGluZy0+aW92YS5lbmQJPSBpb3ZhICsgc2l6ZTsKIAltYXBwaW5nLT5mbGFncwkJPSBmbGFnczsK
IAogCXNwaW5fbG9ja19pcnFzYXZlKCZ2ZG9tYWluLT5tYXBwaW5nc19sb2NrLCBpcnFmbGFncyk7
CkBAIC0zNDgsNyArMzQ4LDcgQEAgc3RhdGljIHNpemVfdCB2aW9tbXVfZGVsX21hcHBpbmdzKHN0
cnVjdCB2aW9tbXVfZG9tYWluICp2ZG9tYWluLAogewogCXNpemVfdCB1bm1hcHBlZCA9IDA7CiAJ
dW5zaWduZWQgbG9uZyBmbGFnczsKLQl1bnNpZ25lZCBsb25nIGxhc3QgPSBpb3ZhICsgc2l6ZSAt
IDE7CisJdW5zaWduZWQgbG9uZyBsYXN0ID0gaW92YSArIHNpemU7CiAJc3RydWN0IHZpb21tdV9t
YXBwaW5nICptYXBwaW5nID0gTlVMTDsKIAlzdHJ1Y3QgaW50ZXJ2YWxfdHJlZV9ub2RlICpub2Rl
LCAqbmV4dDsKIApAQCAtMzY3LDcgKzM2Nyw3IEBAIHN0YXRpYyBzaXplX3QgdmlvbW11X2RlbF9t
YXBwaW5ncyhzdHJ1Y3QgdmlvbW11X2RvbWFpbiAqdmRvbWFpbiwKIAkJICogVmlydGlvLWlvbW11
IGRvZXNuJ3QgYWxsb3cgVU5NQVAgdG8gc3BsaXQgYSBtYXBwaW5nIGNyZWF0ZWQKIAkJICogd2l0
aCBhIHNpbmdsZSBNQVAgcmVxdWVzdCwgc28gcmVtb3ZlIHRoZSBmdWxsIG1hcHBpbmcuCiAJCSAq
LwotCQl1bm1hcHBlZCArPSBtYXBwaW5nLT5pb3ZhLmxhc3QgLSBtYXBwaW5nLT5pb3ZhLnN0YXJ0
ICsgMTsKKwkJdW5tYXBwZWQgKz0gbWFwcGluZy0+aW92YS5lbmQgLSBtYXBwaW5nLT5pb3ZhLnN0
YXJ0OwogCiAJCWludGVydmFsX3RyZWVfcmVtb3ZlKG5vZGUsICZ2ZG9tYWluLT5tYXBwaW5ncyk7
CiAJCWtmcmVlKG1hcHBpbmcpOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9pbnRlcnZhbF90
cmVlLmggYi9pbmNsdWRlL2xpbnV4L2ludGVydmFsX3RyZWUuaAppbmRleCAyODhjMjZmNTA3MzIu
LmYzZDFlYTllNDAwMyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9pbnRlcnZhbF90cmVlLmgK
KysrIGIvaW5jbHVkZS9saW51eC9pbnRlcnZhbF90cmVlLmgKQEAgLTcsNyArNyw3IEBACiBzdHJ1
Y3QgaW50ZXJ2YWxfdHJlZV9ub2RlIHsKIAlzdHJ1Y3QgcmJfbm9kZSByYjsKIAl1bnNpZ25lZCBs
b25nIHN0YXJ0OwkvKiBTdGFydCBvZiBpbnRlcnZhbCAqLwotCXVuc2lnbmVkIGxvbmcgbGFzdDsJ
LyogTGFzdCBsb2NhdGlvbiBfaW5fIGludGVydmFsICovCisJdW5zaWduZWQgbG9uZyBlbmQ7CS8q
IExhc3QgbG9jYXRpb24gX291dHNpZGVfIGludGVydmFsICovCiAJdW5zaWduZWQgbG9uZyBfX3N1
YnRyZWVfbGFzdDsKIH07CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvcmRtYS9pYl91bWVtX29kcC5o
IGIvaW5jbHVkZS9yZG1hL2liX3VtZW1fb2RwLmgKaW5kZXggMjUzZGYxYTFmYTU0Li5kMGFlN2Fh
MjEzOWIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvcmRtYS9pYl91bWVtX29kcC5oCisrKyBiL2luY2x1
ZGUvcmRtYS9pYl91bWVtX29kcC5oCkBAIC05Nyw3ICs5Nyw3IEBAIHN0YXRpYyBpbmxpbmUgdW5z
aWduZWQgbG9uZyBpYl91bWVtX3N0YXJ0KHN0cnVjdCBpYl91bWVtX29kcCAqdW1lbV9vZHApCiAv
KiBSZXR1cm5zIHRoZSBhZGRyZXNzIG9mIHRoZSBwYWdlIGFmdGVyIHRoZSBsYXN0IG9uZSBvZiBh
biBPRFAgdW1lbS4gKi8KIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBpYl91bWVtX2VuZChz
dHJ1Y3QgaWJfdW1lbV9vZHAgKnVtZW1fb2RwKQogewotCXJldHVybiB1bWVtX29kcC0+aW50ZXJ2
YWxfdHJlZS5sYXN0ICsgMTsKKwlyZXR1cm4gdW1lbV9vZHAtPmludGVydmFsX3RyZWUuZW5kOwog
fQogCiBzdGF0aWMgaW5saW5lIHNpemVfdCBpYl91bWVtX29kcF9udW1fcGFnZXMoc3RydWN0IGli
X3VtZW1fb2RwICp1bWVtX29kcCkKQEAgLTE2NSw3ICsxNjUsNyBAQCByYnRfaWJfdW1lbV9sb29r
dXAoc3RydWN0IHJiX3Jvb3RfY2FjaGVkICpyb290LCB1NjQgYWRkciwgdTY0IGxlbmd0aCkKIHsK
IAlzdHJ1Y3QgaW50ZXJ2YWxfdHJlZV9ub2RlICpub2RlOwogCi0Jbm9kZSA9IGludGVydmFsX3Ry
ZWVfaXRlcl9maXJzdChyb290LCBhZGRyLCBhZGRyICsgbGVuZ3RoIC0gMSk7CisJbm9kZSA9IGlu
dGVydmFsX3RyZWVfaXRlcl9maXJzdChyb290LCBhZGRyLCBhZGRyICsgbGVuZ3RoKTsKIAlpZiAo
IW5vZGUpCiAJCXJldHVybiBOVUxMOwogCXJldHVybiBjb250YWluZXJfb2Yobm9kZSwgc3RydWN0
IGliX3VtZW1fb2RwLCBpbnRlcnZhbF90cmVlKTsKZGlmZiAtLWdpdCBhL2xpYi9pbnRlcnZhbF90
cmVlLmMgYi9saWIvaW50ZXJ2YWxfdHJlZS5jCmluZGV4IDU5M2NlNTZlY2U1MC4uMzM2ZWM1MTEz
YTI4IDEwMDY0NAotLS0gYS9saWIvaW50ZXJ2YWxfdHJlZS5jCisrKyBiL2xpYi9pbnRlcnZhbF90
cmVlLmMKQEAgLTEsMTUgKzEsMTUgQEAKIC8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwt
Mi4wLW9ubHkKICNpbmNsdWRlIDxsaW51eC9pbnRlcnZhbF90cmVlLmg+Ci0jaW5jbHVkZSA8bGlu
dXgvaW50ZXJ2YWxfdHJlZV9nZW5lcmljLmg+CisjaW5jbHVkZSA8bGludXgvaW50ZXJ2YWxfdHJl
ZV9nZW4uaD4KICNpbmNsdWRlIDxsaW51eC9jb21waWxlci5oPgogI2luY2x1ZGUgPGxpbnV4L2V4
cG9ydC5oPgogCiAjZGVmaW5lIFNUQVJUKG5vZGUpICgobm9kZSktPnN0YXJ0KQotI2RlZmluZSBM
QVNUKG5vZGUpICAoKG5vZGUpLT5sYXN0KQorI2RlZmluZSBFTkQobm9kZSkgICgobm9kZSktPmVu
ZCkKIAogSU5URVJWQUxfVFJFRV9ERUZJTkUoc3RydWN0IGludGVydmFsX3RyZWVfbm9kZSwgcmIs
CiAJCSAgICAgdW5zaWduZWQgbG9uZywgX19zdWJ0cmVlX2xhc3QsCi0JCSAgICAgU1RBUlQsIExB
U1QsLCBpbnRlcnZhbF90cmVlKQorCQkgICAgIFNUQVJULCBFTkQsLCBpbnRlcnZhbF90cmVlKQog
CiBFWFBPUlRfU1lNQk9MX0dQTChpbnRlcnZhbF90cmVlX2luc2VydCk7CiBFWFBPUlRfU1lNQk9M
X0dQTChpbnRlcnZhbF90cmVlX3JlbW92ZSk7Ci0tIAoyLjE2LjQKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJp
LWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
