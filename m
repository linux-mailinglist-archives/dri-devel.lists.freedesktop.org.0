Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2F76BB1AD0
	for <lists+dri-devel@lfdr.de>; Fri, 13 Sep 2019 11:32:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C7AB56EEEF;
	Fri, 13 Sep 2019 09:32:37 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from ste-pvt-msa1.bahnhof.se (ste-pvt-msa1.bahnhof.se
 [213.80.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 71D9D6EEEF
 for <dri-devel@lists.freedesktop.org>; Fri, 13 Sep 2019 09:32:34 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTP id DF8143F695;
 Fri, 13 Sep 2019 11:32:32 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from ste-pvt-msa1.bahnhof.se ([127.0.0.1])
 by localhost (ste-pvt-msa1.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id nkIu-Pc_04-B; Fri, 13 Sep 2019 11:32:31 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by ste-pvt-msa1.bahnhof.se (Postfix) with ESMTPA id 917ED3F449;
 Fri, 13 Sep 2019 11:32:28 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id E2E783602AF;
 Fri, 13 Sep 2019 11:32:27 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org
Subject: [RFC PATCH 4/7] drm/vmwgfx: Implement an infrastructure for
 write-coherent resources
Date: Fri, 13 Sep 2019 11:32:10 +0200
Message-Id: <20190913093213.27254-5-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190913093213.27254-1-thomas_os@shipmail.org>
References: <20190913093213.27254-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1568367148; bh=Tp2TmC3JbljJhhddAMHJSLhXvhpWu7rfFR8NK5pCbcE=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=FEfOmewtsK8oZHlbZZNdA9+J5vsuj+XtiPy072iSNAlXj4eYUbOjSlvP3eWKiYHkI
 OkkMDHz9qy0KLgTO5dcAAY5aadjgFL2Wu9vvyMP0vagY4IKiJ+TpYN0mX2gglsB9ay
 RLPkPt09yGf19S/U6poB1g9uS0XMiWXPSqSA3bX8=
X-Mailman-Original-Authentication-Results: ste-pvt-msa1.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b=FEfOmewt; 
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 Matthew Wilcox <willy@infradead.org>, Christoph Hellwig <hch@infradead.org>,
 Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>,
 Deepak Rawat <drawat@vmware.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKVGhpcyBpbmZy
YXN0cnVjdHVyZSB3aWxsLCBmb3IgY29oZXJlbnQgcmVzb3VyY2VzLCBtYWtlIHN1cmUgdGhhdApm
cm9tIHRoZSB1c2VyLXNwYWNlIHBvaW50IG9mIHZpZXcsIGRhdGEgd3JpdHRlbiBieSB0aGUgQ1BV
IGlzIGltbWVkaWF0ZWx5CmF1dG9tYXRpY2FsbHkgYXZhaWxhYmxlIHRvIHRoZSBHUFUgYXQgcmVz
b3VyY2UgdmFsaWRhdGlvbiB0aW1lLgoKQ2M6IEFuZHJldyBNb3J0b24gPGFrcG1AbGludXgtZm91
bmRhdGlvbi5vcmc+CkNjOiBNYXR0aGV3IFdpbGNveCA8d2lsbHlAaW5mcmFkZWFkLm9yZz4KQ2M6
IFdpbGwgRGVhY29uIDx3aWxsLmRlYWNvbkBhcm0uY29tPgpDYzogUGV0ZXIgWmlqbHN0cmEgPHBl
dGVyekBpbmZyYWRlYWQub3JnPgpDYzogUmlrIHZhbiBSaWVsIDxyaWVsQHN1cnJpZWwuY29tPgpD
YzogTWluY2hhbiBLaW0gPG1pbmNoYW5Aa2VybmVsLm9yZz4KQ2M6IE1pY2hhbCBIb2NrbyA8bWhv
Y2tvQHN1c2UuY29tPgpDYzogSHVhbmcgWWluZyA8eWluZy5odWFuZ0BpbnRlbC5jb20+CkNjOiBT
b3VwdGljayBKb2FyZGVyIDxqcmRyLmxpbnV4QGdtYWlsLmNvbT4KQ2M6ICJKw6lyw7RtZSBHbGlz
c2UiIDxqZ2xpc3NlQHJlZGhhdC5jb20+CkNjOiAiQ2hyaXN0aWFuIEvDtm5pZyIgPGNocmlzdGlh
bi5rb2VuaWdAYW1kLmNvbT4KQ2M6IENocmlzdG9waCBIZWxsd2lnIDxoY2hAaW5mcmFkZWFkLm9y
Zz4KU2lnbmVkLW9mZi1ieTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29t
PgpSZXZpZXdlZC1ieTogRGVlcGFrIFJhd2F0IDxkcmF3YXRAdm13YXJlLmNvbT4KLS0tCiBkcml2
ZXJzL2dwdS9kcm0vdm13Z2Z4L0tjb25maWcgICAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVy
cy9ncHUvZHJtL3Ztd2dmeC9NYWtlZmlsZSAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJz
L2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9iby5jICAgICAgICAgICAgfCAgIDUgKy0KIGRyaXZlcnMv
Z3B1L2RybS92bXdnZngvdm13Z2Z4X2Rydi5jICAgICAgICAgICB8ICAgNSArCiBkcml2ZXJzL2dw
dS9kcm0vdm13Z2Z4L3Ztd2dmeF9kcnYuaCAgICAgICAgICAgfCAgMjYgKy0KIGRyaXZlcnMvZ3B1
L2RybS92bXdnZngvdm13Z2Z4X2V4ZWNidWYuYyAgICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9k
cm0vdm13Z2Z4L3Ztd2dmeF9wYWdlX2RpcnR5LmMgICAgfCA0MTcgKysrKysrKysrKysrKysrKysr
CiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9yZXNvdXJjZS5jICAgICAgfCAgNTcgKysr
CiBkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9yZXNvdXJjZV9wcml2LmggfCAgMTEgKwog
ZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5jICAgIHwgIDcxICsrKwog
ZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5oICAgIHwgIDE2ICstCiAx
MSBmaWxlcyBjaGFuZ2VkLCA1OTIgaW5zZXJ0aW9ucygrKSwgMjAgZGVsZXRpb25zKC0pCiBjcmVh
dGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcGFnZV9kaXJ0eS5j
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC9LY29uZmlnIGIvZHJpdmVycy9n
cHUvZHJtL3Ztd2dmeC9LY29uZmlnCmluZGV4IDZiMjhhMzI2ZjhiYi4uZDVmZDgxYTUyMWY2IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L0tjb25maWcKKysrIGIvZHJpdmVycy9n
cHUvZHJtL3Ztd2dmeC9LY29uZmlnCkBAIC04LDYgKzgsNyBAQCBjb25maWcgRFJNX1ZNV0dGWAog
CXNlbGVjdCBGQl9DRkJfSU1BR0VCTElUCiAJc2VsZWN0IERSTV9UVE0KIAlzZWxlY3QgRkIKKwlz
ZWxlY3QgQVNfRElSVFlfSEVMUEVSUwogCSMgT25seSBuZWVkZWQgZm9yIHRoZSB0cmFuc2l0aW9u
YWwgdXNlIG9mIGRybV9jcnRjX2luaXQgLSBjYW4gYmUgcmVtb3ZlZAogCSMgYWdhaW4gb25jZSB2
bXdnZnggc2V0cyB1cCB0aGUgcHJpbWFyeSBwbGFuZSBpdHNlbGYuCiAJc2VsZWN0IERSTV9LTVNf
SEVMUEVSCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L01ha2VmaWxlIGIvZHJp
dmVycy9ncHUvZHJtL3Ztd2dmeC9NYWtlZmlsZQppbmRleCA4ODQxYmQzMGUxZTUuLmM4NzdhMjFh
MDczOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC9NYWtlZmlsZQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vdm13Z2Z4L01ha2VmaWxlCkBAIC04LDcgKzgsNyBAQCB2bXdnZngteSA6
PSB2bXdnZnhfZXhlY2J1Zi5vIHZtd2dmeF9nbXIubyB2bXdnZnhfa21zLm8gdm13Z2Z4X2Rydi5v
IFwKIAkgICAgdm13Z2Z4X2NtZGJ1Zl9yZXMubyB2bXdnZnhfY21kYnVmLm8gdm13Z2Z4X3N0ZHUu
byBcCiAJICAgIHZtd2dmeF9jb3RhYmxlLm8gdm13Z2Z4X3NvLm8gdm13Z2Z4X2JpbmRpbmcubyB2
bXdnZnhfbXNnLm8gXAogCSAgICB2bXdnZnhfc2ltcGxlX3Jlc291cmNlLm8gdm13Z2Z4X3ZhLm8g
dm13Z2Z4X2JsaXQubyBcCi0JICAgIHZtd2dmeF92YWxpZGF0aW9uLm8gXAorCSAgICB2bXdnZnhf
dmFsaWRhdGlvbi5vIHZtd2dmeF9wYWdlX2RpcnR5Lm8gXAogCSAgICB0dG1fb2JqZWN0Lm8gdHRt
X2xvY2subwogCiBvYmotJChDT05GSUdfRFJNX1ZNV0dGWCkgOj0gdm13Z2Z4Lm8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2JvLmMgYi9kcml2ZXJzL2dwdS9kcm0v
dm13Z2Z4L3Ztd2dmeF9iby5jCmluZGV4IGFhZDhkODE0MDI1OS4uODY5YWVhZWMyZjg2IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9iby5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS92bXdnZngvdm13Z2Z4X2JvLmMKQEAgLTQ2Miw2ICs0NjIsNyBAQCB2b2lkIHZtd19i
b19ib19mcmVlKHN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8pCiB7CiAJc3RydWN0IHZtd19i
dWZmZXJfb2JqZWN0ICp2bXdfYm8gPSB2bXdfYnVmZmVyX29iamVjdChibyk7CiAKKwlXQVJOX09O
KHZtd19iby0+ZGlydHkpOwogCXZtd19ib191bm1hcCh2bXdfYm8pOwogCWtmcmVlKHZtd19ibyk7
CiB9CkBAIC00NzUsOCArNDc2LDEwIEBAIHZvaWQgdm13X2JvX2JvX2ZyZWUoc3RydWN0IHR0bV9i
dWZmZXJfb2JqZWN0ICpibykKIHN0YXRpYyB2b2lkIHZtd191c2VyX2JvX2Rlc3Ryb3koc3RydWN0
IHR0bV9idWZmZXJfb2JqZWN0ICpibykKIHsKIAlzdHJ1Y3Qgdm13X3VzZXJfYnVmZmVyX29iamVj
dCAqdm13X3VzZXJfYm8gPSB2bXdfdXNlcl9idWZmZXJfb2JqZWN0KGJvKTsKKwlzdHJ1Y3Qgdm13
X2J1ZmZlcl9vYmplY3QgKnZibyA9ICZ2bXdfdXNlcl9iby0+dmJvOwogCi0Jdm13X2JvX3VubWFw
KCZ2bXdfdXNlcl9iby0+dmJvKTsKKwlXQVJOX09OKHZiby0+ZGlydHkpOworCXZtd19ib191bm1h
cCh2Ym8pOwogCXR0bV9wcmltZV9vYmplY3Rfa2ZyZWUodm13X3VzZXJfYm8sIHByaW1lKTsKIH0K
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2LmMgYi9kcml2
ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9kcnYuYwppbmRleCBiMzhiY2IwMzJjOTkuLjgyODcy
Njg2YjcxZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZHJ2LmMKQEAgLTgzNSw2ICs4MzUs
MTEgQEAgc3RhdGljIGludCB2bXdfZHJpdmVyX2xvYWQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
dW5zaWduZWQgbG9uZyBjaGlwc2V0KQogCQlEUk1fRVJST1IoIkZhaWxlZCBpbml0aWFsaXppbmcg
VFRNIGJ1ZmZlciBvYmplY3QgZHJpdmVyLlxuIik7CiAJCWdvdG8gb3V0X25vX2JkZXY7CiAJfQor
CWRldl9wcml2LT52bV9vcHMgPSAqZGV2X3ByaXYtPmJkZXYudm1fb3BzOworCWRldl9wcml2LT52
bV9vcHMuZmF1bHQgPSB2bXdfYm9fdm1fZmF1bHQ7CisJZGV2X3ByaXYtPnZtX29wcy5wZm5fbWt3
cml0ZSA9IHZtd19ib192bV9ta3dyaXRlOworCWRldl9wcml2LT52bV9vcHMucGFnZV9ta3dyaXRl
ID0gdm13X2JvX3ZtX21rd3JpdGU7CisJZGV2X3ByaXYtPmJkZXYudm1fb3BzID0gJmRldl9wcml2
LT52bV9vcHM7CiAKIAkvKgogCSAqIEVuYWJsZSBWUkFNLCBidXQgaW5pdGlhbGx5IGRvbid0IHVz
ZSBpdCB1bnRpbCBTVkdBIGlzIGVuYWJsZWQgYW5kCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vdm13Z2Z4L3Ztd2dmeF9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X2Ry
di5oCmluZGV4IDVlYjczZGVkOGUwNy4uNGQxZjgwODExYWMwIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4
L3Ztd2dmeF9kcnYuaApAQCAtMTA1LDYgKzEwNSw3IEBAIHN0cnVjdCB2bXdfZnByaXYgewogICog
QGR4X3F1ZXJ5X2N0eDogRFggY29udGV4dCBpZiB0aGlzIGJ1ZmZlciBvYmplY3QgaXMgdXNlZCBh
cyBhIERYIHF1ZXJ5IE1PQgogICogQG1hcDogS21hcCBvYmplY3QgZm9yIHNlbWktcGVyc2lzdGVu
dCBtYXBwaW5ncwogICogQHJlc19wcmlvczogRXZpY3Rpb24gcHJpb3JpdHkgY291bnRzIGZvciBh
dHRhY2hlZCByZXNvdXJjZXMKKyAqIEBkaXJ0eTogc3RydWN0dXJlIGZvciB1c2VyLXNwYWNlIGRp
cnR5LXRyYWNraW5nCiAgKi8KIHN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCB7CiAJc3RydWN0IHR0
bV9idWZmZXJfb2JqZWN0IGJhc2U7CkBAIC0xMTUsNiArMTE2LDcgQEAgc3RydWN0IHZtd19idWZm
ZXJfb2JqZWN0IHsKIAkvKiBQcm90ZWN0ZWQgYnkgcmVzZXJ2YXRpb24gKi8KIAlzdHJ1Y3QgdHRt
X2JvX2ttYXBfb2JqIG1hcDsKIAl1MzIgcmVzX3ByaW9zW1RUTV9NQVhfQk9fUFJJT1JJVFldOwor
CXN0cnVjdCB2bXdfYm9fZGlydHkgKmRpcnR5OwogfTsKIAogLyoqCkBAIC0xNDUsNyArMTQ3LDgg
QEAgc3RydWN0IHZtd19yZXNfZnVuYzsKICAqIEByZXNfZGlydHk6IFJlc291cmNlIGNvbnRhaW5z
IGRhdGEgbm90IHlldCBpbiB0aGUgYmFja3VwIGJ1ZmZlci4gUHJvdGVjdGVkCiAgKiBieSByZXNv
dXJjZSByZXNlcnZlZC4KICAqIEBiYWNrdXBfZGlydHk6IEJhY2t1cCBidWZmZXIgY29udGFpbnMg
ZGF0YSBub3QgeWV0IGluIHRoZSBIVyByZXNvdXJjZS4KLSAqIFByb3RlY3RlIGJ5IHJlc291cmNl
IHJlc2VydmVkLgorICogUHJvdGVjdGVkIGJ5IHJlc291cmNlIHJlc2VydmVkLgorICogQGNvaGVy
ZW50OiBFbXVsYXRlIGNvaGVyZW5jeSBieSB0cmFja2luZyB2bSBhY2Nlc3Nlcy4KICAqIEBiYWNr
dXA6IFRoZSBiYWNrdXAgYnVmZmVyIGlmIGFueS4gUHJvdGVjdGVkIGJ5IHJlc291cmNlIHJlc2Vy
dmVkLgogICogQGJhY2t1cF9vZmZzZXQ6IE9mZnNldCBpbnRvIHRoZSBiYWNrdXAgYnVmZmVyIGlm
IGFueS4gUHJvdGVjdGVkIGJ5IHJlc291cmNlCiAgKiByZXNlcnZlZC4gTm90ZSB0aGF0IG9ubHkg
YSBmZXcgcmVzb3VyY2UgdHlwZXMgY2FuIGhhdmUgYSBAYmFja3VwX29mZnNldApAQCAtMTYyLDE0
ICsxNjUsMTYgQEAgc3RydWN0IHZtd19yZXNfZnVuYzsKICAqIEBod19kZXN0cm95OiBDYWxsYmFj
ayB0byBkZXN0cm95IHRoZSByZXNvdXJjZSBvbiB0aGUgZGV2aWNlLCBhcyBwYXJ0IG9mCiAgKiBy
ZXNvdXJjZSBkZXN0cnVjdGlvbi4KICAqLworc3RydWN0IHZtd19yZXNvdXJjZV9kaXJ0eTsKIHN0
cnVjdCB2bXdfcmVzb3VyY2UgewogCXN0cnVjdCBrcmVmIGtyZWY7CiAJc3RydWN0IHZtd19wcml2
YXRlICpkZXZfcHJpdjsKIAlpbnQgaWQ7CiAJdTMyIHVzZWRfcHJpbzsKIAl1bnNpZ25lZCBsb25n
IGJhY2t1cF9zaXplOwotCWJvb2wgcmVzX2RpcnR5OwotCWJvb2wgYmFja3VwX2RpcnR5OworCXUz
MiByZXNfZGlydHkgOiAxOworCXUzMiBiYWNrdXBfZGlydHkgOiAxOworCXUzMiBjb2hlcmVudCA6
IDE7CiAJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICpiYWNrdXA7CiAJdW5zaWduZWQgbG9uZyBi
YWNrdXBfb2Zmc2V0OwogCXVuc2lnbmVkIGxvbmcgcGluX2NvdW50OwpAQCAtMTc3LDYgKzE4Miw3
IEBAIHN0cnVjdCB2bXdfcmVzb3VyY2UgewogCXN0cnVjdCBsaXN0X2hlYWQgbHJ1X2hlYWQ7CiAJ
c3RydWN0IGxpc3RfaGVhZCBtb2JfaGVhZDsKIAlzdHJ1Y3QgbGlzdF9oZWFkIGJpbmRpbmdfaGVh
ZDsKKwlzdHJ1Y3Qgdm13X3Jlc291cmNlX2RpcnR5ICpkaXJ0eTsKIAl2b2lkICgqcmVzX2ZyZWUp
IChzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMpOwogCXZvaWQgKCpod19kZXN0cm95KSAoc3RydWN0
IHZtd19yZXNvdXJjZSAqcmVzKTsKIH07CkBAIC02MDUsNiArNjExLDkgQEAgc3RydWN0IHZtd19w
cml2YXRlIHsKIAogCS8qIFZhbGlkYXRpb24gbWVtb3J5IHJlc2VydmF0aW9uICovCiAJc3RydWN0
IHZtd192YWxpZGF0aW9uX21lbSB2dm07CisKKwkvKiBWTSBvcGVyYXRpb25zICovCisJc3RydWN0
IHZtX29wZXJhdGlvbnNfc3RydWN0IHZtX29wczsKIH07CiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0
IHZtd19zdXJmYWNlICp2bXdfcmVzX3RvX3NyZihzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMpCkBA
IC03MTYsNiArNzI1LDggQEAgZXh0ZXJuIHZvaWQgdm13X3Jlc291cmNlX2V2aWN0X2FsbChzdHJ1
Y3Qgdm13X3ByaXZhdGUgKmRldl9wcml2KTsKIGV4dGVybiB2b2lkIHZtd19yZXNvdXJjZV91bmJp
bmRfbGlzdChzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7CiB2b2lkIHZtd19yZXNvdXJj
ZV9tb2JfYXR0YWNoKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7CiB2b2lkIHZtd19yZXNvdXJj
ZV9tb2JfZGV0YWNoKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJlcyk7Cit2b2lkIHZtd19yZXNvdXJj
ZV9kaXJ0eV91cGRhdGUoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzLCBwZ29mZl90IHN0YXJ0LAor
CQkJICAgICAgIHBnb2ZmX3QgZW5kKTsKIAogLyoqCiAgKiB2bXdfcmVzb3VyY2VfbW9iX2F0dGFj
aGVkIC0gV2hldGhlciBhIHJlc291cmNlIGN1cnJlbnRseSBoYXMgYSBtb2IgYXR0YWNoZWQKQEAg
LTE0MDMsNiArMTQxNCwxNSBAQCBpbnQgdm13X2hvc3RfbG9nKGNvbnN0IGNoYXIgKmxvZyk7CiAj
ZGVmaW5lIFZNV19ERUJVR19VU0VSKGZtdCwgLi4uKSAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBcCiAJRFJNX0RFQlVHX0RSSVZFUihmbXQsICMjX19WQV9BUkdT
X18pCiAKKy8qIFJlc291cmNlIGRpcnR5aW5nIC0gdm13Z2Z4X3BhZ2VfZGlydHkuYyAqLwordm9p
ZCB2bXdfYm9fZGlydHlfc2NhbihzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7CitpbnQg
dm13X2JvX2RpcnR5X2FkZChzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7Cit2b2lkIHZt
d19ib19kaXJ0eV90cmFuc2Zlcl90b19yZXMoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKK3Zv
aWQgdm13X2JvX2RpcnR5X2NsZWFyX3JlcyhzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMpOwordm9p
ZCB2bXdfYm9fZGlydHlfcmVsZWFzZShzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyk7Cit2
bV9mYXVsdF90IHZtd19ib192bV9mYXVsdChzdHJ1Y3Qgdm1fZmF1bHQgKnZtZik7Cit2bV9mYXVs
dF90IHZtd19ib192bV9ta3dyaXRlKHN0cnVjdCB2bV9mYXVsdCAqdm1mKTsKKwogLyoqCiAgKiBW
TVdfREVCVUdfS01TIC0gRGVidWcgb3V0cHV0IGZvciBrZXJuZWwgbW9kZS1zZXR0aW5nCiAgKgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZXhlY2J1Zi5jIGIvZHJp
dmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZXhlY2J1Zi5jCmluZGV4IGZmODZkNDlkYzVlOC4u
OTM0YWQ3YzBjMzQyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9l
eGVjYnVmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfZXhlY2J1Zi5jCkBA
IC0yNTYwLDcgKzI1NjAsNiBAQCBzdGF0aWMgaW50IHZtd19jbWRfZHhfY2hlY2tfc3VicmVzb3Vy
Y2Uoc3RydWN0IHZtd19wcml2YXRlICpkZXZfcHJpdiwKIAkJICAgICBvZmZzZXRvZih0eXBlb2Yo
KmNtZCksIHNpZCkpOwogCiAJY21kID0gY29udGFpbmVyX29mKGhlYWRlciwgdHlwZW9mKCpjbWQp
LCBoZWFkZXIpOwotCiAJcmV0dXJuIHZtd19jbWRfcmVzX2NoZWNrKGRldl9wcml2LCBzd19jb250
ZXh0LCB2bXdfcmVzX3N1cmZhY2UsCiAJCQkJIFZNV19SRVNfRElSVFlfTk9ORSwgdXNlcl9zdXJm
YWNlX2NvbnZlcnRlciwKIAkJCQkgJmNtZC0+c2lkLCBOVUxMKTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3BhZ2VfZGlydHkuYyBiL2RyaXZlcnMvZ3B1L2RybS92
bXdnZngvdm13Z2Z4X3BhZ2VfZGlydHkuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwMDAuLjExNDA0ODYyZWZmNwotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS92bXdnZngvdm13Z2Z4X3BhZ2VfZGlydHkuYwpAQCAtMCwwICsxLDQxNyBAQAorLy8gU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgT1IgTUlUCisvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAq
CisgKiBDb3B5cmlnaHQgMjAxOSBWTXdhcmUsIEluYy4sIFBhbG8gQWx0bywgQ0EuLCBVU0EKKyAq
CisgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55
IHBlcnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lh
dGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQorICogIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4g
dGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZworICogd2l0aG91dCBs
aW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNo
LAorICogZGlzdHJpYnV0ZSwgc3ViIGxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUg
U29mdHdhcmUsIGFuZCB0bworICogcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUg
aXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvCisgKiB0aGUgZm9sbG93aW5nIGNvbmRp
dGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlz
c2lvbiBub3RpY2UgKGluY2x1ZGluZyB0aGUKKyAqIG5leHQgcGFyYWdyYXBoKSBzaGFsbCBiZSBp
bmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zCisgKiBvZiB0aGUg
U29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhP
VVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElO
RyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAor
ICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQu
IElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUlMsIEFVVEhPUlMgQU5E
L09SIElUUyBTVVBQTElFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sCisgKiBEQU1BR0VTIE9S
IE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQg
T1IKKyAqIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBX
SVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUKKyAqIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUg
U09GVFdBUkUuCisgKgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworI2luY2x1ZGUgInZtd2dmeF9kcnYu
aCIKKworLyoKKyAqIERpZmZlcmVudCBtZXRob2RzIGZvciB0cmFja2luZyBkaXJ0eToKKyAqIFZN
V19CT19ESVJUWV9QQUdFVEFCTEUgLSBTY2FuIHRoZSBwYWdldGFibGUgZm9yIGhhcmR3YXJlIGRp
cnR5IGJpdHMKKyAqIFZNV19CT19ESVJUWV9NS1dSSVRFIC0gV3JpdGUtcHJvdGVjdCBwYWdlIHRh
YmxlIGVudHJpZXMgYW5kIHJlY29yZCB3cml0ZS0KKyAqIGFjY2Vzc2VzIGluIHRoZSBWTSBta3dy
aXRlKCkgY2FsbGJhY2sKKyAqLworZW51bSB2bXdfYm9fZGlydHlfbWV0aG9kIHsKKwlWTVdfQk9f
RElSVFlfUEFHRVRBQkxFLAorCVZNV19CT19ESVJUWV9NS1dSSVRFLAorfTsKKworLyoKKyAqIE5v
IGRpcnRpZWQgcGFnZXMgYXQgc2NhbiB0cmlnZ2VyIGEgdHJhbnNpdGlvbiB0byB0aGUgX01LV1JJ
VEUgbWV0aG9kLAorICogc2ltaWxhcmx5IGEgY2VydGFpbiBwZXJjZW50YWdlIG9mIGRpcnR5IHBh
Z2VzIHRyaWdnZXIgYSB0cmFuc2l0aW9uIHRvCisgKiB0aGUgX1BBR0VUQUJMRSBtZXRob2QuIEhv
dyBtYW55IHRyaWdnZXJzIHNob3VsZCB3ZSB3YWl0IGZvciBiZWZvcmUKKyAqIGNoYW5naW5nIG1l
dGhvZD8KKyAqLworI2RlZmluZSBWTVdfRElSVFlfTlVNX0NIQU5HRV9UUklHR0VSUyAyCisKKy8q
IFBlcmNlbnRhZ2UgdG8gdHJpZ2dlciBhIHRyYW5zaXRpb24gdG8gdGhlIF9QQUdFVEFCTEUgbWV0
aG9kICovCisjZGVmaW5lIFZNV19ESVJUWV9QRVJDRU5UQUdFIDEwCisKKy8qKgorICogc3RydWN0
IHZtd19ib19kaXJ0eSAtIERpcnR5IGluZm9ybWF0aW9uIGZvciBidWZmZXIgb2JqZWN0cworICog
QHN0YXJ0OiBGaXJzdCBjdXJyZW50bHkgZGlydHkgYml0CisgKiBAZW5kOiBMYXN0IGN1cnJlbnRs
eSBkaXJ0eSBiaXQgKyAxCisgKiBAbWV0aG9kOiBUaGUgY3VycmVudGx5IHVzZWQgZGlydHkgbWV0
aG9kCisgKiBAY2hhbmdlX2NvdW50OiBOdW1iZXIgb2YgY29uc2VjdXRpdmUgbWV0aG9kIGNoYW5n
ZSB0cmlnZ2VycworICogQHJlZl9jb3VudDogUmVmZXJlbmNlIGNvdW50IGZvciB0aGlzIHN0cnVj
dHVyZQorICogQGJpdG1hcF9zaXplOiBUaGUgc2l6ZSBvZiB0aGUgYml0bWFwIGluIGJpdHMuIFR5
cGljYWxseSBlcXVhbCB0byB0aGUKKyAqIG51YmVyIG9mIHBhZ2VzIGluIHRoZSBiby4KKyAqIEBz
aXplOiBUaGUgYWNjb3VudGluZyBzaXplIGZvciB0aGlzIHN0cnVjdC4KKyAqIEBiaXRtYXA6IEEg
Yml0bWFwIHdoZXJlIGVhY2ggYml0IHJlcHJlc2VudHMgYSBwYWdlLiBBIHNldCBiaXQgbWVhbnMg
YQorICogZGlydHkgcGFnZS4KKyAqLworc3RydWN0IHZtd19ib19kaXJ0eSB7CisJdW5zaWduZWQg
bG9uZyBzdGFydDsKKwl1bnNpZ25lZCBsb25nIGVuZDsKKwllbnVtIHZtd19ib19kaXJ0eV9tZXRo
b2QgbWV0aG9kOworCXVuc2lnbmVkIGludCBjaGFuZ2VfY291bnQ7CisJdW5zaWduZWQgaW50IHJl
Zl9jb3VudDsKKwl1bnNpZ25lZCBsb25nIGJpdG1hcF9zaXplOworCXNpemVfdCBzaXplOworCXVu
c2lnbmVkIGxvbmcgYml0bWFwWzBdOworfTsKKworLyoqCisgKiB2bXdfYm9fZGlydHlfc2Nhbl9w
YWdldGFibGUgLSBQZXJmb3JtIGEgcGFnZXRhYmxlIHNjYW4gZm9yIGRpcnR5IGJpdHMKKyAqIEB2
Ym86IFRoZSBidWZmZXIgb2JqZWN0IHRvIHNjYW4KKyAqCisgKiBTY2FucyB0aGUgcGFnZXRhYmxl
IGZvciBkaXJ0eSBiaXRzLiBDbGVhciB0aG9zZSBiaXRzIGFuZCBtb2RpZnkgdGhlCisgKiBkaXJ0
eSBzdHJ1Y3R1cmUgd2l0aCB0aGUgcmVzdWx0cy4gVGhpcyBmdW5jdGlvbiBtYXkgY2hhbmdlIHRo
ZQorICogZGlydHktdHJhY2tpbmcgbWV0aG9kLgorICovCitzdGF0aWMgdm9pZCB2bXdfYm9fZGly
dHlfc2Nhbl9wYWdldGFibGUoc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8pCit7CisJc3Ry
dWN0IHZtd19ib19kaXJ0eSAqZGlydHkgPSB2Ym8tPmRpcnR5OworCXBnb2ZmX3Qgb2Zmc2V0ID0g
ZHJtX3ZtYV9ub2RlX3N0YXJ0KCZ2Ym8tPmJhc2Uudm1hX25vZGUpOworCXN0cnVjdCBhZGRyZXNz
X3NwYWNlICptYXBwaW5nID0gdmJvLT5iYXNlLmJkZXYtPmRldl9tYXBwaW5nOworCXBnb2ZmX3Qg
bnVtX21hcmtlZDsKKworCW51bV9tYXJrZWQgPSBhcHBseV9hc19jbGVhbihtYXBwaW5nLAorCQkJ
CSAgICBvZmZzZXQsIGRpcnR5LT5iaXRtYXBfc2l6ZSwKKwkJCQkgICAgb2Zmc2V0LCAmZGlydHkt
PmJpdG1hcFswXSwKKwkJCQkgICAgJmRpcnR5LT5zdGFydCwgJmRpcnR5LT5lbmQpOworCWlmIChu
dW1fbWFya2VkID09IDApCisJCWRpcnR5LT5jaGFuZ2VfY291bnQrKzsKKwllbHNlCisJCWRpcnR5
LT5jaGFuZ2VfY291bnQgPSAwOworCisJaWYgKGRpcnR5LT5jaGFuZ2VfY291bnQgPiBWTVdfRElS
VFlfTlVNX0NIQU5HRV9UUklHR0VSUykgeworCQlkaXJ0eS0+Y2hhbmdlX2NvdW50ID0gMDsKKwkJ
ZGlydHktPm1ldGhvZCA9IFZNV19CT19ESVJUWV9NS1dSSVRFOworCQlhcHBseV9hc193cnByb3Rl
Y3QobWFwcGluZywKKwkJCQkgICBvZmZzZXQsIGRpcnR5LT5iaXRtYXBfc2l6ZSk7CisJCWFwcGx5
X2FzX2NsZWFuKG1hcHBpbmcsCisJCQkgICAgICAgb2Zmc2V0LCBkaXJ0eS0+Yml0bWFwX3NpemUs
CisJCQkgICAgICAgb2Zmc2V0LCAmZGlydHktPmJpdG1hcFswXSwKKwkJCSAgICAgICAmZGlydHkt
PnN0YXJ0LCAmZGlydHktPmVuZCk7CisJfQorfQorCisvKioKKyAqIHZtd19ib19kaXJ0eV9zY2Fu
X21rd3JpdGUgLSBSZXNldCB0aGUgbWt3cml0ZSBkaXJ0eS10cmFja2luZyBtZXRob2QKKyAqIEB2
Ym86IFRoZSBidWZmZXIgb2JqZWN0IHRvIHNjYW4KKyAqCisgKiBXcml0ZS1wcm90ZWN0IHBhZ2Vz
IHdyaXR0ZW4gdG8gc28gdGhhdCBjb25zZWN1dGl2ZSB3cml0ZSBhY2Nlc3NlcyB3aWxsCisgKiB0
cmlnZ2VyIGEgY2FsbCB0byBta3dyaXRlLgorICoKKyAqIFRoaXMgZnVuY3Rpb24gbWF5IGNoYW5n
ZSB0aGUgZGlydHktdHJhY2tpbmcgbWV0aG9kLgorICovCitzdGF0aWMgdm9pZCB2bXdfYm9fZGly
dHlfc2Nhbl9ta3dyaXRlKHN0cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvKQoreworCXN0cnVj
dCB2bXdfYm9fZGlydHkgKmRpcnR5ID0gdmJvLT5kaXJ0eTsKKwl1bnNpZ25lZCBsb25nIG9mZnNl
dCA9IGRybV92bWFfbm9kZV9zdGFydCgmdmJvLT5iYXNlLnZtYV9ub2RlKTsKKwlzdHJ1Y3QgYWRk
cmVzc19zcGFjZSAqbWFwcGluZyA9IHZiby0+YmFzZS5iZGV2LT5kZXZfbWFwcGluZzsKKwlwZ29m
Zl90IG51bV9tYXJrZWQ7CisKKwlpZiAoZGlydHktPmVuZCA8PSBkaXJ0eS0+c3RhcnQpCisJCXJl
dHVybjsKKworCW51bV9tYXJrZWQgPSBhcHBseV9hc193cnByb3RlY3QodmJvLT5iYXNlLmJkZXYt
PmRldl9tYXBwaW5nLAorCQkJCQlkaXJ0eS0+c3RhcnQgKyBvZmZzZXQsCisJCQkJCWRpcnR5LT5l
bmQgLSBkaXJ0eS0+c3RhcnQpOworCisJaWYgKDEwMFVMICogbnVtX21hcmtlZCAvIGRpcnR5LT5i
aXRtYXBfc2l6ZSA+CisJICAgIFZNV19ESVJUWV9QRVJDRU5UQUdFKSB7CisJCWRpcnR5LT5jaGFu
Z2VfY291bnQrKzsKKwl9IGVsc2UgeworCQlkaXJ0eS0+Y2hhbmdlX2NvdW50ID0gMDsKKwl9CisK
KwlpZiAoZGlydHktPmNoYW5nZV9jb3VudCA+IFZNV19ESVJUWV9OVU1fQ0hBTkdFX1RSSUdHRVJT
KSB7CisJCXBnb2ZmX3Qgc3RhcnQgPSAwOworCQlwZ29mZl90IGVuZCA9IGRpcnR5LT5iaXRtYXBf
c2l6ZTsKKworCQlkaXJ0eS0+bWV0aG9kID0gVk1XX0JPX0RJUlRZX1BBR0VUQUJMRTsKKwkJYXBw
bHlfYXNfY2xlYW4obWFwcGluZywgb2Zmc2V0LCBlbmQsIG9mZnNldCwgJmRpcnR5LT5iaXRtYXBb
MF0sCisJCQkgICAgICAgJnN0YXJ0LCAmZW5kKTsKKwkJYml0bWFwX2NsZWFyKCZkaXJ0eS0+Yml0
bWFwWzBdLCAwLCBkaXJ0eS0+Yml0bWFwX3NpemUpOworCQlpZiAoZGlydHktPnN0YXJ0IDwgZGly
dHktPmVuZCkKKwkJCWJpdG1hcF9zZXQoJmRpcnR5LT5iaXRtYXBbMF0sIGRpcnR5LT5zdGFydCwK
KwkJCQkgICBkaXJ0eS0+ZW5kIC0gZGlydHktPnN0YXJ0KTsKKwkJZGlydHktPmNoYW5nZV9jb3Vu
dCA9IDA7CisJfQorfQorCisKKy8qKgorICogdm13X2JvX2RpcnR5X3NjYW4gLSBTY2FuIGZvciBk
aXJ0eSBwYWdlcyBhbmQgYWRkIHRoZW0gdG8gdGhlIGRpcnR5CisgKiB0cmFja2luZyBzdHJ1Y3R1
cmUKKyAqIEB2Ym86IFRoZSBidWZmZXIgb2JqZWN0IHRvIHNjYW4KKyAqCisgKiBUaGlzIGZ1bmN0
aW9uIG1heSBjaGFuZ2UgdGhlIGRpcnR5IHRyYWNraW5nIG1ldGhvZC4KKyAqLwordm9pZCB2bXdf
Ym9fZGlydHlfc2NhbihzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibykKK3sKKwlzdHJ1Y3Qg
dm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+ZGlydHk7CisKKwlpZiAoZGlydHktPm1ldGhvZCA9
PSBWTVdfQk9fRElSVFlfUEFHRVRBQkxFKQorCQl2bXdfYm9fZGlydHlfc2Nhbl9wYWdldGFibGUo
dmJvKTsKKwllbHNlCisJCXZtd19ib19kaXJ0eV9zY2FuX21rd3JpdGUodmJvKTsKK30KKworLyoq
CisgKiB2bXdfYm9fZGlydHlfYWRkIC0gQWRkIGEgZGlydHktdHJhY2tpbmcgdXNlciB0byBhIGJ1
ZmZlciBvYmplY3QKKyAqIEB2Ym86IFRoZSBidWZmZXIgb2JqZWN0CisgKgorICogVGhpcyBmdW5j
dGlvbiByZWdpc3RlcnMgYSBkaXJ0eS10cmFja2luZyB1c2VyIHRvIGEgYnVmZmVyIG9iamVjdC4K
KyAqIEEgdXNlciBjYW4gYmUgZm9yIGV4YW1wbGUgYSByZXNvdXJjZSBvciBhIHZtYSBpbiBhIHNw
ZWNpYWwgdXNlci1zcGFjZQorICogbWFwcGluZy4KKyAqCisgKiBSZXR1cm46IFplcm8gb24gc3Vj
Y2VzcywgLUVOT01FTSBvbiBtZW1vcnkgYWxsb2NhdGlvbiBmYWlsdXJlLgorICovCitpbnQgdm13
X2JvX2RpcnR5X2FkZChzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibykKK3sKKwlzdHJ1Y3Qg
dm13X2JvX2RpcnR5ICpkaXJ0eSA9IHZiby0+ZGlydHk7CisJcGdvZmZfdCBudW1fcGFnZXMgPSB2
Ym8tPmJhc2UubnVtX3BhZ2VzOworCXNpemVfdCBzaXplLCBhY2Nfc2l6ZTsKKwlpbnQgcmV0Owor
CXN0YXRpYyBzdHJ1Y3QgdHRtX29wZXJhdGlvbl9jdHggY3R4ID0geworCQkuaW50ZXJydXB0aWJs
ZSA9IGZhbHNlLAorCQkubm9fd2FpdF9ncHUgPSBmYWxzZQorCX07CisKKwlpZiAoZGlydHkpIHsK
KwkJZGlydHktPnJlZl9jb3VudCsrOworCQlyZXR1cm4gMDsKKwl9CisKKwlzaXplID0gc2l6ZW9m
KCpkaXJ0eSkgKyBCSVRTX1RPX0xPTkdTKG51bV9wYWdlcykgKiBzaXplb2YobG9uZyk7CisJYWNj
X3NpemUgPSB0dG1fcm91bmRfcG90KHNpemUpOworCXJldCA9IHR0bV9tZW1fZ2xvYmFsX2FsbG9j
KCZ0dG1fbWVtX2dsb2IsIGFjY19zaXplLCAmY3R4KTsKKwlpZiAocmV0KSB7CisJCVZNV19ERUJV
R19VU0VSKCJPdXQgb2YgZ3JhcGhpY3MgbWVtb3J5IGZvciBidWZmZXIgb2JqZWN0ICIKKwkJCSAg
ICAgICAiZGlydHkgdHJhY2tlci5cbiIpOworCQlyZXR1cm4gcmV0OworCX0KKwlkaXJ0eSA9IGt2
emFsbG9jKHNpemUsIEdGUF9LRVJORUwpOworCWlmICghZGlydHkpIHsKKwkJcmV0ID0gLUVOT01F
TTsKKwkJZ290byBvdXRfbm9fZGlydHk7CisJfQorCisJZGlydHktPnNpemUgPSBhY2Nfc2l6ZTsK
KwlkaXJ0eS0+Yml0bWFwX3NpemUgPSBudW1fcGFnZXM7CisJZGlydHktPnN0YXJ0ID0gZGlydHkt
PmJpdG1hcF9zaXplOworCWRpcnR5LT5lbmQgPSAwOworCWRpcnR5LT5yZWZfY291bnQgPSAxOwor
CWlmIChudW1fcGFnZXMgPCBQQUdFX1NJWkUgLyBzaXplb2YocHRlX3QpKSB7CisJCWRpcnR5LT5t
ZXRob2QgPSBWTVdfQk9fRElSVFlfUEFHRVRBQkxFOworCX0gZWxzZSB7CisJCXN0cnVjdCBhZGRy
ZXNzX3NwYWNlICptYXBwaW5nID0gdmJvLT5iYXNlLmJkZXYtPmRldl9tYXBwaW5nOworCQlwZ29m
Zl90IG9mZnNldCA9IGRybV92bWFfbm9kZV9zdGFydCgmdmJvLT5iYXNlLnZtYV9ub2RlKTsKKwor
CQlkaXJ0eS0+bWV0aG9kID0gVk1XX0JPX0RJUlRZX01LV1JJVEU7CisKKwkJLyogV3JpdGUtcHJv
dGVjdCBhbmQgdGhlbiBwaWNrIHVwIGFscmVhZHkgZGlydHkgYml0cyAqLworCQlhcHBseV9hc193
cnByb3RlY3QobWFwcGluZywgb2Zmc2V0LCBudW1fcGFnZXMpOworCQlhcHBseV9hc19jbGVhbiht
YXBwaW5nLCBvZmZzZXQsIG51bV9wYWdlcywgb2Zmc2V0LAorCQkJICAgICAgICZkaXJ0eS0+Yml0
bWFwWzBdLCAmZGlydHktPnN0YXJ0LCAmZGlydHktPmVuZCk7CisJfQorCisJdmJvLT5kaXJ0eSA9
IGRpcnR5OworCisJcmV0dXJuIDA7CisKK291dF9ub19kaXJ0eToKKwl0dG1fbWVtX2dsb2JhbF9m
cmVlKCZ0dG1fbWVtX2dsb2IsIGFjY19zaXplKTsKKwlyZXR1cm4gcmV0OworfQorCisvKioKKyAq
IHZtd19ib19kaXJ0eV9yZWxlYXNlIC0gUmVsZWFzZSBhIGRpcnR5LXRyYWNraW5nIHVzZXIgZnJv
bSBhIGJ1ZmZlciBvYmplY3QKKyAqIEB2Ym86IFRoZSBidWZmZXIgb2JqZWN0CisgKgorICogVGhp
cyBmdW5jdGlvbiByZWxlYXNlcyBhIGRpcnR5LXRyYWNraW5nIHVzZXIgZnJvbSBhIGJ1ZmZlciBv
YmplY3QuCisgKiBJZiB0aGUgcmVmZXJlbmNlIGNvdW50IHJlYWNoZXMgemVybywgdGhlbiB0aGUg
ZGlydHktdHJhY2tpbmcgb2JqZWN0IGlzCisgKiBmcmVlZCBhbmQgdGhlIHBvaW50ZXIgdG8gaXQg
Y2xlYXJlZC4KKyAqCisgKiBSZXR1cm46IFplcm8gb24gc3VjY2VzcywgLUVOT01FTSBvbiBtZW1v
cnkgYWxsb2NhdGlvbiBmYWlsdXJlLgorICovCit2b2lkIHZtd19ib19kaXJ0eV9yZWxlYXNlKHN0
cnVjdCB2bXdfYnVmZmVyX29iamVjdCAqdmJvKQoreworCXN0cnVjdCB2bXdfYm9fZGlydHkgKmRp
cnR5ID0gdmJvLT5kaXJ0eTsKKworCWlmIChkaXJ0eSAmJiAtLWRpcnR5LT5yZWZfY291bnQgPT0g
MCkgeworCQlzaXplX3QgYWNjX3NpemUgPSBkaXJ0eS0+c2l6ZTsKKworCQlrdmZyZWUoZGlydHkp
OworCQl0dG1fbWVtX2dsb2JhbF9mcmVlKCZ0dG1fbWVtX2dsb2IsIGFjY19zaXplKTsKKwkJdmJv
LT5kaXJ0eSA9IE5VTEw7CisJfQorfQorCisvKioKKyAqIHZtd19ib19kaXJ0eV90cmFuc2Zlcl90
b19yZXMgLSBQaWNrIHVwIGEgcmVzb3VyY2UncyBkaXJ0eSByZWdpb24gZnJvbQorICogaXRzIGJh
Y2tpbmcgbW9iLgorICogQHJlczogVGhlIHJlc291cmNlCisgKgorICogVGhpcyBmdW5jdGlvbiB3
aWxsIHBpY2sgdXAgYWxsIGRpcnR5IHJhbmdlcyBhZmZlY3RpbmcgdGhlIHJlc291cmNlIGZyb20K
KyAqIGl0J3MgYmFja3VwIG1vYiwgYW5kIGNhbGwgdm13X3Jlc291cmNlX2RpcnR5X3VwZGF0ZSgp
IG9uY2UgZm9yIGVhY2gKKyAqIHJhbmdlLiBUaGUgdHJhbnNmZXJyZWQgcmFuZ2VzIHdpbGwgYmUg
Y2xlYXJlZCBmcm9tIHRoZSBiYWNraW5nIG1vYidzCisgKiBkaXJ0eSB0cmFja2luZy4KKyAqLwor
dm9pZCB2bXdfYm9fZGlydHlfdHJhbnNmZXJfdG9fcmVzKHN0cnVjdCB2bXdfcmVzb3VyY2UgKnJl
cykKK3sKKwlzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyA9IHJlcy0+YmFja3VwOworCXN0
cnVjdCB2bXdfYm9fZGlydHkgKmRpcnR5ID0gdmJvLT5kaXJ0eTsKKwlwZ29mZl90IHN0YXJ0LCBj
dXIsIGVuZDsKKwl1bnNpZ25lZCBsb25nIHJlc19zdGFydCA9IHJlcy0+YmFja3VwX29mZnNldDsK
Kwl1bnNpZ25lZCBsb25nIHJlc19lbmQgPSByZXMtPmJhY2t1cF9vZmZzZXQgKyByZXMtPmJhY2t1
cF9zaXplOworCisJV0FSTl9PTl9PTkNFKHJlc19zdGFydCAmIH5QQUdFX01BU0spOworCXJlc19z
dGFydCA+Pj0gUEFHRV9TSElGVDsKKwlyZXNfZW5kID0gRElWX1JPVU5EX1VQKHJlc19lbmQsIFBB
R0VfU0laRSk7CisKKwlpZiAocmVzX3N0YXJ0ID49IGRpcnR5LT5lbmQgfHwgcmVzX2VuZCA8PSBk
aXJ0eS0+c3RhcnQpCisJCXJldHVybjsKKworCWN1ciA9IG1heChyZXNfc3RhcnQsIGRpcnR5LT5z
dGFydCk7CisJcmVzX2VuZCA9IG1heChyZXNfZW5kLCBkaXJ0eS0+ZW5kKTsKKwl3aGlsZSAoY3Vy
IDwgcmVzX2VuZCkgeworCQl1bnNpZ25lZCBsb25nIG51bTsKKworCQlzdGFydCA9IGZpbmRfbmV4
dF9iaXQoJmRpcnR5LT5iaXRtYXBbMF0sIHJlc19lbmQsIGN1cik7CisJCWlmIChzdGFydCA+PSBy
ZXNfZW5kKQorCQkJYnJlYWs7CisKKwkJZW5kID0gZmluZF9uZXh0X3plcm9fYml0KCZkaXJ0eS0+
Yml0bWFwWzBdLCByZXNfZW5kLCBzdGFydCArIDEpOworCQljdXIgPSBlbmQgKyAxOworCQludW0g
PSBlbmQgLSBzdGFydDsKKwkJYml0bWFwX2NsZWFyKCZkaXJ0eS0+Yml0bWFwWzBdLCBzdGFydCwg
bnVtKTsKKwkJdm13X3Jlc291cmNlX2RpcnR5X3VwZGF0ZShyZXMsIHN0YXJ0LCBlbmQpOworCX0K
KworCWlmIChyZXNfc3RhcnQgPD0gZGlydHktPnN0YXJ0ICYmIHJlc19lbmQgPiBkaXJ0eS0+c3Rh
cnQpCisJCWRpcnR5LT5zdGFydCA9IHJlc19lbmQ7CisJaWYgKHJlc19zdGFydCA8IGRpcnR5LT5l
bmQgJiYgcmVzX2VuZCA+PSBkaXJ0eS0+ZW5kKQorCQlkaXJ0eS0+ZW5kID0gcmVzX3N0YXJ0Owor
fQorCisvKioKKyAqIHZtd19ib19kaXJ0eV9jbGVhcl9yZXMgLSBDbGVhciBhIHJlc291cmNlJ3Mg
ZGlydHkgcmVnaW9uIGZyb20KKyAqIGl0cyBiYWNraW5nIG1vYi4KKyAqIEByZXM6IFRoZSByZXNv
dXJjZQorICoKKyAqIFRoaXMgZnVuY3Rpb24gd2lsbCBjbGVhciBhbGwgZGlydHkgcmFuZ2VzIGFm
ZmVjdGluZyB0aGUgcmVzb3VyY2UgZnJvbQorICogaXQncyBiYWNrdXAgbW9iJ3MgZGlydHkgdHJh
Y2tpbmcuCisgKi8KK3ZvaWQgdm13X2JvX2RpcnR5X2NsZWFyX3JlcyhzdHJ1Y3Qgdm13X3Jlc291
cmNlICpyZXMpCit7CisJdW5zaWduZWQgbG9uZyByZXNfc3RhcnQgPSByZXMtPmJhY2t1cF9vZmZz
ZXQ7CisJdW5zaWduZWQgbG9uZyByZXNfZW5kID0gcmVzLT5iYWNrdXBfb2Zmc2V0ICsgcmVzLT5i
YWNrdXBfc2l6ZTsKKwlzdHJ1Y3Qgdm13X2J1ZmZlcl9vYmplY3QgKnZibyA9IHJlcy0+YmFja3Vw
OworCXN0cnVjdCB2bXdfYm9fZGlydHkgKmRpcnR5ID0gdmJvLT5kaXJ0eTsKKworCXJlc19zdGFy
dCA+Pj0gUEFHRV9TSElGVDsKKwlyZXNfZW5kID0gRElWX1JPVU5EX1VQKHJlc19lbmQsIFBBR0Vf
U0laRSk7CisKKwlpZiAocmVzX3N0YXJ0ID49IGRpcnR5LT5lbmQgfHwgcmVzX2VuZCA8PSBkaXJ0
eS0+c3RhcnQpCisJCXJldHVybjsKKworCXJlc19zdGFydCA9IG1heChyZXNfc3RhcnQsIGRpcnR5
LT5zdGFydCk7CisJcmVzX2VuZCA9IG1pbihyZXNfZW5kLCBkaXJ0eS0+ZW5kKTsKKwliaXRtYXBf
Y2xlYXIoJmRpcnR5LT5iaXRtYXBbMF0sIHJlc19zdGFydCwgcmVzX2VuZCAtIHJlc19zdGFydCk7
CisKKwlpZiAocmVzX3N0YXJ0IDw9IGRpcnR5LT5zdGFydCAmJiByZXNfZW5kID4gZGlydHktPnN0
YXJ0KQorCQlkaXJ0eS0+c3RhcnQgPSByZXNfZW5kOworCWlmIChyZXNfc3RhcnQgPCBkaXJ0eS0+
ZW5kICYmIHJlc19lbmQgPj0gZGlydHktPmVuZCkKKwkJZGlydHktPmVuZCA9IHJlc19zdGFydDsK
K30KKwordm1fZmF1bHRfdCB2bXdfYm9fdm1fbWt3cml0ZShzdHJ1Y3Qgdm1fZmF1bHQgKnZtZikK
K3sKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSA9IHZtZi0+dm1hOworCXN0cnVjdCB0dG1f
YnVmZmVyX29iamVjdCAqYm8gPSAoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICopCisJICAgIHZt
YS0+dm1fcHJpdmF0ZV9kYXRhOworCXZtX2ZhdWx0X3QgcmV0OworCXVuc2lnbmVkIGxvbmcgcGFn
ZV9vZmZzZXQ7CisJdW5zaWduZWQgaW50IHNhdmVfZmxhZ3M7CisJc3RydWN0IHZtd19idWZmZXJf
b2JqZWN0ICp2Ym8gPQorCQljb250YWluZXJfb2YoYm8sIHR5cGVvZigqdmJvKSwgYmFzZSk7CisK
KwkvKgorCSAqIG1rd3JpdGUoKSBkb2Vzbid0IGhhbmRsZSB0aGUgVk1fRkFVTFRfUkVUUlkgcmV0
dXJuIHZhbHVlIGNvcnJlY3RseS4KKwkgKiBTbyBtYWtlIHN1cmUgdGhlIFRUTSBoZWxwZXJzIGFy
ZSBhd2FyZS4KKwkgKi8KKwlzYXZlX2ZsYWdzID0gdm1mLT5mbGFnczsKKwl2bWYtPmZsYWdzICY9
IH5GQVVMVF9GTEFHX0FMTE9XX1JFVFJZOworCXJldCA9IHR0bV9ib192bV9yZXNlcnZlKGJvLCB2
bWYpOworCXZtZi0+ZmxhZ3MgPSBzYXZlX2ZsYWdzOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7
CisKKwlwYWdlX29mZnNldCA9IHZtZi0+cGdvZmYgLSBkcm1fdm1hX25vZGVfc3RhcnQoJmJvLT52
bWFfbm9kZSk7CisJaWYgKHVubGlrZWx5KHBhZ2Vfb2Zmc2V0ID49IGJvLT5udW1fcGFnZXMpKSB7
CisJCXJldCA9IFZNX0ZBVUxUX1NJR0JVUzsKKwkJZ290byBvdXRfdW5sb2NrOworCX0KKworCWlm
ICh2Ym8tPmRpcnR5ICYmIHZiby0+ZGlydHktPm1ldGhvZCA9PSBWTVdfQk9fRElSVFlfTUtXUklU
RSAmJgorCSAgICAhdGVzdF9iaXQocGFnZV9vZmZzZXQsICZ2Ym8tPmRpcnR5LT5iaXRtYXBbMF0p
KSB7CisJCXN0cnVjdCB2bXdfYm9fZGlydHkgKmRpcnR5ID0gdmJvLT5kaXJ0eTsKKworCQlfX3Nl
dF9iaXQocGFnZV9vZmZzZXQsICZkaXJ0eS0+Yml0bWFwWzBdKTsKKwkJZGlydHktPnN0YXJ0ID0g
bWluKGRpcnR5LT5zdGFydCwgcGFnZV9vZmZzZXQpOworCQlkaXJ0eS0+ZW5kID0gbWF4KGRpcnR5
LT5lbmQsIHBhZ2Vfb2Zmc2V0ICsgMSk7CisJfQorCitvdXRfdW5sb2NrOgorCXJlc2VydmF0aW9u
X29iamVjdF91bmxvY2soYm8tPnJlc3YpOworCXJldHVybiByZXQ7Cit9CisKK3ZtX2ZhdWx0X3Qg
dm13X2JvX3ZtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAqdm1mKQoreworCXN0cnVjdCB2bV9hcmVh
X3N0cnVjdCAqdm1hID0gdm1mLT52bWE7CisJc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibyA9
IChzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKikKKwkgICAgdm1hLT52bV9wcml2YXRlX2RhdGE7
CisJc3RydWN0IHZtd19idWZmZXJfb2JqZWN0ICp2Ym8gPQorCQljb250YWluZXJfb2YoYm8sIHN0
cnVjdCB2bXdfYnVmZmVyX29iamVjdCwgYmFzZSk7CisJcGdvZmZfdCBudW1fcHJlZmF1bHQ7CisJ
cGdwcm90X3QgcHJvdDsKKwl2bV9mYXVsdF90IHJldDsKKworCXJldCA9IHR0bV9ib192bV9yZXNl
cnZlKGJvLCB2bWYpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKgorCSAqIFRoaXMg
d2lsbCBjYXVzZSBta3dyaXRlKCkgdG8gYmUgY2FsbGVkIGZvciBlYWNoIHB0ZSBvbgorCSAqIHdy
aXRlLWVuYWJsZSB2bWFzLgorCSAqLworCWlmICh2Ym8tPmRpcnR5ICYmIHZiby0+ZGlydHktPm1l
dGhvZCA9PSBWTVdfQk9fRElSVFlfTUtXUklURSkKKwkJcHJvdCA9IHZtYS0+dm1fcGFnZV9wcm90
OworCWVsc2UKKwkJcHJvdCA9IHZtX2dldF9wYWdlX3Byb3Qodm1hLT52bV9mbGFncyk7CisKKwlu
dW1fcHJlZmF1bHQgPSAodm1hLT52bV9mbGFncyAmIFZNX1JBTkRfUkVBRCkgPyAwIDoKKwkJVFRN
X0JPX1ZNX05VTV9QUkVGQVVMVDsKKwlyZXQgPSB0dG1fYm9fdm1fZmF1bHRfcmVzZXJ2ZWQodm1m
LCBwcm90LCBudW1fcHJlZmF1bHQpOworCWlmIChyZXQgPT0gVk1fRkFVTFRfUkVUUlkgJiYgISh2
bWYtPmZsYWdzICYgRkFVTFRfRkxBR19SRVRSWV9OT1dBSVQpKQorCQlyZXR1cm4gcmV0OworCisJ
cmVzZXJ2YXRpb25fb2JqZWN0X3VubG9jayhiby0+cmVzdik7CisJcmV0dXJuIHJldDsKK30KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMgYi9kcml2
ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9yZXNvdXJjZS5jCmluZGV4IDU1ODFhNzgyNmI0Yy4u
ZTRjOTdhNGNmMmZmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF9y
ZXNvdXJjZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlLmMK
QEAgLTExOSw2ICsxMTksMTAgQEAgc3RhdGljIHZvaWQgdm13X3Jlc291cmNlX3JlbGVhc2Uoc3Ry
dWN0IGtyZWYgKmtyZWYpCiAJCX0KIAkJcmVzLT5iYWNrdXBfZGlydHkgPSBmYWxzZTsKIAkJdm13
X3Jlc291cmNlX21vYl9kZXRhY2gocmVzKTsKKwkJaWYgKHJlcy0+ZGlydHkpCisJCQlyZXMtPmZ1
bmMtPmRpcnR5X2ZyZWUocmVzKTsKKwkJaWYgKHJlcy0+Y29oZXJlbnQpCisJCQl2bXdfYm9fZGly
dHlfcmVsZWFzZShyZXMtPmJhY2t1cCk7CiAJCXR0bV9ib191bnJlc2VydmUoYm8pOwogCQl2bXdf
Ym9fdW5yZWZlcmVuY2UoJnJlcy0+YmFja3VwKTsKIAl9CkBAIC0yMDgsNyArMjEyLDkgQEAgaW50
IHZtd19yZXNvdXJjZV9pbml0KHN0cnVjdCB2bXdfcHJpdmF0ZSAqZGV2X3ByaXYsIHN0cnVjdCB2
bXdfcmVzb3VyY2UgKnJlcywKIAlyZXMtPmJhY2t1cF9vZmZzZXQgPSAwOwogCXJlcy0+YmFja3Vw
X2RpcnR5ID0gZmFsc2U7CiAJcmVzLT5yZXNfZGlydHkgPSBmYWxzZTsKKwlyZXMtPmNvaGVyZW50
ID0gZmFsc2U7CiAJcmVzLT51c2VkX3ByaW8gPSAzOworCXJlcy0+ZGlydHkgPSBOVUxMOwogCWlm
IChkZWxheV9pZCkKIAkJcmV0dXJuIDA7CiAJZWxzZQpAQCAtMzk1LDYgKzQwMSwzMCBAQCBzdGF0
aWMgaW50IHZtd19yZXNvdXJjZV9kb192YWxpZGF0ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMs
CiAJCQl2bXdfcmVzb3VyY2VfbW9iX2F0dGFjaChyZXMpOwogCX0KIAorCS8qCisJICogSGFuZGxl
IHRoZSBjYXNlIHdoZXJlIHRoZSBiYWNrdXAgbW9iIGlzIG1hcmtlZCBjb2hlcmVudCBidXQKKwkg
KiB0aGUgcmVzb3VyY2UgaXNuJ3QuCisJICovCisJaWYgKGZ1bmMtPmRpcnR5X2FsbG9jICYmIHZt
d19yZXNvdXJjZV9tb2JfYXR0YWNoZWQocmVzKSAmJgorCSAgICAhcmVzLT5jb2hlcmVudCkgewor
CQlpZiAocmVzLT5iYWNrdXAtPmRpcnR5ICYmICFyZXMtPmRpcnR5KSB7CisJCQlyZXQgPSBmdW5j
LT5kaXJ0eV9hbGxvYyhyZXMpOworCQkJaWYgKHJldCkKKwkJCQlyZXR1cm4gcmV0OworCQl9IGVs
c2UgaWYgKCFyZXMtPmJhY2t1cC0+ZGlydHkgJiYgcmVzLT5kaXJ0eSkgeworCQkJZnVuYy0+ZGly
dHlfZnJlZShyZXMpOworCQl9CisJfQorCisJLyoKKwkgKiBUcmFuc2ZlciB0aGUgZGlydHkgcmVn
aW9ucyB0byB0aGUgcmVzb3VyY2UgYW5kIHVwZGF0ZQorCSAqIHRoZSByZXNvdXJjZS4KKwkgKi8K
KwlpZiAocmVzLT5kaXJ0eSkgeworCQl2bXdfYm9fZGlydHlfdHJhbnNmZXJfdG9fcmVzKHJlcyk7
CisJCXJldHVybiBmdW5jLT5kaXJ0eV9zeW5jKHJlcyk7CisJfQorCiAJcmV0dXJuIDA7CiAKIG91
dF9iaW5kX2ZhaWxlZDoKQEAgLTQzMywxNiArNDYzLDI4IEBAIHZvaWQgdm13X3Jlc291cmNlX3Vu
cmVzZXJ2ZShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsCiAJaWYgKHN3aXRjaF9iYWNrdXAgJiYg
bmV3X2JhY2t1cCAhPSByZXMtPmJhY2t1cCkgewogCQlpZiAocmVzLT5iYWNrdXApIHsKIAkJCXZt
d19yZXNvdXJjZV9tb2JfZGV0YWNoKHJlcyk7CisJCQlpZiAocmVzLT5jb2hlcmVudCkKKwkJCQl2
bXdfYm9fZGlydHlfcmVsZWFzZShyZXMtPmJhY2t1cCk7CiAJCQl2bXdfYm9fdW5yZWZlcmVuY2Uo
JnJlcy0+YmFja3VwKTsKIAkJfQogCiAJCWlmIChuZXdfYmFja3VwKSB7CiAJCQlyZXMtPmJhY2t1
cCA9IHZtd19ib19yZWZlcmVuY2UobmV3X2JhY2t1cCk7CisKKwkJCS8qCisJCQkgKiBUaGUgdmFs
aWRhdGlvbiBjb2RlIHNob3VsZCBhbHJlYWR5IGhhdmUgYWRkZWQgYQorCQkJICogZGlydHkgdHJh
Y2tlciBoZXJlLgorCQkJICovCisJCQlXQVJOX09OKHJlcy0+Y29oZXJlbnQgJiYgIW5ld19iYWNr
dXAtPmRpcnR5KTsKKwogCQkJdm13X3Jlc291cmNlX21vYl9hdHRhY2gocmVzKTsKIAkJfSBlbHNl
IHsKIAkJCXJlcy0+YmFja3VwID0gTlVMTDsKIAkJfQorCX0gZWxzZSBpZiAoc3dpdGNoX2JhY2t1
cCAmJiByZXMtPmNvaGVyZW50KSB7CisJCXZtd19ib19kaXJ0eV9yZWxlYXNlKHJlcy0+YmFja3Vw
KTsKIAl9CisKIAlpZiAoc3dpdGNoX2JhY2t1cCkKIAkJcmVzLT5iYWNrdXBfb2Zmc2V0ID0gbmV3
X2JhY2t1cF9vZmZzZXQ7CiAKQEAgLTEwMDgsMyArMTA1MCwxOCBAQCBlbnVtIHZtd19yZXNfdHlw
ZSB2bXdfcmVzX3R5cGUoY29uc3Qgc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKQogewogCXJldHVy
biByZXMtPmZ1bmMtPnJlc190eXBlOwogfQorCisvKioKKyAqIHZtd19yZXNvdXJjZV91cGRhdGVf
ZGlydHkgLSBVcGRhdGUgYSByZXNvdXJjZSdzIGRpcnR5IHRyYWNrZXIgd2l0aCBhCisgKiBzZXF1
ZW50aWFsIHJhbmdlIG9mIHRvdWNoZWQgYmFja2luZyBzdG9yZSBtZW1vcnkuCisgKiBAcmVzOiBU
aGUgcmVzb3VyY2UuCisgKiBAc3RhcnQ6IFRoZSBmaXJzdCBwYWdlIHRvdWNoZWQuCisgKiBAZW5k
OiBUaGUgbGFzdCBwYWdlIHRvdWNoZWQgKyAxLgorICovCit2b2lkIHZtd19yZXNvdXJjZV9kaXJ0
eV91cGRhdGUoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzLCBwZ29mZl90IHN0YXJ0LAorCQkJICAg
ICAgIHBnb2ZmX3QgZW5kKQoreworCWlmIChyZXMtPmRpcnR5KQorCQlyZXMtPmZ1bmMtPmRpcnR5
X3JhbmdlX2FkZChyZXMsIHN0YXJ0IDw8IFBBR0VfU0hJRlQsCisJCQkJCSAgIGVuZCA8PCBQQUdF
X1NISUZUKTsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jl
c291cmNlX3ByaXYuaCBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlX3By
aXYuaAppbmRleCA5ODRlNTg4YzYyY2EuLmM4NTE0NDI4NmNmZSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfcmVzb3VyY2VfcHJpdi5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS92bXdnZngvdm13Z2Z4X3Jlc291cmNlX3ByaXYuaApAQCAtNzEsNiArNzEsMTIgQEAgc3Ry
dWN0IHZtd191c2VyX3Jlc291cmNlX2NvbnYgewogICogQGNvbW1pdF9ub3RpZnk6ICAgICBJZiB0
aGUgcmVzb3VyY2UgaXMgYSBjb21tYW5kIGJ1ZmZlciBtYW5hZ2VkIHJlc291cmNlLAogICogICAg
ICAgICAgICAgICAgICAgICBjYWxsYmFjayB0byBub3RpZnkgdGhhdCBhIGRlZmluZSBvciByZW1v
dmUgY29tbWFuZAogICogICAgICAgICAgICAgICAgICAgICBoYXMgYmVlbiBjb21taXR0ZWQgdG8g
dGhlIGRldmljZS4KKyAqIEBkaXJ0eV9hbGxvYzogICAgICAgQWxsb2NhdGUgYSBkaXJ0eSB0cmFj
a2VyLiBOVUxMIGlmIGRpcnR5LXRyYWNraW5nIGlzIG5vdAorICogICAgICAgICAgICAgICAgICAg
ICBzdXBwb3J0ZWQuCisgKiBAZGlydHlfZnJlZTogICAgICAgIEZyZWUgdGhlIGRpcnR5IHRyYWNr
ZXIuCisgKiBAZGlydHlfc3luYzogICAgICAgIFVwbG9hZCB0aGUgZGlydHkgbW9iIGNvbnRlbnRz
IHRvIHRoZSByZXNvdXJjZS4KKyAqIEBkaXJ0eV9hZGRfcmFuZ2U6ICAgQWRkIGEgc2VxdWVudGlh
bCBkaXJ0eSByYW5nZSB0byB0aGUgcmVzb3VyY2UKKyAqICAgICAgICAgICAgICAgICAgICAgZGly
dHkgdHJhY2tlci4KICAqLwogc3RydWN0IHZtd19yZXNfZnVuYyB7CiAJZW51bSB2bXdfcmVzX3R5
cGUgcmVzX3R5cGU7CkBAIC05MCw2ICs5NiwxMSBAQCBzdHJ1Y3Qgdm13X3Jlc19mdW5jIHsKIAkJ
ICAgICAgIHN0cnVjdCB0dG1fdmFsaWRhdGVfYnVmZmVyICp2YWxfYnVmKTsKIAl2b2lkICgqY29t
bWl0X25vdGlmeSkoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzLAogCQkJICAgICAgZW51bSB2bXdf
Y21kYnVmX3Jlc19zdGF0ZSBzdGF0ZSk7CisJaW50ICgqZGlydHlfYWxsb2MpKHN0cnVjdCB2bXdf
cmVzb3VyY2UgKnJlcyk7CisJdm9pZCAoKmRpcnR5X2ZyZWUpKHN0cnVjdCB2bXdfcmVzb3VyY2Ug
KnJlcyk7CisJaW50ICgqZGlydHlfc3luYykoc3RydWN0IHZtd19yZXNvdXJjZSAqcmVzKTsKKwl2
b2lkICgqZGlydHlfcmFuZ2VfYWRkKShzdHJ1Y3Qgdm13X3Jlc291cmNlICpyZXMsIHNpemVfdCBz
dGFydCwKKwkJCQkgc2l6ZV90IGVuZCk7CiB9OwogCiAvKioKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uYyBiL2RyaXZlcnMvZ3B1L2RybS92bXdn
Zngvdm13Z2Z4X3ZhbGlkYXRpb24uYwppbmRleCBmNjExYjIyOTBhMWIuLjcxMzQ5YTdiYWU5MCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3Ztd2dmeC92bXdnZnhfdmFsaWRhdGlvbi5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3ZhbGlkYXRpb24uYwpAQCAtMzMsNiAr
MzMsOCBAQAogICogc3RydWN0IHZtd192YWxpZGF0aW9uX2JvX25vZGUgLSBCdWZmZXIgb2JqZWN0
IHZhbGlkYXRpb24gbWV0YWRhdGEuCiAgKiBAYmFzZTogTWV0YWRhdGEgdXNlZCBmb3IgVFRNIHJl
c2VydmF0aW9uLSBhbmQgdmFsaWRhdGlvbi4KICAqIEBoYXNoOiBBIGhhc2ggZW50cnkgdXNlZCBm
b3IgdGhlIGR1cGxpY2F0ZSBkZXRlY3Rpb24gaGFzaCB0YWJsZS4KKyAqIEBjb2hlcmVudF9jb3Vu
dDogSWYgc3dpdGNoaW5nIGJhY2t1cCBidWZmZXJzLCBudW1iZXIgb2YgbmV3IGNvaGVyZW50Cisg
KiByZXNvdXJjZXMgdGhhdCB3aWxsIGhhdmUgdGhpcyBidWZmZXIgYXMgYSBiYWNrdXAgYnVmZmVy
LgogICogQGFzX21vYjogVmFsaWRhdGUgYXMgbW9iLgogICogQGNwdV9ibGl0OiBWYWxpZGF0ZSBm
b3IgY3B1IGJsaXQgYWNjZXNzLgogICoKQEAgLTQyLDYgKzQ0LDcgQEAKIHN0cnVjdCB2bXdfdmFs
aWRhdGlvbl9ib19ub2RlIHsKIAlzdHJ1Y3QgdHRtX3ZhbGlkYXRlX2J1ZmZlciBiYXNlOwogCXN0
cnVjdCBkcm1faGFzaF9pdGVtIGhhc2g7CisJdW5zaWduZWQgaW50IGNvaGVyZW50X2NvdW50Owog
CXUzMiBhc19tb2IgOiAxOwogCXUzMiBjcHVfYmxpdCA6IDE7CiB9OwpAQCAtNDU5LDYgKzQ2Miwx
OSBAQCBpbnQgdm13X3ZhbGlkYXRpb25fcmVzX3Jlc2VydmUoc3RydWN0IHZtd192YWxpZGF0aW9u
X2NvbnRleHQgKmN0eCwKIAkJCWlmIChyZXQpCiAJCQkJZ290byBvdXRfdW5yZXNlcnZlOwogCQl9
CisKKwkJaWYgKHZhbC0+c3dpdGNoaW5nX2JhY2t1cCAmJiB2YWwtPm5ld19iYWNrdXAgJiYKKwkJ
ICAgIHJlcy0+Y29oZXJlbnQpIHsKKwkJCXN0cnVjdCB2bXdfdmFsaWRhdGlvbl9ib19ub2RlICpi
b19ub2RlID0KKwkJCQl2bXdfdmFsaWRhdGlvbl9maW5kX2JvX2R1cChjdHgsCisJCQkJCQkJICAg
dmFsLT5uZXdfYmFja3VwKTsKKworCQkJaWYgKFdBUk5fT04oIWJvX25vZGUpKSB7CisJCQkJcmV0
ID0gLUVJTlZBTDsKKwkJCQlnb3RvIG91dF91bnJlc2VydmU7CisJCQl9CisJCQlib19ub2RlLT5j
b2hlcmVudF9jb3VudCsrOworCQl9CiAJfQogCiAJcmV0dXJuIDA7CkBAIC01NjIsNiArNTc4LDkg
QEAgaW50IHZtd192YWxpZGF0aW9uX2JvX3ZhbGlkYXRlKHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9j
b250ZXh0ICpjdHgsIGJvb2wgaW50cikKIAlpbnQgcmV0OwogCiAJbGlzdF9mb3JfZWFjaF9lbnRy
eShlbnRyeSwgJmN0eC0+Ym9fbGlzdCwgYmFzZS5oZWFkKSB7CisJCXN0cnVjdCB2bXdfYnVmZmVy
X29iamVjdCAqdmJvID0KKwkJCWNvbnRhaW5lcl9vZihlbnRyeS0+YmFzZS5ibywgdHlwZW9mKCp2
Ym8pLCBiYXNlKTsKKwogCQlpZiAoZW50cnktPmNwdV9ibGl0KSB7CiAJCQlzdHJ1Y3QgdHRtX29w
ZXJhdGlvbl9jdHggY3R4ID0gewogCQkJCS5pbnRlcnJ1cHRpYmxlID0gaW50ciwKQEAgLTU3Niw2
ICs1OTUsMjcgQEAgaW50IHZtd192YWxpZGF0aW9uX2JvX3ZhbGlkYXRlKHN0cnVjdCB2bXdfdmFs
aWRhdGlvbl9jb250ZXh0ICpjdHgsIGJvb2wgaW50cikKIAkJfQogCQlpZiAocmV0KQogCQkJcmV0
dXJuIHJldDsKKworCQkvKgorCQkgKiBSYXRoZXIgdGhhbiBoYXZpbmcgdGhlIHJlc291cmNlIGNv
ZGUgYWxsb2NhdGluZyB0aGUgYm8KKwkJICogZGlydHkgdHJhY2tlciBpbiByZXNvdXJjZV91bnJl
c2VydmUoKSB3aGVyZSB3ZSBjYW4ndCBmYWlsLAorCQkgKiBEbyBpdCBoZXJlIHdoZW4gdmFsaWRh
dGluZyB0aGUgYnVmZmVyIG9iamVjdC4KKwkJICovCisJCWlmIChlbnRyeS0+Y29oZXJlbnRfY291
bnQpIHsKKwkJCXVuc2lnbmVkIGludCBjb2hlcmVudF9jb3VudCA9IGVudHJ5LT5jb2hlcmVudF9j
b3VudDsKKworCQkJd2hpbGUgKGNvaGVyZW50X2NvdW50KSB7CisJCQkJcmV0ID0gdm13X2JvX2Rp
cnR5X2FkZCh2Ym8pOworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisKKwkJCQljb2hl
cmVudF9jb3VudC0tOworCQkJfQorCQkJZW50cnktPmNvaGVyZW50X2NvdW50IC09IGNvaGVyZW50
X2NvdW50OworCQl9CisKKwkJaWYgKHZiby0+ZGlydHkpCisJCQl2bXdfYm9fZGlydHlfc2Nhbih2
Ym8pOwogCX0KIAlyZXR1cm4gMDsKIH0KQEAgLTgyOCwzICs4NjgsMzQgQEAgaW50IHZtd192YWxp
ZGF0aW9uX3ByZWxvYWRfcmVzKHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9jb250ZXh0ICpjdHgsCiAJ
Y3R4LT5tZW1fc2l6ZV9sZWZ0ICs9IHNpemU7CiAJcmV0dXJuIDA7CiB9CisKKy8qKgorICogdm13
X3ZhbGlkYXRpb25fYm9fYmFja29mZiAtIFVucmVzZXJ2ZSBidWZmZXIgb2JqZWN0cyByZWdpc3Rl
cmVkIHdpdGggYQorICogdmFsaWRhdGlvbiBjb250ZXh0CisgKiBAY3R4OiBUaGUgdmFsaWRhdGlv
biBjb250ZXh0CisgKgorICogVGhpcyBmdW5jdGlvbiB1bnJlc2VydmVzIHRoZSBidWZmZXIgb2Jq
ZWN0cyBwcmV2aW91c2x5IHJlc2VydmVkIHVzaW5nCisgKiB2bXdfdmFsaWRhdGlvbl9ib19yZXNl
cnZlLiBJdCdzIHR5cGljYWxseSB1c2VkIGFzIHBhcnQgb2YgYW4gZXJyb3IgcGF0aAorICovCit2
b2lkIHZtd192YWxpZGF0aW9uX2JvX2JhY2tvZmYoc3RydWN0IHZtd192YWxpZGF0aW9uX2NvbnRl
eHQgKmN0eCkKK3sKKwlzdHJ1Y3Qgdm13X3ZhbGlkYXRpb25fYm9fbm9kZSAqZW50cnk7CisKKwkv
KgorCSAqIFN3aXRjaGluZyBjb2hlcmVudCByZXNvdXJjZSBiYWNrdXAgYnVmZmVycyBmYWlsZWQu
CisJICogUmVsZWFzZSBjb3JyZXNwb25kaW5nIGJ1ZmZlciBvYmplY3QgZGlydHkgdHJhY2tlcnMu
CisJICovCisJbGlzdF9mb3JfZWFjaF9lbnRyeShlbnRyeSwgJmN0eC0+Ym9fbGlzdCwgYmFzZS5o
ZWFkKSB7CisJCWlmIChlbnRyeS0+Y29oZXJlbnRfY291bnQpIHsKKwkJCXVuc2lnbmVkIGludCBj
b2hlcmVudF9jb3VudCA9IGVudHJ5LT5jb2hlcmVudF9jb3VudDsKKwkJCXN0cnVjdCB2bXdfYnVm
ZmVyX29iamVjdCAqdmJvID0KKwkJCQljb250YWluZXJfb2YoZW50cnktPmJhc2UuYm8sIHR5cGVv
ZigqdmJvKSwKKwkJCQkJICAgICBiYXNlKTsKKworCQkJd2hpbGUgKGNvaGVyZW50X2NvdW50LS0p
CisJCQkJdm13X2JvX2RpcnR5X3JlbGVhc2UodmJvKTsKKwkJfQorCX0KKworCXR0bV9ldV9iYWNr
b2ZmX3Jlc2VydmF0aW9uKCZjdHgtPnRpY2tldCwgJmN0eC0+Ym9fbGlzdCk7Cit9CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxpZGF0aW9uLmggYi9kcml2ZXJz
L2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxpZGF0aW9uLmgKaW5kZXggMGUwNjM3NDNkZDg2Li40
Y2VlM2Y3MzI1ODggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92bXdnZngvdm13Z2Z4X3Zh
bGlkYXRpb24uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vdm13Z2Z4L3Ztd2dmeF92YWxpZGF0aW9u
LmgKQEAgLTE3MywyMCArMTczLDYgQEAgdm13X3ZhbGlkYXRpb25fYm9fcmVzZXJ2ZShzdHJ1Y3Qg
dm13X3ZhbGlkYXRpb25fY29udGV4dCAqY3R4LAogCQkJCSAgICAgIE5VTEwsIHRydWUpOwogfQog
Ci0vKioKLSAqIHZtd192YWxpZGF0aW9uX2JvX2JhY2tvZmYgLSBVbnJlc2VydmUgYnVmZmVyIG9i
amVjdHMgcmVnaXN0ZXJlZCB3aXRoIGEKLSAqIHZhbGlkYXRpb24gY29udGV4dAotICogQGN0eDog
VGhlIHZhbGlkYXRpb24gY29udGV4dAotICoKLSAqIFRoaXMgZnVuY3Rpb24gdW5yZXNlcnZlcyB0
aGUgYnVmZmVyIG9iamVjdHMgcHJldmlvdXNseSByZXNlcnZlZCB1c2luZwotICogdm13X3ZhbGlk
YXRpb25fYm9fcmVzZXJ2ZS4gSXQncyB0eXBpY2FsbHkgdXNlZCBhcyBwYXJ0IG9mIGFuIGVycm9y
IHBhdGgKLSAqLwotc3RhdGljIGlubGluZSB2b2lkCi12bXdfdmFsaWRhdGlvbl9ib19iYWNrb2Zm
KHN0cnVjdCB2bXdfdmFsaWRhdGlvbl9jb250ZXh0ICpjdHgpCi17Ci0JdHRtX2V1X2JhY2tvZmZf
cmVzZXJ2YXRpb24oJmN0eC0+dGlja2V0LCAmY3R4LT5ib19saXN0KTsKLX0KLQogLyoqCiAgKiB2
bXdfdmFsaWRhdGlvbl9ib19mZW5jZSAtIFVucmVzZXJ2ZSBhbmQgZmVuY2UgYnVmZmVyIG9iamVj
dHMgcmVnaXN0ZXJlZAogICogd2l0aCBhIHZhbGlkYXRpb24gY29udGV4dApAQCAtMjY5LDQgKzI1
NSw2IEBAIGludCB2bXdfdmFsaWRhdGlvbl9wcmVsb2FkX3JlcyhzdHJ1Y3Qgdm13X3ZhbGlkYXRp
b25fY29udGV4dCAqY3R4LAogCQkJICAgICAgIHVuc2lnbmVkIGludCBzaXplKTsKIHZvaWQgdm13
X3ZhbGlkYXRpb25fcmVzX3NldF9kaXJ0eShzdHJ1Y3Qgdm13X3ZhbGlkYXRpb25fY29udGV4dCAq
Y3R4LAogCQkJCSAgdm9pZCAqdmFsX3ByaXZhdGUsIHUzMiBkaXJ0eSk7Cit2b2lkIHZtd192YWxp
ZGF0aW9uX2JvX2JhY2tvZmYoc3RydWN0IHZtd192YWxpZGF0aW9uX2NvbnRleHQgKmN0eCk7CisK
ICNlbmRpZgotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVz
a3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9k
cmktZGV2ZWw=
