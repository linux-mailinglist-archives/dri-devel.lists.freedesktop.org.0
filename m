Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3A76AD8982
	for <lists+dri-devel@lfdr.de>; Wed, 16 Oct 2019 09:34:09 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DE8CA6E8D8;
	Wed, 16 Oct 2019 07:33:47 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pg1-x541.google.com (mail-pg1-x541.google.com
 [IPv6:2607:f8b0:4864:20::541])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D86B86E884
 for <dri-devel@lists.freedesktop.org>; Tue, 15 Oct 2019 18:16:29 +0000 (UTC)
Received: by mail-pg1-x541.google.com with SMTP id e13so4416302pga.7
 for <dri-devel@lists.freedesktop.org>; Tue, 15 Oct 2019 11:16:29 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=LhsrwTYF5Hs5+xaYqnrF1aDXJkncmUn1XCWn3eOwVlo=;
 b=ZGBljWwtBfS2ypRLaepK2iYBkoBX/j5+IWhj7Ce8C4oFOJhb5fGjAKq0P+mYnlldBt
 FRMv5gxkxrAkgZFl6Bsnq3bRbms9Fj3ldE70mBJHvP3K52kEYFnxxzX7U4s4jKmQbtlZ
 JPKQLCM6wWA/FE7msNvxr9uAiwwe9m028HrjbWqCtNjS/fOGcdXSVuyk29qiK+yXfUQO
 JsjhZo9QeH1mnBTy81wGTeygQ1rfUT4nOOIiWKFjxlCaYtq7k7RAU45OGIueIxyUEaWm
 p3P/z46R8rXwTq6SpyQbWpnjqoE8xbXZml0qvhSsWxPLcLyfvio0/N9N0UU+HlqUm1Hg
 0zhQ==
X-Gm-Message-State: APjAAAXWJ3xUCp11GIGjKsq8uLVJUDUJi2tD0bVcGuzypKEacbaS/N5R
 fIxgbugCrzY2moIoZ257QyvGAA==
X-Google-Smtp-Source: APXvYqwTNt9Eonm7aD/OgnNnlRng5e5yjyqmkIorHuTKZRGz+GNBZAM9s/KJsVySlPCxPVzZ7SqvGA==
X-Received: by 2002:a62:5ec6:: with SMTP id
 s189mr39679424pfb.169.1571163388735; 
 Tue, 15 Oct 2019 11:16:28 -0700 (PDT)
Received: from ziepe.ca ([24.114.26.129])
 by smtp.gmail.com with ESMTPSA id w12sm8438765pfq.138.2019.10.15.11.16.27
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Tue, 15 Oct 2019 11:16:28 -0700 (PDT)
Received: from jgg by jggl.ziepe.ca with local (Exim 4.90_1)
 (envelope-from <jgg@ziepe.ca>)
 id 1iKRJT-0002Br-9R; Tue, 15 Oct 2019 15:12:51 -0300
From: Jason Gunthorpe <jgg@ziepe.ca>
To: Jerome Glisse <jglisse@redhat.com>, Ralph Campbell <rcampbell@nvidia.com>,
 John Hubbard <jhubbard@nvidia.com>, Felix.Kuehling@amd.com
Subject: [PATCH hmm 02/15] mm/mmu_notifier: add an interval tree notifier
Date: Tue, 15 Oct 2019 15:12:29 -0300
Message-Id: <20191015181242.8343-3-jgg@ziepe.ca>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191015181242.8343-1-jgg@ziepe.ca>
References: <20191015181242.8343-1-jgg@ziepe.ca>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 16 Oct 2019 07:33:45 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=ziepe.ca; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=LhsrwTYF5Hs5+xaYqnrF1aDXJkncmUn1XCWn3eOwVlo=;
 b=kqRSyJAZYW9qV+JxDhuSt7/D+h3Kx+X6hbiT608Rj6KMXtesWZK7tSx6vs13+HijdW
 89z4EckwqO1ck2klHSb9KeJq6PJ/PdJTUdgWmH09gVEjv8zM1CvwSh8JMRzUXntKjYJW
 qqStCcRwIYi2r4tXbYJD++OZz7jWr4lQ0vyM68oT9LY7r/rPSf+6g2BL7PUeQ+DfZ5P7
 cJi+RHhkbIG9Sa7xoauRM7eCISLP8vsJsc+8NNRjs2h46ukn2Pg/U5bbSLI5RN23kbvc
 HKl7IQVQCEPVncP9EVh7h0uJR4C5WGSRgNzCNbDJkJ614FMVQMeDeyNdWoPOrJ9eJlAy
 bO7Q==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Andrea Arcangeli <aarcange@redhat.com>, linux-rdma@vger.kernel.org,
 amd-gfx@lists.freedesktop.org, Michal Hocko <mhocko@kernel.org>,
 linux-mm@kvack.org, Jason Gunthorpe <jgg@mellanox.com>,
 dri-devel@lists.freedesktop.org, Ben Skeggs <bskeggs@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogSmFzb24gR3VudGhvcnBlIDxqZ2dAbWVsbGFub3guY29tPgoKT2YgdGhlIDEzIHVzZXJz
IG9mIG1tdV9ub3RpZmllcnMsIDggb2YgdGhlbSB1c2Ugb25seQppbnZhbGlkYXRlX3JhbmdlX3N0
YXJ0L2VuZCgpIGFuZCBpbW1lZGlhdGVseSBpbnRlcnNlY3QgdGhlCm1tdV9ub3RpZmllcl9yYW5n
ZSB3aXRoIHNvbWUga2luZCBvZiBpbnRlcm5hbCBsaXN0IG9mIFZBcy4gIDQgdXNlIGFuCmludGVy
dmFsIHRyZWUgKGk5MTVfZ2VtLCByYWRlb25fbW4sIHVtZW1fb2RwLCBoZmkxKS4gNCB1c2UgYSBs
aW5rZWQgbGlzdApvZiBzb21lIGtpbmQgKHNjaWZfZG1hLCB2aG9zdCwgZ250ZGV2LCBobW0pCgpB
bmQgdGhlIHJlbWFpbmluZyA1IGVpdGhlciBkb24ndCB1c2UgaW52YWxpZGF0ZV9yYW5nZV9zdGFy
dCgpIG9yIGRvIHNvbWUKc3BlY2lhbCB0aGluZyB3aXRoIGl0LgoKSXQgdHVybnMgb3V0IHRoYXQg
YnVpbGRpbmcgYSBjb3JyZWN0IHNjaGVtZSB3aXRoIGFuIGludGVydmFsIHRyZWUgaXMKcHJldHR5
IGNvbXBsaWNhdGVkLCBwYXJ0aWN1bGFybHkgaWYgdGhlIHVzZSBjYXNlIGlzIHN5bmNocm9uaXpp
bmcgYWdhaW5zdAphbm90aGVyIHRocmVhZCBkb2luZyBnZXRfdXNlcl9wYWdlcygpLiAgTWFueSBv
ZiB0aGVzZSBpbXBsZW1lbnRhdGlvbnMgaGF2ZQp2YXJpb3VzIHN1YnRsZSBhbmQgZGlmZmljdWx0
IHRvIGZpeCByYWNlcy4KClRoaXMgYXBwcm9hY2ggcHV0cyB0aGUgaW50ZXJ2YWwgdHJlZSBhcyBj
b21tb24gY29kZSBhdCB0aGUgdG9wIG9mIHRoZSBtbXUKbm90aWZpZXIgY2FsbCB0cmVlIGFuZCBp
bXBsZW1lbnRzIGEgc2hhcmVhYmxlIGxvY2tpbmcgc2NoZW1lLgoKSXQgaW5jbHVkZXM6CiAtIEFu
IGludGVydmFsIHRyZWUgdHJhY2tpbmcgVkEgcmFuZ2VzLCB3aXRoIHBlci1yYW5nZSBjYWxsYmFj
a3MKIC0gQSByZWFkL3dyaXRlIGxvY2tpbmcgc2NoZW1lIGZvciB0aGUgaW50ZXJ2YWwgdHJlZSB0
aGF0IGF2b2lkcwogICBzbGVlcGluZyBpbiB0aGUgbm90aWZpZXIgcGF0aCAoZm9yIE9PTSBraWxs
ZXIpCiAtIEEgc2VxdWVuY2UgY291bnRlciBiYXNlZCBjb2xsaXNpb24tcmV0cnkgbG9ja2luZyBz
Y2hlbWUgdG8gdGVsbAogICBkZXZpY2UgcGFnZSBmYXVsdCB0aGF0IGEgVkEgcmFuZ2UgaXMgYmVp
bmcgY29uY3VycmVudGx5IGludmFsaWRhdGVkLgoKVGhpcyBpcyBiYXNlZCBvbiB2YXJpb3VzIGlk
ZWFzOgotIGhtbSBhY2N1bXVsYXRlcyBpbnZhbGlkYXRlZCBWQSByYW5nZXMgYW5kIHJlbGVhc2Vz
IHRoZW0gd2hlbiBhbGwKICBpbnZhbGlkYXRlcyBhcmUgZG9uZSwgdmlhIGFjdGl2ZV9pbnZhbGlk
YXRlX3JhbmdlcyBjb3VudC4KICBUaGlzIGFwcHJvYWNoIGF2b2lkcyBoYXZpbmcgdG8gaW50ZXJz
ZWN0IHRoZSBpbnRlcnZhbCB0cmVlIHR3aWNlIChhcwogIHVtZW1fb2RwIGRvZXMpIGF0IHRoZSBw
b3RlbnRpYWwgY29zdCBvZiBhIGxvbmdlciBkZXZpY2UgcGFnZSBmYXVsdC4KCi0ga3ZtL3VtZW1f
b2RwIHVzZSBhIHNlcXVlbmNlIGNvdW50ZXIgdG8gZHJpdmUgdGhlIGNvbGxpc2lvbiByZXRyeSwK
ICB2aWEgaW52YWxpZGF0ZV9zZXEKCi0gYSBkZWZlcnJlZCB3b3JrIHRvZG8gbGlzdCBvbiB1bmxv
Y2sgc2NoZW1lIGxpa2UgUlROTCwgdmlhIGRlZmVycmVkX2xpc3QuCiAgVGhpcyBtYWtlcyBhZGRp
bmcvcmVtb3ZpbmcgaW50ZXJ2YWwgdHJlZSBtZW1iZXJzIG1vcmUgZGV0ZXJtaW5pc3RpYwoKLSBz
ZXFsb2NrLCBleGNlcHQgdGhpcyB2ZXJzaW9uIG1ha2VzIHRoZSBzZXFsb2NrIGlkZWEgbXVsdGkt
aG9sZGVyIG9uIHRoZQogIHdyaXRlIHNpZGUgYnkgcHJvdGVjdGluZyBpdCB3aXRoIGFjdGl2ZV9p
bnZhbGlkYXRlX3JhbmdlcyBhbmQgYSBzcGlubG9jawoKVG8gbWluaW1pemUgTU0gb3ZlcmhlYWQg
d2hlbiBvbmx5IHRoZSBpbnRlcnZhbCB0cmVlIGlzIGJlaW5nIHVzZWQsIHRoZQplbnRpcmUgU1JD
VSBhbmQgaGxpc3Qgb3ZlcmhlYWRzIGFyZSBkcm9wcGVkIHVzaW5nIHNvbWUgc2ltcGxlCmJyYW5j
aGVzLiBTaW1pbGFybHkgdGhlIGludGVydmFsIHRyZWUgb3ZlcmhlYWQgaXMgZHJvcHBlZCB3aGVu
IGluIGhsaXN0Cm1vZGUuCgpUaGUgb3ZlcmhlYWQgZnJvbSB0aGUgbWFuZGF0b3J5IHNwaW5sb2Nr
IGlzIGJyb2FkbHkgdGhlIHNhbWUgYXMgbW9zdCBvZgpleGlzdGluZyB1c2VycyB3aGljaCBhbHJl
YWR5IGhhZCBhIGxvY2sgKG9yIHR3bykgb2Ygc29tZSBzb3J0IG9uIHRoZQppbnZhbGlkYXRpb24g
cGF0aC4KCkNjOiBBbmRyZWEgQXJjYW5nZWxpIDxhYXJjYW5nZUByZWRoYXQuY29tPgpDYzogTWlj
aGFsIEhvY2tvIDxtaG9ja29Aa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogSmFzb24gR3VudGhv
cnBlIDxqZ2dAbWVsbGFub3guY29tPgotLS0KIGluY2x1ZGUvbGludXgvbW11X25vdGlmaWVyLmgg
fCAgNzggKysrKysrCiBtbS9LY29uZmlnICAgICAgICAgICAgICAgICAgIHwgICAxICsKIG1tL21t
dV9ub3RpZmllci5jICAgICAgICAgICAgfCA1MjkgKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrLS0KIDMgZmlsZXMgY2hhbmdlZCwgNTgzIGluc2VydGlvbnMoKyksIDI1IGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvbW11X25vdGlmaWVyLmggYi9pbmNsdWRl
L2xpbnV4L21tdV9ub3RpZmllci5oCmluZGV4IDEyYmQ2MDNkMzE4Y2U3Li5iYzJiMTI0ODNkZTEy
NyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9tbXVfbm90aWZpZXIuaAorKysgYi9pbmNsdWRl
L2xpbnV4L21tdV9ub3RpZmllci5oCkBAIC02LDEwICs2LDEyIEBACiAjaW5jbHVkZSA8bGludXgv
c3BpbmxvY2suaD4KICNpbmNsdWRlIDxsaW51eC9tbV90eXBlcy5oPgogI2luY2x1ZGUgPGxpbnV4
L3NyY3UuaD4KKyNpbmNsdWRlIDxsaW51eC9pbnRlcnZhbF90cmVlLmg+CiAKIHN0cnVjdCBtbXVf
bm90aWZpZXJfbW07CiBzdHJ1Y3QgbW11X25vdGlmaWVyOwogc3RydWN0IG1tdV9ub3RpZmllcl9y
YW5nZTsKK3N0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXI7CiAKIC8qKgogICogZW51bSBtbXVfbm90
aWZpZXJfZXZlbnQgLSByZWFzb24gZm9yIHRoZSBtbXUgbm90aWZpZXIgY2FsbGJhY2sKQEAgLTMy
LDYgKzM0LDkgQEAgc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZTsKICAqIGFjY2VzcyBmbGFncyku
IFVzZXIgc2hvdWxkIHNvZnQgZGlydHkgdGhlIHBhZ2UgaW4gdGhlIGVuZCBjYWxsYmFjayB0byBt
YWtlCiAgKiBzdXJlIHRoYXQgYW55b25lIHJlbHlpbmcgb24gc29mdCBkaXJ0eW5lc3MgY2F0Y2gg
cGFnZXMgdGhhdCBtaWdodCBiZSB3cml0dGVuCiAgKiB0aHJvdWdoIG5vbiBDUFUgbWFwcGluZ3Mu
CisgKgorICogQE1NVV9OT1RJRllfUkVMRUFTRTogdXNlZCBkdXJpbmcgbW11X3JhbmdlX25vdGlm
aWVyIGludmFsaWRhdGUgdG8gc2lnbmFsIHRoYXQKKyAqIHRoZSBtbSByZWZjb3VudCBpcyB6ZXJv
IGFuZCB0aGUgcmFuZ2UgaXMgbm8gbG9uZ2VyIGFjY2Vzc2libGUuCiAgKi8KIGVudW0gbW11X25v
dGlmaWVyX2V2ZW50IHsKIAlNTVVfTk9USUZZX1VOTUFQID0gMCwKQEAgLTM5LDYgKzQ0LDcgQEAg
ZW51bSBtbXVfbm90aWZpZXJfZXZlbnQgewogCU1NVV9OT1RJRllfUFJPVEVDVElPTl9WTUEsCiAJ
TU1VX05PVElGWV9QUk9URUNUSU9OX1BBR0UsCiAJTU1VX05PVElGWV9TT0ZUX0RJUlRZLAorCU1N
VV9OT1RJRllfUkVMRUFTRSwKIH07CiAKICNkZWZpbmUgTU1VX05PVElGSUVSX1JBTkdFX0JMT0NL
QUJMRSAoMSA8PCAwKQpAQCAtMjIyLDYgKzIyOCwyNSBAQCBzdHJ1Y3QgbW11X25vdGlmaWVyIHsK
IAl1bnNpZ25lZCBpbnQgdXNlcnM7CiB9OwogCisvKioKKyAqIHN0cnVjdCBtbXVfcmFuZ2Vfbm90
aWZpZXJfb3BzCisgKiBAaW52YWxpZGF0ZTogVXBvbiByZXR1cm4gdGhlIGNhbGxlciBtdXN0IHN0
b3AgdXNpbmcgYW55IFNQVEVzIHdpdGhpbiB0aGlzCisgKiAgICAgICAgICAgICAgcmFuZ2UsIHRo
aXMgZnVuY3Rpb24gY2FuIHNsZWVwLiBSZXR1cm4gZmFsc2UgaWYgYmxvY2tpbmcgd2FzCisgKiAg
ICAgICAgICAgICAgcmVxdWlyZWQgYnV0IHJhbmdlIGlzIG5vbi1ibG9ja2luZworICovCitzdHJ1
Y3QgbW11X3JhbmdlX25vdGlmaWVyX29wcyB7CisJYm9vbCAoKmludmFsaWRhdGUpKHN0cnVjdCBt
bXVfcmFuZ2Vfbm90aWZpZXIgKm1ybiwKKwkJCSAgIGNvbnN0IHN0cnVjdCBtbXVfbm90aWZpZXJf
cmFuZ2UgKnJhbmdlKTsKK307CisKK3N0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgeworCXN0cnVj
dCBpbnRlcnZhbF90cmVlX25vZGUgaW50ZXJ2YWxfdHJlZTsKKwljb25zdCBzdHJ1Y3QgbW11X3Jh
bmdlX25vdGlmaWVyX29wcyAqb3BzOworCXN0cnVjdCBobGlzdF9ub2RlIGRlZmVycmVkX2l0ZW07
CisJdW5zaWduZWQgbG9uZyBpbnZhbGlkYXRlX3NlcTsKKwlzdHJ1Y3QgbW1fc3RydWN0ICptbTsK
K307CisKICNpZmRlZiBDT05GSUdfTU1VX05PVElGSUVSCiAKICNpZmRlZiBDT05GSUdfTE9DS0RF
UApAQCAtMjYzLDYgKzI4OCw1OSBAQCBleHRlcm4gaW50IF9fbW11X25vdGlmaWVyX3JlZ2lzdGVy
KHN0cnVjdCBtbXVfbm90aWZpZXIgKm1uLAogCQkJCSAgIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKTsK
IGV4dGVybiB2b2lkIG1tdV9ub3RpZmllcl91bnJlZ2lzdGVyKHN0cnVjdCBtbXVfbm90aWZpZXIg
Km1uLAogCQkJCSAgICBzdHJ1Y3QgbW1fc3RydWN0ICptbSk7CisKK3Vuc2lnbmVkIGxvbmcgbW11
X3JhbmdlX3JlYWRfYmVnaW4oc3RydWN0IG1tdV9yYW5nZV9ub3RpZmllciAqbXJuKTsKK2ludCBt
bXVfcmFuZ2Vfbm90aWZpZXJfaW5zZXJ0KHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybiwK
KwkJCSAgICAgIHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbGVuZ3RoLAorCQkJ
ICAgICAgc3RydWN0IG1tX3N0cnVjdCAqbW0pOworaW50IG1tdV9yYW5nZV9ub3RpZmllcl9pbnNl
cnRfbG9ja2VkKHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybiwKKwkJCQkgICAgIHVuc2ln
bmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbGVuZ3RoLAorCQkJCSAgICAgc3RydWN0IG1t
X3N0cnVjdCAqbW0pOwordm9pZCBtbXVfcmFuZ2Vfbm90aWZpZXJfcmVtb3ZlKHN0cnVjdCBtbXVf
cmFuZ2Vfbm90aWZpZXIgKm1ybik7CisKKy8qKgorICogbW11X3JhbmdlX3JlYWRfcmV0cnkgLSBF
bmQgYSByZWFkIHNpZGUgY3JpdGljYWwgc2VjdGlvbiBhZ2FpbnN0IGEgVkEgcmFuZ2UKKyAqIG1y
bjogVGhlIHJhbmdlIHVuZGVyIGxvY2sKKyAqIHNlcTogVGhlIHJldHVybiBvZiB0aGUgcGFpcmVk
IG1tdV9yYW5nZV9yZWFkX2JlZ2luKCkKKyAqCisgKiBUaGlzIE1VU1QgYmUgY2FsbGVkIHVuZGVy
IGEgdXNlciBwcm92aWRlZCBsb2NrIHRoYXQgaXMgYWxzbyBoZWxkCisgKiB1bmNvbmRpdGlvbmFs
bHkgYnkgb3AtPmludmFsaWRhdGUoKS4gVGhhdCBsb2NrIHByb3ZpZGVzIHRoZSByZXF1aXJlZCBT
TVAKKyAqIGJhcnJpZXIgZm9yIGhhbmRsaW5nIGludmFsaWRhdGVfc2VxLgorICoKKyAqIEVhY2gg
Y2FsbCBzaG91bGQgYmUgcGFpcmVkIHdpdGggYSBzaW5nbGUgbW11X3JhbmdlX3JlYWRfYmVnaW4o
KSBhbmQKKyAqIHNob3VsZCBiZSB1c2VkIHRvIGNvbmNsdWRlIHRoZSByZWFkIHNpZGUuCisgKgor
ICogUmV0dXJucyB0cnVlIGlmIGFuIGludmFsaWRhdGlvbiBjb2xsaWRlZCB3aXRoIHRoaXMgY3Jp
dGljYWwgc2VjdGlvbiwgYW5kCisgKiB0aGUgY2FsbGVyIHNob3VsZCByZXRyeS4KKyAqLworc3Rh
dGljIGlubGluZSBib29sIG1tdV9yYW5nZV9yZWFkX3JldHJ5KHN0cnVjdCBtbXVfcmFuZ2Vfbm90
aWZpZXIgKm1ybiwKKwkJCQkJdW5zaWduZWQgbG9uZyBzZXEpCit7CisJcmV0dXJuIFJFQURfT05D
RShtcm4tPmludmFsaWRhdGVfc2VxKSAhPSBzZXE7Cit9CisKKy8qKgorICogbW11X3JhbmdlX2No
ZWNrX3JldHJ5IC0gVGVzdCBpZiBhIGNvbGxpc2lvbiBoYXMgb2NjdXJyZWQKKyAqIG1ybjogVGhl
IHJhbmdlIHVuZGVyIGxvY2sKKyAqIHNlcTogVGhlIHJldHVybiBvZiB0aGUgbWF0Y2hpbmcgbW11
X3JhbmdlX3JlYWRfYmVnaW4oKQorICoKKyAqIFRoaXMgY2FuIGJlIHVzZWQgaW4gdGhlIGNyaXRp
Y2FsIHNlY3Rpb24gYmV0d2VlbiBtbXVfcmFuZ2VfcmVhZF9iZWdpbigpIGFuZAorICogbW11X3Jh
bmdlX3JlYWRfcmV0cnkoKS4gIEEgcmV0dXJuIG9mIHRydWUgaW5kaWNhdGVzIGFuIGludmFsaWRh
dGlvbiBoYXMKKyAqIGNvbGxpZGVkIHdpdGggdGhpcyBsb2NrIGFuZCBhIGZ1dHVyZSBtbXVfcmFu
Z2VfcmVhZF9yZXRyeSgpIHdpbGwgcmV0dXJuCisgKiB0cnVlLgorICoKKyAqIEZhbHNlIGlzIG5v
dCByZWxpYWJsZSBhbmQgb25seSBzdWdnZXN0cyBhIGNvbGxpc2lvbiBoYXMgbm90IGhhcHBlbmVk
LiBJdAorICogY2FuIGJlIGNhbGxlZCBtYW55IHRpbWVzIGFuZCBkb2VzIG5vdCBoYXZlIHRvIGhv
bGQgdGhlIHVzZXIgcHJvdmlkZWQgbG9jay4KKyAqCisgKiBUaGlzIGNhbGwgY2FuIGJlIHVzZWQg
YXMgcGFydCBvZiBsb29wcyBhbmQgb3RoZXIgZXhwZW5zaXZlIG9wZXJhdGlvbnMgdG8KKyAqIGV4
cGVkaXRlIGEgcmV0cnkuCisgKi8KK3N0YXRpYyBpbmxpbmUgYm9vbCBtbXVfcmFuZ2VfY2hlY2tf
cmV0cnkoc3RydWN0IG1tdV9yYW5nZV9ub3RpZmllciAqbXJuLAorCQkJCQkgdW5zaWduZWQgbG9u
ZyBzZXEpCit7CisJcmV0dXJuIFJFQURfT05DRShtcm4tPmludmFsaWRhdGVfc2VxKSAhPSBzZXE7
Cit9CisKIGV4dGVybiB2b2lkIF9fbW11X25vdGlmaWVyX21tX2Rlc3Ryb3koc3RydWN0IG1tX3N0
cnVjdCAqbW0pOwogZXh0ZXJuIHZvaWQgX19tbXVfbm90aWZpZXJfcmVsZWFzZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSk7CiBleHRlcm4gaW50IF9fbW11X25vdGlmaWVyX2NsZWFyX2ZsdXNoX3lvdW5n
KHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLApkaWZmIC0tZ2l0IGEvbW0vS2NvbmZpZyBiL21tL0tjb25m
aWcKaW5kZXggYTVkYWU5YTdlYjUxMGEuLmQwYjUwNDZkOWFlZmZkIDEwMDY0NAotLS0gYS9tbS9L
Y29uZmlnCisrKyBiL21tL0tjb25maWcKQEAgLTI4NCw2ICsyODQsNyBAQCBjb25maWcgVklSVF9U
T19CVVMKIGNvbmZpZyBNTVVfTk9USUZJRVIKIAlib29sCiAJc2VsZWN0IFNSQ1UKKwlzZWxlY3Qg
SU5URVJWQUxfVFJFRQogCiBjb25maWcgS1NNCiAJYm9vbCAiRW5hYmxlIEtTTSBmb3IgcGFnZSBt
ZXJnaW5nIgpkaWZmIC0tZ2l0IGEvbW0vbW11X25vdGlmaWVyLmMgYi9tbS9tbXVfbm90aWZpZXIu
YwppbmRleCAzNjc2NzBjZmQwMmI3Yi4uNWU1ZTc1ZWJjZGU0YWYgMTAwNjQ0Ci0tLSBhL21tL21t
dV9ub3RpZmllci5jCisrKyBiL21tL21tdV9ub3RpZmllci5jCkBAIC0xMiw2ICsxMiw3IEBACiAj
aW5jbHVkZSA8bGludXgvZXhwb3J0Lmg+CiAjaW5jbHVkZSA8bGludXgvbW0uaD4KICNpbmNsdWRl
IDxsaW51eC9lcnIuaD4KKyNpbmNsdWRlIDxsaW51eC9pbnRlcnZhbF90cmVlLmg+CiAjaW5jbHVk
ZSA8bGludXgvc3JjdS5oPgogI2luY2x1ZGUgPGxpbnV4L3JjdXBkYXRlLmg+CiAjaW5jbHVkZSA8
bGludXgvc2NoZWQuaD4KQEAgLTM2LDEwICszNywyNDMgQEAgc3RydWN0IGxvY2tkZXBfbWFwIF9f
bW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnRfbWFwID0gewogc3RydWN0IG1tdV9u
b3RpZmllcl9tbSB7CiAJLyogYWxsIG1tdSBub3RpZmllcnMgcmVnaXN0ZXJlZCBpbiB0aGlzIG1t
IGFyZSBxdWV1ZWQgaW4gdGhpcyBsaXN0ICovCiAJc3RydWN0IGhsaXN0X2hlYWQgbGlzdDsKKwli
b29sIGhhc19pbnRlcnZhbDsKIAkvKiB0byBzZXJpYWxpemUgdGhlIGxpc3QgbW9kaWZpY2F0aW9u
cyBhbmQgaGxpc3RfdW5oYXNoZWQgKi8KIAlzcGlubG9ja190IGxvY2s7CisJdW5zaWduZWQgbG9u
ZyBpbnZhbGlkYXRlX3NlcTsKKwl1bnNpZ25lZCBsb25nIGFjdGl2ZV9pbnZhbGlkYXRlX3Jhbmdl
czsKKwlzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgaXRyZWU7CisJd2FpdF9xdWV1ZV9oZWFkX3Qgd3E7
CisJc3RydWN0IGhsaXN0X2hlYWQgZGVmZXJyZWRfbGlzdDsKIH07CiAKKy8qCisgKiBUaGlzIGlz
IGEgY29sbGlzaW9uLXJldHJ5IHJlYWQtc2lkZS93cml0ZS1zaWRlICdsb2NrJywgYSBsb3QgbGlr
ZSBhCisgKiBzZXFjb3VudCwgaG93ZXZlciB0aGlzIGFsbG93cyBtdWx0aXBsZSB3cml0ZS1zaWRl
cyB0byBob2xkIGl0IGF0CisgKiBvbmNlLiBDb25jZXB0dWFsbHkgdGhlIHdyaXRlIHNpZGUgaXMg
cHJvdGVjdGluZyB0aGUgdmFsdWVzIG9mIHRoZSBQVEVzIGluCisgKiB0aGlzIG1tLCBzdWNoIHRo
YXQgUFRFUyBjYW5ub3QgYmUgcmVhZCBpbnRvIFNQVEVzIHdoaWxlIGFueSB3cml0ZXIgZXhpc3Rz
LgorICoKKyAqIE5vdGUgdGhhdCB0aGUgY29yZSBtbSBjcmVhdGVzIG5lc3RlZCBpbnZhbGlkYXRl
X3JhbmdlX3N0YXJ0KCkvZW5kKCkgcmVnaW9ucworICogd2l0aGluIHRoZSBzYW1lIHRocmVhZCwg
YW5kIHJ1bnMgaW52YWxpZGF0ZV9yYW5nZV9zdGFydCgpL2VuZCgpIGluIHBhcmFsbGVsCisgKiBv
biBtdWx0aXBsZSBDUFVzLiBUaGlzIGlzIGRlc2lnbmVkIHRvIG5vdCByZWR1Y2UgY29uY3VycmVu
Y3kgb3IgYmxvY2sKKyAqIHByb2dyZXNzIG9uIHRoZSBtbSBzaWRlLgorICoKKyAqIEFzIGEgc2Vj
b25kYXJ5IGZ1bmN0aW9uLCBob2xkaW5nIHRoZSBmdWxsIHdyaXRlIHNpZGUgYWxzbyBzZXJ2ZXMg
dG8gcHJldmVudAorICogd3JpdGVycyBmb3IgdGhlIGl0cmVlLCB0aGlzIGlzIGFuIG9wdGltaXph
dGlvbiB0byBhdm9pZCBleHRyYSBsb2NraW5nCisgKiBkdXJpbmcgaW52YWxpZGF0ZV9yYW5nZV9z
dGFydC9lbmQgbm90aWZpZXJzLgorICoKKyAqIFRoZSB3cml0ZSBzaWRlIGhhcyB0d28gc3RhdGVz
LCBmdWxseSBleGNsdWRlZDoKKyAqICAtIG1tLT5hY3RpdmVfaW52YWxpZGF0ZV9yYW5nZXMgIT0g
MAorICogIC0gbW5uLT5pbnZhbGlkYXRlX3NlcSAmIDEgPT0gVHJ1ZQorICogIC0gc29tZSByYW5n
ZSBvbiB0aGUgbW1fc3RydWN0IGlzIGJlaW5nIGludmFsaWRhdGVkCisgKiAgLSB0aGUgaXRyZWUg
aXMgbm90IGFsbG93ZWQgdG8gY2hhbmdlCisgKgorICogQW5kIHBhcnRpYWxseSBleGNsdWRlZDoK
KyAqICAtIG1tLT5hY3RpdmVfaW52YWxpZGF0ZV9yYW5nZXMgIT0gMAorICogIC0gc29tZSByYW5n
ZSBvbiB0aGUgbW1fc3RydWN0IGlzIGJlaW5nIGludmFsaWRhdGVkCisgKiAgLSB0aGUgaXRyZWUg
aXMgYWxsb3dlZCB0byBjaGFuZ2UKKyAqCisgKiBUaGUgbGF0ZXIgc3RhdGUgYXZvaWRzIHNvbWUg
ZXhwZW5zaXZlIHdvcmsgb24gaW52X2VuZCBpbiB0aGUgY29tbW9uIGNhc2Ugb2YKKyAqIG5vIG1y
biBtb25pdG9yaW5nIHRoZSBWQS4KKyAqLworc3RhdGljIGJvb2wgbW5faXRyZWVfaXNfaW52YWxp
ZGF0aW5nKHN0cnVjdCBtbXVfbm90aWZpZXJfbW0gKm1tbl9tbSkKK3sKKwlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZtbW5fbW0tPmxvY2spOworCXJldHVybiBtbW5fbW0tPmludmFsaWRhdGVfc2VxICYg
MTsKK30KKworc3RhdGljIHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKgorbW5faXRyZWVfaW52
X3N0YXJ0X3JhbmdlKHN0cnVjdCBtbXVfbm90aWZpZXJfbW0gKm1tbl9tbSwKKwkJCSBjb25zdCBz
dHJ1Y3QgbW11X25vdGlmaWVyX3JhbmdlICpyYW5nZSwKKwkJCSB1bnNpZ25lZCBsb25nICpzZXEp
Cit7CisJc3RydWN0IGludGVydmFsX3RyZWVfbm9kZSAqbm9kZTsKKwlzdHJ1Y3QgbW11X3Jhbmdl
X25vdGlmaWVyICpyZXMgPSBOVUxMOworCisJc3Bpbl9sb2NrKCZtbW5fbW0tPmxvY2spOworCW1t
bl9tbS0+YWN0aXZlX2ludmFsaWRhdGVfcmFuZ2VzKys7CisJbm9kZSA9IGludGVydmFsX3RyZWVf
aXRlcl9maXJzdCgmbW1uX21tLT5pdHJlZSwgcmFuZ2UtPnN0YXJ0LAorCQkJCQlyYW5nZS0+ZW5k
IC0gMSk7CisJaWYgKG5vZGUpIHsKKwkJbW1uX21tLT5pbnZhbGlkYXRlX3NlcSB8PSAxOworCQly
ZXMgPSBjb250YWluZXJfb2Yobm9kZSwgc3RydWN0IG1tdV9yYW5nZV9ub3RpZmllciwKKwkJCQkg
ICBpbnRlcnZhbF90cmVlKTsKKwl9CisKKwkqc2VxID0gbW1uX21tLT5pbnZhbGlkYXRlX3NlcTsK
KwlzcGluX3VubG9jaygmbW1uX21tLT5sb2NrKTsKKwlyZXR1cm4gcmVzOworfQorCitzdGF0aWMg
c3RydWN0IG1tdV9yYW5nZV9ub3RpZmllciAqCittbl9pdHJlZV9pbnZfbmV4dChzdHJ1Y3QgbW11
X3JhbmdlX25vdGlmaWVyICptcm4sCisJCSAgY29uc3Qgc3RydWN0IG1tdV9ub3RpZmllcl9yYW5n
ZSAqcmFuZ2UpCit7CisJc3RydWN0IGludGVydmFsX3RyZWVfbm9kZSAqbm9kZTsKKworCW5vZGUg
PSBpbnRlcnZhbF90cmVlX2l0ZXJfbmV4dCgmbXJuLT5pbnRlcnZhbF90cmVlLCByYW5nZS0+c3Rh
cnQsCisJCQkJICAgICAgIHJhbmdlLT5lbmQgLSAxKTsKKwlpZiAoIW5vZGUpCisJCXJldHVybiBO
VUxMOworCXJldHVybiBjb250YWluZXJfb2Yobm9kZSwgc3RydWN0IG1tdV9yYW5nZV9ub3RpZmll
ciwgaW50ZXJ2YWxfdHJlZSk7Cit9CisKK3N0YXRpYyB2b2lkIG1uX2l0cmVlX2ludl9lbmQoc3Ry
dWN0IG1tdV9ub3RpZmllcl9tbSAqbW1uX21tKQoreworCXN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZp
ZXIgKm1ybjsKKwlzdHJ1Y3QgaGxpc3Rfbm9kZSAqbmV4dDsKKwlib29sIG5lZWRfd2FrZSA9IGZh
bHNlOworCisJc3Bpbl9sb2NrKCZtbW5fbW0tPmxvY2spOworCWlmICgtLW1tbl9tbS0+YWN0aXZl
X2ludmFsaWRhdGVfcmFuZ2VzIHx8CisJICAgICFtbl9pdHJlZV9pc19pbnZhbGlkYXRpbmcobW1u
X21tKSkgeworCQlzcGluX3VubG9jaygmbW1uX21tLT5sb2NrKTsKKwkJcmV0dXJuOworCX0KKwor
CW1tbl9tbS0+aW52YWxpZGF0ZV9zZXErKzsKKwluZWVkX3dha2UgPSB0cnVlOworCisJLyoKKwkg
KiBUaGUgaW52X2VuZCBpbmNvcnBvcmF0ZXMgYSBkZWZlcnJlZCBtZWNoYW5pc20gbGlrZSBydG5s
LiBBZGRzIGFuZAorCSAqIHJlbW92ZXMgYXJlIHF1ZXVlZCB1bnRpbCB0aGUgZmluYWwgaW52X2Vu
ZCBoYXBwZW5zIHRoZW4gdGhleSBhcmUKKwkgKiBwcm9ncmVzc2VkLiBUaGlzIGFycmFuZ2VtZW50
IGZvciB0cmVlIHVwZGF0ZXMgaXMgdXNlZCB0byBhdm9pZAorCSAqIHVzaW5nIGEgYmxvY2tpbmcg
bG9jayBkdXJpbmcgaW52YWxpZGF0ZV9yYW5nZV9zdGFydC4KKwkgKi8KKwlobGlzdF9mb3JfZWFj
aF9lbnRyeV9zYWZlKG1ybiwgbmV4dCwgJm1tbl9tbS0+ZGVmZXJyZWRfbGlzdCwKKwkJCQkgIGRl
ZmVycmVkX2l0ZW0pIHsKKwkJaWYgKFJCX0VNUFRZX05PREUoJm1ybi0+aW50ZXJ2YWxfdHJlZS5y
YikpCisJCQlpbnRlcnZhbF90cmVlX2luc2VydCgmbXJuLT5pbnRlcnZhbF90cmVlLAorCQkJCQkg
ICAgICZtbW5fbW0tPml0cmVlKTsKKwkJZWxzZQorCQkJaW50ZXJ2YWxfdHJlZV9yZW1vdmUoJm1y
bi0+aW50ZXJ2YWxfdHJlZSwKKwkJCQkJICAgICAmbW1uX21tLT5pdHJlZSk7CisJCWhsaXN0X2Rl
bCgmbXJuLT5kZWZlcnJlZF9pdGVtKTsKKwl9CisJc3Bpbl91bmxvY2soJm1tbl9tbS0+bG9jayk7
CisKKwkvKgorCSAqIFRPRE86IFNpbmNlIHdlIGFscmVhZHkgaGF2ZSBhIHNwaW5sb2NrIGFib3Zl
LCB0aGlzIHdvdWxkIGJlIGZhc3RlcgorCSAqIGFzIHdha2VfdXBfcQorCSAqLworCWlmIChuZWVk
X3dha2UpCisJCXdha2VfdXBfYWxsKCZtbW5fbW0tPndxKTsKK30KKworLyoqCisgKiBtbXVfcmFu
Z2VfcmVhZF9iZWdpbiAtIEJlZ2luIGEgcmVhZCBzaWRlIGNyaXRpY2FsIHNlY3Rpb24gYWdhaW5z
dCBhIFZBIHJhbmdlCisgKiBtcm46IFRoZSByYW5nZSB0byBsb2NrCisgKgorICogbW11X3Jhbmdl
X3JlYWRfYmVnaW4oKS9tbXVfcmFuZ2VfcmVhZF9yZXRyeSgpIGltcGxlbWVudCBhIGNvbGxpc2lv
bi1yZXRyeQorICogbG9ja2luZyBzY2hlbWUgc2ltaWxhciB0byBzZXFjb3VudCBmb3IgdGhlIFZB
IHJhbmdlIHVuZGVyIG1ybi4gSWYgdGhlIG1tCisgKiBpbnZva2VzIGludmFsaWRhdGlvbiBkdXJp
bmcgdGhlIGNyaXRpY2FsIHNlY3Rpb24gdGhlbgorICogbW11X3JhbmdlX3JlYWRfcmV0cnkoKSB3
aWxsIHJldHVybiB0cnVlLgorICoKKyAqIFRoaXMgaXMgdXNlZnVsIHRvIG9idGFpbiBzaGFkb3cg
UFRFcyB3aGVyZSB0ZWFyZG93biBvciBzZXR1cCBvZiB0aGUgU1BURXMKKyAqIHJlcXVpcmUgYSBi
bG9ja2luZyBjb250ZXh0LiAgVGhlIGNyaXRpY2FsIHJlZ2lvbiBmb3JtZWQgYnkgdGhpcyBsb2Nr
IGNhbgorICogc2xlZXAsIGFuZCB0aGUgcmVxdWlyZWQgJ3VzZXJfbG9jaycgY2FuIGFsc28gYmUg
YSBzbGVlcGluZyBsb2NrLgorICoKKyAqIFRoZSBjYWxsZXIgaXMgcmVxdWlyZWQgdG8gcHJvdmlk
ZSBhICd1c2VyX2xvY2snIHRvIHNlcmlhbGl6ZSBib3RoIHRlYXJkb3duCisgKiBhbmQgc2V0dXAu
CisgKgorICogVGhlIHJldHVybiB2YWx1ZSBzaG91bGQgYmUgcGFzc2VkIHRvIG1tdV9yYW5nZV9y
ZWFkX3JldHJ5KCkuCisgKi8KK3Vuc2lnbmVkIGxvbmcgbW11X3JhbmdlX3JlYWRfYmVnaW4oc3Ry
dWN0IG1tdV9yYW5nZV9ub3RpZmllciAqbXJuKQoreworCXN0cnVjdCBtbXVfbm90aWZpZXJfbW0g
Km1tbl9tbSA9IG1ybi0+bW0tPm1tdV9ub3RpZmllcl9tbTsKKwl1bnNpZ25lZCBsb25nIHNlcTsK
Kwlib29sIGlzX2ludmFsaWRhdGluZzsKKworCS8qCisJICogSWYgdGhlIG1ybiBoYXMgYSBkaWZm
ZXJlbnQgc2VxIHZhbHVlIHVuZGVyIHRoZSB1c2VyX2xvY2sgdGhhbiB3ZQorCSAqIHN0YXJ0ZWQg
d2l0aCB0aGVuIGl0IGhhcyBjb2xsaWRlZC4KKwkgKgorCSAqIElmIHRoZSBtcm4gY3VycmVudGx5
IGhhcyB0aGUgc2FtZSBzZXEgdmFsdWUgYXMgdGhlIG1tbl9tbSBzZXEsIHRoZW4KKwkgKiBpdCBp
cyBjdXJyZW50bHkgYmV0d2VlbiBpbnZhbGlkYXRlX3N0YXJ0L2VuZCBhbmQgaXMgY29sbGlkaW5n
LgorCSAqCisJICogVGhlIGxvY2tpbmcgbG9va3MgYnJvYWRseSBsaWtlIHRoaXM6CisJICogICBt
bl90cmVlX2ludmFsaWRhdGVfc3RhcnQoKTogICAgICAgICAgbW11X3JhbmdlX3JlYWRfYmVnaW4o
KToKKwkgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Bpbl9sb2Nr
CisJICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXEgPSBSRUFE
X09OQ0UobXJuLT5pbnZhbGlkYXRlX3NlcSk7CisJICogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBzZXEgPT0gbW1uX21tLT5pbnZhbGlkYXRlX3NlcQorCSAqICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGluX3VubG9jaworCSAqICAgIHNw
aW5fbG9jaworCSAqICAgICBzZXEgPSArK21tbl9tbS0+aW52YWxpZGF0ZV9zZXEKKwkgKiAgICBz
cGluX3VubG9jaworCSAqICAgIG1ybi0+aW52YWxpZGF0ZV9zZXEgPSBzZXEKKwkgKiAgICAgb3At
PmludmFsaWRhdGVfcmFuZ2UoKToKKwkgKiAgICAgICB1c2VyX2xvY2sKKwkgKiAgICAgICB1c2Vy
X3VubG9jaworCSAqCisJICogICAgICAgICAgICAgICAgICAgICAgICAgIFtSZXF1aXJlZDogbW11
X3JhbmdlX3JlYWRfcmV0cnkoKSA9PSB0cnVlXQorCSAqCisJICogICBtbl9pdHJlZV9pbnZfZW5k
KCk6CisJICogICAgc3Bpbl9sb2NrCisJICogICAgIHNlcSA9ICsrbW1uX21tLT5pbnZhbGlkYXRl
X3NlcQorCSAqICAgIHNwaW5fdW5sb2NrCisJICoKKwkgKiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICB1c2VyX2xvY2sKKwkgKiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgbW11X3JhbmdlX3JlYWRfcmV0cnkoKToKKwkgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFQURfT05DRShtcm4tPmludmFsaWRhdGVfc2Vx
KSAhPSBzZXEKKwkgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2Vy
X3VubG9jaworCSAqCisJICogTG9naWNhbGx5IG1ybi0+aW52YWxpZGF0ZV9zZXEgaXMgbG9ja2Vk
IHVuZGVyIHRoZSB1c2VyIHByb3ZpZGVkCisJICogbG9jaywgaG93ZXZlciB0aGUgd3JpdGUgaXMg
cGxhY2VkIGJlZm9yZSB0aGF0IGxvY2sgZHVlIHRvIHRoZSB3YXkKKwkgKiB0aGUgQVBJIGlzIGxh
eWVyZWQuCisJICoKKwkgKiBCYXJyaWVycyBhcmUgbm90IG5lZWRlZCBhcyBhbnkgcmFjZXMgaGVy
ZSBhcmUgY2xvc2VkIGJ5IGFuIGV2ZW50dWFsCisJICogbW11X3JhbmdlX3JlYWRfcmV0cnkoKSwg
d2hpY2ggcHJvdmlkZXMgYSBiYXJyaWVyIHZpYSB0aGUgdXNlcl9sb2NrLgorCSAqLworCXNwaW5f
bG9jaygmbW1uX21tLT5sb2NrKTsKKwlzZXEgPSBSRUFEX09OQ0UobXJuLT5pbnZhbGlkYXRlX3Nl
cSk7CisJaXNfaW52YWxpZGF0aW5nID0gc2VxID09IG1tbl9tbS0+aW52YWxpZGF0ZV9zZXE7CisJ
c3Bpbl91bmxvY2soJm1tbl9tbS0+bG9jayk7CisKKwkvKgorCSAqIG1ybi0+aW52YWxpZGF0ZV9z
ZXEgaXMgYWx3YXlzIHNldCB0byBhbiBvZGQgdmFsdWUuIFRoaXMgZW5zdXJlcworCSAqIHRoYXQg
aWYgc2VxIGRvZXMgd3JhcCB3ZSB3aWxsIGFsd2F5cyBjbGVhciB0aGUgYmVsb3cgc2xlZXAgaW4g
c29tZQorCSAqIHJlYXNvbmFibGUgdGltZSBhcyBtbW5fbW0tPmludmFsaWRhdGVfc2VxIGlzIGV2
ZW4gaW4gdGhlIGlkbGUKKwkgKiBzdGF0ZS4KKwkgKi8KKwlsb2NrX21hcF9hY3F1aXJlKCZfX21t
dV9ub3RpZmllcl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0X21hcCk7CisJbG9ja19tYXBfcmVsZWFz
ZSgmX19tbXVfbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydF9tYXApOworCWlmIChpc19p
bnZhbGlkYXRpbmcpCisJCXdhaXRfZXZlbnQobW1uX21tLT53cSwKKwkJCSAgIFJFQURfT05DRSht
bW5fbW0tPmludmFsaWRhdGVfc2VxKSAhPSBzZXEpOworCisJLyoKKwkgKiBOb3RpY2UgdGhhdCBt
bXVfcmFuZ2VfcmVhZF9yZXRyeSgpIGNhbiBhbHJlYWR5IGJlIHRydWUgYXQgdGhpcworCSAqIHBv
aW50LCBhdm9pZGluZyBsb29wcyBoZXJlIGFsbG93cyB0aGUgdXNlciBvZiB0aGlzIGxvY2sgdG8g
cHJvdmlkZQorCSAqIGEgZ2xvYmFsIHRpbWUgYm91bmQuCisJICovCisKKwlyZXR1cm4gc2VxOwor
fQorRVhQT1JUX1NZTUJPTF9HUEwobW11X3JhbmdlX3JlYWRfYmVnaW4pOworCitzdGF0aWMgdm9p
ZCBtbl9pdHJlZV9yZWxlYXNlKHN0cnVjdCBtbXVfbm90aWZpZXJfbW0gKm1tbl9tbSwKKwkJCSAg
ICAgc3RydWN0IG1tX3N0cnVjdCAqbW0pCit7CisJc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSBy
YW5nZSA9IHsKKwkJLmZsYWdzID0gTU1VX05PVElGSUVSX1JBTkdFX0JMT0NLQUJMRSwKKwkJLmV2
ZW50ID0gTU1VX05PVElGWV9SRUxFQVNFLAorCQkubW0gPSBtbSwKKwkJLnN0YXJ0ID0gMCwKKwkJ
LmVuZCA9IFVMT05HX01BWCwKKwl9OworCXN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybjsK
Kwl1bnNpZ25lZCBsb25nIGN1cl9zZXE7CisJYm9vbCByZXQ7CisKKwlmb3IgKG1ybiA9IG1uX2l0
cmVlX2ludl9zdGFydF9yYW5nZShtbW5fbW0sICZyYW5nZSwgJmN1cl9zZXEpOyBtcm47CisJICAg
ICBtcm4gPSBtbl9pdHJlZV9pbnZfbmV4dChtcm4sICZyYW5nZSkpIHsKKwkJcmV0ID0gbXJuLT5v
cHMtPmludmFsaWRhdGUobXJuLCAmcmFuZ2UpOworCQlXQVJOX09OKHJldCk7CisJfQorCisJbW5f
aXRyZWVfaW52X2VuZChtbW5fbW0pOworfQorCiAvKgogICogVGhpcyBmdW5jdGlvbiBjYW4ndCBy
dW4gY29uY3VycmVudGx5IGFnYWluc3QgbW11X25vdGlmaWVyX3JlZ2lzdGVyCiAgKiBiZWNhdXNl
IG1tLT5tbV91c2VycyA+IDAgZHVyaW5nIG1tdV9ub3RpZmllcl9yZWdpc3RlciBhbmQgZXhpdF9t
bWFwCkBAIC01MiwxNyArMjg2LDI0IEBAIHN0cnVjdCBtbXVfbm90aWZpZXJfbW0gewogICogY2Fu
J3QgZ28gYXdheSBmcm9tIHVuZGVyIHVzIGFzIGV4aXRfbW1hcCBob2xkcyBhbiBtbV9jb3VudCBw
aW4KICAqIGl0c2VsZi4KICAqLwotdm9pZCBfX21tdV9ub3RpZmllcl9yZWxlYXNlKHN0cnVjdCBt
bV9zdHJ1Y3QgKm1tKQorc3RhdGljIHZvaWQgbW5faGxpc3RfcmVsZWFzZShzdHJ1Y3QgbW11X25v
dGlmaWVyX21tICptbW5fbW0sCisJCQkgICAgIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKQogewogCXN0
cnVjdCBtbXVfbm90aWZpZXIgKm1uOwogCWludCBpZDsKIAorCWlmIChtbW5fbW0tPmhhc19pbnRl
cnZhbCkKKwkJbW5faXRyZWVfcmVsZWFzZShtbW5fbW0sIG1tKTsKKworCWlmIChobGlzdF9lbXB0
eSgmbW1uX21tLT5saXN0KSkKKwkJcmV0dXJuOworCiAJLyoKIAkgKiBTUkNVIGhlcmUgd2lsbCBi
bG9jayBtbXVfbm90aWZpZXJfdW5yZWdpc3RlciB1bnRpbAogCSAqIC0+cmVsZWFzZSByZXR1cm5z
LgogCSAqLwogCWlkID0gc3JjdV9yZWFkX2xvY2soJnNyY3UpOwotCWhsaXN0X2Zvcl9lYWNoX2Vu
dHJ5X3JjdShtbiwgJm1tLT5tbXVfbm90aWZpZXJfbW0tPmxpc3QsIGhsaXN0KQorCWhsaXN0X2Zv
cl9lYWNoX2VudHJ5X3JjdShtbiwgJm1tbl9tbS0+bGlzdCwgaGxpc3QpCiAJCS8qCiAJCSAqIElm
IC0+cmVsZWFzZSBydW5zIGJlZm9yZSBtbXVfbm90aWZpZXJfdW5yZWdpc3RlciBpdCBtdXN0IGJl
CiAJCSAqIGhhbmRsZWQsIGFzIGl0J3MgdGhlIG9ubHkgd2F5IGZvciB0aGUgZHJpdmVyIHRvIGZs
dXNoIGFsbApAQCAtNzIsOSArMzEzLDkgQEAgdm9pZCBfX21tdV9ub3RpZmllcl9yZWxlYXNlKHN0
cnVjdCBtbV9zdHJ1Y3QgKm1tKQogCQlpZiAobW4tPm9wcy0+cmVsZWFzZSkKIAkJCW1uLT5vcHMt
PnJlbGVhc2UobW4sIG1tKTsKIAotCXNwaW5fbG9jaygmbW0tPm1tdV9ub3RpZmllcl9tbS0+bG9j
ayk7Ci0Jd2hpbGUgKHVubGlrZWx5KCFobGlzdF9lbXB0eSgmbW0tPm1tdV9ub3RpZmllcl9tbS0+
bGlzdCkpKSB7Ci0JCW1uID0gaGxpc3RfZW50cnkobW0tPm1tdV9ub3RpZmllcl9tbS0+bGlzdC5m
aXJzdCwKKwlzcGluX2xvY2soJm1tbl9tbS0+bG9jayk7CisJd2hpbGUgKHVubGlrZWx5KCFobGlz
dF9lbXB0eSgmbW1uX21tLT5saXN0KSkpIHsKKwkJbW4gPSBobGlzdF9lbnRyeShtbW5fbW0tPmxp
c3QuZmlyc3QsCiAJCQkJIHN0cnVjdCBtbXVfbm90aWZpZXIsCiAJCQkJIGhsaXN0KTsKIAkJLyoK
QEAgLTg1LDcgKzMyNiw3IEBAIHZvaWQgX19tbXVfbm90aWZpZXJfcmVsZWFzZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSkKIAkJICovCiAJCWhsaXN0X2RlbF9pbml0X3JjdSgmbW4tPmhsaXN0KTsKIAl9
Ci0Jc3Bpbl91bmxvY2soJm1tLT5tbXVfbm90aWZpZXJfbW0tPmxvY2spOworCXNwaW5fdW5sb2Nr
KCZtbW5fbW0tPmxvY2spOwogCXNyY3VfcmVhZF91bmxvY2soJnNyY3UsIGlkKTsKIAogCS8qCkBA
IC0xMDAsNiArMzQxLDE3IEBAIHZvaWQgX19tbXVfbm90aWZpZXJfcmVsZWFzZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSkKIAlzeW5jaHJvbml6ZV9zcmN1KCZzcmN1KTsKIH0KIAordm9pZCBfX21tdV9u
b3RpZmllcl9yZWxlYXNlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKQoreworCXN0cnVjdCBtbXVfbm90
aWZpZXJfbW0gKm1tbl9tbSA9IG1tLT5tbXVfbm90aWZpZXJfbW07CisKKwlpZiAobW1uX21tLT5o
YXNfaW50ZXJ2YWwpCisJCW1uX2l0cmVlX3JlbGVhc2UobW1uX21tLCBtbSk7CisKKwlpZiAoIWhs
aXN0X2VtcHR5KCZtbW5fbW0tPmxpc3QpKQorCQltbl9obGlzdF9yZWxlYXNlKG1tbl9tbSwgbW0p
OworfQorCiAvKgogICogSWYgbm8geW91bmcgYml0ZmxhZyBpcyBzdXBwb3J0ZWQgYnkgdGhlIGhh
cmR3YXJlLCAtPmNsZWFyX2ZsdXNoX3lvdW5nIGNhbgogICogdW5tYXAgdGhlIGFkZHJlc3MgYW5k
IHJldHVybiAxIG9yIDAgZGVwZW5kaW5nIGlmIHRoZSBtYXBwaW5nIHByZXZpb3VzbHkKQEAgLTE3
MiwxNCArNDI0LDQxIEBAIHZvaWQgX19tbXVfbm90aWZpZXJfY2hhbmdlX3B0ZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyZXNzLAogCXNyY3VfcmVhZF91bmxvY2soJnNy
Y3UsIGlkKTsKIH0KIAotaW50IF9fbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnQo
c3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UpCitzdGF0aWMgaW50IG1uX2l0cmVlX2lu
dmFsaWRhdGUoc3RydWN0IG1tdV9ub3RpZmllcl9tbSAqbW1uX21tLAorCQkJCSAgICAgY29uc3Qg
c3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UpCit7CisJc3RydWN0IG1tdV9yYW5nZV9u
b3RpZmllciAqbXJuOworCXVuc2lnbmVkIGxvbmcgY3VyX3NlcTsKKworCWZvciAobXJuID0gbW5f
aXRyZWVfaW52X3N0YXJ0X3JhbmdlKG1tbl9tbSwgcmFuZ2UsICZjdXJfc2VxKTsgbXJuOworCSAg
ICAgbXJuID0gbW5faXRyZWVfaW52X25leHQobXJuLCByYW5nZSkpIHsKKwkJYm9vbCByZXQ7CisK
KwkJV1JJVEVfT05DRShtcm4tPmludmFsaWRhdGVfc2VxLCBjdXJfc2VxKTsKKwkJcmV0ID0gbXJu
LT5vcHMtPmludmFsaWRhdGUobXJuLCByYW5nZSk7CisJCWlmICghcmV0ICYmICFXQVJOX09OKG1t
dV9ub3RpZmllcl9yYW5nZV9ibG9ja2FibGUocmFuZ2UpKSkKKwkJCWdvdG8gb3V0X3dvdWxkX2Js
b2NrOworCX0KKwlyZXR1cm4gMDsKKworb3V0X3dvdWxkX2Jsb2NrOgorCS8qCisJICogT24gLUVB
R0FJTiB0aGUgbm9uLWJsb2NraW5nIGNhbGxlciBpcyBub3QgYWxsb3dlZCB0byBjYWxsCisJICog
aW52YWxpZGF0ZV9yYW5nZV9lbmQoKQorCSAqLworCW1uX2l0cmVlX2ludl9lbmQobW1uX21tKTsK
KwlyZXR1cm4gLUVBR0FJTjsKK30KKworc3RhdGljIGludCBtbl9obGlzdF9pbnZhbGlkYXRlX3Jh
bmdlX3N0YXJ0KHN0cnVjdCBtbXVfbm90aWZpZXJfbW0gKm1tbl9tbSwKKwkJCQkJICAgc3RydWN0
IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UpCiB7CiAJc3RydWN0IG1tdV9ub3RpZmllciAqbW47
CiAJaW50IHJldCA9IDA7CiAJaW50IGlkOwogCiAJaWQgPSBzcmN1X3JlYWRfbG9jaygmc3JjdSk7
Ci0JaGxpc3RfZm9yX2VhY2hfZW50cnlfcmN1KG1uLCAmcmFuZ2UtPm1tLT5tbXVfbm90aWZpZXJf
bW0tPmxpc3QsIGhsaXN0KSB7CisJaGxpc3RfZm9yX2VhY2hfZW50cnlfcmN1KG1uLCAmbW1uX21t
LT5saXN0LCBobGlzdCkgewogCQlpZiAobW4tPm9wcy0+aW52YWxpZGF0ZV9yYW5nZV9zdGFydCkg
ewogCQkJaW50IF9yZXQ7CiAKQEAgLTIwMywxNSArNDgyLDMwIEBAIGludCBfX21tdV9ub3RpZmll
cl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0KHN0cnVjdCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdl
KQogCXJldHVybiByZXQ7CiB9CiAKLXZvaWQgX19tbXVfbm90aWZpZXJfaW52YWxpZGF0ZV9yYW5n
ZV9lbmQoc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UsCi0JCQkJCSBib29sIG9ubHlf
ZW5kKQoraW50IF9fbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnQoc3RydWN0IG1t
dV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UpCit7CisJc3RydWN0IG1tdV9ub3RpZmllcl9tbSAqbW1u
X21tID0gcmFuZ2UtPm1tLT5tbXVfbm90aWZpZXJfbW07CisJaW50IHJldCA9IDA7CisKKwlpZiAo
bW1uX21tLT5oYXNfaW50ZXJ2YWwpIHsKKwkJcmV0ID0gbW5faXRyZWVfaW52YWxpZGF0ZShtbW5f
bW0sIHJhbmdlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCWlmICghaGxpc3Rf
ZW1wdHkoJm1tbl9tbS0+bGlzdCkpCisJCXJldHVybiBtbl9obGlzdF9pbnZhbGlkYXRlX3Jhbmdl
X3N0YXJ0KG1tbl9tbSwgcmFuZ2UpOworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBtbl9o
bGlzdF9pbnZhbGlkYXRlX2VuZChzdHJ1Y3QgbW11X25vdGlmaWVyX21tICptbW5fbW0sCisJCQkJ
ICAgIHN0cnVjdCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdlLAorCQkJCSAgICBib29sIG9ubHlf
ZW5kKQogewogCXN0cnVjdCBtbXVfbm90aWZpZXIgKm1uOwogCWludCBpZDsKIAotCWxvY2tfbWFw
X2FjcXVpcmUoJl9fbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnRfbWFwKTsKIAlp
ZCA9IHNyY3VfcmVhZF9sb2NrKCZzcmN1KTsKLQlobGlzdF9mb3JfZWFjaF9lbnRyeV9yY3UobW4s
ICZyYW5nZS0+bW0tPm1tdV9ub3RpZmllcl9tbS0+bGlzdCwgaGxpc3QpIHsKKwlobGlzdF9mb3Jf
ZWFjaF9lbnRyeV9yY3UobW4sICZtbW5fbW0tPmxpc3QsIGhsaXN0KSB7CiAJCS8qCiAJCSAqIENh
bGwgaW52YWxpZGF0ZV9yYW5nZSBoZXJlIHRvbyB0byBhdm9pZCB0aGUgbmVlZCBmb3IgdGhlCiAJ
CSAqIHN1YnN5c3RlbSBvZiBoYXZpbmcgdG8gcmVnaXN0ZXIgYW4gaW52YWxpZGF0ZV9yYW5nZV9l
bmQKQEAgLTIzOCw2ICs1MzIsMTkgQEAgdm9pZCBfX21tdV9ub3RpZmllcl9pbnZhbGlkYXRlX3Jh
bmdlX2VuZChzdHJ1Y3QgbW11X25vdGlmaWVyX3JhbmdlICpyYW5nZSwKIAkJfQogCX0KIAlzcmN1
X3JlYWRfdW5sb2NrKCZzcmN1LCBpZCk7Cit9CisKK3ZvaWQgX19tbXVfbm90aWZpZXJfaW52YWxp
ZGF0ZV9yYW5nZV9lbmQoc3RydWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UsCisJCQkJCSBi
b29sIG9ubHlfZW5kKQoreworCXN0cnVjdCBtbXVfbm90aWZpZXJfbW0gKm1tbl9tbSA9IHJhbmdl
LT5tbS0+bW11X25vdGlmaWVyX21tOworCisJbG9ja19tYXBfYWNxdWlyZSgmX19tbXVfbm90aWZp
ZXJfaW52YWxpZGF0ZV9yYW5nZV9zdGFydF9tYXApOworCWlmIChtbW5fbW0tPmhhc19pbnRlcnZh
bCkKKwkJbW5faXRyZWVfaW52X2VuZChtbW5fbW0pOworCisJaWYgKCFobGlzdF9lbXB0eSgmbW1u
X21tLT5saXN0KSkKKwkJbW5faGxpc3RfaW52YWxpZGF0ZV9lbmQobW1uX21tLCByYW5nZSwgb25s
eV9lbmQpOwogCWxvY2tfbWFwX3JlbGVhc2UoJl9fbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFu
Z2Vfc3RhcnRfbWFwKTsKIH0KIApAQCAtMjU2LDggKzU2Myw5IEBAIHZvaWQgX19tbXVfbm90aWZp
ZXJfaW52YWxpZGF0ZV9yYW5nZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwKIH0KIAogLyoKLSAqIFNh
bWUgYXMgbW11X25vdGlmaWVyX3JlZ2lzdGVyIGJ1dCBoZXJlIHRoZSBjYWxsZXIgbXVzdCBob2xk
IHRoZQotICogbW1hcF9zZW0gaW4gd3JpdGUgbW9kZS4KKyAqIFNhbWUgYXMgbW11X25vdGlmaWVy
X3JlZ2lzdGVyIGJ1dCBoZXJlIHRoZSBjYWxsZXIgbXVzdCBob2xkIHRoZSBtbWFwX3NlbSBpbgor
ICogd3JpdGUgbW9kZS4gQSBOVUxMIG1uIHNpZ25hbHMgdGhlIG5vdGlmaWVyIGlzIGJlaW5nIHJl
Z2lzdGVyZWQgZm9yIGl0cmVlCisgKiBtb2RlLgogICovCiBpbnQgX19tbXVfbm90aWZpZXJfcmVn
aXN0ZXIoc3RydWN0IG1tdV9ub3RpZmllciAqbW4sIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKQogewpA
QCAtMjc0LDkgKzU4Miw2IEBAIGludCBfX21tdV9ub3RpZmllcl9yZWdpc3RlcihzdHJ1Y3QgbW11
X25vdGlmaWVyICptbiwgc3RydWN0IG1tX3N0cnVjdCAqbW0pCiAJCWZzX3JlY2xhaW1fcmVsZWFz
ZShHRlBfS0VSTkVMKTsKIAl9CiAKLQltbi0+bW0gPSBtbTsKLQltbi0+dXNlcnMgPSAxOwotCiAJ
aWYgKCFtbS0+bW11X25vdGlmaWVyX21tKSB7CiAJCS8qCiAJCSAqIGttYWxsb2MgY2Fubm90IGJl
IGNhbGxlZCB1bmRlciBtbV90YWtlX2FsbF9sb2NrcygpLCBidXQgd2UKQEAgLTI4NCwyMSArNTg5
LDIyIEBAIGludCBfX21tdV9ub3RpZmllcl9yZWdpc3RlcihzdHJ1Y3QgbW11X25vdGlmaWVyICpt
biwgc3RydWN0IG1tX3N0cnVjdCAqbW0pCiAJCSAqIHRoZSB3cml0ZSBzaWRlIG9mIHRoZSBtbWFw
X3NlbS4KIAkJICovCiAJCW1tdV9ub3RpZmllcl9tbSA9Ci0JCQlrbWFsbG9jKHNpemVvZihzdHJ1
Y3QgbW11X25vdGlmaWVyX21tKSwgR0ZQX0tFUk5FTCk7CisJCQlremFsbG9jKHNpemVvZihzdHJ1
Y3QgbW11X25vdGlmaWVyX21tKSwgR0ZQX0tFUk5FTCk7CiAJCWlmICghbW11X25vdGlmaWVyX21t
KQogCQkJcmV0dXJuIC1FTk9NRU07CiAKIAkJSU5JVF9ITElTVF9IRUFEKCZtbXVfbm90aWZpZXJf
bW0tPmxpc3QpOwogCQlzcGluX2xvY2tfaW5pdCgmbW11X25vdGlmaWVyX21tLT5sb2NrKTsKKwkJ
bW11X25vdGlmaWVyX21tLT5pbnZhbGlkYXRlX3NlcSA9IDI7CisJCW1tdV9ub3RpZmllcl9tbS0+
aXRyZWUgPSBSQl9ST09UX0NBQ0hFRDsKKwkJaW5pdF93YWl0cXVldWVfaGVhZCgmbW11X25vdGlm
aWVyX21tLT53cSk7CisJCUlOSVRfSExJU1RfSEVBRCgmbW11X25vdGlmaWVyX21tLT5kZWZlcnJl
ZF9saXN0KTsKIAl9CiAKIAlyZXQgPSBtbV90YWtlX2FsbF9sb2NrcyhtbSk7CiAJaWYgKHVubGlr
ZWx5KHJldCkpCiAJCWdvdG8gb3V0X2NsZWFuOwogCi0JLyogUGFpcnMgd2l0aCB0aGUgbW1kcm9w
IGluIG1tdV9ub3RpZmllcl91bnJlZ2lzdGVyXyogKi8KLQltbWdyYWIobW0pOwotCiAJLyoKIAkg
KiBTZXJpYWxpemUgdGhlIHVwZGF0ZSBhZ2FpbnN0IG1tdV9ub3RpZmllcl91bnJlZ2lzdGVyLiBB
CiAJICogc2lkZSBub3RlOiBtbXVfbm90aWZpZXJfcmVsZWFzZSBjYW4ndCBydW4gY29uY3VycmVu
dGx5IHdpdGgKQEAgLTMwNiwxMyArNjEyLDI2IEBAIGludCBfX21tdV9ub3RpZmllcl9yZWdpc3Rl
cihzdHJ1Y3QgbW11X25vdGlmaWVyICptbiwgc3RydWN0IG1tX3N0cnVjdCAqbW0pCiAJICogY3Vy
cmVudC0+bW0gb3IgZXhwbGljaXRseSB3aXRoIGdldF90YXNrX21tKCkgb3Igc2ltaWxhcikuCiAJ
ICogV2UgY2FuJ3QgcmFjZSBhZ2FpbnN0IGFueSBvdGhlciBtbXUgbm90aWZpZXIgbWV0aG9kIGVp
dGhlcgogCSAqIHRoYW5rcyB0byBtbV90YWtlX2FsbF9sb2NrcygpLgorCSAqCisJICogcmVsZWFz
ZSBzZW1hbnRpY3MgYXJlIHByb3ZpZGVkIGZvciB1c2VycyBub3QgaW5zaWRlIGEgbG9jayBjb3Zl
cmVkCisJICogYnkgbW1fdGFrZV9hbGxfbG9ja3MoKS4gYWNxdWlyZSBjYW4gb25seSBiZSB1c2Vk
IHdoaWxlIGhvbGRpbmcgdGhlCisJICogbW1ncmFiIG9yIG1tZ2V0LCBhbmQgaXMgc2FmZSBiZWNh
dXNlIG9uY2UgY3JlYXRlZCB0aGUKKwkgKiBtbXVfbm90aWZpZmVyX21tIGlzIG5vdCBmcmVlZCB1
bnRpbCB0aGUgbW0gaXMgZGVzdHJveWVkLgogCSAqLwogCWlmIChtbXVfbm90aWZpZXJfbW0pCi0J
CW1tLT5tbXVfbm90aWZpZXJfbW0gPSBtbXVfbm90aWZpZXJfbW07CisJCXNtcF9zdG9yZV9yZWxl
YXNlKCZtbS0+bW11X25vdGlmaWVyX21tLCBtbXVfbm90aWZpZXJfbW0pOwogCi0Jc3Bpbl9sb2Nr
KCZtbS0+bW11X25vdGlmaWVyX21tLT5sb2NrKTsKLQlobGlzdF9hZGRfaGVhZF9yY3UoJm1uLT5o
bGlzdCwgJm1tLT5tbXVfbm90aWZpZXJfbW0tPmxpc3QpOwotCXNwaW5fdW5sb2NrKCZtbS0+bW11
X25vdGlmaWVyX21tLT5sb2NrKTsKKwlpZiAobW4pIHsKKwkJLyogUGFpcnMgd2l0aCB0aGUgbW1k
cm9wIGluIG1tdV9ub3RpZmllcl91bnJlZ2lzdGVyXyogKi8KKwkJbW1ncmFiKG1tKTsKKwkJbW4t
Pm1tID0gbW07CisJCW1uLT51c2VycyA9IDE7CisKKwkJc3Bpbl9sb2NrKCZtbS0+bW11X25vdGlm
aWVyX21tLT5sb2NrKTsKKwkJaGxpc3RfYWRkX2hlYWRfcmN1KCZtbi0+aGxpc3QsICZtbS0+bW11
X25vdGlmaWVyX21tLT5saXN0KTsKKwkJc3Bpbl91bmxvY2soJm1tLT5tbXVfbm90aWZpZXJfbW0t
PmxvY2spOworCX0gZWxzZQorCQltbS0+bW11X25vdGlmaWVyX21tLT5oYXNfaW50ZXJ2YWwgPSB0
cnVlOwogCiAJbW1fZHJvcF9hbGxfbG9ja3MobW0pOwogCUJVR19PTihhdG9taWNfcmVhZCgmbW0t
Pm1tX3VzZXJzKSA8PSAwKTsKQEAgLTUyOSw2ICs4NDgsMTY2IEBAIHZvaWQgbW11X25vdGlmaWVy
X3B1dChzdHJ1Y3QgbW11X25vdGlmaWVyICptbikKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKG1tdV9u
b3RpZmllcl9wdXQpOwogCitzdGF0aWMgaW50IF9fbW11X3JhbmdlX25vdGlmaWVyX2luc2VydChz
dHJ1Y3QgbW11X3JhbmdlX25vdGlmaWVyICptcm4sCisJCQkJICAgICAgIHVuc2lnbmVkIGxvbmcg
c3RhcnQsCisJCQkJICAgICAgIHVuc2lnbmVkIGxvbmcgbGVuZ3RoLAorCQkJCSAgICAgICBzdHJ1
Y3QgbW11X25vdGlmaWVyX21tICptbW5fbW0sCisJCQkJICAgICAgIHN0cnVjdCBtbV9zdHJ1Y3Qg
Km1tKQoreworCW1ybi0+bW0gPSBtbTsKKwlSQl9DTEVBUl9OT0RFKCZtcm4tPmludGVydmFsX3Ry
ZWUucmIpOworCW1ybi0+aW50ZXJ2YWxfdHJlZS5zdGFydCA9IHN0YXJ0OworCS8qCisJICogTm90
ZSB0aGF0IHRoZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW50ZXJ2YWxzIGluIHRoZSBpbnRlcnZh
bCB0cmVlCisJICogY29uc2lkZXJzIHRoZSBlbmRpbmcgcG9pbnQgYXMgY29udGFpbmVkIGluIHRo
ZSBpbnRlcnZhbC4KKwkgKi8KKwlpZiAobGVuZ3RoID09IDAgfHwKKwkgICAgY2hlY2tfYWRkX292
ZXJmbG93KHN0YXJ0LCBsZW5ndGggLSAxLCAmbXJuLT5pbnRlcnZhbF90cmVlLmxhc3QpKQorCQly
ZXR1cm4gLUVPVkVSRkxPVzsKKworCS8qIHBhaXJzIHdpdGggbW1kcm9wIGluIG1tdV9yYW5nZV9u
b3RpZmllcl9yZW1vdmUoKSAqLworCW1tZ3JhYihtbSk7CisKKwkvKgorCSAqIElmIHNvbWUgaW52
YWxpZGF0ZV9yYW5nZV9zdGFydC9lbmQgcmVnaW9uIGlzIGdvaW5nIG9uIGluIHBhcmFsbGVsCisJ
ICogd2UgZG9uJ3Qga25vdyB3aGF0IFZBIHJhbmdlcyBhcmUgYWZmZWN0ZWQsIHNvIHdlIG11c3Qg
YXNzdW1lIHRoaXMKKwkgKiBuZXcgcmFuZ2UgaXMgaW5jbHVkZWQuCisJICoKKwkgKiBJZiB0aGUg
aXRyZWUgaXMgaW52YWxpZGF0aW5nIHRoZW4gd2UgYXJlIG5vdCBhbGxvd2VkIHRvIGNoYW5nZQor
CSAqIGl0LiBSZXRyeWluZyB1bnRpbCBpbnZhbGlkYXRpb24gaXMgZG9uZSBpcyB0cmlja3kgZHVl
IHRvIHRoZQorCSAqIHBvc3NpYmlsaXR5IGZvciBsaXZlIGxvY2ssIGluc3RlYWQgZGVmZXIgdGhl
IGFkZCB0byB0aGUgdW5sb2NrIHNvCisJICogdGhpcyBhbGdvcml0aG0gaXMgZGV0ZXJtaW5pc3Rp
Yy4KKwkgKgorCSAqIEluIGFsbCBjYXNlcyB0aGUgdmFsdWUgZm9yIHRoZSBtcm4tPm1yX2ludmFs
aWRhdGVfc2VxIHNob3VsZCBiZQorCSAqIG9kZCwgc2VlIG1tdV9yYW5nZV9yZWFkX2JlZ2luKCkK
KwkgKi8KKwlzcGluX2xvY2soJm1tbl9tbS0+bG9jayk7CisJaWYgKG1tbl9tbS0+YWN0aXZlX2lu
dmFsaWRhdGVfcmFuZ2VzKSB7CisJCWlmIChtbl9pdHJlZV9pc19pbnZhbGlkYXRpbmcobW1uX21t
KSkKKwkJCWhsaXN0X2FkZF9oZWFkKCZtcm4tPmRlZmVycmVkX2l0ZW0sCisJCQkJICAgICAgICZt
bW5fbW0tPmRlZmVycmVkX2xpc3QpOworCQllbHNlIHsKKwkJCW1tbl9tbS0+aW52YWxpZGF0ZV9z
ZXEgfD0gMTsKKwkJCWludGVydmFsX3RyZWVfaW5zZXJ0KCZtcm4tPmludGVydmFsX3RyZWUsCisJ
CQkJCSAgICAgJm1tbl9tbS0+aXRyZWUpOworCQl9CisJCW1ybi0+aW52YWxpZGF0ZV9zZXEgPSBt
bW5fbW0tPmludmFsaWRhdGVfc2VxOworCX0gZWxzZSB7CisJCVdBUk5fT04obW5faXRyZWVfaXNf
aW52YWxpZGF0aW5nKG1tbl9tbSkpOworCQltcm4tPmludmFsaWRhdGVfc2VxID0gbW1uX21tLT5p
bnZhbGlkYXRlX3NlcSAtIDE7CisJCWludGVydmFsX3RyZWVfaW5zZXJ0KCZtcm4tPmludGVydmFs
X3RyZWUsICZtbW5fbW0tPml0cmVlKTsKKwl9CisJc3Bpbl91bmxvY2soJm1tbl9tbS0+bG9jayk7
CisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogbW11X3JhbmdlX25vdGlmaWVyX2luc2VydCAtIElu
c2VydCBhIHJhbmdlIG5vdGlmaWVyCisgKiBAbXJuOiBSYW5nZSBub3RpZmllciB0byByZWdpc3Rl
cgorICogQHN0YXJ0OiBTdGFydGluZyB2aXJ0dWFsIGFkZHJlc3MgdG8gbW9uaXRvcgorICogQGxl
bmd0aDogTGVuZ3RoIG9mIHRoZSByYW5nZSB0byBtb25pdG9yCisgKiBAbW0gOiBtbV9zdHJ1Y3Qg
dG8gYXR0YWNoIHRvCisgKgorICogVGhpcyBmdW5jdGlvbiBzdWJzY3JpYmVzIHRoZSByYW5nZSBu
b3RpZmllciBmb3Igbm90aWZpY2F0aW9ucyBmcm9tIHRoZSBtbS4KKyAqIFVwb24gcmV0dXJuIHRo
ZSBvcHMgcmVsYXRlZCB0byBtbXVfcmFuZ2Vfbm90aWZpZXIgd2lsbCBiZSBjYWxsZWQgd2hlbmV2
ZXIKKyAqIGFuIGV2ZW50IHRoYXQgaW50ZXJzZWN0cyB3aXRoIHRoZSBnaXZlbiByYW5nZSBvY2N1
cnMuCisgKgorICogVXBvbiByZXR1cm4gdGhlIHJhbmdlX25vdGlmaWVyIG1heSBub3QgYmUgcHJl
c2VudCBpbiB0aGUgaW50ZXJ2YWwgdHJlZSB5ZXQuCisgKiBUaGUgY2FsbGVyIG11c3QgdXNlIHRo
ZSBub3JtYWwgcmFuZ2Ugbm90aWZpZXIgbG9ja2luZyBmbG93IHZpYQorICogbW11X3JhbmdlX3Jl
YWRfYmVnaW4oKSB0byBlc3RhYmxpc2ggU1BURXMgZm9yIHRoaXMgcmFuZ2UuCisgKi8KK2ludCBt
bXVfcmFuZ2Vfbm90aWZpZXJfaW5zZXJ0KHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybiwK
KwkJCSAgICAgIHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbGVuZ3RoLAorCQkJ
ICAgICAgc3RydWN0IG1tX3N0cnVjdCAqbW0pCit7CisJc3RydWN0IG1tdV9ub3RpZmllcl9tbSAq
bW1uX21tOworCWludCByZXQ7CisKKwltaWdodF9sb2NrKCZtbS0+bW1hcF9zZW0pOworCisJbW1u
X21tID0gc21wX2xvYWRfYWNxdWlyZSgmbW0tPm1tdV9ub3RpZmllcl9tbSk7CisJaWYgKCFtbW5f
bW0gfHwgIW1tbl9tbS0+aGFzX2ludGVydmFsKSB7CisJCXJldCA9IG1tdV9ub3RpZmllcl9yZWdp
c3RlcihOVUxMLCBtbSk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCQltbW5fbW0gPSBt
bS0+bW11X25vdGlmaWVyX21tOworCX0KKwlyZXR1cm4gX19tbXVfcmFuZ2Vfbm90aWZpZXJfaW5z
ZXJ0KG1ybiwgc3RhcnQsIGxlbmd0aCwgbW1uX21tLCBtbSk7Cit9CitFWFBPUlRfU1lNQk9MX0dQ
TChtbXVfcmFuZ2Vfbm90aWZpZXJfaW5zZXJ0KTsKKworaW50IG1tdV9yYW5nZV9ub3RpZmllcl9p
bnNlcnRfbG9ja2VkKHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybiwKKwkJCQkgICAgIHVu
c2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgbGVuZ3RoLAorCQkJCSAgICAgc3RydWN0
IG1tX3N0cnVjdCAqbW0pCit7CisJc3RydWN0IG1tdV9ub3RpZmllcl9tbSAqbW1uX21tOworCWlu
dCByZXQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkX3dyaXRlKCZtbS0+bW1hcF9zZW0pOworCisJ
bW1uX21tID0gbW0tPm1tdV9ub3RpZmllcl9tbTsKKwlpZiAoIW1tbl9tbSB8fCAhbW1uX21tLT5o
YXNfaW50ZXJ2YWwpIHsKKwkJcmV0ID0gX19tbXVfbm90aWZpZXJfcmVnaXN0ZXIoTlVMTCwgbW0p
OworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwkJbW1uX21tID0gbW0tPm1tdV9ub3RpZmll
cl9tbTsKKwl9CisJcmV0dXJuIF9fbW11X3JhbmdlX25vdGlmaWVyX2luc2VydChtcm4sIHN0YXJ0
LCBsZW5ndGgsIG1tbl9tbSwgbW0pOworfQorRVhQT1JUX1NZTUJPTF9HUEwobW11X3JhbmdlX25v
dGlmaWVyX2luc2VydF9sb2NrZWQpOworCisvKioKKyAqIG1tdV9yYW5nZV9ub3RpZmllcl9yZW1v
dmUgLSBSZW1vdmUgYSByYW5nZSBub3RpZmllcgorICogQG1ybjogUmFuZ2Ugbm90aWZpZXIgdG8g
dW5yZWdpc3RlcgorICoKKyAqIFRoaXMgZnVuY3Rpb24gbXVzdCBiZSBwYWlyZWQgd2l0aCBtbXVf
cmFuZ2Vfbm90aWZpZXJfaW5zZXJ0KCkuIEl0IGNhbm5vdCBiZQorICogY2FsbGVkIGZyb20gYW55
IG9wcyBjYWxsYmFjay4KKyAqCisgKiBPbmNlIHRoaXMgcmV0dXJucyBvcHMgY2FsbGJhY2tzIGFy
ZSBubyBsb25nZXIgcnVubmluZyBvbiBvdGhlciBDUFVzIGFuZAorICogd2lsbCBub3QgYmUgY2Fs
bGVkIGluIGZ1dHVyZS4KKyAqLwordm9pZCBtbXVfcmFuZ2Vfbm90aWZpZXJfcmVtb3ZlKHN0cnVj
dCBtbXVfcmFuZ2Vfbm90aWZpZXIgKm1ybikKK3sKKwlzdHJ1Y3QgbW1fc3RydWN0ICptbSA9IG1y
bi0+bW07CisJc3RydWN0IG1tdV9ub3RpZmllcl9tbSAqbW1uX21tID0gbW0tPm1tdV9ub3RpZmll
cl9tbTsKKwl1bnNpZ25lZCBsb25nIHNlcSA9IDA7CisKKwltaWdodF9zbGVlcCgpOworCisJc3Bp
bl9sb2NrKCZtbW5fbW0tPmxvY2spOworCWlmIChtbl9pdHJlZV9pc19pbnZhbGlkYXRpbmcobW1u
X21tKSkgeworCQkvKgorCQkgKiByZW1vdmUgaXMgYmVpbmcgY2FsbGVkIGFmdGVyIGluc2VydCBw
dXQgdGhpcyBvbiB0aGUKKwkJICogZGVmZXJyZWQgbGlzdCwgYnV0IGJlZm9yZSB0aGUgZGVmZXJy
ZWQgbGlzdCB3YXMgcHJvY2Vzc2VkLgorCQkgKi8KKwkJaWYgKFJCX0VNUFRZX05PREUoJm1ybi0+
aW50ZXJ2YWxfdHJlZS5yYikpIHsKKwkJCWhsaXN0X2RlbCgmbXJuLT5kZWZlcnJlZF9pdGVtKTsK
KwkJfSBlbHNlIHsKKwkJCWhsaXN0X2FkZF9oZWFkKCZtcm4tPmRlZmVycmVkX2l0ZW0sCisJCQkJ
ICAgICAgICZtbW5fbW0tPmRlZmVycmVkX2xpc3QpOworCQkJc2VxID0gbW1uX21tLT5pbnZhbGlk
YXRlX3NlcTsKKwkJfQorCX0gZWxzZSB7CisJCVdBUk5fT04oUkJfRU1QVFlfTk9ERSgmbXJuLT5p
bnRlcnZhbF90cmVlLnJiKSk7CisJCWludGVydmFsX3RyZWVfcmVtb3ZlKCZtcm4tPmludGVydmFs
X3RyZWUsICZtbW5fbW0tPml0cmVlKTsKKwl9CisJc3Bpbl91bmxvY2soJm1tbl9tbS0+bG9jayk7
CisKKwkvKgorCSAqIFRoZSBwb3NzaWJsZSBzbGVlcCBvbiBwcm9ncmVzcyBpbiB0aGUgaW52YWxp
ZGF0aW9uIHJlcXVpcmVzIHRoZQorCSAqIGNhbGxlciBub3QgaG9sZCBhbnkgbG9ja3MgaGVsZCBi
eSBpbnZhbGlkYXRpb24gY2FsbGJhY2tzLgorCSAqLworCWxvY2tfbWFwX2FjcXVpcmUoJl9fbW11
X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2Vfc3RhcnRfbWFwKTsKKwlsb2NrX21hcF9yZWxlYXNl
KCZfX21tdV9ub3RpZmllcl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0X21hcCk7CisJaWYgKHNlcSkK
KwkJd2FpdF9ldmVudChtbW5fbW0tPndxLAorCQkJICAgUkVBRF9PTkNFKG1tbl9tbS0+aW52YWxp
ZGF0ZV9zZXEpICE9IHNlcSk7CisKKwkvKiBwYWlycyB3aXRoIG1tZ3JhYiBpbiBtbXVfcmFuZ2Vf
bm90aWZpZXJfaW5zZXJ0KCkgKi8KKwltbWRyb3AobW0pOworfQorRVhQT1JUX1NZTUJPTF9HUEwo
bW11X3JhbmdlX25vdGlmaWVyX3JlbW92ZSk7CisKIC8qKgogICogbW11X25vdGlmaWVyX3N5bmNo
cm9uaXplIC0gRW5zdXJlIGFsbCBtbXVfbm90aWZpZXJzIGFyZSBmcmVlZAogICoKLS0gCjIuMjMu
MAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRl
dmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8v
bGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
