Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 75C23C1BDA
	for <lists+dri-devel@lfdr.de>; Mon, 30 Sep 2019 08:58:08 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 637C26E397;
	Mon, 30 Sep 2019 06:57:59 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.codeaurora.org (smtp.codeaurora.org [198.145.29.96])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 864746E35D
 for <dri-devel@lists.freedesktop.org>; Mon, 30 Sep 2019 06:41:18 +0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
 id F389C61639; Mon, 30 Sep 2019 06:41:16 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
 pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
 DKIM_INVALID,DKIM_SIGNED,SPF_NONE autolearn=no autolearn_force=no
 version=3.4.0
Received: from kgunda-linux.qualcomm.com
 (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: kgunda@smtp.codeaurora.org)
 by smtp.codeaurora.org (Postfix) with ESMTPSA id 3CC3861639;
 Mon, 30 Sep 2019 06:41:06 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 3CC3861639
From: Kiran Gunda <kgunda@codeaurora.org>
To: bjorn.andersson@linaro.org, jingoohan1@gmail.com, lee.jones@linaro.org,
 b.zolnierkie@samsung.com, dri-devel@lists.freedesktop.org,
 daniel.thompson@linaro.org, jacek.anaszewski@gmail.com, pavel@ucw.cz,
 robh+dt@kernel.org, mark.rutland@arm.com, linux-leds@vger.kernel.org,
 devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
 Andy Gross <agross@kernel.org>, linux-arm-msm@vger.kernel.org,
 linux-fbdev@vger.kernel.org
Subject: [PATCH V6 8/8] backlight: qcom-wled: Add auto string detection logic
Date: Mon, 30 Sep 2019 12:09:13 +0530
Message-Id: <1569825553-26039-9-git-send-email-kgunda@codeaurora.org>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1569825553-26039-1-git-send-email-kgunda@codeaurora.org>
References: <1569825553-26039-1-git-send-email-kgunda@codeaurora.org>
X-Mailman-Approved-At: Mon, 30 Sep 2019 06:57:28 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1569825678;
 bh=UXGs7RrWPTKxvlm3uYBzPhFmV8G2MYi6Ufgb3SJfUwA=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=hXf9lg7IhodFVaSjctUJj6SPpfjZBTfdigZxHFqvYWP0hyqhx8gAoGgoiXcXHoh42
 mM87o8dpKW4foA61rLdWgiQXZ7ZTuUrY7RdRLkZX7zUV0IhXzr9nzruKaYHZf1BBRq
 o052GaQyapXwoGMHro5pLHyCKAMJ/3VP98CkJBSY=
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1569825673;
 bh=UXGs7RrWPTKxvlm3uYBzPhFmV8G2MYi6Ufgb3SJfUwA=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=nc4pnsB/aEuo15lhqN3wFrPfE/QhcheFA/8O7cwzSv2TCmvH7GyslkZRo+jd/xlWi
 MaXvxgY1Wxc2bPmnJWsPa1DBvzZuXJ1TjNjKQ+zqeR8S1r/6/NvY8WQs9PzHhUUXeh
 B8te5xRpIP4NAwwBZXfMZ9PAFiu5/3m9PWoXzUjA=
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 dmarc=none (p=none dis=none)
 header.from=codeaurora.org
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 spf=none
 smtp.mailfrom=kgunda@codeaurora.org
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Kiran Gunda <kgunda@codeaurora.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIGF1dG8gc3RyaW5nIGRldGVjdGlvbiBhbGdvcml0aG0gY2hlY2tzIGlmIHRoZSBjdXJyZW50
IFdMRUQKc2luayBjb25maWd1cmF0aW9uIGlzIHZhbGlkLiBJdCB0cmllcyBlbmFibGluZyBldmVy
eSBzaW5rIGFuZApjaGVja3MgaWYgdGhlIE9WUCBmYXVsdCBpcyBvYnNlcnZlZC4gQmFzZWQgb24g
dGhpcyBpbmZvcm1hdGlvbgppdCBkZXRlY3RzIGFuZCBlbmFibGVzIHRoZSB2YWxpZCBzaW5rIGNv
bmZpZ3VyYXRpb24uCkF1dG8gY2FsaWJyYXRpb24gd2lsbCBiZSB0cmlnZ2VyZWQgd2hlbiB0aGUg
T1ZQIGZhdWx0IGludGVycnVwdHMKYXJlIHNlZW4gZnJlcXVlbnRseSB0aGVyZWJ5IGl0IHRyaWVz
IHRvIGZpeCB0aGUgc2luayBjb25maWd1cmF0aW9uLgoKVGhlIGF1dG8tZGV0ZWN0aW9uIGFsc28g
a2lja3MgaW4gd2hlbiB0aGUgY29ubmVjdGVkIExFRCBzdHJpbmcKb2YgdGhlIGRpc3BsYXktYmFj
a2xpZ2h0IG1hbGZ1bmN0aW9ucyAoYmVjYXVzZSBvZiBkYW1hZ2UpIGFuZApyZXF1aXJlcyB0aGUg
ZGFtYWdlZCBzdHJpbmcgdG8gYmUgdHVybmVkIG9mZiB0byBwcmV2ZW50IHRoZQpjb21wbGV0ZSBw
YW5lbCBhbmQvb3IgYm9hcmQgZnJvbSBiZWluZyBkYW1hZ2VkLgoKU2lnbmVkLW9mZi1ieTogS2ly
YW4gR3VuZGEgPGtndW5kYUBjb2RlYXVyb3JhLm9yZz4KLS0tCiBkcml2ZXJzL3ZpZGVvL2JhY2ts
aWdodC9xY29tLXdsZWQuYyB8IDQwMiArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
Ky0KIDEgZmlsZSBjaGFuZ2VkLCAzOTcgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3ZpZGVvL2JhY2tsaWdodC9xY29tLXdsZWQuYyBiL2RyaXZlcnMv
dmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCmluZGV4IDU1NmM3MzQuLjdhMWQzYWUgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvdmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCisrKyBiL2RyaXZlcnMv
dmlkZW8vYmFja2xpZ2h0L3Fjb20td2xlZC5jCkBAIC0xNywxMCArMTcsMTggQEAKICNkZWZpbmUg
V0xFRF9NQVhfU1RSSU5HUwkJCQk0CiAKICNkZWZpbmUgV0xFRF9ERUZBVUxUX0JSSUdIVE5FU1MJ
CQkJMjA0OAotCisjZGVmaW5lIFdMRURfU09GVF9TVEFSVF9ETFlfVVMJCQkJMTAwMDAKICNkZWZp
bmUgV0xFRF9TSU5LX1JFR19CUklHSFRfTUFYCQkJMHhGRkYKIAogLyogV0xFRCBjb250cm9sIHJl
Z2lzdGVycyAqLworI2RlZmluZSBXTEVEX0NUUkxfUkVHX0ZBVUxUX1NUQVRVUwkJCTB4MDgKKyNk
ZWZpbmUgIFdMRURfQ1RSTF9SRUdfSUxJTV9GQVVMVF9CSVQJCQlCSVQoMCkKKyNkZWZpbmUgIFdM
RURfQ1RSTF9SRUdfT1ZQX0ZBVUxUX0JJVAkJCUJJVCgxKQorI2RlZmluZSAgV0xFRDRfQ1RSTF9S
RUdfU0NfRkFVTFRfQklUCQkJQklUKDIpCisKKyNkZWZpbmUgV0xFRF9DVFJMX1JFR19JTlRfUlRf
U1RTCQkJMHgxMAorI2RlZmluZSAgV0xFRF9DVFJMX1JFR19PVlBfRkFVTFRfU1RBVFVTCQkJQklU
KDEpCisKICNkZWZpbmUgV0xFRF9DVFJMX1JFR19NT0RfRU4JCQkJMHg0NgogI2RlZmluZSAgV0xF
RF9DVFJMX1JFR19NT0RfRU5fTUFTSwkJCUJJVCg3KQogI2RlZmluZSAgV0xFRF9DVFJMX1JFR19N
T0RfRU5fU0hJRlQJCQk3CkBAIC0yOCw2ICszNiw4IEBACiAjZGVmaW5lIFdMRURfQ1RSTF9SRUdf
RlJFUQkJCQkweDRjCiAjZGVmaW5lICBXTEVEX0NUUkxfUkVHX0ZSRVFfTUFTSwkJCUdFTk1BU0so
MywgMCkKIAorI2RlZmluZSBXTEVEX0NUUkxfUkVHX0ZFRURCQUNLX0NPTlRST0wJCQkweDQ4CisK
ICNkZWZpbmUgV0xFRF9DVFJMX1JFR19PVlAJCQkJMHg0ZAogI2RlZmluZSAgV0xFRF9DVFJMX1JF
R19PVlBfTUFTSwkJCQlHRU5NQVNLKDEsIDApCiAKQEAgLTExOSw2ICsxMjksNyBAQCBzdHJ1Y3Qg
d2xlZF9jb25maWcgewogCWJvb2wgZXh0X2dlbjsKIAlib29sIGNhYmM7CiAJYm9vbCBleHRlcm5h
bF9wZmV0OworCWJvb2wgYXV0b19kZXRlY3Rpb25fZW5hYmxlZDsKIH07CiAKIHN0cnVjdCB3bGVk
IHsKQEAgLTEyNywxNiArMTM4LDIyIEBAIHN0cnVjdCB3bGVkIHsKIAlzdHJ1Y3QgcmVnbWFwICpy
ZWdtYXA7CiAJc3RydWN0IG11dGV4IGxvY2s7CS8qIExvY2sgdG8gYXZvaWQgcmFjZSBmcm9tIHRo
cmVhZCBpcnEgaGFuZGxlciAqLwogCWt0aW1lX3QgbGFzdF9zaG9ydF9ldmVudDsKKwlrdGltZV90
IHN0YXJ0X292cF9mYXVsdF90aW1lOwogCXUxNiBjdHJsX2FkZHI7CiAJdTE2IHNpbmtfYWRkcjsK
IAl1MTYgbWF4X3N0cmluZ19jb3VudDsKKwl1MTYgYXV0b19kZXRlY3Rpb25fb3ZwX2NvdW50Owog
CXUzMiBicmlnaHRuZXNzOwogCXUzMiBtYXhfYnJpZ2h0bmVzczsKIAl1MzIgc2hvcnRfY291bnQ7
CisJdTMyIGF1dG9fZGV0ZWN0X2NvdW50OwogCWJvb2wgZGlzYWJsZWRfYnlfc2hvcnQ7CiAJYm9v
bCBoYXNfc2hvcnRfZGV0ZWN0OworCWludCBvdnBfaXJxOworCWJvb2wgb3ZwX2lycV9kaXNhYmxl
ZDsKIAogCXN0cnVjdCB3bGVkX2NvbmZpZyBjZmc7CisJc3RydWN0IGRlbGF5ZWRfd29yayBvdnBf
d29yazsKIAlpbnQgKCp3bGVkX3NldF9icmlnaHRuZXNzKShzdHJ1Y3Qgd2xlZCAqd2xlZCwgdTE2
IGJyaWdodG5lc3MpOwogfTsKIApAQCAtMTgxLDYgKzE5OCwxNSBAQCBzdGF0aWMgaW50IHdsZWQ0
X3NldF9icmlnaHRuZXNzKHN0cnVjdCB3bGVkICp3bGVkLCB1MTYgYnJpZ2h0bmVzcykKIAlyZXR1
cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgd2xlZF9vdnBfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspCit7CisJc3RydWN0IHdsZWQgKndsZWQgPSBjb250YWluZXJfb2Yod29yaywKKwkJCQkJ
IHN0cnVjdCB3bGVkLCBvdnBfd29yay53b3JrKTsKKworCWlmICh3bGVkLT5vdnBfaXJxID4gMCkK
KwkJZW5hYmxlX2lycSh3bGVkLT5vdnBfaXJxKTsKK30KKwogc3RhdGljIGludCB3bGVkX21vZHVs
ZV9lbmFibGUoc3RydWN0IHdsZWQgKndsZWQsIGludCB2YWwpCiB7CiAJaW50IHJjOwpAQCAtMTky
LDcgKzIxOCwxOCBAQCBzdGF0aWMgaW50IHdsZWRfbW9kdWxlX2VuYWJsZShzdHJ1Y3Qgd2xlZCAq
d2xlZCwgaW50IHZhbCkKIAkJCQlXTEVEX0NUUkxfUkVHX01PRF9FTiwKIAkJCQlXTEVEX0NUUkxf
UkVHX01PRF9FTl9NQVNLLAogCQkJCXZhbCA8PCBXTEVEX0NUUkxfUkVHX01PRF9FTl9TSElGVCk7
Ci0JcmV0dXJuIHJjOworCWlmIChyYyA8IDApCisJCXJldHVybiByYzsKKworCWlmICh2YWwpIHsK
KwkJc2NoZWR1bGVfZGVsYXllZF93b3JrKCZ3bGVkLT5vdnBfd29yaywgSFogLyAxMDApOworCX0g
ZWxzZSB7CisJCWlmICghY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZ3bGVkLT5vdnBfd29yaykg
JiYKKwkJICAgIHdsZWQtPm92cF9pcnEgPiAwKQorCQkJZGlzYWJsZV9pcnEod2xlZC0+b3ZwX2ly
cSk7CisJfQorCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgd2xlZF9zeW5jX3RvZ2dsZShz
dHJ1Y3Qgd2xlZCAqd2xlZCkKQEAgLTI5OSw2ICszMzYsMzEyIEBAIHN0YXRpYyBpcnFyZXR1cm5f
dCB3bGVkX3Nob3J0X2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKl93bGVkKQogCXJldHVybiBJ
UlFfSEFORExFRDsKIH0KIAorI2RlZmluZSBBVVRPX0RFVEVDVF9CUklHSFRORVNTCQkyMDAKKwor
c3RhdGljIHZvaWQgd2xlZF9hdXRvX3N0cmluZ19kZXRlY3Rpb24oc3RydWN0IHdsZWQgKndsZWQp
Cit7CisJaW50IHJjID0gMCwgaTsKKwl1MzIgc2lua19jb25maWcgPSAwLCBpbnRfc3RzOworCXU4
IHNpbmtfdGVzdCA9IDAsIHNpbmtfdmFsaWQgPSAwLCB2YWw7CisKKwkvKiByZWFkIGNvbmZpZ3Vy
ZWQgc2luayBjb25maWd1cmF0aW9uICovCisJcmMgPSByZWdtYXBfcmVhZCh3bGVkLT5yZWdtYXAs
IHdsZWQtPnNpbmtfYWRkciArCisJCQkgV0xFRDRfU0lOS19SRUdfQ1VSUl9TSU5LLCAmc2lua19j
b25maWcpOworCWlmIChyYyA8IDApIHsKKwkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8g
cmVhZCBTSU5LIGNvbmZpZ3VyYXRpb24gcmM9JWRcbiIsCisJCQlyYyk7CisJCWdvdG8gZmFpbGVk
X2RldGVjdDsKKwl9CisKKwkvKiBkaXNhYmxlIHRoZSBtb2R1bGUgYmVmb3JlIHN0YXJ0aW5nIGRl
dGVjdGlvbiAqLworCXJjID0gcmVnbWFwX3VwZGF0ZV9iaXRzKHdsZWQtPnJlZ21hcCwKKwkJCQl3
bGVkLT5jdHJsX2FkZHIgKyBXTEVEX0NUUkxfUkVHX01PRF9FTiwKKwkJCQlXTEVEX0NUUkxfUkVH
X01PRF9FTl9NQVNLLCAwKTsKKwlpZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAi
RmFpbGVkIHRvIGRpc2FibGUgV0xFRCBtb2R1bGUgcmM9JWRcbiIsIHJjKTsKKwkJZ290byBmYWls
ZWRfZGV0ZWN0OworCX0KKworCS8qIHNldCBsb3cgYnJpZ2h0bmVzcyBhY3Jvc3MgYWxsIHNpbmtz
ICovCisJcmMgPSB3bGVkNF9zZXRfYnJpZ2h0bmVzcyh3bGVkLCBBVVRPX0RFVEVDVF9CUklHSFRO
RVNTKTsKKwlpZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHNl
dCBicmlnaHRuZXNzIGZvciBhdXRvIGRldGVjdGlvbiByYz0lZFxuIiwKKwkJCXJjKTsKKwkJZ290
byBmYWlsZWRfZGV0ZWN0OworCX0KKworCWlmICh3bGVkLT5jZmcuY2FiYykgeworCQlmb3IgKGkg
PSAwOyBpIDwgd2xlZC0+Y2ZnLm51bV9zdHJpbmdzOyBpKyspIHsKKwkJCXJjID0gcmVnbWFwX3Vw
ZGF0ZV9iaXRzKHdsZWQtPnJlZ21hcCwgd2xlZC0+c2lua19hZGRyICsKKwkJCQkJCVdMRUQ0X1NJ
TktfUkVHX1NUUl9DQUJDKGkpLAorCQkJCQkJV0xFRDRfU0lOS19SRUdfU1RSX0NBQkNfTUFTSywK
KwkJCQkJCTApOworCQkJaWYgKHJjIDwgMCkKKwkJCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJCX0K
Kwl9CisKKwkvKiBkaXNhYmxlIGFsbCBzaW5rcyAqLworCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQt
PnJlZ21hcCwKKwkJCSAgd2xlZC0+c2lua19hZGRyICsgV0xFRDRfU0lOS19SRUdfQ1VSUl9TSU5L
LCAwKTsKKwlpZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIGRp
c2FibGUgYWxsIHNpbmtzIHJjPSVkXG4iLCByYyk7CisJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwl9
CisKKwkvKiBpdGVyYXRlIHRocm91Z2ggdGhlIHN0cmluZ3Mgb25lIGJ5IG9uZSAqLworCWZvciAo
aSA9IDA7IGkgPCB3bGVkLT5jZmcubnVtX3N0cmluZ3M7IGkrKykgeworCQlzaW5rX3Rlc3QgPSBC
SVQoKFdMRUQ0X1NJTktfUkVHX0NVUlJfU0lOS19TSEZUICsgaSkpOworCisJCS8qIEVuYWJsZSBm
ZWVkYmFjayBjb250cm9sICovCisJCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwgd2xl
ZC0+Y3RybF9hZGRyICsKKwkJCQkgIFdMRURfQ1RSTF9SRUdfRkVFREJBQ0tfQ09OVFJPTCwgaSAr
IDEpOworCQlpZiAocmMgPCAwKSB7CisJCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxlZCB0byBl
bmFibGUgZmVlZGJhY2sgZm9yIFNJTksgJWQgcmMgPSAlZFxuIiwKKwkJCQlpICsgMSwgcmMpOwor
CQkJZ290byBmYWlsZWRfZGV0ZWN0OworCQl9CisKKwkJLyogZW5hYmxlIHRoZSBzaW5rICovCisJ
CXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwgd2xlZC0+c2lua19hZGRyICsKKwkJCQkg
IFdMRUQ0X1NJTktfUkVHX0NVUlJfU0lOSywgc2lua190ZXN0KTsKKwkJaWYgKHJjIDwgMCkgewor
CQkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8gY29uZmlndXJlIFNJTksgJWQgcmM9JWRc
biIsCisJCQkJaSArIDEsIHJjKTsKKwkJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwkJfQorCisJCS8q
IEVuYWJsZSB0aGUgbW9kdWxlICovCisJCXJjID0gcmVnbWFwX3VwZGF0ZV9iaXRzKHdsZWQtPnJl
Z21hcCwgd2xlZC0+Y3RybF9hZGRyICsKKwkJCQkJV0xFRF9DVFJMX1JFR19NT0RfRU4sCisJCQkJ
CVdMRURfQ1RSTF9SRUdfTU9EX0VOX01BU0ssCisJCQkJCVdMRURfQ1RSTF9SRUdfTU9EX0VOX01B
U0spOworCQlpZiAocmMgPCAwKSB7CisJCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxlZCB0byBl
bmFibGUgV0xFRCBtb2R1bGUgcmM9JWRcbiIsCisJCQkJcmMpOworCQkJZ290byBmYWlsZWRfZGV0
ZWN0OworCQl9CisKKwkJdXNsZWVwX3JhbmdlKFdMRURfU09GVF9TVEFSVF9ETFlfVVMsCisJCQkg
ICAgIFdMRURfU09GVF9TVEFSVF9ETFlfVVMgKyAxMDAwKTsKKworCQlyYyA9IHJlZ21hcF9yZWFk
KHdsZWQtPnJlZ21hcCwgd2xlZC0+Y3RybF9hZGRyICsKKwkJCQkgV0xFRF9DVFJMX1JFR19JTlRf
UlRfU1RTLCAmaW50X3N0cyk7CisJCWlmIChyYyA8IDApIHsKKwkJCWRldl9lcnIod2xlZC0+ZGV2
LCAiRXJyb3IgaW4gcmVhZGluZyBXTEVEM19DVFJMX0lOVF9SVF9TVFMgcmM9JWRcbiIsCisJCQkJ
cmMpOworCQkJZ290byBmYWlsZWRfZGV0ZWN0OworCQl9CisKKwkJaWYgKGludF9zdHMgJiBXTEVE
X0NUUkxfUkVHX09WUF9GQVVMVF9TVEFUVVMpCisJCQlkZXZfZGJnKHdsZWQtPmRldiwgIldMRUQg
T1ZQIGZhdWx0IGRldGVjdGVkIHdpdGggU0lOSyAlZFxuIiwKKwkJCQlpICsgMSk7CisJCWVsc2UK
KwkJCXNpbmtfdmFsaWQgfD0gc2lua190ZXN0OworCisJCS8qIERpc2FibGUgdGhlIG1vZHVsZSAq
LworCQlyYyA9IHJlZ21hcF91cGRhdGVfYml0cyh3bGVkLT5yZWdtYXAsCisJCQkJCXdsZWQtPmN0
cmxfYWRkciArIFdMRURfQ1RSTF9SRUdfTU9EX0VOLAorCQkJCQlXTEVEX0NUUkxfUkVHX01PRF9F
Tl9NQVNLLCAwKTsKKwkJaWYgKHJjIDwgMCkgeworCQkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWls
ZWQgdG8gZGlzYWJsZSBXTEVEIG1vZHVsZSByYz0lZFxuIiwKKwkJCQlyYyk7CisJCQlnb3RvIGZh
aWxlZF9kZXRlY3Q7CisJCX0KKwl9CisKKwlpZiAoIXNpbmtfdmFsaWQpIHsKKwkJZGV2X2Vycih3
bGVkLT5kZXYsICJObyB2YWxpZCBXTEVEIHNpbmtzIGZvdW5kXG4iKTsKKwkJd2xlZC0+ZGlzYWJs
ZWRfYnlfc2hvcnQgPSB0cnVlOworCQlnb3RvIGZhaWxlZF9kZXRlY3Q7CisJfQorCisJaWYgKHNp
bmtfdmFsaWQgPT0gc2lua19jb25maWcpIHsKKwkJZGV2X2RiZyh3bGVkLT5kZXYsICJXTEVEIGF1
dG8tZGV0ZWN0aW9uIGNvbXBsZXRlLCBzaW5rLWNvbmZpZz0leCBPSyFcbiIsCisJCQlzaW5rX2Nv
bmZpZyk7CisJfSBlbHNlIHsKKwkJZGV2X3dhcm4od2xlZC0+ZGV2LCAiTmV3IFdMRUQgc3RyaW5n
IGNvbmZpZ3VyYXRpb24gZm91bmQgJXhcbiIsCisJCQkgc2lua192YWxpZCk7CisJCXNpbmtfY29u
ZmlnID0gc2lua192YWxpZDsKKwl9CisKKwkvKiB3cml0ZSB0aGUgbmV3IHNpbmsgY29uZmlndXJh
dGlvbiAqLworCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwKKwkJCSAgd2xlZC0+c2lu
a19hZGRyICsgV0xFRDRfU0lOS19SRUdfQ1VSUl9TSU5LLAorCQkJICBzaW5rX2NvbmZpZyk7CisJ
aWYgKHJjIDwgMCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIkZhaWxlZCB0byByZWNvbmZpZ3Vy
ZSB0aGUgZGVmYXVsdCBzaW5rIHJjPSVkXG4iLAorCQkJcmMpOworCQlnb3RvIGZhaWxlZF9kZXRl
Y3Q7CisJfQorCisJLyogRW5hYmxlIHZhbGlkIHNpbmtzICovCisJZm9yIChpID0gMDsgaSA8IHds
ZWQtPmNmZy5udW1fc3RyaW5nczsgaSsrKSB7CisJCWlmICh3bGVkLT5jZmcuY2FiYykgeworCQkJ
cmMgPSByZWdtYXBfdXBkYXRlX2JpdHMod2xlZC0+cmVnbWFwLCB3bGVkLT5zaW5rX2FkZHIgKwor
CQkJCQkJV0xFRDRfU0lOS19SRUdfU1RSX0NBQkMoaSksCisJCQkJCQlXTEVENF9TSU5LX1JFR19T
VFJfQ0FCQ19NQVNLLAorCQkJCQkJV0xFRDRfU0lOS19SRUdfU1RSX0NBQkNfTUFTSyk7CisJCQlp
ZiAocmMgPCAwKQorCQkJCWdvdG8gZmFpbGVkX2RldGVjdDsKKwkJfQorCisJCWlmIChzaW5rX2Nv
bmZpZyAmIEJJVChXTEVENF9TSU5LX1JFR19DVVJSX1NJTktfU0hGVCArIGkpKQorCQkJdmFsID0g
V0xFRDRfU0lOS19SRUdfU1RSX01PRF9NQVNLOworCQllbHNlCisJCQl2YWwgPSAweDA7IC8qIGRp
c2FibGUgbW9kdWxhdG9yX2VuIGZvciB1bnVzZWQgc2luayAqLworCisJCXJjID0gcmVnbWFwX3dy
aXRlKHdsZWQtPnJlZ21hcCwgd2xlZC0+c2lua19hZGRyICsKKwkJCQkgIFdMRUQ0X1NJTktfUkVH
X1NUUl9NT0RfRU4oaSksIHZhbCk7CisJCWlmIChyYyA8IDApIHsKKwkJCWRldl9lcnIod2xlZC0+
ZGV2LCAiRmFpbGVkIHRvIGNvbmZpZ3VyZSBNT0RVTEFUT1JfRU4gcmM9JWRcbiIsCisJCQkJcmMp
OworCQkJZ290byBmYWlsZWRfZGV0ZWN0OworCQl9CisJfQorCisJLyogcmVzdG9yZSB0aGUgZmVl
ZGJhY2sgc2V0dGluZyAqLworCXJjID0gcmVnbWFwX3dyaXRlKHdsZWQtPnJlZ21hcCwKKwkJCSAg
d2xlZC0+Y3RybF9hZGRyICsgV0xFRF9DVFJMX1JFR19GRUVEQkFDS19DT05UUk9MLCAwKTsKKwlp
ZiAocmMgPCAwKSB7CisJCWRldl9lcnIod2xlZC0+ZGV2LCAiRmFpbGVkIHRvIHJlc3RvcmUgZmVl
ZGJhY2sgc2V0dGluZyByYz0lZFxuIiwKKwkJCXJjKTsKKwkJZ290byBmYWlsZWRfZGV0ZWN0Owor
CX0KKworCS8qIHJlc3RvcmUgYnJpZ2h0bmVzcyAqLworCXJjID0gd2xlZDRfc2V0X2JyaWdodG5l
c3Mod2xlZCwgd2xlZC0+YnJpZ2h0bmVzcyk7CisJaWYgKHJjIDwgMCkgeworCQlkZXZfZXJyKHds
ZWQtPmRldiwgIkZhaWxlZCB0byBzZXQgYnJpZ2h0bmVzcyBhZnRlciBhdXRvIGRldGVjdGlvbiBy
Yz0lZFxuIiwKKwkJCXJjKTsKKwkJZ290byBmYWlsZWRfZGV0ZWN0OworCX0KKworCXJjID0gcmVn
bWFwX3VwZGF0ZV9iaXRzKHdsZWQtPnJlZ21hcCwKKwkJCQl3bGVkLT5jdHJsX2FkZHIgKyBXTEVE
X0NUUkxfUkVHX01PRF9FTiwKKwkJCQlXTEVEX0NUUkxfUkVHX01PRF9FTl9NQVNLLAorCQkJCVdM
RURfQ1RSTF9SRUdfTU9EX0VOX01BU0spOworCWlmIChyYyA8IDApIHsKKwkJZGV2X2Vycih3bGVk
LT5kZXYsICJGYWlsZWQgdG8gZW5hYmxlIFdMRUQgbW9kdWxlIHJjPSVkXG4iLCByYyk7CisJCWdv
dG8gZmFpbGVkX2RldGVjdDsKKwl9CisKK2ZhaWxlZF9kZXRlY3Q6CisJcmV0dXJuOworfQorCisj
ZGVmaW5lIFdMRURfQVVUT19ERVRFQ1RfT1ZQX0NPVU5UCQk1CisjZGVmaW5lIFdMRURfQVVUT19E
RVRFQ1RfQ05UX0RMWV9VUwkJVVNFQ19QRVJfU0VDCitzdGF0aWMgYm9vbCB3bGVkX2F1dG9fZGV0
ZWN0aW9uX3JlcXVpcmVkKHN0cnVjdCB3bGVkICp3bGVkKQoreworCXM2NCBlbGFwc2VkX3RpbWVf
dXM7CisKKwlpZiAoIXdsZWQtPmNmZy5hdXRvX2RldGVjdGlvbl9lbmFibGVkKQorCQlyZXR1cm4g
ZmFsc2U7CisKKwkvKgorCSAqIENoZWNrIGlmIHRoZSBPVlAgZmF1bHQgd2FzIGFuIG9jY2FzaW9u
YWwgb25lCisJICogb3IgaWYgaXQncyBmaXJpbmcgY29udGludW91c2x5LCB0aGUgbGF0dGVyIHF1
YWxpZmllcworCSAqIGZvciBhbiBhdXRvLWRldGVjdGlvbiBjaGVjay4KKwkgKi8KKwlpZiAoIXds
ZWQtPmF1dG9fZGV0ZWN0aW9uX292cF9jb3VudCkgeworCQl3bGVkLT5zdGFydF9vdnBfZmF1bHRf
dGltZSA9IGt0aW1lX2dldCgpOworCQl3bGVkLT5hdXRvX2RldGVjdGlvbl9vdnBfY291bnQrKzsK
Kwl9IGVsc2UgeworCQllbGFwc2VkX3RpbWVfdXMgPSBrdGltZV91c19kZWx0YShrdGltZV9nZXQo
KSwKKwkJCQkJCSB3bGVkLT5zdGFydF9vdnBfZmF1bHRfdGltZSk7CisJCWlmIChlbGFwc2VkX3Rp
bWVfdXMgPiBXTEVEX0FVVE9fREVURUNUX0NOVF9ETFlfVVMpCisJCQl3bGVkLT5hdXRvX2RldGVj
dGlvbl9vdnBfY291bnQgPSAwOworCQllbHNlCisJCQl3bGVkLT5hdXRvX2RldGVjdGlvbl9vdnBf
Y291bnQrKzsKKworCQlpZiAod2xlZC0+YXV0b19kZXRlY3Rpb25fb3ZwX2NvdW50ID49CisJCQkJ
V0xFRF9BVVRPX0RFVEVDVF9PVlBfQ09VTlQpIHsKKwkJCXdsZWQtPmF1dG9fZGV0ZWN0aW9uX292
cF9jb3VudCA9IDA7CisJCQlyZXR1cm4gdHJ1ZTsKKwkJfQorCX0KKworCXJldHVybiBmYWxzZTsK
K30KKworc3RhdGljIGludCB3bGVkX2F1dG9fZGV0ZWN0aW9uX2F0X2luaXQoc3RydWN0IHdsZWQg
KndsZWQpCit7CisJaW50IHJjOworCXUzMiBmYXVsdF9zdGF0dXMsIHJ0X3N0YXR1czsKKworCWlm
ICghd2xlZC0+Y2ZnLmF1dG9fZGV0ZWN0aW9uX2VuYWJsZWQpCisJCXJldHVybiAwOworCisJcmMg
PSByZWdtYXBfcmVhZCh3bGVkLT5yZWdtYXAsCisJCQkgd2xlZC0+Y3RybF9hZGRyICsgV0xFRF9D
VFJMX1JFR19JTlRfUlRfU1RTLAorCQkJICZydF9zdGF0dXMpOworCWlmIChyYyA8IDApIHsKKwkJ
ZGV2X2Vycih3bGVkLT5kZXYsICJGYWlsZWQgdG8gcmVhZCBSVCBzdGF0dXMgcmM9JWRcbiIsIHJj
KTsKKwkJcmV0dXJuIHJjOworCX0KKworCXJjID0gcmVnbWFwX3JlYWQod2xlZC0+cmVnbWFwLAor
CQkJIHdsZWQtPmN0cmxfYWRkciArIFdMRURfQ1RSTF9SRUdfRkFVTFRfU1RBVFVTLAorCQkJICZm
YXVsdF9zdGF0dXMpOworCWlmIChyYyA8IDApIHsKKwkJZGV2X2Vycih3bGVkLT5kZXYsICJGYWls
ZWQgdG8gcmVhZCBmYXVsdCBzdGF0dXMgcmM9JWRcbiIsIHJjKTsKKwkJcmV0dXJuIHJjOworCX0K
KworCWlmICgocnRfc3RhdHVzICYgV0xFRF9DVFJMX1JFR19PVlBfRkFVTFRfU1RBVFVTKSB8fAor
CSAgICAoZmF1bHRfc3RhdHVzICYgV0xFRF9DVFJMX1JFR19PVlBfRkFVTFRfQklUKSkgeworCQlt
dXRleF9sb2NrKCZ3bGVkLT5sb2NrKTsKKwkJd2xlZF9hdXRvX3N0cmluZ19kZXRlY3Rpb24od2xl
ZCk7CisJCW11dGV4X3VubG9jaygmd2xlZC0+bG9jayk7CisJfQorCisJcmV0dXJuIHJjOworfQor
CitzdGF0aWMgaXJxcmV0dXJuX3Qgd2xlZF9vdnBfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAq
X3dsZWQpCit7CisJc3RydWN0IHdsZWQgKndsZWQgPSBfd2xlZDsKKwlpbnQgcmM7CisJdTMyIGlu
dF9zdHMsIGZhdWx0X3N0czsKKworCXJjID0gcmVnbWFwX3JlYWQod2xlZC0+cmVnbWFwLAorCQkJ
IHdsZWQtPmN0cmxfYWRkciArIFdMRURfQ1RSTF9SRUdfSU5UX1JUX1NUUywgJmludF9zdHMpOwor
CWlmIChyYyA8IDApIHsKKwkJZGV2X2Vycih3bGVkLT5kZXYsICJFcnJvciBpbiByZWFkaW5nIFdM
RUQzX0lOVF9SVF9TVFMgcmM9JWRcbiIsCisJCQlyYyk7CisJCXJldHVybiBJUlFfSEFORExFRDsK
Kwl9CisKKwlyYyA9IHJlZ21hcF9yZWFkKHdsZWQtPnJlZ21hcCwgd2xlZC0+Y3RybF9hZGRyICsK
KwkJCSBXTEVEX0NUUkxfUkVHX0ZBVUxUX1NUQVRVUywgJmZhdWx0X3N0cyk7CisJaWYgKHJjIDwg
MCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIkVycm9yIGluIHJlYWRpbmcgV0xFRF9GQVVMVF9T
VEFUVVMgcmM9JWRcbiIsCisJCQlyYyk7CisJCXJldHVybiBJUlFfSEFORExFRDsKKwl9CisKKwlp
ZiAoZmF1bHRfc3RzICYKKwkJKFdMRURfQ1RSTF9SRUdfT1ZQX0ZBVUxUX0JJVCB8IFdMRURfQ1RS
TF9SRUdfSUxJTV9GQVVMVF9CSVQpKQorCQlkZXZfZGJnKHdsZWQtPmRldiwgIldMRUQgT1ZQIGZh
dWx0IGRldGVjdGVkLCBpbnRfc3RzPSV4IGZhdWx0X3N0cz0gJXhcbiIsCisJCQlpbnRfc3RzLCBm
YXVsdF9zdHMpOworCisJaWYgKGZhdWx0X3N0cyAmIFdMRURfQ1RSTF9SRUdfT1ZQX0ZBVUxUX0JJ
VCkgeworCQltdXRleF9sb2NrKCZ3bGVkLT5sb2NrKTsKKwkJZGlzYWJsZV9pcnFfbm9zeW5jKHds
ZWQtPm92cF9pcnEpOworCisJCWlmICh3bGVkX2F1dG9fZGV0ZWN0aW9uX3JlcXVpcmVkKHdsZWQp
KQorCQkJd2xlZF9hdXRvX3N0cmluZ19kZXRlY3Rpb24od2xlZCk7CisKKwkJZW5hYmxlX2lycSh3
bGVkLT5vdnBfaXJxKTsKKwkJd2xlZC0+b3ZwX2lycV9kaXNhYmxlZCA9IGZhbHNlOworCisJCW11
dGV4X3VubG9jaygmd2xlZC0+bG9jayk7CisJfQorCisJcmV0dXJuIElSUV9IQU5ETEVEOworfQor
CiBzdGF0aWMgaW50IHdsZWQzX3NldHVwKHN0cnVjdCB3bGVkICp3bGVkKQogewogCXUxNiBhZGRy
OwpAQCAtNDM1LDggKzc3OCwxMCBAQCBzdGF0aWMgaW50IHdsZWQ0X3NldHVwKHN0cnVjdCB3bGVk
ICp3bGVkKQogCQlzaW5rX2VuIHw9IDEgPDwgdGVtcDsKIAl9CiAKLQlpZiAoc2lua19jZmcgPT0g
c2lua19lbikKLQkJcmV0dXJuIDA7CisJaWYgKHNpbmtfY2ZnID09IHNpbmtfZW4pIHsKKwkJcmMg
PSB3bGVkX2F1dG9fZGV0ZWN0aW9uX2F0X2luaXQod2xlZCk7CisJCXJldHVybiByYzsKKwl9CiAK
IAlyYyA9IHJlZ21hcF91cGRhdGVfYml0cyh3bGVkLT5yZWdtYXAsCiAJCQkJd2xlZC0+c2lua19h
ZGRyICsgV0xFRDRfU0lOS19SRUdfQ1VSUl9TSU5LLApAQCAtNDk5LDcgKzg0NCw5IEBAIHN0YXRp
YyBpbnQgd2xlZDRfc2V0dXAoc3RydWN0IHdsZWQgKndsZWQpCiAJCXJldHVybiByYzsKIAl9CiAK
LQlyZXR1cm4gMDsKKwlyYyA9IHdsZWRfYXV0b19kZXRlY3Rpb25fYXRfaW5pdCh3bGVkKTsKKwor
CXJldHVybiByYzsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCB3bGVkX2NvbmZpZyB3bGVkNF9j
b25maWdfZGVmYXVsdHMgPSB7CkBAIC01MTAsNiArODU3LDcgQEAgc3RhdGljIGludCB3bGVkNF9z
ZXR1cChzdHJ1Y3Qgd2xlZCAqd2xlZCkKIAkuc3dpdGNoX2ZyZXEgPSAxMSwKIAkuY2FiYyA9IGZh
bHNlLAogCS5leHRlcm5hbF9wZmV0ID0gZmFsc2UsCisJLmF1dG9fZGV0ZWN0aW9uX2VuYWJsZWQg
PSBmYWxzZSwKIH07CiAKIHN0YXRpYyBjb25zdCB1MzIgd2xlZDNfYm9vc3RfaV9saW1pdF92YWx1
ZXNbXSA9IHsKQEAgLTY3Niw2ICsxMDI0LDcgQEAgc3RhdGljIGludCB3bGVkX2NvbmZpZ3VyZShz
dHJ1Y3Qgd2xlZCAqd2xlZCwgaW50IHZlcnNpb24pCiAJCXsgInFjb20sZXh0LWdlbiIsICZjZmct
PmV4dF9nZW4sIH0sCiAJCXsgInFjb20sY2FiYyIsICZjZmctPmNhYmMsIH0sCiAJCXsgInFjb20s
ZXh0ZXJuYWwtcGZldCIsICZjZmctPmV4dGVybmFsX3BmZXQsIH0sCisJCXsgInFjb20sYXV0by1z
dHJpbmctZGV0ZWN0aW9uIiwgJmNmZy0+YXV0b19kZXRlY3Rpb25fZW5hYmxlZCwgfSwKIAl9Owog
CiAJcHJvcF9hZGRyID0gb2ZfZ2V0X2FkZHJlc3MoZGV2LT5vZl9ub2RlLCAwLCBOVUxMLCBOVUxM
KTsKQEAgLTc5Niw2ICsxMTQ1LDQyIEBAIHN0YXRpYyBpbnQgd2xlZF9jb25maWd1cmVfc2hvcnRf
aXJxKHN0cnVjdCB3bGVkICp3bGVkLAogCXJldHVybiByYzsKIH0KIAorc3RhdGljIGludCB3bGVk
X2NvbmZpZ3VyZV9vdnBfaXJxKHN0cnVjdCB3bGVkICp3bGVkLAorCQkJCSAgc3RydWN0IHBsYXRm
b3JtX2RldmljZSAqcGRldikKK3sKKwlpbnQgcmM7CisJdTMyIHZhbDsKKworCXdsZWQtPm92cF9p
cnEgPSBwbGF0Zm9ybV9nZXRfaXJxX2J5bmFtZShwZGV2LCAib3ZwIik7CisJaWYgKHdsZWQtPm92
cF9pcnEgPCAwKSB7CisJCWRldl9kYmcoJnBkZXYtPmRldiwgIm92cCBpcnEgaXMgbm90IHVzZWRc
biIpOworCQlyZXR1cm4gMDsKKwl9CisKKwlyYyA9IGRldm1fcmVxdWVzdF90aHJlYWRlZF9pcnEo
d2xlZC0+ZGV2LCB3bGVkLT5vdnBfaXJxLCBOVUxMLAorCQkJCSAgICAgICB3bGVkX292cF9pcnFf
aGFuZGxlciwgSVJRRl9PTkVTSE9ULAorCQkJCSAgICAgICAid2xlZF9vdnBfaXJxIiwgd2xlZCk7
CisJaWYgKHJjIDwgMCkgeworCQlkZXZfZXJyKHdsZWQtPmRldiwgIlVuYWJsZSB0byByZXF1ZXN0
IG92cF9pcnEgKGVycjolZClcbiIsCisJCQlyYyk7CisJCXdsZWQtPm92cF9pcnEgPSAwOworCQly
ZXR1cm4gMDsKKwl9CisKKwlyYyA9IHJlZ21hcF9yZWFkKHdsZWQtPnJlZ21hcCwgd2xlZC0+Y3Ry
bF9hZGRyICsKKwkJCSBXTEVEX0NUUkxfUkVHX01PRF9FTiwgJnZhbCk7CisJaWYgKHJjIDwgMCkK
KwkJcmV0dXJuIHJjOworCisJLyogS2VlcCBPVlAgaXJxIGRpc2FibGVkIHVudGlsIG1vZHVsZSBp
cyBlbmFibGVkICovCisJaWYgKCEodmFsICYgV0xFRF9DVFJMX1JFR19NT0RfRU5fTUFTSykpIHsK
KwkJZGlzYWJsZV9pcnEod2xlZC0+b3ZwX2lycSk7CisJCXdsZWQtPm92cF9pcnFfZGlzYWJsZWQg
PSB0cnVlOworCX0KKworCXJldHVybiAwOworfQorCiBzdGF0aWMgY29uc3Qgc3RydWN0IGJhY2ts
aWdodF9vcHMgd2xlZF9vcHMgPSB7CiAJLnVwZGF0ZV9zdGF0dXMgPSB3bGVkX3VwZGF0ZV9zdGF0
dXMsCiB9OwpAQCAtODM2LDYgKzEyMjEsNyBAQCBzdGF0aWMgaW50IHdsZWRfcHJvYmUoc3RydWN0
IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAogCXN3aXRjaCAodmVyc2lvbikgewogCWNhc2UgMzoK
KwkJd2xlZC0+Y2ZnLmF1dG9fZGV0ZWN0aW9uX2VuYWJsZWQgPSBmYWxzZTsKIAkJcmMgPSB3bGVk
M19zZXR1cCh3bGVkKTsKIAkJaWYgKHJjKSB7CiAJCQlkZXZfZXJyKCZwZGV2LT5kZXYsICJ3bGVk
M19zZXR1cCBmYWlsZWRcbiIpOwpAQCAtODU3LDEwICsxMjQzLDE2IEBAIHN0YXRpYyBpbnQgd2xl
ZF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCQlicmVhazsKIAl9CiAKKwlJ
TklUX0RFTEFZRURfV09SSygmd2xlZC0+b3ZwX3dvcmssIHdsZWRfb3ZwX3dvcmspOworCiAJcmMg
PSB3bGVkX2NvbmZpZ3VyZV9zaG9ydF9pcnEod2xlZCwgcGRldik7CiAJaWYgKHJjIDwgMCkKIAkJ
cmV0dXJuIHJjOwogCisJcmMgPSB3bGVkX2NvbmZpZ3VyZV9vdnBfaXJxKHdsZWQsIHBkZXYpOwor
CWlmIChyYyA8IDApCisJCXJldHVybiByYzsKKwogCXZhbCA9IFdMRURfREVGQVVMVF9CUklHSFRO
RVNTOwogCW9mX3Byb3BlcnR5X3JlYWRfdTMyKHBkZXYtPmRldi5vZl9ub2RlLCAiZGVmYXVsdC1i
cmlnaHRuZXNzIiwgJnZhbCk7CiAKLS0gClRoZSBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRlciwg
SW5jLiBpcyBhIG1lbWJlciBvZiB0aGUgQ29kZSBBdXJvcmEgRm9ydW0sCiBhIExpbnV4IEZvdW5k
YXRpb24gQ29sbGFib3JhdGl2ZSBQcm9qZWN0CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
