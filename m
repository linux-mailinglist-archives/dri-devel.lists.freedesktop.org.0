Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 03DE021FF6B
	for <lists+dri-devel@lfdr.de>; Tue, 14 Jul 2020 23:00:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 810636E9AF;
	Tue, 14 Jul 2020 20:59:16 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A9F186E9A0;
 Tue, 14 Jul 2020 20:58:47 +0000 (UTC)
IronPort-SDR: BPW+qAu460pOJguWX77+lgHuGfhX6C+6hAeed46JW/ABUVWpApG3ZQv0z+TJyPuI8Nn0seFK+s
 zHseAoMnDiDA==
X-IronPort-AV: E=McAfee;i="6000,8403,9682"; a="150444624"
X-IronPort-AV: E=Sophos;i="5.75,352,1589266800"; d="scan'208";a="150444624"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 14 Jul 2020 13:58:47 -0700
IronPort-SDR: 57lGdR4vPl3DVBybtPMDDQPIBlQ/EL9xR4YL20udF3vGzlR47FWBRRMyKdOCU+mLVIzG9h8LPu
 aqxHXr2Wn4jA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.75,352,1589266800"; d="scan'208";a="316504299"
Received: from ahanamuk-mobl.amr.corp.intel.com (HELO
 achrisan-DESK2.amr.corp.intel.com) ([10.251.155.61])
 by orsmga008.jf.intel.com with ESMTP; 14 Jul 2020 13:58:46 -0700
From: Anitha Chrisanthus <anitha.chrisanthus@intel.com>
To: dri-devel@lists.freedesktop.org, anitha.chrisanthus@intel.com,
 bob.j.paauwe@intel.com, edmund.j.dea@intel.com
Subject: [PATCH v2 52/59] drm/kmb: Cleaned up code
Date: Tue, 14 Jul 2020 13:57:38 -0700
Message-Id: <1594760265-11618-53-git-send-email-anitha.chrisanthus@intel.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1594760265-11618-1-git-send-email-anitha.chrisanthus@intel.com>
References: <1594760265-11618-1-git-send-email-anitha.chrisanthus@intel.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: daniel.vetter@intel.com, intel-gfx@lists.freedesktop.org,
 rodrigo.vivi@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogRWRtdW5kIERlYSA8ZWRtdW5kLmouZGVhQGludGVsLmNvbT4KCnRvIHJlbW92ZSBjb21w
aWxlciB3YXJuaW5ncyBhbmQgZ2VuZXJhbCBjbGVhbiB1cAoKdjI6IG1pbm9yIGNvZGUgcmV2aWV3
IGNoYW5nZXMKdjM6IHVwY2xhc3NlZCBkZXZfcHJpdmF0ZSwgY29ycmVjdGVkIHNwZWxsaW5nCgpT
aWduZWQtb2ZmLWJ5OiBFZG11bmQgRGVhIDxlZG11bmQuai5kZWFAaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9rbWIva21iX2NydGMuYyAgfCAgIDQ2ICstCiBkcml2ZXJzL2dwdS9kcm0v
a21iL2ttYl9jcnRjLmggIHwgICAgNiArLQogZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHJ2LmMg
ICB8ICAxMTEgKystLQogZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHJ2LmggICB8ICAxMDcgKyst
LQogZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHNpLmMgICB8IDEwNzQgKysrKysrKysrKysrKysr
KysrKysrLS0tLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2kuaCAg
IHwgICA4NCArKy0KIGRyaXZlcnMvZ3B1L2RybS9rbWIva21iX3BsYW5lLmMgfCAgMTU1ICsrLS0t
LQogZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfcGxhbmUuaCB8ICAgNzQgKystCiBkcml2ZXJzL2dw
dS9kcm0va21iL2ttYl9yZWdzLmggIHwgICAyOSArLQogOSBmaWxlcyBjaGFuZ2VkLCA4OTQgaW5z
ZXJ0aW9ucygrKSwgNzkyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9rbWIva21iX2NydGMuYyBiL2RyaXZlcnMvZ3B1L2RybS9rbWIva21iX2NydGMuYwppbmRleCBj
MzkwYmJlLi5hY2VjYTk0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9jcnRj
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfY3J0Yy5jCkBAIC0zOSwxMCArMzksMTAg
QEAgc3RhdGljIGludCBrbWJfY3J0Y19lbmFibGVfdmJsYW5rKHN0cnVjdCBkcm1fY3J0YyAqY3J0
YykKIAlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfSU5UX0NMRUFSLCBMQ0RfSU5UX1ZFUlRfQ09N
UCk7CiAJLypzZXQgd2hpY2ggaW50ZXJ2YWwgdG8gZ2VuZXJhdGUgdmVydGljYWwgaW50ZXJydXB0
ICovCiAJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX1ZTVEFUVVNfQ09NUEFSRSwKLQkJCUxDRF9W
U1RBVFVTX0NPTVBBUkVfVlNZTkMpOworCQkgICAgICBMQ0RfVlNUQVRVU19DT01QQVJFX1ZTWU5D
KTsKIAkvKiBlbmFibGUgdmVydGljYWwgaW50ZXJydXB0ICovCiAJa21iX3NldF9iaXRtYXNrX2xj
ZChkZXZfcCwgTENEX0lOVF9FTkFCTEUsCi0JCQlMQ0RfSU5UX1ZFUlRfQ09NUCk7CisJCQkgICAg
TENEX0lOVF9WRVJUX0NPTVApOwogCXJldHVybiAwOwogfQogCkBAIC04MywzOCArODMsMzggQEAg
c3RhdGljIHZvaWQga21iX2NydGNfbW9kZV9zZXRfbm9mYihzdHJ1Y3QgZHJtX2NydGMgKmNydGMp
CiAJLyogaW5pdGlhbGl6ZSBtaXBpICovCiAJa21iX2RzaV9od19pbml0KGRldiwgbSk7CiAJRFJN
X0lORk8oInZmcD0gJWQgdmJwPSAlZCB2c3ljX2xlbj0lZCBoZnA9JWQgaGJwPSVkIGhzeW5jX2xl
bj0lZFxuIiwKLQkJCW0tPmNydGNfdnN5bmNfc3RhcnQgLSBtLT5jcnRjX3ZkaXNwbGF5LAotCQkJ
bS0+Y3J0Y192dG90YWwgLSBtLT5jcnRjX3ZzeW5jX2VuZCwKLQkJCW0tPmNydGNfdnN5bmNfZW5k
IC0gbS0+Y3J0Y192c3luY19zdGFydCwKLQkJCW0tPmNydGNfaHN5bmNfc3RhcnQgLSBtLT5jcnRj
X2hkaXNwbGF5LAotCQkJbS0+Y3J0Y19odG90YWwgLSBtLT5jcnRjX2hzeW5jX2VuZCwKLQkJCW0t
PmNydGNfaHN5bmNfZW5kIC0gbS0+Y3J0Y19oc3luY19zdGFydCk7CisJCSBtLT5jcnRjX3ZzeW5j
X3N0YXJ0IC0gbS0+Y3J0Y192ZGlzcGxheSwKKwkJIG0tPmNydGNfdnRvdGFsIC0gbS0+Y3J0Y192
c3luY19lbmQsCisJCSBtLT5jcnRjX3ZzeW5jX2VuZCAtIG0tPmNydGNfdnN5bmNfc3RhcnQsCisJ
CSBtLT5jcnRjX2hzeW5jX3N0YXJ0IC0gbS0+Y3J0Y19oZGlzcGxheSwKKwkJIG0tPmNydGNfaHRv
dGFsIC0gbS0+Y3J0Y19oc3luY19lbmQsCisJCSBtLT5jcnRjX2hzeW5jX2VuZCAtIG0tPmNydGNf
aHN5bmNfc3RhcnQpOwogCXZhbCA9IGttYl9yZWFkX2xjZChkZXZfcCwgTENEX0lOVF9FTkFCTEUp
OwogCWttYl9jbHJfYml0bWFza19sY2QoZGV2X3AsIExDRF9JTlRfRU5BQkxFLCB2YWwpOwogCWtt
Yl9zZXRfYml0bWFza19sY2QoZGV2X3AsIExDRF9JTlRfQ0xFQVIsIH4weDApOwotLy8Jdm0udmZy
b250X3BvcmNoID0gbS0+Y3J0Y192c3luY19zdGFydCAtIG0tPmNydGNfdmRpc3BsYXk7CisvLyAg
ICAgIHZtLnZmcm9udF9wb3JjaCA9IG0tPmNydGNfdnN5bmNfc3RhcnQgLSBtLT5jcnRjX3ZkaXNw
bGF5OwogCXZtLnZmcm9udF9wb3JjaCA9IDI7Ci0vLwl2bS52YmFja19wb3JjaCA9IG0tPmNydGNf
dnRvdGFsIC0gbS0+Y3J0Y192c3luY19lbmQ7CisvLyAgICAgIHZtLnZiYWNrX3BvcmNoID0gbS0+
Y3J0Y192dG90YWwgLSBtLT5jcnRjX3ZzeW5jX2VuZDsKIAl2bS52YmFja19wb3JjaCA9IDI7Ci0v
Lwl2bS52c3luY19sZW4gPSBtLT5jcnRjX3ZzeW5jX2VuZCAtIG0tPmNydGNfdnN5bmNfc3RhcnQ7
CisvLyAgICAgIHZtLnZzeW5jX2xlbiA9IG0tPmNydGNfdnN5bmNfZW5kIC0gbS0+Y3J0Y192c3lu
Y19zdGFydDsKIAl2bS52c3luY19sZW4gPSAxOwogCS8vdm0uaGZyb250X3BvcmNoID0gbS0+Y3J0
Y19oc3luY19zdGFydCAtIG0tPmNydGNfaGRpc3BsYXk7CiAJdm0uaGZyb250X3BvcmNoID0gMDsK
IAl2bS5oYmFja19wb3JjaCA9IDA7CiAJLy92bS5oYmFja19wb3JjaCA9IG0tPmNydGNfaHRvdGFs
IC0gbS0+Y3J0Y19oc3luY19lbmQ7CiAJdm0uaHN5bmNfbGVuID0gNzsKLS8vCXZtLmhzeW5jX2xl
biA9IG0tPmNydGNfaHN5bmNfZW5kIC0gbS0+Y3J0Y19oc3luY19zdGFydDsKKy8vICAgICAgdm0u
aHN5bmNfbGVuID0gbS0+Y3J0Y19oc3luY19lbmQgLSBtLT5jcnRjX2hzeW5jX3N0YXJ0OwogCiAJ
dnN5bmNfc3RhcnRfb2Zmc2V0ID0gbS0+Y3J0Y192c3luY19zdGFydCAtIG0tPmNydGNfaHN5bmNf
c3RhcnQ7CiAJdnN5bmNfZW5kX29mZnNldCA9IG0tPmNydGNfdnN5bmNfZW5kIC0gbS0+Y3J0Y19o
c3luY19lbmQ7CiAKLQlEUk1fSU5GTygiJXMgOiAlZGFjdGl2ZSBoZWlnaHQ9ICVkIHZicD0lZCB2
ZnA9JWQgdnN5bmMtdz0lZCBoLWFjdGl2ZT0lZCBoLWJwPSVkIGgtZnA9JWQgaHlzbmMtbD0lZFxu
IiwKLQkJCV9fZnVuY19fLCBfX0xJTkVfXywgbS0+Y3J0Y192ZGlzcGxheSwKLQkJCXZtLnZiYWNr
X3BvcmNoLCB2bS52ZnJvbnRfcG9yY2gsCi0JCQl2bS52c3luY19sZW4sIG0tPmNydGNfaGRpc3Bs
YXksCi0JCQl2bS5oYmFja19wb3JjaCwgdm0uaGZyb250X3BvcmNoLCB2bS5oc3luY19sZW4pOwor
CURSTV9ERUJVRworCSAgICAoIiVzIDogJWRhY3RpdmUgaGVpZ2h0PSAlZCB2YnA9JWQgdmZwPSVk
IHZzeW5jLXc9JWQgaC1hY3RpdmU9JWQgaC1icD0lZCBoLWZwPSVkIGh5c25jLWw9JWQiLAorCSAg
ICAgX19mdW5jX18sIF9fTElORV9fLCBtLT5jcnRjX3ZkaXNwbGF5LCB2bS52YmFja19wb3JjaCwK
KwkgICAgIHZtLnZmcm9udF9wb3JjaCwgdm0udnN5bmNfbGVuLCBtLT5jcnRjX2hkaXNwbGF5LCB2
bS5oYmFja19wb3JjaCwKKwkgICAgIHZtLmhmcm9udF9wb3JjaCwgdm0uaHN5bmNfbGVuKTsKIAlr
bWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfVl9BQ1RJVkVIRUlHSFQsCi0JCQltLT5jcnRjX3ZkaXNw
bGF5IC0gMSk7CisJCSAgICAgIG0tPmNydGNfdmRpc3BsYXkgLSAxKTsKIAlrbWJfd3JpdGVfbGNk
KGRldl9wLCBMQ0RfVl9CQUNLUE9SQ0gsIHZtLnZiYWNrX3BvcmNoKTsKIAlrbWJfd3JpdGVfbGNk
KGRldl9wLCBMQ0RfVl9GUk9OVFBPUkNILCB2bS52ZnJvbnRfcG9yY2gpOwogCWttYl93cml0ZV9s
Y2QoZGV2X3AsIExDRF9WU1lOQ19XSURUSCwgdm0udnN5bmNfbGVuIC0gMSk7CkBAIC0xMjksMTQg
KzEyOSwxNCBAQCBzdGF0aWMgdm9pZCBrbWJfY3J0Y19tb2RlX3NldF9ub2ZiKHN0cnVjdCBkcm1f
Y3J0YyAqY3J0YykKIAogCWlmIChtLT5mbGFncyA9PSBEUk1fTU9ERV9GTEFHX0lOVEVSTEFDRSkg
ewogCQlrbWJfd3JpdGVfbGNkKGRldl9wLAotCQkJCUxDRF9WU1lOQ19XSURUSF9FVkVOLCB2bS52
c3luY19sZW4gLSAxKTsKKwkJCSAgICAgIExDRF9WU1lOQ19XSURUSF9FVkVOLCB2bS52c3luY19s
ZW4gLSAxKTsKIAkJa21iX3dyaXRlX2xjZChkZXZfcCwKIAkJCQlMQ0RfVl9CQUNLUE9SQ0hfRVZF
Tiwgdm0udmJhY2tfcG9yY2gpOwogCQlrbWJfd3JpdGVfbGNkKGRldl9wLAogCQkJCUxDRF9WX0ZS
T05UUE9SQ0hfRVZFTiwgdm0udmZyb250X3BvcmNoKTsKIAkJa21iX3dyaXRlX2xjZChkZXZfcCwg
TENEX1ZfQUNUSVZFSEVJR0hUX0VWRU4sCi0JCQltLT5jcnRjX3ZkaXNwbGF5IC0gMSk7Ci0JCS8q
dGhpcyBpcyBoYXJkY29kZWQgYXMgMTAgaW4gdGhlIE15cmlhZHggY29kZSovCisJCQkgICAgICBt
LT5jcnRjX3ZkaXNwbGF5IC0gMSk7CisJCS8qdGhpcyBpcyBoYXJkY29kZWQgYXMgMTAgaW4gdGhl
IE15cmlhZHggY29kZSAqLwogCQlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfVlNZTkNfU1RBUlRf
RVZFTiwgMTApOwogCQlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfVlNZTkNfRU5EX0VWRU4sIDEw
KTsKIAl9CkBAIC0xNzcsNyArMTc3LDcgQEAgc3RhdGljIHZvaWQga21iX2NydGNfYXRvbWljX2Jl
Z2luKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAlzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZf
cCA9IHRvX2ttYihkZXYpOwogCiAJa21iX2Nscl9iaXRtYXNrX2xjZChkZXZfcCwgTENEX0lOVF9F
TkFCTEUsCi0JCQlMQ0RfSU5UX1ZFUlRfQ09NUCk7CisJCQkgICAgTENEX0lOVF9WRVJUX0NPTVAp
OwogfQogCiBzdGF0aWMgdm9pZCBrbWJfY3J0Y19hdG9taWNfZmx1c2goc3RydWN0IGRybV9jcnRj
ICpjcnRjLApAQCAtMTg3LDcgKzE4Nyw3IEBAIHN0YXRpYyB2b2lkIGttYl9jcnRjX2F0b21pY19m
bHVzaChzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCiAJc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2
X3AgPSB0b19rbWIoZGV2KTsKIAogCWttYl9zZXRfYml0bWFza19sY2QoZGV2X3AsIExDRF9JTlRf
RU5BQkxFLAotCQkJTENEX0lOVF9WRVJUX0NPTVApOworCQkJICAgIExDRF9JTlRfVkVSVF9DT01Q
KTsKIAogCXNwaW5fbG9ja19pcnEoJmNydGMtPmRldi0+ZXZlbnRfbG9jayk7CiAJaWYgKGNydGMt
PnN0YXRlLT5ldmVudCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9rbWIva21iX2NydGMu
aCBiL2RyaXZlcnMvZ3B1L2RybS9rbWIva21iX2NydGMuaAppbmRleCA2YzNlZmRkLi41MWEwYTM5
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9jcnRjLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2ttYi9rbWJfY3J0Yy5oCkBAIC0yNCw2ICsyNCw5IEBACiAjaW5jbHVkZSA8bGlu
dXgvd2FpdC5oPgogI2luY2x1ZGUgImttYl9kcnYuaCIKIAorI2RlZmluZSB0b19rbWJfY3J0Y19z
dGF0ZSh4KSBjb250YWluZXJfb2YoeCwgc3RydWN0IGttYl9jcnRjX3N0YXRlLCBjcnRjX2Jhc2Up
CisjZGVmaW5lIHRvX2ttYl9jcnRjKHgpIGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2NydGMs
IGNydGNfYmFzZSkKKwogc3RydWN0IGttYl9jcnRjIHsKIAlzdHJ1Y3QgZHJtX2NydGMgY3J0Y19i
YXNlOwogCXN0cnVjdCBrbWJfZHJtX3ByaXZhdGUga21iX2RldjsKQEAgLTMyLDggKzM1LDcgQEAg
c3RydWN0IGttYl9jcnRjIHsKIHN0cnVjdCBrbWJfY3J0Y19zdGF0ZSB7CiAJc3RydWN0IGRybV9j
cnRjX3N0YXRlIGNydGNfYmFzZTsKIH07Ci0jZGVmaW5lIHRvX2ttYl9jcnRjX3N0YXRlKHgpIGNv
bnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2NydGNfc3RhdGUsIGNydGNfYmFzZSkKLSNkZWZpbmUg
dG9fa21iX2NydGMoeCkgY29udGFpbmVyX29mKHgsIHN0cnVjdCBrbWJfY3J0YywgY3J0Y19iYXNl
KQorCiBleHRlcm4gdm9pZCBrbWJfcGxhbmVfZGVzdHJveShzdHJ1Y3QgZHJtX3BsYW5lICpwbGFu
ZSk7CiBleHRlcm4gc3RydWN0IGttYl9wbGFuZSAqa21iX3BsYW5lX2luaXQoc3RydWN0IGRybV9k
ZXZpY2UgKmRybSk7CiAjZW5kaWYgLyogX19LTUJfQ1JUQ19IX18gKi8KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9rbWIva21iX2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHJ2
LmMKaW5kZXggMzA4MDM2ZS4uZjVlMWRlZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2tt
Yi9rbWJfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHJ2LmMKQEAgLTQsNyAr
NCw3IEBACiAgKi8KIAogI2luY2x1ZGUgPGxpbnV4L2Nsay5oPgotI2luY2x1ZGUgPGxpbnV4L2Nv
bXBvbmVudC5oPgorLy8jaW5jbHVkZSA8bGludXgvY29tcG9uZW50Lmg+CiAjaW5jbHVkZSA8bGlu
dXgvY29uc29sZS5oPgogI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KICNpbmNsdWRlIDxsaW51eC9t
b2R1bGUuaD4KQEAgLTMwLDkgKzMwLDkgQEAKICNpbmNsdWRlICJrbWJfcGxhbmUuaCIKICNpbmNs
dWRlICJrbWJfcmVncy5oIgogCi0jZGVmaW5lIERFQlVHCisvLyNkZWZpbmUgREVCVUcKIAotLypJ
UlEgaGFuZGxlciovCisvKiBJUlEgaGFuZGxlciAqLwogc3RhdGljIGlycXJldHVybl90IGttYl9p
c3IoaW50IGlycSwgdm9pZCAqYXJnKTsKIAogc3RhdGljIHN0cnVjdCBjbGsgKmNsa19sY2Q7CkBA
IC0xMDgsOCArMTA4LDYgQEAgc3RhdGljIHZvaWQgX19pb21lbSAqa21iX21hcF9tbWlvKHN0cnVj
dCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYsIGNoYXIgKm5hbWUpCiAJCXJlbGVhc2VfbWVtX3JlZ2lv
bihyZXMtPnN0YXJ0LCBzaXplKTsKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAJfQotCURS
TV9JTkZPKCIlcyA6ICVkIG1hcHBlZCAlcyBtbWlvIHNpemUgPSAlZFxuIiwgX19mdW5jX18sIF9f
TElORV9fLAotCQkJbmFtZSwgc2l6ZSk7CiAJcmV0dXJuIG1lbTsKIH0KIApAQCAtMTE3LDggKzEx
NSw3IEBAIHN0YXRpYyBpbnQga21iX2xvYWQoc3RydWN0IGRybV9kZXZpY2UgKmRybSwgdW5zaWdu
ZWQgbG9uZyBmbGFncykKIHsKIAlzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCA9IHRvX2tt
Yihkcm0pOwogCXN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYgPSB0b19wbGF0Zm9ybV9kZXZp
Y2UoZHJtLT5kZXYpOwotCS8qdTMyIHZlcnNpb247Ki8KLQlpbnQgaXJxX2xjZDsvLyBpcnFfbWlw
aTsKKwlpbnQgaXJxX2xjZDsKIAlpbnQgcmV0ID0gMDsKIAl1bnNpZ25lZCBsb25nIGNsazsKIApA
QCAtMTM3LDggKzEzNCw4IEBAIHN0YXRpYyBpbnQga21iX2xvYWQoc3RydWN0IGRybV9kZXZpY2Ug
KmRybSwgdW5zaWduZWQgbG9uZyBmbGFncykKIAkJcmV0dXJuIC1FTk9NRU07CiAJfQogCi0JLyog
VGhpcyBpcyBvbmx5IGZvciBNSVBJX1RYX01TU19MQ0RfTUlQSV9DRkcgYW5kIE1TU19DQU1fQ0xL
X0NUUkwKLQkgKiByZWdpc3RlcgorCS8qIFRoaXMgaXMgb25seSBmb3IgTUlQSV9UWF9NU1NfTENE
X01JUElfQ0ZHIGFuZAorCSAqIE1TU19DQU1fQ0xLX0NUUkwgcmVnaXN0ZXIKIAkgKi8KIAlkZXZf
cC0+bXNzY2FtX21taW8gPSBrbWJfbWFwX21taW8ocGRldiwgIm1zc2NhbV9yZWdzIik7CiAJaWYg
KElTX0VSUihkZXZfcC0+bXNzY2FtX21taW8pKSB7CkBAIC0xNTQsMjIgKzE1MSwyMSBAQCBzdGF0
aWMgaW50IGttYl9sb2FkKHN0cnVjdCBkcm1fZGV2aWNlICpkcm0sIHVuc2lnbmVkIGxvbmcgZmxh
Z3MpCiAJCWlvdW5tYXAoZGV2X3AtPm1pcGlfbW1pbyk7CiAJCXJldHVybiAtRU5PTUVNOwogCX0K
LQotCi0KICNkZWZpbmUgS01CX0NMT0NLUwogI2lmZGVmIEtNQl9DTE9DS1MKLQkvKiBFbmFibGUg
ZGlzcGxheSBjbG9ja3MqLworCS8qIEVuYWJsZSBkaXNwbGF5IGNsb2NrcyAqLwogCWNsa19sY2Qg
PSBjbGtfZ2V0KCZwZGV2LT5kZXYsICJjbGtfbGNkIik7CiAJaWYgKElTX0VSUihjbGtfbGNkKSkg
ewogCQlEUk1fRVJST1IoImNsa19nZXQoKSBmYWlsZWQgY2xrX2xjZFxuIik7CiAJCWdvdG8gc2V0
dXBfZmFpbDsKIAl9CisKIAljbGtfbWlwaSA9IGNsa19nZXQoJnBkZXYtPmRldiwgImNsa19taXBp
Iik7CiAJaWYgKElTX0VSUihjbGtfbWlwaSkpIHsKIAkJRFJNX0VSUk9SKCJjbGtfZ2V0KCkgZmFp
bGVkIGNsa19taXBpXG4iKTsKIAkJZ290byBzZXR1cF9mYWlsOwogCX0KKwogCWNsa19taXBpX2Vj
ZmcgPSBjbGtfZ2V0KCZwZGV2LT5kZXYsICJjbGtfbWlwaV9lY2ZnIik7CiAJaWYgKElTX0VSUihj
bGtfbWlwaV9lY2ZnKSkgewogCQlEUk1fRVJST1IoImNsa19nZXQoKSBmYWlsZWQgY2xrX21pcGlf
ZWNmZ1xuIik7CkBAIC0xODEsNTkgKzE3Nyw2MyBAQCBzdGF0aWMgaW50IGttYl9sb2FkKHN0cnVj
dCBkcm1fZGV2aWNlICpkcm0sIHVuc2lnbmVkIGxvbmcgZmxhZ3MpCiAJCURSTV9FUlJPUigiY2xr
X2dldCgpIGZhaWxlZCBjbGtfbWlwaV9jZmdcbiIpOwogCQlnb3RvIHNldHVwX2ZhaWw7CiAJfQot
CiAjaWZkZWYgTENEX1RFU1QKLQkvKiBTZXQgTENEIGNsb2NrIHRvIDIwMCBNaHoqLwotCURSTV9J
TkZPKCJHZXQgY2xrX2xjZCBiZWZvcmUgc2V0ID0gJWxkXG4iLCBjbGtfZ2V0X3JhdGUoY2xrX2xj
ZCkpOworCS8qIFNldCBMQ0QgY2xvY2sgdG8gMjAwIE1oeiAqLworCURSTV9ERUJVRygiR2V0IGNs
a19sY2QgYmVmb3JlIHNldCA9ICVsZFxuIiwgY2xrX2dldF9yYXRlKGNsa19sY2QpKTsKIAlyZXQg
PSBjbGtfc2V0X3JhdGUoY2xrX2xjZCwgS01CX0xDRF9ERUZBVUxUX0NMSyk7CiAJaWYgKGNsa19n
ZXRfcmF0ZShjbGtfbGNkKSAhPSBLTUJfTENEX0RFRkFVTFRfQ0xLKSB7CiAJCURSTV9FUlJPUigi
ZmFpbGVkIHRvIHNldCB0byBjbGtfbGNkIHRvICVkXG4iLAotCQkJCUtNQl9MQ0RfREVGQVVMVF9D
TEspOworCQkJICBLTUJfTENEX0RFRkFVTFRfQ0xLKTsKIAl9Ci0JRFJNX0lORk8oIlNldHRpbmcg
TENEIGNsb2NrIHRvICVkIE1oeiByZXQgPSAlZFxuIiwKLQkJCUtNQl9MQ0RfREVGQVVMVF9DTEsv
MTAwMDAwMCwgcmV0KTsKKwlEUk1fSU5GTygiU2V0dGluZyBMQ0QgY2xvY2sgdHAgJWQgTWh6IHJl
dCA9ICVkXG4iLAorCQkgS01CX0xDRF9ERUZBVUxUX0NMSyAvIDEwMDAwMDAsIHJldCk7CiAJRFJN
X0lORk8oIkdldCBjbGtfbGNkIGFmdGVyIHNldCA9ICVsZFxuIiwgY2xrX2dldF9yYXRlKGNsa19s
Y2QpKTsKICNlbmRpZgotCS8qIFNldCBNSVBJIGNsb2NrIHRvIDI0IE1oeiovCi0JRFJNX0lORk8o
IkdldCBjbGtfbWlwaSBiZWZvcmUgc2V0ID0gJWxkXG4iLCBjbGtfZ2V0X3JhdGUoY2xrX21pcGkp
KTsKKwogI2RlZmluZSBNSVBJX0NMSwogI2lmZGVmIE1JUElfQ0xLCisJLyogU2V0IE1JUEkgY2xv
Y2sgdG8gMjQgTWh6ICovCisJRFJNX0RFQlVHKCJHZXQgY2xrX21pcGkgYmVmb3JlIHNldCA9ICVs
ZFxuIiwgY2xrX2dldF9yYXRlKGNsa19taXBpKSk7CiAJcmV0ID0gY2xrX3NldF9yYXRlKGNsa19t
aXBpLCBLTUJfTUlQSV9ERUZBVUxUX0NMSyk7CiAJRFJNX0lORk8oIkdldCBjbGtfbWlwaSBhZnRl
ciBzZXQgPSAlbGRcbiIsIGNsa19nZXRfcmF0ZShjbGtfbWlwaSkpOwogCWlmIChjbGtfZ2V0X3Jh
dGUoY2xrX21pcGkpICE9IEtNQl9NSVBJX0RFRkFVTFRfQ0xLKSB7CiAJCURSTV9FUlJPUigiZmFp
bGVkIHRvIHNldCB0byBjbGtfbWlwaSB0byAlZFxuIiwKLQkJCQlLTUJfTUlQSV9ERUZBVUxUX0NM
Syk7CisJCQkgIEtNQl9NSVBJX0RFRkFVTFRfQ0xLKTsKIAkJZ290byBzZXR1cF9mYWlsOwogCX0K
ICNlbmRpZgogCURSTV9JTkZPKCJTZXR0aW5nIE1JUEkgY2xvY2sgdG8gJWQgTWh6IHJldCA9ICVk
XG4iLAotCQkJS01CX01JUElfREVGQVVMVF9DTEsvMTAwMDAwMCwgcmV0KTsKKwkJIEtNQl9NSVBJ
X0RFRkFVTFRfQ0xLIC8gMTAwMDAwMCwgcmV0KTsKIAlEUk1fSU5GTygiR2V0IGNsa19taXBpIGFm
dGVyIHNldCA9ICVsZFxuIiwgY2xrX2dldF9yYXRlKGNsa19taXBpKSk7CiAKIAljbGsgPSBjbGtf
Z2V0X3JhdGUoY2xrX21pcGlfZWNmZyk7CiAJaWYgKGNsayAhPSBLTUJfTUlQSV9ERUZBVUxUX0NG
R19DTEspIHsKLQkJLyogU2V0IE1JUElfRUNGRyBjbG9jayB0byAyNCBNaHoqLworCQkvKiBTZXQg
TUlQSV9FQ0ZHIGNsb2NrIHRvIDI0IE1oeiAqLwogCQlEUk1fSU5GTygiR2V0IGNsa19taXBpX2Vj
ZmcgYmVmb3JlIHNldCA9ICVsZFxuIiwgY2xrKTsKKwogCQlyZXQgPSBjbGtfc2V0X3JhdGUoY2xr
X21pcGlfZWNmZywgS01CX01JUElfREVGQVVMVF9DRkdfQ0xLKTsKIAkJY2xrID0gY2xrX2dldF9y
YXRlKGNsa19taXBpX2VjZmcpOwotCQlpZiAoY2xrICE9IEtNQl9NSVBJX0RFRkFVTFRfQ0xLKSB7
CisJCWlmIChjbGsgIT0gS01CX01JUElfREVGQVVMVF9DRkdfQ0xLKSB7CiAJCQlEUk1fRVJST1Io
ImZhaWxlZCB0byBzZXQgdG8gY2xrX21pcGlfZWNmZyB0byAlZFxuIiwKLQkJCQkJS01CX01JUElf
REVGQVVMVF9DTEspOworCQkJCSAgS01CX01JUElfREVGQVVMVF9DRkdfQ0xLKTsKIAkJCWdvdG8g
c2V0dXBfZmFpbDsKIAkJfQorCiAJCURSTV9JTkZPKCJTZXR0aW5nIE1JUElfRUNGRyBjbG9jayB0
cCAlZCBNaHogcmV0ID0gJWRcbiIsCi0JCQkJS01CX01JUElfREVGQVVMVF9DTEsvMTAwMDAwMCwg
cmV0KTsKKwkJCSBLTUJfTUlQSV9ERUZBVUxUX0NGR19DTEsgLyAxMDAwMDAwLCByZXQpOworCQlE
Uk1fSU5GTygiR2V0IGNsa19taXBpX2VjZmcgYWZ0ZXIgc2V0ID0gJWxkXG4iLCBjbGspOwogCX0K
IAogCWNsayA9IGNsa19nZXRfcmF0ZShjbGtfbWlwaV9jZmcpOwogCWlmIChjbGsgIT0gS01CX01J
UElfREVGQVVMVF9DRkdfQ0xLKSB7Ci0JCS8qIFNldCBNSVBJX0NGRyBjbG9jayB0byAyNCBNaHoq
LworCQkvKiBTZXQgTUlQSV9DRkcgY2xvY2sgdG8gMjQgTWh6ICovCiAJCURSTV9JTkZPKCJHZXQg
Y2xrX21pcGlfY2ZnIGJlZm9yZSBzZXQgPSAlbGRcbiIsIGNsayk7CisKIAkJcmV0ID0gY2xrX3Nl
dF9yYXRlKGNsa19taXBpX2NmZywgMjQwMDAwMDApOwogCQljbGsgPSBjbGtfZ2V0X3JhdGUoY2xr
X21pcGlfY2ZnKTsKIAkJaWYgKGNsayAhPSBLTUJfTUlQSV9ERUZBVUxUX0NGR19DTEspIHsKIAkJ
CURSTV9FUlJPUigiZmFpbGVkIHRvIHNldCB0byBjbGtfbWlwaV9jZmcgdG8gJWRcbiIsCi0JCQkJ
CUtNQl9NSVBJX0RFRkFVTFRfQ0ZHX0NMSyk7CisJCQkJICBLTUJfTUlQSV9ERUZBVUxUX0NGR19D
TEspOwogCQkJZ290byBzZXR1cF9mYWlsOwogCQl9CiAJCURSTV9JTkZPKCJTZXR0aW5nIE1JUElf
Q0ZHIGNsb2NrIHRwIDI0TWh6IHJldCA9ICVkXG4iLCByZXQpOwpAQCAtMjQyLDEwICsyNDIsMTIg
QEAgc3RhdGljIGludCBrbWJfbG9hZChzdHJ1Y3QgZHJtX2RldmljZSAqZHJtLCB1bnNpZ25lZCBs
b25nIGZsYWdzKQogCiAJcmV0ID0ga21iX2Rpc3BsYXlfY2xrX2VuYWJsZSgpOwogCi0JLyogZW5h
YmxlIE1TU19DQU1fQ0xLX0NUUkwgZm9yIE1JUEkgVFggYW5kIExDRCAqLworCS8qIEVuYWJsZSBN
U1NfQ0FNX0NMS19DVFJMIGZvciBNSVBJIFRYIGFuZCBMQ0QgKi8KIAlrbWJfc2V0X2JpdG1hc2tf
bXNzY2FtKGRldl9wLCBNU1NfQ0FNX0NMS19DVFJMLCAweDFmZmYpOwogCWttYl9zZXRfYml0bWFz
a19tc3NjYW0oZGV2X3AsIE1TU19DQU1fUlNUTl9DVFJMLCAweGZmZmZmZmZmKTsKKwogI2VuZGlm
IC8vS01CX0NMT0NLUworCiAJLyogUmVnaXN0ZXIgaXJxcyBoZXJlIC0gc2VjdGlvbiAxNy4zIGlu
IGRhdGFib29rCiAJICogbGlzdHMgTENEIGF0IDc5IGFuZCA4MiBmb3IgTUlQSSB1bmRlciBNU1Mg
Q1BVIC0KIAkgKiBmaXJtd2FyZSBoYXMgcmVkaXJlY3RlZCAgNzkgdG8gQTUzIElSUSAzMwpAQCAt
MjkyLDE5ICsyOTQsMjEgQEAgc3RhdGljIGludCBrbWJfbG9hZChzdHJ1Y3QgZHJtX2RldmljZSAq
ZHJtLCB1bnNpZ25lZCBsb25nIGZsYWdzKQogCQlnb3RvIHNldHVwX2ZhaWw7CiAJfQogCi0KIAkv
KiBJbml0aWFsaXplIE1JUEkgRFNJICovCiAJcmV0ID0ga21iX2RzaV9pbml0KGRybSwgYWR2X2Jy
aWRnZSk7CiAJaWYgKHJldCkgewogCQlEUk1fRVJST1IoImZhaWxlZCB0byBpbml0aWFsaXplIERT
SVxuIik7CiAJCWdvdG8gc2V0dXBfZmFpbDsKIAl9CisKIAlyZXQgPSBkcm1faXJxX2luc3RhbGwo
ZHJtLCBpcnFfbGNkKTsKIAlpZiAocmV0IDwgMCkgewogCQlEUk1fRVJST1IoImZhaWxlZCB0byBp
bnN0YWxsIElSUSBoYW5kbGVyXG4iKTsKIAkJZ290byBpcnFfZmFpbDsKIAl9CisKIAlkZXZfcC0+
aXJxX2xjZCA9IGlycV9sY2Q7CisKIAlyZXR1cm4gMDsKIAogaXJxX2ZhaWw6CkBAIC0zMTYsMTAg
KzMyMCwxMSBAQCBzdGF0aWMgaW50IGttYl9sb2FkKHN0cnVjdCBkcm1fZGV2aWNlICpkcm0sIHVu
c2lnbmVkIGxvbmcgZmxhZ3MpCiB9CiAKIGludCBrbWJfYXRvbWljX2hlbHBlcl9jaGVjayhzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LAotCQlzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUpCisJ
CQkgICAgc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlKQogewogCWlmICghc3RhdGUpCiAJ
CXJldHVybiAwOworCiAJcmV0dXJuIGRybV9hdG9taWNfaGVscGVyX2NoZWNrKGRldiwgc3RhdGUp
OwogfQogCkBAIC0zMzksNyArMzQ0LDYgQEAgc3RhdGljIHZvaWQga21iX3NldHVwX21vZGVfY29u
ZmlnKHN0cnVjdCBkcm1fZGV2aWNlICpkcm0pCiAJZHJtLT5tb2RlX2NvbmZpZy5mdW5jcyA9ICZr
bWJfbW9kZV9jb25maWdfZnVuY3M7CiB9CiAKLQogc3RhdGljIGlycXJldHVybl90IGhhbmRsZV9s
Y2RfaXJxKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiB7CiAJdW5zaWduZWQgbG9uZyBzdGF0dXMs
IHZhbDsKQEAgLTM0Nyw4ICszNTEsOCBAQCBzdGF0aWMgaXJxcmV0dXJuX3QgaGFuZGxlX2xjZF9p
cnEoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAogCXN0YXR1cyA9IGttYl9yZWFkX2xjZChkZXZf
cCwgTENEX0lOVF9TVEFUVVMpOwogCWlmIChzdGF0dXMgJiBMQ0RfSU5UX0VPRikgewotCQkvKlRv
IERPIC0gaGFuZGxlIEVPRiBpbnRlcnJ1cHQ/ICovCi0JCWttYl93cml0ZV9sY2QoZGV2X3AsIExD
RF9JTlRfQ0xFQVIsIExDRF9JTlRfRU9GKTsKKwkvKlRvIERPIC0gaGFuZGxlIEVPRiBpbnRlcnJ1
cHQ/ICovCisJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX0lOVF9DTEVBUiwgTENEX0lOVF9FT0Yp
OwogCX0KIAlpZiAoc3RhdHVzICYgTENEX0lOVF9MSU5FX0NNUCkgewogCQkvKiBjbGVhciBsaW5l
IGNvbXBhcmUgaW50ZXJydXB0ICovCkBAIC0zNTYsNyArMzYwLDcgQEAgc3RhdGljIGlycXJldHVy
bl90IGhhbmRsZV9sY2RfaXJxKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCQkJTENEX0lOVF9M
SU5FX0NNUCk7CiAJfQogCWlmIChzdGF0dXMgJiBMQ0RfSU5UX0xBWUVSKSB7Ci0JCS8qIGNsZWFy
IGxheWVyIGludGVycnVwdHMgKi8KKwkJLyogQ2xlYXIgbGF5ZXIgaW50ZXJydXB0cyAqLwogCQlr
bWJfd3JpdGVfbGNkKGRldi0+ZGV2X3ByaXZhdGUsIExDRF9JTlRfQ0xFQVIsIExDRF9JTlRfTEFZ
RVIpOwogCX0KIApAQCAtMzc3LDEzICszODEsMTMgQEAgc3RhdGljIGlycXJldHVybl90IGhhbmRs
ZV9sY2RfaXJxKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCX0KIAl9CiAKLQkvKiBjbGVhciBh
bGwgaW50ZXJydXB0cyAqLworCS8qIENsZWFyIGFsbCBpbnRlcnJ1cHRzICovCiAJa21iX3NldF9i
aXRtYXNrX2xjZChkZXYtPmRldl9wcml2YXRlLCBMQ0RfSU5UX0NMRUFSLCB+MHgwKTsKIAlyZXR1
cm4gSVJRX0hBTkRMRUQ7CiB9CiAKICNpZmRlZiBNSVBJX0lSUQotc3RhdGljIGlycXJldHVybl90
ICBoYW5kbGVfbWlwaV9pcnEoc3RydWN0IGRybV9kZXZpY2UgKmRldikKK3N0YXRpYyBpcnFyZXR1
cm5fdCBoYW5kbGVfbWlwaV9pcnEoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIHsKIAltaXBpX3R4
X2hhbmRsZV9pcnFzKHRvX2ttYihkZXYpKTsKIAlyZXR1cm4gSVJRX0hBTkRMRUQ7CkBAIC00MDks
NyArNDEzLDcgQEAgREVGSU5FX0RSTV9HRU1fQ01BX0ZPUFMoZm9wcyk7CiAKIHN0YXRpYyBzdHJ1
Y3QgZHJtX2RyaXZlciBrbWJfZHJpdmVyID0gewogCS5kcml2ZXJfZmVhdHVyZXMgPSBEUklWRVJf
R0VNIHwKLQkJCURSSVZFUl9NT0RFU0VUIHwgRFJJVkVSX0FUT01JQywKKwkgICAgRFJJVkVSX01P
REVTRVQgfCBEUklWRVJfQVRPTUlDLAogCS5pcnFfaGFuZGxlciA9IGttYl9pc3IsCiAJLmlycV9w
cmVpbnN0YWxsID0ga21iX2lycV9yZXNldCwKIAkuaXJxX3VuaW5zdGFsbCA9IGttYl9pcnFfcmVz
ZXQsCkBAIC00MzgsNyArNDQyLDkgQEAgc3RhdGljIHZvaWQga21iX2RybV91bmxvYWQoc3RydWN0
IGRldmljZSAqZGV2KQogCXN0cnVjdCBkcm1fZGV2aWNlICpkcm0gPSBkZXZfZ2V0X2RydmRhdGEo
ZGV2KTsKIAlzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCA9IHRvX2ttYihkcm0pOwogCisj
aWZkZWYgREVCVUcKIAlkdW1wX3N0YWNrKCk7CisjZW5kaWYKIAlkcm1fZGV2X3VucmVnaXN0ZXIo
ZHJtKTsKIAlkcm1fa21zX2hlbHBlcl9wb2xsX2ZpbmkoZHJtKTsKIAlvZl9ub2RlX3B1dChkZXZf
cC0+Y3J0Yy5wb3J0KTsKQEAgLTQ2Niw3ICs0NzIsNyBAQCBzdGF0aWMgdm9pZCBrbWJfZHJtX3Vu
bG9hZChzdHJ1Y3QgZGV2aWNlICpkZXYpCiAJb2ZfcmVzZXJ2ZWRfbWVtX2RldmljZV9yZWxlYXNl
KGRybS0+ZGV2KTsKIAlkcm1fbW9kZV9jb25maWdfY2xlYW51cChkcm0pOwogCi0JLypyZWxlYXNl
IGNsa3MgKi8KKwkvKiBSZWxlYXNlIGNsa3MgKi8KIAlrbWJfZGlzcGxheV9jbGtfZGlzYWJsZSgp
OwogCWNsa19wdXQoY2xrX2xjZCk7CiAJY2xrX3B1dChjbGtfbWlwaSk7CkBAIC00OTMsNyArNDk5
LDggQEAgc3RhdGljIGludCBrbWJfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikK
IAkgKiAgYW5kIHRoZW4gdGhlIHJlc3Qgb2YgdGhlIGRyaXZlciBpbml0aWFsaXphdGlvbiBjYW4g
cHJvY2VlcwogCSAqICBhZnRlcndhcmRzIGFuZCB0aGUgYnJpZGdlIGNhbiBiZSBzdWNjZXNzZnVs
bHkgYXR0YWNoZWQuCiAJICovCi0JYWR2X2JyaWRnZSA9ICBrbWJfZHNpX2hvc3RfYnJpZGdlX2lu
aXQoZGV2KTsKKwlhZHZfYnJpZGdlID0ga21iX2RzaV9ob3N0X2JyaWRnZV9pbml0KGRldik7CisK
ICNpZm5kZWYgRkNDVEVTVAogCWlmIChhZHZfYnJpZGdlID09IEVSUl9QVFIoLUVQUk9CRV9ERUZF
UikpCiAJCXJldHVybiAtRVBST0JFX0RFRkVSOwpAQCAtNTAyLDYgKzUwOSw3IEBAIHN0YXRpYyBp
bnQga21iX3Byb2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJCXJldHVybiBQVFJf
RVJSKGFkdl9icmlkZ2UpOwogCX0KICNlbmRpZgorCiAJLyogQ3JlYXRlIERSTSBkZXZpY2UgKi8K
IAlsY2QgPSBremFsbG9jKHNpemVvZigqbGNkKSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFsY2QpCkBA
IC01MTgsNyArNTI2LDcgQEAgc3RhdGljIGludCBrbWJfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2Rl
dmljZSAqcGRldikKIAlkZXZfc2V0X2RydmRhdGEoZGV2LCBkcm0pOwogCiAJa21iX3NldHVwX21v
ZGVfY29uZmlnKGRybSk7Ci0JCWRldl9zZXRfZHJ2ZGF0YShkZXYsIGRybSk7CisJZGV2X3NldF9k
cnZkYXRhKGRldiwgZHJtKTsKIAogCS8qIExvYWQgZHJpdmVyICovCiAJbGNkLT5uX2xheWVycyA9
IEtNQl9NQVhfUExBTkVTOwpAQCAtNTM3LDYgKzU0NSw3IEBAIHN0YXRpYyBpbnQga21iX3Byb2Jl
KHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJCURSTV9FUlJPUigiZmFpbGVkIHRvIGlu
aXRpYWxpemUgdmJsYW5rXG4iKTsKIAkJZ290byBlcnJfdmJsYW5rOwogCX0KKwogCWRybV9tb2Rl
X2NvbmZpZ19yZXNldChkcm0pOwogCWRybV9rbXNfaGVscGVyX3BvbGxfaW5pdChkcm0pOwogCkBA
IC01NDcsNyArNTU2LDcgQEAgc3RhdGljIGludCBrbWJfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2Rl
dmljZSAqcGRldikKIAkJZ290byBlcnJfcmVnaXN0ZXI7CiAKICNpZm5kZWYgRkNDVEVTVAotLy8J
ZHJtX2ZiZGV2X2dlbmVyaWNfc2V0dXAoZHJtLCAzMik7CisJLy9kcm1fZmJkZXZfZ2VuZXJpY19z
ZXR1cChkcm0sIDMyKTsKICNlbmRpZgogCXJldHVybiAwOwogCkBAIC01NzAsNyArNTc5LDcgQEAg
c3RhdGljIGludCBrbWJfcmVtb3ZlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJcmV0
dXJuIDA7CiB9CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkICBrbWJfb2ZfbWF0
Y2hbXSA9IHsKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIGttYl9vZl9tYXRjaFtd
ID0gewogCXsuY29tcGF0aWJsZSA9ICJpbnRlbCxrbWJfZGlzcGxheSJ9LAogCXt9LAogfTsKQEAg
LTYxMywxMyArNjIyLDEzIEBAIHN0YXRpYyBpbnQgX19tYXliZV91bnVzZWQga21iX3BtX3Jlc3Vt
ZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiBzdGF0aWMgU0lNUExFX0RFVl9QTV9PUFMoa21iX3BtX29w
cywga21iX3BtX3N1c3BlbmQsIGttYl9wbV9yZXN1bWUpOwogCiBzdGF0aWMgc3RydWN0IHBsYXRm
b3JtX2RyaXZlciBrbWJfcGxhdGZvcm1fZHJpdmVyID0gewotCS5wcm9iZQkJPSBrbWJfcHJvYmUs
Ci0JLnJlbW92ZQkJPSBrbWJfcmVtb3ZlLAotCS5kcml2ZXIJPSB7Ci0JCS5uYW1lID0gImttYi1k
cm0iLAotCQkucG0gPSAma21iX3BtX29wcywKLQkJLm9mX21hdGNoX3RhYmxlCT0ga21iX29mX21h
dGNoLAotCX0sCisJLnByb2JlID0ga21iX3Byb2JlLAorCS5yZW1vdmUgPSBrbWJfcmVtb3ZlLAor
CS5kcml2ZXIgPSB7CisJCSAgIC5uYW1lID0gImttYi1kcm0iLAorCQkgICAucG0gPSAma21iX3Bt
X29wcywKKwkJICAgLm9mX21hdGNoX3RhYmxlID0ga21iX29mX21hdGNoLAorCQkgICB9LAogfTsK
IAogbW9kdWxlX3BsYXRmb3JtX2RyaXZlcihrbWJfcGxhdGZvcm1fZHJpdmVyKTsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9rbWIva21iX2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9r
bWJfZHJ2LmgKaW5kZXggM2ExYjY2Yy4uNGI5N2EzZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2ttYi9rbWJfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfZHJ2LmgKQEAg
LTEwLDI3ICsxMCwyOSBAQAogCiAjZGVmaW5lIEZDQ1RFU1QKICNkZWZpbmUgTENEX1RFU1QKLSNk
ZWZpbmUgS01CX01BWF9XSURUSAkJCTE5MjAgLyptYXggd2lkdGggaW4gcGl4ZWxzICovCi0jZGVm
aW5lIEtNQl9NQVhfSEVJR0hUCQkJMTA4MCAvKm1heCBoZWlnaHQgaW4gcGl4ZWxzICovCisjZGVm
aW5lIEtNQl9NQVhfV0lEVEgJCQkxOTIwCS8qbWF4IHdpZHRoIGluIHBpeGVscyAqLworI2RlZmlu
ZSBLTUJfTUFYX0hFSUdIVAkJCTEwODAJLyptYXggaGVpZ2h0IGluIHBpeGVscyAqLwogI2RlZmlu
ZSBLTUJfTENEX0RFRkFVTFRfQ0xLCQkyNTAwMDAwMDAKICNkZWZpbmUgS01CX01JUElfREVGQVVM
VF9DTEsJCTI0MDAwMDAwCiAjZGVmaW5lIEtNQl9NSVBJX0RFRkFVTFRfQ0ZHX0NMSwkyNDAwMDAw
MAogI2RlZmluZSBLTUJfU1lTX0NMS19NSFoJCQk1MDAKIAorI2RlZmluZSBjcnRjX3RvX2ttYl9w
cml2KHgpCWNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2RybV9wcml2YXRlLCBjcnRjKQorCiBz
dHJ1Y3Qga21iX2RybV9wcml2YXRlIHsKLQlzdHJ1Y3QgZHJtX2RldmljZQkJZHJtOwotCXZvaWQg
X19pb21lbQkJCSpsY2RfbW1pbzsKLQl2b2lkIF9faW9tZW0JCQkqbWlwaV9tbWlvOwotCXZvaWQg
X19pb21lbQkJCSptc3NjYW1fbW1pbzsKLQl1bnNpZ25lZCBjaGFyCQkJbl9sYXllcnM7Ci0Jc3Ry
dWN0IGNsawkJCSpjbGs7Ci0Jc3RydWN0IGRybV9jcnRjCQkJY3J0YzsKLQlzdHJ1Y3Qga21iX3Bs
YW5lCQkqcGxhbmU7Ci0Jc3RydWN0IGRybV9hdG9taWNfc3RhdGUJCSpzdGF0ZTsKLQlzcGlubG9j
a190CQkJaXJxX2xvY2s7Ci0JaW50CQkJCWlycV9sY2Q7Ci0JaW50CQkJCWlycV9taXBpOwotCWRt
YV9hZGRyX3QJCQlmYl9hZGRyOworCXN0cnVjdCBkcm1fZGV2aWNlIGRybTsKKwl2b2lkIF9faW9t
ZW0gKmxjZF9tbWlvOworCXZvaWQgX19pb21lbSAqbWlwaV9tbWlvOworCXZvaWQgX19pb21lbSAq
bXNzY2FtX21taW87CisJdW5zaWduZWQgY2hhciBuX2xheWVyczsKKwlzdHJ1Y3QgY2xrICpjbGs7
CisJc3RydWN0IGRybV9jcnRjIGNydGM7CisJc3RydWN0IGttYl9wbGFuZSAqcGxhbmU7CisJc3Ry
dWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlOworCXNwaW5sb2NrX3QgaXJxX2xvY2s7CisJaW50
IGlycV9sY2Q7CisJaW50IGlycV9taXBpOworCWRtYV9hZGRyX3QgZmJfYWRkcjsKIH07CiAKIHN0
YXRpYyBpbmxpbmUgc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqdG9fa21iKGNvbnN0IHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYpCkBAIC0zOCw1NCArNDAsMTIgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3Qg
a21iX2RybV9wcml2YXRlICp0b19rbWIoY29uc3Qgc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAly
ZXR1cm4gY29udGFpbmVyX29mKGRldiwgc3RydWN0IGttYl9kcm1fcHJpdmF0ZSwgZHJtKTsKIH0K
IAotI2RlZmluZSBjcnRjX3RvX2ttYl9wcml2KHgpCWNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21i
X2RybV9wcml2YXRlLCBjcnRjKQotCiBzdHJ1Y3QgYmx0X2xheWVyX2NvbmZpZyB7CiAJdW5zaWdu
ZWQgY2hhciBsYXllcl9mb3JtYXQ7CiB9OwotLyoKLSAqIGNvbW1lbnRpbmcgdGhpcyBvdXQgdG8g
dXNlIGhhcmRjb2RlZCBhZGRyZXNzIGZvciByZWdpc3RlcnMKLSAqIFRPRE8gd2UgbWF5IG5lZWQg
dGhpcyBsYXRlciBpZiB3ZSBkZWNpZGUgdG8gZ2V0IHRoZSBhZGRyZXNzIGZyb20KLSAqIHRoZSBk
ZXZpY2UgdHJlZQotICovCi0jaWZkZWYgS01CX1dSSVRFCi1zdGF0aWMgaW5saW5lIHZvaWQga21i
X3dyaXRlKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmxjZCwKLQkJCSAgICAgdW5zaWduZWQgaW50
IHJlZywgdTMyIHZhbHVlKQotewotCXdyaXRlbCh2YWx1ZSwgbGNkLT5tbWlvICsgcmVnKTsKLX0K
LQotc3RhdGljIGlubGluZSB1MzIga21iX3JlYWQoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqbGNk
LCB1bnNpZ25lZCBpbnQgcmVnKQotewotCXJldHVybiByZWFkbChsY2QtPm1taW8gKyByZWcpOwot
fQotCi1zdGF0aWMgaW5saW5lIHZvaWQga21iX3dyaXRlX2JpdHMoc3RydWN0IGttYl9kcm1fcHJp
dmF0ZSAqbGNkLAotCQkJCSAgdW5zaWduZWQgaW50IHJlZywgdTMyIG9mZnNldCwgdTMyIG51bV9i
aXRzLAotCQkJCSAgdTMyIHZhbHVlKQotewotCXUzMiByZWdfdmFsID0ga21iX3JlYWQobGNkLCBy
ZWcpOwotCXUzMiBtYXNrID0gKDEgPDwgbnVtX2JpdHMpIC0gMTsKLQotCXZhbHVlICY9IG1hc2s7
Ci0JbWFzayA8PD0gb2Zmc2V0OwotCXJlZ192YWwgJj0gKH5tYXNrKTsKLQlyZWdfdmFsIHw9ICh2
YWx1ZSA8PCBvZmZzZXQpOwotCXdyaXRlbChyZWdfdmFsLCBsY2QtPm1taW8gKyByZWcpOwotfQot
c3RhdGljIGlubGluZSB2b2lkIGttYl93cml0ZSh1bnNpZ25lZCBpbnQgcmVnLCB1MzIgdmFsdWUp
Ci17Ci0Jd3JpdGVsKHZhbHVlLCByZWcpOwotfQotCi1zdGF0aWMgaW5saW5lIHUzMiBrbWJfcmVh
ZCh1bnNpZ25lZCBpbnQgcmVnKQotewotCXJldHVybiByZWFkbChyZWcpOwotfQotI2VuZGlmCiAK
IHN0YXRpYyBpbmxpbmUgdm9pZCBrbWJfd3JpdGVfbGNkKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUg
KmRldl9wLAotCQl1bnNpZ25lZCBpbnQgcmVnLCB1MzIgdmFsdWUpCisJCQkJIHVuc2lnbmVkIGlu
dCByZWcsIHUzMiB2YWx1ZSkKIHsKICNpZmRlZiBMQ0RfVEVTVAogCXdyaXRlbCh2YWx1ZSwgKGRl
dl9wLT5sY2RfbW1pbyArIHJlZykpOwpAQCAtOTMsMjUgKzUzLDI1IEBAIHN0YXRpYyBpbmxpbmUg
dm9pZCBrbWJfd3JpdGVfbGNkKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAogfQogCiBz
dGF0aWMgaW5saW5lIHZvaWQga21iX3dyaXRlX21pcGkoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAq
ZGV2X3AsCi0JCXVuc2lnbmVkIGludCByZWcsIHUzMiB2YWx1ZSkKKwkJCQkgIHVuc2lnbmVkIGlu
dCByZWcsIHUzMiB2YWx1ZSkKIHsKIAl3cml0ZWwodmFsdWUsIChkZXZfcC0+bWlwaV9tbWlvICsg
cmVnKSk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBrbWJfd3JpdGVfbXNzY2FtKHN0cnVjdCBr
bWJfZHJtX3ByaXZhdGUgKmRldl9wLAotCQl1bnNpZ25lZCBpbnQgcmVnLCB1MzIgdmFsdWUpCisJ
CQkJICAgIHVuc2lnbmVkIGludCByZWcsIHUzMiB2YWx1ZSkKIHsKIAl3cml0ZWwodmFsdWUsIChk
ZXZfcC0+bXNzY2FtX21taW8gKyByZWcpKTsKIH0KIAogc3RhdGljIGlubGluZSB1MzIga21iX3Jl
YWRfbXNzY2FtKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAotCQl1bnNpZ25lZCBpbnQg
cmVnKQorCQkJCSAgdW5zaWduZWQgaW50IHJlZykKIHsKIAlyZXR1cm4gcmVhZGwoZGV2X3AtPm1z
c2NhbV9tbWlvICsgcmVnKTsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIGttYl9zZXRfYml0bWFz
a19tc3NjYW0oc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCXVuc2lnbmVkIGludCBy
ZWcsIHUzMiBtYXNrKQorCQkJCQkgIHVuc2lnbmVkIGludCByZWcsIHUzMiBtYXNrKQogewogCXUz
MiByZWdfdmFsID0ga21iX3JlYWRfbXNzY2FtKGRldl9wLCByZWcpOwogCkBAIC0xMjcsNyArODcs
NyBAQCBzdGF0aWMgaW5saW5lIHUzMiBrbWJfcmVhZF9sY2Qoc3RydWN0IGttYl9kcm1fcHJpdmF0
ZSAqZGV2X3AsIHVuc2lnbmVkIGludCByZWcpCiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBrbWJf
c2V0X2JpdG1hc2tfbGNkKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAotCQl1bnNpZ25l
ZCBpbnQgcmVnLCB1MzIgbWFzaykKKwkJCQkgICAgICAgdW5zaWduZWQgaW50IHJlZywgdTMyIG1h
c2spCiB7CiAjaWZkZWYgTENEX1RFU1QKIAl1MzIgcmVnX3ZhbCA9IGttYl9yZWFkX2xjZChkZXZf
cCwgcmVnKTsKQEAgLTEzNyw3ICs5Nyw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBrbWJfc2V0X2Jp
dG1hc2tfbGNkKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAogfQogCiBzdGF0aWMgaW5s
aW5lIHZvaWQga21iX2Nscl9iaXRtYXNrX2xjZChzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZf
cCwKLQkJdW5zaWduZWQgaW50IHJlZywgdTMyIG1hc2spCisJCQkJICAgICAgIHVuc2lnbmVkIGlu
dCByZWcsIHUzMiBtYXNrKQogewogI2lmZGVmIExDRF9URVNUCiAJdTMyIHJlZ192YWwgPSBrbWJf
cmVhZF9sY2QoZGV2X3AsIHJlZyk7CkBAIC0xNTIsNyArMTEyLDggQEAgc3RhdGljIGlubGluZSB1
MzIga21iX3JlYWRfbWlwaShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdW5zaWduZWQg
aW50IHJlZykKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIGttYl93cml0ZV9iaXRzX21pcGkoc3Ry
dWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCXVuc2lnbmVkIGludCByZWcsIHUzMiBvZmZz
ZXQsIHUzMiBudW1fYml0cywgdTMyIHZhbHVlKQorCQkJCSAgICAgICB1bnNpZ25lZCBpbnQgcmVn
LCB1MzIgb2Zmc2V0LAorCQkJCSAgICAgICB1MzIgbnVtX2JpdHMsIHUzMiB2YWx1ZSkKIHsKIAl1
MzIgcmVnX3ZhbCA9IGttYl9yZWFkX21pcGkoZGV2X3AsIHJlZyk7CiAJdTMyIG1hc2sgPSAoMSA8
PCBudW1fYml0cykgLSAxOwpAQCAtMTYxLDExICsxMjIsMTggQEAgc3RhdGljIGlubGluZSB2b2lk
IGttYl93cml0ZV9iaXRzX21pcGkoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCiAJbWFz
ayA8PD0gb2Zmc2V0OwogCXJlZ192YWwgJj0gKH5tYXNrKTsKIAlyZWdfdmFsIHw9ICh2YWx1ZSA8
PCBvZmZzZXQpOworI2lmZGVmIERFQlVHCisJaWYgKHJlZyA9PSBEUEhZX0ZSRVFfQ1RSTDBfMyAr
IDQpIHsKKwkJRFJNX0lORk8oIiVzIDogJWQgIHJlZz0weCV4IG9mZnNldD0lZCBudW1fYml0cz0l
ZCB2YWw9MHgleFxuIiwKKwkJCSBfX2Z1bmNfXywgX19MSU5FX18sIHJlZywgb2Zmc2V0LCBudW1f
Yml0cywKKwkJCSByZWdfdmFsKTsKKwl9CisjZW5kaWYKIAlrbWJfd3JpdGVfbWlwaShkZXZfcCwg
cmVnLCByZWdfdmFsKTsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIGttYl9zZXRfYml0X21pcGko
c3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCXVuc2lnbmVkIGludCByZWcsIHUzMiBv
ZmZzZXQpCisJCQkJICAgIHVuc2lnbmVkIGludCByZWcsIHUzMiBvZmZzZXQpCiB7CiAJdTMyIHJl
Z192YWwgPSBrbWJfcmVhZF9taXBpKGRldl9wLCByZWcpOwogCkBAIC0xNzMsNyArMTQxLDcgQEAg
c3RhdGljIGlubGluZSB2b2lkIGttYl9zZXRfYml0X21pcGkoc3RydWN0IGttYl9kcm1fcHJpdmF0
ZSAqZGV2X3AsCiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBrbWJfY2xyX2JpdF9taXBpKHN0cnVj
dCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAotCQl1bnNpZ25lZCBpbnQgcmVnLCB1MzIgb2Zmc2V0
KQorCQkJCSAgICB1bnNpZ25lZCBpbnQgcmVnLCB1MzIgb2Zmc2V0KQogewogCXUzMiByZWdfdmFs
ID0ga21iX3JlYWRfbWlwaShkZXZfcCwgcmVnKTsKIApAQCAtMTgxLDcgKzE0OSw3IEBAIHN0YXRp
YyBpbmxpbmUgdm9pZCBrbWJfY2xyX2JpdF9taXBpKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRl
dl9wLAogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQga21iX3NldF9iaXRtYXNrX21pcGkoc3RydWN0
IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCXVuc2lnbmVkIGludCByZWcsIHUzMiBtYXNrKQor
CQkJCQl1bnNpZ25lZCBpbnQgcmVnLCB1MzIgbWFzaykKIHsKIAl1MzIgcmVnX3ZhbCA9IGttYl9y
ZWFkX21pcGkoZGV2X3AsIHJlZyk7CiAKQEAgLTE4OSwxMiArMTU3LDEzIEBAIHN0YXRpYyBpbmxp
bmUgdm9pZCBrbWJfc2V0X2JpdG1hc2tfbWlwaShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZf
cCwKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIGttYl9jbHJfYml0bWFza19taXBpKHN0cnVjdCBr
bWJfZHJtX3ByaXZhdGUgKmRldl9wLAotCQl1bnNpZ25lZCBpbnQgcmVnLCB1MzIgbWFzaykKKwkJ
CQkJdW5zaWduZWQgaW50IHJlZywgdTMyIG1hc2spCiB7CiAJdTMyIHJlZ192YWwgPSBrbWJfcmVh
ZF9taXBpKGRldl9wLCByZWcpOwogCiAJa21iX3dyaXRlX21pcGkoZGV2X3AsIHJlZywgKHJlZ192
YWwgJiAofm1hc2spKSk7CiB9CisKIGludCBrbWJfc2V0dXBfY3J0YyhzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2KTsKIHZvaWQga21iX3NldF9zY2Fub3V0KHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmxj
ZCk7CiAjZW5kaWYgLyogX19LTUJfRFJWX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2ttYi9rbWJfZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2kuYwppbmRleCBl
OTQ5OWNmLi42ZTM4ZjE2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2ku
YworKysgYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2kuYwpAQCAtMyw5ICszLDcgQEAKICAq
IENvcHlyaWdodCDCqSAyMDE5LTIwMjAgSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCi0jaW5jbHVk
ZSA8bGludXgvYnVmZmVyX2hlYWQuaD4KICNpbmNsdWRlIDxsaW51eC9kZWxheS5oPgotI2luY2x1
ZGUgPGxpbnV4L2ZzLmg+CiAjaW5jbHVkZSA8bGludXgvZ3Bpby9jb25zdW1lci5oPgogI2luY2x1
ZGUgPGxpbnV4L3NsYWIuaD4KICNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgpAQCAtMjMsNTYg
KzIxLDE5IEBACiAjaW5jbHVkZSAia21iX3JlZ3MuaCIKIAogc3RhdGljIGludCBod19pbml0aWFs
aXplZDsKLSNkZWZpbmUgSU1BR0VfUEFUSCAiL2hvbWUvcm9vdC8xMjgweDcyMC5wbm0iCiAvLyNk
ZWZpbmUgTUlQSV9UWF9URVNUX1BBVFRFUk5fR0VORVJBVElPTgogLy8jZGVmaW5lIE1JUElfRE1B
CiAvLyNkZWZpbmUgUlRMX1RFU1QKKy8vI2RlZmluZSBEUEhZX0dFVF9GU00KKy8vI2RlZmluZSBN
SVBJX1RYX0lOSVRfSVJRUworLy8jZGVmaW5lIEdFVF9TWVNfQ0xLCisvLyNkZWZpbmUgRFBIWV9S
RUFEX1RFU1RDT0RFCisvLyNkZWZpbmUgTUlQSV9UWF9IQU5ETEVfSVJRUwogCi0vKk1JUEkgVFgg
Q0ZHKi8KLSNkZWZpbmUgTUlQSV9UWF9MQU5FX0RBVEFfUkFURV9NQlBTIDg5MQotI2RlZmluZSBN
SVBJX1RYX1JFRl9DTEtfS0haICAgICAgICAgMjQwMDAKLSNkZWZpbmUgTUlQSV9UWF9DRkdfQ0xL
X0tIWiAgICAgICAgIDI0MDAwCi0jZGVmaW5lIE1JUElfVFhfQlBQCQkgICAgMjQKLQotLypEUEhZ
IFR4IHRlc3QgY29kZXMqLwotI2RlZmluZSBURVNUX0NPREVfRlNNX0NPTlRST0wJCQkJMHgwMwot
I2RlZmluZSBURVNUX0NPREVfTVVMVElQTEVfUEhZX0NUUkwJCQkweDBDCi0jZGVmaW5lIFRFU1Rf
Q09ERV9QTExfUFJPUE9SVElPTkFMX0NIQVJHRV9QVU1QX0NUUkwJMHgwRQotI2RlZmluZSBURVNU
X0NPREVfUExMX0lOVEVHUkFMX0NIQVJHRV9QVU1QX0NUUkwJCTB4MEYKLSNkZWZpbmUgVEVTVF9D
T0RFX1BMTF9WQ09fQ1RSTAkJCQkweDEyCi0jZGVmaW5lIFRFU1RfQ09ERV9QTExfR01QX0NUUkwJ
CQkJMHgxMwotI2RlZmluZSBURVNUX0NPREVfUExMX1BIQVNFX0VSUl9DVFJMCQkJMHgxNAotI2Rl
ZmluZSBURVNUX0NPREVfUExMX0xPQ0tfRklMVEVSCQkJMHgxNQotI2RlZmluZSBURVNUX0NPREVf
UExMX1VOTE9DS19GSUxURVIJCQkweDE2Ci0jZGVmaW5lIFRFU1RfQ09ERV9QTExfSU5QVVRfRElW
SURFUgkJCTB4MTcKLSNkZWZpbmUgVEVTVF9DT0RFX1BMTF9GRUVEQkFDS19ESVZJREVSCQkJMHgx
OAotI2RlZmluZSAgIFBMTF9GRUVEQkFDS19ESVZJREVSX0hJR0gJCQkoMSA8PCA3KQotI2RlZmlu
ZSBURVNUX0NPREVfUExMX09VVFBVVF9DTEtfU0VMCQkJMHgxOQotI2RlZmluZSAgIFBMTF9OX09W
Ul9FTgkJCQkJKDEgPDwgNCkKLSNkZWZpbmUgICBQTExfTV9PVlJfRU4JCQkJCSgxIDw8IDUpCi0j
ZGVmaW5lIFRFU1RfQ09ERV9WT0RfTEVWRUwJCQkJMHgyNAotI2RlZmluZSBURVNUX0NPREVfUExM
X0NIQVJHRV9QVU1QX0JJQVMJCQkweDFDCi0jZGVmaW5lIFRFU1RfQ09ERV9QTExfTE9DS19ERVRF
Q1RPUgkJCTB4MUQKLSNkZWZpbmUgVEVTVF9DT0RFX0hTX0ZSRVFfUkFOR0VfQ0ZHCQkJMHg0NAot
I2RlZmluZSBURVNUX0NPREVfUExMX0FOQUxPR19QUk9HCQkJMHgxRgotI2RlZmluZSBURVNUX0NP
REVfU0xFV19SQVRFX09WRVJSSURFX0NUUkwJCTB4QTAKLSNkZWZpbmUgVEVTVF9DT0RFX1NMRVdf
UkFURV9ERExfTE9PUF9DVFJMCQkweEEzCi0jZGVmaW5lIFRFU1RfQ09ERV9TTEVXX1JBVEVfRERM
X0NZQ0xFUwkJCTB4QTQKLQotLyogRC1QaHkgcGFyYW1zICAqLwotI2RlZmluZSBQTExfTl9NSU4J
MAotI2RlZmluZSBQTExfTl9NQVgJMTUKLSNkZWZpbmUgUExMX01fTUlOCTYyCi0jZGVmaW5lIFBM
TF9NX01BWAk2MjMKLSNkZWZpbmUgUExMX0ZWQ09fTUFYCTEyNTAKLQotI2RlZmluZSBUSU1FT1VU
CQk2MDAKIHN0YXRpYyBzdHJ1Y3QgbWlwaV9kc2lfaG9zdCAqZHNpX2hvc3Q7CiBzdGF0aWMgc3Ry
dWN0IG1pcGlfZHNpX2RldmljZSAqZHNpX2RldmljZTsKIAotLyoKLSAqIERlZmF1bHQgc2V0dGlu
ZyBpcyAxMDgwcCwgNCBsYW5lcy4KLSAqLworLyogRGVmYXVsdCBzZXR0aW5nIGlzIDEwODBwLCA0
IGxhbmVzICovCiAjZGVmaW5lIElNR19IRUlHSFRfTElORVMgIDEwODAKICNkZWZpbmUgSU1HX1dJ
RFRIX1BYICAgICAgMTkyMAogI2RlZmluZSBNSVBJX1RYX0FDVElWRV9MQU5FUyA0CkBAIC04Miw3
ICs0Myw2IEBAIHN0cnVjdCBtaXBpX3R4X2ZyYW1lX3NlY3Rpb25fY2ZnIG1pcGlfdHhfZnJhbWUw
X3NlY3RfY2ZnID0gewogCS5oZWlnaHRfbGluZXMgPSBJTUdfSEVJR0hUX0xJTkVTLAogCS5kYXRh
X3R5cGUgPSBEU0lfTFBfRFRfUFBTX1JHQjg4OF8yNEIsCiAJLmRhdGFfbW9kZSA9IE1JUElfREFU
QV9NT0RFMSwKLS8vCS5kYXRhX21vZGUgPSBNSVBJX0RBVEFfTU9ERTAsCiAJLmRtYV9wYWNrZWQg
PSAwCiB9OwogCkBAIC0xMzIsMTggKzkyLDM0IEBAIHN0cnVjdCBtaXBpX2N0cmxfY2ZnIG1pcGlf
dHhfaW5pdF9jZmcgPSB7CiAJCQkudHhfYWx3YXlzX3VzZV9oYWN0ID0gMSwKIAkJCS50eF9oYWN0
X3dhaXRfc3RvcCA9IDEsCiAJCQl9Ci0KIH07CiAKLXU4ICppQnVmOwotCi1zdHJ1Y3QgbWlwaV9o
c19mcmVxX3JhbmdlX2NmZyB7CitzdHJ1Y3QgIG1pcGlfaHNfZnJlcV9yYW5nZV9jZmcgewogCXVp
bnQxNl90IGRlZmF1bHRfYml0X3JhdGVfbWJwczsKIAl1aW50OF90IGhzZnJlcXJhbmdlX2NvZGU7
CiB9OwogCitzdHJ1Y3QgdmNvX3BhcmFtcyB7CisJdTMyIGZyZXE7CisJdTMyIHJhbmdlOworCXUz
MiBkaXZpZGVyOworfTsKKworc3RhdGljIHN0cnVjdCB2Y29fcGFyYW1zIHZjb190YWJsZVtdID0g
eworCXs1MiwgMHgzZiwgOH0sCisJezgwLCAweDM5LCA4fSwKKwl7MTA1LCAweDJmLCA0fSwKKwl7
MTYwLCAweDI5LCA0fSwKKwl7MjEwLCAweDFmLCAyfSwKKwl7MzIwLCAweDE5LCAyfSwKKwl7NDIw
LCAweDBmLCAxfSwKKwl7NjMwLCAweDA5LCAxfSwKKwl7MTEwMCwgMHgwMywgMX0sCisJezB4ZmZm
ZiwgMHgwMSwgMX0sCit9OworCiBzdGF0aWMgc3RydWN0IG1pcGlfaHNfZnJlcV9yYW5nZV9jZmcK
LQltaXBpX2hzX2ZyZXFfcmFuZ2VbTUlQSV9EUEhZX0RFRkFVTFRfQklUX1JBVEVTXSA9IHsKK21p
cGlfaHNfZnJlcV9yYW5nZVtNSVBJX0RQSFlfREVGQVVMVF9CSVRfUkFURVNdID0gewogCXsuZGVm
YXVsdF9iaXRfcmF0ZV9tYnBzID0gODAsIC5oc2ZyZXFyYW5nZV9jb2RlID0gMHgwMH0sCiAJey5k
ZWZhdWx0X2JpdF9yYXRlX21icHMgPSA5MCwgLmhzZnJlcXJhbmdlX2NvZGUgPSAweDEwfSwKIAl7
LmRlZmF1bHRfYml0X3JhdGVfbWJwcyA9IDEwMCwgLmhzZnJlcXJhbmdlX2NvZGUgPSAweDIwfSwK
QEAgLTIyNSwxNCArMjAxLDE5IEBAIHN0YXRpYyBpbnQga21iX2RzaV9nZXRfbW9kZXMoc3RydWN0
IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcikKIAlpbnQgbnVtX21vZGVzID0gMDsKIAogCW51bV9t
b2RlcyA9IGRybV9hZGRfbW9kZXNfbm9lZGlkKGNvbm5lY3RvciwKLQkJCQkgY29ubmVjdG9yLT5k
ZXYtPm1vZGVfY29uZmlnLm1heF93aWR0aCwKLQkJCQkgY29ubmVjdG9yLT5kZXYtPm1vZGVfY29u
ZmlnLm1heF9oZWlnaHQpOworCQkJIGNvbm5lY3Rvci0+ZGV2LT5tb2RlX2NvbmZpZy5tYXhfd2lk
dGgsCisJCQkgY29ubmVjdG9yLT5kZXYtPm1vZGVfY29uZmlnLm1heF9oZWlnaHQpOworCisJRFJN
X0lORk8oIndpZHRoPSVkIGhlaWdodD0lZFxuIiwKKwkJIGNvbm5lY3Rvci0+ZGV2LT5tb2RlX2Nv
bmZpZy5tYXhfd2lkdGgsCisJCSBjb25uZWN0b3ItPmRldi0+bW9kZV9jb25maWcubWF4X2hlaWdo
dCk7CisJRFJNX0lORk8oIm51bSBtb2Rlcz0lZFxuIiwgbnVtX21vZGVzKTsKKwogCXJldHVybiBu
dW1fbW9kZXM7CiB9CiAKIHZvaWQga21iX2RzaV9ob3N0X3VucmVnaXN0ZXIodm9pZCkKIHsKLQlE
Uk1fSU5GTygiJXMgOiAlZFxuIiwgX19mdW5jX18sIF9fTElORV9fKTsKIAltaXBpX2RzaV9ob3N0
X3VucmVnaXN0ZXIoZHNpX2hvc3QpOwogCWtmcmVlKGRzaV9ob3N0KTsKIH0KQEAgLTI0MCw4ICsy
MjEsNiBAQCB2b2lkIGttYl9kc2lfaG9zdF91bnJlZ2lzdGVyKHZvaWQpCiBzdGF0aWMgdm9pZCBr
bWJfZHNpX2Nvbm5lY3Rvcl9kZXN0cm95KHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3Ip
CiB7CiAJc3RydWN0IGttYl9jb25uZWN0b3IgKmttYl9jb25uZWN0b3IgPSB0b19rbWJfY29ubmVj
dG9yKGNvbm5lY3Rvcik7Ci0KLQlEUk1fSU5GTygiJXMgOiAlZFxuIiwgX19mdW5jX18sIF9fTElO
RV9fKTsKIAlkcm1fY29ubmVjdG9yX2NsZWFudXAoY29ubmVjdG9yKTsKIAlrZnJlZShrbWJfY29u
bmVjdG9yKTsKIH0KQEAgLTI1MCw3ICsyMjksNiBAQCBzdGF0aWMgdm9pZCBrbWJfZHNpX2VuY29k
ZXJfZGVzdHJveShzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGttYl9k
c2kgKmttYl9kc2kgPSB0b19rbWJfZHNpKGVuY29kZXIpOwogCi0JRFJNX0lORk8oIiVzIDogJWRc
biIsIF9fZnVuY19fLCBfX0xJTkVfXyk7CiAJaWYgKCFrbWJfZHNpKQogCQlyZXR1cm47CiAKQEAg
LTMxMiw3ICsyOTAsNiBAQCBzdGF0aWMgc3RydWN0IGttYl9kc2lfaG9zdCAqa21iX2RzaV9ob3N0
X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRybSwKIHsKIAlzdHJ1Y3Qga21iX2RzaV9ob3N0ICpo
b3N0OwogCi0JRFJNX0lORk8oIiVzIDogJWRcbiIsIF9fZnVuY19fLCBfX0xJTkVfXyk7CiAJaG9z
dCA9IGt6YWxsb2Moc2l6ZW9mKCpob3N0KSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFob3N0KQogCQly
ZXR1cm4gTlVMTDsKQEAgLTMzMSw2ICszMDgsOSBAQCBzdGF0aWMgc3RydWN0IGttYl9kc2lfaG9z
dCAqa21iX2RzaV9ob3N0X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRybSwKIHN0cnVjdCBkcm1f
YnJpZGdlICprbWJfZHNpX2hvc3RfYnJpZGdlX2luaXQoc3RydWN0IGRldmljZSAqZGV2KQogewog
CXN0cnVjdCBkcm1fYnJpZGdlICpicmlkZ2U7CisjaWZuZGVmIEZDQ1RFU1QKKwlzdHJ1Y3QgZGV2
aWNlX25vZGUgKmVuY29kZXJfbm9kZTsKKyNlbmRpZgogCiAJLyogQ3JlYXRlIGFuZCByZWdpc3Rl
ciBNSVBJIERTSSBob3N0ICovCiAJaWYgKCFkc2lfaG9zdCkgewpAQCAtMzUyLDEyICszMzIsMTEg
QEAgc3RydWN0IGRybV9icmlkZ2UgKmttYl9kc2lfaG9zdF9icmlkZ2VfaW5pdChzdHJ1Y3QgZGV2
aWNlICpkZXYpCiAJCW1pcGlfZHNpX2hvc3RfcmVnaXN0ZXIoZHNpX2hvc3QpOwogCX0KICNpZm5k
ZWYgRkNDVEVTVAotCS8qIGZpbmQgQURWNzUzNSBub2RlIGFuZCBpbml0aWFsaXplIGl0ICovCi0J
RFJNX0lORk8oInRyeWluZyB0byBnZXQgYnJpZGdlIGluZm8gJXBPRlxuIiwgZGV2LT5vZl9ub2Rl
KTsKKwkvKiBGaW5kIEFEVjc1MzUgbm9kZSBhbmQgaW5pdGlhbGl6ZSBpdCAqLwogCWVuY29kZXJf
bm9kZSA9IG9mX3BhcnNlX3BoYW5kbGUoZGV2LT5vZl9ub2RlLCAiZW5jb2Rlci1zbGF2ZSIsIDAp
OwotCURSTV9JTkZPKCJlbmNvZGVyIG5vZGUgPSAgJXBPRlxuIiwgZW5jb2Rlcl9ub2RlKTsKKwog
CWlmICghZW5jb2Rlcl9ub2RlKSB7Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIGdldCBicmlkZ2Ug
aW5mbyBmcm9tIERUXG4iKTsKKwkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gZ2V0IGJyaWRnZSBpbmZv
IGZyb20gRFRcbiIpOwogCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKIAl9CiAKQEAgLTM2NSw3
ICszNDQsNyBAQCBzdHJ1Y3QgZHJtX2JyaWRnZSAqa21iX2RzaV9ob3N0X2JyaWRnZV9pbml0KHN0
cnVjdCBkZXZpY2UgKmRldikKIAlicmlkZ2UgPSBvZl9kcm1fZmluZF9icmlkZ2UoZW5jb2Rlcl9u
b2RlKTsKIAlvZl9ub2RlX3B1dChlbmNvZGVyX25vZGUpOwogCWlmICghYnJpZGdlKSB7Ci0JCURS
TV9JTkZPKCJ3YWl0IGZvciBleHRlcm5hbCBicmlkZ2UgZHJpdmVyIERUXG4iKTsKKwkJRFJNX0lO
Rk8oIldhaXQgZm9yIGV4dGVybmFsIGJyaWRnZSBkcml2ZXIgRFRcbiIpOwogCQlyZXR1cm4gRVJS
X1BUUigtRVBST0JFX0RFRkVSKTsKIAl9CiAjZW5kaWYKQEAgLTM3MywyMSArMzUyLDIxIEBAIHN0
cnVjdCBkcm1fYnJpZGdlICprbWJfZHNpX2hvc3RfYnJpZGdlX2luaXQoc3RydWN0IGRldmljZSAq
ZGV2KQogfQogCiB1MzIgbWlwaV9nZXRfZGF0YXR5cGVfcGFyYW1zKHUzMiBkYXRhX3R5cGUsIHUz
MiBkYXRhX21vZGUsCi0JCXN0cnVjdCBtaXBpX2RhdGFfdHlwZV9wYXJhbXMgKnBhcmFtcykKKwkJ
CSAgICAgc3RydWN0IG1pcGlfZGF0YV90eXBlX3BhcmFtcyAqcGFyYW1zKQogewotCXN0cnVjdCBt
aXBpX2RhdGFfdHlwZV9wYXJhbXMgZGF0YV90eXBlX3BhcmFtZXRlcnM7CisJc3RydWN0IG1pcGlf
ZGF0YV90eXBlX3BhcmFtcyBkYXRhX3R5cGVfcGFyYW07CiAKIAlzd2l0Y2ggKGRhdGFfdHlwZSkg
ewogCWNhc2UgRFNJX0xQX0RUX1BQU19ZQ0JDUjQyMF8xMkI6Ci0JCWRhdGFfdHlwZV9wYXJhbWV0
ZXJzLnNpemVfY29uc3RyYWludF9waXhlbHMgPSAyOwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5z
aXplX2NvbnN0cmFpbnRfYnl0ZXMgPSAzOworCQlkYXRhX3R5cGVfcGFyYW0uc2l6ZV9jb25zdHJh
aW50X3BpeGVscyA9IDI7CisJCWRhdGFfdHlwZV9wYXJhbS5zaXplX2NvbnN0cmFpbnRfYnl0ZXMg
PSAzOwogCQlzd2l0Y2ggKGRhdGFfbW9kZSkgewotCQkJLyogY2FzZSAwIG5vdCBzdXBwb3J0ZWQg
YWNjb3JkaW5nIHRvIE1ESyAqLworCQkJLyogQ2FzZSAwIG5vdCBzdXBwb3J0ZWQgYWNjb3JkaW5n
IHRvIE1ESyAqLwogCQljYXNlIDE6CiAJCWNhc2UgMjoKIAkJY2FzZSAzOgotCQkJZGF0YV90eXBl
X3BhcmFtZXRlcnMucGl4ZWxzX3Blcl9wY2xrID0gMjsKLQkJCWRhdGFfdHlwZV9wYXJhbWV0ZXJz
LmJpdHNfcGVyX3BjbGsgPSAyNDsKKwkJCWRhdGFfdHlwZV9wYXJhbS5waXhlbHNfcGVyX3BjbGsg
PSAyOworCQkJZGF0YV90eXBlX3BhcmFtLmJpdHNfcGVyX3BjbGsgPSAyNDsKIAkJCWJyZWFrOwog
CQlkZWZhdWx0OgogCQkJRFJNX0VSUk9SKCJEU0k6IEludmFsaWQgZGF0YV9tb2RlICVkXG4iLCBk
YXRhX21vZGUpOwpAQCAtMzk1LDE3ICszNzQsMTkgQEAgdTMyIG1pcGlfZ2V0X2RhdGF0eXBlX3Bh
cmFtcyh1MzIgZGF0YV90eXBlLCB1MzIgZGF0YV9tb2RlLAogCQl9OwogCQlicmVhazsKIAljYXNl
IERTSV9MUF9EVF9QUFNfWUNCQ1I0MjJfMTZCOgotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5zaXpl
X2NvbnN0cmFpbnRfcGl4ZWxzID0gMjsKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuc2l6ZV9jb25z
dHJhaW50X2J5dGVzID0gNDsKKwkJZGF0YV90eXBlX3BhcmFtLnNpemVfY29uc3RyYWludF9waXhl
bHMgPSAyOworCQlkYXRhX3R5cGVfcGFyYW0uc2l6ZV9jb25zdHJhaW50X2J5dGVzID0gNDsKIAkJ
c3dpdGNoIChkYXRhX21vZGUpIHsKLQkJCS8qIGNhc2UgMCBhbmQgMSBub3Qgc3VwcG9ydGVkIGFj
Y29yZGluZyB0byBNREsgKi8KKwkJCS8qIENhc2UgMCBhbmQgMSBub3Qgc3VwcG9ydGVkIGFjY29y
ZGluZworCQkJICogdG8gTURLCisJCQkgKi8KIAkJY2FzZSAyOgotCQkJZGF0YV90eXBlX3BhcmFt
ZXRlcnMucGl4ZWxzX3Blcl9wY2xrID0gMTsKLQkJCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLmJpdHNf
cGVyX3BjbGsgPSAxNjsKKwkJCWRhdGFfdHlwZV9wYXJhbS5waXhlbHNfcGVyX3BjbGsgPSAxOwor
CQkJZGF0YV90eXBlX3BhcmFtLmJpdHNfcGVyX3BjbGsgPSAxNjsKIAkJCWJyZWFrOwogCQljYXNl
IDM6Ci0JCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5waXhlbHNfcGVyX3BjbGsgPSAyOwotCQkJZGF0
YV90eXBlX3BhcmFtZXRlcnMuYml0c19wZXJfcGNsayA9IDMyOworCQkJZGF0YV90eXBlX3BhcmFt
LnBpeGVsc19wZXJfcGNsayA9IDI7CisJCQlkYXRhX3R5cGVfcGFyYW0uYml0c19wZXJfcGNsayA9
IDMyOwogCQkJYnJlYWs7CiAJCWRlZmF1bHQ6CiAJCQlEUk1fRVJST1IoIkRTSTogSW52YWxpZCBk
YXRhX21vZGUgJWRcbiIsIGRhdGFfbW9kZSk7CkBAIC00MTQsMTUgKzM5NSwxNSBAQCB1MzIgbWlw
aV9nZXRfZGF0YXR5cGVfcGFyYW1zKHUzMiBkYXRhX3R5cGUsIHUzMiBkYXRhX21vZGUsCiAJCWJy
ZWFrOwogCWNhc2UgRFNJX0xQX0RUX0xQUFNfWUNCQ1I0MjJfMjBCOgogCWNhc2UgRFNJX0xQX0RU
X1BQU19ZQ0JDUjQyMl8yNEI6Ci0JCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLnNpemVfY29uc3RyYWlu
dF9waXhlbHMgPSAyOwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5zaXplX2NvbnN0cmFpbnRfYnl0
ZXMgPSA2OworCQlkYXRhX3R5cGVfcGFyYW0uc2l6ZV9jb25zdHJhaW50X3BpeGVscyA9IDI7CisJ
CWRhdGFfdHlwZV9wYXJhbS5zaXplX2NvbnN0cmFpbnRfYnl0ZXMgPSA2OwogCQlzd2l0Y2ggKGRh
dGFfbW9kZSkgewotCQkJLyogY2FzZSAwIG5vdCBzdXBwb3J0ZWQgYWNjb3JkaW5nIHRvIE1ESyAq
LworCQkJLyogQ2FzZSAwIG5vdCBzdXBwb3J0ZWQgYWNjb3JkaW5nIHRvIE1ESyAqLwogCQljYXNl
IDE6CiAJCWNhc2UgMjoKIAkJY2FzZSAzOgotCQkJZGF0YV90eXBlX3BhcmFtZXRlcnMucGl4ZWxz
X3Blcl9wY2xrID0gMTsKLQkJCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLmJpdHNfcGVyX3BjbGsgPSAy
NDsKKwkJCWRhdGFfdHlwZV9wYXJhbS5waXhlbHNfcGVyX3BjbGsgPSAxOworCQkJZGF0YV90eXBl
X3BhcmFtLmJpdHNfcGVyX3BjbGsgPSAyNDsKIAkJCWJyZWFrOwogCQlkZWZhdWx0OgogCQkJRFJN
X0VSUk9SKCJEU0k6IEludmFsaWQgZGF0YV9tb2RlICVkXG4iLCBkYXRhX21vZGUpOwpAQCAtNDMw
LDE4ICs0MTEsMTggQEAgdTMyIG1pcGlfZ2V0X2RhdGF0eXBlX3BhcmFtcyh1MzIgZGF0YV90eXBl
LCB1MzIgZGF0YV9tb2RlLAogCQl9OwogCQlicmVhazsKIAljYXNlIERTSV9MUF9EVF9QUFNfUkdC
NTY1XzE2QjoKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuc2l6ZV9jb25zdHJhaW50X3BpeGVscyA9
IDE7Ci0JCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLnNpemVfY29uc3RyYWludF9ieXRlcyA9IDI7CisJ
CWRhdGFfdHlwZV9wYXJhbS5zaXplX2NvbnN0cmFpbnRfcGl4ZWxzID0gMTsKKwkJZGF0YV90eXBl
X3BhcmFtLnNpemVfY29uc3RyYWludF9ieXRlcyA9IDI7CiAJCXN3aXRjaCAoZGF0YV9tb2RlKSB7
CiAJCWNhc2UgMDoKIAkJY2FzZSAxOgotCQkJZGF0YV90eXBlX3BhcmFtZXRlcnMucGl4ZWxzX3Bl
cl9wY2xrID0gMTsKLQkJCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLmJpdHNfcGVyX3BjbGsgPSAxNjsK
KwkJCWRhdGFfdHlwZV9wYXJhbS5waXhlbHNfcGVyX3BjbGsgPSAxOworCQkJZGF0YV90eXBlX3Bh
cmFtLmJpdHNfcGVyX3BjbGsgPSAxNjsKIAkJCWJyZWFrOwogCQljYXNlIDI6CiAJCWNhc2UgMzoK
LQkJCWRhdGFfdHlwZV9wYXJhbWV0ZXJzLnBpeGVsc19wZXJfcGNsayA9IDI7Ci0JCQlkYXRhX3R5
cGVfcGFyYW1ldGVycy5iaXRzX3Blcl9wY2xrID0gMzI7CisJCQlkYXRhX3R5cGVfcGFyYW0ucGl4
ZWxzX3Blcl9wY2xrID0gMjsKKwkJCWRhdGFfdHlwZV9wYXJhbS5iaXRzX3Blcl9wY2xrID0gMzI7
CiAJCQlicmVhazsKIAkJZGVmYXVsdDoKIAkJCURSTV9FUlJPUigiRFNJOiBJbnZhbGlkIGRhdGFf
bW9kZSAlZFxuIiwgZGF0YV9tb2RlKTsKQEAgLTQ0OSw5NyArNDMwLDEwNCBAQCB1MzIgbWlwaV9n
ZXRfZGF0YXR5cGVfcGFyYW1zKHUzMiBkYXRhX3R5cGUsIHUzMiBkYXRhX21vZGUsCiAJCX07CiAJ
CWJyZWFrOwogCWNhc2UgRFNJX0xQX0RUX1BQU19SR0I2NjZfMThCOgotCQlkYXRhX3R5cGVfcGFy
YW1ldGVycy5zaXplX2NvbnN0cmFpbnRfcGl4ZWxzID0gNDsKLQkJZGF0YV90eXBlX3BhcmFtZXRl
cnMuc2l6ZV9jb25zdHJhaW50X2J5dGVzID0gOTsKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuYml0
c19wZXJfcGNsayA9IDE4OwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5waXhlbHNfcGVyX3BjbGsg
PSAxOworCQlkYXRhX3R5cGVfcGFyYW0uc2l6ZV9jb25zdHJhaW50X3BpeGVscyA9IDQ7CisJCWRh
dGFfdHlwZV9wYXJhbS5zaXplX2NvbnN0cmFpbnRfYnl0ZXMgPSA5OworCQlkYXRhX3R5cGVfcGFy
YW0uYml0c19wZXJfcGNsayA9IDE4OworCQlkYXRhX3R5cGVfcGFyYW0ucGl4ZWxzX3Blcl9wY2xr
ID0gMTsKIAkJYnJlYWs7CiAJY2FzZSBEU0lfTFBfRFRfTFBQU19SR0I2NjZfMThCOgogCWNhc2Ug
RFNJX0xQX0RUX1BQU19SR0I4ODhfMjRCOgotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5zaXplX2Nv
bnN0cmFpbnRfcGl4ZWxzID0gMTsKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuc2l6ZV9jb25zdHJh
aW50X2J5dGVzID0gMzsKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuYml0c19wZXJfcGNsayA9IDI0
OwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5waXhlbHNfcGVyX3BjbGsgPSAxOworCQlkYXRhX3R5
cGVfcGFyYW0uc2l6ZV9jb25zdHJhaW50X3BpeGVscyA9IDE7CisJCWRhdGFfdHlwZV9wYXJhbS5z
aXplX2NvbnN0cmFpbnRfYnl0ZXMgPSAzOworCQlkYXRhX3R5cGVfcGFyYW0uYml0c19wZXJfcGNs
ayA9IDI0OworCQlkYXRhX3R5cGVfcGFyYW0ucGl4ZWxzX3Blcl9wY2xrID0gMTsKIAkJYnJlYWs7
CiAJY2FzZSBEU0lfTFBfRFRfUFBTX1JHQjEwMTAxMF8zMEI6Ci0JCWRhdGFfdHlwZV9wYXJhbWV0
ZXJzLnNpemVfY29uc3RyYWludF9waXhlbHMgPSA0OwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5z
aXplX2NvbnN0cmFpbnRfYnl0ZXMgPSAxNTsKLQkJZGF0YV90eXBlX3BhcmFtZXRlcnMuYml0c19w
ZXJfcGNsayA9IDMwOwotCQlkYXRhX3R5cGVfcGFyYW1ldGVycy5waXhlbHNfcGVyX3BjbGsgPSAx
OworCQlkYXRhX3R5cGVfcGFyYW0uc2l6ZV9jb25zdHJhaW50X3BpeGVscyA9IDQ7CisJCWRhdGFf
dHlwZV9wYXJhbS5zaXplX2NvbnN0cmFpbnRfYnl0ZXMgPSAxNTsKKwkJZGF0YV90eXBlX3BhcmFt
LmJpdHNfcGVyX3BjbGsgPSAzMDsKKwkJZGF0YV90eXBlX3BhcmFtLnBpeGVsc19wZXJfcGNsayA9
IDE7CiAJCWJyZWFrOwotCiAJZGVmYXVsdDoKIAkJRFJNX0VSUk9SKCJEU0k6IEludmFsaWQgZGF0
YV90eXBlICVkXG4iLCBkYXRhX3R5cGUpOwogCQlyZXR1cm4gLUVJTlZBTDsKLQl9CisJfTsKIAot
CSpwYXJhbXMgPSBkYXRhX3R5cGVfcGFyYW1ldGVyczsKKwkqcGFyYW1zID0gZGF0YV90eXBlX3Bh
cmFtOwogCXJldHVybiAwOwogfQogCiBzdGF0aWMgdTMyIGNvbXB1dGVfd2ModTMyIHdpZHRoX3B4
LCB1OCBzaXplX2NvbnN0cl9wLCB1OCBzaXplX2NvbnN0cl9iKQogewotCS8qIGNhbGN1bGF0ZSB0
aGUgd29yZCBjb3VudCBmb3IgZWFjaCBsb25nIHBhY2tldCAqLworCS8qIENhbGN1bGF0ZSB0aGUg
d29yZCBjb3VudCBmb3IgZWFjaCBsb25nIHBhY2tldCAqLwogCXJldHVybiAoKCh3aWR0aF9weCAv
IHNpemVfY29uc3RyX3ApICogc2l6ZV9jb25zdHJfYikgJiAweGZmZmYpOwogfQogCiBzdGF0aWMg
dTMyIGNvbXB1dGVfdW5wYWNrZWRfYnl0ZXModTMyIHdjLCB1OCBiaXRzX3Blcl9wY2xrKQogewot
CS8qbnVtYmVyIG9mIFBDTEsgY3ljbGVzIG5lZWRlZCB0byB0cmFuc2ZlciBhIGxpbmUgKi8KLQkv
KiB3aXRoIGVhY2ggUENMSyBjeWNsZSwgNCBCeXRlcyBhcmUgc2VudCB0aHJvdWdoIHRoZSBQUEwg
bW9kdWxlICovCisJLyogTnVtYmVyIG9mIFBDTEsgY3ljbGVzIG5lZWRlZCB0byB0cmFuc2ZlciBh
IGxpbmUKKwkgKiB3aXRoIGVhY2ggUENMSyBjeWNsZSwgNCBCeXRlcyBhcmUgc2VudCB0aHJvdWdo
IHRoZSBQUEwgbW9kdWxlCisJICovCiAJcmV0dXJuICgod2MgKiA4KSAvIGJpdHNfcGVyX3BjbGsp
ICogNDsKIH0KIAogc3RhdGljIHUzMiBtaXBpX3R4X2ZnX3NlY3Rpb25fY2ZnX3JlZ3Moc3RydWN0
IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCQkJICAgICAgIHU4IGZyYW1lX2lkLAotCQkJCSAg
ICAgICB1OCBzZWN0aW9uLCB1MzIgaGVpZ2h0X2xpbmVzLAotCQkJCSAgICAgICB1MzIgdW5wYWNr
ZWRfYnl0ZXMsCisJCQkJICAgICAgIHU4IGZyYW1lX2lkLCB1OCBzZWN0aW9uLAorCQkJCSAgICAg
ICB1MzIgaGVpZ2h0X2xpbmVzLCB1MzIgdW5wYWNrZWRfYnl0ZXMsCiAJCQkJICAgICAgIHN0cnVj
dCBtaXBpX3R4X2ZyYW1lX3NlY3RfcGhjZmcgKnBoX2NmZykKIHsKIAl1MzIgY2ZnID0gMDsKIAl1
MzIgY3RybF9ubyA9IE1JUElfQ1RSTDY7CiAJdTMyIHJlZ19hZHI7CiAKLQkvKmZyYW1lIHNlY3Rp
b24gcGFja2V0IGhlYWRlciAqLwotCS8qd29yZCBjb3VudCAqLwotCWNmZyA9IChwaF9jZmctPndj
ICYgTUlQSV9UWF9TRUNUX1dDX01BU0spIDw8IDA7CS8qIGJpdHMgWzE1OjBdICovCi0JLypkYXRh
IHR5cGUgKi8KKwkvKiBGcmFtZSBzZWN0aW9uIHBhY2tldCBoZWFkZXIgKi8KKwkvKiBXb3JkIGNv
dW50IGJpdHMgWzE1OjBdICovCisJY2ZnID0gKHBoX2NmZy0+d2MgJiBNSVBJX1RYX1NFQ1RfV0Nf
TUFTSykgPDwgMDsKKworCS8qIERhdGEgdHlwZSAoYml0cyBbMjE6MTZdKSAqLwogCWNmZyB8PSAo
KHBoX2NmZy0+ZGF0YV90eXBlICYgTUlQSV9UWF9TRUNUX0RUX01BU0spCi0JCTw8IE1JUElfVFhf
U0VDVF9EVF9TSElGVCk7CS8qIGJpdHMgWzIxOjE2XSAqLwotCS8qIHZpcnR1YWwgY2hhbm5lbCAq
LworCQk8PCBNSVBJX1RYX1NFQ1RfRFRfU0hJRlQpOworCisJLyogVmlydHVhbCBjaGFubmVsIChi
aXRzIFsyMzoyMl0pICovCiAJY2ZnIHw9ICgocGhfY2ZnLT52Y2hhbm5lbCAmIE1JUElfVFhfU0VD
VF9WQ19NQVNLKQotCQk8PCBNSVBJX1RYX1NFQ1RfVkNfU0hJRlQpOwkvKiBiaXRzIFsyMzoyMl0g
Ki8KLQkvKiBkYXRhIG1vZGUgKi8KKwkJPDwgTUlQSV9UWF9TRUNUX1ZDX1NISUZUKTsKKworCS8q
IERhdGEgbW9kZSAoYml0cyBbMjQ6MjVdKSAqLwogCWNmZyB8PSAoKHBoX2NmZy0+ZGF0YV9tb2Rl
ICYgTUlQSV9UWF9TRUNUX0RNX01BU0spCi0JCQk8PCBNSVBJX1RYX1NFQ1RfRE1fU0hJRlQpOyAv
KiBiaXRzIFsyNDoyNV0qLworCQk8PCBNSVBJX1RYX1NFQ1RfRE1fU0hJRlQpOwogCWlmIChwaF9j
ZmctPmRtYV9wYWNrZWQpCiAJCWNmZyB8PSBNSVBJX1RYX1NFQ1RfRE1BX1BBQ0tFRDsKLQlEUk1f
SU5GTygiJXMgOiAlZCBjdHJsPSVkIGZyYW1lX2lkPSVkIHNlY3Rpb249JWQgY2ZnPSV4IHBhY2tl
ZD0lZFxuIiwKLQkJCV9fZnVuY19fLCBfX0xJTkVfXywgY3RybF9ubywgZnJhbWVfaWQsIHNlY3Rp
b24sIGNmZywKLQkJCXBoX2NmZy0+ZG1hX3BhY2tlZCk7Ci0Ja21iX3dyaXRlX21pcGkoZGV2X3As
IChNSVBJX1RYbV9IU19GR25fU0VDVG9fUEgoY3RybF9ubywgZnJhbWVfaWQsCi0JCQkJCXNlY3Rp
b24pKSwgY2ZnKTsKLQotCS8qdW5wYWNrZWQgYnl0ZXMgKi8KLQkvKnRoZXJlIGFyZSA0IGZyYW1l
IGdlbmVyYXRvcnMgYW5kIGVhY2ggZmcgaGFzIDQgc2VjdGlvbnMKLQkgKnRoZXJlIGFyZSAyIHJl
Z2lzdGVycyBmb3IgdW5wYWNrZWQgYnl0ZXMgLQotCSAqIyBieXRlcyBlYWNoIHNlY3Rpb24gb2Nj
dXBpZXMgaW4gbWVtb3J5Ci0JICpSRUdfVU5QQUNLRURfQllURVMwOiBbMTU6MF0tQllURVMwLCBb
MzE6MTZdLUJZVEVTMQotCSAqUkVHX1VOUEFDS0VEX0JZVEVTMTogWzE1OjBdLUJZVEVTMiwgWzMx
OjE2XS1CWVRFUzMKKworCURSTV9ERUJVRygiY3RybD0lZCBmcmFtZV9pZD0lZCBzZWN0aW9uPSVk
IGNmZz0leCBwYWNrZWQ9JWRcbiIsCisJCSAgY3RybF9ubywgZnJhbWVfaWQsIHNlY3Rpb24sIGNm
ZywgcGhfY2ZnLT5kbWFfcGFja2VkKTsKKwlrbWJfd3JpdGVfbWlwaShkZXZfcCwKKwkJICAgICAg
IChNSVBJX1RYbV9IU19GR25fU0VDVG9fUEgoY3RybF9ubywgZnJhbWVfaWQsIHNlY3Rpb24pKSwK
KwkJICAgICAgIGNmZyk7CisKKwkvKiBVbnBhY2tlZCBieXRlcyAqLworCisJLyogVGhlcmUgYXJl
IDQgZnJhbWUgZ2VuZXJhdG9ycyBhbmQgZWFjaCBmZyBoYXMgNCBzZWN0aW9ucworCSAqIFRoZXJl
IGFyZSAyIHJlZ2lzdGVycyBmb3IgdW5wYWNrZWQgYnl0ZXMgKCMgYnl0ZXMgZWFjaAorCSAqIHNl
Y3Rpb24gb2NjdXBpZXMgaW4gbWVtb3J5KQorCSAqIFJFR19VTlBBQ0tFRF9CWVRFUzA6IFsxNTow
XS1CWVRFUzAsIFszMToxNl0tQllURVMxCisJICogUkVHX1VOUEFDS0VEX0JZVEVTMTogWzE1OjBd
LUJZVEVTMiwgWzMxOjE2XS1CWVRFUzMKIAkgKi8KLQlyZWdfYWRyID0gTUlQSV9UWG1fSFNfRkdu
X1NFQ1RfVU5QQUNLRURfQllURVMwKGN0cmxfbm8sIGZyYW1lX2lkKQotCSAgICArIChzZWN0aW9u
IC8gMikgKiA0OworCXJlZ19hZHIgPQorCSAgICBNSVBJX1RYbV9IU19GR25fU0VDVF9VTlBBQ0tF
RF9CWVRFUzAoY3RybF9ubywKKwkJCQkJCSBmcmFtZV9pZCkgKyAoc2VjdGlvbiAvIDIpICogNDsK
IAlrbWJfd3JpdGVfYml0c19taXBpKGRldl9wLCByZWdfYWRyLCAoc2VjdGlvbiAlIDIpICogMTYs
IDE2LAogCQkJICAgIHVucGFja2VkX2J5dGVzKTsKKwlEUk1fREVCVUcoInVucGFja2VkX2J5dGVz
ID0gJWQsIHdvcmRjb3VudCA9ICVkXG4iLCB1bnBhY2tlZF9ieXRlcywKKwkJICBwaF9jZmctPndj
KTsKIAotCS8qIGxpbmUgY29uZmlnICovCisJLyogTGluZSBjb25maWcgKi8KIAlyZWdfYWRyID0g
TUlQSV9UWG1fSFNfRkduX1NFQ1RvX0xJTkVfQ0ZHKGN0cmxfbm8sIGZyYW1lX2lkLCBzZWN0aW9u
KTsKIAlrbWJfd3JpdGVfbWlwaShkZXZfcCwgcmVnX2FkciwgaGVpZ2h0X2xpbmVzKTsKIAlyZXR1
cm4gMDsKIH0KIAotc3RhdGljIHUzMiBtaXBpX3R4X2ZnX3NlY3Rpb25fY2ZnKHN0cnVjdCBrbWJf
ZHJtX3ByaXZhdGUgKmRldl9wLCB1OCBmcmFtZV9pZCwKLQkJCQkgIHU4IHNlY3Rpb24sCitzdGF0
aWMgdTMyIG1pcGlfdHhfZmdfc2VjdGlvbl9jZmcoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2
X3AsCisJCQkJICB1OCBmcmFtZV9pZCwgdTggc2VjdGlvbiwKIAkJCQkgIHN0cnVjdCBtaXBpX3R4
X2ZyYW1lX3NlY3Rpb25fY2ZnICpmcmFtZV9zY2ZnLAogCQkJCSAgdTMyICpiaXRzX3Blcl9wY2xr
LCB1MzIgKndjKQogewpAQCAtNTUzLDggKzU0MSw4IEBAIHN0YXRpYyB1MzIgbWlwaV90eF9mZ19z
ZWN0aW9uX2NmZyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTggZnJhbWVfaWQsCiAJ
CQkJICAgICAgICZkYXRhX3R5cGVfcGFyYW1ldGVycyk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJl
dDsKLQkvKgotCSAqIHBhY2tldCB3aWR0aCBoYXMgdG8gYmUgYSBtdWx0aXBsZSBvZiB0aGUgbWlu
aW11bSBwYWNrZXQgd2lkdGgKKworCS8qIFBhY2tldCB3aWR0aCBoYXMgdG8gYmUgYSBtdWx0aXBs
ZSBvZiB0aGUgbWluaW11bSBwYWNrZXQgd2lkdGgKIAkgKiAoaW4gcGl4ZWxzKSBzZXQgZm9yIGVh
Y2ggZGF0YSB0eXBlCiAJICovCiAJaWYgKGZyYW1lX3NjZmctPndpZHRoX3BpeGVscyAlCkBAIC01
NjQsMTAgKzU1Miw4IEBAIHN0YXRpYyB1MzIgbWlwaV90eF9mZ19zZWN0aW9uX2NmZyhzdHJ1Y3Qg
a21iX2RybV9wcml2YXRlICpkZXZfcCwgdTggZnJhbWVfaWQsCiAJKndjID0gY29tcHV0ZV93Yyhm
cmFtZV9zY2ZnLT53aWR0aF9waXhlbHMsCiAJCQkgZGF0YV90eXBlX3BhcmFtZXRlcnMuc2l6ZV9j
b25zdHJhaW50X3BpeGVscywKIAkJCSBkYXRhX3R5cGVfcGFyYW1ldGVycy5zaXplX2NvbnN0cmFp
bnRfYnl0ZXMpOwotCi0JdW5wYWNrZWRfYnl0ZXMgPQotCSAgICBjb21wdXRlX3VucGFja2VkX2J5
dGVzKCp3YywgZGF0YV90eXBlX3BhcmFtZXRlcnMuYml0c19wZXJfcGNsayk7Ci0KKwl1bnBhY2tl
ZF9ieXRlcyA9IGNvbXB1dGVfdW5wYWNrZWRfYnl0ZXMoKndjLAorCQkJCQlkYXRhX3R5cGVfcGFy
YW1ldGVycy5iaXRzX3Blcl9wY2xrKTsKIAlwaF9jZmcud2MgPSAqd2M7CiAJcGhfY2ZnLmRhdGFf
bW9kZSA9IGZyYW1lX3NjZmctPmRhdGFfbW9kZTsKIAlwaF9jZmcuZGF0YV90eXBlID0gZnJhbWVf
c2NmZy0+ZGF0YV90eXBlOwpAQCAtNTc4LDg4ICs1NjQsOTQgQEAgc3RhdGljIHUzMiBtaXBpX3R4
X2ZnX3NlY3Rpb25fY2ZnKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLCB1OCBmcmFtZV9p
ZCwKIAkJCQkgICAgZnJhbWVfc2NmZy0+aGVpZ2h0X2xpbmVzLAogCQkJCSAgICB1bnBhY2tlZF9i
eXRlcywgJnBoX2NmZyk7CiAKLQkvKmNhbGxlciBuZWVkcyBiaXRzX3Blcl9jbGsgZm9yIGFkZGl0
aW9uYWwgY2FsdWNsYXRpb25zICovCisJLyogQ2FsbGVyIG5lZWRzIGJpdHNfcGVyX2NsayBmb3Ig
YWRkaXRpb25hbCBjYWx1Y2xhdGlvbnMgKi8KIAkqYml0c19wZXJfcGNsayA9IGRhdGFfdHlwZV9w
YXJhbWV0ZXJzLmJpdHNfcGVyX3BjbGs7CisKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQg
bWlwaV90eF9mZ19jZmdfcmVncyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwKLQkJCQl1
OCBmcmFtZV9nZW4sCitzdGF0aWMgdm9pZCBtaXBpX3R4X2ZnX2NmZ19yZWdzKHN0cnVjdCBrbWJf
ZHJtX3ByaXZhdGUgKmRldl9wLCB1OCBmcmFtZV9nZW4sCiAJCQkJc3RydWN0IG1pcGlfdHhfZnJh
bWVfdGltaW5nX2NmZyAqZmdfY2ZnKQogewogCXUzMiBzeXNjbGs7Ci0JLypmbG9hdCBwcGxfbGxw
X3JhdGlvOyAqLwogCXUzMiBwcGxfbGxwX3JhdGlvOwogCXUzMiBjdHJsX25vID0gTUlQSV9DVFJM
NiwgcmVnX2FkciwgdmFsLCBvZmZzZXQ7CiAKLQkvKkdldCBzeXN0ZW0gY2xvY2sgZm9yIGJsYW5r
aW5nIHBlcmlvZCBjbmZpZ3VyYXRpb25zICovCi0JLypUT0RPIG5lZWQgdG8gZ2V0IHN5c3RlbSBj
bG9jayBmcm9tIGNsb2NrIGRyaXZlciAqLwotCS8qIDUwMCBNaHogc3lzdGVtIGNsb2NrIG1pbnVz
IDUwIC0gdG8gYWNjb3VudCBmb3IgdGhlIGRpZmZlcmVuY2UgaW4KLQkgKiBtaXBpIGNsb2NrIHNw
ZWVkIGluIFJUTCB0ZXN0cworI2lmZGVmIEdFVF9TWVNfQ0xLCisJLyogR2V0IHN5c3RlbSBjbG9j
ayBmb3IgYmxhbmtpbmcgcGVyaW9kIGNuZmlndXJhdGlvbnMgKi8KKwlzYyA9IGdldF9jbG9ja19m
cmVxdWVuY3koQ1BSX0NMS19TWVNURU0sICZzeXNjbGspOworCWlmIChzYykKKwkJcmV0dXJuIHNj
OworCisJLyogQ29udmVydCB0byBNSFogKi8KKwlzeXNjbGsgLz0gMTAwMDsKKyNlbHNlCisJLyog
NTAwIE1oeiBzeXN0ZW0gY2xvY2sgbWludXMgNTAgdG8gYWNjb3VudCBmb3IgdGhlIGRpZmZlcmVu
Y2UgaW4KKwkgKiBNSVBJIGNsb2NrIHNwZWVkIGluIFJUTCB0ZXN0cwogCSAqLwogCXN5c2NsayA9
IEtNQl9TWVNfQ0xLX01IWiAtIDUwOwotLy8Jc3lzY2xrID0gS01CX1NZU19DTEtfTUhaOworI2Vu
ZGlmCiAKLQkvKnBwbC1waXhlbCBwYWNraW5nIGxheWVyLCBsbHAtbG93IGxldmVsIHByb3RvY29s
Ci0JICogZnJhbWUgZ2VuYXJ0b3IgdGltaW5nIHBhcmFtZXRlcnMgYXJlIGNsb2NrZWQgb24gdGhl
IHN5c3RlbSBjbG9jaworCS8qIFBQTC1QaXhlbCBQYWNraW5nIExheWVyLCBMTFAtTG93IExldmVs
IFByb3RvY29sCisJICogRnJhbWUgZ2VuYXJ0b3IgdGltaW5nIHBhcmFtZXRlcnMgYXJlIGNsb2Nr
ZWQgb24gdGhlIHN5c3RlbSBjbG9jaywKIAkgKiB3aGVyZWFzIGFzIHRoZSBlcXVpdmFsZW50IHBh
cmFtZXRlcnMgaW4gdGhlIExMUCBibG9ja3MgYXJlIGNsb2NrZWQKIAkgKiBvbiBMTFAgVHggY2xv
Y2sgZnJvbSB0aGUgRC1QSFkgLSBCWVRFIGNsb2NrCiAJICovCiAKLQkvKm11bHRpcGx5IGJ5IDEw
MDAgdG8ga2VlcCB0aGUgcHJlY2lzaW9uICovCisJLyogTXVsdGlwbHkgYnkgMTAwMCB0byBtYWlu
dGFpbiBwcmVjaXNpb24gKi8KIAlwcGxfbGxwX3JhdGlvID0gKChmZ19jZmctPmJwcCAvIDgpICog
c3lzY2xrICogMTAwMCkgLwogCSAgICAoKGZnX2NmZy0+bGFuZV9yYXRlX21icHMgLyA4KSAqIGZn
X2NmZy0+YWN0aXZlX2xhbmVzKTsKIAotCURSTV9JTkZPKCIlcyA6ICVkIGJwcD0lZCBzeXNjbGs9
JWQgbGFuZS1yYXRlPSVkIGFjdGl2LWxhbmVzPSVkXG4iLAotCQkJX19mdW5jX18sIF9fTElORV9f
LCBmZ19jZmctPmJwcCwgc3lzY2xrLAotCQkJZmdfY2ZnLT5sYW5lX3JhdGVfbWJwcywgZmdfY2Zn
LT5hY3RpdmVfbGFuZXMpOworCURSTV9JTkZPKCJwcGxfbGxwX3JhdGlvPSVkXG4iLCBwcGxfbGxw
X3JhdGlvKTsKKwlEUk1fSU5GTygiYnBwPSVkIHN5c2Nsaz0lZCBsYW5lLXJhdGU9JWQgYWN0aXYt
bGFuZXM9JWRcbiIsCisJCSBmZ19jZmctPmJwcCwgc3lzY2xrLCBmZ19jZmctPmxhbmVfcmF0ZV9t
YnBzLAorCQkgZmdfY2ZnLT5hY3RpdmVfbGFuZXMpOwogCi0JRFJNX0lORk8oIiVzIDogJWQgcHBs
X2xscF9yYXRpbz0lZFxuIiwgX19mdW5jX18sIF9fTElORV9fLAotCQkJcHBsX2xscF9yYXRpbyk7
Ci0JLypmcmFtZSBnZW5lcmF0b3IgbnVtYmVyIG9mIGxpbmVzKi8KKwkvKiBGcmFtZSBnZW5lcmF0
b3IgbnVtYmVyIG9mIGxpbmVzICovCiAJcmVnX2FkciA9IE1JUElfVFhtX0hTX0ZHbl9OVU1fTElO
RVMoY3RybF9ubywgZnJhbWVfZ2VuKTsKIAlrbWJfd3JpdGVfbWlwaShkZXZfcCwgcmVnX2Fkciwg
ZmdfY2ZnLT52X2FjdGl2ZSk7CiAKLQkvKnZzeW5jIHdpZHRoICovCi0JLyoKLQkgKnRoZXJlIGFy
ZSAyIHJlZ2lzdGVycyBmb3IgdnN5bmMgd2lkdGggLVZTQSBpbiBsaW5lcyBmb3IgY2hhbm5lbHMg
MC0zCi0JICpSRUdfVlNZTkNfV0lEVEgwOiBbMTU6MF0tVlNBIGZvciBjaGFubmVsMCwgWzMxOjE2
XS1WU0EgZm9yIGNoYW5uZWwxCi0JICpSRUdfVlNZTkNfV0lEVEgxOiBbMTU6MF0tVlNBIGZvciBj
aGFubmVsMiwgWzMxOjE2XS1WU0EgZm9yIGNoYW5uZWwzCisJLyogdnN5bmMgd2lkdGgKKwkgKiBU
aGVyZSBhcmUgMiByZWdpc3RlcnMgZm9yIHZzeW5jIHdpZHRoIChWU0EgaW4gbGluZXMgZm9yCisJ
ICogY2hhbm5lbHMgMC0zKQorCSAqIFJFR19WU1lOQ19XSURUSDA6IFsxNTowXS1WU0EgZm9yIGNo
YW5uZWwwLCBbMzE6MTZdLVZTQSBmb3IgY2hhbm5lbDEKKwkgKiBSRUdfVlNZTkNfV0lEVEgxOiBb
MTU6MF0tVlNBIGZvciBjaGFubmVsMiwgWzMxOjE2XS1WU0EgZm9yIGNoYW5uZWwzCiAJICovCiAJ
b2Zmc2V0ID0gKGZyYW1lX2dlbiAlIDIpICogMTY7CiAJcmVnX2FkciA9IE1JUElfVFhtX0hTX1ZT
WU5DX1dJRFRIbihjdHJsX25vLCBmcmFtZV9nZW4gLyAyKTsKIAlrbWJfd3JpdGVfYml0c19taXBp
KGRldl9wLCByZWdfYWRyLCBvZmZzZXQsIDE2LCBmZ19jZmctPnZzeW5jX3dpZHRoKTsKIAotCS8q
diBiYWNrcG9yY2ggLSBzYW1lIHJlZ2lzdGVyIGNvbmZpZyBsaWtlIHZzeW5jIHdpZHRoICovCisJ
LyogdmVydGljYWwgYmFja3BvcmNoICh2YnApICovCiAJcmVnX2FkciA9IE1JUElfVFhtX0hTX1Zf
QkFDS1BPUkNIRVNuKGN0cmxfbm8sIGZyYW1lX2dlbiAvIDIpOwogCWttYl93cml0ZV9iaXRzX21p
cGkoZGV2X3AsIHJlZ19hZHIsIG9mZnNldCwgMTYsIGZnX2NmZy0+dl9iYWNrcG9yY2gpOwogCi0J
Lyp2IGZyb250cG9yY2ggLSBzYW1lIHJlZ2lzdGVyIGNvbmZpZyBsaWtlIHZzeW5jIHdpZHRoICov
CisJLyogdmVydGljYWwgZnJvbnRwb3JjaCAodmZwKSAqLwogCXJlZ19hZHIgPSBNSVBJX1RYbV9I
U19WX0ZST05UUE9SQ0hFU24oY3RybF9ubywgZnJhbWVfZ2VuIC8gMik7CiAJa21iX3dyaXRlX2Jp
dHNfbWlwaShkZXZfcCwgcmVnX2Fkciwgb2Zmc2V0LCAxNiwgZmdfY2ZnLT52X2Zyb250cG9yY2gp
OwogCi0JLyp2IGFjdGl2ZSAtIHNhbWUgcmVnaXN0ZXIgY29uZmlnIGxpa2UgdnN5bmMgd2lkdGgg
Ki8KKwkvKiB2ZXJ0aWNhbCBhY3RpdmUgKHZhY3RpdmUpICovCiAJcmVnX2FkciA9IE1JUElfVFht
X0hTX1ZfQUNUSVZFbihjdHJsX25vLCBmcmFtZV9nZW4gLyAyKTsKIAlrbWJfd3JpdGVfYml0c19t
aXBpKGRldl9wLCByZWdfYWRyLCBvZmZzZXQsIDE2LCBmZ19jZmctPnZfYWN0aXZlKTsKIAotCS8q
aHN5YyB3aWR0aCAqLworCS8qIGhzeW5jIHdpZHRoICovCiAJcmVnX2FkciA9IE1JUElfVFhtX0hT
X0hTWU5DX1dJRFRIbihjdHJsX25vLCBmcmFtZV9nZW4pOwogCWttYl93cml0ZV9taXBpKGRldl9w
LCByZWdfYWRyLAogCQkgICAgICAgKGZnX2NmZy0+aHN5bmNfd2lkdGggKiBwcGxfbGxwX3JhdGlv
KSAvIDEwMDApOwogCi0JLypoIGJhY2twb3JjaCAqLworCS8qIGhvcml6b250YWwgYmFja3BvcmNo
IChoYnApICovCiAJcmVnX2FkciA9IE1JUElfVFhtX0hTX0hfQkFDS1BPUkNIbihjdHJsX25vLCBm
cmFtZV9nZW4pOwogCWttYl93cml0ZV9taXBpKGRldl9wLCByZWdfYWRyLAogCQkgICAgICAgKGZn
X2NmZy0+aF9iYWNrcG9yY2ggKiBwcGxfbGxwX3JhdGlvKSAvIDEwMDApOwogCi0JLypoIGZyb250
cG9yY2ggKi8KKwkvKiBob3Jpem9udGFsIGZyb250cG9yY2ggKGhmcCkgKi8KIAlyZWdfYWRyID0g
TUlQSV9UWG1fSFNfSF9GUk9OVFBPUkNIbihjdHJsX25vLCBmcmFtZV9nZW4pOwogCWttYl93cml0
ZV9taXBpKGRldl9wLCByZWdfYWRyLAogCQkgICAgICAgKGZnX2NmZy0+aF9mcm9udHBvcmNoICog
cHBsX2xscF9yYXRpbykgLyAxMDAwKTsKIAotCS8qaCBhY3RpdmUgKi8KKwkvKiBob3Jpem9udGFs
IGFjdGl2ZSAoaGEpICovCiAJcmVnX2FkciA9IE1JUElfVFhtX0hTX0hfQUNUSVZFbihjdHJsX25v
LCBmcmFtZV9nZW4pOwotCS8qY29udmVydCBoX2FjdGl2ZSB3aGljaCBpcyB3YyBpbiBieXRlcyB0
byBjeWNsZXMgKi8KKworCS8qIGNvbnZlcnQgaF9hY3RpdmUgd2hpY2ggaXMgd2MgaW4gYnl0ZXMg
dG8gY3ljbGVzICovCiAJdmFsID0gKGZnX2NmZy0+aF9hY3RpdmUgKiBzeXNjbGsgKiAxMDAwKSAv
CiAJICAgICgoZmdfY2ZnLT5sYW5lX3JhdGVfbWJwcyAvIDgpICogZmdfY2ZnLT5hY3RpdmVfbGFu
ZXMpOwogCXZhbCAvPSAxMDAwOwpAQCAtNjg2LDggKzY3OCw4IEBAIHN0YXRpYyB2b2lkIG1pcGlf
dHhfZmdfY2ZnKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLCB1OCBmcmFtZV9nZW4sCiAJ
dTMyIGksIGZnX251bV9saW5lcyA9IDA7CiAJc3RydWN0IG1pcGlfdHhfZnJhbWVfdGltaW5nX2Nm
ZyBmZ190X2NmZzsKIAotCS8qY2FsY3VsYXRlIHRoZSB0b3RhbCBmcmFtZSBnZW5lcmF0b3IgbnVt
YmVyIG9mIGxpbmVzIGJhc2VkIG9uIGl0J3MKLQkgKiBhY3RpdmUgc2VjdGlvbnMKKwkvKiBDYWxj
dWxhdGUgdGhlIHRvdGFsIGZyYW1lIGdlbmVyYXRvciBudW1iZXIgb2YKKwkgKiBsaW5lcyBiYXNl
ZCBvbiBpdCdzIGFjdGl2ZSBzZWN0aW9ucwogCSAqLwogCWZvciAoaSA9IDA7IGkgPCBNSVBJX1RY
X0ZSQU1FX0dFTl9TRUNUSU9OUzsgaSsrKSB7CiAJCWlmIChmZ19jZmctPnNlY3Rpb25zW2ldICE9
IE5VTEwpCkBAIC03MDYsNyArNjk4LDcgQEAgc3RhdGljIHZvaWQgbWlwaV90eF9mZ19jZmcoc3Ry
dWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIHU4IGZyYW1lX2dlbiwKIAlmZ190X2NmZy52X2Fj
dGl2ZSA9IGZnX251bV9saW5lczsKIAlmZ190X2NmZy5hY3RpdmVfbGFuZXMgPSBhY3RpdmVfbGFu
ZXM7CiAKLQkvKmFwcGx5IGZyYW1lIGdlbmVyYXRvciB0aW1pbmcgc2V0dGluZyAqLworCS8qIEFw
cGx5IGZyYW1lIGdlbmVyYXRvciB0aW1pbmcgc2V0dGluZyAqLwogCW1pcGlfdHhfZmdfY2ZnX3Jl
Z3MoZGV2X3AsIGZyYW1lX2dlbiwgJmZnX3RfY2ZnKTsKIH0KIApAQCAtNzE2LDcgKzcwOCw3IEBA
IHN0YXRpYyB2b2lkIG1pcGlfdHhfbXVsdGljaGFubmVsX2ZpZm9fY2ZnKHN0cnVjdCBrbWJfZHJt
X3ByaXZhdGUgKmRldl9wLAogCXUzMiBmaWZvX3NpemUsIGZpZm9fcnRocmVzaG9sZDsKIAl1MzIg
Y3RybF9ubyA9IE1JUElfQ1RSTDY7CiAKLQkvKmNsZWFyIGFsbCBtYyBmaWZvIGNoYW5uZWwgc2l6
ZXMgYW5kIHRocmVzaG9sZHMgKi8KKwkvKiBDbGVhciBhbGwgbWMgZmlmbyBjaGFubmVsIHNpemVz
IGFuZCB0aHJlc2hvbGRzICovCiAJa21iX3dyaXRlX21pcGkoZGV2X3AsIE1JUElfVFhfSFNfTUNf
RklGT19DVFJMX0VOLCAwKTsKIAlrbWJfd3JpdGVfbWlwaShkZXZfcCwgTUlQSV9UWF9IU19NQ19G
SUZPX0NIQU5fQUxMT0MwLCAwKTsKIAlrbWJfd3JpdGVfbWlwaShkZXZfcCwgTUlQSV9UWF9IU19N
Q19GSUZPX0NIQU5fQUxMT0MxLCAwKTsKQEAgLTcyNiwxOCArNzE4LDE4IEBAIHN0YXRpYyB2b2lk
IG1pcGlfdHhfbXVsdGljaGFubmVsX2ZpZm9fY2ZnKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRl
dl9wLAogCWZpZm9fc2l6ZSA9ICgoYWN0aXZlX2xhbmVzID4gTUlQSV9EX0xBTkVTX1BFUl9EUEhZ
KSA/CiAJCSAgICAgTUlQSV9DVFJMXzRMQU5FX01BWF9NQ19GSUZPX0xPQyA6CiAJCSAgICAgTUlQ
SV9DVFJMXzJMQU5FX01BWF9NQ19GSUZPX0xPQykgLSAxOwotCS8qTUMgZmlmbyBzaXplIGZvciB2
aXJ0dWFsIGNoYW5uZWxzIDAtMyAqLwotCS8qCi0JICpSRUdfTUNfRklGT19DSEFOX0FMTE9DMDog
Wzg6MF0tY2hhbm5lbDAsIFsyNDoxNl0tY2hhbm5lbDEKLQkgKlJFR19NQ19GSUZPX0NIQU5fQUxM
T0MxOiBbODowXS0yLCBbMjQ6MTZdLWNoYW5uZWwzCisKKwkvKiBNQyBmaWZvIHNpemUgZm9yIHZp
cnR1YWwgY2hhbm5lbHMgMC0zCisJICogUkVHX01DX0ZJRk9fQ0hBTl9BTExPQzA6IFs4OjBdLWNo
YW5uZWwwLCBbMjQ6MTZdLWNoYW5uZWwxCisJICogUkVHX01DX0ZJRk9fQ0hBTl9BTExPQzE6IFs4
OjBdLTIsIFsyNDoxNl0tY2hhbm5lbDMKIAkgKi8KIAlTRVRfTUNfRklGT19DSEFOX0FMTE9DKGRl
dl9wLCBjdHJsX25vLCB2Y2hhbm5lbF9pZCwgZmlmb19zaXplKTsKIAotCS8qc2V0IHRocmVzaG9s
ZCB0byBoYWxmIHRoZSBmaWZvIHNpemUsIGFjdHVhbCBzaXplPXNpemUqMTYgKi8KKwkvKiBTZXQg
dGhyZXNob2xkIHRvIGhhbGYgdGhlIGZpZm8gc2l6ZSwgYWN0dWFsIHNpemU9c2l6ZSoxNiAqLwog
CWZpZm9fcnRocmVzaG9sZCA9ICgoZmlmb19zaXplKSAqIDgpICYgQklUX01BU0tfMTY7CiAJU0VU
X01DX0ZJRk9fUlRIUkVTSE9MRChkZXZfcCwgY3RybF9ubywgdmNoYW5uZWxfaWQsIGZpZm9fcnRo
cmVzaG9sZCk7CiAKLQkvKmVuYWJsZSB0aGUgTUMgRklGTyBjaGFubmVsIGNvcnJlc3BvbmRpbmcg
dG8gdGhlIFZpcnR1YWwgQ2hhbm5lbCAqLworCS8qIEVuYWJsZSB0aGUgTUMgRklGTyBjaGFubmVs
IGNvcnJlc3BvbmRpbmcgdG8gdGhlIFZpcnR1YWwgQ2hhbm5lbCAqLwogCWttYl9zZXRfYml0X21p
cGkoZGV2X3AsIE1JUElfVFhtX0hTX01DX0ZJRk9fQ1RSTF9FTihjdHJsX25vKSwKIAkJCSB2Y2hh
bm5lbF9pZCk7CiB9CkBAIC03NDgsNyArNzQwLDcgQEAgc3RhdGljIHZvaWQgbWlwaV90eF9jdHJs
X2NmZyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTggZmdfaWQsCiAJdTMyIHN5bmNf
Y2ZnID0gMCwgY3RybCA9IDAsIGZnX2VuOwogCXUzMiBjdHJsX25vID0gTUlQSV9DVFJMNjsKIAot
CS8qTUlQSV9UWF9IU19TWU5DX0NGRyAqLworCS8qIE1JUElfVFhfSFNfU1lOQ19DRkcgKi8KIAlp
ZiAoY3RybF9jZmctPnR4X2N0cmxfY2ZnLmxpbmVfc3luY19wa3RfZW4pCiAJCXN5bmNfY2ZnIHw9
IExJTkVfU1lOQ19QS1RfRU5BQkxFOwogCWlmIChjdHJsX2NmZy0+dHhfY3RybF9jZmcuZnJhbWVf
Y291bnRlcl9hY3RpdmUpCkBAIC03NjksMjIgKzc2MSwyOSBAQCBzdGF0aWMgdm9pZCBtaXBpX3R4
X2N0cmxfY2ZnKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLCB1OCBmZ19pZCwKIAkJc3lu
Y19jZmcgfD0gRFNJX0xQTV9GSVJTVF9WU0FfTElORTsKIAlpZiAoY3RybF9jZmctPnR4X2N0cmxf
Y2ZnLnR4X2RzaV9jZmctPmxwbV9sYXN0X3ZmcF9saW5lKQogCQlzeW5jX2NmZyB8PSBEU0lfTFBN
X0xBU1RfVkZQX0xJTkU7Ci0JLyogZW5hYmxlIGZyYW1lIGdlbmVyYXRvciAqLworCisJLyogRW5h
YmxlIGZyYW1lIGdlbmVyYXRvciAqLwogCWZnX2VuID0gMSA8PCBmZ19pZDsKIAlzeW5jX2NmZyB8
PSBGUkFNRV9HRU5fRU4oZmdfZW4pOworCiAJaWYgKGN0cmxfY2ZnLT50eF9jdHJsX2NmZy50eF9h
bHdheXNfdXNlX2hhY3QpCiAJCXN5bmNfY2ZnIHw9IEFMV0FZU19VU0VfSEFDVChmZ19lbik7CiAJ
aWYgKGN0cmxfY2ZnLT50eF9jdHJsX2NmZy50eF9oYWN0X3dhaXRfc3RvcCkKIAkJc3luY19jZmcg
fD0gSEFDVF9XQUlUX1NUT1AoZmdfZW4pOwogCi0JLyogTUlQSV9UWF9IU19DVFJMKi8KLQljdHJs
ID0gSFNfQ1RSTF9FTiB8IFRYX1NPVVJDRTsgLyogdHlwZTpEU0ksc291cmNlOkxDRCAqLworCURS
TV9ERUJVRygic3luY19jZmc9JWQgZmdfZW49JWRcbiIsIHN5bmNfY2ZnLCBmZ19lbik7CisKKwkv
KiBNSVBJX1RYX0hTX0NUUkwgKi8KKworCS8qIHR5cGU6RFNJLCBzb3VyY2U6TENEICovCisJY3Ry
bCA9IEhTX0NUUkxfRU4gfCBUWF9TT1VSQ0U7CisJY3RybCB8PSBMQ0RfVkMoZmdfaWQpOworCWN0
cmwgfD0gQUNUSVZFX0xBTkVTKGN0cmxfY2ZnLT5hY3RpdmVfbGFuZXMgLSAxKTsKIAlpZiAoY3Ry
bF9jZmctPnR4X2N0cmxfY2ZnLnR4X2RzaV9jZmctPmVvdHBfZW4pCiAJCWN0cmwgfD0gRFNJX0VP
VFBfRU47CiAJaWYgKGN0cmxfY2ZnLT50eF9jdHJsX2NmZy50eF9kc2lfY2ZnLT5oZnBfYmxhbmtf
ZW4pCiAJCWN0cmwgfD0gRFNJX0NNRF9IRlBfRU47Ci0JY3RybCB8PSBMQ0RfVkMoZmdfaWQpOwot
CWN0cmwgfD0gQUNUSVZFX0xBTkVTKGN0cmxfY2ZnLT5hY3RpdmVfbGFuZXMgLSAxKTsKKwogCS8q
NjcgbnMgc3RvcCB0aW1lICovCiAJY3RybCB8PSBIU0VYSVRfQ05UKDB4NDMpOwogCkBAIC03OTgs
MTQgKzc5NywxMCBAQCBzdGF0aWMgdm9pZCBtaXBpX3R4X2hzX3RwX2dlbihzdHJ1Y3Qga21iX2Ry
bV9wcml2YXRlICpkZXZfcCwgaW50IHZjLAogCQkJICAgICAgdTMyIGNvbG9yMSwgdTMyIGN0cmxf
bm8pCiB7CiAJaW50IHZhbCA9IDA7CisKIAkvKiBTZWxlY3QgdGVzdCBwYXR0ZXJuIG1vZGUgb24g
dGhlIHZpcnR1YWwgY2hhbm5lbCAqLwogCXZhbCA9IFRQX1NFTF9WQ20odmMsIHRwX3NlbCk7CiAK
LQlpZiAodHBfc2VsID09IE1JUElfVFhfSFNfVFBfVl9TVFJJUEVTIHx8Ci0JICAgIHRwX3NlbCA9
PSBNSVBJX1RYX0hTX1RQX0hfU1RSSVBFUykgewotCQl2YWwgfD0gVFBfU1RSSVBFX1dJRFRIKHN0
cmlwZV93aWR0aCk7Ci0JfQotCiAJLyogQ29uZmlndXJlIHRlc3QgcGF0dGVybiBjb2xvcnMgKi8K
IAlrbWJfd3JpdGVfbWlwaShkZXZfcCwgTUlQSV9UWG1fSFNfVEVTVF9QQVRfQ09MT1IwKGN0cmxf
bm8pLCBjb2xvcjApOwogCWttYl93cml0ZV9taXBpKGRldl9wLCBNSVBJX1RYbV9IU19URVNUX1BB
VF9DT0xPUjEoY3RybF9ubyksIGNvbG9yMSk7CkBAIC04MTMsNiArODA4LDcgQEAgc3RhdGljIHZv
aWQgbWlwaV90eF9oc190cF9nZW4oc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIGludCB2
YywKIAkvKiBFbmFibGUgdGVzdCBwYXR0ZXJuIGdlbmVyYXRpb24gb24gdGhlIHZpcnR1YWwgY2hh
bm5lbCAqLwogCXZhbCB8PSBUUF9FTl9WQ20odmMpOwogCWttYl93cml0ZV9taXBpKGRldl9wLCBN
SVBJX1RYbV9IU19URVNUX1BBVF9DVFJMKGN0cmxfbm8pLCB2YWwpOworCiB9CiAjZW5kaWYKIApA
QCAtODI0LDMxICs4MjAsMzMgQEAgc3RhdGljIHUzMiBtaXBpX3R4X2luaXRfY250cmwoc3RydWN0
IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCiAJdTggZnJhbWVfaWQsIHNlY3Q7CiAJdTMyIGJpdHNf
cGVyX3BjbGsgPSAwOwogCXUzMiB3b3JkX2NvdW50ID0gMDsKLQotCS8qVGhpcyBpcyB0aGUgb3Jk
ZXIgaW4gd2hpY2ggbWlwaSB0eCBuZWVkcyB0byBiZSBpbml0aWFsaXplZAotCSAqIHNldCBmcmFt
ZSBzZWN0aW9uIHBhcmFtZXRlcnMKLQkgKiBzZXQgZnJhbWUgc3BlY2lmaWMgcGFyYW1ldGVycwot
CSAqIGNvbm5lY3QgbGNkIHRvIG1pcGkKLQkgKiBtdWx0aSBjaGFubmVsIGZpZm8gY2ZnCi0JICog
c2V0IG1pcGl0eGNjdHJsY2ZnCisJc3RydWN0IG1pcGlfdHhfZnJhbWVfY2ZnICpmcmFtZTsKKwor
CS8qIFRoaXMgaXMgdGhlIG9yZGVyIHRvIGluaXRpYWxpemUgTUlQSSBUWDoKKwkgKiAxLiBzZXQg
ZnJhbWUgc2VjdGlvbiBwYXJhbWV0ZXJzCisJICogMi4gc2V0IGZyYW1lIHNwZWNpZmljIHBhcmFt
ZXRlcnMKKwkgKiAzLiBjb25uZWN0IGxjZCB0byBtaXBpCisJICogNC4gbXVsdGkgY2hhbm5lbCBm
aWZvIGNmZworCSAqIDUuIHNldCBtaXBpdHhjY3RybGNmZwogCSAqLwogCiAJZm9yIChmcmFtZV9p
ZCA9IDA7IGZyYW1lX2lkIDwgNDsgZnJhbWVfaWQrKykgewotCQkvKiBmaW5kIHZhbGlkIGZyYW1l
LCBhc3N1bWUgb25seSBvbmUgdmFsaWQgZnJhbWUgKi8KLQkJaWYgKGN0cmxfY2ZnLT50eF9jdHJs
X2NmZy5mcmFtZXNbZnJhbWVfaWRdID09IE5VTEwpCisJCWZyYW1lID0gY3RybF9jZmctPnR4X2N0
cmxfY2ZnLmZyYW1lc1tmcmFtZV9pZF07CisKKwkJLyogRmluZCB2YWxpZCBmcmFtZSwgYXNzdW1l
IG9ubHkgb25lIHZhbGlkIGZyYW1lICovCisJCWlmIChmcmFtZSA9PSBOVUxMKQogCQkJY29udGlu
dWU7CiAKIAkJLyogRnJhbWUgU2VjdGlvbiBjb25maWd1cmF0aW9uICovCi0JCS8qVE9ETyAtIGFz
c3VtZSB0aGVyZSBpcyBvbmx5IG9uZSB2YWxpZCBzZWN0aW9uIGluIGEgZnJhbWUsIHNvCi0JCSAq
IGJpdHNfcGVyX3BjbGsgYW5kIHdvcmRfY291bnQgYXJlIG9ubHkgc2V0IG9uY2UKKwkJLyogVE9E
TyAtIGFzc3VtZSB0aGVyZSBpcyBvbmx5IG9uZSB2YWxpZCBzZWN0aW9uIGluIGEgZnJhbWUsCisJ
CSAqIHNvIGJpdHNfcGVyX3BjbGsgYW5kIHdvcmRfY291bnQgYXJlIG9ubHkgc2V0IG9uY2UKIAkJ
ICovCiAJCWZvciAoc2VjdCA9IDA7IHNlY3QgPCBNSVBJX0NUUkxfVklSVFVBTF9DSEFOTkVMUzsg
c2VjdCsrKSB7Ci0JCQlpZiAoY3RybF9jZmctPnR4X2N0cmxfY2ZnLmZyYW1lc1tmcmFtZV9pZF0t
PnNlY3Rpb25zW3NlY3RdCi0JCQkgICAgPT0gTlVMTCkKKwkJCWlmIChmcmFtZS0+c2VjdGlvbnNb
c2VjdF0gPT0gTlVMTCkKIAkJCQljb250aW51ZTsKIAogCQkJcmV0ID0gbWlwaV90eF9mZ19zZWN0
aW9uX2NmZyhkZXZfcCwgZnJhbWVfaWQsIHNlY3QsCi0JCQkJCQkgICAgIGN0cmxfY2ZnLT50eF9j
dHJsX2NmZy5mcmFtZXNbZnJhbWVfaWRdLT5zZWN0aW9uc1tzZWN0XSwKKwkJCQkJCSAgICAgZnJh
bWUtPnNlY3Rpb25zW3NlY3RdLAogCQkJCQkJICAgICAmYml0c19wZXJfcGNsaywKIAkJCQkJCSAg
ICAgJndvcmRfY291bnQpOwogCQkJaWYgKHJldCkKQEAgLTg1NiwzMCArODU0LDM5IEBAIHN0YXRp
YyB1MzIgbWlwaV90eF9pbml0X2NudHJsKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAog
CiAJCX0KIAotCQkvKiBzZXQgZnJhbWUgc3BlY2lmaWMgcGFyYW1ldGVycyAqLworCQkvKiBTZXQg
ZnJhbWUgc3BlY2lmaWMgcGFyYW1ldGVycyAqLwogCQltaXBpX3R4X2ZnX2NmZyhkZXZfcCwgZnJh
bWVfaWQsIGN0cmxfY2ZnLT5hY3RpdmVfbGFuZXMsCi0JCQkgICAgICAgYml0c19wZXJfcGNsaywK
LQkJCSAgICAgICB3b3JkX2NvdW50LCBjdHJsX2NmZy0+bGFuZV9yYXRlX21icHMsCi0JCQkgICAg
ICAgY3RybF9jZmctPnR4X2N0cmxfY2ZnLmZyYW1lc1tmcmFtZV9pZF0pOworCQkJICAgICAgIGJp
dHNfcGVyX3BjbGssIHdvcmRfY291bnQsCisJCQkgICAgICAgY3RybF9jZmctPmxhbmVfcmF0ZV9t
YnBzLCBmcmFtZSk7CiAKIAkJYWN0aXZlX3ZjaGFubmVscysrOwogCi0JCS8qc3RvcCBpdGVyYXRp
bmcgYXMgb25seSBvbmUgdmlydHVhbCBjaGFubmVsIHNoYWxsIGJlIHVzZWQgZm9yCi0JCSAqIExD
RCBjb25uZWN0aW9uCisJCS8qIFN0b3AgaXRlcmF0aW5nIGFzIG9ubHkgb25lIHZpcnR1YWwgY2hh
bm5lbAorCQkgKiBzaGFsbCBiZSB1c2VkIGZvciBMQ0QgY29ubmVjdGlvbgogCQkgKi8KIAkJYnJl
YWs7CiAJfQogCiAJaWYgKGFjdGl2ZV92Y2hhbm5lbHMgPT0gMCkKIAkJcmV0dXJuIC1FSU5WQUw7
Ci0JLypNdWx0aS1DaGFubmVsIEZJRk8gQ29uZmlndXJhdGlvbiAqLworCS8qIE11bHRpLUNoYW5u
ZWwgRklGTyBDb25maWd1cmF0aW9uICovCiAJbWlwaV90eF9tdWx0aWNoYW5uZWxfZmlmb19jZmco
ZGV2X3AsIGN0cmxfY2ZnLT5hY3RpdmVfbGFuZXMsIGZyYW1lX2lkKTsKIAotCS8qRnJhbWUgR2Vu
ZXJhdG9yIEVuYWJsZSAqLworCS8qIEZyYW1lIEdlbmVyYXRvciBFbmFibGUgKi8KIAltaXBpX3R4
X2N0cmxfY2ZnKGRldl9wLCBmcmFtZV9pZCwgY3RybF9jZmcpOworCisjaWZkZWYgTUlQSV9UWF9U
RVNUX1BBVFRFUk5fR0VORVJBVElPTgorCW1pcGlfdHhfaHNfdHBfZ2VuKGRldl9wLCAwLCBNSVBJ
X1RYX0hTX1RQX1ZfU1RSSVBFUywKKwkJCSAgMHg4LCAweGZmLCAweGZmMDAsIE1JUElfQ1RSTDYp
OworI2VuZGlmCisKKwlEUk1fREVCVUcoIklSUV9TVEFUVVMgPSAweCV4XG4iLAorCQkgIEdFVF9N
SVBJX1RYX0hTX0lSUV9TVEFUVVMoZGV2X3AsIE1JUElfQ1RSTDYpKTsKKwogCXJldHVybiByZXQ7
CiB9CiAKKyNpZmRlZiBEUEhZX1JFQURfVEVTVENPREUKIGludCBkcGh5X3JlYWRfdGVzdGNvZGUo
c3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIGludCBkcGh5X3NlbCwKIAkJICAgICAgIGlu
dCB0ZXN0X2NvZGUpCiB7CkBAIC04OTQsMTcgKzkwMSwxNyBAQCBpbnQgZHBoeV9yZWFkX3Rlc3Rj
b2RlKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLCBpbnQgZHBoeV9zZWwsCiAJcmVnX3dy
X2RhdGEgPSAwOwogCXJlZ19yZF9kYXRhID0gMDsKIAotCWlmICgoKGRwaHlfc2VsID4+IDAgJiAw
eDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA0ICYgMHgxKSA9PQotCQkJCQkgICAgMSkgfCAoKGRw
aHlfc2VsID4+IDggJiAweDEpID09IDEpKQorCWlmICgoKGRwaHlfc2VsID4+IDAgJiAweDEpID09
IDEpIHwgKChkcGh5X3NlbCA+PiA0ICYgMHgxKSA9PSAxKSB8CisJICAgICgoZHBoeV9zZWwgPj4g
OCAmIDB4MSkgPT0gMSkpCiAJCXJlZ193cl9kYXRhIHw9IGRhdGEgPDwgMDsKLQlpZiAoKChkcGh5
X3NlbCA+PiAxICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9zZWwgPj4gNSAmIDB4MSkgPT0KLQkJCQkJ
ICAgIDEpIHwgKChkcGh5X3NlbCA+PiA5ICYgMHgxKSA9PSAxKSkKKwlpZiAoKChkcGh5X3NlbCA+
PiAxICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9zZWwgPj4gNSAmIDB4MSkgPT0gMSkgfAorCSAgICAo
KGRwaHlfc2VsID4+IDkgJiAweDEpID09IDEpKQogCQlyZWdfd3JfZGF0YSB8PSBkYXRhIDw8IDg7
Ci0JaWYgKCgoZHBoeV9zZWwgPj4gMiAmIDB4MSkgPT0gMSkgfCAoKGRwaHlfc2VsID4+IDYgJiAw
eDEpID09Ci0JCQkJCSAgICAxKSB8ICgoZHBoeV9zZWwgPj4gMTAgJiAweDEpID09IDEpKQorCWlm
ICgoKGRwaHlfc2VsID4+IDIgJiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA2ICYgMHgxKSA9
PSAxKSB8CisJICAgICgoZHBoeV9zZWwgPj4gMTAgJiAweDEpID09IDEpKQogCQlyZWdfd3JfZGF0
YSB8PSBkYXRhIDw8IDE2OwotCWlmICgoKGRwaHlfc2VsID4+IDMgJiAweDEpID09IDEpIHwgKChk
cGh5X3NlbCA+PiA3ICYgMHgxKSA9PQotCQkJCQkgICAgMSkgfCAoKGRwaHlfc2VsID4+IDExICYg
MHgxKSA9PSAxKSkKKwlpZiAoKChkcGh5X3NlbCA+PiAzICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9z
ZWwgPj4gNyAmIDB4MSkgPT0gMSkgfAorCSAgICAoKGRwaHlfc2VsID4+IDExICYgMHgxKSA9PSAx
KSkKIAkJcmVnX3dyX2RhdGEgfD0gZGF0YSA8PCAyNDsKIAogCWlmICgoZHBoeV9zZWwgPj4gMCAm
IDB4ZikgPiAwKQpAQCAtOTI3LDE3ICs5MzQsMTggQEAgaW50IGRwaHlfcmVhZF90ZXN0Y29kZShz
dHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgaW50IGRwaHlfc2VsLAogCiAJZGF0YSA9IHRl
c3RfY29kZSA+PiA4ICYgMHhmOwogCXJlZ193cl9kYXRhID0gMDsKLQlpZiAoKChkcGh5X3NlbCA+
PiAwICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9zZWwgPj4gNCAmIDB4MSkgPT0KLQkJCQkJICAgIDEp
IHwgKChkcGh5X3NlbCA+PiA4ICYgMHgxKSA9PSAxKSkKKworCWlmICgoKGRwaHlfc2VsID4+IDAg
JiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA0ICYgMHgxKSA9PSAxKSB8CisJICAgICgoZHBo
eV9zZWwgPj4gOCAmIDB4MSkgPT0gMSkpCiAJCXJlZ193cl9kYXRhIHw9IGRhdGEgPDwgMDsKLQlp
ZiAoKChkcGh5X3NlbCA+PiAxICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9zZWwgPj4gNSAmIDB4MSkg
PT0KLQkJCQkJICAgIDEpIHwgKChkcGh5X3NlbCA+PiA5ICYgMHgxKSA9PSAxKSkKKwlpZiAoKChk
cGh5X3NlbCA+PiAxICYgMHgxKSA9PSAxKSB8ICgoZHBoeV9zZWwgPj4gNSAmIDB4MSkgPT0gMSkg
fAorCSAgICAoKGRwaHlfc2VsID4+IDkgJiAweDEpID09IDEpKQogCQlyZWdfd3JfZGF0YSB8PSBk
YXRhIDw8IDg7Ci0JaWYgKCgoZHBoeV9zZWwgPj4gMiAmIDB4MSkgPT0gMSkgfCAoKGRwaHlfc2Vs
ID4+IDYgJiAweDEpID09Ci0JCQkJCSAgICAxKSB8ICgoZHBoeV9zZWwgPj4gMTAgJiAweDEpID09
IDEpKQorCWlmICgoKGRwaHlfc2VsID4+IDIgJiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA2
ICYgMHgxKSA9PSAxKSB8CisJICAgICgoZHBoeV9zZWwgPj4gMTAgJiAweDEpID09IDEpKQogCQly
ZWdfd3JfZGF0YSB8PSBkYXRhIDw8IDE2OwotCWlmICgoKGRwaHlfc2VsID4+IDMgJiAweDEpID09
IDEpIHwgKChkcGh5X3NlbCA+PiA3ICYgMHgxKSA9PQotCQkJCQkgICAgMSkgfCAoKGRwaHlfc2Vs
ID4+IDExICYgMHgxKSA9PSAxKSkKKwlpZiAoKChkcGh5X3NlbCA+PiAzICYgMHgxKSA9PSAxKSB8
ICgoZHBoeV9zZWwgPj4gNyAmIDB4MSkgPT0gMSkgfAorCSAgICAoKGRwaHlfc2VsID4+IDExICYg
MHgxKSA9PSAxKSkKIAkJcmVnX3dyX2RhdGEgfD0gZGF0YSA8PCAyNDsKIAogCWlmICgoZHBoeV9z
ZWwgPj4gMCAmIDB4ZikgPiAwKQpAQCAtOTUzLDE3ICs5NjEsMTggQEAgaW50IGRwaHlfcmVhZF90
ZXN0Y29kZShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgaW50IGRwaHlfc2VsLAogCiAJ
ZGF0YSA9IHRlc3RfY29kZSAmIDB4ZmY7CiAJcmVnX3dyX2RhdGEgPSAwOwotCWlmICgoKGRwaHlf
c2VsID4+IDAgJiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA0ICYgMHgxKSA9PQotCQkJCQkg
ICAgMSkgfCAoKGRwaHlfc2VsID4+IDggJiAweDEpID09IDEpKQorCisJaWYgKCgoZHBoeV9zZWwg
Pj4gMCAmIDB4MSkgPT0gMSkgfCAoKGRwaHlfc2VsID4+IDQgJiAweDEpID09IDEpIHwKKwkgICAg
KChkcGh5X3NlbCA+PiA4ICYgMHgxKSA9PSAxKSkKIAkJcmVnX3dyX2RhdGEgfD0gZGF0YSA8PCAw
OwotCWlmICgoKGRwaHlfc2VsID4+IDEgJiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA1ICYg
MHgxKSA9PQotCQkJCQkgICAgMSkgfCAoKGRwaHlfc2VsID4+IDkgJiAweDEpID09IDEpKQorCWlm
ICgoKGRwaHlfc2VsID4+IDEgJiAweDEpID09IDEpIHwgKChkcGh5X3NlbCA+PiA1ICYgMHgxKSA9
PSAxKSB8CisJICAgICgoZHBoeV9zZWwgPj4gOSAmIDB4MSkgPT0gMSkpCiAJCXJlZ193cl9kYXRh
IHw9IGRhdGEgPDwgODsKLQlpZiAoKChkcGh5X3NlbCA+PiAyICYgMHgxKSA9PSAxKSB8ICgoZHBo
eV9zZWwgPj4gNiAmIDB4MSkgPT0KLQkJCQkJICAgIDEpIHwgKChkcGh5X3NlbCA+PiAxMCAmIDB4
MSkgPT0gMSkpCisJaWYgKCgoZHBoeV9zZWwgPj4gMiAmIDB4MSkgPT0gMSkgfCAoKGRwaHlfc2Vs
ID4+IDYgJiAweDEpID09IDEpIHwKKwkgICAgKChkcGh5X3NlbCA+PiAxMCAmIDB4MSkgPT0gMSkp
CiAJCXJlZ193cl9kYXRhIHw9IGRhdGEgPDwgMTY7Ci0JaWYgKCgoZHBoeV9zZWwgPj4gMyAmIDB4
MSkgPT0gMSkgfCAoKGRwaHlfc2VsID4+IDcgJiAweDEpID09Ci0JCQkJCSAgICAxKSB8ICgoZHBo
eV9zZWwgPj4gMTEgJiAweDEpID09IDEpKQorCWlmICgoKGRwaHlfc2VsID4+IDMgJiAweDEpID09
IDEpIHwgKChkcGh5X3NlbCA+PiA3ICYgMHgxKSA9PSAxKSB8CisJICAgICgoZHBoeV9zZWwgPj4g
MTEgJiAweDEpID09IDEpKQogCQlyZWdfd3JfZGF0YSB8PSBkYXRhIDw8IDI0OwogCiAJaWYgKChk
cGh5X3NlbCA+PiAwICYgMHhmKSA+IDApCkBAIC0xMDA1LDIwICsxMDE0LDE2IEBAIGludCBkcGh5
X3JlYWRfdGVzdGNvZGUoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIGludCBkcGh5X3Nl
bCwKIAkJZGF0YSA9IHJlZ19yZF9kYXRhID4+IDI0OwogCiAJcmV0dXJuIGRhdGE7Ci0KIH0KKyNl
bmRpZgogCiBzdGF0aWMgdm9pZCB0ZXN0X21vZGVfc2VuZChzdHJ1Y3Qga21iX2RybV9wcml2YXRl
ICpkZXZfcCwgdTMyIGRwaHlfbm8sCiAJCQkgICB1MzIgdGVzdF9jb2RlLCB1MzIgdGVzdF9kYXRh
KQogewotI2lmZGVmIERFQlVHCiAJaWYgKHRlc3RfY29kZSAhPSBURVNUX0NPREVfRlNNX0NPTlRS
T0wpCi0JCURSTV9JTkZPKCJ0ZXN0X2NvZGUgPSAlMDJ4LCB0ZXN0X2RhdGEgPSAlMDh4XG4iLCB0
ZXN0X2NvZGUsCisJCURSTV9ERUJVRygidGVzdF9jb2RlID0gJTAyeCwgdGVzdF9kYXRhID0gJTA4
eFxuIiwgdGVzdF9jb2RlLAogCQkJIHRlc3RfZGF0YSk7Ci0jZW5kaWYKLQotCS8qIHNlbmQgdGhl
IHRlc3QgY29kZSBmaXJzdCAqLwotCS8qICBTdGVwcyBmb3IgY29kZToKKwkvKiBTdGVwcyB0byBz
ZW5kIHRlc3QgY29kZToKIAkgKiAtIHNldCB0ZXN0Y2xrIEhJR0gKIAkgKiAtIHNldCB0ZXN0ZGlu
IHdpdGggdGVzdCBjb2RlCiAJICogLSBzZXQgdGVzdGVuIEhJR0gKQEAgLTEwNDEsMTQgKzEwNDYs
MTQgQEAgc3RhdGljIHZvaWQgdGVzdF9tb2RlX3NlbmQoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAq
ZGV2X3AsIHUzMiBkcGh5X25vLAogCS8qIFNldCB0ZXN0ZW4gbG93ICovCiAJQ0xSX0RQSFlfVEVT
VF9DVFJMMV9FTihkZXZfcCwgZHBoeV9ubyk7CiAKLQkvKiBTZW5kIHRoZSB0ZXN0IGRhdGEgbmV4
dCAqLwotCS8qICBTdGVwcyBmb3IgZGF0YToKLQkgKiAtIHNldCB0ZXN0ZW4gTE9XCi0JICogLSBz
ZXQgdGVzdGNsayBMT1cKLQkgKiAtIHNldCB0ZXN0ZGluIHdpdGggZGF0YQotCSAqIC0gc2V0IHRl
c3RjbGsgSElHSAotCSAqLwogCWlmICh0ZXN0X2NvZGUpIHsKKwkJLyogIFN0ZXBzIHRvIHNlbmQg
dGVzdCBkYXRhOgorCQkgKiAtIHNldCB0ZXN0ZW4gTE9XCisJCSAqIC0gc2V0IHRlc3RjbGsgTE9X
CisJCSAqIC0gc2V0IHRlc3RkaW4gd2l0aCBkYXRhCisJCSAqIC0gc2V0IHRlc3RjbGsgSElHSAor
CQkgKi8KKwogCQkvKiBTZXQgdGVzdGVuIGxvdyAqLwogCQlDTFJfRFBIWV9URVNUX0NUUkwxX0VO
KGRldl9wLCBkcGh5X25vKTsKIApAQCAtMTA2NSw1OSArMTA3MCwzNiBAQCBzdGF0aWMgdm9pZCB0
ZXN0X21vZGVfc2VuZChzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTMyIGRwaHlfbm8s
CiAJfQogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQKLQlzZXRfdGVzdF9tb2RlX3NyY19vc2NfZnJl
cV90YXJnZXRfbG93X2JpdHMoc3RydWN0IGttYl9kcm1fcHJpdmF0ZQorc3RhdGljIGlubGluZSB2
b2lkIHNldF90ZXN0X21vZGVfc3JjX29zY19mcmVxX3RhcmdldF9sb3dfYml0cyhzdHJ1Y3QKKwkJ
CQkJCQkgICAgICBrbWJfZHJtX3ByaXZhdGUKIAkJCQkJCQkgICAgICAqZGV2X3AsCiAJCQkJCQkJ
ICAgICAgdTMyIGRwaHlfbm8sCiAJCQkJCQkJICAgICAgdTMyIGZyZXEpCiB7Ci0JLyp0eXBpY2Fs
IHJpc2UvZmFsbCB0aW1lPTE2NiwKLQkgKiByZWZlciBUYWJsZSAxMjA3IGRhdGFib29rLHNyX29z
Y19mcmVxX3RhcmdldFs3OjAKKwkvKiBUeXBpY2FsIHJpc2UvZmFsbCB0aW1lPTE2NiwgcmVmZXIg
VGFibGUgMTIwNyBkYXRhYm9vaywKKwkgKiBzcl9vc2NfZnJlcV90YXJnZXRbNzowXQogCSAqLwot
CXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLAotCQkgICAgICAgVEVTVF9DT0RFX1NMRVdf
UkFURV9ERExfQ1lDTEVTLCAoZnJlcSAmIDB4N2YpKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lk
Ci1zZXRfdGVzdF9tb2RlX3NsZXdfcmF0ZV9jYWxpYl9lbihzdHJ1Y3Qga21iX2RybV9wcml2YXRl
ICpkZXZfcCwgdTMyIGRwaHlfbm8pCi17Ci0JLypkbyBub3QgYnlwYXNzIHNsZXcgcmF0ZSBjYWxp
YnJhdGlvbiBhbGdvcml0aG0gKi8KLQkvKmJpdHNbMTowfT1zcmNhbF9lbl9vdnJfZW4sIHNyY2Fs
X2VuX292ciwgYml0WzZdPXNyX3JhbmdlICovCi0JdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlf
bm8sIFRFU1RfQ09ERV9TTEVXX1JBVEVfT1ZFUlJJREVfQ1RSTCwKLQkJICAgICAgICgweDAzIHwg
KDEgPDwgNikpKTsKKwl0ZXN0X21vZGVfc2VuZChkZXZfcCwgZHBoeV9ubywgVEVTVF9DT0RFX1NM
RVdfUkFURV9ERExfQ1lDTEVTLAorCQkgICAgICAgKGZyZXEgJiAweDdmKSk7CiB9CiAKLXN0YXRp
YyBpbmxpbmUgdm9pZAotc2V0X3Rlc3RfbW9kZV9zcmNfb3NjX2ZyZXFfdGFyZ2V0X2hpX2JpdHMo
c3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsCi0JCQkJCSAgdTMyIGRwaHlfbm8sIHUzMiBm
cmVxKQorc3RhdGljIGlubGluZSB2b2lkIHNldF90ZXN0X21vZGVfc3JjX29zY19mcmVxX3Rhcmdl
dF9oaV9iaXRzKHN0cnVjdAorCQkJCQkJCSAgICAga21iX2RybV9wcml2YXRlCisJCQkJCQkJICAg
ICAqZGV2X3AsCisJCQkJCQkJICAgICB1MzIgZHBoeV9ubywKKwkJCQkJCQkgICAgIHUzMiBmcmVx
KQogewogCXUzMiBkYXRhOwotCS8qdHlwaWNhbCByaXNlL2ZhbGwgdGltZT0xNjYsIHJlZmVyIFRh
YmxlIDEyMDcgZGF0YWJvb2ssCi0JICogc3Jfb3NjX2ZyZXFfdGFyZ2V0WzExOjcKKworCS8qIEZs
YWcgdGhpcyBhcyBoaWdoIG5pYmJsZSAqLworCWRhdGEgPSAoKGZyZXEgPj4gNikgJiAweDFmKSB8
ICgxIDw8IDcpOworCisJLyogVHlwaWNhbCByaXNlL2ZhbGwgdGltZT0xNjYsIHJlZmVyIFRhYmxl
IDEyMDcgZGF0YWJvb2ssCisJICogc3Jfb3NjX2ZyZXFfdGFyZ2V0WzExOjddCiAJICovCi0JZGF0
YSA9ICgoZnJlcSA+PiA2KSAmIDB4MWYpIHwgKDEgPDwgNyk7CS8qZmxhZyB0aGlzIGFzIGhpZ2gg
bmliYmxlICovCiAJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIFRFU1RfQ09ERV9TTEVX
X1JBVEVfRERMX0NZQ0xFUywgZGF0YSk7CiB9CiAKLXN0cnVjdCB2Y29fcGFyYW1zIHsKLQl1MzIg
ZnJlcTsKLQl1MzIgcmFuZ2U7Ci0JdTMyIGRpdmlkZXI7Ci19OwotCi1zdGF0aWMgc3RydWN0IHZj
b19wYXJhbXMgdmNvX3RhYmxlW10gPSB7Ci0JezUyLCAweDNmLCA4fSwKLQl7ODAsIDB4MzksIDh9
LAotCXsxMDUsIDB4MmYsIDR9LAotCXsxNjAsIDB4MjksIDR9LAotCXsyMTAsIDB4MWYsIDJ9LAot
CXszMjAsIDB4MTksIDJ9LAotCXs0MjAsIDB4MGYsIDF9LAotCXs2MzAsIDB4MDksIDF9LAotCXsx
MTAwLCAweDAzLCAxfSwKLQl7MHhmZmZmLCAweDAxLCAxfSwKLX07Ci0KIHN0YXRpYyB2b2lkIG1p
cGlfdHhfZ2V0X3Zjb19wYXJhbXMoc3RydWN0IHZjb19wYXJhbXMgKnZjbykKIHsKIAlpbnQgaTsK
QEAgLTExMjgsMTIgKzExMTAsMTcgQEAgc3RhdGljIHZvaWQgbWlwaV90eF9nZXRfdmNvX3BhcmFt
cyhzdHJ1Y3QgdmNvX3BhcmFtcyAqdmNvKQogCQkJcmV0dXJuOwogCQl9CiAJfQorCiAJV0FSTl9P
TkNFKDEsICJJbnZhbGlkIHZjbyBmcmVxID0gJXUgZm9yIFBMTCBzZXR1cFxuIiwgdmNvLT5mcmVx
KTsKIH0KIAogc3RhdGljIHZvaWQgbWlwaV90eF9wbGxfc2V0dXAoc3RydWN0IGttYl9kcm1fcHJp
dmF0ZSAqZGV2X3AsIHUzMiBkcGh5X25vLAogCQkJICAgICAgdTMyIHJlZl9jbGtfbWh6LCB1MzIg
dGFyZ2V0X2ZyZXFfbWh6KQogeworCXUzMiBiZXN0X24gPSAwLCBiZXN0X20gPSAwOworCXUzMiBu
ID0gMCwgbSA9IDAsIGRpdiA9IDAsIGRlbHRhLCBmcmVxID0gMCwgdF9mcmVxOworCXUzMiBiZXN0
X2ZyZXFfZGVsdGEgPSAzMDAwOworCiAJLyogcGxsX3JlZl9jbGs6IC0gdmFsaWQgcmFuZ2U6IDJ+
NjQgTUh6OyBUeXBpY2FsbHkgMjQgTUh6CiAJICogRnZjbzogLSB2YWxpZCByYW5nZTogMzIwfjEy
NTAgTUh6IChHZW4zIEQtUEhZKQogCSAqIEZvdXQ6IC0gdmFsaWQgcmFuZ2U6IDQwfjEyNTAgTUh6
IChHZW4zIEQtUEhZKQpAQCAtMTE1MSwzNSArMTEzOCwzNyBAQCBzdGF0aWMgdm9pZCBtaXBpX3R4
X3BsbF9zZXR1cChzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTMyIGRwaHlfbm8sCiAJ
CS5yYW5nZSA9IDAsCiAJCS5kaXZpZGVyID0gMSwKIAl9OwotCXUzMiBiZXN0X24gPSAwLCBiZXN0
X20gPSAwOwotCXUzMiBuID0gMCwgbSA9IDAsIGRpdiA9IDAsIGRlbHRhLCBmcmVxID0gMCwgdF9m
cmVxOwotCXUzMiBiZXN0X2ZyZXFfZGVsdGEgPSAzMDAwOwogCiAJdmNvX3AuZnJlcSA9IHRhcmdl
dF9mcmVxX21oejsKIAltaXBpX3R4X2dldF92Y29fcGFyYW1zKCZ2Y29fcCk7Ci0JLypzZWFyY2gg
cGxsIG4gcGFyYW1ldGVyICovCisKKwkvKiBTZWFyY2ggcGxsIG4gcGFyYW1ldGVyICovCiAJZm9y
IChuID0gUExMX05fTUlOOyBuIDw9IFBMTF9OX01BWDsgbisrKSB7Ci0JCS8qY2FsY3VsYXRlIHRo
ZSBwbGwgaW5wdXQgZnJlcXVlbmN5IGRpdmlzaW9uIHJhdGlvCisJCS8qIENhbGN1bGF0ZSB0aGUg
cGxsIGlucHV0IGZyZXF1ZW5jeSBkaXZpc2lvbiByYXRpbwogCQkgKiBtdWx0aXBseSBieSAxMDAw
IGZvciBwcmVjaXNpb24gLQogCQkgKiBubyBmbG9hdGluZyBwb2ludCwgYWRkIG4gZm9yIHJvdW5k
aW5nCiAJCSAqLwogCQlkaXYgPSAoKHJlZl9jbGtfbWh6ICogMTAwMCkgKyBuKSAvIChuICsgMSk7
Ci0JCS8qZm91bmQgYSB2YWxpZCBuIHBhcmFtZXRlciAqLworCisJCS8qIEZvdW5kIGEgdmFsaWQg
biBwYXJhbWV0ZXIgKi8KIAkJaWYgKChkaXYgPCAyMDAwIHx8IGRpdiA+IDgwMDApKQogCQkJY29u
dGludWU7Ci0JCS8qc2VhcmNoIHBsbCBtIHBhcmFtZXRlciAqLworCisJCS8qIFNlYXJjaCBwbGwg
bSBwYXJhbWV0ZXIgKi8KIAkJZm9yIChtID0gUExMX01fTUlOOyBtIDw9IFBMTF9NX01BWDsgbSsr
KSB7Ci0JCQkvKmNhbGN1bGF0ZSB0aGUgRnZjbyhEUEhZIFBMTCBvdXRwdXQgZnJlcXVlbmN5KQor
CQkJLyogQ2FsY3VsYXRlIHRoZSBGdmNvKERQSFkgUExMIG91dHB1dCBmcmVxdWVuY3kpCiAJCQkg
KiB1c2luZyB0aGUgY3VycmVudCBuLG0gcGFyYW1zCiAJCQkgKi8KIAkJCWZyZXEgPSBkaXYgKiAo
bSArIDIpOwogCQkJZnJlcSAvPSAxMDAwOwotCQkJLyogdHJpbSB0aGUgcG90ZW50aWFsIHBsbCBm
cmVxIHRvIG1heCBzdXBwb3J0ZWQgKi8KKworCQkJLyogVHJpbSB0aGUgcG90ZW50aWFsIHBsbCBm
cmVxIHRvIG1heCBzdXBwb3J0ZWQgKi8KIAkJCWlmIChmcmVxID4gUExMX0ZWQ09fTUFYKQogCQkJ
CWNvbnRpbnVlOwogCiAJCQlkZWx0YSA9IGFicyhmcmVxIC0gdGFyZ2V0X2ZyZXFfbWh6KTsKLQkJ
CS8qc2VsZWN0IHRoZSBiZXN0IChjbG9zZXN0IHRvIHRhcmdldCBwbGwgZnJlcSkKKworCQkJLyog
U2VsZWN0IHRoZSBiZXN0IChjbG9zZXN0IHRvIHRhcmdldCBwbGwgZnJlcSkKIAkJCSAqIG4sbSBw
YXJhbWV0ZXJzIHNvIGZhcgogCQkJICovCiAJCQlpZiAoZGVsdGEgPCBiZXN0X2ZyZXFfZGVsdGEp
IHsKQEAgLTExOTAsMjEyICsxMTc5LDIzNSBAQCBzdGF0aWMgdm9pZCBtaXBpX3R4X3BsbF9zZXR1
cChzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTMyIGRwaHlfbm8sCiAJCX0KIAl9CiAK
LQkvKlByb2dyYW0gdmNvX2NudHJsIHBhcmFtZXRlcgotCSAqUExMX1ZDT19Db250cm9sWzU6MF0g
PSBwbGxfdmNvX2NudHJsX292ciwKKwkvKiBQcm9ncmFtIHZjb19jbnRybCBwYXJhbWV0ZXIKKwkg
KiBQTExfVkNPX0NvbnRyb2xbNTowXSA9IHBsbF92Y29fY250cmxfb3ZyLAogCSAqIFBMTF9WQ09f
Q29udHJvbFs2XSAgID0gcGxsX3Zjb19jbnRybF9vdnJfZW4KIAkgKi8KIAl0ZXN0X21vZGVfc2Vu
ZChkZXZfcCwgZHBoeV9ubywgVEVTVF9DT0RFX1BMTF9WQ09fQ1RSTCwgKHZjb19wLnJhbmdlCiAJ
CQkJCQkJCXwgKDEgPDwgNikpKTsKIAotCS8qUHJvZ3JhbSBtLCBuIHBsbCBwYXJhbWV0ZXJzICov
Ci0KLQlEUk1fSU5GTygiJXMgOiAlZCBtID0gJWQgbiA9ICVkXG4iLCBfX2Z1bmNfXywgX19MSU5F
X18sIGJlc3RfbSwgYmVzdF9uKTsKKwkvKiBQcm9ncmFtIG0sIG4gcGxsIHBhcmFtZXRlcnMgKi8K
KwlEUk1fSU5GTygibSA9ICVkIG4gPSAlZFxuIiwgYmVzdF9tLCBiZXN0X24pOwogCi0JLypQTExf
SW5wdXRfRGl2aWRlcl9SYXRpb1szOjBdID0gcGxsX25fb3ZyICovCisJLyogUExMX0lucHV0X0Rp
dmlkZXJfUmF0aW9bMzowXSA9IHBsbF9uX292ciAqLwogCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBk
cGh5X25vLCBURVNUX0NPREVfUExMX0lOUFVUX0RJVklERVIsCiAJCSAgICAgICAoYmVzdF9uICYg
MHgwZikpOwogCi0JLyogbSAtIGxvdyBuaWJibGUgUExMX0xvb3BfRGl2aWRlcl9SYXRpb1s0OjBd
ID0gcGxsX21fb3ZyWzQ6MF0gKi8KKwkvKiBtIC0gbG93IG5pYmJsZSBQTExfTG9vcF9EaXZpZGVy
X1JhdGlvWzQ6MF0KKwkgKiBwbGxfbV9vdnJbNDowXQorCSAqLwogCXRlc3RfbW9kZV9zZW5kKGRl
dl9wLCBkcGh5X25vLCBURVNUX0NPREVfUExMX0ZFRURCQUNLX0RJVklERVIsCiAJCSAgICAgICAo
YmVzdF9tICYgMHgxZikpOwogCi0JLyptIC1oaWdoIG5pYmJsZSBQTExfTG9vcF9EaXZpZGVyX1Jh
dGlvWzQ6MF0gPSBwbGxfbV9vdnJbOTo1XSAqLworCS8qIG0gLSBoaWdoIG5pYmJsZSBQTExfTG9v
cF9EaXZpZGVyX1JhdGlvWzQ6MF0KKwkgKiBwbGxfbV9vdnJbOTo1XQorCSAqLwogCXRlc3RfbW9k
ZV9zZW5kKGRldl9wLCBkcGh5X25vLCBURVNUX0NPREVfUExMX0ZFRURCQUNLX0RJVklERVIsCiAJ
CSAgICAgICAoKGJlc3RfbSA+PiA1KSAmIDB4MWYpIHwgUExMX0ZFRURCQUNLX0RJVklERVJfSElH
SCk7CiAKLQkvKmVuYWJsZSBvdmVyd3JpdGUgb2YgbixtIHBhcmFtZXRlcnMgOnBsbF9uX292cl9l
biwgcGxsX21fb3ZyX2VuICovCisJLyogRW5hYmxlIG92ZXJ3cml0ZSBvZiBuLG0gcGFyYW1ldGVy
cyA6cGxsX25fb3ZyX2VuLCBwbGxfbV9vdnJfZW4gKi8KIAl0ZXN0X21vZGVfc2VuZChkZXZfcCwg
ZHBoeV9ubywgVEVTVF9DT0RFX1BMTF9PVVRQVVRfQ0xLX1NFTCwKIAkJICAgICAgIChQTExfTl9P
VlJfRU4gfCBQTExfTV9PVlJfRU4pKTsKIAotCS8qUHJvZ3JhbSBDaGFyZ2UtUHVtcCBwYXJhbWV0
ZXJzICovCisJLyogUHJvZ3JhbSBDaGFyZ2UtUHVtcCBwYXJhbWV0ZXJzICovCiAKLQkvKnBsbF9w
cm9wX2NudHJsLWZpeGVkIHZhbHVlcyBmb3IgcHJvcF9jbnRybCBmcm9tIERQSFkgZG9jICovCisJ
LyogcGxsX3Byb3BfY250cmwtZml4ZWQgdmFsdWVzIGZvciBwcm9wX2NudHJsIGZyb20gRFBIWSBk
b2MgKi8KIAl0X2ZyZXEgPSB0YXJnZXRfZnJlcV9taHogKiB2Y29fcC5kaXZpZGVyOwogCXRlc3Rf
bW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLAogCQkgICAgICAgVEVTVF9DT0RFX1BMTF9QUk9QT1JU
SU9OQUxfQ0hBUkdFX1BVTVBfQ1RSTCwKIAkJICAgICAgICgodF9mcmVxID4gMTE1MCkgPyAweDBD
IDogMHgwQikpOwogCi0JLypwbGxfaW50X2NudHJsLWZpeGVkIHZhbHVlIGZvciBpbnRfY250cmwg
ZnJvbSBEUEhZIGRvYyAqLworCS8qIHBsbF9pbnRfY250cmwtZml4ZWQgdmFsdWUgZm9yIGludF9j
bnRybCBmcm9tIERQSFkgZG9jICovCiAJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIFRF
U1RfQ09ERV9QTExfSU5URUdSQUxfQ0hBUkdFX1BVTVBfQ1RSTCwKIAkJICAgICAgIDB4MDApOwog
Ci0JLypwbGxfZ21wX2NudHJsLWZpeGVkIHZhbHVlIGZvciBnbXBfY250cmwgZnJvbSBEUEhZIGRv
Y2kgKi8KKwkvKiBwbGxfZ21wX2NudHJsLWZpeGVkIHZhbHVlIGZvciBnbXBfY250cmwgZnJvbSBE
UEhZIGRvY2kgKi8KIAl0ZXN0X21vZGVfc2VuZChkZXZfcCwgZHBoeV9ubywgVEVTVF9DT0RFX1BM
TF9HTVBfQ1RSTCwgMHgxMCk7CiAKLQkvKnBsbF9jcGJpYXNfY250cmwtZml4ZWQgdmFsdWUgZm9y
IGNwYmlhc19jbnRybCBmcm9tIERQSFkgZG9jICovCisJLyogcGxsX2NwYmlhc19jbnRybC1maXhl
ZCB2YWx1ZSBmb3IgY3BiaWFzX2NudHJsIGZyb20gRFBIWSBkb2MgKi8KIAl0ZXN0X21vZGVfc2Vu
ZChkZXZfcCwgZHBoeV9ubywgVEVTVF9DT0RFX1BMTF9DSEFSR0VfUFVNUF9CSUFTLCAweDEwKTsK
IAotCS8qcGxsX3RoMSAtTG9jayBEZXRlY3RvciBQaGFzZSBlcnJvciB0aHJlc2hvbGQsIGRvY3Vt
ZW50IGdpdmVzIGZpeGVkCi0JICogdmFsdWUKKwkvKiBwbGxfdGgxIC1Mb2NrIERldGVjdG9yIFBo
YXNlIGVycm9yIHRocmVzaG9sZCwKKwkgKiBkb2N1bWVudCBnaXZlcyBmaXhlZCB2YWx1ZQogCSAq
LwogCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLCBURVNUX0NPREVfUExMX1BIQVNFX0VS
Ul9DVFJMLCAweDAyKTsKIAotCS8qUExMIExvY2sgQ29uZmlndXJhdGlvbiAqLworCS8qIFBMTCBM
b2NrIENvbmZpZ3VyYXRpb24gKi8KIAotCS8qcGxsX3RoMiAtIExvY2sgRmlsdGVyIGxlbmd0aCwg
ZG9jdW1lbnQgZ2l2ZXMgZml4ZWQgdmFsdWUgKi8KKwkvKiBwbGxfdGgyIC0gTG9jayBGaWx0ZXIg
bGVuZ3RoLCBkb2N1bWVudCBnaXZlcyBmaXhlZCB2YWx1ZSAqLwogCXRlc3RfbW9kZV9zZW5kKGRl
dl9wLCBkcGh5X25vLCBURVNUX0NPREVfUExMX0xPQ0tfRklMVEVSLCAweDYwKTsKIAotCS8qcGxs
X3RoMy0gUExMIFVubG9ja2luZyBmaWx0ZXIsIGRvY3VtZW50IGdpdmVzIGZpeGVkIHZhbHVlICov
CisJLyogcGxsX3RoMy0gUExMIFVubG9ja2luZyBmaWx0ZXIsIGRvY3VtZW50IGdpdmVzIGZpeGVk
IHZhbHVlICovCiAJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIFRFU1RfQ09ERV9QTExf
VU5MT0NLX0ZJTFRFUiwgMHgwMyk7CiAKLQkvKnBsbF9sb2NrX3NlbC1QTEwgTG9jayBEZXRlY3Rv
ciBTZWxlY3Rpb24sIGRvY3VtZW50IGdpdmVzCi0JICogZml4ZWQgdmFsdWUKKwkvKiBwbGxfbG9j
a19zZWwtUExMIExvY2sgRGV0ZWN0b3IgU2VsZWN0aW9uLAorCSAqIGRvY3VtZW50IGdpdmVzIGZp
eGVkIHZhbHVlCiAJICovCiAJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIFRFU1RfQ09E
RV9QTExfTE9DS19ERVRFQ1RPUiwgMHgwMik7CiB9CiAKKyNpZmRlZiBEUEhZX0dFVF9GU00KK3N0
YXRpYyB2b2lkIGRwaHlfZ2V0X2ZzbShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTMy
IGRwaHlfbm8pCit7CisJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIFRFU1RfQ09ERV9G
U01fQ09OVFJPTCwgMHg4MCk7CisKKwlEUk1fSU5GTygiZHBoeSAlZCBmc21fc3RhdGUgPSAwJXhc
biIsIGRwaHlfbm8sCisJCSBrbWJfcmVhZF9taXBpKGRldl9wLCBEUEhZX1RFU1RfRE9VVDRfNykp
OworfQorI2VuZGlmCisKIHN0YXRpYyB2b2lkIGRwaHlfaW5pdF9zZXF1ZW5jZShzdHJ1Y3Qga21i
X2RybV9wcml2YXRlICpkZXZfcCwKIAkJCSAgICAgICBzdHJ1Y3QgbWlwaV9jdHJsX2NmZyAqY2Zn
LCB1MzIgZHBoeV9ubywKIAkJCSAgICAgICBpbnQgYWN0aXZlX2xhbmVzLCBlbnVtIGRwaHlfbW9k
ZSBtb2RlKQogewotCXUzMiB0ZXN0X2NvZGUgPSAwOwotCXUzMiB0ZXN0X2RhdGEgPSAwLCB2YWw7
CisJdTMyIHRlc3RfY29kZSA9IDAsIHRlc3RfZGF0YSA9IDAsIHZhbDsKIAlpbnQgaSA9IDA7CiAK
LQkvKiBkZWFzc2VydCBTSFVURE9XTlogc2lnbmFsICovCi0JRFJNX0lORk8oIiVzIDogJWQgIE1J
UElfRFBIWV9TVEFUMF80XzcgPSAweCV4KVxuIiwgX19mdW5jX18sIF9fTElORV9fLAotCQkga21i
X3JlYWRfbWlwaShkZXZfcCwgTUlQSV9EUEhZX1NUQVQ0XzcpKTsKLQkvKlNldCBELVBIWSBpbiBz
aHV0ZG93biBtb2RlICovCi0JLyphc3NlcnQgUlNUWiBzaWduYWwgKi8KKwlEUk1fSU5GTygiZHBo
eT0lZCBtb2RlPSVkIGFjdGl2ZV9sYW5lcz0lZFxuIiwgZHBoeV9ubywgbW9kZSwKKwkJIGFjdGl2
ZV9sYW5lcyk7CisJRFJNX0RFQlVHKCJNSVBJX0RQSFlfU1RBVDBfNF83ID0gMHgleClcbiIsCisJ
CSAga21iX3JlYWRfbWlwaShkZXZfcCwgTUlQSV9EUEhZX1NUQVQ0XzcpKTsKKworCS8qIFNldCBE
LVBIWSBpbiBzaHV0ZG93biBtb2RlICovCisJLyogQXNzZXJ0IFJTVFogc2lnbmFsICovCiAJQ0xS
X0RQSFlfSU5JVF9DVFJMMChkZXZfcCwgZHBoeV9ubywgUkVTRVRaKTsKLQkvKiBhc3NlcnQgU0hV
VERPV05aIHNpZ25hbCAqLworCisJLyogQXNzZXJ0IFNIVVRET1dOWiBzaWduYWwgKi8KIAlDTFJf
RFBIWV9JTklUX0NUUkwwKGRldl9wLCBkcGh5X25vLCBTSFVURE9XTlopOwogCXZhbCA9IGttYl9y
ZWFkX21pcGkoZGV2X3AsIERQSFlfSU5JVF9DVFJMMCk7Ci0JRFJNX0lORk8oIiVzIDogJWQgRFBI
WV9JTklUX0NUUkwwID0gMHgleFxuIiwgX19mdW5jX18sIF9fTElORV9fLCB2YWwpOwogCi0JLypJ
bml0IEQtUEhZX24gKi8KLQkvKlB1bHNlIHRlc3RjbGVhciBzaWduYWwgdG8gbWFrZSBzdXJlIHRo
ZSBkLXBoeSBjb25maWd1cmF0aW9uIHN0YXJ0cwotCSAqIGZyb20gYSBjbGVhbiBiYXNlCisJRFJN
X0lORk8oIkRQSFlfSU5JVF9DVFJMMCA9IDB4JXhcbiIsIHZhbCk7CisKKwkvKiBJbml0IEQtUEhZ
X24KKwkgKiBQdWxzZSB0ZXN0Y2xlYXIgc2lnbmFsIHRvIG1ha2Ugc3VyZSB0aGUgZC1waHkgY29u
ZmlndXJhdGlvbgorCSAqIHN0YXJ0cyBmcm9tIGEgY2xlYW4gYmFzZQogCSAqLwogCUNMUl9EUEhZ
X1RFU1RfQ1RSTDAoZGV2X3AsIGRwaHlfbm8pOwogCW5kZWxheSgxNSk7CiAJU0VUX0RQSFlfVEVT
VF9DVFJMMChkZXZfcCwgZHBoeV9ubyk7Ci0JLypUT0RPIG1heSBuZWVkIHRvIGFkZCAxNW5zIGRl
bGF5IGhlcmUgKi8KIAluZGVsYXkoMTUpOwogCUNMUl9EUEhZX1RFU1RfQ1RSTDAoZGV2X3AsIGRw
aHlfbm8pOwotCXZhbCA9IGttYl9yZWFkX21pcGkoZGV2X3AsIERQSFlfVEVTVF9DVFJMMCk7Ci0J
RFJNX0lORk8oIiVzIDogJWQgRFBIWV9URVNUX0NUUkwwID0gMHgleFxuIiwgX19mdW5jX18sIF9f
TElORV9fLCB2YWwpOwogCW5kZWxheSgxNSk7CiAKLQkvKlNldCBtYXN0ZXJtYWNybyBiaXQgLSBN
YXN0ZXIgb3Igc2xhdmUgbW9kZSAqLworCURSTV9ERUJVRygiRFBIWV9URVNUX0NUUkwwPTB4JXhc
biIsCisJCSAga21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9URVNUX0NUUkwwKSk7CisKKwkvKiBT
ZXQgbWFzdGVybWFjcm8gYml0IC0gTWFzdGVyIG9yIHNsYXZlIG1vZGUgKi8KIAl0ZXN0X2NvZGUg
PSBURVNUX0NPREVfTVVMVElQTEVfUEhZX0NUUkw7Ci0JLypEUEhZIGhhcyBpdHMgb3duIGNsb2Nr
IGxhbmUgZW5hYmxlZCAobWFzdGVyKSAqLworCisJLyogRFBIWSBoYXMgaXRzIG93biBjbG9jayBs
YW5lIGVuYWJsZWQgKG1hc3RlcikgKi8KIAlpZiAobW9kZSA9PSBNSVBJX0RQSFlfTUFTVEVSKQog
CQl0ZXN0X2RhdGEgPSAweDAxOwogCWVsc2UKIAkJdGVzdF9kYXRhID0gMHgwMDsKIAotCS8qc2Vu
ZCB0aGUgdGVzdCBjb2RlIGFuZCBkYXRhICovCisJLyogU2VuZCB0aGUgdGVzdCBjb2RlIGFuZCBk
YXRhICovCiAJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIHRlc3RfY29kZSwgdGVzdF9k
YXRhKTsKLQkvKlNldCB0aGUgbGFuZSBkYXRhIHJhdGUgKi8KKworCS8qIFNldCB0aGUgbGFuZSBk
YXRhIHJhdGUgKi8KIAlmb3IgKGkgPSAwOyBpIDwgTUlQSV9EUEhZX0RFRkFVTFRfQklUX1JBVEVT
OyBpKyspIHsKIAkJaWYgKG1pcGlfaHNfZnJlcV9yYW5nZVtpXS5kZWZhdWx0X2JpdF9yYXRlX21i
cHMgPAogCQkgICAgY2ZnLT5sYW5lX3JhdGVfbWJwcykKIAkJCWNvbnRpbnVlOwotCQkvKiBzZW5k
IHRoZSB0ZXN0IGNvZGUgYW5kIGRhdGEgKi8KLQkJLypiaXRbNjowXSA9IGhzZnJlcXJhbmdlX292
ciBiaXRbN10gPSBoc2ZyZXFyYW5nZV9vdnJfZW4gKi8KKworCQkvKiBTZW5kIHRoZSB0ZXN0IGNv
ZGUgYW5kIGRhdGEgKi8KKwkJLyogYml0WzY6MF0gPSBoc2ZyZXFyYW5nZV9vdnIgYml0WzddID0g
aHNmcmVxcmFuZ2Vfb3ZyX2VuICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9IU19GUkVRX1JB
TkdFX0NGRzsKLQkJdGVzdF9kYXRhID0KLQkJICAgIChtaXBpX2hzX2ZyZXFfcmFuZ2VbaV0uaHNm
cmVxcmFuZ2VfY29kZSAmIDB4N2YpIHwgKDEgPDwgNyk7CisJCXRlc3RfZGF0YSA9IChtaXBpX2hz
X2ZyZXFfcmFuZ2VbaV0uaHNmcmVxcmFuZ2VfY29kZSAmIDB4N2YpIHwKKwkJICAgICgxIDw8IDcp
OwogCQl0ZXN0X21vZGVfc2VuZChkZXZfcCwgZHBoeV9ubywgdGVzdF9jb2RlLCB0ZXN0X2RhdGEp
OwogCQlicmVhazsKIAl9Ci0JLyoKLQkgKiBIaWdoLVNwZWVkIFR4IFNsZXcgUmF0ZSBDYWxpYnJh
dGlvbgorCisJLyogSGlnaC1TcGVlZCBUeCBTbGV3IFJhdGUgQ2FsaWJyYXRpb24KIAkgKiBCaXRS
YXRlOiA+IDEuNSBHYnBzICYmIDw9IDIuNSBHYnBzOiBzbGV3IHJhdGUgY29udHJvbCBPRkYKIAkg
Ki8KIAlpZiAoY2ZnLT5sYW5lX3JhdGVfbWJwcyA+IDE1MDApIHsKLQkJLypieXBhc3Mgc2xldyBy
YXRlIGNhbGlicmF0aW9uIGFsZ29yaXRobSAqLwotCQkvKmJpdHNbMTowfSBzcmNhbF9lbl9vdnJf
ZW4sIHNyY2FsX2VuX292ciAqLworCQkvKiBCeXBhc3Mgc2xldyByYXRlIGNhbGlicmF0aW9uIGFs
Z29yaXRobQorCQkgKiBiaXRzWzE6MH0gc3JjYWxfZW5fb3ZyX2VuLCBzcmNhbF9lbl9vdnIKKwkJ
ICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfT1ZFUlJJREVfQ1RSTDsKIAkJ
dGVzdF9kYXRhID0gMHgwMjsKIAkJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIHRlc3Rf
Y29kZSwgdGVzdF9kYXRhKTsKIAotCQkvKiBkaXNhYmxlIHNsZXcgcmF0ZSBjYWxpYnJhdGlvbiAq
LworCQkvKiBEaXNhYmxlIHNsZXcgcmF0ZSBjYWxpYnJhdGlvbiAqLwogCQl0ZXN0X2NvZGUgPSBU
RVNUX0NPREVfU0xFV19SQVRFX0RETF9MT09QX0NUUkw7CiAJCXRlc3RfZGF0YSA9IDB4MDA7CiAJ
CXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7CiAJ
fSBlbHNlIGlmIChjZmctPmxhbmVfcmF0ZV9tYnBzID4gMTAwMCkgewotCQkvKkJpdFJhdGU6ID4g
MSBHYnBzICYmIDw9IDEuNSBHYnBzOiAtIHNsZXcgcmF0ZSBjb250cm9sIE9OCisJCS8qIEJpdFJh
dGU6ID4gMSBHYnBzICYmIDw9IDEuNSBHYnBzOiAtIHNsZXcgcmF0ZSBjb250cm9sIE9OCiAJCSAq
IHR5cGljYWwgcmlzZS9mYWxsIHRpbWVzOiAxNjYgcHMKIAkJICovCiAKLQkJLypkbyBub3QgYnlw
YXNzIHNsZXcgcmF0ZSBjYWxpYnJhdGlvbiBhbGdvcml0aG0gKi8KLQkJLypiaXRzWzE6MH09c3Jj
YWxfZW5fb3ZyX2VuLCBzcmNhbF9lbl9vdnIsIGJpdFs2XT1zcl9yYW5nZSAqLworCQkvKiBEbyBu
b3QgYnlwYXNzIHNsZXcgcmF0ZSBjYWxpYnJhdGlvbiBhbGdvcml0aG0KKwkJICogYml0c1sxOjB9
PXNyY2FsX2VuX292cl9lbiwgc3JjYWxfZW5fb3ZyLCBiaXRbNl09c3JfcmFuZ2UKKwkJICovCiAJ
CXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfT1ZFUlJJREVfQ1RSTDsKIAkJdGVzdF9k
YXRhID0gKDB4MDMgfCAoMSA8PCA2KSk7CiAJCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25v
LCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7CiAKLS8vICAgICAgICAgICAgICBzZXRfdGVzdF9tb2Rl
X3NsZXdfcmF0ZV9jYWxpYl9lbihkZXZfcCwgZHBoeV9ubyk7Ci0KLQkJLyogZW5hYmxlIHNsZXcg
cmF0ZSBjYWxpYnJhdGlvbiAqLworCQkvKiBFbmFibGUgc2xldyByYXRlIGNhbGlicmF0aW9uICov
CiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfRERMX0xPT1BfQ1RSTDsKIAkJdGVz
dF9kYXRhID0gMHgwMTsKIAkJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIHRlc3RfY29k
ZSwgdGVzdF9kYXRhKTsKIAotCQkvKnNldCBzcl9vc2NfZnJlcV90YXJnZXRbNjowXSAqLwotCQkv
KnR5cGljYWwgcmlzZS9mYWxsIHRpbWU9MTY2LCByZWZlciBUYWJsZSAxMjA3IGRhdGFib29rICov
Ci0JCS8qdHlwaWNhbCByaXNlL2ZhbGwgdGltZT0xNjYsIHJlZmVyIFRhYmxlIDEyMDcgZGF0YWJv
b2ssCi0JCSAqIHNyX29zY19mcmVxX3RhcmdldFs3OjAKKwkJLyogU2V0IHNyX29zY19mcmVxX3Rh
cmdldFs2OjBdIGxvdyBuaWJibGUKKwkJICogdHlwaWNhbCByaXNlL2ZhbGwgdGltZT0xNjYsIHJl
ZmVyIFRhYmxlIDEyMDcgZGF0YWJvb2sKIAkJICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9T
TEVXX1JBVEVfRERMX0NZQ0xFUzsKIAkJdGVzdF9kYXRhID0gKDB4NzJmICYgMHg3Zik7CiAJCXRl
c3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7Ci0JCS8q
c2V0IHNyX29zY19mcmVxX3RhcmdldFsxMTo3XSAqLwotCQkvKnR5cGljYWwgcmlzZS9mYWxsIHRp
bWU9MTY2LCByZWZlciBUYWJsZSAxMjA3IGRhdGFib29rLAotCQkgKiBzcl9vc2NfZnJlcV90YXJn
ZXRbMTE6NworCisJCS8qIFNldCBzcl9vc2NfZnJlcV90YXJnZXRbMTE6N10gaGlnaCBuaWJibGUK
KwkJICogVHlwaWNhbCByaXNlL2ZhbGwgdGltZT0xNjYsIHJlZmVyIFRhYmxlIDEyMDcgZGF0YWJv
b2sKIAkJICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfRERMX0NZQ0xFUzsK
LQkJLypmbGFnIHRoaXMgYXMgaGlnaCBuaWJibGUgKi8KIAkJdGVzdF9kYXRhID0gKCgweDcyZiA+
PiA2KSAmIDB4MWYpIHwgKDEgPDwgNyk7CiAJCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25v
LCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7CiAJfSBlbHNlIHsKLQkJLypsYW5lX3JhdGVfbWJwcyA8
PSAxMDAwIE1icHMgKi8KLQkJLypCaXRSYXRlOiAgPD0gMSBHYnBzOgorCQkvKiBsYW5lX3JhdGVf
bWJwcyA8PSAxMDAwIE1icHMKKwkJICogQml0UmF0ZTogIDw9IDEgR2JwczoKIAkJICogLSBzbGV3
IHJhdGUgY29udHJvbCBPTgogCQkgKiAtIHR5cGljYWwgcmlzZS9mYWxsIHRpbWVzOiAyMjUgcHMK
IAkJICovCiAKLQkJLypkbyBub3QgYnlwYXNzIHNsZXcgcmF0ZSBjYWxpYnJhdGlvbiBhbGdvcml0
aG0gKi8KKwkJLyogRG8gbm90IGJ5cGFzcyBzbGV3IHJhdGUgY2FsaWJyYXRpb24gYWxnb3JpdGht
ICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfT1ZFUlJJREVfQ1RSTDsKIAkJ
dGVzdF9kYXRhID0gKDB4MDMgfCAoMSA8PCA2KSk7CiAJCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBk
cGh5X25vLCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7CiAKLQkJLyogZW5hYmxlIHNsZXcgcmF0ZSBj
YWxpYnJhdGlvbiAqLworCQkvKiBFbmFibGUgc2xldyByYXRlIGNhbGlicmF0aW9uICovCiAJCXRl
c3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVfRERMX0xPT1BfQ1RSTDsKIAkJdGVzdF9kYXRh
ID0gMHgwMTsKIAkJdGVzdF9tb2RlX3NlbmQoZGV2X3AsIGRwaHlfbm8sIHRlc3RfY29kZSwgdGVz
dF9kYXRhKTsKIAotCQkvKnR5cGljYWwgcmlzZS9mYWxsIHRpbWU9MjU1LCByZWZlciBUYWJsZSAx
MjA3IGRhdGFib29rICovCisJCS8qIFR5cGljYWwgcmlzZS9mYWxsIHRpbWU9MjU1LCByZWZlciBU
YWJsZSAxMjA3IGRhdGFib29rICovCiAJCXRlc3RfY29kZSA9IFRFU1RfQ09ERV9TTEVXX1JBVEVf
RERMX0NZQ0xFUzsKIAkJdGVzdF9kYXRhID0gKDB4NTIzICYgMHg3Zik7CiAJCXRlc3RfbW9kZV9z
ZW5kKGRldl9wLCBkcGh5X25vLCB0ZXN0X2NvZGUsIHRlc3RfZGF0YSk7CiAKLQkJLypzZXQgc3Jf
b3NjX2ZyZXFfdGFyZ2V0WzExOjddICovCisJCS8qIFNldCBzcl9vc2NfZnJlcV90YXJnZXRbMTE6
N10gaGlnaCBuaWJibGUgKi8KIAkJdGVzdF9jb2RlID0gVEVTVF9DT0RFX1NMRVdfUkFURV9ERExf
Q1lDTEVTOwotCQkvKmZsYWcgdGhpcyBhcyBoaWdoIG5pYmJsZSAqLwogCQl0ZXN0X2RhdGEgPSAo
KDB4NTIzID4+IDYpICYgMHgxZikgfCAoMSA8PCA3KTsKIAkJdGVzdF9tb2RlX3NlbmQoZGV2X3As
IGRwaHlfbm8sIHRlc3RfY29kZSwgdGVzdF9kYXRhKTsKIAogCX0KLQkvKlNldCBjZmdjbGtmcmVx
cmFuZ2UgKi8KKworCS8qIFNldCBjZmdjbGtmcmVxcmFuZ2UgKi8KIAl2YWwgPSAoKChjZmctPmNm
Z19jbGtfa2h6IC8gMTAwMCkgLSAxNykgKiA0KSAmIDB4M2Y7CiAJU0VUX0RQSFlfRlJFUV9DVFJM
MF8zKGRldl9wLCBkcGh5X25vLCB2YWwpOwotCXZhbCA9IGttYl9yZWFkX21pcGkoZGV2X3AsIERQ
SFlfRlJFUV9DVFJMMF8zICsgNCk7CiAKLQkvKkVuYWJsZSBjb25maWcgY2xrIGZvciB0aGUgY29y
cmVzcG9uZGluZyBkLXBoeSAqLworCURSTV9JTkZPKCJEUEhZX0ZSRVEgPSAweCV4XG4iLAorCQkg
a21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9GUkVRX0NUUkwwXzMgKyA0KSk7CisJRFJNX0RFQlVH
KCJNSVBJX0RQSFlfU1RBVDBfNF83ID0gMHgleClcbiIsCisJCSAga21iX3JlYWRfbWlwaShkZXZf
cCwgTUlQSV9EUEhZX1NUQVQ0XzcpKTsKKworCS8qIEVuYWJsZSBjb25maWcgY2xrIGZvciB0aGUg
Y29ycmVzcG9uZGluZyBkLXBoeSAqLwogCWttYl9zZXRfYml0X21pcGkoZGV2X3AsIERQSFlfQ0ZH
X0NMS19FTiwgZHBoeV9ubyk7Ci0JdmFsID0ga21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9DRkdf
Q0xLX0VOKTsKKworCURSTV9JTkZPKCJEUEhZX0NGR19DTEtfRU4gPSAweCV4XG4iLAorCQkga21i
X3JlYWRfbWlwaShkZXZfcCwgRFBIWV9DRkdfQ0xLX0VOKSk7CisKIAkvKiBQTEwgc2V0dXAgKi8K
IAlpZiAobW9kZSA9PSBNSVBJX0RQSFlfTUFTVEVSKSB7CiAJCS8qU2V0IFBMTCByZWd1bGF0b3Ig
aW4gYnlwYXNzICovCkBAIC0xNDA3LDE2ICsxNDE5LDIxIEBAIHN0YXRpYyB2b2lkIGRwaHlfaW5p
dF9zZXF1ZW5jZShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwKIAkJbWlwaV90eF9wbGxf
c2V0dXAoZGV2X3AsIGRwaHlfbm8sIGNmZy0+cmVmX2Nsa19raHogLyAxMDAwLAogCQkJCSAgY2Zn
LT5sYW5lX3JhdGVfbWJwcyAvIDIpOwogCi0JCS8qU2V0IGNsa3NlbCAqLwotCQlrbWJfd3JpdGVf
Yml0c19taXBpKGRldl9wLCBEUEhZX0lOSVRfQ1RSTDEsIFBMTF9DTEtTRUxfMCwKLQkJCQkgICAg
MiwgMHgwMSk7Ci0JCXZhbCA9IGttYl9yZWFkX21pcGkoZGV2X3AsIERQSFlfSU5JVF9DVFJMMSk7
CisJCS8qIFNldCBjbGtzZWwgKi8KKwkJa21iX3dyaXRlX2JpdHNfbWlwaShkZXZfcCwgRFBIWV9J
TklUX0NUUkwxLAorCQkJCSAgICBQTExfQ0xLU0VMXzAsIDIsIDB4MDEpOwogCi0JCS8qU2V0IHBs
bF9zaGFkb3dfY29udHJvbCAqLworCQkvKiBTZXQgcGxsX3NoYWRvd19jb250cm9sICovCiAJCWtt
Yl9zZXRfYml0X21pcGkoZGV2X3AsIERQSFlfSU5JVF9DVFJMMSwgUExMX1NIQURPV19DVFJMKTsK
LQkJdmFsID0ga21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9JTklUX0NUUkwxKTsKKworCQlEUk1f
SU5GTygiRFBIWV9JTklUX0NUUkwxID0gMHgleFxuIiwKKwkJCSBrbWJfcmVhZF9taXBpKGRldl9w
LCBEUEhZX0lOSVRfQ1RSTDEpKTsKIAl9Ci0jZGVmaW5lIE1JUElfVFhfRk9SQ0VfVk9ECisKKwlE
Uk1fREVCVUcoIk1JUElfRFBIWV9TVEFUMF80XzcgPSAweCV4KVxuIiwKKwkJICBrbWJfcmVhZF9t
aXBpKGRldl9wLCBNSVBJX0RQSFlfU1RBVDRfNykpOworCisvLyNkZWZpbmUgTUlQSV9UWF9GT1JD
RV9WT0QKICNpZmRlZiBNSVBJX1RYX0ZPUkNFX1ZPRAogI2RlZmluZSBNSVBJX1RYX1ZPRF9MVkwJ
NDUwCiAjZGVmaW5lIFRFU1RfQ09ERV9CQU5ER0FQIDB4MjQKQEAgLTE0NTQsMzEgKzE0NzEsMzkg
QEAgc3RhdGljIHZvaWQgZHBoeV9pbml0X3NlcXVlbmNlKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUg
KmRldl9wLAogCSAqIGJpdHNbNTowXSAgLSBCYXNlRGlyOiAxID0gUngKIAkgKiBiaXRzWzk6Nl0g
LSBCYXNlRGlyOiAwID0gVHgKIAkgKi8KKwlEUk1fREVCVUcoIk1JUElfRFBIWV9TVEFUMF80Xzcg
PSAweCV4KVxuIiwKKwkJICBrbWJfcmVhZF9taXBpKGRldl9wLCBNSVBJX0RQSFlfU1RBVDRfNykp
OworCiAJa21iX3dyaXRlX2JpdHNfbWlwaShkZXZfcCwgRFBIWV9JTklUX0NUUkwyLCAwLCA5LCAw
eDAzZik7Ci0JdmFsID0ga21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9JTklUX0NUUkwyKTsKIAlu
ZGVsYXkoMTUpOwogCi0JLyogRW5hYmxlIENMT0NLIExBTkUgLSAqLwotCS8qY2xvY2sgbGFuZSBz
aG91bGQgYmUgZW5hYmxlZCByZWdhcmRsZXNzIG9mIHRoZSBkaXJlY3Rpb24gc2V0IGZvcgotCSAq
IHRoZSBELVBIWSAoUngvVHgpCisJLyogRW5hYmxlIENMT0NLIExBTkUKKwkgKiBDbG9jayBsYW5l
IHNob3VsZCBiZSBlbmFibGVkIHJlZ2FyZGxlc3Mgb2YgdGhlIGRpcmVjdGlvbgorCSAqIHNldCBm
b3IgdGhlIEQtUEhZIChSeC9UeCkKIAkgKi8KIAlrbWJfc2V0X2JpdF9taXBpKGRldl9wLCBEUEhZ
X0lOSVRfQ1RSTDIsIDEyICsgZHBoeV9ubyk7Ci0JdmFsID0ga21iX3JlYWRfbWlwaShkZXZfcCwg
RFBIWV9JTklUX0NUUkwyKTsKIAotCS8qIGVuYWJsZSBEQVRBIExBTkVTICovCisJRFJNX0lORk8o
IkRQSFlfSU5JVF9DVFJMMiA9IDB4JXhcbiIsCisJCSBrbWJfcmVhZF9taXBpKGRldl9wLCBEUEhZ
X0lOSVRfQ1RSTDIpKTsKKworCS8qIEVuYWJsZSBEQVRBIExBTkVTICovCiAJa21iX3dyaXRlX2Jp
dHNfbWlwaShkZXZfcCwgRFBIWV9FTkFCTEUsIGRwaHlfbm8gKiAyLCAyLAogCQkJICAgICgoMSA8
PCBhY3RpdmVfbGFuZXMpIC0gMSkpOwogCi0JdmFsID0ga21iX3JlYWRfbWlwaShkZXZfcCwgRFBI
WV9FTkFCTEUpOworCURSTV9JTkZPKCJEUEhZX0VOQUJMRSA9IDB4JXhcbiIsIGttYl9yZWFkX21p
cGkoZGV2X3AsIERQSFlfRU5BQkxFKSk7CiAJbmRlbGF5KDE1KTsKLQkvKlRha2UgRC1QSFkgb3V0
IG9mIHNodXRkb3duIG1vZGUgKi8KLQkvKiBkZWFzc2VydCBTSFVURE9XTlogc2lnbmFsICovCisK
KwkvKiBUYWtlIEQtUEhZIG91dCBvZiBzaHV0ZG93biBtb2RlICovCisJLyogRGVhc3NlcnQgU0hV
VERPV05aIHNpZ25hbCAqLworCURSTV9JTkZPKCJNSVBJX0RQSFlfU1RBVDBfNF83ID0gMHgleClc
biIsCisJCSBrbWJfcmVhZF9taXBpKGRldl9wLCBNSVBJX0RQSFlfU1RBVDRfNykpOwogCVNFVF9E
UEhZX0lOSVRfQ1RSTDAoZGV2X3AsIGRwaHlfbm8sIFNIVVRET1dOWik7CiAJbmRlbGF5KDE1KTsK
IAotCS8qZGVhc3NlcnQgUlNUWiBzaWduYWwgKi8KKwkvKiBEZWFzc2VydCBSU1RaIHNpZ25hbCAq
LwogCVNFVF9EUEhZX0lOSVRfQ1RSTDAoZGV2X3AsIGRwaHlfbm8sIFJFU0VUWik7Ci0JdmFsID0g
a21iX3JlYWRfbWlwaShkZXZfcCwgRFBIWV9JTklUX0NUUkwwKTsKKwlEUk1fSU5GTygiRFBIWV9J
TklUX0NUUkwwID0gMHgleFxuIiwKKwkJIGttYl9yZWFkX21pcGkoZGV2X3AsIERQSFlfSU5JVF9D
VFJMMCkpOwogfQogCiBzdGF0aWMgdm9pZCBkcGh5X3dhaXRfZnNtKHN0cnVjdCBrbWJfZHJtX3By
aXZhdGUgKmRldl9wLCB1MzIgZHBoeV9ubywKQEAgLTE0OTAsNzYgKzE1MTUsODcgQEAgc3RhdGlj
IHZvaWQgZHBoeV93YWl0X2ZzbShzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCwgdTMyIGRw
aHlfbm8sCiAKIAlkbyB7CiAJCXRlc3RfbW9kZV9zZW5kKGRldl9wLCBkcGh5X25vLCBURVNUX0NP
REVfRlNNX0NPTlRST0wsIDB4ODApOwotCQkvKlRPRE8tbmVlZCB0byBhZGQgYSB0aW1lIG91dCBh
bmQgcmV0dXJuIGZhaWx1cmUgKi8KKworCQkvKiBUT0RPIC0gbmVlZCB0byBhZGQgYSB0aW1lIG91
dCBhbmQgcmV0dXJuIGZhaWx1cmUgKi8KIAkJdmFsID0gR0VUX1RFU1RfRE9VVDRfNyhkZXZfcCwg
ZHBoeV9ubyk7CiAJCWkrKzsKIAkJaWYgKGkgPiBUSU1FT1VUKSB7CiAJCQlzdGF0dXMgPSAwOwot
CQkJRFJNX0lORk8oIiVzOiB0aW1pbmcgb3V0IGZzbV9zdGF0ZSA9ICV4IEdFVF9URVNUX0RPVVQ0
XzcgPSAleCIsCi0JCQkgICAgIF9fZnVuY19fLCBmc21fc3RhdGUsIGttYl9yZWFkX21pcGkoZGV2
X3AsCi0JCQkJCQkgICAgICBEUEhZX1RFU1RfRE9VVDRfNykpOwogCQkJYnJlYWs7CiAJCX0KIAl9
IHdoaWxlICh2YWwgIT0gZnNtX3N0YXRlKTsKLQlEUk1fSU5GTygiJXM6IGRwaHkgJWQgdmFsID0g
JXhcbiIsIF9fZnVuY19fLCBkcGh5X25vLCB2YWwpOwogCiAJRFJNX0lORk8oIiVzOiBkcGh5ICVk
IHZhbCA9ICV4XG4iLCBfX2Z1bmNfXywgZHBoeV9ubywgdmFsKTsKIAlEUk1fSU5GTygiKioqKioq
KioqKiBEUEhZICVkIFdBSVRfRlNNICVzICoqKioqKioqKipcbiIsCiAJCSBkcGh5X25vLCBzdGF0
dXMgPyAiU1VDQ0VTUyIgOiAiRkFJTEVEIik7CiB9CiAKLXN0YXRpYyB1MzIgd2FpdF9pbml0X2Rv
bmUoc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIHUzMiBkcGh5X25vLAotCQkJICB1MzIg
YWN0aXZlX2xhbmVzKQorc3RhdGljIHZvaWQgd2FpdF9pbml0X2RvbmUoc3RydWN0IGttYl9kcm1f
cHJpdmF0ZSAqZGV2X3AsIHUzMiBkcGh5X25vLAorCQkJICAgdTMyIGFjdGl2ZV9sYW5lcykKIHsK
IAl1MzIgc3RvcHN0YXRlZGF0YSA9IDA7CiAJdTMyIGRhdGFfbGFuZXMgPSAoMSA8PCBhY3RpdmVf
bGFuZXMpIC0gMTsKIAlpbnQgaSA9IDAsIHZhbDsKIAlpbnQgc3RhdHVzID0gMTsKIAotCURSTV9J
TkZPKCIlcyA6ICVkIGRwaHkgPSAlZCBhY3RpdmVfbGFuZXM9JWQgZGF0YV9sYW5lcz0lZFxuIiwK
LQkJIF9fZnVuY19fLCBfX0xJTkVfXywgZHBoeV9ubywgYWN0aXZlX2xhbmVzLCBkYXRhX2xhbmVz
KTsKKwlEUk1fSU5GTygiZHBoeT0lZCBhY3RpdmVfbGFuZXM9JWQgZGF0YV9sYW5lcz0lZFxuIiwg
ZHBoeV9ubywKKwkJIGFjdGl2ZV9sYW5lcywgZGF0YV9sYW5lcyk7CiAKIAlkbyB7CiAJCXZhbCA9
IGttYl9yZWFkX21pcGkoZGV2X3AsIE1JUElfRFBIWV9TVEFUNF83KTsKIAkJc3RvcHN0YXRlZGF0
YSA9IEdFVF9TVE9QU1RBVEVfREFUQShkZXZfcCwgZHBoeV9ubykgJiBkYXRhX2xhbmVzOworCisJ
CS8qIFRPRE8tbmVlZCB0byBhZGQgYSB0aW1lIG91dCBhbmQgcmV0dXJuIGZhaWx1cmUgKi8KIAkJ
aSsrOworCiAJCWlmIChpID4gVElNRU9VVCkgewogCQkJc3RhdHVzID0gMDsKLQkJCURSTV9JTkZP
KCIhV0FJVF9JTklUX0RPTkU6IFRJTUlORyBPVVQhIChlcnJfc3RhdD0lZCluIiwKKworCQkJRFJN
X0lORk8oIiEgV0FJVF9JTklUX0RPTkU6IFRJTUlORyBPVVQhKGVycl9zdGF0PSVkKSIsCiAJCQkJ
IGttYl9yZWFkX21pcGkoZGV2X3AsIE1JUElfRFBIWV9FUlJfU1RBVDZfNykpOworCQkJRFJNX0lO
Rk8oIk1JUElfRFBIWV9TVEFUMF80XzcgPSAweCV4KVxuIiwgdmFsKTsKKwkJCURSTV9JTkZPKCJz
dG9wZGF0YSA9IDB4JXggZGF0YV9sYW5lcz0weCV4XG4iLAorCQkJCSBzdG9wc3RhdGVkYXRhLCBk
YXRhX2xhbmVzKTsKKwogCQkJYnJlYWs7CiAJCX0KLS8vCQl1ZGVsYXkoMSk7CisKKwkJaWYgKGkg
PCAzKSB7CisJCQlEUk1fSU5GTygic3RvcGRhdGEgPSAweCV4IGRhdGFfbGFuZXM9MHgleFxuIiwK
KwkJCQkgc3RvcHN0YXRlZGF0YSwgZGF0YV9sYW5lcyk7CisJCQlEUk1fSU5GTygiTUlQSV9EUEhZ
X1NUQVQwXzRfNyA9IDB4JXgpXG4iLCB2YWwpOworCQl9CiAJfSB3aGlsZSAoc3RvcHN0YXRlZGF0
YSAhPSBkYXRhX2xhbmVzKTsKIAogCURSTV9JTkZPKCIqKioqKioqKioqIERQSFkgJWQgSU5JVCAt
ICVzICoqKioqKioqKipcbiIsCiAJCSBkcGh5X25vLCBzdGF0dXMgPyAiU1VDQ0VTUyIgOiAiRkFJ
TEVEIik7Ci0KLQlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHUzMiB3YWl0X3BsbF9sb2NrKHN0cnVj
dCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLCB1MzIgZHBoeV9ubykKK3N0YXRpYyB2b2lkIHdhaXRf
cGxsX2xvY2soc3RydWN0IGttYl9kcm1fcHJpdmF0ZSAqZGV2X3AsIHUzMiBkcGh5X25vKQogewog
CWludCBpID0gMDsKIAlpbnQgc3RhdHVzID0gMTsKIAogCWRvIHsKLQkJLypUT0RPLW5lZWQgdG8g
YWRkIGEgdGltZSBvdXQgYW5kIHJldHVybiBmYWlsdXJlICovCisJCS8qIFRPRE8tbmVlZCB0byBh
ZGQgYSB0aW1lIG91dCBhbmQgcmV0dXJuIGZhaWx1cmUgKi8KIAkJaSsrOwotCS8vCXVkZWxheSgx
KTsKIAkJaWYgKGkgPiBUSU1FT1VUKSB7CiAJCQlzdGF0dXMgPSAwOworCiAJCQlEUk1fSU5GTygi
JXM6IHRpbWluZyBvdXQiLCBfX2Z1bmNfXyk7Ci0JCQlEUk1fSU5GTygiJXMgOiBQTExfTE9DSyA9
IDB4JXhcbiIsIF9fZnVuY19fLAorCQkJRFJNX0lORk8oIiVzIDogUExMX0xPQ0sgPSAweCV4ICIs
IF9fZnVuY19fLAogCQkJCSBrbWJfcmVhZF9taXBpKGRldl9wLCBEUEhZX1BMTF9MT0NLKSk7CisK
IAkJCWJyZWFrOwogCQl9CiAKKwkJaWYgKChpICUgMTAwKSA9PSAwKQorCQkJRFJNX0lORk8oIiVz
IDogUExMX0xPQ0sgPSAweCV4XG4iLCBfX2Z1bmNfXywKKwkJCQkga21iX3JlYWRfbWlwaShkZXZf
cCwgRFBIWV9QTExfTE9DSykpOwogCX0gd2hpbGUgKCFHRVRfUExMX0xPQ0soZGV2X3AsIGRwaHlf
bm8pKTsKIAogCURSTV9JTkZPKCIqKioqKioqKioqIFBMTCBMb2NrZWQgZm9yIERQSFkgJWQgLSAl
cyAqKioqKioqKioqXG4iLAogCQkgZHBoeV9ubywgc3RhdHVzID8gIlNVQ0NFU1MiIDogIkZBSUxF
RCIpOwotCXJldHVybiAwOwogfQogCiBzdGF0aWMgdTMyIG1pcGlfdHhfaW5pdF9kcGh5KHN0cnVj
dCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLApAQCAtMTU2NywxMCArMTYwMywxMCBAQCBzdGF0aWMg
dTMyIG1pcGlfdHhfaW5pdF9kcGh5KHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAogewog
CXUzMiBkcGh5X25vID0gTUlQSV9EUEhZNjsKIAotCURSTV9JTkZPKCIlcyA6ICVkIGFjdGl2ZV9s
YW5lcz0lZCBsYW5lX3JhdGU9JWRcbiIsCi0JCSBfX2Z1bmNfXywgX19MSU5FX18sIGNmZy0+YWN0
aXZlX2xhbmVzLAorCURSTV9JTkZPKCJhY3RpdmVfbGFuZXM9JWQgbGFuZV9yYXRlPSVkXG4iLCBj
ZmctPmFjdGl2ZV9sYW5lcywKIAkJIE1JUElfVFhfTEFORV9EQVRBX1JBVEVfTUJQUyk7Ci0JLypt
dWx0aXBsZSBELVBIWXMgbmVlZGVkICovCisKKwkvKiBNdWx0aXBsZSBELVBIWXMgbmVlZGVkICov
CiAJaWYgKGNmZy0+YWN0aXZlX2xhbmVzID4gTUlQSV9EUEhZX0RfTEFORVMpIHsKIAkJLyoKIAkJ
ICpJbml0aWFsaXphdGlvbiBmb3IgVHggYWdncmVnYXRpb24gbW9kZSBpcyBkb25lIGFjY29yZGlu
ZyB0bwpAQCAtMTU5NCwxNiArMTYzMCwxNiBAQCBzdGF0aWMgdTMyIG1pcGlfdHhfaW5pdF9kcGh5
KHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAogCQkJCSAgIE1JUElfRFBIWV9TTEFWRSk7
CiAJCWRwaHlfd2FpdF9mc20oZGV2X3AsIGRwaHlfbm8gKyAxLCBEUEhZX1RYX0xPQ0spOwogCi0J
CS8qUEhZICNOIG1hc3RlciAqLworCQkvKiBQSFkgI04gbWFzdGVyICovCiAJCWRwaHlfaW5pdF9z
ZXF1ZW5jZShkZXZfcCwgY2ZnLCBkcGh5X25vLCBNSVBJX0RQSFlfRF9MQU5FUywKIAkJCQkgICBN
SVBJX0RQSFlfTUFTVEVSKTsKLQkJLyogd2FpdCBmb3IgRFBIWSBpbml0IHRvIGNvbXBsZXRlICov
CisKKwkJLyogV2FpdCBmb3IgRFBIWSBpbml0IHRvIGNvbXBsZXRlICovCiAJCXdhaXRfaW5pdF9k
b25lKGRldl9wLCBkcGh5X25vLCBNSVBJX0RQSFlfRF9MQU5FUyk7CiAJCXdhaXRfaW5pdF9kb25l
KGRldl9wLCBkcGh5X25vICsgMSwKIAkJCSAgICAgICBjZmctPmFjdGl2ZV9sYW5lcyAtIE1JUElf
RFBIWV9EX0xBTkVTKTsKIAkJd2FpdF9wbGxfbG9jayhkZXZfcCwgZHBoeV9ubyk7CiAJCXdhaXRf
cGxsX2xvY2soZGV2X3AsIGRwaHlfbm8gKyAxKTsKLS8vCQl1ZGVsYXkoMTAwMCk7CiAJCWRwaHlf
d2FpdF9mc20oZGV2X3AsIGRwaHlfbm8sIERQSFlfVFhfSURMRSk7CiAJfSBlbHNlIHsJCS8qIFNp
bmdsZSBEUEhZICovCiAJCWRwaHlfaW5pdF9zZXF1ZW5jZShkZXZfcCwgY2ZnLCBkcGh5X25vLCBj
ZmctPmFjdGl2ZV9sYW5lcywKQEAgLTE2MTYsNiArMTY1Miw1MSBAQCBzdGF0aWMgdTMyIG1pcGlf
dHhfaW5pdF9kcGh5KHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAogCXJldHVybiAwOwog
fQogCisjaWZkZWYgTUlQSV9UWF9JTklUX0lSUVMKK3N0YXRpYyB2b2lkIG1pcGlfdHhfaW5pdF9p
cnFzKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wLAorCQkJICAgICAgdW5pb24gbWlwaV9p
cnFfY2ZnICpjZmcsCisJCQkgICAgICBzdHJ1Y3QgbWlwaV90eF9jdHJsX2NmZyAqdHhfY3RybF9j
ZmcpCit7CisJdW5zaWduZWQgbG9uZyBpcnFmbGFnczsKKwl1aW50OF90IHZjOworCisJLyogQ2xl
YXIgYWxsIGludGVycnVwdHMgZmlyc3QgKi8KKwkvKiBMb2NhbCBpbnRlcnJ1cHRzICovCisJU0VU
X01JUElfVFhfSFNfSVJRX0NMRUFSKGRldl9wLCBNSVBJX0NUUkw2LCBNSVBJX1RYX0hTX0lSUV9B
TEwpOworCisJLyogR2xvYmFsIGludGVycnVwdHMgKi8KKwlTRVRfTUlQSV9DVFJMX0lSUV9DTEVB
UjAoZGV2X3AsIE1JUElfQ1RSTDYsIE1JUElfSFNfSVJRKTsKKwlTRVRfTUlQSV9DVFJMX0lSUV9D
TEVBUjAoZGV2X3AsIE1JUElfQ1RSTDYsIE1JUElfRFBIWV9FUlJfSVJRKTsKKwlTRVRfTUlQSV9D
VFJMX0lSUV9DTEVBUjEoZGV2X3AsIE1JUElfQ1RSTDYsIE1JUElfSFNfUlhfRVZFTlRfSVJRKTsK
KworCS8qIEVuYWJsZSBpbnRlcnJ1cHRzICovCisJc3Bpbl9sb2NrX2lycXNhdmUoJmRldl9wLT5p
cnFfbG9jaywgaXJxZmxhZ3MpOworCWZvciAodmMgPSAwOyB2YyA8IE1JUElfQ1RSTF9WSVJUVUFM
X0NIQU5ORUxTOyB2YysrKSB7CisJCWlmICh0eF9jdHJsX2NmZy0+ZnJhbWVzW3ZjXSA9PSBOVUxM
KQorCQkJY29udGludWU7CisKKwkJLyplbmFibGUgRlJBTUVfRE9ORSBpbnRlcnJ1cHQgaWYgVkMg
aXMgY29uZmlndXJlZCAqLworCQlTRVRfSFNfSVJRX0VOQUJMRShkZXZfcCwgTUlQSV9DVFJMNiwK
KwkJCQkgIE1JUElfVFhfSFNfSVJRX0ZSQU1FX0RPTkVfMCA8PCB2Yyk7CisKKwkJLyogT25seSBv
bmUgdmMgZm9yIExDRCBpbnRlcmZhY2UgKi8KKwkJYnJlYWs7CisJfQorCisJLyogRWVuYWJsZSB1
c2VyIGVuYWJsZWQgaW50ZXJydXB0cyAqLworCWlmIChjZmctPmlycV9jZmcuZHBoeV9lcnJvcikK
KwkJU0VUX01JUElfQ1RSTF9JUlFfRU5BQkxFMChkZXZfcCwgTUlQSV9DVFJMNiwgTUlQSV9EUEhZ
X0VSUl9JUlEpOworCWlmIChjZmctPmlycV9jZmcubGluZV9jb21wYXJlKQorCQlTRVRfSFNfSVJR
X0VOQUJMRShkZXZfcCwgTUlQSV9DVFJMNiwKKwkJCQkgIE1JUElfVFhfSFNfSVJRX0xJTkVfQ09N
UEFSRSk7CisJaWYgKGNmZy0+aXJxX2NmZy5jdHJsX2Vycm9yKQorCQlTRVRfSFNfSVJRX0VOQUJM
RShkZXZfcCwgTUlQSV9DVFJMNiwgTUlQSV9UWF9IU19JUlFfRVJST1IpOworCisJc3Bpbl91bmxv
Y2tfaXJxcmVzdG9yZSgmZGV2X3AtPmlycV9sb2NrLCBpcnFmbGFncyk7Cit9CisjZW5kaWYKKwor
I2lmZGVmIE1JUElfVFhfSEFORExFX0lSUVMKIHZvaWQgbWlwaV90eF9oYW5kbGVfaXJxcyhzdHJ1
Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCkKIHsKIAl1aW50MzJfdCBpcnFfY3RybF9zdGF0XzAs
IGhzX3N0YXQsIGhzX2VuYWJsZTsKQEAgLTE2MjMsNyArMTcwNCw4IEBAIHZvaWQgbWlwaV90eF9o
YW5kbGVfaXJxcyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCkKIAogCWlycV9jdHJsX3N0
YXRfMCA9IE1JUElfR0VUX0lSUV9TVEFUMChkZXZfcCk7CiAJaXJxX2N0cmxfZW5hYmxlZF8wID0g
TUlQSV9HRVRfSVJRX0VOQUJMRUQwKGRldl9wKTsKLQkvKm9ubHkgc2VydmljZSBlbmFibGVkIGlu
dGVycnVwdHMgKi8KKworCS8qIE9ubHkgc2VydmljZSBlbmFibGVkIGludGVycnVwdHMgKi8KIAlp
cnFfY3RybF9zdGF0XzAgJj0gaXJxX2N0cmxfZW5hYmxlZF8wOwogCiAJaWYgKGlycV9jdHJsX3N0
YXRfMCAmIE1JUElfRFBIWV9FUlJfTUFTSykgewpAQCAtMTYzNCw3ICsxNzE2LDggQEAgdm9pZCBt
aXBpX3R4X2hhbmRsZV9pcnFzKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUgKmRldl9wKQogCQloc19z
dGF0ID0gR0VUX01JUElfVFhfSFNfSVJRX1NUQVRVUyhkZXZfcCwgTUlQSV9DVFJMNik7CiAJCWhz
X2VuYWJsZSA9IEdFVF9IU19JUlFfRU5BQkxFKGRldl9wLCBNSVBJX0NUUkw2KTsKIAkJaHNfc3Rh
dCAmPSBoc19lbmFibGU7Ci0JCS8qbG9vayBmb3IgZXJyb3JzICovCisKKwkJLyogQ2hlY2sgZm9y
IGVycm9ycyAqLwogCQlpZiAoaHNfc3RhdCAmIE1JUElfVFhfSFNfSVJRX0VSUk9SKSB7CiAJCQlD
TFJfSFNfSVJRX0VOQUJMRShkZXZfcCwgTUlQSV9DVFJMNiwKIAkJCQkJICAoaHNfc3RhdCAmIE1J
UElfVFhfSFNfSVJRX0VSUk9SKSB8CkBAIC0xNjQ3LDQzICsxNzMwLDIxIEBAIHZvaWQgbWlwaV90
eF9oYW5kbGVfaXJxcyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCkKIAl9CiAKIH0KKyNl
bmRpZgogCisjaWZkZWYgTENEX1RFU1QKIHZvaWQgY29ubmVjdF9sY2RfdG9fbWlwaShzdHJ1Y3Qg
a21iX2RybV9wcml2YXRlICpkZXZfcCkKIHsKLSNpZmRlZiBMQ0RfVEVTVAotCS8qY29ubmVjdCBs
Y2QgdG8gbWlwaSAqLwotCS8qRElTQUJMRSBNSVBJLT5DSUYgQ09OTkVDVElPTiovCisJLyogRElT
QUJMRSBNSVBJLT5DSUYgQ09OTkVDVElPTiAqLwogCWttYl93cml0ZV9tc3NjYW0oZGV2X3AsIE1T
U19NSVBJX0NJRl9DRkcsIDApOwotCS8qRU5BQkxFIExDRC0+TUlQSSBDT05ORUNUSU9OICovCi0J
a21iX3dyaXRlX21zc2NhbShkZXZfcCwgTVNTX0xDRF9NSVBJX0NGRywgMSk7Ci0JLypESVNBQkxF
IExDRC0+Q0lGIExPT1BCQUNLICovCi0Ja21iX3dyaXRlX21zc2NhbShkZXZfcCwgTVNTX0xPT1BC
QUNLX0NGRywgMCk7Ci0jZW5kaWYKLX0KLQotLyoqCi0gKiBSZWFkcyBzcGVjaWZpZWQgbnVtYmVy
IG9mIGJ5dGVzIGZyb20gdGhlIGZpbGUuCi0gKgotICogQHBhcmFtIGZpbGUgICAgICAgICAtIGZp
bGUgc3RydWN0dXJlLgotICogQHBhcmFtIG9mZnNldCAgICAgICAtIG9mZnNldCBpbiB0aGUgZmls
ZS4KLSAqIEBwYXJhbSBhZGRyICAgICAgICAgLSBhZGRyZXNzIG9mIHRoZSBidWZmZXIuCi0gKiBA
cGFyYW0gY291bnQgICAgICAgIC0gc2l6ZSBvZiB0aGUgYnVmZmVyIC4KLSAqCi0gKiBAcmV0dXJu
IDAgaWYgc3VjY2VzcyBvciBlcnJvciBjb2RlLgotICovCi1pbnQga21iX2tlcm5lbF9yZWFkKHN0
cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LAotCQkgICAgY2hhciAqYWRkciwgdW5zaWdu
ZWQgbG9uZyBjb3VudCkKLXsKLQljaGFyIF9fdXNlciAqYnVmID0gKGNoYXIgX191c2VyICopYWRk
cjsKLQlzc2l6ZV90IHJldDsKIAotCWlmICghKGZpbGUtPmZfbW9kZSAmIEZNT0RFX1JFQUQpKQot
CQlyZXR1cm4gLUVCQURGOwotCi0JcmV0ID0ga2VybmVsX3JlYWQoZmlsZSwgYnVmLCBjb3VudCwg
Jm9mZnNldCk7CisJLyogRU5BQkxFIExDRC0+TUlQSSBDT05ORUNUSU9OICovCisJa21iX3dyaXRl
X21zc2NhbShkZXZfcCwgTVNTX0xDRF9NSVBJX0NGRywgMSk7CiAKLQlyZXR1cm4gcmV0OworCS8q
IERJU0FCTEUgTENELT5DSUYgTE9PUEJBQ0sgKi8KKwlrbWJfd3JpdGVfbXNzY2FtKGRldl9wLCBN
U1NfTE9PUEJBQ0tfQ0ZHLCAwKTsKIH0KKyNlbmRpZgogCiBpbnQga21iX2RzaV9od19pbml0KHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlKQogewpA
QCAtMTY5MSwzNSArMTc1MiwzOSBAQCBpbnQga21iX2RzaV9od19pbml0KHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlKQogCXU2NCBkYXRhX3JhdGU7
CiAKIAltaXBpX3R4X2luaXRfY2ZnLmFjdGl2ZV9sYW5lcyA9IE1JUElfVFhfQUNUSVZFX0xBTkVT
OworCiAJaWYgKG1vZGUgIT0gTlVMTCkgewogCQltaXBpX3R4X2ZyYW1lMF9zZWN0X2NmZy53aWR0
aF9waXhlbHMgPSBtb2RlLT5jcnRjX2hkaXNwbGF5OwogCQltaXBpX3R4X2ZyYW1lMF9zZWN0X2Nm
Zy5oZWlnaHRfbGluZXMgPSBtb2RlLT5jcnRjX3ZkaXNwbGF5OwogCQltaXBpdHhfZnJhbWUwX2Nm
Zy52c3luY193aWR0aCA9Ci0JCQltb2RlLT5jcnRjX3ZzeW5jX2VuZCAtIG1vZGUtPmNydGNfdnN5
bmNfc3RhcnQ7CisJCSAgICBtb2RlLT5jcnRjX3ZzeW5jX2VuZCAtIG1vZGUtPmNydGNfdnN5bmNf
c3RhcnQ7CiAJCW1pcGl0eF9mcmFtZTBfY2ZnLnZfYmFja3BvcmNoID0KLQkJCW1vZGUtPmNydGNf
dnRvdGFsIC0gbW9kZS0+Y3J0Y192c3luY19lbmQ7CisJCSAgICBtb2RlLT5jcnRjX3Z0b3RhbCAt
IG1vZGUtPmNydGNfdnN5bmNfZW5kOwogCQltaXBpdHhfZnJhbWUwX2NmZy52X2Zyb250cG9yY2gg
PQotCQkJbW9kZS0+Y3J0Y192c3luY19zdGFydCAtIG1vZGUtPmNydGNfdmRpc3BsYXk7CisJCSAg
ICBtb2RlLT5jcnRjX3ZzeW5jX3N0YXJ0IC0gbW9kZS0+Y3J0Y192ZGlzcGxheTsKIAkJbWlwaXR4
X2ZyYW1lMF9jZmcuaHN5bmNfd2lkdGggPQotCQkJbW9kZS0+Y3J0Y19oc3luY19lbmQgLSBtb2Rl
LT5jcnRjX2hzeW5jX3N0YXJ0OworCQkgICAgbW9kZS0+Y3J0Y19oc3luY19lbmQgLSBtb2RlLT5j
cnRjX2hzeW5jX3N0YXJ0OwogCQltaXBpdHhfZnJhbWUwX2NmZy5oX2JhY2twb3JjaCA9Ci0JCQlt
b2RlLT5jcnRjX2h0b3RhbCAtIG1vZGUtPmNydGNfaHN5bmNfZW5kOworCQkgICAgbW9kZS0+Y3J0
Y19odG90YWwgLSBtb2RlLT5jcnRjX2hzeW5jX2VuZDsKIAkJbWlwaXR4X2ZyYW1lMF9jZmcuaF9m
cm9udHBvcmNoID0KLQkJCW1vZGUtPmNydGNfaHN5bmNfc3RhcnQgLSBtb2RlLT5jcnRjX2hkaXNw
bGF5OwotCQkvKmxhbmUgcmF0ZSA9ICh2dG90YWwqaHRvdGFsKmZwcypicHApLzQgLyAxMDAwMDAw
CisJCSAgICBtb2RlLT5jcnRjX2hzeW5jX3N0YXJ0IC0gbW9kZS0+Y3J0Y19oZGlzcGxheTsKKwor
CQkvKiBMYW5lIHJhdGUgPSAodnRvdGFsKmh0b3RhbCpmcHMqYnBwKS80IC8gMTAwMDAwMAogCQkg
KiB0byBjb252ZXJ0IHRvIE1icHMKIAkJICovCi0JCURSTV9JTkZPKCJodG90YWwgPSAlZCB2dG90
YWw9JWQgcmVmcmVzaD0lZFxuIiwKLQkJCQltb2RlLT5jcnRjX2h0b3RhbCwgbW9kZS0+Y3J0Y192
dG90YWwsCi0JCQkJZHJtX21vZGVfdnJlZnJlc2gobW9kZSkpOwotCQlkYXRhX3JhdGUgPQotCQkJ
KCgoKHUzMiltb2RlLT5jcnRjX3Z0b3RhbCAqICh1MzIpbW9kZS0+Y3J0Y19odG90YWwpCi0JCQkq
ICh1MzIpKGRybV9tb2RlX3ZyZWZyZXNoKG1vZGUpKQotCQkJKiBNSVBJX1RYX0JQUCkvbWlwaV90
eF9pbml0X2NmZy5hY3RpdmVfbGFuZXMpIC8gMTAwMDAwMDsKLQkJRFJNX0lORk8oImRhdGFfcmF0
ZSA9ICVsbHUgYWN0aXZlX2xhbmVzPSVkXG4iLAotCQkJCWRhdGFfcmF0ZSwgbWlwaV90eF9pbml0
X2NmZy5hY3RpdmVfbGFuZXMpOwotCi0JCS8qd2hlbiBsYXRlIHJhdGUgPCA4MDAgLSBtb2Rlc2V0
IGZhaWxzIHdpdGggNCBsYW5lcyAtCisJCWRhdGFfcmF0ZSA9ICgoKCh1MzIpIG1vZGUtPmNydGNf
dnRvdGFsICoKKwkJCQkodTMyKSBtb2RlLT5jcnRjX2h0b3RhbCkgKgorCQkJCSh1MzIpKGRybV9t
b2RlX3ZyZWZyZXNoKG1vZGUpKSAqCisJCQkgICAgICBNSVBJX1RYX0JQUCkgLyBtaXBpX3R4X2lu
aXRfY2ZnLmFjdGl2ZV9sYW5lcykgLworCQkgICAgMTAwMDAwMDsKKworCQlEUk1fSU5GTygiaHRv
dGFsPSVkIHZ0b3RhbD0lZCByZWZyZXNoPSVkXG4iLAorCQkJIG1vZGUtPmNydGNfaHRvdGFsLCBt
b2RlLT5jcnRjX3Z0b3RhbCwKKwkJCSBkcm1fbW9kZV92cmVmcmVzaChtb2RlKSk7CisJCURSTV9J
TkZPKCJkYXRhX3JhdGU9JXUgYWN0aXZlX2xhbmVzPSVkXG4iLAorCQkJICh1MzIpIGRhdGFfcmF0
ZSwgbWlwaV90eF9pbml0X2NmZy5hY3RpdmVfbGFuZXMpOworCisJCS8qIFdoZW4gbGF0ZSByYXRl
IDwgODAwLCBtb2Rlc2V0IGZhaWxzIHdpdGggNCBsYW5lcywKIAkJICogc28gc3dpdGNoIHRvIDIg
bGFuZXMKIAkJICovCiAJCWlmIChkYXRhX3JhdGUgPCA4MDApIHsKQEAgLTE3MjksMzYgKzE3OTQs
NjIgQEAgaW50IGttYl9kc2lfaHdfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBzdHJ1Y3Qg
ZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSkKIAkJCW1pcGlfdHhfaW5pdF9jZmcubGFuZV9yYXRlX21i
cHMgPSBkYXRhX3JhdGU7CiAJCX0KIAkJRFJNX0lORk8oImxhbmUgcmF0ZT0lZFxuIiwgbWlwaV90
eF9pbml0X2NmZy5sYW5lX3JhdGVfbWJwcyk7Ci0JCURSTV9JTkZPKCJ2ZnA9ICVkIHZicD0gJWQg
dnN5Y19sZW49JWQgaGZwPSVkIGhicD0lZCBoc3luY19sZW49JWQgbGFuZS1yYXRlPSVkXG4iLAot
CQltaXBpdHhfZnJhbWUwX2NmZy52X2Zyb250cG9yY2gsIG1pcGl0eF9mcmFtZTBfY2ZnLnZfYmFj
a3BvcmNoLAotCQltaXBpdHhfZnJhbWUwX2NmZy52c3luY193aWR0aCwKLQkJbWlwaXR4X2ZyYW1l
MF9jZmcuaF9mcm9udHBvcmNoLCBtaXBpdHhfZnJhbWUwX2NmZy5oX2JhY2twb3JjaCwKLQkJbWlw
aXR4X2ZyYW1lMF9jZmcuaHN5bmNfd2lkdGgsCi0JCW1pcGlfdHhfaW5pdF9jZmcubGFuZV9yYXRl
X21icHMpOworCQlEUk1fSU5GTworCQkgICAgKCJ2ZnA9ICVkIHZicD0gJWQgdnN5Y19sZW49JWQg
aGZwPSVkIGhicD0lZCBoc3luY19sZW49JWQgbGFuZS1yYXRlPSVkIiwKKwkJICAgICBtaXBpdHhf
ZnJhbWUwX2NmZy52X2Zyb250cG9yY2gsCisJCSAgICAgbWlwaXR4X2ZyYW1lMF9jZmcudl9iYWNr
cG9yY2gsCisJCSAgICAgbWlwaXR4X2ZyYW1lMF9jZmcudnN5bmNfd2lkdGgsCisJCSAgICAgbWlw
aXR4X2ZyYW1lMF9jZmcuaF9mcm9udHBvcmNoLAorCQkgICAgIG1pcGl0eF9mcmFtZTBfY2ZnLmhf
YmFja3BvcmNoLAorCQkgICAgIG1pcGl0eF9mcmFtZTBfY2ZnLmhzeW5jX3dpZHRoLAorCQkgICAg
IG1pcGlfdHhfaW5pdF9jZmcubGFuZV9yYXRlX21icHMpOwogCiAJfQorCiAJaWYgKGh3X2luaXRp
YWxpemVkKQogCQlyZXR1cm4gMDsKKwogCWttYl93cml0ZV9taXBpKGRldl9wLCBEUEhZX0VOQUJM
RSwgMCk7CiAJa21iX3dyaXRlX21pcGkoZGV2X3AsIERQSFlfSU5JVF9DVFJMMCwgMCk7CiAJa21i
X3dyaXRlX21pcGkoZGV2X3AsIERQSFlfSU5JVF9DVFJMMSwgMCk7CiAJa21iX3dyaXRlX21pcGko
ZGV2X3AsIERQSFlfSU5JVF9DVFJMMiwgMCk7CiAKLQkvKiBpbml0aWFsaXplIG1pcGkgY29udHJv
bGxlciAqLworCS8qIEluaXRpYWxpemUgbWlwaSBjb250cm9sbGVyICovCiAJbWlwaV90eF9pbml0
X2NudHJsKGRldl9wLCAmbWlwaV90eF9pbml0X2NmZyk7Ci0JLypkLXBoeSBpbml0aWFsaXphdGlv
biAqLworCisJLyogRHBoeSBpbml0aWFsaXphdGlvbiAqLwogCW1pcGlfdHhfaW5pdF9kcGh5KGRl
dl9wLCAmbWlwaV90eF9pbml0X2NmZyk7CisJRFJNX0lORk8oIklSUV9TVEFUVVMgPSAweCV4XG4i
LAorCQkgR0VUX01JUElfVFhfSFNfSVJRX1NUQVRVUyhkZXZfcCwgTUlQSV9DVFJMNikpOworCisj
aWZkZWYgTENEX1RFU1QKIAljb25uZWN0X2xjZF90b19taXBpKGRldl9wKTsKKyNlbmRpZgorCisj
aWZkZWYgTUlQSV9UWF9JTklUX0lSUVMKKwkvKiBJUlEgaW5pdGlhbGl6YXRpb24gKi8KKwltaXBp
X3R4X2luaXRfaXJxcyhkZXZfcCwgJmludF9jZmcsICZtaXBpX3R4X2luaXRfY2ZnLnR4X2N0cmxf
Y2ZnKTsKKworCURSTV9JTkZPKCJJUlFfU1RBVFVTID0gMHgleFxuIiwKKwkJIEdFVF9NSVBJX1RY
X0hTX0lSUV9TVEFUVVMoZGV2X3AsIE1JUElfQ1RSTDYpKTsKKyNlbmRpZgorCiAjaWZkZWYgTUlQ
SV9UWF9URVNUX1BBVFRFUk5fR0VORVJBVElPTgotCW1pcGlfdHhfaHNfdHBfZ2VuKGRldl9wLCAw
LCBNSVBJX1RYX0hTX1RQX1ZfU1RSSVBFUywgMHgxNSwgMHhmZiwKLQkJCTB4ZmYwMCwgTUlQSV9D
VFJMNik7Ci0JRFJNX0lORk8oIiVzIDogJWQgSVJRX1NUQVRVUyA9IDB4JXhcbiIsIF9fZnVuY19f
LCBfX0xJTkVfXywKLQkJCUdFVF9NSVBJX1RYX0hTX0lSUV9TVEFUVVMoZGV2X3AsIE1JUElfQ1RS
TDYpKTsKKwltaXBpX3R4X2hzX3RwX2dlbihkZXZfcCwgMCwgTUlQSV9UWF9IU19UUF9WX1NUUklQ
RVMsCisJCQkgIDB4MTUsIDB4ZmYsIDB4ZmYwMCwgTUlQSV9DVFJMNik7CisKKwlEUk1fSU5GTygi
SVJRX1NUQVRVUyA9IDB4JXhcbiIsCisJCSBHRVRfTUlQSV9UWF9IU19JUlFfU1RBVFVTKGRldl9w
LCBNSVBJX0NUUkw2KSk7CiAjZW5kaWYgLy9NSVBJX1RYX1RFU1RfUEFUVEVSTl9HRU5FUkFUSU9O
CiAKIAlod19pbml0aWFsaXplZCA9IHRydWU7Ci0JRFJNX0lORk8oIiVzIDogJWQgbWlwaSBod19p
bml0aWFsaXplZCA9ICVkXG4iLCBfX2Z1bmNfXywgX19MSU5FX18sCi0JCSBod19pbml0aWFsaXpl
ZCk7CisKKwlEUk1fSU5GTygiTUlQSV9UWG1fSFNfQ1RSTCA9IDB4JXhcbiIsCisJCSBrbWJfcmVh
ZF9taXBpKGRldl9wLCBNSVBJX1RYbV9IU19DVFJMKDYpKSk7CisJRFJNX0lORk8oIk1JUEkgTE9P
UCBCQUNLID0gJXhcbiIsCisJCSBrbWJfcmVhZF9taXBpKGRldl9wLCBNSVBJX0NUUkxfRElHX0xP
T1BCQUNLKSk7CisJRFJNX0lORk8oIm1pcGkgaHdfaW5pdGlhbGl6ZWQgPSAlZFxuIiwgaHdfaW5p
dGlhbGl6ZWQpOworCiAJcmV0dXJuIDA7CiB9CiAKQEAgLTE3NzcsNyArMTg2OCw2IEBAIGludCBr
bWJfZHNpX2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgc3RydWN0IGRybV9icmlkZ2UgKmJy
aWRnZSkKIAkJcmV0dXJuIC1FTk9NRU07CiAJfQogCi0JRFJNX0lORk8oIiVzIDogJWRcbiIsIF9f
ZnVuY19fLCBfX0xJTkVfXyk7CiAJa21iX2Nvbm5lY3RvciA9IGt6YWxsb2Moc2l6ZW9mKCprbWJf
Y29ubmVjdG9yKSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFrbWJfY29ubmVjdG9yKSB7CiAJCWtmcmVl
KGttYl9kc2kpOwpAQCAtMTc4OSwzOCArMTg3OSw0MiBAQCBpbnQga21iX2RzaV9pbml0KHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fYnJpZGdlICpicmlkZ2UpCiAKIAlob3N0ID0g
a21iX2RzaV9ob3N0X2luaXQoZGV2LCBrbWJfZHNpKTsKIAlpZiAoIWhvc3QpIHsKLQkJRFJNX0VS
Uk9SKCJGYWlsZSB0byBhbGxvY2F0ZSBob3N0XG4iKTsKKwkJRFJNX0VSUk9SKCJGYWlsZWQgdG8g
YWxsb2NhdGUgaG9zdFxuIik7CiAJCWtmcmVlKGttYl9kc2kpOwogCQlrZnJlZShrbWJfY29ubmVj
dG9yKTsKIAkJcmV0dXJuIC1FTk9NRU07CiAJfQorCiAJa21iX2RzaS0+ZHNpX2hvc3QgPSBob3N0
OwogCWNvbm5lY3RvciA9ICZrbWJfY29ubmVjdG9yLT5iYXNlOwogCWVuY29kZXIgPSAma21iX2Rz
aS0+YmFzZTsKIAllbmNvZGVyLT5wb3NzaWJsZV9jcnRjcyA9IDE7CiAJZW5jb2Rlci0+cG9zc2li
bGVfY2xvbmVzID0gMDsKKwogCWRybV9lbmNvZGVyX2luaXQoZGV2LCBlbmNvZGVyLCAma21iX2Rz
aV9mdW5jcywgRFJNX01PREVfRU5DT0RFUl9EU0ksCiAJCQkgIk1JUEktRFNJIik7CiAKIAlkcm1f
Y29ubmVjdG9yX2luaXQoZGV2LCBjb25uZWN0b3IsICZrbWJfZHNpX2Nvbm5lY3Rvcl9mdW5jcywK
IAkJCSAgIERSTV9NT0RFX0NPTk5FQ1RPUl9EU0kpOworCiAJZHJtX2Nvbm5lY3Rvcl9oZWxwZXJf
YWRkKGNvbm5lY3RvciwgJmttYl9kc2lfY29ubmVjdG9yX2hlbHBlcl9mdW5jcyk7CiAKLQlEUk1f
SU5GTygiJXMgOiAlZCBjb25uZWN0b3IgPSAlcyBlbmNvZGVyID0gJXNcbiIsIF9fZnVuY19fLAot
CQkgX19MSU5FX18sIGNvbm5lY3Rvci0+bmFtZSwgZW5jb2Rlci0+bmFtZSk7CisJRFJNX0lORk8o
ImNvbm5lY3RvciA9ICVzIGVuY29kZXIgPSAlc1xuIiwgY29ubmVjdG9yLT5uYW1lLAorCQkgZW5j
b2Rlci0+bmFtZSk7CiAKIAlyZXQgPSBkcm1fY29ubmVjdG9yX2F0dGFjaF9lbmNvZGVyKGNvbm5l
Y3RvciwgZW5jb2Rlcik7CisJRFJNX0lORk8oImNvbm5lY3Rvci0+ZW5jb2RlciA9IDB4JXAgcmV0
ID0gJWRcbiIsIGNvbm5lY3Rvci0+ZW5jb2RlciwKKwkJIHJldCk7CiAKLQkvKiBMaW5rIGRybV9i
cmlkZ2UgdG8gZW5jb2RlciAqLwogI2lmbmRlZiBGQ0NURVNUCisJLyogTGluayBkcm1fYnJpZGdl
IHRvIGVuY29kZXIgKi8KIAlyZXQgPSBkcm1fYnJpZGdlX2F0dGFjaChlbmNvZGVyLCBicmlkZ2Us
IE5VTEwsIDApOwogCWlmIChyZXQpIHsKIAkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gYXR0YWNoIGJy
aWRnZSB0byBNSVBJXG4iKTsKIAkJZHJtX2VuY29kZXJfY2xlYW51cChlbmNvZGVyKTsKIAkJcmV0
dXJuIHJldDsKIAl9Ci0KLQlEUk1fSU5GTygiJXMgOiAlZCBCcmlkZ2UgYXR0YWNoZWQgOiBTVUND
RVNTXG4iLCBfX2Z1bmNfXywgX19MSU5FX18pOworCURSTV9JTkZPKCJCcmlkZ2UgYXR0YWNoZWQg
OiBTVUNDRVNTXG4iKTsKICNlbmRpZgogCiAjaWZkZWYgRkNDVEVTVApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2ttYi9rbWJfZHNpLmggYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2ku
aAppbmRleCA3ODU3NTc2Li5kMmJlYWY0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0va21i
L2ttYl9kc2kuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9kc2kuaApAQCAtMTEsNiAr
MTEsNjAgQEAKICNpbmNsdWRlIDxkcm0vZHJtX21vZGVzLmg+CiAjaW5jbHVkZSAia21iX2Rydi5o
IgogCisvKiBNSVBJIFRYIENGRyovCisjZGVmaW5lIE1JUElfVFhfTEFORV9EQVRBX1JBVEVfTUJQ
UyA4OTEKKyNkZWZpbmUgTUlQSV9UWF9SRUZfQ0xLX0tIWiAgICAgICAgIDI0MDAwCisjZGVmaW5l
IE1JUElfVFhfQ0ZHX0NMS19LSFogICAgICAgICAyNDAwMAorI2RlZmluZSBNSVBJX1RYX0JQUAkJ
ICAgIDI0CisKKy8qIERQSFkgVHggdGVzdCBjb2RlcyovCisjZGVmaW5lIFRFU1RfQ09ERV9GU01f
Q09OVFJPTAkJCQkweDAzCisjZGVmaW5lIFRFU1RfQ09ERV9NVUxUSVBMRV9QSFlfQ1RSTAkJCTB4
MEMKKyNkZWZpbmUgVEVTVF9DT0RFX1BMTF9QUk9QT1JUSU9OQUxfQ0hBUkdFX1BVTVBfQ1RSTAkw
eDBFCisjZGVmaW5lIFRFU1RfQ09ERV9QTExfSU5URUdSQUxfQ0hBUkdFX1BVTVBfQ1RSTAkJMHgw
RgorI2RlZmluZSBURVNUX0NPREVfUExMX1ZDT19DVFJMCQkJCTB4MTIKKyNkZWZpbmUgVEVTVF9D
T0RFX1BMTF9HTVBfQ1RSTAkJCQkweDEzCisjZGVmaW5lIFRFU1RfQ09ERV9QTExfUEhBU0VfRVJS
X0NUUkwJCQkweDE0CisjZGVmaW5lIFRFU1RfQ09ERV9QTExfTE9DS19GSUxURVIJCQkweDE1Cisj
ZGVmaW5lIFRFU1RfQ09ERV9QTExfVU5MT0NLX0ZJTFRFUgkJCTB4MTYKKyNkZWZpbmUgVEVTVF9D
T0RFX1BMTF9JTlBVVF9ESVZJREVSCQkJMHgxNworI2RlZmluZSBURVNUX0NPREVfUExMX0ZFRURC
QUNLX0RJVklERVIJCQkweDE4CisjZGVmaW5lICAgUExMX0ZFRURCQUNLX0RJVklERVJfSElHSAkJ
CSgxIDw8IDcpCisjZGVmaW5lIFRFU1RfQ09ERV9QTExfT1VUUFVUX0NMS19TRUwJCQkweDE5Cisj
ZGVmaW5lICAgUExMX05fT1ZSX0VOCQkJCQkoMSA8PCA0KQorI2RlZmluZSAgIFBMTF9NX09WUl9F
TgkJCQkJKDEgPDwgNSkKKyNkZWZpbmUgVEVTVF9DT0RFX1ZPRF9MRVZFTAkJCQkweDI0CisjZGVm
aW5lIFRFU1RfQ09ERV9QTExfQ0hBUkdFX1BVTVBfQklBUwkJCTB4MUMKKyNkZWZpbmUgVEVTVF9D
T0RFX1BMTF9MT0NLX0RFVEVDVE9SCQkJMHgxRAorI2RlZmluZSBURVNUX0NPREVfSFNfRlJFUV9S
QU5HRV9DRkcJCQkweDQ0CisjZGVmaW5lIFRFU1RfQ09ERV9QTExfQU5BTE9HX1BST0cJCQkweDFG
CisjZGVmaW5lIFRFU1RfQ09ERV9TTEVXX1JBVEVfT1ZFUlJJREVfQ1RSTAkJMHhBMAorI2RlZmlu
ZSBURVNUX0NPREVfU0xFV19SQVRFX0RETF9MT09QX0NUUkwJCTB4QTMKKyNkZWZpbmUgVEVTVF9D
T0RFX1NMRVdfUkFURV9ERExfQ1lDTEVTCQkJMHhBNAorCisvKiBEUEhZIHBhcmFtcyAqLworI2Rl
ZmluZSBQTExfTl9NSU4JMAorI2RlZmluZSBQTExfTl9NQVgJMTUKKyNkZWZpbmUgUExMX01fTUlO
CTYyCisjZGVmaW5lIFBMTF9NX01BWAk2MjMKKyNkZWZpbmUgUExMX0ZWQ09fTUFYCTEyNTAKKwor
I2RlZmluZSBUSU1FT1VUCQk2MDAKKworI2RlZmluZSBNSVBJX1RYX0ZSQU1FX0dFTgkJCQk0Cisj
ZGVmaW5lIE1JUElfVFhfRlJBTUVfR0VOX1NFQ1RJT05TCQkJNAorI2RlZmluZSBNSVBJX0NUUkxf
VklSVFVBTF9DSEFOTkVMUwkJCTQKKyNkZWZpbmUgTUlQSV9EX0xBTkVTX1BFUl9EUEhZCQkJCTIK
KyNkZWZpbmUgTUlQSV9DVFJMXzJMQU5FX01BWF9NQ19GSUZPX0xPQwkJCTI1NQorI2RlZmluZSBN
SVBJX0NUUkxfNExBTkVfTUFYX01DX0ZJRk9fTE9DCQkJNTExCisvKiAyIERhdGEgTGFuZXMgcGVy
IEQtUEhZICovCisjZGVmaW5lIE1JUElfRFBIWV9EX0xBTkVTCQkJCTIKKyNkZWZpbmUgTUlQSV9E
UEhZX0RFRkFVTFRfQklUX1JBVEVTCQkJNjMKKworI2RlZmluZSB0b19rbWJfY29ubmVjdG9yKHgp
IGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2Nvbm5lY3RvciwgYmFzZSkKKyNkZWZpbmUgdG9f
a21iX2hvc3QoeCkgY29udGFpbmVyX29mKHgsIHN0cnVjdCBrbWJfZHNpX2hvc3QsIGJhc2UpCisj
ZGVmaW5lIHRvX2ttYl9kc2koeCkgY29udGFpbmVyX29mKHgsIHN0cnVjdCBrbWJfZHNpLCBiYXNl
KQorCiBzdHJ1Y3Qga21iX2Nvbm5lY3RvcjsKIHN0cnVjdCBrbWJfZHNpX2hvc3Q7CiAKQEAgLTMz
LDE2ICs4Nyw3IEBAIHN0cnVjdCBrbWJfY29ubmVjdG9yIHsKIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlf
bW9kZSAqZml4ZWRfbW9kZTsKIH07CiAKLSNkZWZpbmUgTUlQSV9UWF9GUkFNRV9HRU4JNAotI2Rl
ZmluZSBNSVBJX1RYX0ZSQU1FX0dFTl9TRUNUSU9OUyA0Ci0jZGVmaW5lIE1JUElfQ1RSTF9WSVJU
VUFMX0NIQU5ORUxTIDQKLSNkZWZpbmUgTUlQSV9EX0xBTkVTX1BFUl9EUEhZCTIKLSNkZWZpbmUg
TUlQSV9DVFJMXzJMQU5FX01BWF9NQ19GSUZPX0xPQwkyNTUKLSNkZWZpbmUgTUlQSV9DVFJMXzRM
QU5FX01BWF9NQ19GSUZPX0xPQwk1MTEKLSNkZWZpbmUgTUlQSV9EUEhZX0RfTEFORVMJCTIgIC8q
IDIgRGF0YSBMYW5lcyBwZXIgRC1QSFkqLwotI2RlZmluZSBNSVBJX0RQSFlfREVGQVVMVF9CSVRf
UkFURVMgNjMKLQotLypEUEhZIFR4IHRlc3QgY29kZXMgKi8KKy8qIERQSFkgVHggdGVzdCBjb2Rl
cyAqLwogCiBlbnVtIG1pcGlfY3RybF9udW0gewogCU1JUElfQ1RSTDAgPSAwLApAQCAtMjMyLDcg
KzI3Nyw3IEBAIHN0cnVjdCBtaXBpX3R4X2RzaV9jZmcgewogc3RydWN0IG1pcGlfdHhfZnJhbWVf
c2VjdGlvbl9jZmcgewogCXVpbnQzMl90IGRtYV92X3N0cmlkZTsKIAl1aW50MTZfdCBkbWFfdl9z
Y2FsZV9jZmc7Ci0JdWludDE2X3Qgd2lkdGhfcGl4ZWxzOwkvKiAgRnJhbWUgd2lkdGggKi8KKwl1
aW50MTZfdCB3aWR0aF9waXhlbHM7CiAJdWludDE2X3QgaGVpZ2h0X2xpbmVzOwogCXVpbnQ4X3Qg
ZG1hX3BhY2tlZDsKIAl1aW50OF90IGJwcDsKQEAgLTMwNCwxNSArMzQ5LDE1IEBAIHN0cnVjdCBt
aXBpX2N0cmxfY2ZnIHsKIAlzdHJ1Y3QgbWlwaV90eF9jdHJsX2NmZyB0eF9jdHJsX2NmZzsKIH07
CiAKLS8qc3RydWN0dXJlIGZvciBzdG9yaW5nIHVzZXIgc3BlY2lmaWVkIGludGVycnVwdHMgdGhh
dCBhcmUgZW5hYmxlZCAqLworLyogU3RydWN0dXJlIGZvciBzdG9yaW5nIHVzZXIgc3BlY2lmaWVk
IGludGVycnVwdHMgdGhhdCBhcmUgZW5hYmxlZCAqLwogdW5pb24gbWlwaV9pcnFfY2ZnIHsKIAl1
aW50OF90IHZhbHVlOwogCXN0cnVjdCB7Ci0JCXVpbnQ4X3QgbGluZV9jb21wYXJlIDogMTsKLQkJ
dWludDhfdCBkbWFfZXZlbnQgOiAxOwotCQl1aW50OF90IGZyYW1lX2RvbmUgOiAxOwotCQl1aW50
OF90IGN0cmxfZXJyb3IgOiAxOwotCQl1aW50OF90IGRwaHlfZXJyb3IgOiAxOworCQl1aW50OF90
IGxpbmVfY29tcGFyZToxOworCQl1aW50OF90IGRtYV9ldmVudDoxOworCQl1aW50OF90IGZyYW1l
X2RvbmU6MTsKKwkJdWludDhfdCBjdHJsX2Vycm9yOjE7CisJCXVpbnQ4X3QgZHBoeV9lcnJvcjox
OwogCX0gaXJxX2NmZzsKIH07CiAKQEAgLTMyMiw5ICszNjcsNCBAQCB2b2lkIGttYl9wbGFuZV9k
ZXN0cm95KHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lKTsKIHZvaWQgbWlwaV90eF9oYW5kbGVfaXJx
cyhzdHJ1Y3Qga21iX2RybV9wcml2YXRlICpkZXZfcCk7CiB2b2lkIGttYl9kc2lfaG9zdF91bnJl
Z2lzdGVyKHZvaWQpOwogaW50IGttYl9kc2lfaHdfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSk7Ci0KLSNkZWZpbmUgdG9fa21iX2Nvbm5l
Y3Rvcih4KSBjb250YWluZXJfb2YoeCwgc3RydWN0IGttYl9jb25uZWN0b3IsIGJhc2UpCi0jZGVm
aW5lIHRvX2ttYl9ob3N0KHgpIGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2RzaV9ob3N0LCBi
YXNlKQotI2RlZmluZSB0b19rbWJfZHNpKHgpIGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX2Rz
aSwgYmFzZSkKLQogI2VuZGlmIC8qIF9fS01CX0RTSV9IX18gKi8KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9rbWIva21iX3BsYW5lLmMgYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9wbGFu
ZS5jCmluZGV4IGJmOTM5ODYuLmY5MmUxOTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9r
bWIva21iX3BsYW5lLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfcGxhbmUuYwpAQCAt
MjEsNjcgKzIxLDYgQEAKICNpbmNsdWRlICJrbWJfcGxhbmUuaCIKICNpbmNsdWRlICJrbWJfcmVn
cy5oIgogCi0vKiBncmFwaGljcyBsYXllciAoIGxheWVycyAyICYgMykgZm9ybWF0cywgb25seSBw
YWNrZWQgZm9ybWF0cyAgYXJlIHN1cHBvcnRlZCovCi1zdGF0aWMgY29uc3QgdTMyIGttYl9mb3Jt
YXRzX2dbXSA9IHsKLQlEUk1fRk9STUFUX1JHQjMzMiwKLQlEUk1fRk9STUFUX1hSR0I0NDQ0LCBE
Uk1fRk9STUFUX1hCR1I0NDQ0LAotCURSTV9GT1JNQVRfQVJHQjQ0NDQsIERSTV9GT1JNQVRfQUJH
UjQ0NDQsCi0JRFJNX0ZPUk1BVF9YUkdCMTU1NSwgRFJNX0ZPUk1BVF9YQkdSMTU1NSwKLQlEUk1f
Rk9STUFUX0FSR0IxNTU1LCBEUk1fRk9STUFUX0FCR1IxNTU1LAotCURSTV9GT1JNQVRfUkdCNTY1
LCBEUk1fRk9STUFUX0JHUjU2NSwKLQlEUk1fRk9STUFUX1JHQjg4OCwgRFJNX0ZPUk1BVF9CR1I4
ODgsCi0JRFJNX0ZPUk1BVF9YUkdCODg4OCwgRFJNX0ZPUk1BVF9YQkdSODg4OCwKLQlEUk1fRk9S
TUFUX0FSR0I4ODg4LCBEUk1fRk9STUFUX0FCR1I4ODg4LAotfTsKLQotI2RlZmluZSBNQVhfRk9S
TUFUX0cJKEFSUkFZX1NJWkUoa21iX2Zvcm1hdHNfZykpCi0jZGVmaW5lIE1BWF9GT1JNQVRfVgko
QVJSQVlfU0laRShrbWJfZm9ybWF0c192KSkKLQotLyogdmlkZW8gbGF5ZXIgKCAwICYgMSkgZm9y
bWF0cywgcGFja2VkIGFuZCBwbGFuYXIgZm9ybWF0cyBhcmUgc3VwcG9ydGVkICovCi1zdGF0aWMg
Y29uc3QgdTMyIGttYl9mb3JtYXRzX3ZbXSA9IHsKLQkvKiBwYWNrZWQgZm9ybWF0cyAqLwotCURS
TV9GT1JNQVRfUkdCMzMyLAotCURSTV9GT1JNQVRfWFJHQjQ0NDQsIERSTV9GT1JNQVRfWEJHUjQ0
NDQsCi0JRFJNX0ZPUk1BVF9BUkdCNDQ0NCwgRFJNX0ZPUk1BVF9BQkdSNDQ0NCwKLQlEUk1fRk9S
TUFUX1hSR0IxNTU1LCBEUk1fRk9STUFUX1hCR1IxNTU1LAotCURSTV9GT1JNQVRfQVJHQjE1NTUs
IERSTV9GT1JNQVRfQUJHUjE1NTUsCi0JRFJNX0ZPUk1BVF9SR0I1NjUsIERSTV9GT1JNQVRfQkdS
NTY1LAotCURSTV9GT1JNQVRfUkdCODg4LCBEUk1fRk9STUFUX0JHUjg4OCwKLQlEUk1fRk9STUFU
X1hSR0I4ODg4LCBEUk1fRk9STUFUX1hCR1I4ODg4LAotCURSTV9GT1JNQVRfQVJHQjg4ODgsIERS
TV9GT1JNQVRfQUJHUjg4ODgsCi0JLypwbGFuYXIgZm9ybWF0cyAqLwotCURSTV9GT1JNQVRfWVVW
NDIwLCBEUk1fRk9STUFUX1lWVTQyMCwKLQlEUk1fRk9STUFUX1lVVjQyMiwgRFJNX0ZPUk1BVF9Z
VlU0MjIsCi0JRFJNX0ZPUk1BVF9ZVVY0NDQsIERSTV9GT1JNQVRfWVZVNDQ0LAotCURSTV9GT1JN
QVRfTlYxMiwgRFJNX0ZPUk1BVF9OVjIxLAotfTsKLQotI2RlZmluZSBMQ0RfSU5UX1ZMMF9FUlIg
KExBWUVSMF9ETUFfRklGT19VTkRFUkZMT1cgfCBcCi0JCQlMQVlFUjBfRE1BX0ZJRk9fT1ZFUkZM
T1cgfCBcCi0JCQlMQVlFUjBfRE1BX0NCX0ZJRk9fT1ZFUkZMT1cgfCBcCi0JCQlMQVlFUjBfRE1B
X0NCX0ZJRk9fVU5ERVJGTE9XIHwgXAotCQkJTEFZRVIwX0RNQV9DUl9GSUZPX09WRVJGTE9XIHwg
XAotCQkJTEFZRVIwX0RNQV9DUl9GSUZPX1VOREVSRkxPVykKLQotI2RlZmluZSBMQ0RfSU5UX1ZM
MV9FUlIgKExBWUVSMV9ETUFfRklGT19VTkRFUkZMT1cgfCBcCi0JCQlMQVlFUjFfRE1BX0ZJRk9f
T1ZFUkZMT1cgfCBcCi0JCQlMQVlFUjFfRE1BX0NCX0ZJRk9fT1ZFUkZMT1cgfCBcCi0JCQlMQVlF
UjFfRE1BX0NCX0ZJRk9fVU5ERVJGTE9XIHwgXAotCQkJTEFZRVIxX0RNQV9DUl9GSUZPX09WRVJG
TE9XIHwgXAotCQkJTEFZRVIxX0RNQV9DUl9GSUZPX1VOREVSRkxPVykKLQotI2RlZmluZSBMQ0Rf
SU5UX0dMMF9FUlIgKExBWUVSMl9ETUFfRklGT19PVkVSRkxPVyB8IExBWUVSMl9ETUFfRklGT19V
TkRFUkZMT1cpCi0KLSNkZWZpbmUgTENEX0lOVF9HTDFfRVJSIChMQVlFUjNfRE1BX0ZJRk9fT1ZF
UkZMT1cgfCBMQVlFUjNfRE1BX0ZJRk9fVU5ERVJGTE9XKQotCi0jZGVmaW5lIExDRF9JTlRfVkww
IChMQVlFUjBfRE1BX0RPTkUgfCBMQVlFUjBfRE1BX0lETEUgfCBMQ0RfSU5UX1ZMMF9FUlIpCi0K
LSNkZWZpbmUgTENEX0lOVF9WTDEgKExBWUVSMV9ETUFfRE9ORSB8IExBWUVSMV9ETUFfSURMRSB8
IExDRF9JTlRfVkwxX0VSUikKLQotI2RlZmluZSBMQ0RfSU5UX0dMMCAoTEFZRVIyX0RNQV9ET05F
IHwgTEFZRVIyX0RNQV9JRExFIHwgTENEX0lOVF9HTDBfRVJSKQotCi0jZGVmaW5lIExDRF9JTlRf
R0wxIChMQVlFUjNfRE1BX0RPTkUgfCBMQVlFUjNfRE1BX0lETEUgfCBMQ0RfSU5UX0dMMV9FUlIp
Ci0KIGNvbnN0IHVpbnQzMl90IGxheWVyX2lycXNbXSA9IHsKIAlMQ0RfSU5UX1ZMMCwKIAlMQ0Rf
SU5UX1ZMMSwKQEAgLTg5LDE2ICsyOCw2IEBAIGNvbnN0IHVpbnQzMl90IGxheWVyX2lycXNbXSA9
IHsKIAlMQ0RfSU5UX0dMMQogfTsKIAotLypDb252ZXJzaW9uICh5dXYtPnJnYikgbWF0cml4IGZy
b20gbXlyaWFkeCAqLwotc3RhdGljIGNvbnN0IHUzMiBjc2NfY29lZl9sY2RbXSA9IHsKLQkxMDI0
LCAwLCAxNDM2LAotCTEwMjQsIC0zNTIsIC03MzEsCi0JMTAyNCwgMTgxNCwgMCwKLQktMTc5LCAx
MjUsIC0yMjYKLX07Ci0KLS8qcGxhbmUgaW5pdGlhbGl6YXRpb24gc3RhdHVzICovCi0KIHN0YXRp
YyB1bnNpZ25lZCBpbnQgY2hlY2tfcGl4ZWxfZm9ybWF0KHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5l
LCB1MzIgZm9ybWF0KQogewogCWludCBpOwpAQCAtMTE3LDcgKzQ2LDYgQEAgc3RhdGljIGludCBr
bWJfcGxhbmVfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lLAogCWludCByZXQ7
CiAKIAlmYiA9IHN0YXRlLT5mYjsKLQogCWlmICghZmIgfHwgIXN0YXRlLT5jcnRjKQogCQlyZXR1
cm4gMDsKIApAQCAtMjQ5LDcgKzE3Nyw2IEBAIHVuc2lnbmVkIGludCBzZXRfcGl4ZWxfZm9ybWF0
KHUzMiBmb3JtYXQpCiAJCXZhbCA9IExDRF9MQVlFUl9GT1JNQVRfUkdCQTg4ODg7CiAJCWJyZWFr
OwogCX0KLQlEUk1fSU5GTygiJXMgOiAlZCBsYXllciBmb3JtYXQgdmFsPSVkXG4iLCBfX2Z1bmNf
XywgX19MSU5FX18sIHZhbCk7CiAJcmV0dXJuIHZhbDsKIH0KIApAQCAtMjgwLDE0ICsyMDcsMTQg
QEAgdW5zaWduZWQgaW50IHNldF9iaXRzX3Blcl9waXhlbChjb25zdCBzdHJ1Y3QgZHJtX2Zvcm1h
dF9pbmZvICpmb3JtYXQpCiAJCWJyZWFrOwogCX0KIAotCURSTV9JTkZPKCIlcyA6ICVkIGJwcD0l
ZCB2YWw9JWRcbiIsIF9fZnVuY19fLCBfX0xJTkVfXywgYnBwLCB2YWwpOworCURSTV9ERUJVRygi
YnBwPSVkIHZhbD0weCV4XG4iLCBicHAsIHZhbCk7CiAJcmV0dXJuIHZhbDsKIH0KIAogI2lmZGVm
IExDRF9URVNUCiBzdGF0aWMgdm9pZCBjb25maWdfY3NjKHN0cnVjdCBrbWJfZHJtX3ByaXZhdGUg
KmRldl9wLCBpbnQgcGxhbmVfaWQpCiB7Ci0JLypZVVYgdG8gUkdCIGNvbnZlcnNpb24gdXNpbmcg
dGhlIGZpeGVkIG1hdHJpeCBjc2NfY29lZl9sY2QgKi8KKwkvKiBZVVYgdG8gUkdCIGNvbnZlcnNp
b24gdXNpbmcgdGhlIGZpeGVkIG1hdHJpeCBjc2NfY29lZl9sY2QgKi8KIAlrbWJfd3JpdGVfbGNk
KGRldl9wLCBMQ0RfTEFZRVJuX0NTQ19DT0VGRjExKHBsYW5lX2lkKSwgY3NjX2NvZWZfbGNkWzBd
KTsKIAlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0NTQ19DT0VGRjEyKHBsYW5lX2lk
KSwgY3NjX2NvZWZfbGNkWzFdKTsKIAlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0NT
Q19DT0VGRjEzKHBsYW5lX2lkKSwgY3NjX2NvZWZfbGNkWzJdKTsKQEAgLTMzOCw5ICsyNjUsOCBA
QCBzdGF0aWMgdm9pZCBrbWJfcGxhbmVfYXRvbWljX3VwZGF0ZShzdHJ1Y3QgZHJtX3BsYW5lICpw
bGFuZSwKIAljcnRjX3ggPSBwbGFuZS0+c3RhdGUtPmNydGNfeDsKIAljcnRjX3kgPSBwbGFuZS0+
c3RhdGUtPmNydGNfeTsKIAotCURSTV9ERUJVRwotCSAgICAoIiVzIDogJWQgc3JjX3c9JWQgc3Jj
X2g9JWQsIGZiLT5mb3JtYXQtPmZvcm1hdD0weCV4IGZiLT5mbGFncz0weCV4IiwKLQkgICAgIF9f
ZnVuY19fLCBfX0xJTkVfXywgc3JjX3csIHNyY19oLCBmYi0+Zm9ybWF0LT5mb3JtYXQsIGZiLT5m
bGFncyk7CisJRFJNX0RFQlVHKCJzcmNfdz0lZCBzcmNfaD0lZCwgZmItPmZvcm1hdC0+Zm9ybWF0
PTB4JXggZmItPmZsYWdzPTB4JXhcbiIsCisJCSAgc3JjX3csIHNyY19oLCBmYi0+Zm9ybWF0LT5m
b3JtYXQsIGZiLT5mbGFncyk7CiAKIAl3aWR0aCA9IGZiLT53aWR0aDsKIAloZWlnaHQgPSBmYi0+
aGVpZ2h0OwpAQCAtMzQ4LDM4ICsyNzQsNDEgQEAgc3RhdGljIHZvaWQga21iX3BsYW5lX2F0b21p
Y191cGRhdGUoc3RydWN0IGRybV9wbGFuZSAqcGxhbmUsCiAJRFJNX0RFQlVHKCIlcyA6ICVkIGRt
YV9sZW49JWQgIiwgX19mdW5jX18sIF9fTElORV9fLCBkbWFfbGVuKTsKIAlrbWJfd3JpdGVfbGNk
KGRldl9wLCBMQ0RfTEFZRVJuX0RNQV9MRU4ocGxhbmVfaWQpLCBkbWFfbGVuKTsKIAlrbWJfd3Jp
dGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0RNQV9MRU5fU0hBRE9XKHBsYW5lX2lkKSwgZG1hX2xl
bik7Ci0KIAlrbWJfd3JpdGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0RNQV9MSU5FX1ZTVFJJREUo
cGxhbmVfaWQpLAogCQkgICAgICBmYi0+cGl0Y2hlc1swXSk7CiAJa21iX3dyaXRlX2xjZChkZXZf
cCwgTENEX0xBWUVSbl9ETUFfTElORV9XSURUSChwbGFuZV9pZCksCiAJCSAgICAgICh3aWR0aCAq
IGZiLT5mb3JtYXQtPmNwcFswXSkpOwogCiAJYWRkcltZX1BMQU5FXSA9IGRybV9mYl9jbWFfZ2V0
X2dlbV9hZGRyKGZiLCBwbGFuZS0+c3RhdGUsIDApOwotCWRldl9wLT5mYl9hZGRyID0gKGRtYV9h
ZGRyX3QpIGFkZHI7CisJZGV2X3AtPmZiX2FkZHIgPSBhZGRyW1lfUExBTkVdOwogCWttYl93cml0
ZV9sY2QoZGV2X3AsIExDRF9MQVlFUm5fRE1BX1NUQVJUX0FERFIocGxhbmVfaWQpLAogCQkgICAg
ICBhZGRyW1lfUExBTkVdICsgZmItPm9mZnNldHNbMF0pOwotCS8qcHJvZ3JhbSBDYi9DciBmb3Ig
cGxhbmFyIGZvcm1hdHMgKi8KKwkvKiBQcm9ncmFtIENiL0NyIGZvciBwbGFuYXIgZm9ybWF0cyAq
LwogCWlmIChudW1fcGxhbmVzID4gMSkgewogCQlpZiAoZmItPmZvcm1hdC0+Zm9ybWF0ID09IERS
TV9GT1JNQVRfWVVWNDIwIHx8CiAJCSAgICBmYi0+Zm9ybWF0LT5mb3JtYXQgPT0gRFJNX0ZPUk1B
VF9ZVlU0MjApCiAJCQl3aWR0aCAvPSAyOwotCQlrbWJfd3JpdGVfbGNkKGRldl9wLAotCQkJICAg
ICAgTENEX0xBWUVSbl9ETUFfQ0JfTElORV9WU1RSSURFKHBsYW5lX2lkKSwKKworCQlrbWJfd3Jp
dGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0RNQV9DQl9MSU5FX1ZTVFJJREUocGxhbmVfaWQpLAog
CQkJICAgICAgZmItPnBpdGNoZXNbTEFZRVJfMV0pOwotCQlrbWJfd3JpdGVfbGNkKGRldl9wLAot
CQkJICAgICAgTENEX0xBWUVSbl9ETUFfQ0JfTElORV9XSURUSChwbGFuZV9pZCksCisKKwkJa21i
X3dyaXRlX2xjZChkZXZfcCwgTENEX0xBWUVSbl9ETUFfQ0JfTElORV9XSURUSChwbGFuZV9pZCks
CiAJCQkgICAgICAod2lkdGggKiBmYi0+Zm9ybWF0LT5jcHBbMF0pKTsKKwogCQlhZGRyW1VfUExB
TkVdID0gZHJtX2ZiX2NtYV9nZXRfZ2VtX2FkZHIoZmIsIHBsYW5lLT5zdGF0ZSwKIAkJCQkJCQlV
X1BMQU5FKTsKIAkJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX0xBWUVSbl9ETUFfU1RBUlRfQ0Jf
QURSKHBsYW5lX2lkKSwKIAkJCSAgICAgIGFkZHJbVV9QTEFORV0pOworCiAJCWlmIChudW1fcGxh
bmVzID09IDMpIHsKIAkJCWttYl93cml0ZV9sY2QoZGV2X3AsCiAJCQkJICAgICAgTENEX0xBWUVS
bl9ETUFfQ1JfTElORV9WU1RSSURFKHBsYW5lX2lkKSwKIAkJCQkgICAgICBmYi0+cGl0Y2hlc1tM
QVlFUl8yXSk7CisKIAkJCWttYl93cml0ZV9sY2QoZGV2X3AsCiAJCQkJICAgICAgTENEX0xBWUVS
bl9ETUFfQ1JfTElORV9XSURUSChwbGFuZV9pZCksCiAJCQkJICAgICAgKHdpZHRoICogZmItPmZv
cm1hdC0+Y3BwWzBdKSk7CisKIAkJCWFkZHJbVl9QTEFORV0gPSBkcm1fZmJfY21hX2dldF9nZW1f
YWRkcihmYiwKIAkJCQkJCQkJcGxhbmUtPnN0YXRlLAogCQkJCQkJCQlWX1BMQU5FKTsKQEAgLTM4
OSw4ICszMTgsOCBAQCBzdGF0aWMgdm9pZCBrbWJfcGxhbmVfYXRvbWljX3VwZGF0ZShzdHJ1Y3Qg
ZHJtX3BsYW5lICpwbGFuZSwKIAkJfQogCX0KIAotCWttYl93cml0ZV9sY2QoZGV2X3AsIExDRF9M
QVlFUm5fV0lEVEgocGxhbmVfaWQpLCBzcmNfdy0xKTsKLQlrbWJfd3JpdGVfbGNkKGRldl9wLCBM
Q0RfTEFZRVJuX0hFSUdIVChwbGFuZV9pZCksIHNyY19oLTEpOworCWttYl93cml0ZV9sY2QoZGV2
X3AsIExDRF9MQVlFUm5fV0lEVEgocGxhbmVfaWQpLCBzcmNfdyAtIDEpOworCWttYl93cml0ZV9s
Y2QoZGV2X3AsIExDRF9MQVlFUm5fSEVJR0hUKHBsYW5lX2lkKSwgc3JjX2ggLSAxKTsKIAlrbWJf
d3JpdGVfbGNkKGRldl9wLCBMQ0RfTEFZRVJuX0NPTF9TVEFSVChwbGFuZV9pZCksIGNydGNfeCk7
CiAJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX0xBWUVSbl9ST1dfU1RBUlQocGxhbmVfaWQpLCBj
cnRjX3kpOwogCkBAIC00MDIsMjUgKzMzMSwyNSBAQCBzdGF0aWMgdm9pZCBrbWJfcGxhbmVfYXRv
bWljX3VwZGF0ZShzdHJ1Y3QgZHJtX3BsYW5lICpwbGFuZSwKIAlpZiAodmFsICYgTENEX0xBWUVS
X1BMQU5BUl9TVE9SQUdFKSB7CiAJCXZhbCB8PSBMQ0RfTEFZRVJfQ1NDX0VOOwogCi0JCS8qZW5h
YmxlIENTQyBpZiBpbnB1dCBpcyBwbGFuYXIgYW5kIG91dHB1dCBpcyBSR0IgKi8KKwkJLyogRW5h
YmxlIENTQyBpZiBpbnB1dCBpcyBwbGFuYXIgYW5kIG91dHB1dCBpcyBSR0IgKi8KIAkJY29uZmln
X2NzYyhkZXZfcCwgcGxhbmVfaWQpOwogCX0KIAogCWttYl93cml0ZV9sY2QoZGV2X3AsIExDRF9M
QVlFUm5fQ0ZHKHBsYW5lX2lkKSwgdmFsKTsKIAogCXN3aXRjaCAocGxhbmVfaWQpIHsKLQkJY2Fz
ZSBMQVlFUl8wOgotCQkJY3RybCA9IExDRF9DVFJMX1ZMMV9FTkFCTEU7Ci0JCQlicmVhazsKLQkJ
Y2FzZSBMQVlFUl8xOgotCQkJY3RybCA9IExDRF9DVFJMX1ZMMl9FTkFCTEU7Ci0JCQlicmVhazsK
LQkJY2FzZSBMQVlFUl8yOgotCQkJY3RybCA9IExDRF9DVFJMX0dMMV9FTkFCTEU7Ci0JCQlicmVh
azsKLQkJY2FzZSBMQVlFUl8zOgotCQkJY3RybCA9IExDRF9DVFJMX0dMMl9FTkFCTEU7Ci0JCQli
cmVhazsKKwljYXNlIExBWUVSXzA6CisJCWN0cmwgPSBMQ0RfQ1RSTF9WTDFfRU5BQkxFOworCQli
cmVhazsKKwljYXNlIExBWUVSXzE6CisJCWN0cmwgPSBMQ0RfQ1RSTF9WTDJfRU5BQkxFOworCQli
cmVhazsKKwljYXNlIExBWUVSXzI6CisJCWN0cmwgPSBMQ0RfQ1RSTF9HTDFfRU5BQkxFOworCQli
cmVhazsKKwljYXNlIExBWUVSXzM6CisJCWN0cmwgPSBMQ0RfQ1RSTF9HTDJfRU5BQkxFOworCQli
cmVhazsKIAl9CiAKIAljdHJsIHw9IExDRF9DVFJMX1BST0dSRVNTSVZFIHwgTENEX0NUUkxfVElN
X0dFTl9FTkFCTEUKQEAgLTQ0MSwxNiArMzcwLDE0IEBAIHN0YXRpYyB2b2lkIGttYl9wbGFuZV9h
dG9taWNfdXBkYXRlKHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lLAogCS8qIExlYXZlIFJHQiBvcmRl
cixjb252ZXJzaW9uIG1vZGUgYW5kIGNsaXAgbW9kZSB0byBkZWZhdWx0ICovCiAJLyogZG8gbm90
IGludGVybGVhdmUgUkdCIGNoYW5uZWxzIGZvciBtaXBpIFR4IGNvbXBhdGliaWxpdHkgKi8KIAlv
dXRfZm9ybWF0IHw9IExDRF9PVVRGX01JUElfUkdCX01PREU7Ci0JLy8Jb3V0X2Zvcm1hdCB8PSBM
Q0RfT1VURl9TWU5DX01PREU7CiAJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX09VVF9GT1JNQVRf
Q0ZHLCBvdXRfZm9ybWF0KTsKIAogCWRtYV9jZmcgPSBMQ0RfRE1BX0xBWUVSX0VOQUJMRSB8IExD
RF9ETUFfTEFZRVJfVlNUUklERV9FTiB8CiAJICAgIExDRF9ETUFfTEFZRVJfQ09OVF9VUERBVEUg
fCBMQ0RfRE1BX0xBWUVSX0FYSV9CVVJTVF8xNjsKIAotCS8qIGVuYWJsZSBETUEgKi8KKwkvKiBF
bmFibGUgRE1BICovCiAJa21iX3dyaXRlX2xjZChkZXZfcCwgTENEX0xBWUVSbl9ETUFfQ0ZHKHBs
YW5lX2lkKSwgZG1hX2NmZyk7Ci0JRFJNX0RFQlVHKCIlcyA6ICVkIGRtYV9jZmc9MHgleCBMQ0Rf
RE1BX0NGRz0weCV4XG4iLAotCQkgIF9fZnVuY19fLCBfX0xJTkVfXywgZG1hX2NmZywKKwlEUk1f
REVCVUcoImRtYV9jZmc9MHgleCBMQ0RfRE1BX0NGRz0weCV4XG4iLCBkbWFfY2ZnLAogCQkgIGtt
Yl9yZWFkX2xjZChkZXZfcCwgTENEX0xBWUVSbl9ETUFfQ0ZHKHBsYW5lX2lkKSkpOwogI2VuZGlm
CiB9CkBAIC00NzMsNyArNDAwLDYgQEAgc3RhdGljIHZvaWQga21iX2Rlc3Ryb3lfcGxhbmVfc3Rh
dGUoc3RydWN0IGRybV9wbGFuZSAqcGxhbmUsCiAJCQkJICAgIHN0cnVjdCBkcm1fcGxhbmVfc3Rh
dGUgKnN0YXRlKQogewogCXN0cnVjdCBrbWJfcGxhbmVfc3RhdGUgKmttYl9zdGF0ZSA9IHRvX2tt
Yl9wbGFuZV9zdGF0ZShzdGF0ZSk7Ci0KIAlfX2RybV9hdG9taWNfaGVscGVyX3BsYW5lX2Rlc3Ry
b3lfc3RhdGUoc3RhdGUpOwogCWtmcmVlKGttYl9zdGF0ZSk7CiB9CkBAIC00ODQsNyArNDEwLDYg
QEAgc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqa21iX3BsYW5lX2R1cGxpY2F0ZV9zdGF0ZShzdHJ1
Y3QgZHJtX3BsYW5lICpwbGFuZSkKIAlzdHJ1Y3Qga21iX3BsYW5lX3N0YXRlICprbWJfc3RhdGU7
CiAKIAlrbWJfc3RhdGUgPSBrbWVtZHVwKHBsYW5lLT5zdGF0ZSwgc2l6ZW9mKCprbWJfc3RhdGUp
LCBHRlBfS0VSTkVMKTsKLQogCWlmICgha21iX3N0YXRlKQogCQlyZXR1cm4gTlVMTDsKIApAQCAt
NTM0LDcgKzQ1OSw2IEBAIHN0cnVjdCBrbWJfcGxhbmUgKmttYl9wbGFuZV9pbml0KHN0cnVjdCBk
cm1fZGV2aWNlICpkcm0pCiAJaW50IG51bV9wbGFuZV9mb3JtYXRzOwogCiAJZm9yIChpID0gMDsg
aSA8IGxjZC0+bl9sYXllcnM7IGkrKykgewotCiAJCXBsYW5lID0gZGV2bV9remFsbG9jKGRybS0+
ZGV2LCBzaXplb2YoKnBsYW5lKSwgR0ZQX0tFUk5FTCk7CiAKIAkJaWYgKCFwbGFuZSkgewpAQCAt
NTUzLDI2ICs0NzcsMjUgQEAgc3RydWN0IGttYl9wbGFuZSAqa21iX3BsYW5lX2luaXQoc3RydWN0
IGRybV9kZXZpY2UgKmRybSkKIAkJfQogCiAJCXJldCA9IGRybV91bml2ZXJzYWxfcGxhbmVfaW5p
dChkcm0sICZwbGFuZS0+YmFzZV9wbGFuZSwKLQkJCQkJICAgICAgIFBPU1NJQkxFX0NSVENTLAot
CQkJCQkgICAgICAgJmttYl9wbGFuZV9mdW5jcywgcGxhbmVfZm9ybWF0cywKLQkJCQkJICAgICAg
IG51bV9wbGFuZV9mb3JtYXRzLAorCQkJCQkgICAgICAgUE9TU0lCTEVfQ1JUQ1MsICZrbWJfcGxh
bmVfZnVuY3MsCisJCQkJCSAgICAgICBwbGFuZV9mb3JtYXRzLCBudW1fcGxhbmVfZm9ybWF0cywK
IAkJCQkJICAgICAgIE5VTEwsIHBsYW5lX3R5cGUsICJwbGFuZSAlZCIsIGkpOwogCQlpZiAocmV0
IDwgMCkgewotCQkJRFJNX0VSUk9SCi0JCQkgICAgKCJkcm1fdW5pdmVyc2FsX3BsYW5lX2luaXQg
LWZhaWxlZCB3aXRoIHJldD0lZCIsCi0JCQkgICAgIHJldCk7CisJCQlEUk1fRVJST1IoImRybV91
bml2ZXJzYWxfcGxhbmVfaW5pdCBmYWlsZWQgKHJldD0lZCkiLAorCQkJCSAgcmV0KTsKIAkJCWdv
dG8gY2xlYW51cDsKIAkJfQogCQlEUk1fREVCVUcoIiVzIDogJWQgcGxhbmU9JXB4XG4gaT0lZCB0
eXBlPSVkIiwKLQkJCSAgX19mdW5jX18sIF9fTElORV9fLCAmcGxhbmUtPmJhc2VfcGxhbmUsCi0J
CQkgIGksIHBsYW5lX3R5cGUpOwotCisJCQkgIF9fZnVuY19fLCBfX0xJTkVfXywKKwkJCSAgJnBs
YW5lLT5iYXNlX3BsYW5lLCBpLCBwbGFuZV90eXBlKTsKIAkJZHJtX3BsYW5lX2hlbHBlcl9hZGQo
JnBsYW5lLT5iYXNlX3BsYW5lLAogCQkJCSAgICAgJmttYl9wbGFuZV9oZWxwZXJfZnVuY3MpOwog
CQlpZiAocGxhbmVfdHlwZSA9PSBEUk1fUExBTkVfVFlQRV9QUklNQVJZKSB7CiAJCQlwcmltYXJ5
ID0gcGxhbmU7CiAJCQlsY2QtPnBsYW5lID0gcGxhbmU7CiAJCX0KKwkJRFJNX0RFQlVHKCIlcyA6
ICVkIHByaW1hcnk9JXB4XG4iLCBfX2Z1bmNfXywgX19MSU5FX18sCisJCQkgICZwcmltYXJ5LT5i
YXNlX3BsYW5lKTsKIAkJcGxhbmUtPmlkID0gaTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9rbWIva21iX3BsYW5lLmggYi9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9wbGFuZS5o
CmluZGV4IGIxYWM5ZGIuLjZlNGRhNDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9rbWIv
a21iX3BsYW5lLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2ttYi9rbWJfcGxhbmUuaApAQCAtOCw2
ICs4LDM0IEBACiAKICNpbmNsdWRlICJrbWJfZHJ2LmgiCiAKKyNkZWZpbmUgTENEX0lOVF9WTDBf
RVJSIChMQVlFUjBfRE1BX0ZJRk9fVU5ERVJGTE9XIHwgXAorCQkJTEFZRVIwX0RNQV9GSUZPX09W
RVJGTE9XIHwgXAorCQkJTEFZRVIwX0RNQV9DQl9GSUZPX09WRVJGTE9XIHwgXAorCQkJTEFZRVIw
X0RNQV9DQl9GSUZPX1VOREVSRkxPVyB8IFwKKwkJCUxBWUVSMF9ETUFfQ1JfRklGT19PVkVSRkxP
VyB8IFwKKwkJCUxBWUVSMF9ETUFfQ1JfRklGT19VTkRFUkZMT1cpCisKKyNkZWZpbmUgTENEX0lO
VF9WTDFfRVJSIChMQVlFUjFfRE1BX0ZJRk9fVU5ERVJGTE9XIHwgXAorCQkJTEFZRVIxX0RNQV9G
SUZPX09WRVJGTE9XIHwgXAorCQkJTEFZRVIxX0RNQV9DQl9GSUZPX09WRVJGTE9XIHwgXAorCQkJ
TEFZRVIxX0RNQV9DQl9GSUZPX1VOREVSRkxPVyB8IFwKKwkJCUxBWUVSMV9ETUFfQ1JfRklGT19P
VkVSRkxPVyB8IFwKKwkJCUxBWUVSMV9ETUFfQ1JfRklGT19VTkRFUkZMT1cpCisKKyNkZWZpbmUg
TENEX0lOVF9HTDBfRVJSIChMQVlFUjJfRE1BX0ZJRk9fT1ZFUkZMT1cgfCBMQVlFUjJfRE1BX0ZJ
Rk9fVU5ERVJGTE9XKQorI2RlZmluZSBMQ0RfSU5UX0dMMV9FUlIgKExBWUVSM19ETUFfRklGT19P
VkVSRkxPVyB8IExBWUVSM19ETUFfRklGT19VTkRFUkZMT1cpCisjZGVmaW5lIExDRF9JTlRfVkww
IChMQVlFUjBfRE1BX0RPTkUgfCBMQVlFUjBfRE1BX0lETEUgfCBMQ0RfSU5UX1ZMMF9FUlIpCisj
ZGVmaW5lIExDRF9JTlRfVkwxIChMQVlFUjFfRE1BX0RPTkUgfCBMQVlFUjFfRE1BX0lETEUgfCBM
Q0RfSU5UX1ZMMV9FUlIpCisjZGVmaW5lIExDRF9JTlRfR0wwIChMQVlFUjJfRE1BX0RPTkUgfCBM
QVlFUjJfRE1BX0lETEUgfCBMQ0RfSU5UX0dMMF9FUlIpCisjZGVmaW5lIExDRF9JTlRfR0wxIChM
QVlFUjNfRE1BX0RPTkUgfCBMQVlFUjNfRE1BX0lETEUgfCBMQ0RfSU5UX0dMMV9FUlIpCisKKyNk
ZWZpbmUgUE9TU0lCTEVfQ1JUQ1MgMQorI2RlZmluZSBJTklUSUFMSVpFRCAxCisjZGVmaW5lIHRv
X2ttYl9wbGFuZSh4KSBjb250YWluZXJfb2YoeCwgc3RydWN0IGttYl9wbGFuZSwgYmFzZV9wbGFu
ZSkKKworI2RlZmluZSB0b19rbWJfcGxhbmVfc3RhdGUoeCkgXAorCQljb250YWluZXJfb2YoeCwg
c3RydWN0IGttYl9wbGFuZV9zdGF0ZSwgYmFzZV9wbGFuZV9zdGF0ZSkKKwogZW51bSBsYXllcl9p
ZCB7CiAJTEFZRVJfMCwKIAlMQVlFUl8xLApAQCAtMzQsMTIgKzYyLDQ4IEBAIHN0cnVjdCBrbWJf
cGxhbmVfc3RhdGUgewogCXVuc2lnbmVkIGNoYXIgbm9fcGxhbmVzOwogfTsKIAotI2RlZmluZSBQ
T1NTSUJMRV9DUlRDUyAxCi0jZGVmaW5lIElOSVRJQUxJWkVEIDEKLSNkZWZpbmUgdG9fa21iX3Bs
YW5lKHgpIGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3Qga21iX3BsYW5lLCBiYXNlX3BsYW5lKQorLyog
R3JhcGhpY3MgbGF5ZXIgKGxheWVycyAyICYgMykgZm9ybWF0cywgb25seSBwYWNrZWQgZm9ybWF0
cyAgYXJlIHN1cHBvcnRlZCAqLworc3RhdGljIGNvbnN0IHUzMiBrbWJfZm9ybWF0c19nW10gPSB7
CisJRFJNX0ZPUk1BVF9SR0IzMzIsCisJRFJNX0ZPUk1BVF9YUkdCNDQ0NCwgRFJNX0ZPUk1BVF9Y
QkdSNDQ0NCwKKwlEUk1fRk9STUFUX0FSR0I0NDQ0LCBEUk1fRk9STUFUX0FCR1I0NDQ0LAorCURS
TV9GT1JNQVRfWFJHQjE1NTUsIERSTV9GT1JNQVRfWEJHUjE1NTUsCisJRFJNX0ZPUk1BVF9BUkdC
MTU1NSwgRFJNX0ZPUk1BVF9BQkdSMTU1NSwKKwlEUk1fRk9STUFUX1JHQjU2NSwgRFJNX0ZPUk1B
VF9CR1I1NjUsCisJRFJNX0ZPUk1BVF9SR0I4ODgsIERSTV9GT1JNQVRfQkdSODg4LAorCURSTV9G
T1JNQVRfWFJHQjg4ODgsIERSTV9GT1JNQVRfWEJHUjg4ODgsCisJRFJNX0ZPUk1BVF9BUkdCODg4
OCwgRFJNX0ZPUk1BVF9BQkdSODg4OCwKK307CiAKLSNkZWZpbmUgdG9fa21iX3BsYW5lX3N0YXRl
KHgpIFwKLQkJY29udGFpbmVyX29mKHgsIHN0cnVjdCBrbWJfcGxhbmVfc3RhdGUsIGJhc2VfcGxh
bmVfc3RhdGUpCisjZGVmaW5lIE1BWF9GT1JNQVRfRwkoQVJSQVlfU0laRShrbWJfZm9ybWF0c19n
KSkKKyNkZWZpbmUgTUFYX0ZPUk1BVF9WCShBUlJBWV9TSVpFKGttYl9mb3JtYXRzX3YpKQorCisv
KiBWaWRlbyBsYXllciAoIDAgJiAxKSBmb3JtYXRzLCBwYWNrZWQgYW5kIHBsYW5hciBmb3JtYXRz
IGFyZSBzdXBwb3J0ZWQgKi8KK3N0YXRpYyBjb25zdCB1MzIga21iX2Zvcm1hdHNfdltdID0gewor
CS8qIHBhY2tlZCBmb3JtYXRzICovCisJRFJNX0ZPUk1BVF9SR0IzMzIsCisJRFJNX0ZPUk1BVF9Y
UkdCNDQ0NCwgRFJNX0ZPUk1BVF9YQkdSNDQ0NCwKKwlEUk1fRk9STUFUX0FSR0I0NDQ0LCBEUk1f
Rk9STUFUX0FCR1I0NDQ0LAorCURSTV9GT1JNQVRfWFJHQjE1NTUsIERSTV9GT1JNQVRfWEJHUjE1
NTUsCisJRFJNX0ZPUk1BVF9BUkdCMTU1NSwgRFJNX0ZPUk1BVF9BQkdSMTU1NSwKKwlEUk1fRk9S
TUFUX1JHQjU2NSwgRFJNX0ZPUk1BVF9CR1I1NjUsCisJRFJNX0ZPUk1BVF9SR0I4ODgsIERSTV9G
T1JNQVRfQkdSODg4LAorCURSTV9GT1JNQVRfWFJHQjg4ODgsIERSTV9GT1JNQVRfWEJHUjg4ODgs
CisJRFJNX0ZPUk1BVF9BUkdCODg4OCwgRFJNX0ZPUk1BVF9BQkdSODg4OCwKKwkvKnBsYW5hciBm
b3JtYXRzICovCisJRFJNX0ZPUk1BVF9ZVVY0MjAsIERSTV9GT1JNQVRfWVZVNDIwLAorCURSTV9G
T1JNQVRfWVVWNDIyLCBEUk1fRk9STUFUX1lWVTQyMiwKKwlEUk1fRk9STUFUX1lVVjQ0NCwgRFJN
X0ZPUk1BVF9ZVlU0NDQsCisJRFJNX0ZPUk1BVF9OVjEyLCBEUk1fRk9STUFUX05WMjEsCit9Owor
CisvKiBDb252ZXJzaW9uICh5dXYtPnJnYikgbWF0cml4IGZyb20gbXlyaWFkeCAqLworc3RhdGlj
IGNvbnN0IHUzMiBjc2NfY29lZl9sY2RbXSA9IHsKKwkxMDI0LCAwLCAxNDM2LAorCTEwMjQsIC0z
NTIsIC03MzEsCisJMTAyNCwgMTgxNCwgMCwKKwktMTc5LCAxMjUsIC0yMjYKK307CiAKIHN0cnVj
dCBrbWJfcGxhbmUgKmttYl9wbGFuZV9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkcm0pOwogdm9p
ZCBrbWJfcGxhbmVfZGVzdHJveShzdHJ1Y3QgZHJtX3BsYW5lICpwbGFuZSk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0va21iL2ttYl9yZWdzLmggYi9kcml2ZXJzL2dwdS9kcm0va21iL2tt
Yl9yZWdzLmgKaW5kZXggZjVjMWM0ZC4uYzU3NjhkNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2ttYi9rbWJfcmVncy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9rbWIva21iX3JlZ3MuaApA
QCAtNTMzLDkgKzUzMywxMCBAQAogLyogTUlQSSBJUlEgKi8KICNkZWZpbmUgTUlQSV9DVFJMX0lS
UV9TVEFUVVMwCQkJCSgweDAwKQogI2RlZmluZSAgIE1JUElfRFBIWV9FUlJfSVJRCQkJCTEKLSNk
ZWZpbmUgICBNSVBJX0RQSFlfRVJSX01BU0sJCQkJMHg3RkUgLypiaXRzIDEtMTAgKi8KKyNkZWZp
bmUgICBNSVBJX0RQSFlfRVJSX01BU0sJCQkJMHg3RkUJLypiaXRzIDEtMTAgKi8KICNkZWZpbmUg
ICBNSVBJX0hTX0lSUQkJCQkJMTMKLSNkZWZpbmUgICBNSVBJX0hTX0lSUV9NQVNLCQkJCTB4N0ZF
MDAwIC8qYml0cyAxMy0yMiAqLworLypiaXRzIDEzLTIyICovCisjZGVmaW5lICAgTUlQSV9IU19J
UlFfTUFTSwkJCQkweDdGRTAwMAogI2RlZmluZSAgIE1JUElfTFBfRVZFTlRfSVJRCQkJCTI1CiAj
ZGVmaW5lICAgTUlQSV9HRVRfSVJRX1NUQVQwKGRldikJCWttYl9yZWFkX21pcGkoZGV2LCBcCiAJ
CQkJCQlNSVBJX0NUUkxfSVJRX1NUQVRVUzApCkBAIC03MTUsMTggKzcxNiwxOCBAQAogCQkJJiAo
MSA8PCAoZHBoeSAtIE1JUElfRFBIWTYpKSkKICNkZWZpbmUgRFBIWV9DRkdfQ0xLX0VOCQkJCSgw
eDE4YykKIAotI2RlZmluZSBNU1NfTUlQSV9DSUZfQ0ZHCQkoMHgwMCkKLSNkZWZpbmUgTVNTX0xD
RF9NSVBJX0NGRwkJKDB4MDQpCi0jZGVmaW5lIE1TU19DQU1fQ0xLX0NUUkwJCSgweDEwKQotI2Rl
ZmluZSBNU1NfTE9PUEJBQ0tfQ0ZHCQkoMHgwQykKLSNkZWZpbmUgICBMQ0QJCQkJKDE8PDEpCi0j
ZGVmaW5lICAgTUlQSV9DT01NT04JCQkoMTw8MikKLSNkZWZpbmUgICBNSVBJX1RYMAkJCSgxPDw5
KQotI2RlZmluZSBNU1NfQ0FNX1JTVE5fQ1RSTAkJKDB4MTQpCi0jZGVmaW5lIE1TU19DQU1fUlNU
Tl9TRVQJCSgweDIwKQotI2RlZmluZSBNU1NfQ0FNX1JTVE5fQ0xSCQkoMHgyNCkKKyNkZWZpbmUg
TVNTX01JUElfQ0lGX0NGRwkJCSgweDAwKQorI2RlZmluZSBNU1NfTENEX01JUElfQ0ZHCQkJKDB4
MDQpCisjZGVmaW5lIE1TU19DQU1fQ0xLX0NUUkwJCQkoMHgxMCkKKyNkZWZpbmUgTVNTX0xPT1BC
QUNLX0NGRwkJCSgweDBDKQorI2RlZmluZSAgIExDRAkJCQkJKDE8PDEpCisjZGVmaW5lICAgTUlQ
SV9DT01NT04JCQkJKDE8PDIpCisjZGVmaW5lICAgTUlQSV9UWDAJCQkJKDE8PDkpCisjZGVmaW5l
IE1TU19DQU1fUlNUTl9DVFJMCQkJKDB4MTQpCisjZGVmaW5lIE1TU19DQU1fUlNUTl9TRVQJCQko
MHgyMCkKKyNkZWZpbmUgTVNTX0NBTV9SU1ROX0NMUgkJCSgweDI0KQogCi0jZGVmaW5lIE1TU0NQ
VV9DUFJfQ0xLX0VOCQkoMHgwKQotI2RlZmluZSBNU1NDUFVfQ1BSX1JTVF9FTgkJKDB4MTApCisj
ZGVmaW5lIE1TU0NQVV9DUFJfQ0xLX0VOCQkJKDB4MCkKKyNkZWZpbmUgTVNTQ1BVX0NQUl9SU1Rf
RU4JCQkoMHgxMCkKICNkZWZpbmUgQklUX01BU0tfMTYJCQkJKDB4ZmZmZikKICNlbmRpZiAvKiBf
X0tNQl9SRUdTX0hfXyAqLwotLSAKMi43LjQKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2RyaS1kZXZlbAo=
