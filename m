Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A5CBDFB00D
	for <lists+dri-devel@lfdr.de>; Wed, 13 Nov 2019 12:52:50 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5B50F6ECEC;
	Wed, 13 Nov 2019 11:52:46 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4DDBE6ECE9
 for <dri-devel@lists.freedesktop.org>; Wed, 13 Nov 2019 11:52:40 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id A0364B230;
 Wed, 13 Nov 2019 11:52:38 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@redhat.com, sean@poorly.run, daniel@ffwll.ch,
 b.zolnierkie@samsung.com, noralf@tronnes.org, kraxel@redhat.com,
 sam@ravnborg.org, emil.velikov@collabora.com
Subject: [PATCH v4 1/3] drm/udl: Replace fbdev code with generic emulation
Date: Wed, 13 Nov 2019 12:52:31 +0100
Message-Id: <20191113115233.18483-2-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191113115233.18483-1-tzimmermann@suse.de>
References: <20191113115233.18483-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Thomas Zimmermann <tzimmermann@suse.de>,
 dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIHVkbCBkcml2ZXIgY2FuIHVzZSB0aGUgZ2VuZXJpYyBmYmRldiBpbXBsZW1lbnRhdGlvbi4g
Q29udmVydCBpdC4KCnY0OgoJKiBoYXJkY29kZSBjb25zb2xlIGJwcCB0byAxNgp2MzoKCSogcmVt
b3ZlIG1vZHVsZSBwYXJhbWV0ZXIgZmJfYnBwIGluIGZhdm9yIG9mIGZiZGV2J3MgdmlkZW8KCSog
Y2FsbCBkcm1fZmJkZXZfZ2VuZXJpY19zZXR1cCgpIGRpcmVjdGx5OyByZW1vdmUgdWRsX2ZiZGV2
X2luaXQoKQoJKiB1c2UgZGVmYXVsdCBmb3Igc3RydWN0IGRybV9tb2RlX2NvbmZpZ19mdW5jcy5v
dXRwdXRfcG9sbF9jaGFuZ2VkCgkqIHVzZSBkZWZhdWx0IGZvciBzdHJ1Y3QgZHJtX2RyaXZlci5s
YXN0Y2xvc2UKClNpZ25lZC1vZmYtYnk6IFRob21hcyBaaW1tZXJtYW5uIDx0emltbWVybWFubkBz
dXNlLmRlPgotLS0KIGRyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jICAgICB8ICAgMSAtCiBk
cml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaCAgICAgfCAgIDYgLQogZHJpdmVycy9ncHUvZHJt
L3VkbC91ZGxfZmIuYyAgICAgIHwgMjgyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jICAgIHwgICA1ICstCiBkcml2ZXJzL2dwdS9k
cm0vdWRsL3VkbF9tb2Rlc2V0LmMgfCAgIDEgLQogNSBmaWxlcyBjaGFuZ2VkLCAyIGluc2VydGlv
bnMoKyksIDI5MyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdWRs
L3VkbF9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCmluZGV4IDU2M2NjNTgw
OWU1Ni4uMmI2ZDhmNmIyZTA2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9k
cnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuYwpAQCAtMTE5LDcgKzExOSw2
IEBAIHN0YXRpYyB2b2lkIHVkbF91c2JfZGlzY29ubmVjdChzdHJ1Y3QgdXNiX2ludGVyZmFjZSAq
aW50ZXJmYWNlKQogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSB1c2JfZ2V0X2ludGZkYXRhKGlu
dGVyZmFjZSk7CiAKIAlkcm1fa21zX2hlbHBlcl9wb2xsX2Rpc2FibGUoZGV2KTsKLQl1ZGxfZmJk
ZXZfdW5wbHVnKGRldik7CiAJdWRsX2Ryb3BfdXNiKGRldik7CiAJZHJtX2Rldl91bnBsdWcoZGV2
KTsKIAlkcm1fZGV2X3B1dChkZXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3VkbC91
ZGxfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaAppbmRleCA5ODdkOTlhZTJk
ZmEuLmJlNTg1ZTNlNTcyZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmgKQEAgLTQ3LDggKzQ3LDYgQEAg
c3RydWN0IHVyYl9saXN0IHsKIAlzaXplX3Qgc2l6ZTsKIH07CiAKLXN0cnVjdCB1ZGxfZmJkZXY7
Ci0KIHN0cnVjdCB1ZGxfZGV2aWNlIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSBkcm07CiAJc3RydWN0
IGRldmljZSAqZGV2OwpAQCAtNjIsNyArNjAsNiBAQCBzdHJ1Y3QgdWRsX2RldmljZSB7CiAJc3Ry
dWN0IHVyYl9saXN0IHVyYnM7CiAJYXRvbWljX3QgbG9zdF9waXhlbHM7IC8qIDEgPSBhIHJlbmRl
ciBvcCBmYWlsZWQuIE5lZWQgc2NyZWVuIHJlZnJlc2ggKi8KIAotCXN0cnVjdCB1ZGxfZmJkZXYg
KmZiZGV2OwogCWNoYXIgbW9kZV9idWZbMTAyNF07CiAJdWludDMyX3QgbW9kZV9idWZfbGVuOwog
CWF0b21pY190IGJ5dGVzX3JlbmRlcmVkOyAvKiByYXcgcGl4ZWwtYnl0ZXMgZHJpdmVyIGFza2Vk
IHRvIHJlbmRlciAqLwpAQCAtOTcsOSArOTQsNiBAQCB2b2lkIHVkbF91cmJfY29tcGxldGlvbihz
dHJ1Y3QgdXJiICp1cmIpOwogaW50IHVkbF9pbml0KHN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwpOwog
dm9pZCB1ZGxfZmluaShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KTsKIAotaW50IHVkbF9mYmRldl9p
bml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpOwotdm9pZCB1ZGxfZmJkZXZfY2xlYW51cChzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2KTsKLXZvaWQgdWRsX2ZiZGV2X3VucGx1ZyhzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2KTsKIHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKgogdWRsX2ZiX3VzZXJfZmJfY3Jl
YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCSAgICAgIHN0cnVjdCBkcm1fZmlsZSAqZmls
ZSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2ZiLmMgYi9kcml2ZXJzL2dw
dS9kcm0vdWRsL3VkbF9mYi5jCmluZGV4IGY4MTUzYjcyNjM0My4uOGZlNGQ4Y2YzMjEyIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9mYi5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS91ZGwvdWRsX2ZiLmMKQEAgLTEzLDI3ICsxMywxMiBAQAogCiAjaW5jbHVkZSA8ZHJtL2RybV9j
cnRjX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fZHJ2Lmg+Ci0jaW5jbHVkZSA8ZHJtL2Ry
bV9mYl9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2ZvdXJjYy5oPgogI2luY2x1ZGUgPGRy
bS9kcm1fZ2VtX3NobWVtX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fbW9kZXNldF9oZWxw
ZXIuaD4KIAogI2luY2x1ZGUgInVkbF9kcnYuaCIKIAotI2RlZmluZSBETF9ERUZJT19XUklURV9E
RUxBWSAgICAoSFovMjApIC8qIGZiX2RlZmVycmVkX2lvLmRlbGF5IGluIGppZmZpZXMgKi8KLQot
c3RhdGljIGludCBmYl9kZWZpbyA9IDA7ICAvKiBPcHRpb25hbGx5IGVuYWJsZSBleHBlcmltZW50
YWwgZmJfZGVmaW8gbW1hcCBzdXBwb3J0ICovCi1zdGF0aWMgaW50IGZiX2JwcCA9IDE2OwotCi1t
b2R1bGVfcGFyYW0oZmJfYnBwLCBpbnQsIFNfSVdVU1IgfCBTX0lSVVNSIHwgU19JV0dSUCB8IFNf
SVJHUlApOwotbW9kdWxlX3BhcmFtKGZiX2RlZmlvLCBpbnQsIFNfSVdVU1IgfCBTX0lSVVNSIHwg
U19JV0dSUCB8IFNfSVJHUlApOwotCi1zdHJ1Y3QgdWRsX2ZiZGV2IHsKLQlzdHJ1Y3QgZHJtX2Zi
X2hlbHBlciBoZWxwZXI7IC8qIG11c3QgYmUgZmlyc3QgKi8KLQlzdHJ1Y3QgdWRsX2ZyYW1lYnVm
ZmVyIHVmYjsKLQlpbnQgZmJfY291bnQ7Ci19OwotCiAjZGVmaW5lIERMX0FMSUdOX1VQKHgsIGEp
IEFMSUdOKHgsIGEpCiAjZGVmaW5lIERMX0FMSUdOX0RPV04oeCwgYSkgQUxJR05fRE9XTih4LCBh
KQogCkBAIC0xNTYsMTIzICsxNDEsNiBAQCBpbnQgdWRsX2hhbmRsZV9kYW1hZ2Uoc3RydWN0IHVk
bF9mcmFtZWJ1ZmZlciAqZmIsIGludCB4LCBpbnQgeSwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGlj
IGludCB1ZGxfZmJfbW1hcChzdHJ1Y3QgZmJfaW5mbyAqaW5mbywgc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEpCi17Ci0JdW5zaWduZWQgbG9uZyBzdGFydCA9IHZtYS0+dm1fc3RhcnQ7Ci0JdW5z
aWduZWQgbG9uZyBzaXplID0gdm1hLT52bV9lbmQgLSB2bWEtPnZtX3N0YXJ0OwotCXVuc2lnbmVk
IGxvbmcgb2Zmc2V0OwotCXVuc2lnbmVkIGxvbmcgcGFnZSwgcG9zOwotCi0JaWYgKHZtYS0+dm1f
cGdvZmYgPiAofjBVTCA+PiBQQUdFX1NISUZUKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlvZmZz
ZXQgPSB2bWEtPnZtX3Bnb2ZmIDw8IFBBR0VfU0hJRlQ7Ci0KLQlpZiAob2Zmc2V0ID4gaW5mby0+
Zml4LnNtZW1fbGVuIHx8IHNpemUgPiBpbmZvLT5maXguc21lbV9sZW4gLSBvZmZzZXQpCi0JCXJl
dHVybiAtRUlOVkFMOwotCi0JcG9zID0gKHVuc2lnbmVkIGxvbmcpaW5mby0+Zml4LnNtZW1fc3Rh
cnQgKyBvZmZzZXQ7Ci0KLQlwcl9kZWJ1ZygibW1hcCgpIGZyYW1lYnVmZmVyIGFkZHI6JWx1IHNp
emU6JWx1XG4iLAotCQkgIHBvcywgc2l6ZSk7Ci0KLQkvKiBXZSBkb24ndCB3YW50IHRoZSBmcmFt
ZWJ1ZmZlciB0byBiZSBtYXBwZWQgZW5jcnlwdGVkICovCi0Jdm1hLT52bV9wYWdlX3Byb3QgPSBw
Z3Byb3RfZGVjcnlwdGVkKHZtYS0+dm1fcGFnZV9wcm90KTsKLQotCXdoaWxlIChzaXplID4gMCkg
ewotCQlwYWdlID0gdm1hbGxvY190b19wZm4oKHZvaWQgKilwb3MpOwotCQlpZiAocmVtYXBfcGZu
X3JhbmdlKHZtYSwgc3RhcnQsIHBhZ2UsIFBBR0VfU0laRSwgUEFHRV9TSEFSRUQpKQotCQkJcmV0
dXJuIC1FQUdBSU47Ci0KLQkJc3RhcnQgKz0gUEFHRV9TSVpFOwotCQlwb3MgKz0gUEFHRV9TSVpF
OwotCQlpZiAoc2l6ZSA+IFBBR0VfU0laRSkKLQkJCXNpemUgLT0gUEFHRV9TSVpFOwotCQllbHNl
Ci0JCQlzaXplID0gMDsKLQl9Ci0KLQkvKiBWTV9JTyB8IFZNX0RPTlRFWFBBTkQgfCBWTV9ET05U
RFVNUCBhcmUgc2V0IGJ5IHJlbWFwX3Bmbl9yYW5nZSgpICovCi0JcmV0dXJuIDA7Ci19Ci0KLS8q
Ci0gKiBJdCdzIGNvbW1vbiBmb3Igc2V2ZXJhbCBjbGllbnRzIHRvIGhhdmUgZnJhbWVidWZmZXIg
b3BlbiBzaW11bHRhbmVvdXNseS4KLSAqIGUuZy4gYm90aCBmYmNvbiBhbmQgWC4gTWFrZXMgdGhp
bmdzIGludGVyZXN0aW5nLgotICogQXNzdW1lcyBjYWxsZXIgaXMgaG9sZGluZyBpbmZvLT5sb2Nr
IChmb3Igb3BlbiBhbmQgcmVsZWFzZSBhdCBsZWFzdCkKLSAqLwotc3RhdGljIGludCB1ZGxfZmJf
b3BlbihzdHJ1Y3QgZmJfaW5mbyAqaW5mbywgaW50IHVzZXIpCi17Ci0Jc3RydWN0IHVkbF9mYmRl
diAqdWZiZGV2ID0gaW5mby0+cGFyOwotCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSB1ZmJkZXYt
PnVmYi5iYXNlLmRldjsKLQlzdHJ1Y3QgdWRsX2RldmljZSAqdWRsID0gdG9fdWRsKGRldik7Ci0K
LQkvKiBJZiB0aGUgVVNCIGRldmljZSBpcyBnb25lLCB3ZSBkb24ndCBhY2NlcHQgbmV3IG9wZW5z
ICovCi0JaWYgKGRybV9kZXZfaXNfdW5wbHVnZ2VkKCZ1ZGwtPmRybSkpCi0JCXJldHVybiAtRU5P
REVWOwotCi0JdWZiZGV2LT5mYl9jb3VudCsrOwotCi0jaWZkZWYgQ09ORklHX0RSTV9GQkRFVl9F
TVVMQVRJT04KLQlpZiAoZmJfZGVmaW8gJiYgKGluZm8tPmZiZGVmaW8gPT0gTlVMTCkpIHsKLQkJ
LyogZW5hYmxlIGRlZmlvIGF0IGxhc3QgbW9tZW50IGlmIG5vdCBkaXNhYmxlZCBieSBjbGllbnQg
Ki8KLQotCQlzdHJ1Y3QgZmJfZGVmZXJyZWRfaW8gKmZiZGVmaW87Ci0KLQkJZmJkZWZpbyA9IGt6
YWxsb2Moc2l6ZW9mKHN0cnVjdCBmYl9kZWZlcnJlZF9pbyksIEdGUF9LRVJORUwpOwotCi0JCWlm
IChmYmRlZmlvKSB7Ci0JCQlmYmRlZmlvLT5kZWxheSA9IERMX0RFRklPX1dSSVRFX0RFTEFZOwot
CQkJZmJkZWZpby0+ZGVmZXJyZWRfaW8gPSBkcm1fZmJfaGVscGVyX2RlZmVycmVkX2lvOwotCQl9
Ci0KLQkJaW5mby0+ZmJkZWZpbyA9IGZiZGVmaW87Ci0JCWZiX2RlZmVycmVkX2lvX2luaXQoaW5m
byk7Ci0JfQotI2VuZGlmCi0KLQlwcl9kZWJ1Zygib3BlbiAvZGV2L2ZiJWQgdXNlcj0lZCBmYl9p
bmZvPSVwIGNvdW50PSVkXG4iLAotCQkgIGluZm8tPm5vZGUsIHVzZXIsIGluZm8sIHVmYmRldi0+
ZmJfY291bnQpOwotCi0JcmV0dXJuIDA7Ci19Ci0KLQotLyoKLSAqIEFzc3VtZXMgY2FsbGVyIGlz
IGhvbGRpbmcgaW5mby0+bG9jayBtdXRleCAoZm9yIG9wZW4gYW5kIHJlbGVhc2UgYXQgbGVhc3Qp
Ci0gKi8KLXN0YXRpYyBpbnQgdWRsX2ZiX3JlbGVhc2Uoc3RydWN0IGZiX2luZm8gKmluZm8sIGlu
dCB1c2VyKQotewotCXN0cnVjdCB1ZGxfZmJkZXYgKnVmYmRldiA9IGluZm8tPnBhcjsKLQotCXVm
YmRldi0+ZmJfY291bnQtLTsKLQotI2lmZGVmIENPTkZJR19EUk1fRkJERVZfRU1VTEFUSU9OCi0J
aWYgKCh1ZmJkZXYtPmZiX2NvdW50ID09IDApICYmIChpbmZvLT5mYmRlZmlvKSkgewotCQlmYl9k
ZWZlcnJlZF9pb19jbGVhbnVwKGluZm8pOwotCQlrZnJlZShpbmZvLT5mYmRlZmlvKTsKLQkJaW5m
by0+ZmJkZWZpbyA9IE5VTEw7Ci0JCWluZm8tPmZib3BzLT5mYl9tbWFwID0gdWRsX2ZiX21tYXA7
Ci0JfQotI2VuZGlmCi0KLQlwcl9kZWJ1ZygicmVsZWFzZWQgL2Rldi9mYiVkIHVzZXI9JWQgY291
bnQ9JWRcbiIsCi0JCWluZm8tPm5vZGUsIHVzZXIsIHVmYmRldi0+ZmJfY291bnQpOwotCi0JcmV0
dXJuIDA7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgZmJfb3BzIHVkbGZiX29wcyA9IHsKLQkub3duZXIg
PSBUSElTX01PRFVMRSwKLQlEUk1fRkJfSEVMUEVSX0RFRkFVTFRfT1BTLAotCS5mYl9maWxscmVj
dCA9IGRybV9mYl9oZWxwZXJfc3lzX2ZpbGxyZWN0LAotCS5mYl9jb3B5YXJlYSA9IGRybV9mYl9o
ZWxwZXJfc3lzX2NvcHlhcmVhLAotCS5mYl9pbWFnZWJsaXQgPSBkcm1fZmJfaGVscGVyX3N5c19p
bWFnZWJsaXQsCi0JLmZiX21tYXAgPSB1ZGxfZmJfbW1hcCwKLQkuZmJfb3BlbiA9IHVkbF9mYl9v
cGVuLAotCS5mYl9yZWxlYXNlID0gdWRsX2ZiX3JlbGVhc2UsCi19OwotCiBzdGF0aWMgaW50IHVk
bF91c2VyX2ZyYW1lYnVmZmVyX2RpcnR5KHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLAogCQkJ
CSAgICAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKIAkJCQkgICAgICB1bnNpZ25lZCBmbGFncywg
dW5zaWduZWQgY29sb3IsCkBAIC0zNDcsMTU2ICsyMTUsNiBAQCB1ZGxfZnJhbWVidWZmZXJfaW5p
dChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCXJldHVybiByZXQ7CiB9CiAKLQotc3RhdGljIGlu
dCB1ZGxmYl9jcmVhdGUoc3RydWN0IGRybV9mYl9oZWxwZXIgKmhlbHBlciwKLQkJCXN0cnVjdCBk
cm1fZmJfaGVscGVyX3N1cmZhY2Vfc2l6ZSAqc2l6ZXMpCi17Ci0Jc3RydWN0IHVkbF9mYmRldiAq
dWZiZGV2ID0KLQkJY29udGFpbmVyX29mKGhlbHBlciwgc3RydWN0IHVkbF9mYmRldiwgaGVscGVy
KTsKLQlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gdWZiZGV2LT5oZWxwZXIuZGV2OwotCXN0cnVj
dCBmYl9pbmZvICppbmZvOwotCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiOwotCXN0cnVjdCBk
cm1fbW9kZV9mYl9jbWQyIG1vZGVfY21kOwotCXN0cnVjdCBkcm1fZ2VtX3NobWVtX29iamVjdCAq
c2htZW07Ci0Jdm9pZCAqdmFkZHI7Ci0JdWludDMyX3Qgc2l6ZTsKLQlpbnQgcmV0ID0gMDsKLQot
CWlmIChzaXplcy0+c3VyZmFjZV9icHAgPT0gMjQpCi0JCXNpemVzLT5zdXJmYWNlX2JwcCA9IDMy
OwotCi0JbW9kZV9jbWQud2lkdGggPSBzaXplcy0+c3VyZmFjZV93aWR0aDsKLQltb2RlX2NtZC5o
ZWlnaHQgPSBzaXplcy0+c3VyZmFjZV9oZWlnaHQ7Ci0JbW9kZV9jbWQucGl0Y2hlc1swXSA9IG1v
ZGVfY21kLndpZHRoICogKChzaXplcy0+c3VyZmFjZV9icHAgKyA3KSAvIDgpOwotCi0JbW9kZV9j
bWQucGl4ZWxfZm9ybWF0ID0gZHJtX21vZGVfbGVnYWN5X2ZiX2Zvcm1hdChzaXplcy0+c3VyZmFj
ZV9icHAsCi0JCQkJCQkJICBzaXplcy0+c3VyZmFjZV9kZXB0aCk7Ci0KLQlzaXplID0gbW9kZV9j
bWQucGl0Y2hlc1swXSAqIG1vZGVfY21kLmhlaWdodDsKLQlzaXplID0gQUxJR04oc2l6ZSwgUEFH
RV9TSVpFKTsKLQotCXNobWVtID0gZHJtX2dlbV9zaG1lbV9jcmVhdGUoZGV2LCBzaXplKTsKLQlp
ZiAoSVNfRVJSKHNobWVtKSkgewotCQlyZXQgPSBQVFJfRVJSKHNobWVtKTsKLQkJZ290byBvdXQ7
Ci0JfQotCi0JdmFkZHIgPSBkcm1fZ2VtX3NobWVtX3ZtYXAoJnNobWVtLT5iYXNlKTsKLQlpZiAo
SVNfRVJSKHZhZGRyKSkgewotCQlyZXQgPSBQVFJfRVJSKHZhZGRyKTsKLQkJRFJNX0VSUk9SKCJm
YWlsZWQgdG8gdm1hcCBmYlxuIik7Ci0JCWdvdG8gb3V0X2dmcmVlOwotCX0KLQotCWluZm8gPSBk
cm1fZmJfaGVscGVyX2FsbG9jX2ZiaShoZWxwZXIpOwotCWlmIChJU19FUlIoaW5mbykpIHsKLQkJ
cmV0ID0gUFRSX0VSUihpbmZvKTsKLQkJZ290byBvdXRfZ2ZyZWU7Ci0JfQotCi0JcmV0ID0gdWRs
X2ZyYW1lYnVmZmVyX2luaXQoZGV2LCAmdWZiZGV2LT51ZmIsICZtb2RlX2NtZCwgc2htZW0pOwot
CWlmIChyZXQpCi0JCWdvdG8gb3V0X2dmcmVlOwotCi0JZmIgPSAmdWZiZGV2LT51ZmIuYmFzZTsK
LQotCXVmYmRldi0+aGVscGVyLmZiID0gZmI7Ci0KLQlpbmZvLT5zY3JlZW5fYmFzZSA9IHZhZGRy
OwotCWluZm8tPmZpeC5zbWVtX2xlbiA9IHNpemU7Ci0JaW5mby0+Zml4LnNtZW1fc3RhcnQgPSAo
dW5zaWduZWQgbG9uZyl2YWRkcjsKLQotCWluZm8tPmZib3BzID0gJnVkbGZiX29wczsKLQlkcm1f
ZmJfaGVscGVyX2ZpbGxfaW5mbyhpbmZvLCAmdWZiZGV2LT5oZWxwZXIsIHNpemVzKTsKLQotCURS
TV9ERUJVR19LTVMoImFsbG9jYXRlZCAlZHglZCB2bWFsICVwXG4iLAotCQkgICAgICBmYi0+d2lk
dGgsIGZiLT5oZWlnaHQsCi0JCSAgICAgIHVmYmRldi0+dWZiLnNobWVtLT52YWRkcik7Ci0KLQly
ZXR1cm4gcmV0Owotb3V0X2dmcmVlOgotCWRybV9nZW1fb2JqZWN0X3B1dF91bmxvY2tlZCgmdWZi
ZGV2LT51ZmIuc2htZW0tPmJhc2UpOwotb3V0OgotCXJldHVybiByZXQ7Ci19Ci0KLXN0YXRpYyBj
b25zdCBzdHJ1Y3QgZHJtX2ZiX2hlbHBlcl9mdW5jcyB1ZGxfZmJfaGVscGVyX2Z1bmNzID0gewot
CS5mYl9wcm9iZSA9IHVkbGZiX2NyZWF0ZSwKLX07Ci0KLXN0YXRpYyB2b2lkIHVkbF9mYmRldl9k
ZXN0cm95KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0JCQkgICAgICBzdHJ1Y3QgdWRsX2ZiZGV2
ICp1ZmJkZXYpCi17Ci0JZHJtX2ZiX2hlbHBlcl91bnJlZ2lzdGVyX2ZiaSgmdWZiZGV2LT5oZWxw
ZXIpOwotCWRybV9mYl9oZWxwZXJfZmluaSgmdWZiZGV2LT5oZWxwZXIpOwotCWlmICh1ZmJkZXYt
PnVmYi5zaG1lbSkgewotCQlkcm1fZnJhbWVidWZmZXJfdW5yZWdpc3Rlcl9wcml2YXRlKCZ1ZmJk
ZXYtPnVmYi5iYXNlKTsKLQkJZHJtX2ZyYW1lYnVmZmVyX2NsZWFudXAoJnVmYmRldi0+dWZiLmJh
c2UpOwotCQlkcm1fZ2VtX29iamVjdF9wdXRfdW5sb2NrZWQoJnVmYmRldi0+dWZiLnNobWVtLT5i
YXNlKTsKLQl9Ci19Ci0KLWludCB1ZGxfZmJkZXZfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
KQotewotCXN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwoZGV2KTsKLQlpbnQgYnBwX3Nl
bCA9IGZiX2JwcDsKLQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXY7Ci0JaW50IHJldDsKLQotCXVm
YmRldiA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCB1ZGxfZmJkZXYpLCBHRlBfS0VSTkVMKTsKLQlp
ZiAoIXVmYmRldikKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQl1ZGwtPmZiZGV2ID0gdWZiZGV2Owot
Ci0JZHJtX2ZiX2hlbHBlcl9wcmVwYXJlKGRldiwgJnVmYmRldi0+aGVscGVyLCAmdWRsX2ZiX2hl
bHBlcl9mdW5jcyk7Ci0KLQlyZXQgPSBkcm1fZmJfaGVscGVyX2luaXQoZGV2LCAmdWZiZGV2LT5o
ZWxwZXIsIDEpOwotCWlmIChyZXQpCi0JCWdvdG8gZnJlZTsKLQotCXJldCA9IGRybV9mYl9oZWxw
ZXJfc2luZ2xlX2FkZF9hbGxfY29ubmVjdG9ycygmdWZiZGV2LT5oZWxwZXIpOwotCWlmIChyZXQp
Ci0JCWdvdG8gZmluaTsKLQotCS8qIGRpc2FibGUgYWxsIHRoZSBwb3NzaWJsZSBvdXRwdXRzL2Ny
dGNzIGJlZm9yZSBlbnRlcmluZyBLTVMgbW9kZSAqLwotCWRybV9oZWxwZXJfZGlzYWJsZV91bnVz
ZWRfZnVuY3Rpb25zKGRldik7Ci0KLQlyZXQgPSBkcm1fZmJfaGVscGVyX2luaXRpYWxfY29uZmln
KCZ1ZmJkZXYtPmhlbHBlciwgYnBwX3NlbCk7Ci0JaWYgKHJldCkKLQkJZ290byBmaW5pOwotCi0J
cmV0dXJuIDA7Ci0KLWZpbmk6Ci0JZHJtX2ZiX2hlbHBlcl9maW5pKCZ1ZmJkZXYtPmhlbHBlcik7
Ci1mcmVlOgotCWtmcmVlKHVmYmRldik7Ci0JcmV0dXJuIHJldDsKLX0KLQotdm9pZCB1ZGxfZmJk
ZXZfY2xlYW51cChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQotewotCXN0cnVjdCB1ZGxfZGV2aWNl
ICp1ZGwgPSB0b191ZGwoZGV2KTsKLQlpZiAoIXVkbC0+ZmJkZXYpCi0JCXJldHVybjsKLQotCXVk
bF9mYmRldl9kZXN0cm95KGRldiwgdWRsLT5mYmRldik7Ci0Ja2ZyZWUodWRsLT5mYmRldik7Ci0J
dWRsLT5mYmRldiA9IE5VTEw7Ci19Ci0KLXZvaWQgdWRsX2ZiZGV2X3VucGx1ZyhzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2KQotewotCXN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwoZGV2KTsK
LQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXY7Ci0JaWYgKCF1ZGwtPmZiZGV2KQotCQlyZXR1cm47
Ci0KLQl1ZmJkZXYgPSB1ZGwtPmZiZGV2OwotCWRybV9mYl9oZWxwZXJfdW5saW5rX2ZiaSgmdWZi
ZGV2LT5oZWxwZXIpOwotfQotCiBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICoKIHVkbF9mYl91c2Vy
X2ZiX2NyZWF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQkgICBzdHJ1Y3QgZHJtX2ZpbGUg
KmZpbGUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWluLmMgYi9kcml2
ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWluLmMKaW5kZXggNGU4NTRlMDE3MzkwLi4zYmUwYzBjZWM0
OWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21haW4uYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vdWRsL3VkbF9tYWluLmMKQEAgLTksNiArOSw3IEBACiAgKi8KIAogI2luY2x1
ZGUgPGRybS9kcm0uaD4KKyNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgogI2luY2x1ZGUg
PGRybS9kcm1fcHJpbnQuaD4KICNpbmNsdWRlIDxkcm0vZHJtX3Byb2JlX2hlbHBlci5oPgogCkBA
IC0zMzgsNyArMzM5LDcgQEAgaW50IHVkbF9pbml0KHN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwpCiAJ
aWYgKHJldCkKIAkJZ290byBlcnI7CiAKLQlyZXQgPSB1ZGxfZmJkZXZfaW5pdChkZXYpOworCXJl
dCA9IGRybV9mYmRldl9nZW5lcmljX3NldHVwKGRldiwgMTYpOwogCWlmIChyZXQpCiAJCWdvdG8g
ZXJyOwogCkBAIC0zNjcsNiArMzY4LDQgQEAgdm9pZCB1ZGxfZmluaShzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2KQogCiAJaWYgKHVkbC0+dXJicy5jb3VudCkKIAkJdWRsX2ZyZWVfdXJiX2xpc3QoZGV2
KTsKLQotCXVkbF9mYmRldl9jbGVhbnVwKGRldik7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vdWRsL3VkbF9tb2Rlc2V0LmMgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tb2Rlc2V0
LmMKaW5kZXggYmMxYWI2MDYwZGM2Li42NTgyYzlkMjdhODcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS91ZGwvdWRsX21vZGVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9t
b2Rlc2V0LmMKQEAgLTQyMiw3ICs0MjIsNiBAQCBzdGF0aWMgaW50IHVkbF9jcnRjX2luaXQoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldikKIAogc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fbW9kZV9jb25m
aWdfZnVuY3MgdWRsX21vZGVfZnVuY3MgPSB7CiAJLmZiX2NyZWF0ZSA9IHVkbF9mYl91c2VyX2Zi
X2NyZWF0ZSwKLQkub3V0cHV0X3BvbGxfY2hhbmdlZCA9IE5VTEwsCiB9OwogCiBpbnQgdWRsX21v
ZGVzZXRfaW5pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQotLSAKMi4yMy4wCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBs
aXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
