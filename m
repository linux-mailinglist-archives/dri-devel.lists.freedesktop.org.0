Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 325966EF89
	for <lists+dri-devel@lfdr.de>; Sat, 20 Jul 2019 15:47:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7DB856E8BC;
	Sat, 20 Jul 2019 13:47:34 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from smtp.domeneshop.no (smtp.domeneshop.no
 [IPv6:2a01:5b40:0:3005::1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B893B6E8B8
 for <dri-devel@lists.freedesktop.org>; Sat, 20 Jul 2019 13:47:19 +0000 (UTC)
Received: from 211.81-166-168.customer.lyse.net ([81.166.168.211]:56672
 helo=localhost.localdomain)
 by smtp.domeneshop.no with esmtpsa (TLS1.2:ECDHE_RSA_AES_128_CBC_SHA1:128)
 (Exim 4.84_2) (envelope-from <noralf@tronnes.org>)
 id 1hophl-0003FR-SJ; Sat, 20 Jul 2019 15:47:18 +0200
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH 4/6] drm/tinydrm: Split struct mipi_dbi in two
Date: Sat, 20 Jul 2019 15:47:07 +0200
Message-Id: <20190720134709.15186-5-noralf@tronnes.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190720134709.15186-1-noralf@tronnes.org>
References: <20190720134709.15186-1-noralf@tronnes.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; d=tronnes.org; s=ds201810; 
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From;
 bh=0+n5Cdpjqffw8rFX0+XtycVnC5jEjN4o8Qr5+to1OIQ=; 
 b=I6FJ9zdqlhYHeKGEcJs+9MgCjaTHBX17EPn7g4q2OO9waDGOtk4ooqijLNnfje3vIMlc+UBdp0BtFetoyvQlAzGQOzsI623iQWdNlJ77t1CRfrGLo2XoPLjuvQ+2SZ+7EHIQaZsFUhj18IE5BV9aClTBOYLamt0IaTVXM9ajlFRgapWDwKHE00d9MRZq+CcdC57csxqwZwk/qOdwHQkFLZ5JU36umNY8mbooVpy/7RWsDuDoUDykqNSSP3lFEy+UyDYbBIj5rcDo/9Y9Zbikb9WIgfOhIoMR425zM37oDrQhDAo//gNKeyZcWCEuUEXjEwdxYdyNi26DR0tOeXWNMw==;
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: david@lechnology.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

U3BsaXQgc3RydWN0IG1pcGlfZGJpIGludG8gYW4gaW50ZXJmYWNlIHBhcnQgYW5kIGEgZGlzcGxh
eSBwaXBlbGluZSBwYXJ0LgpUaGUgaW50ZXJmYWNlIHBhcnQgY2FuIGJlIHVzZWQgYnkgZHJpdmVy
cyB0aGF0IG5lZWQgdG8gaW5pdGlhbGl6ZSB0aGUKY29udHJvbGxlciwgYnV0IHRoYXQgd29uJ3Qg
dXBsb2FkIHRoZSBmcmFtZWJ1ZmZlciBvdmVyIHRoaXMgaW50ZXJmYWNlLgoKTUlQSSBEQkkgc3Vw
cG9ydHMgMyBpbnRlcmZhY2UgdHlwZXM6Ci0gQS4gTW90b3JvbGEgNjgwMCB0eXBlIHBhcmFsbGVs
IGJ1cwotIEIuIEludGVsIDgwODAgdHlwZSBwYXJhbGxlbCBidXMKLSBDLiBTUEkgdHlwZSB3aXRo
IDMgb3B0aW9uczoKCkkndmUgZW1iZWRkZWQgdGhlIFNQSSB0eXBlIHNwZWNpZmljcyBpbiB0aGUg
bWlwaV9kYmkgc3RydWN0IHRvIGF2b2lkCmFkZGluZyB1bm5lY2Vzc2FyeSBjb21wbGV4aXR5LiBJ
ZiBtb3JlIGludGVyZmFjZSB0eXBlcyB3aWxsIGJlIHN1cHBvcnRlZAppbiB0aGUgZnV0dXJlLCB0
aGUgdHlwZSBzcGVjaWZpY3MgbWlnaHQgaGF2ZSB0byBiZSBzcGxpdCBvdXQuCgpSZW5hbWUgZnVu
Y3Rpb25zIHRvIG1hdGNoIHRoZSBuZXcgc3RydWN0IG1pcGlfZGJpX2RldjoKLSBkcm1fdG9fbWlw
aV9kYmkoKSAtPiBkcm1fdG9fbWlwaV9kYmlfZGV2KCkuCi0gbWlwaV9kYmlfaW5pdCooKSAtPiBt
aXBpX2RiaV9kZXZfaW5pdCooKS4KCkNjOiBFcmljIEFuaG9sdCA8ZXJpY0BhbmhvbHQubmV0PgpD
YzogRGF2aWQgTGVjaG5lciA8ZGF2aWRAbGVjaG5vbG9neS5jb20+ClNpZ25lZC1vZmYtYnk6IE5v
cmFsZiBUcsO4bm5lcyA8bm9yYWxmQHRyb25uZXMub3JnPgotLS0KIGRyaXZlcnMvZ3B1L2RybS90
aW55ZHJtL2h4ODM1N2QuYyAgfCAgMTAgKy0tCiBkcml2ZXJzL2dwdS9kcm0vdGlueWRybS9pbGk5
MjI1LmMgIHwgIDE4ICsrLS0KIGRyaXZlcnMvZ3B1L2RybS90aW55ZHJtL2lsaTkzNDEuYyAgfCAg
MTAgKy0tCiBkcml2ZXJzL2dwdS9kcm0vdGlueWRybS9taTAyODNxdC5jIHwgIDEwICstLQogZHJp
dmVycy9ncHUvZHJtL3Rpbnlkcm0vbWlwaS1kYmkuYyB8ICA4MyArKysrKysrKysrLS0tLS0tLS0t
CiBkcml2ZXJzL2dwdS9kcm0vdGlueWRybS9zdDc1ODYuYyAgIHwgIDI2ICsrKy0tLQogZHJpdmVy
cy9ncHUvZHJtL3Rpbnlkcm0vc3Q3NzM1ci5jICB8ICAxMCArLS0KIGluY2x1ZGUvZHJtL3Rpbnlk
cm0vbWlwaS1kYmkuaCAgICAgfCAxMjkgKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0KIDgg
ZmlsZXMgY2hhbmdlZCwgMTc1IGluc2VydGlvbnMoKyksIDEyMSBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdGlueWRybS9oeDgzNTdkLmMgYi9kcml2ZXJzL2dwdS9k
cm0vdGlueWRybS9oeDgzNTdkLmMKaW5kZXggZTExM2M0MzRmZjU1Li40NzFlNTQ1MTU0YjMgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS90aW55ZHJtL2h4ODM1N2QuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vdGlueWRybS9oeDgzNTdkLmMKQEAgLTQ3LDggKzQ3LDggQEAgc3RhdGljIHZvaWQg
eXgyNDBxdjI5X2VuYWJsZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUsCiAJ
CQkgICAgIHN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgc3RydWN0
IGRybV9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCiB7Ci0Jc3RydWN0IG1pcGlfZGJpICpkYmlk
ZXYgPSBkcm1fdG9fbWlwaV9kYmkocGlwZS0+Y3J0Yy5kZXYpOwotCXN0cnVjdCBtaXBpX2RiaSAq
ZGJpID0gZGJpZGV2OworCXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRiaWRldiA9IGRybV90b19taXBp
X2RiaV9kZXYocGlwZS0+Y3J0Yy5kZXYpOworCXN0cnVjdCBtaXBpX2RiaSAqZGJpID0gJmRiaWRl
di0+ZGJpOwogCXU4IGFkZHJfbW9kZTsKIAlpbnQgcmV0LCBpZHg7CiAKQEAgLTIyMCw3ICsyMjAs
NyBAQCBNT0RVTEVfREVWSUNFX1RBQkxFKHNwaSwgaHg4MzU3ZF9pZCk7CiBzdGF0aWMgaW50IGh4
ODM1N2RfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIHsKIAlzdHJ1Y3QgZGV2aWNlICpk
ZXYgPSAmc3BpLT5kZXY7Ci0Jc3RydWN0IG1pcGlfZGJpICpkYmlkZXY7CisJc3RydWN0IG1pcGlf
ZGJpX2RldiAqZGJpZGV2OwogCXN0cnVjdCBkcm1fZGV2aWNlICpkcm07CiAJc3RydWN0IGdwaW9f
ZGVzYyAqZGM7CiAJdTMyIHJvdGF0aW9uID0gMDsKQEAgLTI1MSwxMSArMjUxLDExIEBAIHN0YXRp
YyBpbnQgaHg4MzU3ZF9wcm9iZShzdHJ1Y3Qgc3BpX2RldmljZSAqc3BpKQogCiAJZGV2aWNlX3By
b3BlcnR5X3JlYWRfdTMyKGRldiwgInJvdGF0aW9uIiwgJnJvdGF0aW9uKTsKIAotCXJldCA9IG1p
cGlfZGJpX3NwaV9pbml0KHNwaSwgZGJpZGV2LCBkYyk7CisJcmV0ID0gbWlwaV9kYmlfc3BpX2lu
aXQoc3BpLCAmZGJpZGV2LT5kYmksIGRjKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0J
cmV0ID0gbWlwaV9kYmlfaW5pdChkYmlkZXYsICZoeDgzNTdkX3BpcGVfZnVuY3MsICZ5eDM1MGh2
MTVfbW9kZSwgcm90YXRpb24pOworCXJldCA9IG1pcGlfZGJpX2Rldl9pbml0KGRiaWRldiwgJmh4
ODM1N2RfcGlwZV9mdW5jcywgJnl4MzUwaHYxNV9tb2RlLCByb3RhdGlvbik7CiAJaWYgKHJldCkK
IAkJcmV0dXJuIHJldDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Rpbnlkcm0vaWxp
OTIyNS5jIGIvZHJpdmVycy9ncHUvZHJtL3Rpbnlkcm0vaWxpOTIyNS5jCmluZGV4IDIwOWE3NWRh
YjdjZS4uMzM3NjZmYzIxYjJiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdGlueWRybS9p
bGk5MjI1LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Rpbnlkcm0vaWxpOTIyNS5jCkBAIC03OCwx
MCArNzgsMTAgQEAgc3RhdGljIGlubGluZSBpbnQgaWxpOTIyNV9jb21tYW5kKHN0cnVjdCBtaXBp
X2RiaSAqZGJpLCB1OCBjbWQsIHUxNiBkYXRhKQogc3RhdGljIHZvaWQgaWxpOTIyNV9mYl9kaXJ0
eShzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwgc3RydWN0IGRybV9yZWN0ICpyZWN0KQogewog
CXN0cnVjdCBkcm1fZ2VtX2NtYV9vYmplY3QgKmNtYV9vYmogPSBkcm1fZmJfY21hX2dldF9nZW1f
b2JqKGZiLCAwKTsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiA9IGRybV90b19taXBpX2RiaShm
Yi0+ZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmlf
ZGV2KGZiLT5kZXYpOwogCXVuc2lnbmVkIGludCBoZWlnaHQgPSByZWN0LT55MiAtIHJlY3QtPnkx
OwogCXVuc2lnbmVkIGludCB3aWR0aCA9IHJlY3QtPngyIC0gcmVjdC0+eDE7Ci0Jc3RydWN0IG1p
cGlfZGJpICpkYmkgPSBkYmlkZXY7CisJc3RydWN0IG1pcGlfZGJpICpkYmkgPSAmZGJpZGV2LT5k
Ymk7CiAJYm9vbCBzd2FwID0gZGJpLT5zd2FwX2J5dGVzOwogCXUxNiB4X3N0YXJ0LCB5X3N0YXJ0
OwogCXUxNiB4MSwgeDIsIHkxLCB5MjsKQEAgLTE4MywxMCArMTgzLDEwIEBAIHN0YXRpYyB2b2lk
IGlsaTkyMjVfcGlwZV9lbmFibGUoc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBl
LAogCQkJCXN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQlzdHJ1Y3QgZHJt
X3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIHsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiA9
IGRybV90b19taXBpX2RiaShwaXBlLT5jcnRjLmRldik7CisJc3RydWN0IG1pcGlfZGJpX2RldiAq
ZGJpZGV2ID0gZHJtX3RvX21pcGlfZGJpX2RldihwaXBlLT5jcnRjLmRldik7CiAJc3RydWN0IGRy
bV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+ZmI7CiAJc3RydWN0IGRldmljZSAqZGV2
ID0gcGlwZS0+Y3J0Yy5kZXYtPmRldjsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaSA9IGRiaWRldjsK
KwlzdHJ1Y3QgbWlwaV9kYmkgKmRiaSA9ICZkYmlkZXYtPmRiaTsKIAlzdHJ1Y3QgZHJtX3JlY3Qg
cmVjdCA9IHsKIAkJLngxID0gMCwKIAkJLngyID0gZmItPndpZHRoLApAQCAtMjkxLDggKzI5MSw4
IEBAIHN0YXRpYyB2b2lkIGlsaTkyMjVfcGlwZV9lbmFibGUoc3RydWN0IGRybV9zaW1wbGVfZGlz
cGxheV9waXBlICpwaXBlLAogCiBzdGF0aWMgdm9pZCBpbGk5MjI1X3BpcGVfZGlzYWJsZShzdHJ1
Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUpCiB7Ci0Jc3RydWN0IG1pcGlfZGJpICpk
YmlkZXYgPSBkcm1fdG9fbWlwaV9kYmkocGlwZS0+Y3J0Yy5kZXYpOwotCXN0cnVjdCBtaXBpX2Ri
aSAqZGJpID0gZGJpZGV2OworCXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRiaWRldiA9IGRybV90b19t
aXBpX2RiaV9kZXYocGlwZS0+Y3J0Yy5kZXYpOworCXN0cnVjdCBtaXBpX2RiaSAqZGJpID0gJmRi
aWRldi0+ZGJpOwogCiAJRFJNX0RFQlVHX0tNUygiXG4iKTsKIApAQCAtMzc4LDcgKzM3OCw3IEBA
IE1PRFVMRV9ERVZJQ0VfVEFCTEUoc3BpLCBpbGk5MjI1X2lkKTsKIHN0YXRpYyBpbnQgaWxpOTIy
NV9wcm9iZShzdHJ1Y3Qgc3BpX2RldmljZSAqc3BpKQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9
ICZzcGktPmRldjsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldjsKKwlzdHJ1Y3QgbWlwaV9kYmlf
ZGV2ICpkYmlkZXY7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRybTsKIAlzdHJ1Y3QgbWlwaV9kYmkg
KmRiaTsKIAlzdHJ1Y3QgZ3Bpb19kZXNjICpyczsKQEAgLTM4OSw3ICszODksNyBAQCBzdGF0aWMg
aW50IGlsaTkyMjVfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIAlpZiAoIWRiaWRldikK
IAkJcmV0dXJuIC1FTk9NRU07CiAKLQlkYmkgPSBkYmlkZXY7CisJZGJpID0gJmRiaWRldi0+ZGJp
OwogCWRybSA9ICZkYmlkZXYtPmRybTsKIAlyZXQgPSBkZXZtX2RybV9kZXZfaW5pdChkZXYsIGRy
bSwgJmlsaTkyMjVfZHJpdmVyKTsKIAlpZiAocmV0KSB7CkBAIC00MjAsNyArNDIwLDcgQEAgc3Rh
dGljIGludCBpbGk5MjI1X3Byb2JlKHN0cnVjdCBzcGlfZGV2aWNlICpzcGkpCiAJLyogb3ZlcnJp
ZGUgdGhlIGNvbW1hbmQgZnVuY3Rpb24gc2V0IGluICBtaXBpX2RiaV9zcGlfaW5pdCgpICovCiAJ
ZGJpLT5jb21tYW5kID0gaWxpOTIyNV9kYmlfY29tbWFuZDsKIAotCXJldCA9IG1pcGlfZGJpX2lu
aXQoZGJpZGV2LCAmaWxpOTIyNV9waXBlX2Z1bmNzLCAmaWxpOTIyNV9tb2RlLCByb3RhdGlvbik7
CisJcmV0ID0gbWlwaV9kYmlfZGV2X2luaXQoZGJpZGV2LCAmaWxpOTIyNV9waXBlX2Z1bmNzLCAm
aWxpOTIyNV9tb2RlLCByb3RhdGlvbik7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3Rpbnlkcm0vaWxpOTM0MS5jIGIvZHJpdmVycy9ncHUv
ZHJtL3Rpbnlkcm0vaWxpOTM0MS5jCmluZGV4IGRmYThjNmU5NTJjOC4uNzFhZjI3NTUyMmE1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdGlueWRybS9pbGk5MzQxLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL3Rpbnlkcm0vaWxpOTM0MS5jCkBAIC01Myw4ICs1Myw4IEBAIHN0YXRpYyB2b2lk
IHl4MjQwcXYyOV9lbmFibGUoc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBlLAog
CQkJICAgICBzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgIHN0cnVj
dCBkcm1fcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQogewotCXN0cnVjdCBtaXBpX2RiaSAqZGJp
ZGV2ID0gZHJtX3RvX21pcGlfZGJpKHBpcGUtPmNydGMuZGV2KTsKLQlzdHJ1Y3QgbWlwaV9kYmkg
KmRiaSA9IGRiaWRldjsKKwlzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlw
aV9kYmlfZGV2KHBpcGUtPmNydGMuZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kYmkgKmRiaSA9ICZkYmlk
ZXYtPmRiaTsKIAl1OCBhZGRyX21vZGU7CiAJaW50IHJldCwgaWR4OwogCkBAIC0xNzYsNyArMTc2
LDcgQEAgTU9EVUxFX0RFVklDRV9UQUJMRShzcGksIGlsaTkzNDFfaWQpOwogc3RhdGljIGludCBp
bGk5MzQxX3Byb2JlKHN0cnVjdCBzcGlfZGV2aWNlICpzcGkpCiB7CiAJc3RydWN0IGRldmljZSAq
ZGV2ID0gJnNwaS0+ZGV2OwotCXN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2OworCXN0cnVjdCBtaXBp
X2RiaV9kZXYgKmRiaWRldjsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZHJtOwogCXN0cnVjdCBtaXBp
X2RiaSAqZGJpOwogCXN0cnVjdCBncGlvX2Rlc2MgKmRjOwpAQCAtMTg3LDcgKzE4Nyw3IEBAIHN0
YXRpYyBpbnQgaWxpOTM0MV9wcm9iZShzdHJ1Y3Qgc3BpX2RldmljZSAqc3BpKQogCWlmICghZGJp
ZGV2KQogCQlyZXR1cm4gLUVOT01FTTsKIAotCWRiaSA9IGRiaWRldjsKKwlkYmkgPSAmZGJpZGV2
LT5kYmk7CiAJZHJtID0gJmRiaWRldi0+ZHJtOwogCXJldCA9IGRldm1fZHJtX2Rldl9pbml0KGRl
diwgZHJtLCAmaWxpOTM0MV9kcml2ZXIpOwogCWlmIChyZXQpIHsKQEAgLTIxOSw3ICsyMTksNyBA
QCBzdGF0aWMgaW50IGlsaTkzNDFfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIAlpZiAo
cmV0KQogCQlyZXR1cm4gcmV0OwogCi0JcmV0ID0gbWlwaV9kYmlfaW5pdChkYmlkZXYsICZpbGk5
MzQxX3BpcGVfZnVuY3MsICZ5eDI0MHF2MjlfbW9kZSwgcm90YXRpb24pOworCXJldCA9IG1pcGlf
ZGJpX2Rldl9pbml0KGRiaWRldiwgJmlsaTkzNDFfcGlwZV9mdW5jcywgJnl4MjQwcXYyOV9tb2Rl
LCByb3RhdGlvbik7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL3Rpbnlkcm0vbWkwMjgzcXQuYyBiL2RyaXZlcnMvZ3B1L2RybS90aW55ZHJt
L21pMDI4M3F0LmMKaW5kZXggOWQyODRmYjI0YzM2Li43OTI1ZjY5YmM1MDIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS90aW55ZHJtL21pMDI4M3F0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L3Rpbnlkcm0vbWkwMjgzcXQuYwpAQCAtNTEsOCArNTEsOCBAQCBzdGF0aWMgdm9pZCBtaTAyODNx
dF9lbmFibGUoc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBlLAogCQkJICAgIHN0
cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICBzdHJ1Y3QgZHJtX3BsYW5l
X3N0YXRlICpwbGFuZV9zdGF0ZSkKIHsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiA9IGRybV90
b19taXBpX2RiaShwaXBlLT5jcnRjLmRldik7Ci0Jc3RydWN0IG1pcGlfZGJpICpkYmkgPSBkYmlk
ZXY7CisJc3RydWN0IG1pcGlfZGJpX2RldiAqZGJpZGV2ID0gZHJtX3RvX21pcGlfZGJpX2Rldihw
aXBlLT5jcnRjLmRldik7CisJc3RydWN0IG1pcGlfZGJpICpkYmkgPSAmZGJpZGV2LT5kYmk7CiAJ
dTggYWRkcl9tb2RlOwogCWludCByZXQsIGlkeDsKIApAQCAtMTgwLDcgKzE4MCw3IEBAIE1PRFVM
RV9ERVZJQ0VfVEFCTEUoc3BpLCBtaTAyODNxdF9pZCk7CiBzdGF0aWMgaW50IG1pMDI4M3F0X3By
b2JlKHN0cnVjdCBzcGlfZGV2aWNlICpzcGkpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnNw
aS0+ZGV2OwotCXN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2OworCXN0cnVjdCBtaXBpX2RiaV9kZXYg
KmRiaWRldjsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZHJtOwogCXN0cnVjdCBtaXBpX2RiaSAqZGJp
OwogCXN0cnVjdCBncGlvX2Rlc2MgKmRjOwpAQCAtMTkxLDcgKzE5MSw3IEBAIHN0YXRpYyBpbnQg
bWkwMjgzcXRfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIAlpZiAoIWRiaWRldikKIAkJ
cmV0dXJuIC1FTk9NRU07CiAKLQlkYmkgPSBkYmlkZXY7CisJZGJpID0gJmRiaWRldi0+ZGJpOwog
CWRybSA9ICZkYmlkZXYtPmRybTsKIAlyZXQgPSBkZXZtX2RybV9kZXZfaW5pdChkZXYsIGRybSwg
Jm1pMDI4M3F0X2RyaXZlcik7CiAJaWYgKHJldCkgewpAQCAtMjI3LDcgKzIyNyw3IEBAIHN0YXRp
YyBpbnQgbWkwMjgzcXRfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIAlpZiAocmV0KQog
CQlyZXR1cm4gcmV0OwogCi0JcmV0ID0gbWlwaV9kYmlfaW5pdChkYmlkZXYsICZtaTAyODNxdF9w
aXBlX2Z1bmNzLCAmbWkwMjgzcXRfbW9kZSwgcm90YXRpb24pOworCXJldCA9IG1pcGlfZGJpX2Rl
dl9pbml0KGRiaWRldiwgJm1pMDI4M3F0X3BpcGVfZnVuY3MsICZtaTAyODNxdF9tb2RlLCByb3Rh
dGlvbik7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL3Rpbnlkcm0vbWlwaS1kYmkuYyBiL2RyaXZlcnMvZ3B1L2RybS90aW55ZHJtL21pcGkt
ZGJpLmMKaW5kZXggOTViMDMyYTRiMzRiLi4xNjE3Nzg0ZmVmMDkgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS90aW55ZHJtL21pcGktZGJpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3Rpbnlk
cm0vbWlwaS1kYmkuYwpAQCAtMjQxLDEwICsyNDEsMTAgQEAgRVhQT1JUX1NZTUJPTChtaXBpX2Ri
aV9idWZfY29weSk7CiBzdGF0aWMgdm9pZCBtaXBpX2RiaV9mYl9kaXJ0eShzdHJ1Y3QgZHJtX2Zy
YW1lYnVmZmVyICpmYiwgc3RydWN0IGRybV9yZWN0ICpyZWN0KQogewogCXN0cnVjdCBkcm1fZ2Vt
X2NtYV9vYmplY3QgKmNtYV9vYmogPSBkcm1fZmJfY21hX2dldF9nZW1fb2JqKGZiLCAwKTsKLQlz
dHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiA9IGRybV90b19taXBpX2RiaShmYi0+ZGV2KTsKKwlzdHJ1
Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmlfZGV2KGZiLT5kZXYpOwog
CXVuc2lnbmVkIGludCBoZWlnaHQgPSByZWN0LT55MiAtIHJlY3QtPnkxOwogCXVuc2lnbmVkIGlu
dCB3aWR0aCA9IHJlY3QtPngyIC0gcmVjdC0+eDE7Ci0Jc3RydWN0IG1pcGlfZGJpICpkYmkgPSBk
YmlkZXY7CisJc3RydWN0IG1pcGlfZGJpICpkYmkgPSAmZGJpZGV2LT5kYmk7CiAJYm9vbCBzd2Fw
ID0gZGJpLT5zd2FwX2J5dGVzOwogCWludCBpZHgsIHJldCA9IDA7CiAJYm9vbCBmdWxsOwpAQCAt
MzI3LDcgKzMyNyw3IEBAIEVYUE9SVF9TWU1CT0wobWlwaV9kYmlfcGlwZV91cGRhdGUpOwogICog
ZnJhbWVidWZmZXIgZmx1c2hpbmcsIGNhbid0IHVzZSB0aGlzIGZ1bmN0aW9uIHNpbmNlIHRoZXkg
Ym90aCB1c2UgdGhlIHNhbWUKICAqIGZsdXNoaW5nIGNvZGUuCiAgKi8KLXZvaWQgbWlwaV9kYmlf
ZW5hYmxlX2ZsdXNoKHN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2LAordm9pZCBtaXBpX2RiaV9lbmFi
bGVfZmx1c2goc3RydWN0IG1pcGlfZGJpX2RldiAqZGJpZGV2LAogCQkJICAgc3RydWN0IGRybV9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqcGxh
bmVfc3RhdGUpCiB7CkBAIC0zNTEsMTMgKzM1MSwxMyBAQCB2b2lkIG1pcGlfZGJpX2VuYWJsZV9m
bHVzaChzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiwKIH0KIEVYUE9SVF9TWU1CT0wobWlwaV9kYmlf
ZW5hYmxlX2ZsdXNoKTsKIAotc3RhdGljIHZvaWQgbWlwaV9kYmlfYmxhbmsoc3RydWN0IG1pcGlf
ZGJpICpkYmlkZXYpCitzdGF0aWMgdm9pZCBtaXBpX2RiaV9ibGFuayhzdHJ1Y3QgbWlwaV9kYmlf
ZGV2ICpkYmlkZXYpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRybSA9ICZkYmlkZXYtPmRybTsK
IAl1MTYgaGVpZ2h0ID0gZHJtLT5tb2RlX2NvbmZpZy5taW5faGVpZ2h0OwogCXUxNiB3aWR0aCA9
IGRybS0+bW9kZV9jb25maWcubWluX3dpZHRoOworCXN0cnVjdCBtaXBpX2RiaSAqZGJpID0gJmRi
aWRldi0+ZGJpOwogCXNpemVfdCBsZW4gPSB3aWR0aCAqIGhlaWdodCAqIDI7Ci0Jc3RydWN0IG1p
cGlfZGJpICpkYmkgPSBkYmlkZXY7CiAJaW50IGlkeDsKIAogCWlmICghZHJtX2Rldl9lbnRlcihk
cm0sICZpZHgpKQpAQCAtMzg1LDcgKzM4NSw3IEBAIHN0YXRpYyB2b2lkIG1pcGlfZGJpX2JsYW5r
KHN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2KQogICovCiB2b2lkIG1pcGlfZGJpX3BpcGVfZGlzYWJs
ZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUpCiB7Ci0Jc3RydWN0IG1pcGlf
ZGJpICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmkocGlwZS0+Y3J0Yy5kZXYpOworCXN0cnVjdCBt
aXBpX2RiaV9kZXYgKmRiaWRldiA9IGRybV90b19taXBpX2RiaV9kZXYocGlwZS0+Y3J0Yy5kZXYp
OwogCiAJaWYgKCFkYmlkZXYtPmVuYWJsZWQpCiAJCXJldHVybjsKQEAgLTQwNiw3ICs0MDYsNyBA
QCBFWFBPUlRfU1lNQk9MKG1pcGlfZGJpX3BpcGVfZGlzYWJsZSk7CiAKIHN0YXRpYyBpbnQgbWlw
aV9kYmlfY29ubmVjdG9yX2dldF9tb2RlcyhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9y
KQogewotCXN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2ID0gZHJtX3RvX21pcGlfZGJpKGNvbm5lY3Rv
ci0+ZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmlf
ZGV2KGNvbm5lY3Rvci0+ZGV2KTsKIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZTsKIAog
CW1vZGUgPSBkcm1fbW9kZV9kdXBsaWNhdGUoY29ubmVjdG9yLT5kZXYsICZkYmlkZXYtPm1vZGUp
OwpAQCAtNDcwLDcgKzQ3MCw3IEBAIHN0YXRpYyBjb25zdCB1aW50MzJfdCBtaXBpX2RiaV9mb3Jt
YXRzW10gPSB7CiB9OwogCiAvKioKLSAqIG1pcGlfZGJpX2luaXRfd2l0aF9mb3JtYXRzIC0gTUlQ
SSBEQkkgaW5pdGlhbGl6YXRpb24gd2l0aCBjdXN0b20gZm9ybWF0cworICogbWlwaV9kYmlfZGV2
X2luaXRfd2l0aF9mb3JtYXRzIC0gTUlQSSBEQkkgZGV2aWNlIGluaXRpYWxpemF0aW9uIHdpdGgg
Y3VzdG9tIGZvcm1hdHMKICAqIEBkYmlkZXY6IE1JUEkgREJJIGRldmljZSBzdHJ1Y3R1cmUgdG8g
aW5pdGlhbGl6ZQogICogQGZ1bmNzOiBEaXNwbGF5IHBpcGUgZnVuY3Rpb25zCiAgKiBAZm9ybWF0
czogQXJyYXkgb2Ygc3VwcG9ydGVkIGZvcm1hdHMgKERSTV9GT1JNQVRcX1wqKS4KQEAgLTQ4Myw3
ICs0ODMsNyBAQCBzdGF0aWMgY29uc3QgdWludDMyX3QgbWlwaV9kYmlfZm9ybWF0c1tdID0gewog
ICogaGFzIG9uZSBmaXhlZCAmZHJtX2Rpc3BsYXlfbW9kZSB3aGljaCBpcyByb3RhdGVkIGFjY29y
ZGluZyB0byBAcm90YXRpb24uCiAgKiBUaGlzIG1vZGUgaXMgdXNlZCB0byBzZXQgdGhlIG1vZGUg
Y29uZmlnIG1pbi9tYXggd2lkdGgvaGVpZ2h0IHByb3BlcnRpZXMuCiAgKgotICogVXNlIG1pcGlf
ZGJpX2luaXQoKSBpZiB5b3UgZG9uJ3QgbmVlZCBjdXN0b20gZm9ybWF0cy4KKyAqIFVzZSBtaXBp
X2RiaV9kZXZfaW5pdCgpIGlmIHlvdSBkb24ndCBuZWVkIGN1c3RvbSBmb3JtYXRzLgogICoKICAq
IE5vdGU6CiAgKiBTb21lIG9mIHRoZSBoZWxwZXIgZnVuY3Rpb25zIGV4cGVjdHMgUkdCNTY1IHRv
IGJlIHRoZSBkZWZhdWx0IGZvcm1hdCBhbmQgdGhlCkBAIC00OTIsMTEgKzQ5MiwxMSBAQCBzdGF0
aWMgY29uc3QgdWludDMyX3QgbWlwaV9kYmlfZm9ybWF0c1tdID0gewogICogUmV0dXJuczoKICAq
IFplcm8gb24gc3VjY2VzcywgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgogICovCi1p
bnQgbWlwaV9kYmlfaW5pdF93aXRoX2Zvcm1hdHMoc3RydWN0IG1pcGlfZGJpICpkYmlkZXYsCi0J
CQkgICAgICAgY29uc3Qgc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlX2Z1bmNzICpmdW5j
cywKLQkJCSAgICAgICBjb25zdCB1aW50MzJfdCAqZm9ybWF0cywgdW5zaWduZWQgaW50IGZvcm1h
dF9jb3VudCwKLQkJCSAgICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwK
LQkJCSAgICAgICB1bnNpZ25lZCBpbnQgcm90YXRpb24sIHNpemVfdCB0eF9idWZfc2l6ZSkKK2lu
dCBtaXBpX2RiaV9kZXZfaW5pdF93aXRoX2Zvcm1hdHMoc3RydWN0IG1pcGlfZGJpX2RldiAqZGJp
ZGV2LAorCQkJCSAgIGNvbnN0IHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZV9mdW5jcyAq
ZnVuY3MsCisJCQkJICAgY29uc3QgdWludDMyX3QgKmZvcm1hdHMsIHVuc2lnbmVkIGludCBmb3Jt
YXRfY291bnQsCisJCQkJICAgY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCisJ
CQkJICAgdW5zaWduZWQgaW50IHJvdGF0aW9uLCBzaXplX3QgdHhfYnVmX3NpemUpCiB7CiAJc3Rh
dGljIGNvbnN0IHVpbnQ2NF90IG1vZGlmaWVyc1tdID0gewogCQlEUk1fRk9STUFUX01PRF9MSU5F
QVIsCkBAIC01MDUsNyArNTA1LDcgQEAgaW50IG1pcGlfZGJpX2luaXRfd2l0aF9mb3JtYXRzKHN0
cnVjdCBtaXBpX2RiaSAqZGJpZGV2LAogCXN0cnVjdCBkcm1fZGV2aWNlICpkcm0gPSAmZGJpZGV2
LT5kcm07CiAJaW50IHJldDsKIAotCWlmICghZGJpZGV2LT5jb21tYW5kKQorCWlmICghZGJpZGV2
LT5kYmkuY29tbWFuZCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAlkYmlkZXYtPnR4X2J1ZiA9IGRl
dm1fa21hbGxvYyhkcm0tPmRldiwgdHhfYnVmX3NpemUsIEdGUF9LRVJORUwpOwpAQCAtNTQzLDEw
ICs1NDMsMTAgQEAgaW50IG1pcGlfZGJpX2luaXRfd2l0aF9mb3JtYXRzKHN0cnVjdCBtaXBpX2Ri
aSAqZGJpZGV2LAogCiAJcmV0dXJuIDA7CiB9Ci1FWFBPUlRfU1lNQk9MKG1pcGlfZGJpX2luaXRf
d2l0aF9mb3JtYXRzKTsKK0VYUE9SVF9TWU1CT0wobWlwaV9kYmlfZGV2X2luaXRfd2l0aF9mb3Jt
YXRzKTsKIAogLyoqCi0gKiBtaXBpX2RiaV9pbml0IC0gTUlQSSBEQkkgaW5pdGlhbGl6YXRpb24K
KyAqIG1pcGlfZGJpX2Rldl9pbml0IC0gTUlQSSBEQkkgZGV2aWNlIGluaXRpYWxpemF0aW9uCiAg
KiBAZGJpZGV2OiBNSVBJIERCSSBkZXZpY2Ugc3RydWN0dXJlIHRvIGluaXRpYWxpemUKICAqIEBm
dW5jczogRGlzcGxheSBwaXBlIGZ1bmN0aW9ucwogICogQG1vZGU6IERpc3BsYXkgbW9kZQpAQCAt
NTYyLDE5ICs1NjIsMTkgQEAgRVhQT1JUX1NZTUJPTChtaXBpX2RiaV9pbml0X3dpdGhfZm9ybWF0
cyk7CiAgKiBSZXR1cm5zOgogICogWmVybyBvbiBzdWNjZXNzLCBuZWdhdGl2ZSBlcnJvciBjb2Rl
IG9uIGZhaWx1cmUuCiAgKi8KLWludCBtaXBpX2RiaV9pbml0KHN0cnVjdCBtaXBpX2RiaSAqZGJp
ZGV2LAotCQkgIGNvbnN0IHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZV9mdW5jcyAqZnVu
Y3MsCi0JCSAgY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsIHVuc2lnbmVkIGlu
dCByb3RhdGlvbikKK2ludCBtaXBpX2RiaV9kZXZfaW5pdChzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpk
YmlkZXYsCisJCSAgICAgIGNvbnN0IHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZV9mdW5j
cyAqZnVuY3MsCisJCSAgICAgIGNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlLCB1
bnNpZ25lZCBpbnQgcm90YXRpb24pCiB7CiAJc2l6ZV90IGJ1ZnNpemUgPSBtb2RlLT52ZGlzcGxh
eSAqIG1vZGUtPmhkaXNwbGF5ICogc2l6ZW9mKHUxNik7CiAKIAlkYmlkZXYtPmRybS5tb2RlX2Nv
bmZpZy5wcmVmZXJyZWRfZGVwdGggPSAxNjsKIAotCXJldHVybiBtaXBpX2RiaV9pbml0X3dpdGhf
Zm9ybWF0cyhkYmlkZXYsIGZ1bmNzLCBtaXBpX2RiaV9mb3JtYXRzLAotCQkJCQkgIEFSUkFZX1NJ
WkUobWlwaV9kYmlfZm9ybWF0cyksIG1vZGUsCi0JCQkJCSAgcm90YXRpb24sIGJ1ZnNpemUpOwor
CXJldHVybiBtaXBpX2RiaV9kZXZfaW5pdF93aXRoX2Zvcm1hdHMoZGJpZGV2LCBmdW5jcywgbWlw
aV9kYmlfZm9ybWF0cywKKwkJCQkJICAgICAgQVJSQVlfU0laRShtaXBpX2RiaV9mb3JtYXRzKSwg
bW9kZSwKKwkJCQkJICAgICAgcm90YXRpb24sIGJ1ZnNpemUpOwogfQotRVhQT1JUX1NZTUJPTCht
aXBpX2RiaV9pbml0KTsKK0VYUE9SVF9TWU1CT0wobWlwaV9kYmlfZGV2X2luaXQpOwogCiAvKioK
ICAqIG1pcGlfZGJpX3JlbGVhc2UgLSBEUk0gZHJpdmVyIHJlbGVhc2UgaGVscGVyCkBAIC01ODYs
MTMgKzU4NiwxMyBAQCBFWFBPUlRfU1lNQk9MKG1pcGlfZGJpX2luaXQpOwogICovCiB2b2lkIG1p
cGlfZGJpX3JlbGVhc2Uoc3RydWN0IGRybV9kZXZpY2UgKmRybSkKIHsKLQlzdHJ1Y3QgbWlwaV9k
YmkgKmRiaSA9IGRybV90b19taXBpX2RiaShkcm0pOworCXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRi
aWRldiA9IGRybV90b19taXBpX2RiaV9kZXYoZHJtKTsKIAogCURSTV9ERUJVR19EUklWRVIoIlxu
Iik7CiAKIAlkcm1fbW9kZV9jb25maWdfY2xlYW51cChkcm0pOwogCWRybV9kZXZfZmluaShkcm0p
OwotCWtmcmVlKGRiaSk7CisJa2ZyZWUoZGJpZGV2KTsKIH0KIEVYUE9SVF9TWU1CT0wobWlwaV9k
YmlfcmVsZWFzZSk7CiAKQEAgLTY0NiwxMCArNjQ2LDEwIEBAIGJvb2wgbWlwaV9kYmlfZGlzcGxh
eV9pc19vbihzdHJ1Y3QgbWlwaV9kYmkgKmRiaSkKIH0KIEVYUE9SVF9TWU1CT0wobWlwaV9kYmlf
ZGlzcGxheV9pc19vbik7CiAKLXN0YXRpYyBpbnQgbWlwaV9kYmlfcG93ZXJvbl9yZXNldF9jb25k
aXRpb25hbChzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiwgYm9vbCBjb25kKQorc3RhdGljIGludCBt
aXBpX2RiaV9wb3dlcm9uX3Jlc2V0X2NvbmRpdGlvbmFsKHN0cnVjdCBtaXBpX2RiaV9kZXYgKmRi
aWRldiwgYm9vbCBjb25kKQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9IGRiaWRldi0+ZHJtLmRl
djsKLQlzdHJ1Y3QgbWlwaV9kYmkgKmRiaSA9IGRiaWRldjsKKwlzdHJ1Y3QgbWlwaV9kYmkgKmRi
aSA9ICZkYmlkZXYtPmRiaTsKIAlpbnQgcmV0OwogCiAJaWYgKGRiaWRldi0+cmVndWxhdG9yKSB7
CkBAIC02OTUsNyArNjk1LDcgQEAgc3RhdGljIGludCBtaXBpX2RiaV9wb3dlcm9uX3Jlc2V0X2Nv
bmRpdGlvbmFsKHN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2LCBib29sIGNvbmQKICAqIFJldHVybnM6
CiAgKiBaZXJvIG9uIHN1Y2Nlc3MsIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZS4KICAqLwotaW50
IG1pcGlfZGJpX3Bvd2Vyb25fcmVzZXQoc3RydWN0IG1pcGlfZGJpICpkYmlkZXYpCitpbnQgbWlw
aV9kYmlfcG93ZXJvbl9yZXNldChzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYpCiB7CiAJcmV0
dXJuIG1pcGlfZGJpX3Bvd2Vyb25fcmVzZXRfY29uZGl0aW9uYWwoZGJpZGV2LCBmYWxzZSk7CiB9
CkBAIC03MTMsNyArNzEzLDcgQEAgRVhQT1JUX1NZTUJPTChtaXBpX2RiaV9wb3dlcm9uX3Jlc2V0
KTsKICAqIFplcm8gaWYgdGhlIGNvbnRyb2xsZXIgd2FzIHJlc2V0LCAxIGlmIHRoZSBkaXNwbGF5
IHdhcyBhbHJlYWR5IG9uLCBvciBhCiAgKiBuZWdhdGl2ZSBlcnJvciBjb2RlLgogICovCi1pbnQg
bWlwaV9kYmlfcG93ZXJvbl9jb25kaXRpb25hbF9yZXNldChzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRl
dikKK2ludCBtaXBpX2RiaV9wb3dlcm9uX2NvbmRpdGlvbmFsX3Jlc2V0KHN0cnVjdCBtaXBpX2Ri
aV9kZXYgKmRiaWRldikKIHsKIAlyZXR1cm4gbWlwaV9kYmlfcG93ZXJvbl9yZXNldF9jb25kaXRp
b25hbChkYmlkZXYsIHRydWUpOwogfQpAQCAtMTA2Niw3ICsxMDY2LDcgQEAgc3RhdGljIGludCBt
aXBpX2RiaV90eXBlYzNfY29tbWFuZChzdHJ1Y3QgbWlwaV9kYmkgKmRiaSwgdTggKmNtZCwKICAq
IEBkYzogRC9DIGdwaW8gKG9wdGlvbmFsKQogICoKICAqIFRoaXMgZnVuY3Rpb24gc2V0cyAmbWlw
aV9kYmktPmNvbW1hbmQsIGVuYWJsZXMgJm1pcGlfZGJpLT5yZWFkX2NvbW1hbmRzIGZvciB0aGUK
LSAqIHVzdWFsIHJlYWQgY29tbWFuZHMuIEl0IHNob3VsZCBiZSBmb2xsb3dlZCBieSBhIGNhbGwg
dG8gbWlwaV9kYmlfaW5pdCgpIG9yCisgKiB1c3VhbCByZWFkIGNvbW1hbmRzLiBJdCBzaG91bGQg
YmUgZm9sbG93ZWQgYnkgYSBjYWxsIHRvIG1pcGlfZGJpX2Rldl9pbml0KCkgb3IKICAqIGEgZHJp
dmVyLXNwZWNpZmljIGluaXQuCiAgKgogICogSWYgQGRjIGlzIHNldCwgYSBUeXBlIEMgT3B0aW9u
IDMgaW50ZXJmYWNlIGlzIGFzc3VtZWQsIGlmIG5vdApAQCAtMTE4MywxMyArMTE4MywxMyBAQCBz
dGF0aWMgc3NpemVfdCBtaXBpX2RiaV9kZWJ1Z2ZzX2NvbW1hbmRfd3JpdGUoc3RydWN0IGZpbGUg
KmZpbGUsCiAJCQkJCSAgICAgIHNpemVfdCBjb3VudCwgbG9mZl90ICpwcG9zKQogewogCXN0cnVj
dCBzZXFfZmlsZSAqbSA9IGZpbGUtPnByaXZhdGVfZGF0YTsKLQlzdHJ1Y3QgbWlwaV9kYmkgKm1p
cGkgPSBtLT5wcml2YXRlOworCXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRiaWRldiA9IG0tPnByaXZh
dGU7CiAJdTggdmFsLCBjbWQgPSAwLCBwYXJhbWV0ZXJzWzY0XTsKIAljaGFyICpidWYsICpwb3Ms
ICp0b2tlbjsKIAl1bnNpZ25lZCBpbnQgaTsKIAlpbnQgcmV0LCBpZHg7CiAKLQlpZiAoIWRybV9k
ZXZfZW50ZXIoJm1pcGktPmRybSwgJmlkeCkpCisJaWYgKCFkcm1fZGV2X2VudGVyKCZkYmlkZXYt
PmRybSwgJmlkeCkpCiAJCXJldHVybiAtRU5PREVWOwogCiAJYnVmID0gbWVtZHVwX3VzZXJfbnVs
KHVidWYsIGNvdW50KTsKQEAgLTEyMjgsNyArMTIyOCw3IEBAIHN0YXRpYyBzc2l6ZV90IG1pcGlf
ZGJpX2RlYnVnZnNfY29tbWFuZF93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwKIAkJfQogCX0KIAot
CXJldCA9IG1pcGlfZGJpX2NvbW1hbmRfYnVmKG1pcGksIGNtZCwgcGFyYW1ldGVycywgaSk7CisJ
cmV0ID0gbWlwaV9kYmlfY29tbWFuZF9idWYoJmRiaWRldi0+ZGJpLCBjbWQsIHBhcmFtZXRlcnMs
IGkpOwogCiBlcnJfZnJlZToKIAlrZnJlZShidWYpOwpAQCAtMTI0MCwxNiArMTI0MCwxNyBAQCBz
dGF0aWMgc3NpemVfdCBtaXBpX2RiaV9kZWJ1Z2ZzX2NvbW1hbmRfd3JpdGUoc3RydWN0IGZpbGUg
KmZpbGUsCiAKIHN0YXRpYyBpbnQgbWlwaV9kYmlfZGVidWdmc19jb21tYW5kX3Nob3coc3RydWN0
IHNlcV9maWxlICptLCB2b2lkICp1bnVzZWQpCiB7Ci0Jc3RydWN0IG1pcGlfZGJpICptaXBpID0g
bS0+cHJpdmF0ZTsKKwlzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBtLT5wcml2YXRlOwor
CXN0cnVjdCBtaXBpX2RiaSAqZGJpID0gJmRiaWRldi0+ZGJpOwogCXU4IGNtZCwgdmFsWzRdOwog
CWludCByZXQsIGlkeDsKIAlzaXplX3QgbGVuOwogCi0JaWYgKCFkcm1fZGV2X2VudGVyKCZtaXBp
LT5kcm0sICZpZHgpKQorCWlmICghZHJtX2Rldl9lbnRlcigmZGJpZGV2LT5kcm0sICZpZHgpKQog
CQlyZXR1cm4gLUVOT0RFVjsKIAogCWZvciAoY21kID0gMDsgY21kIDwgMjU1OyBjbWQrKykgewot
CQlpZiAoIW1pcGlfZGJpX2NvbW1hbmRfaXNfcmVhZChtaXBpLCBjbWQpKQorCQlpZiAoIW1pcGlf
ZGJpX2NvbW1hbmRfaXNfcmVhZChkYmksIGNtZCkpCiAJCQljb250aW51ZTsKIAogCQlzd2l0Y2gg
KGNtZCkgewpAQCAtMTI2OSw3ICsxMjcwLDcgQEAgc3RhdGljIGludCBtaXBpX2RiaV9kZWJ1Z2Zz
X2NvbW1hbmRfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKnVudXNlZCkKIAkJfQogCiAJ
CXNlcV9wcmludGYobSwgIiUwMng6ICIsIGNtZCk7Ci0JCXJldCA9IG1pcGlfZGJpX2NvbW1hbmRf
YnVmKG1pcGksIGNtZCwgdmFsLCBsZW4pOworCQlyZXQgPSBtaXBpX2RiaV9jb21tYW5kX2J1Zihk
YmksIGNtZCwgdmFsLCBsZW4pOwogCQlpZiAocmV0KSB7CiAJCQlzZXFfcHV0cyhtLCAiWFhcbiIp
OwogCQkJY29udGludWU7CkBAIC0xMzExLDEyICsxMzEyLDEyIEBAIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgZmlsZV9vcGVyYXRpb25zIG1pcGlfZGJpX2RlYnVnZnNfY29tbWFuZF9mb3BzID0gewogICov
CiBpbnQgbWlwaV9kYmlfZGVidWdmc19pbml0KHN0cnVjdCBkcm1fbWlub3IgKm1pbm9yKQogewot
CXN0cnVjdCBtaXBpX2RiaSAqbWlwaSA9IGRybV90b19taXBpX2RiaShtaW5vci0+ZGV2KTsKKwlz
dHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmlfZGV2KG1pbm9yLT5k
ZXYpOwogCXVtb2RlX3QgbW9kZSA9IFNfSUZSRUcgfCBTX0lXVVNSOwogCi0JaWYgKG1pcGktPnJl
YWRfY29tbWFuZHMpCisJaWYgKGRiaWRldi0+ZGJpLnJlYWRfY29tbWFuZHMpCiAJCW1vZGUgfD0g
U19JUlVHTzsKLQlkZWJ1Z2ZzX2NyZWF0ZV9maWxlKCJjb21tYW5kIiwgbW9kZSwgbWlub3ItPmRl
YnVnZnNfcm9vdCwgbWlwaSwKKwlkZWJ1Z2ZzX2NyZWF0ZV9maWxlKCJjb21tYW5kIiwgbW9kZSwg
bWlub3ItPmRlYnVnZnNfcm9vdCwgZGJpZGV2LAogCQkJICAgICZtaXBpX2RiaV9kZWJ1Z2ZzX2Nv
bW1hbmRfZm9wcyk7CiAKIAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS90
aW55ZHJtL3N0NzU4Ni5jIGIvZHJpdmVycy9ncHUvZHJtL3Rpbnlkcm0vc3Q3NTg2LmMKaW5kZXgg
Y2YwZDdhMjYwMDljLi41MTg3MWVlMTZlZjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS90
aW55ZHJtL3N0NzU4Ni5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS90aW55ZHJtL3N0NzU4Ni5jCkBA
IC0xMTQsOCArMTE0LDggQEAgc3RhdGljIGludCBzdDc1ODZfYnVmX2NvcHkodm9pZCAqZHN0LCBz
dHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKIAogc3RhdGljIHZvaWQgc3Q3NTg2X2ZiX2RpcnR5
KHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLCBzdHJ1Y3QgZHJtX3JlY3QgKnJlY3QpCiB7Ci0J
c3RydWN0IG1pcGlfZGJpICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmkoZmItPmRldik7Ci0Jc3Ry
dWN0IG1pcGlfZGJpICpkYmkgPSBkYmlkZXY7CisJc3RydWN0IG1pcGlfZGJpX2RldiAqZGJpZGV2
ID0gZHJtX3RvX21pcGlfZGJpX2RldihmYi0+ZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kYmkgKmRiaSA9
ICZkYmlkZXYtPmRiaTsKIAlpbnQgc3RhcnQsIGVuZCwgaWR4LCByZXQgPSAwOwogCiAJaWYgKCFk
YmlkZXYtPmVuYWJsZWQpCkBAIC0xNzcsOSArMTc3LDkgQEAgc3RhdGljIHZvaWQgc3Q3NTg2X3Bp
cGVfZW5hYmxlKHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlwZSAqcGlwZSwKIAkJCSAgICAg
ICBzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgICAgc3RydWN0IGRy
bV9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCiB7Ci0Jc3RydWN0IG1pcGlfZGJpICpkYmlkZXYg
PSBkcm1fdG9fbWlwaV9kYmkocGlwZS0+Y3J0Yy5kZXYpOworCXN0cnVjdCBtaXBpX2RiaV9kZXYg
KmRiaWRldiA9IGRybV90b19taXBpX2RiaV9kZXYocGlwZS0+Y3J0Yy5kZXYpOwogCXN0cnVjdCBk
cm1fZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmZiOwotCXN0cnVjdCBtaXBpX2RiaSAq
ZGJpID0gZGJpZGV2OworCXN0cnVjdCBtaXBpX2RiaSAqZGJpID0gJmRiaWRldi0+ZGJpOwogCXN0
cnVjdCBkcm1fcmVjdCByZWN0ID0gewogCQkueDEgPSAwLAogCQkueDIgPSBmYi0+d2lkdGgsCkBA
IC0yNTUsNyArMjU1LDcgQEAgc3RhdGljIHZvaWQgc3Q3NTg2X3BpcGVfZW5hYmxlKHN0cnVjdCBk
cm1fc2ltcGxlX2Rpc3BsYXlfcGlwZSAqcGlwZSwKIAogc3RhdGljIHZvaWQgc3Q3NTg2X3BpcGVf
ZGlzYWJsZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUgKnBpcGUpCiB7Ci0Jc3RydWN0
IG1pcGlfZGJpICptaXBpID0gZHJtX3RvX21pcGlfZGJpKHBpcGUtPmNydGMuZGV2KTsKKwlzdHJ1
Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYgPSBkcm1fdG9fbWlwaV9kYmlfZGV2KHBpcGUtPmNydGMu
ZGV2KTsKIAogCS8qCiAJICogVGhpcyBjYWxsYmFjayBpcyBub3QgcHJvdGVjdGVkIGJ5IGRybV9k
ZXZfZW50ZXIvZXhpdCBzaW5jZSB3ZSB3YW50IHRvCkBAIC0yNjYsMTEgKzI2NiwxMSBAQCBzdGF0
aWMgdm9pZCBzdDc1ODZfcGlwZV9kaXNhYmxlKHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3BsYXlfcGlw
ZSAqcGlwZSkKIAogCURSTV9ERUJVR19LTVMoIlxuIik7CiAKLQlpZiAoIW1pcGktPmVuYWJsZWQp
CisJaWYgKCFkYmlkZXYtPmVuYWJsZWQpCiAJCXJldHVybjsKIAotCW1pcGlfZGJpX2NvbW1hbmQo
bWlwaSwgTUlQSV9EQ1NfU0VUX0RJU1BMQVlfT0ZGKTsKLQltaXBpLT5lbmFibGVkID0gZmFsc2U7
CisJbWlwaV9kYmlfY29tbWFuZCgmZGJpZGV2LT5kYmksIE1JUElfRENTX1NFVF9ESVNQTEFZX09G
Rik7CisJZGJpZGV2LT5lbmFibGVkID0gZmFsc2U7CiB9CiAKIHN0YXRpYyBjb25zdCB1MzIgc3Q3
NTg2X2Zvcm1hdHNbXSA9IHsKQEAgLTMxOCw3ICszMTgsNyBAQCBNT0RVTEVfREVWSUNFX1RBQkxF
KHNwaSwgc3Q3NTg2X2lkKTsKIHN0YXRpYyBpbnQgc3Q3NTg2X3Byb2JlKHN0cnVjdCBzcGlfZGV2
aWNlICpzcGkpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnNwaS0+ZGV2OwotCXN0cnVjdCBt
aXBpX2RiaSAqZGJpZGV2OworCXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRiaWRldjsKIAlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZHJtOwogCXN0cnVjdCBtaXBpX2RiaSAqZGJpOwogCXN0cnVjdCBncGlvX2Rl
c2MgKmEwOwpAQCAtMzMwLDcgKzMzMCw3IEBAIHN0YXRpYyBpbnQgc3Q3NTg2X3Byb2JlKHN0cnVj
dCBzcGlfZGV2aWNlICpzcGkpCiAJaWYgKCFkYmlkZXYpCiAJCXJldHVybiAtRU5PTUVNOwogCi0J
ZGJpID0gZGJpZGV2OworCWRiaSA9ICZkYmlkZXYtPmRiaTsKIAlkcm0gPSAmZGJpZGV2LT5kcm07
CiAJcmV0ID0gZGV2bV9kcm1fZGV2X2luaXQoZGV2LCBkcm0sICZzdDc1ODZfZHJpdmVyKTsKIAlp
ZiAocmV0KSB7CkBAIC0zNjMsOSArMzYzLDkgQEAgc3RhdGljIGludCBzdDc1ODZfcHJvYmUoc3Ry
dWN0IHNwaV9kZXZpY2UgKnNwaSkKIAkvKiBDYW5ub3QgcmVhZCBmcm9tIHRoaXMgY29udHJvbGxl
ciB2aWEgU1BJICovCiAJZGJpLT5yZWFkX2NvbW1hbmRzID0gTlVMTDsKIAotCXJldCA9IG1pcGlf
ZGJpX2luaXRfd2l0aF9mb3JtYXRzKGRiaWRldiwgJnN0NzU4Nl9waXBlX2Z1bmNzLAotCQkJCQkg
c3Q3NTg2X2Zvcm1hdHMsIEFSUkFZX1NJWkUoc3Q3NTg2X2Zvcm1hdHMpLAotCQkJCQkgJnN0NzU4
Nl9tb2RlLCByb3RhdGlvbiwgYnVmc2l6ZSk7CisJcmV0ID0gbWlwaV9kYmlfZGV2X2luaXRfd2l0
aF9mb3JtYXRzKGRiaWRldiwgJnN0NzU4Nl9waXBlX2Z1bmNzLAorCQkJCQkgICAgIHN0NzU4Nl9m
b3JtYXRzLCBBUlJBWV9TSVpFKHN0NzU4Nl9mb3JtYXRzKSwKKwkJCQkJICAgICAmc3Q3NTg2X21v
ZGUsIHJvdGF0aW9uLCBidWZzaXplKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdGlueWRybS9zdDc3MzVyLmMgYi9kcml2ZXJzL2dwdS9k
cm0vdGlueWRybS9zdDc3MzVyLmMKaW5kZXggNWIyMzY1NzY1OWM2Li42NjI3NWVmM2E0NTYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS90aW55ZHJtL3N0NzczNXIuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vdGlueWRybS9zdDc3MzVyLmMKQEAgLTQyLDggKzQyLDggQEAgc3RhdGljIHZvaWQg
amRfdDE4MDAzX3QwMV9waXBlX2VuYWJsZShzdHJ1Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGUg
KnBpcGUsCiAJCQkJICAgICAgc3RydWN0IGRybV9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJ
CSAgICAgIHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQogewotCXN0cnVjdCBt
aXBpX2RiaSAqZGJpZGV2ID0gZHJtX3RvX21pcGlfZGJpKHBpcGUtPmNydGMuZGV2KTsKLQlzdHJ1
Y3QgbWlwaV9kYmkgKmRiaSA9IGRiaWRldjsKKwlzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYg
PSBkcm1fdG9fbWlwaV9kYmlfZGV2KHBpcGUtPmNydGMuZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kYmkg
KmRiaSA9ICZkYmlkZXYtPmRiaTsKIAlpbnQgcmV0LCBpZHg7CiAJdTggYWRkcl9tb2RlOwogCkBA
IC0xNTAsNyArMTUwLDcgQEAgTU9EVUxFX0RFVklDRV9UQUJMRShzcGksIHN0NzczNXJfaWQpOwog
c3RhdGljIGludCBzdDc3MzVyX3Byb2JlKHN0cnVjdCBzcGlfZGV2aWNlICpzcGkpCiB7CiAJc3Ry
dWN0IGRldmljZSAqZGV2ID0gJnNwaS0+ZGV2OwotCXN0cnVjdCBtaXBpX2RiaSAqZGJpZGV2Owor
CXN0cnVjdCBtaXBpX2RiaV9kZXYgKmRiaWRldjsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZHJtOwog
CXN0cnVjdCBtaXBpX2RiaSAqZGJpOwogCXN0cnVjdCBncGlvX2Rlc2MgKmRjOwpAQCAtMTYxLDcg
KzE2MSw3IEBAIHN0YXRpYyBpbnQgc3Q3NzM1cl9wcm9iZShzdHJ1Y3Qgc3BpX2RldmljZSAqc3Bp
KQogCWlmICghZGJpZGV2KQogCQlyZXR1cm4gLUVOT01FTTsKIAotCWRiaSA9IGRiaWRldjsKKwlk
YmkgPSAmZGJpZGV2LT5kYmk7CiAJZHJtID0gJmRiaWRldi0+ZHJtOwogCXJldCA9IGRldm1fZHJt
X2Rldl9pbml0KGRldiwgZHJtLCAmc3Q3NzM1cl9kcml2ZXIpOwogCWlmIChyZXQpIHsKQEAgLTE5
Niw3ICsxOTYsNyBAQCBzdGF0aWMgaW50IHN0NzczNXJfcHJvYmUoc3RydWN0IHNwaV9kZXZpY2Ug
KnNwaSkKIAkvKiBDYW5ub3QgcmVhZCBmcm9tIEFkYWZydWl0IDEuOCIgZGlzcGxheSB2aWEgU1BJ
ICovCiAJZGJpLT5yZWFkX2NvbW1hbmRzID0gTlVMTDsKIAotCXJldCA9IG1pcGlfZGJpX2luaXQo
ZGJpZGV2LCAmamRfdDE4MDAzX3QwMV9waXBlX2Z1bmNzLCAmamRfdDE4MDAzX3QwMV9tb2RlLCBy
b3RhdGlvbik7CisJcmV0ID0gbWlwaV9kYmlfZGV2X2luaXQoZGJpZGV2LCAmamRfdDE4MDAzX3Qw
MV9waXBlX2Z1bmNzLCAmamRfdDE4MDAzX3QwMV9tb2RlLCByb3RhdGlvbik7CiAJaWYgKHJldCkK
IAkJcmV0dXJuIHJldDsKIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9kcm0vdGlueWRybS9taXBpLWRi
aS5oIGIvaW5jbHVkZS9kcm0vdGlueWRybS9taXBpLWRiaS5oCmluZGV4IGI3YjMwMTEzMGFmNy4u
NjdjNjZmNWVlNTkxIDEwMDY0NAotLS0gYS9pbmNsdWRlL2RybS90aW55ZHJtL21pcGktZGJpLmgK
KysrIGIvaW5jbHVkZS9kcm0vdGlueWRybS9taXBpLWRiaS5oCkBAIC0xOCwyNCArMTgsNjIgQEAg
c3RydWN0IGdwaW9fZGVzYzsKIHN0cnVjdCByZWd1bGF0b3I7CiAKIC8qKgotICogc3RydWN0IG1p
cGlfZGJpIC0gTUlQSSBEQkkgY29udHJvbGxlcgotICogQHNwaTogU1BJIGRldmljZQotICogQGVu
YWJsZWQ6IFBpcGVsaW5lIGlzIGVuYWJsZWQKLSAqIEBjbWRsb2NrOiBDb21tYW5kIGxvY2sKLSAq
IEBjb21tYW5kOiBCdXMgc3BlY2lmaWMgY2FsbGJhY2sgZXhlY3V0aW5nIGNvbW1hbmRzLgotICog
QHJlYWRfY29tbWFuZHM6IEFycmF5IG9mIHJlYWQgY29tbWFuZHMgdGVybWluYXRlZCBieSBhIHpl
cm8gZW50cnkuCi0gKiAgICAgICAgICAgICAgICAgUmVhZGluZyBpcyBkaXNhYmxlZCBpZiB0aGlz
IGlzIE5VTEwuCi0gKiBAZGM6IE9wdGlvbmFsIEQvQyBncGlvLgotICogQHR4X2J1ZjogQnVmZmVy
IHVzZWQgZm9yIHRyYW5zZmVyIChjb3B5IGNsaXAgcmVjdCBhcmVhKQotICogQHR4X2J1Zjk6IEJ1
ZmZlciB1c2VkIGZvciBPcHRpb24gMSA5LWJpdCBjb252ZXJzaW9uCi0gKiBAdHhfYnVmOV9sZW46
IFNpemUgb2YgdHhfYnVmOS4KLSAqIEBzd2FwX2J5dGVzOiBTd2FwIGJ5dGVzIGluIGJ1ZmZlciBi
ZWZvcmUgdHJhbnNmZXIKLSAqIEByZXNldDogT3B0aW9uYWwgcmVzZXQgZ3BpbwotICogQHJvdGF0
aW9uOiBpbml0aWFsIHJvdGF0aW9uIGluIGRlZ3JlZXMgQ291bnRlciBDbG9jayBXaXNlCi0gKiBA
YmFja2xpZ2h0OiBiYWNrbGlnaHQgZGV2aWNlIChvcHRpb25hbCkKLSAqIEByZWd1bGF0b3I6IHBv
d2VyIHJlZ3VsYXRvciAob3B0aW9uYWwpCisgKiBzdHJ1Y3QgbWlwaV9kYmkgLSBNSVBJIERCSSBp
bnRlcmZhY2UKICAqLwogc3RydWN0IG1pcGlfZGJpIHsKKwkvKioKKwkgKiBAY21kbG9jazogQ29t
bWFuZCBsb2NrCisJICovCisJc3RydWN0IG11dGV4IGNtZGxvY2s7CisKKwkvKioKKwkgKiBAY29t
bWFuZDogQnVzIHNwZWNpZmljIGNhbGxiYWNrIGV4ZWN1dGluZyBjb21tYW5kcy4KKwkgKi8KKwlp
bnQgKCpjb21tYW5kKShzdHJ1Y3QgbWlwaV9kYmkgKmRiaSwgdTggKmNtZCwgdTggKnBhcmFtLCBz
aXplX3QgbnVtKTsKKworCS8qKgorCSAqIEByZWFkX2NvbW1hbmRzOiBBcnJheSBvZiByZWFkIGNv
bW1hbmRzIHRlcm1pbmF0ZWQgYnkgYSB6ZXJvIGVudHJ5LgorCSAqICAgICAgICAgICAgICAgICBS
ZWFkaW5nIGlzIGRpc2FibGVkIGlmIHRoaXMgaXMgTlVMTC4KKwkgKi8KKwljb25zdCB1OCAqcmVh
ZF9jb21tYW5kczsKKworCS8qKgorCSAqIEBzd2FwX2J5dGVzOiBTd2FwIGJ5dGVzIGluIGJ1ZmZl
ciBiZWZvcmUgdHJhbnNmZXIKKwkgKi8KKwlib29sIHN3YXBfYnl0ZXM7CisKKwkvKioKKwkgKiBA
cmVzZXQ6IE9wdGlvbmFsIHJlc2V0IGdwaW8KKwkgKi8KKwlzdHJ1Y3QgZ3Bpb19kZXNjICpyZXNl
dDsKKworCS8qIFR5cGUgQyBzcGVjaWZpYyAqLworCisJLyoqCisJICogQHNwaTogU1BJIGRldmlj
ZQorCSAqLworCXN0cnVjdCBzcGlfZGV2aWNlICpzcGk7CisKKwkvKioKKwkgKiBAZGM6IE9wdGlv
bmFsIEQvQyBncGlvLgorCSAqLworCXN0cnVjdCBncGlvX2Rlc2MgKmRjOworCisJLyoqCisJICog
QHR4X2J1Zjk6IEJ1ZmZlciB1c2VkIGZvciBPcHRpb24gMSA5LWJpdCBjb252ZXJzaW9uCisJICov
CisJdm9pZCAqdHhfYnVmOTsKKworCS8qKgorCSAqIEB0eF9idWY5X2xlbjogU2l6ZSBvZiB0eF9i
dWY5LgorCSAqLworCXNpemVfdCB0eF9idWY5X2xlbjsKK307CisKKy8qKgorICogc3RydWN0IG1p
cGlfZGJpX2RldiAtIE1JUEkgREJJIGRldmljZQorICovCitzdHJ1Y3QgbWlwaV9kYmlfZGV2IHsK
IAkvKioKIAkgKiBAZHJtOiBEUk0gZGV2aWNlCiAJICovCkBAIC01Niw0OCArOTQsNjMgQEAgc3Ry
dWN0IG1pcGlfZGJpIHsKIAkgKi8KIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSBtb2RlOwogCi0J
c3RydWN0IHNwaV9kZXZpY2UgKnNwaTsKKwkvKioKKwkgKiBAZW5hYmxlZDogUGlwZWxpbmUgaXMg
ZW5hYmxlZAorCSAqLwogCWJvb2wgZW5hYmxlZDsKLQlzdHJ1Y3QgbXV0ZXggY21kbG9jazsKLQlp
bnQgKCpjb21tYW5kKShzdHJ1Y3QgbWlwaV9kYmkgKmRiaSwgdTggKmNtZCwgdTggKnBhcmFtLCBz
aXplX3QgbnVtKTsKLQljb25zdCB1OCAqcmVhZF9jb21tYW5kczsKLQlzdHJ1Y3QgZ3Bpb19kZXNj
ICpkYzsKKworCS8qKgorCSAqIEB0eF9idWY6IEJ1ZmZlciB1c2VkIGZvciB0cmFuc2ZlciAoY29w
eSBjbGlwIHJlY3QgYXJlYSkKKwkgKi8KIAl1MTYgKnR4X2J1ZjsKLQl2b2lkICp0eF9idWY5Owot
CXNpemVfdCB0eF9idWY5X2xlbjsKLQlib29sIHN3YXBfYnl0ZXM7Ci0Jc3RydWN0IGdwaW9fZGVz
YyAqcmVzZXQ7CisKKwkvKioKKwkgKiBAcm90YXRpb246IGluaXRpYWwgcm90YXRpb24gaW4gZGVn
cmVlcyBDb3VudGVyIENsb2NrIFdpc2UKKwkgKi8KIAl1bnNpZ25lZCBpbnQgcm90YXRpb247CisK
KwkvKioKKwkgKiBAYmFja2xpZ2h0OiBiYWNrbGlnaHQgZGV2aWNlIChvcHRpb25hbCkKKwkgKi8K
IAlzdHJ1Y3QgYmFja2xpZ2h0X2RldmljZSAqYmFja2xpZ2h0OworCisJLyoqCisJICogQHJlZ3Vs
YXRvcjogcG93ZXIgcmVndWxhdG9yIChvcHRpb25hbCkKKwkgKi8KIAlzdHJ1Y3QgcmVndWxhdG9y
ICpyZWd1bGF0b3I7CisKKwkvKioKKwkgKiBAZGJpOiBNSVBJIERCSSBpbnRlcmZhY2UKKwkgKi8K
KwlzdHJ1Y3QgbWlwaV9kYmkgZGJpOwogfTsKIAotc3RhdGljIGlubGluZSBzdHJ1Y3QgbWlwaV9k
YmkgKmRybV90b19taXBpX2RiaShzdHJ1Y3QgZHJtX2RldmljZSAqZHJtKQorc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkcm1fdG9fbWlwaV9kYmlfZGV2KHN0cnVjdCBkcm1fZGV2
aWNlICpkcm0pCiB7Ci0JcmV0dXJuIGNvbnRhaW5lcl9vZihkcm0sIHN0cnVjdCBtaXBpX2RiaSwg
ZHJtKTsKKwlyZXR1cm4gY29udGFpbmVyX29mKGRybSwgc3RydWN0IG1pcGlfZGJpX2RldiwgZHJt
KTsKIH0KIAogaW50IG1pcGlfZGJpX3NwaV9pbml0KHN0cnVjdCBzcGlfZGV2aWNlICpzcGksIHN0
cnVjdCBtaXBpX2RiaSAqZGJpLAogCQkgICAgICBzdHJ1Y3QgZ3Bpb19kZXNjICpkYyk7Ci1pbnQg
bWlwaV9kYmlfaW5pdF93aXRoX2Zvcm1hdHMoc3RydWN0IG1pcGlfZGJpICpkYmlkZXYsCi0JCQkg
ICAgICAgY29uc3Qgc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlX2Z1bmNzICpmdW5jcywK
LQkJCSAgICAgICBjb25zdCB1aW50MzJfdCAqZm9ybWF0cywgdW5zaWduZWQgaW50IGZvcm1hdF9j
b3VudCwKLQkJCSAgICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKLQkJ
CSAgICAgICB1bnNpZ25lZCBpbnQgcm90YXRpb24sIHNpemVfdCB0eF9idWZfc2l6ZSk7Ci1pbnQg
bWlwaV9kYmlfaW5pdChzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldiwKLQkJICBjb25zdCBzdHJ1Y3Qg
ZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGVfZnVuY3MgKmZ1bmNzLAotCQkgIGNvbnN0IHN0cnVjdCBk
cm1fZGlzcGxheV9tb2RlICptb2RlLCB1bnNpZ25lZCBpbnQgcm90YXRpb24pOworaW50IG1pcGlf
ZGJpX2Rldl9pbml0X3dpdGhfZm9ybWF0cyhzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYsCisJ
CQkJICAgY29uc3Qgc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlX2Z1bmNzICpmdW5jcywK
KwkJCQkgICBjb25zdCB1aW50MzJfdCAqZm9ybWF0cywgdW5zaWduZWQgaW50IGZvcm1hdF9jb3Vu
dCwKKwkJCQkgICBjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKKwkJCQkgICB1
bnNpZ25lZCBpbnQgcm90YXRpb24sIHNpemVfdCB0eF9idWZfc2l6ZSk7CitpbnQgbWlwaV9kYmlf
ZGV2X2luaXQoc3RydWN0IG1pcGlfZGJpX2RldiAqZGJpZGV2LAorCQkgICAgICBjb25zdCBzdHJ1
Y3QgZHJtX3NpbXBsZV9kaXNwbGF5X3BpcGVfZnVuY3MgKmZ1bmNzLAorCQkgICAgICBjb25zdCBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwgdW5zaWduZWQgaW50IHJvdGF0aW9uKTsKIHZv
aWQgbWlwaV9kYmlfcmVsZWFzZShzdHJ1Y3QgZHJtX2RldmljZSAqZHJtKTsKIHZvaWQgbWlwaV9k
YmlfcGlwZV91cGRhdGUoc3RydWN0IGRybV9zaW1wbGVfZGlzcGxheV9waXBlICpwaXBlLAogCQkJ
ICBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpvbGRfc3RhdGUpOwotdm9pZCBtaXBpX2RiaV9lbmFi
bGVfZmx1c2goc3RydWN0IG1pcGlfZGJpICpkYmlkZXYsCit2b2lkIG1pcGlfZGJpX2VuYWJsZV9m
bHVzaChzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpkYmlkZXYsCiAJCQkgICBzdHJ1Y3QgZHJtX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpwbGFuX3N0
YXRlKTsKIHZvaWQgbWlwaV9kYmlfcGlwZV9kaXNhYmxlKHN0cnVjdCBkcm1fc2ltcGxlX2Rpc3Bs
YXlfcGlwZSAqcGlwZSk7CiB2b2lkIG1pcGlfZGJpX2h3X3Jlc2V0KHN0cnVjdCBtaXBpX2RiaSAq
ZGJpKTsKIGJvb2wgbWlwaV9kYmlfZGlzcGxheV9pc19vbihzdHJ1Y3QgbWlwaV9kYmkgKmRiaSk7
Ci1pbnQgbWlwaV9kYmlfcG93ZXJvbl9yZXNldChzdHJ1Y3QgbWlwaV9kYmkgKmRiaWRldik7Ci1p
bnQgbWlwaV9kYmlfcG93ZXJvbl9jb25kaXRpb25hbF9yZXNldChzdHJ1Y3QgbWlwaV9kYmkgKmRi
aWRldik7CitpbnQgbWlwaV9kYmlfcG93ZXJvbl9yZXNldChzdHJ1Y3QgbWlwaV9kYmlfZGV2ICpk
YmlkZXYpOworaW50IG1pcGlfZGJpX3Bvd2Vyb25fY29uZGl0aW9uYWxfcmVzZXQoc3RydWN0IG1p
cGlfZGJpX2RldiAqZGJpZGV2KTsKIAogdTMyIG1pcGlfZGJpX3NwaV9jbWRfbWF4X3NwZWVkKHN0
cnVjdCBzcGlfZGV2aWNlICpzcGksIHNpemVfdCBsZW4pOwogaW50IG1pcGlfZGJpX3NwaV90cmFu
c2ZlcihzdHJ1Y3Qgc3BpX2RldmljZSAqc3BpLCB1MzIgc3BlZWRfaHosCi0tIAoyLjIwLjEKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBt
YWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
