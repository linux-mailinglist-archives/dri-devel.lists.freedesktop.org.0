Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C4F9DFC693
	for <lists+dri-devel@lfdr.de>; Thu, 14 Nov 2019 13:51:21 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5C52C6E266;
	Thu, 14 Nov 2019 12:51:14 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 333FF6E221
 for <dri-devel@lists.freedesktop.org>; Thu, 14 Nov 2019 12:51:12 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 10BBFABF6;
 Thu, 14 Nov 2019 12:51:09 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@redhat.com, sean@poorly.run, daniel@ffwll.ch,
 b.zolnierkie@samsung.com, noralf@tronnes.org, kraxel@redhat.com,
 sam@ravnborg.org, emil.velikov@collabora.com
Subject: [PATCH v5 1/3] drm/udl: Replace fbdev code with generic emulation
Date: Thu, 14 Nov 2019 13:51:04 +0100
Message-Id: <20191114125106.28347-2-tzimmermann@suse.de>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191114125106.28347-1-tzimmermann@suse.de>
References: <20191114125106.28347-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Thomas Zimmermann <tzimmermann@suse.de>,
 dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhlIHVkbCBkcml2ZXIgY2FuIHVzZSB0aGUgZ2VuZXJpYyBmYmRldiBpbXBsZW1lbnRhdGlvbi4g
Q29udmVydCBpdC4KCnY1OgoJKiBpbml0aWFsaXplIGNvbnNvbGUgYWZ0ZXIgcmVnaXN0ZXJpbmcg
ZGV2aWNlCnY0OgoJKiBoYXJkY29kZSBjb25zb2xlIGJwcCB0byAxNgp2MzoKCSogcmVtb3ZlIG1v
ZHVsZSBwYXJhbWV0ZXIgZmJfYnBwIGluIGZhdm9yIG9mIGZiZGV2J3MgdmlkZW8KCSogY2FsbCBk
cm1fZmJkZXZfZ2VuZXJpY19zZXR1cCgpIGRpcmVjdGx5OyByZW1vdmUgdWRsX2ZiZGV2X2luaXQo
KQoJKiB1c2UgZGVmYXVsdCBmb3Igc3RydWN0IGRybV9tb2RlX2NvbmZpZ19mdW5jcy5vdXRwdXRf
cG9sbF9jaGFuZ2VkCgkqIHVzZSBkZWZhdWx0IGZvciBzdHJ1Y3QgZHJtX2RyaXZlci5sYXN0Y2xv
c2UKClNpZ25lZC1vZmYtYnk6IFRob21hcyBaaW1tZXJtYW5uIDx0emltbWVybWFubkBzdXNlLmRl
PgpSZXZpZXdlZC1ieTogTm9yYWxmIFRyw7hubmVzIDxub3JhbGZAdHJvbm5lcy5vcmc+Ci0tLQog
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMgICAgIHwgICA4ICstCiBkcml2ZXJzL2dwdS9k
cm0vdWRsL3VkbF9kcnYuaCAgICAgfCAgIDYgLQogZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZmIu
YyAgICAgIHwgMjgyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUv
ZHJtL3VkbC91ZGxfbWFpbi5jICAgIHwgICA2IC0KIGRyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21v
ZGVzZXQuYyB8ICAgMSAtCiA1IGZpbGVzIGNoYW5nZWQsIDcgaW5zZXJ0aW9ucygrKSwgMjk2IGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jIGIv
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZHJ2LmMKaW5kZXggNTYzY2M1ODA5ZTU2Li5kNTc4M2Zh
MzJjNWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5jCkBAIC03LDYgKzcsNyBAQAogCiAjaW5jbHVkZSA8
ZHJtL2RybV9jcnRjX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fZHJ2Lmg+CisjaW5jbHVk
ZSA8ZHJtL2RybV9mYl9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2ZpbGUuaD4KICNpbmNs
dWRlIDxkcm0vZHJtX2dlbV9zaG1lbV9oZWxwZXIuaD4KICNpbmNsdWRlIDxkcm0vZHJtX2lvY3Rs
Lmg+CkBAIC0xMDcsOCArMTA4LDE0IEBAIHN0YXRpYyBpbnQgdWRsX3VzYl9wcm9iZShzdHJ1Y3Qg
dXNiX2ludGVyZmFjZSAqaW50ZXJmYWNlLAogCiAJRFJNX0lORk8oIkluaXRpYWxpemVkIHVkbCBv
biBtaW5vciAlZFxuIiwgdWRsLT5kcm0ucHJpbWFyeS0+aW5kZXgpOwogCisJciA9IGRybV9mYmRl
dl9nZW5lcmljX3NldHVwKCZ1ZGwtPmRybSwgMTYpOworCWlmIChyKQorCQlnb3RvIGVycl9kcm1f
ZGV2X3VucmVnaXN0ZXI7CisKIAlyZXR1cm4gMDsKIAorZXJyX2RybV9kZXZfdW5yZWdpc3RlcjoK
Kwlkcm1fZGV2X3VucmVnaXN0ZXIoJnVkbC0+ZHJtKTsKIGVycl9mcmVlOgogCWRybV9kZXZfcHV0
KCZ1ZGwtPmRybSk7CiAJcmV0dXJuIHI7CkBAIC0xMTksNyArMTI2LDYgQEAgc3RhdGljIHZvaWQg
dWRsX3VzYl9kaXNjb25uZWN0KHN0cnVjdCB1c2JfaW50ZXJmYWNlICppbnRlcmZhY2UpCiAJc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiA9IHVzYl9nZXRfaW50ZmRhdGEoaW50ZXJmYWNlKTsKIAogCWRy
bV9rbXNfaGVscGVyX3BvbGxfZGlzYWJsZShkZXYpOwotCXVkbF9mYmRldl91bnBsdWcoZGV2KTsK
IAl1ZGxfZHJvcF91c2IoZGV2KTsKIAlkcm1fZGV2X3VucGx1ZyhkZXYpOwogCWRybV9kZXZfcHV0
KGRldik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaCBiL2RyaXZl
cnMvZ3B1L2RybS91ZGwvdWRsX2Rydi5oCmluZGV4IDk4N2Q5OWFlMmRmYS4uYmU1ODVlM2U1NzJk
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9kcnYuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vdWRsL3VkbF9kcnYuaApAQCAtNDcsOCArNDcsNiBAQCBzdHJ1Y3QgdXJiX2xpc3Qg
ewogCXNpemVfdCBzaXplOwogfTsKIAotc3RydWN0IHVkbF9mYmRldjsKLQogc3RydWN0IHVkbF9k
ZXZpY2UgewogCXN0cnVjdCBkcm1fZGV2aWNlIGRybTsKIAlzdHJ1Y3QgZGV2aWNlICpkZXY7CkBA
IC02Miw3ICs2MCw2IEBAIHN0cnVjdCB1ZGxfZGV2aWNlIHsKIAlzdHJ1Y3QgdXJiX2xpc3QgdXJi
czsKIAlhdG9taWNfdCBsb3N0X3BpeGVsczsgLyogMSA9IGEgcmVuZGVyIG9wIGZhaWxlZC4gTmVl
ZCBzY3JlZW4gcmVmcmVzaCAqLwogCi0Jc3RydWN0IHVkbF9mYmRldiAqZmJkZXY7CiAJY2hhciBt
b2RlX2J1ZlsxMDI0XTsKIAl1aW50MzJfdCBtb2RlX2J1Zl9sZW47CiAJYXRvbWljX3QgYnl0ZXNf
cmVuZGVyZWQ7IC8qIHJhdyBwaXhlbC1ieXRlcyBkcml2ZXIgYXNrZWQgdG8gcmVuZGVyICovCkBA
IC05Nyw5ICs5NCw2IEBAIHZvaWQgdWRsX3VyYl9jb21wbGV0aW9uKHN0cnVjdCB1cmIgKnVyYik7
CiBpbnQgdWRsX2luaXQoc3RydWN0IHVkbF9kZXZpY2UgKnVkbCk7CiB2b2lkIHVkbF9maW5pKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYpOwogCi1pbnQgdWRsX2ZiZGV2X2luaXQoc3RydWN0IGRybV9k
ZXZpY2UgKmRldik7Ci12b2lkIHVkbF9mYmRldl9jbGVhbnVwKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpOwotdm9pZCB1ZGxfZmJkZXZfdW5wbHVnKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpOwogc3Ry
dWN0IGRybV9mcmFtZWJ1ZmZlciAqCiB1ZGxfZmJfdXNlcl9mYl9jcmVhdGUoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwKIAkJICAgICAgc3RydWN0IGRybV9maWxlICpmaWxlLApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZmIuYyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX2Zi
LmMKaW5kZXggZjgxNTNiNzI2MzQzLi44ZmU0ZDhjZjMyMTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS91ZGwvdWRsX2ZiLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfZmIuYwpA
QCAtMTMsMjcgKzEzLDEyIEBACiAKICNpbmNsdWRlIDxkcm0vZHJtX2NydGNfaGVscGVyLmg+CiAj
aW5jbHVkZSA8ZHJtL2RybV9kcnYuaD4KLSNpbmNsdWRlIDxkcm0vZHJtX2ZiX2hlbHBlci5oPgog
I2luY2x1ZGUgPGRybS9kcm1fZm91cmNjLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9nZW1fc2htZW1f
aGVscGVyLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9tb2Rlc2V0X2hlbHBlci5oPgogCiAjaW5jbHVk
ZSAidWRsX2Rydi5oIgogCi0jZGVmaW5lIERMX0RFRklPX1dSSVRFX0RFTEFZICAgIChIWi8yMCkg
LyogZmJfZGVmZXJyZWRfaW8uZGVsYXkgaW4gamlmZmllcyAqLwotCi1zdGF0aWMgaW50IGZiX2Rl
ZmlvID0gMDsgIC8qIE9wdGlvbmFsbHkgZW5hYmxlIGV4cGVyaW1lbnRhbCBmYl9kZWZpbyBtbWFw
IHN1cHBvcnQgKi8KLXN0YXRpYyBpbnQgZmJfYnBwID0gMTY7Ci0KLW1vZHVsZV9wYXJhbShmYl9i
cHAsIGludCwgU19JV1VTUiB8IFNfSVJVU1IgfCBTX0lXR1JQIHwgU19JUkdSUCk7Ci1tb2R1bGVf
cGFyYW0oZmJfZGVmaW8sIGludCwgU19JV1VTUiB8IFNfSVJVU1IgfCBTX0lXR1JQIHwgU19JUkdS
UCk7Ci0KLXN0cnVjdCB1ZGxfZmJkZXYgewotCXN0cnVjdCBkcm1fZmJfaGVscGVyIGhlbHBlcjsg
LyogbXVzdCBiZSBmaXJzdCAqLwotCXN0cnVjdCB1ZGxfZnJhbWVidWZmZXIgdWZiOwotCWludCBm
Yl9jb3VudDsKLX07Ci0KICNkZWZpbmUgRExfQUxJR05fVVAoeCwgYSkgQUxJR04oeCwgYSkKICNk
ZWZpbmUgRExfQUxJR05fRE9XTih4LCBhKSBBTElHTl9ET1dOKHgsIGEpCiAKQEAgLTE1NiwxMjMg
KzE0MSw2IEBAIGludCB1ZGxfaGFuZGxlX2RhbWFnZShzdHJ1Y3QgdWRsX2ZyYW1lYnVmZmVyICpm
YiwgaW50IHgsIGludCB5LAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IHVkbF9mYl9tbWFw
KHN0cnVjdCBmYl9pbmZvICppbmZvLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKLXsKLQl1
bnNpZ25lZCBsb25nIHN0YXJ0ID0gdm1hLT52bV9zdGFydDsKLQl1bnNpZ25lZCBsb25nIHNpemUg
PSB2bWEtPnZtX2VuZCAtIHZtYS0+dm1fc3RhcnQ7Ci0JdW5zaWduZWQgbG9uZyBvZmZzZXQ7Ci0J
dW5zaWduZWQgbG9uZyBwYWdlLCBwb3M7Ci0KLQlpZiAodm1hLT52bV9wZ29mZiA+ICh+MFVMID4+
IFBBR0VfU0hJRlQpKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCW9mZnNldCA9IHZtYS0+dm1fcGdv
ZmYgPDwgUEFHRV9TSElGVDsKLQotCWlmIChvZmZzZXQgPiBpbmZvLT5maXguc21lbV9sZW4gfHwg
c2l6ZSA+IGluZm8tPmZpeC5zbWVtX2xlbiAtIG9mZnNldCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0K
LQlwb3MgPSAodW5zaWduZWQgbG9uZylpbmZvLT5maXguc21lbV9zdGFydCArIG9mZnNldDsKLQot
CXByX2RlYnVnKCJtbWFwKCkgZnJhbWVidWZmZXIgYWRkcjolbHUgc2l6ZTolbHVcbiIsCi0JCSAg
cG9zLCBzaXplKTsKLQotCS8qIFdlIGRvbid0IHdhbnQgdGhlIGZyYW1lYnVmZmVyIHRvIGJlIG1h
cHBlZCBlbmNyeXB0ZWQgKi8KLQl2bWEtPnZtX3BhZ2VfcHJvdCA9IHBncHJvdF9kZWNyeXB0ZWQo
dm1hLT52bV9wYWdlX3Byb3QpOwotCi0Jd2hpbGUgKHNpemUgPiAwKSB7Ci0JCXBhZ2UgPSB2bWFs
bG9jX3RvX3Bmbigodm9pZCAqKXBvcyk7Ci0JCWlmIChyZW1hcF9wZm5fcmFuZ2Uodm1hLCBzdGFy
dCwgcGFnZSwgUEFHRV9TSVpFLCBQQUdFX1NIQVJFRCkpCi0JCQlyZXR1cm4gLUVBR0FJTjsKLQot
CQlzdGFydCArPSBQQUdFX1NJWkU7Ci0JCXBvcyArPSBQQUdFX1NJWkU7Ci0JCWlmIChzaXplID4g
UEFHRV9TSVpFKQotCQkJc2l6ZSAtPSBQQUdFX1NJWkU7Ci0JCWVsc2UKLQkJCXNpemUgPSAwOwot
CX0KLQotCS8qIFZNX0lPIHwgVk1fRE9OVEVYUEFORCB8IFZNX0RPTlREVU1QIGFyZSBzZXQgYnkg
cmVtYXBfcGZuX3JhbmdlKCkgKi8KLQlyZXR1cm4gMDsKLX0KLQotLyoKLSAqIEl0J3MgY29tbW9u
IGZvciBzZXZlcmFsIGNsaWVudHMgdG8gaGF2ZSBmcmFtZWJ1ZmZlciBvcGVuIHNpbXVsdGFuZW91
c2x5LgotICogZS5nLiBib3RoIGZiY29uIGFuZCBYLiBNYWtlcyB0aGluZ3MgaW50ZXJlc3Rpbmcu
Ci0gKiBBc3N1bWVzIGNhbGxlciBpcyBob2xkaW5nIGluZm8tPmxvY2sgKGZvciBvcGVuIGFuZCBy
ZWxlYXNlIGF0IGxlYXN0KQotICovCi1zdGF0aWMgaW50IHVkbF9mYl9vcGVuKHN0cnVjdCBmYl9p
bmZvICppbmZvLCBpbnQgdXNlcikKLXsKLQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXYgPSBpbmZv
LT5wYXI7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHVmYmRldi0+dWZiLmJhc2UuZGV2Owot
CXN0cnVjdCB1ZGxfZGV2aWNlICp1ZGwgPSB0b191ZGwoZGV2KTsKLQotCS8qIElmIHRoZSBVU0Ig
ZGV2aWNlIGlzIGdvbmUsIHdlIGRvbid0IGFjY2VwdCBuZXcgb3BlbnMgKi8KLQlpZiAoZHJtX2Rl
dl9pc191bnBsdWdnZWQoJnVkbC0+ZHJtKSkKLQkJcmV0dXJuIC1FTk9ERVY7Ci0KLQl1ZmJkZXYt
PmZiX2NvdW50Kys7Ci0KLSNpZmRlZiBDT05GSUdfRFJNX0ZCREVWX0VNVUxBVElPTgotCWlmIChm
Yl9kZWZpbyAmJiAoaW5mby0+ZmJkZWZpbyA9PSBOVUxMKSkgewotCQkvKiBlbmFibGUgZGVmaW8g
YXQgbGFzdCBtb21lbnQgaWYgbm90IGRpc2FibGVkIGJ5IGNsaWVudCAqLwotCi0JCXN0cnVjdCBm
Yl9kZWZlcnJlZF9pbyAqZmJkZWZpbzsKLQotCQlmYmRlZmlvID0ga3phbGxvYyhzaXplb2Yoc3Ry
dWN0IGZiX2RlZmVycmVkX2lvKSwgR0ZQX0tFUk5FTCk7Ci0KLQkJaWYgKGZiZGVmaW8pIHsKLQkJ
CWZiZGVmaW8tPmRlbGF5ID0gRExfREVGSU9fV1JJVEVfREVMQVk7Ci0JCQlmYmRlZmlvLT5kZWZl
cnJlZF9pbyA9IGRybV9mYl9oZWxwZXJfZGVmZXJyZWRfaW87Ci0JCX0KLQotCQlpbmZvLT5mYmRl
ZmlvID0gZmJkZWZpbzsKLQkJZmJfZGVmZXJyZWRfaW9faW5pdChpbmZvKTsKLQl9Ci0jZW5kaWYK
LQotCXByX2RlYnVnKCJvcGVuIC9kZXYvZmIlZCB1c2VyPSVkIGZiX2luZm89JXAgY291bnQ9JWRc
biIsCi0JCSAgaW5mby0+bm9kZSwgdXNlciwgaW5mbywgdWZiZGV2LT5mYl9jb3VudCk7Ci0KLQly
ZXR1cm4gMDsKLX0KLQotCi0vKgotICogQXNzdW1lcyBjYWxsZXIgaXMgaG9sZGluZyBpbmZvLT5s
b2NrIG11dGV4IChmb3Igb3BlbiBhbmQgcmVsZWFzZSBhdCBsZWFzdCkKLSAqLwotc3RhdGljIGlu
dCB1ZGxfZmJfcmVsZWFzZShzdHJ1Y3QgZmJfaW5mbyAqaW5mbywgaW50IHVzZXIpCi17Ci0Jc3Ry
dWN0IHVkbF9mYmRldiAqdWZiZGV2ID0gaW5mby0+cGFyOwotCi0JdWZiZGV2LT5mYl9jb3VudC0t
OwotCi0jaWZkZWYgQ09ORklHX0RSTV9GQkRFVl9FTVVMQVRJT04KLQlpZiAoKHVmYmRldi0+ZmJf
Y291bnQgPT0gMCkgJiYgKGluZm8tPmZiZGVmaW8pKSB7Ci0JCWZiX2RlZmVycmVkX2lvX2NsZWFu
dXAoaW5mbyk7Ci0JCWtmcmVlKGluZm8tPmZiZGVmaW8pOwotCQlpbmZvLT5mYmRlZmlvID0gTlVM
TDsKLQkJaW5mby0+ZmJvcHMtPmZiX21tYXAgPSB1ZGxfZmJfbW1hcDsKLQl9Ci0jZW5kaWYKLQot
CXByX2RlYnVnKCJyZWxlYXNlZCAvZGV2L2ZiJWQgdXNlcj0lZCBjb3VudD0lZFxuIiwKLQkJaW5m
by0+bm9kZSwgdXNlciwgdWZiZGV2LT5mYl9jb3VudCk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3Rh
dGljIHN0cnVjdCBmYl9vcHMgdWRsZmJfb3BzID0gewotCS5vd25lciA9IFRISVNfTU9EVUxFLAot
CURSTV9GQl9IRUxQRVJfREVGQVVMVF9PUFMsCi0JLmZiX2ZpbGxyZWN0ID0gZHJtX2ZiX2hlbHBl
cl9zeXNfZmlsbHJlY3QsCi0JLmZiX2NvcHlhcmVhID0gZHJtX2ZiX2hlbHBlcl9zeXNfY29weWFy
ZWEsCi0JLmZiX2ltYWdlYmxpdCA9IGRybV9mYl9oZWxwZXJfc3lzX2ltYWdlYmxpdCwKLQkuZmJf
bW1hcCA9IHVkbF9mYl9tbWFwLAotCS5mYl9vcGVuID0gdWRsX2ZiX29wZW4sCi0JLmZiX3JlbGVh
c2UgPSB1ZGxfZmJfcmVsZWFzZSwKLX07Ci0KIHN0YXRpYyBpbnQgdWRsX3VzZXJfZnJhbWVidWZm
ZXJfZGlydHkoc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsCiAJCQkJICAgICAgc3RydWN0IGRy
bV9maWxlICpmaWxlLAogCQkJCSAgICAgIHVuc2lnbmVkIGZsYWdzLCB1bnNpZ25lZCBjb2xvciwK
QEAgLTM0NywxNTYgKzIxNSw2IEBAIHVkbF9mcmFtZWJ1ZmZlcl9pbml0KHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsCiAJcmV0dXJuIHJldDsKIH0KIAotCi1zdGF0aWMgaW50IHVkbGZiX2NyZWF0ZShz
dHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyLAotCQkJc3RydWN0IGRybV9mYl9oZWxwZXJfc3Vy
ZmFjZV9zaXplICpzaXplcykKLXsKLQlzdHJ1Y3QgdWRsX2ZiZGV2ICp1ZmJkZXYgPQotCQljb250
YWluZXJfb2YoaGVscGVyLCBzdHJ1Y3QgdWRsX2ZiZGV2LCBoZWxwZXIpOwotCXN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYgPSB1ZmJkZXYtPmhlbHBlci5kZXY7Ci0Jc3RydWN0IGZiX2luZm8gKmluZm87
Ci0Jc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmI7Ci0Jc3RydWN0IGRybV9tb2RlX2ZiX2NtZDIg
bW9kZV9jbWQ7Ci0Jc3RydWN0IGRybV9nZW1fc2htZW1fb2JqZWN0ICpzaG1lbTsKLQl2b2lkICp2
YWRkcjsKLQl1aW50MzJfdCBzaXplOwotCWludCByZXQgPSAwOwotCi0JaWYgKHNpemVzLT5zdXJm
YWNlX2JwcCA9PSAyNCkKLQkJc2l6ZXMtPnN1cmZhY2VfYnBwID0gMzI7Ci0KLQltb2RlX2NtZC53
aWR0aCA9IHNpemVzLT5zdXJmYWNlX3dpZHRoOwotCW1vZGVfY21kLmhlaWdodCA9IHNpemVzLT5z
dXJmYWNlX2hlaWdodDsKLQltb2RlX2NtZC5waXRjaGVzWzBdID0gbW9kZV9jbWQud2lkdGggKiAo
KHNpemVzLT5zdXJmYWNlX2JwcCArIDcpIC8gOCk7Ci0KLQltb2RlX2NtZC5waXhlbF9mb3JtYXQg
PSBkcm1fbW9kZV9sZWdhY3lfZmJfZm9ybWF0KHNpemVzLT5zdXJmYWNlX2JwcCwKLQkJCQkJCQkg
IHNpemVzLT5zdXJmYWNlX2RlcHRoKTsKLQotCXNpemUgPSBtb2RlX2NtZC5waXRjaGVzWzBdICog
bW9kZV9jbWQuaGVpZ2h0OwotCXNpemUgPSBBTElHTihzaXplLCBQQUdFX1NJWkUpOwotCi0Jc2ht
ZW0gPSBkcm1fZ2VtX3NobWVtX2NyZWF0ZShkZXYsIHNpemUpOwotCWlmIChJU19FUlIoc2htZW0p
KSB7Ci0JCXJldCA9IFBUUl9FUlIoc2htZW0pOwotCQlnb3RvIG91dDsKLQl9Ci0KLQl2YWRkciA9
IGRybV9nZW1fc2htZW1fdm1hcCgmc2htZW0tPmJhc2UpOwotCWlmIChJU19FUlIodmFkZHIpKSB7
Ci0JCXJldCA9IFBUUl9FUlIodmFkZHIpOwotCQlEUk1fRVJST1IoImZhaWxlZCB0byB2bWFwIGZi
XG4iKTsKLQkJZ290byBvdXRfZ2ZyZWU7Ci0JfQotCi0JaW5mbyA9IGRybV9mYl9oZWxwZXJfYWxs
b2NfZmJpKGhlbHBlcik7Ci0JaWYgKElTX0VSUihpbmZvKSkgewotCQlyZXQgPSBQVFJfRVJSKGlu
Zm8pOwotCQlnb3RvIG91dF9nZnJlZTsKLQl9Ci0KLQlyZXQgPSB1ZGxfZnJhbWVidWZmZXJfaW5p
dChkZXYsICZ1ZmJkZXYtPnVmYiwgJm1vZGVfY21kLCBzaG1lbSk7Ci0JaWYgKHJldCkKLQkJZ290
byBvdXRfZ2ZyZWU7Ci0KLQlmYiA9ICZ1ZmJkZXYtPnVmYi5iYXNlOwotCi0JdWZiZGV2LT5oZWxw
ZXIuZmIgPSBmYjsKLQotCWluZm8tPnNjcmVlbl9iYXNlID0gdmFkZHI7Ci0JaW5mby0+Zml4LnNt
ZW1fbGVuID0gc2l6ZTsKLQlpbmZvLT5maXguc21lbV9zdGFydCA9ICh1bnNpZ25lZCBsb25nKXZh
ZGRyOwotCi0JaW5mby0+ZmJvcHMgPSAmdWRsZmJfb3BzOwotCWRybV9mYl9oZWxwZXJfZmlsbF9p
bmZvKGluZm8sICZ1ZmJkZXYtPmhlbHBlciwgc2l6ZXMpOwotCi0JRFJNX0RFQlVHX0tNUygiYWxs
b2NhdGVkICVkeCVkIHZtYWwgJXBcbiIsCi0JCSAgICAgIGZiLT53aWR0aCwgZmItPmhlaWdodCwK
LQkJICAgICAgdWZiZGV2LT51ZmIuc2htZW0tPnZhZGRyKTsKLQotCXJldHVybiByZXQ7Ci1vdXRf
Z2ZyZWU6Ci0JZHJtX2dlbV9vYmplY3RfcHV0X3VubG9ja2VkKCZ1ZmJkZXYtPnVmYi5zaG1lbS0+
YmFzZSk7Ci1vdXQ6Ci0JcmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1f
ZmJfaGVscGVyX2Z1bmNzIHVkbF9mYl9oZWxwZXJfZnVuY3MgPSB7Ci0JLmZiX3Byb2JlID0gdWRs
ZmJfY3JlYXRlLAotfTsKLQotc3RhdGljIHZvaWQgdWRsX2ZiZGV2X2Rlc3Ryb3koc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwKLQkJCSAgICAgIHN0cnVjdCB1ZGxfZmJkZXYgKnVmYmRldikKLXsKLQlk
cm1fZmJfaGVscGVyX3VucmVnaXN0ZXJfZmJpKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JZHJtX2ZiX2hl
bHBlcl9maW5pKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JaWYgKHVmYmRldi0+dWZiLnNobWVtKSB7Ci0J
CWRybV9mcmFtZWJ1ZmZlcl91bnJlZ2lzdGVyX3ByaXZhdGUoJnVmYmRldi0+dWZiLmJhc2UpOwot
CQlkcm1fZnJhbWVidWZmZXJfY2xlYW51cCgmdWZiZGV2LT51ZmIuYmFzZSk7Ci0JCWRybV9nZW1f
b2JqZWN0X3B1dF91bmxvY2tlZCgmdWZiZGV2LT51ZmIuc2htZW0tPmJhc2UpOwotCX0KLX0KLQot
aW50IHVkbF9mYmRldl9pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCi17Ci0Jc3RydWN0IHVk
bF9kZXZpY2UgKnVkbCA9IHRvX3VkbChkZXYpOwotCWludCBicHBfc2VsID0gZmJfYnBwOwotCXN0
cnVjdCB1ZGxfZmJkZXYgKnVmYmRldjsKLQlpbnQgcmV0OwotCi0JdWZiZGV2ID0ga3phbGxvYyhz
aXplb2Yoc3RydWN0IHVkbF9mYmRldiksIEdGUF9LRVJORUwpOwotCWlmICghdWZiZGV2KQotCQly
ZXR1cm4gLUVOT01FTTsKLQotCXVkbC0+ZmJkZXYgPSB1ZmJkZXY7Ci0KLQlkcm1fZmJfaGVscGVy
X3ByZXBhcmUoZGV2LCAmdWZiZGV2LT5oZWxwZXIsICZ1ZGxfZmJfaGVscGVyX2Z1bmNzKTsKLQot
CXJldCA9IGRybV9mYl9oZWxwZXJfaW5pdChkZXYsICZ1ZmJkZXYtPmhlbHBlciwgMSk7Ci0JaWYg
KHJldCkKLQkJZ290byBmcmVlOwotCi0JcmV0ID0gZHJtX2ZiX2hlbHBlcl9zaW5nbGVfYWRkX2Fs
bF9jb25uZWN0b3JzKCZ1ZmJkZXYtPmhlbHBlcik7Ci0JaWYgKHJldCkKLQkJZ290byBmaW5pOwot
Ci0JLyogZGlzYWJsZSBhbGwgdGhlIHBvc3NpYmxlIG91dHB1dHMvY3J0Y3MgYmVmb3JlIGVudGVy
aW5nIEtNUyBtb2RlICovCi0JZHJtX2hlbHBlcl9kaXNhYmxlX3VudXNlZF9mdW5jdGlvbnMoZGV2
KTsKLQotCXJldCA9IGRybV9mYl9oZWxwZXJfaW5pdGlhbF9jb25maWcoJnVmYmRldi0+aGVscGVy
LCBicHBfc2VsKTsKLQlpZiAocmV0KQotCQlnb3RvIGZpbmk7Ci0KLQlyZXR1cm4gMDsKLQotZmlu
aToKLQlkcm1fZmJfaGVscGVyX2ZpbmkoJnVmYmRldi0+aGVscGVyKTsKLWZyZWU6Ci0Ja2ZyZWUo
dWZiZGV2KTsKLQlyZXR1cm4gcmV0OwotfQotCi12b2lkIHVkbF9mYmRldl9jbGVhbnVwKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYpCi17Ci0Jc3RydWN0IHVkbF9kZXZpY2UgKnVkbCA9IHRvX3VkbChk
ZXYpOwotCWlmICghdWRsLT5mYmRldikKLQkJcmV0dXJuOwotCi0JdWRsX2ZiZGV2X2Rlc3Ryb3ko
ZGV2LCB1ZGwtPmZiZGV2KTsKLQlrZnJlZSh1ZGwtPmZiZGV2KTsKLQl1ZGwtPmZiZGV2ID0gTlVM
TDsKLX0KLQotdm9pZCB1ZGxfZmJkZXZfdW5wbHVnKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCi17
Ci0Jc3RydWN0IHVkbF9kZXZpY2UgKnVkbCA9IHRvX3VkbChkZXYpOwotCXN0cnVjdCB1ZGxfZmJk
ZXYgKnVmYmRldjsKLQlpZiAoIXVkbC0+ZmJkZXYpCi0JCXJldHVybjsKLQotCXVmYmRldiA9IHVk
bC0+ZmJkZXY7Ci0JZHJtX2ZiX2hlbHBlcl91bmxpbmtfZmJpKCZ1ZmJkZXYtPmhlbHBlcik7Ci19
Ci0KIHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKgogdWRsX2ZiX3VzZXJfZmJfY3JlYXRlKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiAJCSAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS91ZGwvdWRsX21haW4uYyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwv
dWRsX21haW4uYwppbmRleCA0ZTg1NGUwMTczOTAuLjliMDkxYjViMDYzZSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbWFpbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS91ZGwv
dWRsX21haW4uYwpAQCAtMzM4LDEwICszMzgsNiBAQCBpbnQgdWRsX2luaXQoc3RydWN0IHVkbF9k
ZXZpY2UgKnVkbCkKIAlpZiAocmV0KQogCQlnb3RvIGVycjsKIAotCXJldCA9IHVkbF9mYmRldl9p
bml0KGRldik7Ci0JaWYgKHJldCkKLQkJZ290byBlcnI7Ci0KIAlkcm1fa21zX2hlbHBlcl9wb2xs
X2luaXQoZGV2KTsKIAogCXJldHVybiAwOwpAQCAtMzY3LDYgKzM2Myw0IEBAIHZvaWQgdWRsX2Zp
bmkoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAogCWlmICh1ZGwtPnVyYnMuY291bnQpCiAJCXVk
bF9mcmVlX3VyYl9saXN0KGRldik7Ci0KLQl1ZGxfZmJkZXZfY2xlYW51cChkZXYpOwogfQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3VkbC91ZGxfbW9kZXNldC5jIGIvZHJpdmVycy9ncHUv
ZHJtL3VkbC91ZGxfbW9kZXNldC5jCmluZGV4IGJjMWFiNjA2MGRjNi4uNjU4MmM5ZDI3YTg3IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vdWRsL3VkbF9tb2Rlc2V0LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL3VkbC91ZGxfbW9kZXNldC5jCkBAIC00MjIsNyArNDIyLDYgQEAgc3RhdGljIGlu
dCB1ZGxfY3J0Y19pbml0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgZHJtX21vZGVfY29uZmlnX2Z1bmNzIHVkbF9tb2RlX2Z1bmNzID0gewogCS5mYl9jcmVh
dGUgPSB1ZGxfZmJfdXNlcl9mYl9jcmVhdGUsCi0JLm91dHB1dF9wb2xsX2NoYW5nZWQgPSBOVUxM
LAogfTsKIAogaW50IHVkbF9tb2Rlc2V0X2luaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldikKLS0g
CjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
ZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
