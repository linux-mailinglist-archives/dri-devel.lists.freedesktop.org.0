Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9AD8DB9A38
	for <lists+dri-devel@lfdr.de>; Sat, 21 Sep 2019 01:20:24 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D86BF6FE1D;
	Fri, 20 Sep 2019 23:20:21 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-qk1-x749.google.com (mail-qk1-x749.google.com
 [IPv6:2607:f8b0:4864:20::749])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9BB416FE1D
 for <dri-devel@lists.freedesktop.org>; Fri, 20 Sep 2019 23:20:16 +0000 (UTC)
Received: by mail-qk1-x749.google.com with SMTP id 10so10074538qka.2
 for <dri-devel@lists.freedesktop.org>; Fri, 20 Sep 2019 16:20:16 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=UNk6pIr+e7qtePKRZr512WyafwGe1Nm+xU7h8Ihnj74=;
 b=VHdPMiMTHksN8wIMnzR5X8s79FYDp+c8ClYTmEevNFRkm4nH1Mb/WfLdHL5wP6RP6M
 GilRduFoIv576FaIJbD5sscfjt+Up89e07W0aKnpbFlCkt2B6I9eL2MXbEbeMyRYeI1Y
 UwilDG8ql9HRVyalOFmW+0z1fyOPye7ffqdBF2iAuvyyuT3ToI8kPi4Y+z+aWhBKrytt
 ZVh+UhyrqSmD8s79M/mEVsOFeq4lN9HjjlRRExls/glC3eezgsAEhhQ6BPd6RcXnR+oj
 TK6AfVq0A3BbUbikFPHdGQBv052WtxchUXH2wVVkNrNBj3kv7WKRXia+zJvVTUVgPkWF
 NYVA==
X-Gm-Message-State: APjAAAUbV9DkeNVyhL4rYLu/8e6By8iJbL5aCxA7SSTm8C+Udo4XjR9N
 feWNoL7L/kFyVMvelungZaqQFVCDVEEfJCQtpeV87g==
X-Google-Smtp-Source: APXvYqxou9CTivD0YSOMXUTcw0ROllcNzAEALdp/OYSzdwJshN7vjgQtggaEOKIh8OULGuaWujfPQ7got0+NH/XmqzQ5tA==
X-Received: by 2002:ac8:41c1:: with SMTP id o1mr5993385qtm.341.1569021615163; 
 Fri, 20 Sep 2019 16:20:15 -0700 (PDT)
Date: Fri, 20 Sep 2019 16:19:17 -0700
In-Reply-To: <20190920231923.141900-1-brendanhiggins@google.com>
Message-Id: <20190920231923.141900-14-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190920231923.141900-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.23.0.351.gc4317032e6-goog
Subject: [PATCH v16 13/19] kunit: tool: add Python wrappers for running KUnit
 tests
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, jpoimboe@redhat.com, 
 keescook@google.com, kieran.bingham@ideasonboard.com, mcgrof@kernel.org, 
 peterz@infradead.org, robh@kernel.org, sboyd@kernel.org, shuah@kernel.org, 
 tytso@mit.edu, yamada.masahiro@socionext.com
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=UNk6pIr+e7qtePKRZr512WyafwGe1Nm+xU7h8Ihnj74=;
 b=tloQa07K0JvI6NCRlbqA7aQdobdfGFJrxAafMhAyImHT8TAbTC/Bn8TPVBjU8vC2gn
 W0GEf86q86jYIngyMLhntAQPBLVYcijKZqixK0AAntvicPBgWVE8dbugMQzOhH4EN620
 K5q1EOCaBOhZ2ULGsAEou4VT96L65ll0HwiocaA4t6ulpZ0MHLWhvP+Fe/J+ZfQQrk9m
 zed/v8QT+SqlQgJNlUf8JyHhNRNHu65jmLc6zapyvq/W9/mqBzRRA+H6t/ErABqCa21u
 RmmHp1Uw/zzOSWDAMnN5l+MAQZnEYtjZhigGwwB7DvMR7UX5QUIxDHOZJr7HyNcWxwFi
 baFg==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 Felix Guo <felixguoxiuping@gmail.com>, wfg@linux.intel.com, joel@jms.id.au,
 rientjes@google.com, jdike@addtoit.com, dan.carpenter@oracle.com,
 devicetree@vger.kernel.org, linux-kbuild@vger.kernel.org, Tim.Bird@sony.com,
 linux-um@lists.infradead.org, rostedt@goodmis.org, julia.lawall@lip6.fr,
 kunit-dev@googlegroups.com, richard@nod.at, torvalds@linux-foundation.org,
 rdunlap@infradead.org, linux-kernel@vger.kernel.org, mpe@ellerman.id.au,
 linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogRmVsaXggR3VvIDxmZWxpeGd1b3hpdXBpbmdAZ21haWwuY29tPgoKVGhlIHVsdGltYXRl
IGdvYWwgaXMgdG8gY3JlYXRlIG1pbmltYWwgaXNvbGF0ZWQgdGVzdCBiaW5hcmllczsgaW4gdGhl
Cm1lYW50aW1lIHdlIGFyZSB1c2luZyBVTUwgdG8gcHJvdmlkZSB0aGUgaW5mcmFzdHJ1Y3R1cmUg
dG8gcnVuIHRlc3RzLCBzbwpkZWZpbmUgYW4gYWJzdHJhY3Qgd2F5IHRvIGNvbmZpZ3VyZSBhbmQg
cnVuIHRlc3RzIHRoYXQgYWxsb3cgdXMgdG8KY2hhbmdlIHRoZSBjb250ZXh0IGluIHdoaWNoIHRl
c3RzIGFyZSBidWlsdCB3aXRob3V0IGFmZmVjdGluZyB0aGUgdXNlci4KVGhpcyBhbHNvIG1ha2Vz
IHByZXR0eSBhbmQgZHluYW1pYyBlcnJvciByZXBvcnRpbmcsIGFuZCBhIGxvdCBvZiBvdGhlcgpu
aWNlIGZlYXR1cmVzIGVhc2llci4KCmt1bml0X2NvbmZpZy5weToKICAtIHBhcnNlIC5jb25maWcg
YW5kIEtjb25maWcgZmlsZXMuCgprdW5pdF9rZXJuZWwucHk6IHByb3ZpZGVzIGhlbHBlciBmdW5j
dGlvbnMgdG86CiAgLSBjb25maWd1cmUgdGhlIGtlcm5lbCB1c2luZyBrdW5pdGNvbmZpZy4KICAt
IGJ1aWxkIHRoZSBrZXJuZWwgd2l0aCB0aGUgYXBwcm9wcmlhdGUgY29uZmlndXJhdGlvbi4KICAt
IHByb3ZpZGUgZnVuY3Rpb24gdG8gaW52b2tlIHRoZSBrZXJuZWwgYW5kIHN0cmVhbSB0aGUgb3V0
cHV0IGJhY2suCgprdW5pdF9wYXJzZXIucHk6IHBhcnNlcyByYXcgbG9ncyByZXR1cm5lZCBvdXQg
Ynkga3VuaXRfa2VybmVsIGFuZApkaXNwbGF5cyB0aGVtIGluIGEgdXNlciBmcmllbmRseSB3YXku
Cgp0ZXN0X2RhdGEvKjogc2FtcGxlcyBvZiB0ZXN0IGRhdGEgZm9yIHRlc3Rpbmcga3VuaXQucHks
IGt1bml0X2NvbmZpZy5weSwKZXRjLgoKU2lnbmVkLW9mZi1ieTogRmVsaXggR3VvIDxmZWxpeGd1
b3hpdXBpbmdAZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5k
YW5oaWdnaW5zQGdvb2dsZS5jb20+ClJldmlld2VkLWJ5OiBHcmVnIEtyb2FoLUhhcnRtYW4gPGdy
ZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpSZXZpZXdlZC1ieTogTG9nYW4gR3VudGhvcnBlIDxs
b2dhbmdAZGVsdGF0ZWUuY29tPgpSZXZpZXdlZC1ieTogU3RlcGhlbiBCb3lkIDxzYm95ZEBrZXJu
ZWwub3JnPgotLS0KIHRvb2xzL3Rlc3Rpbmcva3VuaXQvLmdpdGlnbm9yZSAgICAgICAgICAgICAg
ICB8ICAgMyArCiB0b29scy90ZXN0aW5nL2t1bml0L2t1bml0LnB5ICAgICAgICAgICAgICAgICAg
fCAxMTYgKysrKysrKwogdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF9jb25maWcucHkgICAgICAg
ICAgIHwgIDY2ICsrKysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfa2VybmVsLnB5ICAgICAg
ICAgICB8IDE0OCArKysrKysrKysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfcGFyc2VyLnB5
ICAgICAgICAgICB8IDMxMCArKysrKysrKysrKysrKysrKysKIHRvb2xzL3Rlc3Rpbmcva3VuaXQv
a3VuaXRfdG9vbF90ZXN0LnB5ICAgICAgICB8IDIwNiArKysrKysrKysrKysKIC4uLi90ZXN0X2lz
X3Rlc3RfcGFzc2VkLWFsbF9wYXNzZWQubG9nICAgICAgICB8ICAzMiArKwogLi4uL3Rlc3RfZGF0
YS90ZXN0X2lzX3Rlc3RfcGFzc2VkLWNyYXNoLmxvZyAgIHwgIDY5ICsrKysKIC4uLi90ZXN0X2Rh
dGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1mYWlsdXJlLmxvZyB8ICAzNiArKwogLi4uL3Rlc3RfaXNf
dGVzdF9wYXNzZWQtbm9fdGVzdHNfcnVuLmxvZyAgICAgIHwgIDc1ICsrKysrCiAuLi4vdGVzdF9v
dXRwdXRfaXNvbGF0ZWRfY29ycmVjdGx5LmxvZyAgICAgICAgfCAxMDYgKysrKysrCiAuLi4vdGVz
dF9kYXRhL3Rlc3RfcmVhZF9mcm9tX2ZpbGUua2NvbmZpZyAgICAgfCAgMTcgKwogMTIgZmlsZXMg
Y2hhbmdlZCwgMTE4NCBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMvdGVz
dGluZy9rdW5pdC8uZ2l0aWdub3JlCiBjcmVhdGUgbW9kZSAxMDA3NTUgdG9vbHMvdGVzdGluZy9r
dW5pdC9rdW5pdC5weQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRvb2xzL3Rlc3Rpbmcva3VuaXQva3Vu
aXRfY29uZmlnLnB5CiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5p
dF9rZXJuZWwucHkKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0b29scy90ZXN0aW5nL2t1bml0L2t1bml0
X3BhcnNlci5weQogY3JlYXRlIG1vZGUgMTAwNzU1IHRvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRf
dG9vbF90ZXN0LnB5CiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9rdW5pdC90ZXN0
X2RhdGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1hbGxfcGFzc2VkLmxvZwogY3JlYXRlIG1vZGUgMTAw
NjQ0IHRvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtY3Jh
c2gubG9nCiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMvdGVzdGluZy9rdW5pdC90ZXN0X2RhdGEv
dGVzdF9pc190ZXN0X3Bhc3NlZC1mYWlsdXJlLmxvZwogY3JlYXRlIG1vZGUgMTAwNjQ0IHRvb2xz
L3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtbm9fdGVzdHNfcnVu
LmxvZwogY3JlYXRlIG1vZGUgMTAwNjQ0IHRvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rl
c3Rfb3V0cHV0X2lzb2xhdGVkX2NvcnJlY3RseS5sb2cKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0b29s
cy90ZXN0aW5nL2t1bml0L3Rlc3RfZGF0YS90ZXN0X3JlYWRfZnJvbV9maWxlLmtjb25maWcKCmRp
ZmYgLS1naXQgYS90b29scy90ZXN0aW5nL2t1bml0Ly5naXRpZ25vcmUgYi90b29scy90ZXN0aW5n
L2t1bml0Ly5naXRpZ25vcmUKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAw
Li5jNzkxZmY1OWEzN2EKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0aW5nL2t1bml0Ly5n
aXRpZ25vcmUKQEAgLTAsMCArMSwzIEBACisjIEJ5dGUtY29tcGlsZWQgLyBvcHRpbWl6ZWQgLyBE
TEwgZmlsZXMKK19fcHljYWNoZV9fLworKi5weVtjb2RdClwgTm8gbmV3bGluZSBhdCBlbmQgb2Yg
ZmlsZQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdC5weSBiL3Rvb2xzL3Rl
c3Rpbmcva3VuaXQva3VuaXQucHkKbmV3IGZpbGUgbW9kZSAxMDA3NTUKaW5kZXggMDAwMDAwMDAw
MDAwLi5kYTExYmQ2MmE0YjgKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0aW5nL2t1bml0
L2t1bml0LnB5CkBAIC0wLDAgKzEsMTE2IEBACisjIS91c3IvYmluL3B5dGhvbjMKKyMgU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKyMKKyMgQSB0aGluIHdyYXBwZXIgb24gdG9wIG9m
IHRoZSBLVW5pdCBLZXJuZWwKKyMKKyMgQ29weXJpZ2h0IChDKSAyMDE5LCBHb29nbGUgTExDLgor
IyBBdXRob3I6IEZlbGl4IEd1byA8ZmVsaXhndW94aXVwaW5nQGdtYWlsLmNvbT4KKyMgQXV0aG9y
OiBCcmVuZGFuIEhpZ2dpbnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+CisKK2ltcG9ydCBh
cmdwYXJzZQoraW1wb3J0IHN5cworaW1wb3J0IG9zCitpbXBvcnQgdGltZQorCitmcm9tIGNvbGxl
Y3Rpb25zIGltcG9ydCBuYW1lZHR1cGxlCitmcm9tIGVudW0gaW1wb3J0IEVudW0sIGF1dG8KKwor
aW1wb3J0IGt1bml0X2NvbmZpZworaW1wb3J0IGt1bml0X2tlcm5lbAoraW1wb3J0IGt1bml0X3Bh
cnNlcgorCitLdW5pdFJlc3VsdCA9IG5hbWVkdHVwbGUoJ0t1bml0UmVzdWx0JywgWydzdGF0dXMn
LCdyZXN1bHQnXSkKKworS3VuaXRSZXF1ZXN0ID0gbmFtZWR0dXBsZSgnS3VuaXRSZXF1ZXN0Jywg
WydyYXdfb3V0cHV0JywndGltZW91dCcsICdqb2JzJywgJ2J1aWxkX2RpciddKQorCitjbGFzcyBL
dW5pdFN0YXR1cyhFbnVtKToKKwlTVUNDRVNTID0gYXV0bygpCisJQ09ORklHX0ZBSUxVUkUgPSBh
dXRvKCkKKwlCVUlMRF9GQUlMVVJFID0gYXV0bygpCisJVEVTVF9GQUlMVVJFID0gYXV0bygpCisK
K2RlZiBydW5fdGVzdHMobGludXg6IGt1bml0X2tlcm5lbC5MaW51eFNvdXJjZVRyZWUsCisJICAg
ICAgcmVxdWVzdDogS3VuaXRSZXF1ZXN0KSAtPiBLdW5pdFJlc3VsdDoKKwljb25maWdfc3RhcnQg
PSB0aW1lLnRpbWUoKQorCXN1Y2Nlc3MgPSBsaW51eC5idWlsZF9yZWNvbmZpZyhyZXF1ZXN0LmJ1
aWxkX2RpcikKKwljb25maWdfZW5kID0gdGltZS50aW1lKCkKKwlpZiBub3Qgc3VjY2VzczoKKwkJ
cmV0dXJuIEt1bml0UmVzdWx0KEt1bml0U3RhdHVzLkNPTkZJR19GQUlMVVJFLCAnY291bGQgbm90
IGNvbmZpZ3VyZSBrZXJuZWwnKQorCisJa3VuaXRfcGFyc2VyLnByaW50X3dpdGhfdGltZXN0YW1w
KCdCdWlsZGluZyBLVW5pdCBLZXJuZWwgLi4uJykKKworCWJ1aWxkX3N0YXJ0ID0gdGltZS50aW1l
KCkKKwlzdWNjZXNzID0gbGludXguYnVpbGRfdW1fa2VybmVsKHJlcXVlc3Quam9icywgcmVxdWVz
dC5idWlsZF9kaXIpCisJYnVpbGRfZW5kID0gdGltZS50aW1lKCkKKwlpZiBub3Qgc3VjY2VzczoK
KwkJcmV0dXJuIEt1bml0UmVzdWx0KEt1bml0U3RhdHVzLkJVSUxEX0ZBSUxVUkUsICdjb3VsZCBu
b3QgYnVpbGQga2VybmVsJykKKworCWt1bml0X3BhcnNlci5wcmludF93aXRoX3RpbWVzdGFtcCgn
U3RhcnRpbmcgS1VuaXQgS2VybmVsIC4uLicpCisJdGVzdF9zdGFydCA9IHRpbWUudGltZSgpCisK
Kwl0ZXN0X3Jlc3VsdCA9IGt1bml0X3BhcnNlci5UZXN0UmVzdWx0KGt1bml0X3BhcnNlci5UZXN0
U3RhdHVzLlNVQ0NFU1MsCisJCQkJCSAgICAgIFtdLAorCQkJCQkgICAgICAnVGVzdHMgbm90IFBh
cnNlZC4nKQorCWlmIHJlcXVlc3QucmF3X291dHB1dDoKKwkJa3VuaXRfcGFyc2VyLnJhd19vdXRw
dXQoCisJCQlsaW51eC5ydW5fa2VybmVsKHRpbWVvdXQ9cmVxdWVzdC50aW1lb3V0KSkKKwllbHNl
OgorCQlrdW5pdF9vdXRwdXQgPSBsaW51eC5ydW5fa2VybmVsKHRpbWVvdXQ9cmVxdWVzdC50aW1l
b3V0KQorCQl0ZXN0X3Jlc3VsdCA9IGt1bml0X3BhcnNlci5wYXJzZV9ydW5fdGVzdHMoa3VuaXRf
b3V0cHV0KQorCXRlc3RfZW5kID0gdGltZS50aW1lKCkKKworCWt1bml0X3BhcnNlci5wcmludF93
aXRoX3RpbWVzdGFtcCgoCisJCSdFbGFwc2VkIHRpbWU6ICUuM2ZzIHRvdGFsLCAlLjNmcyBjb25m
aWd1cmluZywgJS4zZnMgJyArCisJCSdidWlsZGluZywgJS4zZnMgcnVubmluZ1xuJykgJSAoCisJ
CQkJdGVzdF9lbmQgLSBjb25maWdfc3RhcnQsCisJCQkJY29uZmlnX2VuZCAtIGNvbmZpZ19zdGFy
dCwKKwkJCQlidWlsZF9lbmQgLSBidWlsZF9zdGFydCwKKwkJCQl0ZXN0X2VuZCAtIHRlc3Rfc3Rh
cnQpKQorCisJaWYgdGVzdF9yZXN1bHQuc3RhdHVzICE9IGt1bml0X3BhcnNlci5UZXN0U3RhdHVz
LlNVQ0NFU1M6CisJCXJldHVybiBLdW5pdFJlc3VsdChLdW5pdFN0YXR1cy5URVNUX0ZBSUxVUkUs
IHRlc3RfcmVzdWx0KQorCWVsc2U6CisJCXJldHVybiBLdW5pdFJlc3VsdChLdW5pdFN0YXR1cy5T
VUNDRVNTLCB0ZXN0X3Jlc3VsdCkKKworZGVmIG1haW4oYXJndiwgbGludXgpOgorCXBhcnNlciA9
IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKAorCQkJZGVzY3JpcHRpb249J0hlbHBzIHdyaXRpbmcg
YW5kIHJ1bm5pbmcgS1VuaXQgdGVzdHMuJykKKwlzdWJwYXJzZXIgPSBwYXJzZXIuYWRkX3N1YnBh
cnNlcnMoZGVzdD0nc3ViY29tbWFuZCcpCisKKwlydW5fcGFyc2VyID0gc3VicGFyc2VyLmFkZF9w
YXJzZXIoJ3J1bicsIGhlbHA9J1J1bnMgS1VuaXQgdGVzdHMuJykKKwlydW5fcGFyc2VyLmFkZF9h
cmd1bWVudCgnLS1yYXdfb3V0cHV0JywgaGVscD0nZG9uXCd0IGZvcm1hdCBvdXRwdXQgZnJvbSBr
ZXJuZWwnLAorCQkJCWFjdGlvbj0nc3RvcmVfdHJ1ZScpCisKKwlydW5fcGFyc2VyLmFkZF9hcmd1
bWVudCgnLS10aW1lb3V0JywKKwkJCQloZWxwPSdtYXhpbXVtIG51bWJlciBvZiBzZWNvbmRzIHRv
IGFsbG93IGZvciBhbGwgdGVzdHMgJworCQkJCSd0byBydW4uIFRoaXMgZG9lcyBub3QgaW5jbHVk
ZSB0aW1lIHRha2VuIHRvIGJ1aWxkIHRoZSAnCisJCQkJJ3Rlc3RzLicsCisJCQkJdHlwZT1pbnQs
CisJCQkJZGVmYXVsdD0zMDAsCisJCQkJbWV0YXZhcj0ndGltZW91dCcpCisKKwlydW5fcGFyc2Vy
LmFkZF9hcmd1bWVudCgnLS1qb2JzJywKKwkJCQloZWxwPSdBcyBpbiB0aGUgbWFrZSBjb21tYW5k
LCAiU3BlY2lmaWVzICB0aGUgbnVtYmVyIG9mICcKKwkJCQknam9icyAoY29tbWFuZHMpIHRvIHJ1
biBzaW11bHRhbmVvdXNseS4iJywKKwkJCQl0eXBlPWludCwgZGVmYXVsdD04LCBtZXRhdmFyPSdq
b2JzJykKKworCXJ1bl9wYXJzZXIuYWRkX2FyZ3VtZW50KCctLWJ1aWxkX2RpcicsCisJCQkJaGVs
cD0nQXMgaW4gdGhlIG1ha2UgY29tbWFuZCwgaXQgc3BlY2lmaWVzIHRoZSBidWlsZCAnCisJCQkJ
J2RpcmVjdG9yeS4nLAorCQkJCXR5cGU9c3RyLCBkZWZhdWx0PU5vbmUsIG1ldGF2YXI9J2J1aWxk
X2RpcicpCisKKwljbGlfYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKGFyZ3YpCisKKwlpZiBjbGlf
YXJncy5zdWJjb21tYW5kID09ICdydW4nOgorCQlyZXF1ZXN0ID0gS3VuaXRSZXF1ZXN0KGNsaV9h
cmdzLnJhd19vdXRwdXQsCisJCQkJICAgICAgIGNsaV9hcmdzLnRpbWVvdXQsCisJCQkJICAgICAg
IGNsaV9hcmdzLmpvYnMsCisJCQkJICAgICAgIGNsaV9hcmdzLmJ1aWxkX2RpcikKKwkJcmVzdWx0
ID0gcnVuX3Rlc3RzKGxpbnV4LCByZXF1ZXN0KQorCQlpZiByZXN1bHQuc3RhdHVzICE9IEt1bml0
U3RhdHVzLlNVQ0NFU1M6CisJCQlzeXMuZXhpdCgxKQorCWVsc2U6CisJCXBhcnNlci5wcmludF9o
ZWxwKCkKKworaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKKwltYWluKHN5cy5hcmd2WzE6XSwg
a3VuaXRfa2VybmVsLkxpbnV4U291cmNlVHJlZSgpKQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGlu
Zy9rdW5pdC9rdW5pdF9jb25maWcucHkgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0X2NvbmZp
Zy5weQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmViZjM5NDJiMjNm
NQotLS0gL2Rldi9udWxsCisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfY29uZmlnLnB5
CkBAIC0wLDAgKzEsNjYgQEAKKyMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKyMK
KyMgQnVpbGRzIGEgLmNvbmZpZyBmcm9tIGEga3VuaXRjb25maWcuCisjCisjIENvcHlyaWdodCAo
QykgMjAxOSwgR29vZ2xlIExMQy4KKyMgQXV0aG9yOiBGZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGlu
Z0BnbWFpbC5jb20+CisjIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bn
b29nbGUuY29tPgorCitpbXBvcnQgY29sbGVjdGlvbnMKK2ltcG9ydCByZQorCitDT05GSUdfSVNf
Tk9UX1NFVF9QQVRURVJOID0gcideIyBDT05GSUdfXHcrIGlzIG5vdCBzZXQkJworQ09ORklHX1BB
VFRFUk4gPSByJ15DT05GSUdfXHcrPVxTKyQnCisKK0tjb25maWdFbnRyeUJhc2UgPSBjb2xsZWN0
aW9ucy5uYW1lZHR1cGxlKCdLY29uZmlnRW50cnknLCBbJ3Jhd19lbnRyeSddKQorCisKK2NsYXNz
IEtjb25maWdFbnRyeShLY29uZmlnRW50cnlCYXNlKToKKworCWRlZiBfX3N0cl9fKHNlbGYpIC0+
IHN0cjoKKwkJcmV0dXJuIHNlbGYucmF3X2VudHJ5CisKKworY2xhc3MgS2NvbmZpZ1BhcnNlRXJy
b3IoRXhjZXB0aW9uKToKKwkiIiJFcnJvciBwYXJzaW5nIEtjb25maWcgZGVmY29uZmlnIG9yIC5j
b25maWcuIiIiCisKKworY2xhc3MgS2NvbmZpZyhvYmplY3QpOgorCSIiIlJlcHJlc2VudHMgZGVm
Y29uZmlnIG9yIC5jb25maWcgc3BlY2lmaWVkIHVzaW5nIHRoZSBLY29uZmlnIGxhbmd1YWdlLiIi
IgorCisJZGVmIF9faW5pdF9fKHNlbGYpOgorCQlzZWxmLl9lbnRyaWVzID0gW10KKworCWRlZiBl
bnRyaWVzKHNlbGYpOgorCQlyZXR1cm4gc2V0KHNlbGYuX2VudHJpZXMpCisKKwlkZWYgYWRkX2Vu
dHJ5KHNlbGYsIGVudHJ5OiBLY29uZmlnRW50cnkpIC0+IE5vbmU6CisJCXNlbGYuX2VudHJpZXMu
YXBwZW5kKGVudHJ5KQorCisJZGVmIGlzX3N1YnNldF9vZihzZWxmLCBvdGhlcjogJ0tjb25maWcn
KSAtPiBib29sOgorCQlyZXR1cm4gc2VsZi5lbnRyaWVzKCkuaXNzdWJzZXQob3RoZXIuZW50cmll
cygpKQorCisJZGVmIHdyaXRlX3RvX2ZpbGUoc2VsZiwgcGF0aDogc3RyKSAtPiBOb25lOgorCQl3
aXRoIG9wZW4ocGF0aCwgJ3cnKSBhcyBmOgorCQkJZm9yIGVudHJ5IGluIHNlbGYuZW50cmllcygp
OgorCQkJCWYud3JpdGUoc3RyKGVudHJ5KSArICdcbicpCisKKwlkZWYgcGFyc2VfZnJvbV9zdHJp
bmcoc2VsZiwgYmxvYjogc3RyKSAtPiBOb25lOgorCQkiIiJQYXJzZXMgYSBzdHJpbmcgY29udGFp
bmluZyBLY29uZmlnRW50cnlzIGFuZCBwb3B1bGF0ZXMgdGhpcyBLY29uZmlnLiIiIgorCQlzZWxm
Ll9lbnRyaWVzID0gW10KKwkJaXNfbm90X3NldF9tYXRjaGVyID0gcmUuY29tcGlsZShDT05GSUdf
SVNfTk9UX1NFVF9QQVRURVJOKQorCQljb25maWdfbWF0Y2hlciA9IHJlLmNvbXBpbGUoQ09ORklH
X1BBVFRFUk4pCisJCWZvciBsaW5lIGluIGJsb2Iuc3BsaXQoJ1xuJyk6CisJCQlsaW5lID0gbGlu
ZS5zdHJpcCgpCisJCQlpZiBub3QgbGluZToKKwkJCQljb250aW51ZQorCQkJZWxpZiBjb25maWdf
bWF0Y2hlci5tYXRjaChsaW5lKSBvciBpc19ub3Rfc2V0X21hdGNoZXIubWF0Y2gobGluZSk6CisJ
CQkJc2VsZi5fZW50cmllcy5hcHBlbmQoS2NvbmZpZ0VudHJ5KGxpbmUpKQorCQkJZWxpZiBsaW5l
WzBdID09ICcjJzoKKwkJCQljb250aW51ZQorCQkJZWxzZToKKwkJCQlyYWlzZSBLY29uZmlnUGFy
c2VFcnJvcignRmFpbGVkIHRvIHBhcnNlOiAnICsgbGluZSkKKworCWRlZiByZWFkX2Zyb21fZmls
ZShzZWxmLCBwYXRoOiBzdHIpIC0+IE5vbmU6CisJCXdpdGggb3BlbihwYXRoLCAncicpIGFzIGY6
CisJCQlzZWxmLnBhcnNlX2Zyb21fc3RyaW5nKGYucmVhZCgpKQpkaWZmIC0tZ2l0IGEvdG9vbHMv
dGVzdGluZy9rdW5pdC9rdW5pdF9rZXJuZWwucHkgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0
X2tlcm5lbC5weQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjA3YzBh
YmYyZjQ3ZAotLS0gL2Rldi9udWxsCisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfa2Vy
bmVsLnB5CkBAIC0wLDAgKzEsMTQ4IEBACisjIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwt
Mi4wCisjCisjIFJ1bnMgVU1MIGtlcm5lbCwgY29sbGVjdHMgb3V0cHV0LCBhbmQgaGFuZGxlcyBl
cnJvcnMuCisjCisjIENvcHlyaWdodCAoQykgMjAxOSwgR29vZ2xlIExMQy4KKyMgQXV0aG9yOiBG
ZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGluZ0BnbWFpbC5jb20+CisjIEF1dGhvcjogQnJlbmRhbiBI
aWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUuY29tPgorCisKK2ltcG9ydCBsb2dnaW5nCitp
bXBvcnQgc3VicHJvY2VzcworaW1wb3J0IG9zCisKK2ltcG9ydCBrdW5pdF9jb25maWcKKworS0NP
TkZJR19QQVRIID0gJy5jb25maWcnCisKK2NsYXNzIENvbmZpZ0Vycm9yKEV4Y2VwdGlvbik6CisJ
IiIiUmVwcmVzZW50cyBhbiBlcnJvciB0cnlpbmcgdG8gY29uZmlndXJlIHRoZSBMaW51eCBrZXJu
ZWwuIiIiCisKKworY2xhc3MgQnVpbGRFcnJvcihFeGNlcHRpb24pOgorCSIiIlJlcHJlc2VudHMg
YW4gZXJyb3IgdHJ5aW5nIHRvIGJ1aWxkIHRoZSBMaW51eCBrZXJuZWwuIiIiCisKKworY2xhc3Mg
TGludXhTb3VyY2VUcmVlT3BlcmF0aW9ucyhvYmplY3QpOgorCSIiIkFuIGFic3RyYWN0aW9uIG92
ZXIgY29tbWFuZCBsaW5lIG9wZXJhdGlvbnMgcGVyZm9ybWVkIG9uIGEgc291cmNlIHRyZWUuIiIi
CisKKwlkZWYgbWFrZV9tcnByb3BlcihzZWxmKToKKwkJdHJ5OgorCQkJc3VicHJvY2Vzcy5jaGVj
a19vdXRwdXQoWydtYWtlJywgJ21ycHJvcGVyJ10pCisJCWV4Y2VwdCBPU0Vycm9yIGFzIGU6CisJ
CQlyYWlzZSBDb25maWdFcnJvcignQ291bGQgbm90IGNhbGwgbWFrZSBjb21tYW5kOiAnICsgZSkK
KwkJZXhjZXB0IHN1YnByb2Nlc3MuQ2FsbGVkUHJvY2Vzc0Vycm9yIGFzIGU6CisJCQlyYWlzZSBD
b25maWdFcnJvcihlLm91dHB1dCkKKworCWRlZiBtYWtlX29sZGRlZmNvbmZpZyhzZWxmLCBidWls
ZF9kaXIpOgorCQljb21tYW5kID0gWydtYWtlJywgJ0FSQ0g9dW0nLCAnb2xkZGVmY29uZmlnJ10K
KwkJaWYgYnVpbGRfZGlyOgorCQkJY29tbWFuZCArPSBbJ089JyArIGJ1aWxkX2Rpcl0KKwkJdHJ5
OgorCQkJc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoY29tbWFuZCkKKwkJZXhjZXB0IE9TRXJyb3Ig
YXMgZToKKwkJCXJhaXNlIENvbmZpZ0Vycm9yKCdDb3VsZCBub3QgY2FsbCBtYWtlIGNvbW1hbmQ6
ICcgKyBlKQorCQlleGNlcHQgc3VicHJvY2Vzcy5DYWxsZWRQcm9jZXNzRXJyb3IgYXMgZToKKwkJ
CXJhaXNlIENvbmZpZ0Vycm9yKGUub3V0cHV0KQorCisJZGVmIG1ha2Uoc2VsZiwgam9icywgYnVp
bGRfZGlyKToKKwkJY29tbWFuZCA9IFsnbWFrZScsICdBUkNIPXVtJywgJy0tam9icz0nICsgc3Ry
KGpvYnMpXQorCQlpZiBidWlsZF9kaXI6CisJCQljb21tYW5kICs9IFsnTz0nICsgYnVpbGRfZGly
XQorCQl0cnk6CisJCQlzdWJwcm9jZXNzLmNoZWNrX291dHB1dChjb21tYW5kKQorCQlleGNlcHQg
T1NFcnJvciBhcyBlOgorCQkJcmFpc2UgQnVpbGRFcnJvcignQ291bGQgbm90IGNhbGwgZXhlY3V0
ZSBtYWtlOiAnICsgZSkKKwkJZXhjZXB0IHN1YnByb2Nlc3MuQ2FsbGVkUHJvY2Vzc0Vycm9yIGFz
IGU6CisJCQlyYWlzZSBCdWlsZEVycm9yKGUub3V0cHV0KQorCisJZGVmIGxpbnV4X2JpbihzZWxm
LCBwYXJhbXMsIHRpbWVvdXQsIGJ1aWxkX2Rpcik6CisJCSIiIlJ1bnMgdGhlIExpbnV4IFVNTCBi
aW5hcnkuIE11c3QgYmUgbmFtZWQgJ2xpbnV4Jy4iIiIKKwkJbGludXhfYmluID0gJy4vbGludXgn
CisJCWlmIGJ1aWxkX2RpcjoKKwkJCWxpbnV4X2JpbiA9IG9zLnBhdGguam9pbihidWlsZF9kaXIs
ICdsaW51eCcpCisJCXByb2Nlc3MgPSBzdWJwcm9jZXNzLlBvcGVuKAorCQkJW2xpbnV4X2Jpbl0g
KyBwYXJhbXMsCisJCQlzdGRpbj1zdWJwcm9jZXNzLlBJUEUsCisJCQlzdGRvdXQ9c3VicHJvY2Vz
cy5QSVBFLAorCQkJc3RkZXJyPXN1YnByb2Nlc3MuUElQRSkKKwkJcHJvY2Vzcy53YWl0KHRpbWVv
dXQ9dGltZW91dCkKKwkJcmV0dXJuIHByb2Nlc3MKKworCitkZWYgZ2V0X2tjb25maWdfcGF0aChi
dWlsZF9kaXIpOgorCWtjb25maWdfcGF0aCA9IEtDT05GSUdfUEFUSAorCWlmIGJ1aWxkX2RpcjoK
KwkJa2NvbmZpZ19wYXRoID0gb3MucGF0aC5qb2luKGJ1aWxkX2RpciwgS0NPTkZJR19QQVRIKQor
CXJldHVybiBrY29uZmlnX3BhdGgKKworY2xhc3MgTGludXhTb3VyY2VUcmVlKG9iamVjdCk6CisJ
IiIiUmVwcmVzZW50cyBhIExpbnV4IGtlcm5lbCBzb3VyY2UgdHJlZSB3aXRoIEtVbml0IHRlc3Rz
LiIiIgorCisJZGVmIF9faW5pdF9fKHNlbGYpOgorCQlzZWxmLl9rY29uZmlnID0ga3VuaXRfY29u
ZmlnLktjb25maWcoKQorCQlzZWxmLl9rY29uZmlnLnJlYWRfZnJvbV9maWxlKCdrdW5pdGNvbmZp
ZycpCisJCXNlbGYuX29wcyA9IExpbnV4U291cmNlVHJlZU9wZXJhdGlvbnMoKQorCisJZGVmIGNs
ZWFuKHNlbGYpOgorCQl0cnk6CisJCQlzZWxmLl9vcHMubWFrZV9tcnByb3BlcigpCisJCWV4Y2Vw
dCBDb25maWdFcnJvciBhcyBlOgorCQkJbG9nZ2luZy5lcnJvcihlKQorCQkJcmV0dXJuIEZhbHNl
CisJCXJldHVybiBUcnVlCisKKwlkZWYgYnVpbGRfY29uZmlnKHNlbGYsIGJ1aWxkX2Rpcik6CisJ
CWtjb25maWdfcGF0aCA9IGdldF9rY29uZmlnX3BhdGgoYnVpbGRfZGlyKQorCQlpZiBidWlsZF9k
aXIgYW5kIG5vdCBvcy5wYXRoLmV4aXN0cyhidWlsZF9kaXIpOgorCQkJb3MubWtkaXIoYnVpbGRf
ZGlyKQorCQlzZWxmLl9rY29uZmlnLndyaXRlX3RvX2ZpbGUoa2NvbmZpZ19wYXRoKQorCQl0cnk6
CisJCQlzZWxmLl9vcHMubWFrZV9vbGRkZWZjb25maWcoYnVpbGRfZGlyKQorCQlleGNlcHQgQ29u
ZmlnRXJyb3IgYXMgZToKKwkJCWxvZ2dpbmcuZXJyb3IoZSkKKwkJCXJldHVybiBGYWxzZQorCQl2
YWxpZGF0ZWRfa2NvbmZpZyA9IGt1bml0X2NvbmZpZy5LY29uZmlnKCkKKwkJdmFsaWRhdGVkX2tj
b25maWcucmVhZF9mcm9tX2ZpbGUoa2NvbmZpZ19wYXRoKQorCQlpZiBub3Qgc2VsZi5fa2NvbmZp
Zy5pc19zdWJzZXRfb2YodmFsaWRhdGVkX2tjb25maWcpOgorCQkJbG9nZ2luZy5lcnJvcignUHJv
dmlkZWQgS2NvbmZpZyBpcyBub3QgY29udGFpbmVkIGluIHZhbGlkYXRlZCAuY29uZmlnIScpCisJ
CQlyZXR1cm4gRmFsc2UKKwkJcmV0dXJuIFRydWUKKworCWRlZiBidWlsZF9yZWNvbmZpZyhzZWxm
LCBidWlsZF9kaXIpOgorCQkiIiJDcmVhdGVzIGEgbmV3IC5jb25maWcgaWYgaXQgaXMgbm90IGEg
c3Vic2V0IG9mIHRoZSBrdW5pdGNvbmZpZy4iIiIKKwkJa2NvbmZpZ19wYXRoID0gZ2V0X2tjb25m
aWdfcGF0aChidWlsZF9kaXIpCisJCWlmIG9zLnBhdGguZXhpc3RzKGtjb25maWdfcGF0aCk6CisJ
CQlleGlzdGluZ19rY29uZmlnID0ga3VuaXRfY29uZmlnLktjb25maWcoKQorCQkJZXhpc3Rpbmdf
a2NvbmZpZy5yZWFkX2Zyb21fZmlsZShrY29uZmlnX3BhdGgpCisJCQlpZiBub3Qgc2VsZi5fa2Nv
bmZpZy5pc19zdWJzZXRfb2YoZXhpc3Rpbmdfa2NvbmZpZyk6CisJCQkJcHJpbnQoJ1JlZ2VuZXJh
dGluZyAuY29uZmlnIC4uLicpCisJCQkJb3MucmVtb3ZlKGtjb25maWdfcGF0aCkKKwkJCQlyZXR1
cm4gc2VsZi5idWlsZF9jb25maWcoYnVpbGRfZGlyKQorCQkJZWxzZToKKwkJCQlyZXR1cm4gVHJ1
ZQorCQllbHNlOgorCQkJcHJpbnQoJ0dlbmVyYXRpbmcgLmNvbmZpZyAuLi4nKQorCQkJcmV0dXJu
IHNlbGYuYnVpbGRfY29uZmlnKGJ1aWxkX2RpcikKKworCWRlZiBidWlsZF91bV9rZXJuZWwoc2Vs
Ziwgam9icywgYnVpbGRfZGlyKToKKwkJdHJ5OgorCQkJc2VsZi5fb3BzLm1ha2Vfb2xkZGVmY29u
ZmlnKGJ1aWxkX2RpcikKKwkJCXNlbGYuX29wcy5tYWtlKGpvYnMsIGJ1aWxkX2RpcikKKwkJZXhj
ZXB0IChDb25maWdFcnJvciwgQnVpbGRFcnJvcikgYXMgZToKKwkJCWxvZ2dpbmcuZXJyb3IoZSkK
KwkJCXJldHVybiBGYWxzZQorCQl1c2VkX2tjb25maWcgPSBrdW5pdF9jb25maWcuS2NvbmZpZygp
CisJCXVzZWRfa2NvbmZpZy5yZWFkX2Zyb21fZmlsZShnZXRfa2NvbmZpZ19wYXRoKGJ1aWxkX2Rp
cikpCisJCWlmIG5vdCBzZWxmLl9rY29uZmlnLmlzX3N1YnNldF9vZih1c2VkX2tjb25maWcpOgor
CQkJbG9nZ2luZy5lcnJvcignUHJvdmlkZWQgS2NvbmZpZyBpcyBub3QgY29udGFpbmVkIGluIGZp
bmFsIGNvbmZpZyEnKQorCQkJcmV0dXJuIEZhbHNlCisJCXJldHVybiBUcnVlCisKKwlkZWYgcnVu
X2tlcm5lbChzZWxmLCBhcmdzPVtdLCB0aW1lb3V0PU5vbmUsIGJ1aWxkX2Rpcj1Ob25lKToKKwkJ
YXJncy5leHRlbmQoWydtZW09MjU2TSddKQorCQlwcm9jZXNzID0gc2VsZi5fb3BzLmxpbnV4X2Jp
bihhcmdzLCB0aW1lb3V0LCBidWlsZF9kaXIpCisJCXdpdGggb3BlbigndGVzdC5sb2cnLCAndycp
IGFzIGY6CisJCQlmb3IgbGluZSBpbiBwcm9jZXNzLnN0ZG91dDoKKwkJCQlmLndyaXRlKGxpbmUu
cnN0cmlwKCkuZGVjb2RlKCdhc2NpaScpICsgJ1xuJykKKwkJCQl5aWVsZCBsaW5lLnJzdHJpcCgp
LmRlY29kZSgnYXNjaWknKQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF9w
YXJzZXIucHkgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0X3BhcnNlci5weQpuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjRmZmJhZTBmNjczMgotLS0gL2Rldi9udWxs
CisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQva3VuaXRfcGFyc2VyLnB5CkBAIC0wLDAgKzEsMzEw
IEBACisjIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisjCisjIFBhcnNlcyB0ZXN0
IHJlc3VsdHMgZnJvbSBhIGtlcm5lbCBkbWVzZyBsb2cuCisjCisjIENvcHlyaWdodCAoQykgMjAx
OSwgR29vZ2xlIExMQy4KKyMgQXV0aG9yOiBGZWxpeCBHdW8gPGZlbGl4Z3VveGl1cGluZ0BnbWFp
bC5jb20+CisjIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUu
Y29tPgorCitpbXBvcnQgcmUKKworZnJvbSBjb2xsZWN0aW9ucyBpbXBvcnQgbmFtZWR0dXBsZQor
ZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKK2Zyb20gZW51bSBpbXBvcnQgRW51bSwgYXV0
bworZnJvbSBmdW5jdG9vbHMgaW1wb3J0IHJlZHVjZQorZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QK
KworVGVzdFJlc3VsdCA9IG5hbWVkdHVwbGUoJ1Rlc3RSZXN1bHQnLCBbJ3N0YXR1cycsJ3N1aXRl
cycsJ2xvZyddKQorCitjbGFzcyBUZXN0U3VpdGUob2JqZWN0KToKKwlkZWYgX19pbml0X18oc2Vs
Zik6CisJCXNlbGYuc3RhdHVzID0gTm9uZQorCQlzZWxmLm5hbWUgPSBOb25lCisJCXNlbGYuY2Fz
ZXMgPSBbXQorCisJZGVmIF9fc3RyX18oc2VsZik6CisJCXJldHVybiAnVGVzdFN1aXRlKCcgKyBz
ZWxmLnN0YXR1cyArICcsJyArIHNlbGYubmFtZSArICcsJyArIHN0cihzZWxmLmNhc2VzKSArICcp
JworCisJZGVmIF9fcmVwcl9fKHNlbGYpOgorCQlyZXR1cm4gc3RyKHNlbGYpCisKK2NsYXNzIFRl
c3RDYXNlKG9iamVjdCk6CisJZGVmIF9faW5pdF9fKHNlbGYpOgorCQlzZWxmLnN0YXR1cyA9IE5v
bmUKKwkJc2VsZi5uYW1lID0gJycKKwkJc2VsZi5sb2cgPSBbXQorCisJZGVmIF9fc3RyX18oc2Vs
Zik6CisJCXJldHVybiAnVGVzdENhc2UoJyArIHNlbGYuc3RhdHVzICsgJywnICsgc2VsZi5uYW1l
ICsgJywnICsgc3RyKHNlbGYubG9nKSArICcpJworCisJZGVmIF9fcmVwcl9fKHNlbGYpOgorCQly
ZXR1cm4gc3RyKHNlbGYpCisKK2NsYXNzIFRlc3RTdGF0dXMoRW51bSk6CisJU1VDQ0VTUyA9IGF1
dG8oKQorCUZBSUxVUkUgPSBhdXRvKCkKKwlURVNUX0NSQVNIRUQgPSBhdXRvKCkKKwlOT19URVNU
UyA9IGF1dG8oKQorCitrdW5pdF9zdGFydF9yZSA9IHJlLmNvbXBpbGUocideVEFQIHZlcnNpb24g
WzAtOV0rJCcpCitrdW5pdF9lbmRfcmUgPSByZS5jb21waWxlKCdMaXN0IG9mIGFsbCBwYXJ0aXRp
b25zOicpCisKK2RlZiBpc29sYXRlX2t1bml0X291dHB1dChrZXJuZWxfb3V0cHV0KToKKwlzdGFy
dGVkID0gRmFsc2UKKwlmb3IgbGluZSBpbiBrZXJuZWxfb3V0cHV0OgorCQlpZiBrdW5pdF9zdGFy
dF9yZS5tYXRjaChsaW5lKToKKwkJCXN0YXJ0ZWQgPSBUcnVlCisJCQl5aWVsZCBsaW5lCisJCWVs
aWYga3VuaXRfZW5kX3JlLm1hdGNoKGxpbmUpOgorCQkJYnJlYWsKKwkJZWxpZiBzdGFydGVkOgor
CQkJeWllbGQgbGluZQorCitkZWYgcmF3X291dHB1dChrZXJuZWxfb3V0cHV0KToKKwlmb3IgbGlu
ZSBpbiBrZXJuZWxfb3V0cHV0OgorCQlwcmludChsaW5lKQorCitESVZJREVSID0gJz0nICogNjAK
KworUkVTRVQgPSAnXDAzM1swOzBtJworCitkZWYgcmVkKHRleHQpOgorCXJldHVybiAnXDAzM1sx
OzMxbScgKyB0ZXh0ICsgUkVTRVQKKworZGVmIHllbGxvdyh0ZXh0KToKKwlyZXR1cm4gJ1wwMzNb
MTszM20nICsgdGV4dCArIFJFU0VUCisKK2RlZiBncmVlbih0ZXh0KToKKwlyZXR1cm4gJ1wwMzNb
MTszMm0nICsgdGV4dCArIFJFU0VUCisKK2RlZiBwcmludF93aXRoX3RpbWVzdGFtcChtZXNzYWdl
KToKKwlwcmludCgnWyVzXSAlcycgJSAoZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoJyVIOiVNOiVT
JyksIG1lc3NhZ2UpKQorCitkZWYgZm9ybWF0X3N1aXRlX2RpdmlkZXIobWVzc2FnZSk6CisJcmV0
dXJuICc9PT09PT09PSAnICsgbWVzc2FnZSArICcgPT09PT09PT0nCisKK2RlZiBwcmludF9zdWl0
ZV9kaXZpZGVyKG1lc3NhZ2UpOgorCXByaW50X3dpdGhfdGltZXN0YW1wKERJVklERVIpCisJcHJp
bnRfd2l0aF90aW1lc3RhbXAoZm9ybWF0X3N1aXRlX2RpdmlkZXIobWVzc2FnZSkpCisKK2RlZiBw
cmludF9sb2cobG9nKToKKwlmb3IgbSBpbiBsb2c6CisJCXByaW50X3dpdGhfdGltZXN0YW1wKG0p
CisKK1RBUF9FTlRSSUVTID0gcmUuY29tcGlsZShyJ14oVEFQfFx0P29rfFx0P25vdCBva3xcdD9b
MC05XStcLlwuWzAtOV0rfFx0PyMpLiokJykKKworZGVmIGNvbnN1bWVfbm9uX2RpYWdub3NpdGlj
KGxpbmVzOiBMaXN0W3N0cl0pIC0+IE5vbmU6CisJd2hpbGUgbGluZXMgYW5kIG5vdCBUQVBfRU5U
UklFUy5tYXRjaChsaW5lc1swXSk6CisJCWxpbmVzLnBvcCgwKQorCitkZWYgc2F2ZV9ub25fZGlh
Z25vc2l0aWMobGluZXM6IExpc3Rbc3RyXSwgdGVzdF9jYXNlOiBUZXN0Q2FzZSkgLT4gTm9uZToK
Kwl3aGlsZSBsaW5lcyBhbmQgbm90IFRBUF9FTlRSSUVTLm1hdGNoKGxpbmVzWzBdKToKKwkJdGVz
dF9jYXNlLmxvZy5hcHBlbmQobGluZXNbMF0pCisJCWxpbmVzLnBvcCgwKQorCitPa05vdE9rUmVz
dWx0ID0gbmFtZWR0dXBsZSgnT2tOb3RPa1Jlc3VsdCcsIFsnaXNfb2snLCdkZXNjcmlwdGlvbics
ICd0ZXh0J10pCisKK09LX05PVF9PS19TVUJURVNUID0gcmUuY29tcGlsZShyJ15cdChva3xub3Qg
b2spIFswLTldKyAtICguKikkJykKKworT0tfTk9UX09LX01PRFVMRSA9IHJlLmNvbXBpbGUocide
KG9rfG5vdCBvaykgWzAtOV0rIC0gKC4qKSQnKQorCitkZWYgcGFyc2Vfb2tfbm90X29rX3Rlc3Rf
Y2FzZShsaW5lczogTGlzdFtzdHJdLAorCQkJICAgICAgdGVzdF9jYXNlOiBUZXN0Q2FzZSwKKwkJ
CSAgICAgIGV4cGVjdGluZ190ZXN0X2Nhc2U6IGJvb2wpIC0+IGJvb2w6CisJc2F2ZV9ub25fZGlh
Z25vc2l0aWMobGluZXMsIHRlc3RfY2FzZSkKKwlpZiBub3QgbGluZXM6CisJCWlmIGV4cGVjdGlu
Z190ZXN0X2Nhc2U6CisJCQl0ZXN0X2Nhc2Uuc3RhdHVzID0gVGVzdFN0YXR1cy5URVNUX0NSQVNI
RUQKKwkJCXJldHVybiBUcnVlCisJCWVsc2U6CisJCQlyZXR1cm4gRmFsc2UKKwlsaW5lID0gbGlu
ZXNbMF0KKwltYXRjaCA9IE9LX05PVF9PS19TVUJURVNULm1hdGNoKGxpbmUpCisJaWYgbWF0Y2g6
CisJCXRlc3RfY2FzZS5sb2cuYXBwZW5kKGxpbmVzLnBvcCgwKSkKKwkJdGVzdF9jYXNlLm5hbWUg
PSBtYXRjaC5ncm91cCgyKQorCQlpZiB0ZXN0X2Nhc2Uuc3RhdHVzID09IFRlc3RTdGF0dXMuVEVT
VF9DUkFTSEVEOgorCQkJcmV0dXJuIFRydWUKKwkJaWYgbWF0Y2guZ3JvdXAoMSkgPT0gJ29rJzoK
KwkJCXRlc3RfY2FzZS5zdGF0dXMgPSBUZXN0U3RhdHVzLlNVQ0NFU1MKKwkJZWxzZToKKwkJCXRl
c3RfY2FzZS5zdGF0dXMgPSBUZXN0U3RhdHVzLkZBSUxVUkUKKwkJcmV0dXJuIFRydWUKKwllbHNl
OgorCQlyZXR1cm4gRmFsc2UKKworU1VCVEVTVF9ESUFHTk9TVElDID0gcmUuY29tcGlsZShyJ15c
dCMgLio/OiAoLiopJCcpCitESUFHTk9TVElDX0NSQVNIX01FU1NBR0UgPSAna3VuaXQgdGVzdCBj
YXNlIGNyYXNoZWQhJworCitkZWYgcGFyc2VfZGlhZ25vc3RpYyhsaW5lczogTGlzdFtzdHJdLCB0
ZXN0X2Nhc2U6IFRlc3RDYXNlKSAtPiBib29sOgorCXNhdmVfbm9uX2RpYWdub3NpdGljKGxpbmVz
LCB0ZXN0X2Nhc2UpCisJaWYgbm90IGxpbmVzOgorCQlyZXR1cm4gRmFsc2UKKwlsaW5lID0gbGlu
ZXNbMF0KKwltYXRjaCA9IFNVQlRFU1RfRElBR05PU1RJQy5tYXRjaChsaW5lKQorCWlmIG1hdGNo
OgorCQl0ZXN0X2Nhc2UubG9nLmFwcGVuZChsaW5lcy5wb3AoMCkpCisJCWlmIG1hdGNoLmdyb3Vw
KDEpID09IERJQUdOT1NUSUNfQ1JBU0hfTUVTU0FHRToKKwkJCXRlc3RfY2FzZS5zdGF0dXMgPSBU
ZXN0U3RhdHVzLlRFU1RfQ1JBU0hFRAorCQlyZXR1cm4gVHJ1ZQorCWVsc2U6CisJCXJldHVybiBG
YWxzZQorCitkZWYgcGFyc2VfdGVzdF9jYXNlKGxpbmVzOiBMaXN0W3N0cl0sIGV4cGVjdGluZ190
ZXN0X2Nhc2U6IGJvb2wpIC0+IFRlc3RDYXNlOgorCXRlc3RfY2FzZSA9IFRlc3RDYXNlKCkKKwlz
YXZlX25vbl9kaWFnbm9zaXRpYyhsaW5lcywgdGVzdF9jYXNlKQorCXdoaWxlIHBhcnNlX2RpYWdu
b3N0aWMobGluZXMsIHRlc3RfY2FzZSk6CisJCXBhc3MKKwlpZiBwYXJzZV9va19ub3Rfb2tfdGVz
dF9jYXNlKGxpbmVzLCB0ZXN0X2Nhc2UsIGV4cGVjdGluZ190ZXN0X2Nhc2UpOgorCQlyZXR1cm4g
dGVzdF9jYXNlCisJZWxzZToKKwkJcmV0dXJuIE5vbmUKKworU1VCVEVTVF9IRUFERVIgPSByZS5j
b21waWxlKHInXlx0IyBTdWJ0ZXN0OiAoLiopJCcpCisKK2RlZiBwYXJzZV9zdWJ0ZXN0X2hlYWRl
cihsaW5lczogTGlzdFtzdHJdKSAtPiBzdHI6CisJY29uc3VtZV9ub25fZGlhZ25vc2l0aWMobGlu
ZXMpCisJaWYgbm90IGxpbmVzOgorCQlyZXR1cm4gTm9uZQorCW1hdGNoID0gU1VCVEVTVF9IRUFE
RVIubWF0Y2gobGluZXNbMF0pCisJaWYgbWF0Y2g6CisJCWxpbmVzLnBvcCgwKQorCQlyZXR1cm4g
bWF0Y2guZ3JvdXAoMSkKKwllbHNlOgorCQlyZXR1cm4gTm9uZQorCitTVUJURVNUX1BMQU4gPSBy
ZS5jb21waWxlKHInXHRbMC05XStcLlwuKFswLTldKyknKQorCitkZWYgcGFyc2Vfc3VidGVzdF9w
bGFuKGxpbmVzOiBMaXN0W3N0cl0pIC0+IGludDoKKwljb25zdW1lX25vbl9kaWFnbm9zaXRpYyhs
aW5lcykKKwltYXRjaCA9IFNVQlRFU1RfUExBTi5tYXRjaChsaW5lc1swXSkKKwlpZiBtYXRjaDoK
KwkJbGluZXMucG9wKDApCisJCXJldHVybiBpbnQobWF0Y2guZ3JvdXAoMSkpCisJZWxzZToKKwkJ
cmV0dXJuIE5vbmUKKworZGVmIG1heF9zdGF0dXMobGVmdDogVGVzdFN0YXR1cywgcmlnaHQ6IFRl
c3RTdGF0dXMpIC0+IFRlc3RTdGF0dXM6CisJaWYgbGVmdCA9PSBUZXN0U3RhdHVzLlRFU1RfQ1JB
U0hFRCBvciByaWdodCA9PSBUZXN0U3RhdHVzLlRFU1RfQ1JBU0hFRDoKKwkJcmV0dXJuIFRlc3RT
dGF0dXMuVEVTVF9DUkFTSEVECisJZWxpZiBsZWZ0ID09IFRlc3RTdGF0dXMuRkFJTFVSRSBvciBy
aWdodCA9PSBUZXN0U3RhdHVzLkZBSUxVUkU6CisJCXJldHVybiBUZXN0U3RhdHVzLkZBSUxVUkUK
KwllbGlmIGxlZnQgIT0gVGVzdFN0YXR1cy5TVUNDRVNTOgorCQlyZXR1cm4gbGVmdAorCWVsaWYg
cmlnaHQgIT0gVGVzdFN0YXR1cy5TVUNDRVNTOgorCQlyZXR1cm4gcmlnaHQKKwllbHNlOgorCQly
ZXR1cm4gVGVzdFN0YXR1cy5TVUNDRVNTCisKK2RlZiBwYXJzZV9va19ub3Rfb2tfdGVzdF9zdWl0
ZShsaW5lczogTGlzdFtzdHJdLCB0ZXN0X3N1aXRlOiBUZXN0U3VpdGUpIC0+IGJvb2w6CisJY29u
c3VtZV9ub25fZGlhZ25vc2l0aWMobGluZXMpCisJaWYgbm90IGxpbmVzOgorCQl0ZXN0X3N1aXRl
LnN0YXR1cyA9IFRlc3RTdGF0dXMuVEVTVF9DUkFTSEVECisJCXJldHVybiBGYWxzZQorCWxpbmUg
PSBsaW5lc1swXQorCW1hdGNoID0gT0tfTk9UX09LX01PRFVMRS5tYXRjaChsaW5lKQorCWlmIG1h
dGNoOgorCQlsaW5lcy5wb3AoMCkKKwkJaWYgbWF0Y2guZ3JvdXAoMSkgPT0gJ29rJzoKKwkJCXRl
c3Rfc3VpdGUuc3RhdHVzID0gVGVzdFN0YXR1cy5TVUNDRVNTCisJCWVsc2U6CisJCQl0ZXN0X3N1
aXRlLnN0YXR1cyA9IFRlc3RTdGF0dXMuRkFJTFVSRQorCQlyZXR1cm4gVHJ1ZQorCWVsc2U6CisJ
CXJldHVybiBGYWxzZQorCitkZWYgYnViYmxlX3VwX2Vycm9ycyh0b19zdGF0dXMsIHN0YXR1c19j
b250YWluZXJfbGlzdCkgLT4gVGVzdFN0YXR1czoKKwlzdGF0dXNfbGlzdCA9IG1hcCh0b19zdGF0
dXMsIHN0YXR1c19jb250YWluZXJfbGlzdCkKKwlyZXR1cm4gcmVkdWNlKG1heF9zdGF0dXMsIHN0
YXR1c19saXN0LCBUZXN0U3RhdHVzLlNVQ0NFU1MpCisKK2RlZiBidWJibGVfdXBfdGVzdF9jYXNl
X2Vycm9ycyh0ZXN0X3N1aXRlOiBUZXN0U3VpdGUpIC0+IFRlc3RTdGF0dXM6CisJbWF4X3Rlc3Rf
Y2FzZV9zdGF0dXMgPSBidWJibGVfdXBfZXJyb3JzKGxhbWJkYSB4OiB4LnN0YXR1cywgdGVzdF9z
dWl0ZS5jYXNlcykKKwlyZXR1cm4gbWF4X3N0YXR1cyhtYXhfdGVzdF9jYXNlX3N0YXR1cywgdGVz
dF9zdWl0ZS5zdGF0dXMpCisKK2RlZiBwYXJzZV90ZXN0X3N1aXRlKGxpbmVzOiBMaXN0W3N0cl0p
IC0+IFRlc3RTdWl0ZToKKwlpZiBub3QgbGluZXM6CisJCXJldHVybiBOb25lCisJY29uc3VtZV9u
b25fZGlhZ25vc2l0aWMobGluZXMpCisJdGVzdF9zdWl0ZSA9IFRlc3RTdWl0ZSgpCisJdGVzdF9z
dWl0ZS5zdGF0dXMgPSBUZXN0U3RhdHVzLlNVQ0NFU1MKKwluYW1lID0gcGFyc2Vfc3VidGVzdF9o
ZWFkZXIobGluZXMpCisJaWYgbm90IG5hbWU6CisJCXJldHVybiBOb25lCisJdGVzdF9zdWl0ZS5u
YW1lID0gbmFtZQorCWV4cGVjdGVkX3Rlc3RfY2FzZV9udW0gPSBwYXJzZV9zdWJ0ZXN0X3BsYW4o
bGluZXMpCisJaWYgbm90IGV4cGVjdGVkX3Rlc3RfY2FzZV9udW06CisJCXJldHVybiBOb25lCisJ
dGVzdF9jYXNlID0gcGFyc2VfdGVzdF9jYXNlKGxpbmVzLCBleHBlY3RlZF90ZXN0X2Nhc2VfbnVt
ID4gMCkKKwlleHBlY3RlZF90ZXN0X2Nhc2VfbnVtIC09IDEKKwl3aGlsZSB0ZXN0X2Nhc2U6CisJ
CXRlc3Rfc3VpdGUuY2FzZXMuYXBwZW5kKHRlc3RfY2FzZSkKKwkJdGVzdF9jYXNlID0gcGFyc2Vf
dGVzdF9jYXNlKGxpbmVzLCBleHBlY3RlZF90ZXN0X2Nhc2VfbnVtID4gMCkKKwkJZXhwZWN0ZWRf
dGVzdF9jYXNlX251bSAtPSAxCisJaWYgcGFyc2Vfb2tfbm90X29rX3Rlc3Rfc3VpdGUobGluZXMs
IHRlc3Rfc3VpdGUpOgorCQl0ZXN0X3N1aXRlLnN0YXR1cyA9IGJ1YmJsZV91cF90ZXN0X2Nhc2Vf
ZXJyb3JzKHRlc3Rfc3VpdGUpCisJCXJldHVybiB0ZXN0X3N1aXRlCisJZWxpZiBub3QgbGluZXM6
CisJCXByaW50X3dpdGhfdGltZXN0YW1wKHJlZCgnW0VSUk9SXSAnKSArICdyYW4gb3V0IG9mIGxp
bmVzIGJlZm9yZSBlbmQgdG9rZW4nKQorCQlyZXR1cm4gdGVzdF9zdWl0ZQorCWVsc2U6CisJCXBy
aW50KCdmYWlsZWQgdG8gcGFyc2UgZW5kIG9mIHN1aXRlJyArIGxpbmVzWzBdKQorCQlyZXR1cm4g
Tm9uZQorCitUQVBfSEVBREVSID0gcmUuY29tcGlsZShyJ15UQVAgdmVyc2lvbiAxNCQnKQorCitk
ZWYgcGFyc2VfdGFwX2hlYWRlcihsaW5lczogTGlzdFtzdHJdKSAtPiBib29sOgorCWNvbnN1bWVf
bm9uX2RpYWdub3NpdGljKGxpbmVzKQorCWlmIFRBUF9IRUFERVIubWF0Y2gobGluZXNbMF0pOgor
CQlsaW5lcy5wb3AoMCkKKwkJcmV0dXJuIFRydWUKKwllbHNlOgorCQlyZXR1cm4gRmFsc2UKKwor
ZGVmIGJ1YmJsZV91cF9zdWl0ZV9lcnJvcnModGVzdF9zdWl0ZV9saXN0OiBMaXN0W1Rlc3RTdWl0
ZV0pIC0+IFRlc3RTdGF0dXM6CisJcmV0dXJuIGJ1YmJsZV91cF9lcnJvcnMobGFtYmRhIHg6IHgu
c3RhdHVzLCB0ZXN0X3N1aXRlX2xpc3QpCisKK2RlZiBwYXJzZV90ZXN0X3Jlc3VsdChsaW5lczog
TGlzdFtzdHJdKSAtPiBUZXN0UmVzdWx0OgorCWlmIG5vdCBsaW5lczoKKwkJcmV0dXJuIFRlc3RS
ZXN1bHQoVGVzdFN0YXR1cy5OT19URVNUUywgW10sIGxpbmVzKQorCWNvbnN1bWVfbm9uX2RpYWdu
b3NpdGljKGxpbmVzKQorCWlmIG5vdCBwYXJzZV90YXBfaGVhZGVyKGxpbmVzKToKKwkJcmV0dXJu
IE5vbmUKKwl0ZXN0X3N1aXRlcyA9IFtdCisJdGVzdF9zdWl0ZSA9IHBhcnNlX3Rlc3Rfc3VpdGUo
bGluZXMpCisJd2hpbGUgdGVzdF9zdWl0ZToKKwkJdGVzdF9zdWl0ZXMuYXBwZW5kKHRlc3Rfc3Vp
dGUpCisJCXRlc3Rfc3VpdGUgPSBwYXJzZV90ZXN0X3N1aXRlKGxpbmVzKQorCXJldHVybiBUZXN0
UmVzdWx0KGJ1YmJsZV91cF9zdWl0ZV9lcnJvcnModGVzdF9zdWl0ZXMpLCB0ZXN0X3N1aXRlcywg
bGluZXMpCisKK2RlZiBwYXJzZV9ydW5fdGVzdHMoa2VybmVsX291dHB1dCkgLT4gVGVzdFJlc3Vs
dDoKKwl0b3RhbF90ZXN0cyA9IDAKKwlmYWlsZWRfdGVzdHMgPSAwCisJY3Jhc2hlZF90ZXN0cyA9
IDAKKwl0ZXN0X3Jlc3VsdCA9IHBhcnNlX3Rlc3RfcmVzdWx0KGxpc3QoaXNvbGF0ZV9rdW5pdF9v
dXRwdXQoa2VybmVsX291dHB1dCkpKQorCWZvciB0ZXN0X3N1aXRlIGluIHRlc3RfcmVzdWx0LnN1
aXRlczoKKwkJaWYgdGVzdF9zdWl0ZS5zdGF0dXMgPT0gVGVzdFN0YXR1cy5TVUNDRVNTOgorCQkJ
cHJpbnRfc3VpdGVfZGl2aWRlcihncmVlbignW1BBU1NFRF0gJykgKyB0ZXN0X3N1aXRlLm5hbWUp
CisJCWVsaWYgdGVzdF9zdWl0ZS5zdGF0dXMgPT0gVGVzdFN0YXR1cy5URVNUX0NSQVNIRUQ6CisJ
CQlwcmludF9zdWl0ZV9kaXZpZGVyKHJlZCgnW0NSQVNIRURdICcgKyB0ZXN0X3N1aXRlLm5hbWUp
KQorCQllbHNlOgorCQkJcHJpbnRfc3VpdGVfZGl2aWRlcihyZWQoJ1tGQUlMRURdICcpICsgdGVz
dF9zdWl0ZS5uYW1lKQorCQlmb3IgdGVzdF9jYXNlIGluIHRlc3Rfc3VpdGUuY2FzZXM6CisJCQl0
b3RhbF90ZXN0cyArPSAxCisJCQlpZiB0ZXN0X2Nhc2Uuc3RhdHVzID09IFRlc3RTdGF0dXMuU1VD
Q0VTUzoKKwkJCQlwcmludF93aXRoX3RpbWVzdGFtcChncmVlbignW1BBU1NFRF0gJykgKyB0ZXN0
X2Nhc2UubmFtZSkKKwkJCWVsaWYgdGVzdF9jYXNlLnN0YXR1cyA9PSBUZXN0U3RhdHVzLlRFU1Rf
Q1JBU0hFRDoKKwkJCQljcmFzaGVkX3Rlc3RzICs9IDEKKwkJCQlwcmludF93aXRoX3RpbWVzdGFt
cChyZWQoJ1tDUkFTSEVEXSAnICsgdGVzdF9jYXNlLm5hbWUpKQorCQkJCXByaW50X2xvZyhtYXAo
eWVsbG93LCB0ZXN0X2Nhc2UubG9nKSkKKwkJCQlwcmludF93aXRoX3RpbWVzdGFtcCgnJykKKwkJ
CWVsc2U6CisJCQkJZmFpbGVkX3Rlc3RzICs9IDEKKwkJCQlwcmludF93aXRoX3RpbWVzdGFtcChy
ZWQoJ1tGQUlMRURdICcpICsgdGVzdF9jYXNlLm5hbWUpCisJCQkJcHJpbnRfbG9nKG1hcCh5ZWxs
b3csIHRlc3RfY2FzZS5sb2cpKQorCQkJCXByaW50X3dpdGhfdGltZXN0YW1wKCcnKQorCXByaW50
X3dpdGhfdGltZXN0YW1wKERJVklERVIpCisJZm10ID0gZ3JlZW4gaWYgdGVzdF9yZXN1bHQuc3Rh
dHVzID09IFRlc3RTdGF0dXMuU1VDQ0VTUyBlbHNlIHJlZAorCXByaW50X3dpdGhfdGltZXN0YW1w
KAorCQlmbXQoJ1Rlc3RpbmcgY29tcGxldGUuICVkIHRlc3RzIHJ1bi4gJWQgZmFpbGVkLiAlZCBj
cmFzaGVkLicgJQorCQkgICAgKHRvdGFsX3Rlc3RzLCBmYWlsZWRfdGVzdHMsIGNyYXNoZWRfdGVz
dHMpKSkKKwlyZXR1cm4gdGVzdF9yZXN1bHQKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcva3Vu
aXQva3VuaXRfdG9vbF90ZXN0LnB5IGIvdG9vbHMvdGVzdGluZy9rdW5pdC9rdW5pdF90b29sX3Rl
c3QucHkKbmV3IGZpbGUgbW9kZSAxMDA3NTUKaW5kZXggMDAwMDAwMDAwMDAwLi40YTEyYmFhMGNk
NGUKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0aW5nL2t1bml0L2t1bml0X3Rvb2xfdGVz
dC5weQpAQCAtMCwwICsxLDIwNiBAQAorIyEvdXNyL2Jpbi9weXRob24zCisjIFNQRFgtTGljZW5z
ZS1JZGVudGlmaWVyOiBHUEwtMi4wCisjCisjIEEgY29sbGVjdGlvbiBvZiB0ZXN0cyBmb3IgdG9v
bHMvdGVzdGluZy9rdW5pdC9rdW5pdC5weQorIworIyBDb3B5cmlnaHQgKEMpIDIwMTksIEdvb2ds
ZSBMTEMuCisjIEF1dGhvcjogQnJlbmRhbiBIaWdnaW5zIDxicmVuZGFuaGlnZ2luc0Bnb29nbGUu
Y29tPgorCitpbXBvcnQgdW5pdHRlc3QKK2Zyb20gdW5pdHRlc3QgaW1wb3J0IG1vY2sKKworaW1w
b3J0IHRlbXBmaWxlLCBzaHV0aWwgIyBIYW5kbGluZyB0ZXN0X3RtcGRpcgorCitpbXBvcnQgb3MK
KworaW1wb3J0IGt1bml0X2NvbmZpZworaW1wb3J0IGt1bml0X3BhcnNlcgoraW1wb3J0IGt1bml0
X2tlcm5lbAoraW1wb3J0IGt1bml0CisKK3Rlc3RfdG1wZGlyID0gJycKKworZGVmIHNldFVwTW9k
dWxlKCk6CisJZ2xvYmFsIHRlc3RfdG1wZGlyCisJdGVzdF90bXBkaXIgPSB0ZW1wZmlsZS5ta2R0
ZW1wKCkKKworZGVmIHRlYXJEb3duTW9kdWxlKCk6CisJc2h1dGlsLnJtdHJlZSh0ZXN0X3RtcGRp
cikKKworZGVmIGdldF9hYnNvbHV0ZV9wYXRoKHBhdGgpOgorCXJldHVybiBvcy5wYXRoLmpvaW4o
b3MucGF0aC5kaXJuYW1lKF9fZmlsZV9fKSwgcGF0aCkKKworY2xhc3MgS2NvbmZpZ1Rlc3QodW5p
dHRlc3QuVGVzdENhc2UpOgorCisJZGVmIHRlc3RfaXNfc3Vic2V0X29mKHNlbGYpOgorCQlrY29u
ZmlnMCA9IGt1bml0X2NvbmZpZy5LY29uZmlnKCkKKwkJc2VsZi5hc3NlcnRUcnVlKGtjb25maWcw
LmlzX3N1YnNldF9vZihrY29uZmlnMCkpCisKKwkJa2NvbmZpZzEgPSBrdW5pdF9jb25maWcuS2Nv
bmZpZygpCisJCWtjb25maWcxLmFkZF9lbnRyeShrdW5pdF9jb25maWcuS2NvbmZpZ0VudHJ5KCdD
T05GSUdfVEVTVD15JykpCisJCXNlbGYuYXNzZXJ0VHJ1ZShrY29uZmlnMS5pc19zdWJzZXRfb2Yo
a2NvbmZpZzEpKQorCQlzZWxmLmFzc2VydFRydWUoa2NvbmZpZzAuaXNfc3Vic2V0X29mKGtjb25m
aWcxKSkKKwkJc2VsZi5hc3NlcnRGYWxzZShrY29uZmlnMS5pc19zdWJzZXRfb2Yoa2NvbmZpZzAp
KQorCisJZGVmIHRlc3RfcmVhZF9mcm9tX2ZpbGUoc2VsZik6CisJCWtjb25maWcgPSBrdW5pdF9j
b25maWcuS2NvbmZpZygpCisJCWtjb25maWdfcGF0aCA9IGdldF9hYnNvbHV0ZV9wYXRoKAorCQkJ
J3Rlc3RfZGF0YS90ZXN0X3JlYWRfZnJvbV9maWxlLmtjb25maWcnKQorCisJCWtjb25maWcucmVh
ZF9mcm9tX2ZpbGUoa2NvbmZpZ19wYXRoKQorCisJCWV4cGVjdGVkX2tjb25maWcgPSBrdW5pdF9j
b25maWcuS2NvbmZpZygpCisJCWV4cGVjdGVkX2tjb25maWcuYWRkX2VudHJ5KAorCQkJa3VuaXRf
Y29uZmlnLktjb25maWdFbnRyeSgnQ09ORklHX1VNTD15JykpCisJCWV4cGVjdGVkX2tjb25maWcu
YWRkX2VudHJ5KAorCQkJa3VuaXRfY29uZmlnLktjb25maWdFbnRyeSgnQ09ORklHX01NVT15Jykp
CisJCWV4cGVjdGVkX2tjb25maWcuYWRkX2VudHJ5KAorCQkJa3VuaXRfY29uZmlnLktjb25maWdF
bnRyeSgnQ09ORklHX1RFU1Q9eScpKQorCQlleHBlY3RlZF9rY29uZmlnLmFkZF9lbnRyeSgKKwkJ
CWt1bml0X2NvbmZpZy5LY29uZmlnRW50cnkoJ0NPTkZJR19FWEFNUExFX1RFU1Q9eScpKQorCQll
eHBlY3RlZF9rY29uZmlnLmFkZF9lbnRyeSgKKwkJCWt1bml0X2NvbmZpZy5LY29uZmlnRW50cnko
JyMgQ09ORklHX01LOCBpcyBub3Qgc2V0JykpCisKKwkJc2VsZi5hc3NlcnRFcXVhbChrY29uZmln
LmVudHJpZXMoKSwgZXhwZWN0ZWRfa2NvbmZpZy5lbnRyaWVzKCkpCisKKwlkZWYgdGVzdF93cml0
ZV90b19maWxlKHNlbGYpOgorCQlrY29uZmlnX3BhdGggPSBvcy5wYXRoLmpvaW4odGVzdF90bXBk
aXIsICcuY29uZmlnJykKKworCQlleHBlY3RlZF9rY29uZmlnID0ga3VuaXRfY29uZmlnLktjb25m
aWcoKQorCQlleHBlY3RlZF9rY29uZmlnLmFkZF9lbnRyeSgKKwkJCWt1bml0X2NvbmZpZy5LY29u
ZmlnRW50cnkoJ0NPTkZJR19VTUw9eScpKQorCQlleHBlY3RlZF9rY29uZmlnLmFkZF9lbnRyeSgK
KwkJCWt1bml0X2NvbmZpZy5LY29uZmlnRW50cnkoJ0NPTkZJR19NTVU9eScpKQorCQlleHBlY3Rl
ZF9rY29uZmlnLmFkZF9lbnRyeSgKKwkJCWt1bml0X2NvbmZpZy5LY29uZmlnRW50cnkoJ0NPTkZJ
R19URVNUPXknKSkKKwkJZXhwZWN0ZWRfa2NvbmZpZy5hZGRfZW50cnkoCisJCQlrdW5pdF9jb25m
aWcuS2NvbmZpZ0VudHJ5KCdDT05GSUdfRVhBTVBMRV9URVNUPXknKSkKKwkJZXhwZWN0ZWRfa2Nv
bmZpZy5hZGRfZW50cnkoCisJCQlrdW5pdF9jb25maWcuS2NvbmZpZ0VudHJ5KCcjIENPTkZJR19N
SzggaXMgbm90IHNldCcpKQorCisJCWV4cGVjdGVkX2tjb25maWcud3JpdGVfdG9fZmlsZShrY29u
ZmlnX3BhdGgpCisKKwkJYWN0dWFsX2tjb25maWcgPSBrdW5pdF9jb25maWcuS2NvbmZpZygpCisJ
CWFjdHVhbF9rY29uZmlnLnJlYWRfZnJvbV9maWxlKGtjb25maWdfcGF0aCkKKworCQlzZWxmLmFz
c2VydEVxdWFsKGFjdHVhbF9rY29uZmlnLmVudHJpZXMoKSwKKwkJCQkgZXhwZWN0ZWRfa2NvbmZp
Zy5lbnRyaWVzKCkpCisKK2NsYXNzIEtVbml0UGFyc2VyVGVzdCh1bml0dGVzdC5UZXN0Q2FzZSk6
CisKKwlkZWYgYXNzZXJ0Q29udGFpbnMoc2VsZiwgbmVlZGxlLCBoYXlzdGFjayk6CisJCWZvciBs
aW5lIGluIGhheXN0YWNrOgorCQkJaWYgbmVlZGxlIGluIGxpbmU6CisJCQkJcmV0dXJuCisJCXJh
aXNlIEFzc2VydGlvbkVycm9yKCciJyArCisJCQlzdHIobmVlZGxlKSArICciIG5vdCBmb3VuZCBp
biAiJyArIHN0cihoYXlzdGFjaykgKyAnIiEnKQorCisJZGVmIHRlc3Rfb3V0cHV0X2lzb2xhdGVk
X2NvcnJlY3RseShzZWxmKToKKwkJbG9nX3BhdGggPSBnZXRfYWJzb2x1dGVfcGF0aCgKKwkJCSd0
ZXN0X2RhdGEvdGVzdF9vdXRwdXRfaXNvbGF0ZWRfY29ycmVjdGx5LmxvZycpCisJCWZpbGUgPSBv
cGVuKGxvZ19wYXRoKQorCQlyZXN1bHQgPSBrdW5pdF9wYXJzZXIuaXNvbGF0ZV9rdW5pdF9vdXRw
dXQoZmlsZS5yZWFkbGluZXMoKSkKKwkJc2VsZi5hc3NlcnRDb250YWlucygnVEFQIHZlcnNpb24g
MTRcbicsIHJlc3VsdCkKKwkJc2VsZi5hc3NlcnRDb250YWlucygnCSMgU3VidGVzdDogZXhhbXBs
ZScsIHJlc3VsdCkKKwkJc2VsZi5hc3NlcnRDb250YWlucygnCTEuLjInLCByZXN1bHQpCisJCXNl
bGYuYXNzZXJ0Q29udGFpbnMoJwlvayAxIC0gZXhhbXBsZV9zaW1wbGVfdGVzdCcsIHJlc3VsdCkK
KwkJc2VsZi5hc3NlcnRDb250YWlucygnCW9rIDIgLSBleGFtcGxlX21vY2tfdGVzdCcsIHJlc3Vs
dCkKKwkJc2VsZi5hc3NlcnRDb250YWlucygnb2sgMSAtIGV4YW1wbGUnLCByZXN1bHQpCisJCWZp
bGUuY2xvc2UoKQorCisJZGVmIHRlc3RfcGFyc2Vfc3VjY2Vzc2Z1bF90ZXN0X2xvZyhzZWxmKToK
KwkJYWxsX3Bhc3NlZF9sb2cgPSBnZXRfYWJzb2x1dGVfcGF0aCgKKwkJCSd0ZXN0X2RhdGEvdGVz
dF9pc190ZXN0X3Bhc3NlZC1hbGxfcGFzc2VkLmxvZycpCisJCWZpbGUgPSBvcGVuKGFsbF9wYXNz
ZWRfbG9nKQorCQlyZXN1bHQgPSBrdW5pdF9wYXJzZXIucGFyc2VfcnVuX3Rlc3RzKGZpbGUucmVh
ZGxpbmVzKCkpCisJCXNlbGYuYXNzZXJ0RXF1YWwoCisJCQlrdW5pdF9wYXJzZXIuVGVzdFN0YXR1
cy5TVUNDRVNTLAorCQkJcmVzdWx0LnN0YXR1cykKKwkJZmlsZS5jbG9zZSgpCisKKwlkZWYgdGVz
dF9wYXJzZV9mYWlsZWRfdGVzdF9sb2coc2VsZik6CisJCWZhaWxlZF9sb2cgPSBnZXRfYWJzb2x1
dGVfcGF0aCgKKwkJCSd0ZXN0X2RhdGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1mYWlsdXJlLmxvZycp
CisJCWZpbGUgPSBvcGVuKGZhaWxlZF9sb2cpCisJCXJlc3VsdCA9IGt1bml0X3BhcnNlci5wYXJz
ZV9ydW5fdGVzdHMoZmlsZS5yZWFkbGluZXMoKSkKKwkJc2VsZi5hc3NlcnRFcXVhbCgKKwkJCWt1
bml0X3BhcnNlci5UZXN0U3RhdHVzLkZBSUxVUkUsCisJCQlyZXN1bHQuc3RhdHVzKQorCQlmaWxl
LmNsb3NlKCkKKworCWRlZiB0ZXN0X25vX3Rlc3RzKHNlbGYpOgorCQllbXB0eV9sb2cgPSBnZXRf
YWJzb2x1dGVfcGF0aCgKKwkJCSd0ZXN0X2RhdGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1ub190ZXN0
c19ydW4ubG9nJykKKwkJZmlsZSA9IG9wZW4oZW1wdHlfbG9nKQorCQlyZXN1bHQgPSBrdW5pdF9w
YXJzZXIucGFyc2VfcnVuX3Rlc3RzKAorCQkJa3VuaXRfcGFyc2VyLmlzb2xhdGVfa3VuaXRfb3V0
cHV0KGZpbGUucmVhZGxpbmVzKCkpKQorCQlzZWxmLmFzc2VydEVxdWFsKDAsIGxlbihyZXN1bHQu
c3VpdGVzKSkKKwkJc2VsZi5hc3NlcnRFcXVhbCgKKwkJCWt1bml0X3BhcnNlci5UZXN0U3RhdHVz
Lk5PX1RFU1RTLAorCQkJcmVzdWx0LnN0YXR1cykKKwkJZmlsZS5jbG9zZSgpCisKKwlkZWYgdGVz
dF9jcmFzaGVkX3Rlc3Qoc2VsZik6CisJCWNyYXNoZWRfbG9nID0gZ2V0X2Fic29sdXRlX3BhdGgo
CisJCQkndGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtY3Jhc2gubG9nJykKKwkJZmlsZSA9
IG9wZW4oY3Jhc2hlZF9sb2cpCisJCXJlc3VsdCA9IGt1bml0X3BhcnNlci5wYXJzZV9ydW5fdGVz
dHMoZmlsZS5yZWFkbGluZXMoKSkKKwkJc2VsZi5hc3NlcnRFcXVhbCgKKwkJCWt1bml0X3BhcnNl
ci5UZXN0U3RhdHVzLlRFU1RfQ1JBU0hFRCwKKwkJCXJlc3VsdC5zdGF0dXMpCisJCWZpbGUuY2xv
c2UoKQorCitjbGFzcyBTdHJDb250YWlucyhzdHIpOgorCWRlZiBfX2VxX18oc2VsZiwgb3RoZXIp
OgorCQlyZXR1cm4gc2VsZiBpbiBvdGhlcgorCitjbGFzcyBLVW5pdE1haW5UZXN0KHVuaXR0ZXN0
LlRlc3RDYXNlKToKKwlkZWYgc2V0VXAoc2VsZik6CisJCXBhdGggPSBnZXRfYWJzb2x1dGVfcGF0
aCgndGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtYWxsX3Bhc3NlZC5sb2cnKQorCQlmaWxl
ID0gb3BlbihwYXRoKQorCQlhbGxfcGFzc2VkX2xvZyA9IGZpbGUucmVhZGxpbmVzKCkKKwkJc2Vs
Zi5wcmludF9wYXRjaCA9IG1vY2sucGF0Y2goJ2J1aWx0aW5zLnByaW50JykKKwkJc2VsZi5wcmlu
dF9tb2NrID0gc2VsZi5wcmludF9wYXRjaC5zdGFydCgpCisJCXNlbGYubGludXhfc291cmNlX21v
Y2sgPSBtb2NrLk1vY2soKQorCQlzZWxmLmxpbnV4X3NvdXJjZV9tb2NrLmJ1aWxkX3JlY29uZmln
ID0gbW9jay5Nb2NrKHJldHVybl92YWx1ZT1UcnVlKQorCQlzZWxmLmxpbnV4X3NvdXJjZV9tb2Nr
LmJ1aWxkX3VtX2tlcm5lbCA9IG1vY2suTW9jayhyZXR1cm5fdmFsdWU9VHJ1ZSkKKwkJc2VsZi5s
aW51eF9zb3VyY2VfbW9jay5ydW5fa2VybmVsID0gbW9jay5Nb2NrKHJldHVybl92YWx1ZT1hbGxf
cGFzc2VkX2xvZykKKworCWRlZiB0ZWFyRG93bihzZWxmKToKKwkJc2VsZi5wcmludF9wYXRjaC5z
dG9wKCkKKwkJcGFzcworCisJZGVmIHRlc3RfcnVuX3Bhc3Nlc19hcmdzX3Bhc3Moc2VsZik6CisJ
CWt1bml0Lm1haW4oWydydW4nXSwgc2VsZi5saW51eF9zb3VyY2VfbW9jaykKKwkJYXNzZXJ0IHNl
bGYubGludXhfc291cmNlX21vY2suYnVpbGRfcmVjb25maWcuY2FsbF9jb3VudCA9PSAxCisJCWFz
c2VydCBzZWxmLmxpbnV4X3NvdXJjZV9tb2NrLnJ1bl9rZXJuZWwuY2FsbF9jb3VudCA9PSAxCisJ
CXNlbGYucHJpbnRfbW9jay5hc3NlcnRfYW55X2NhbGwoU3RyQ29udGFpbnMoJ1Rlc3RpbmcgY29t
cGxldGUuJykpCisKKwlkZWYgdGVzdF9ydW5fcGFzc2VzX2FyZ3NfZmFpbChzZWxmKToKKwkJc2Vs
Zi5saW51eF9zb3VyY2VfbW9jay5ydW5fa2VybmVsID0gbW9jay5Nb2NrKHJldHVybl92YWx1ZT1b
XSkKKwkJd2l0aCBzZWxmLmFzc2VydFJhaXNlcyhTeXN0ZW1FeGl0KSBhcyBlOgorCQkJa3VuaXQu
bWFpbihbJ3J1biddLCBzZWxmLmxpbnV4X3NvdXJjZV9tb2NrKQorCQlhc3NlcnQgdHlwZShlLmV4
Y2VwdGlvbikgPT0gU3lzdGVtRXhpdAorCQlhc3NlcnQgZS5leGNlcHRpb24uY29kZSA9PSAxCisJ
CWFzc2VydCBzZWxmLmxpbnV4X3NvdXJjZV9tb2NrLmJ1aWxkX3JlY29uZmlnLmNhbGxfY291bnQg
PT0gMQorCQlhc3NlcnQgc2VsZi5saW51eF9zb3VyY2VfbW9jay5ydW5fa2VybmVsLmNhbGxfY291
bnQgPT0gMQorCQlzZWxmLnByaW50X21vY2suYXNzZXJ0X2FueV9jYWxsKFN0ckNvbnRhaW5zKCcg
MCB0ZXN0cyBydW4nKSkKKworCWRlZiB0ZXN0X3J1bl9yYXdfb3V0cHV0KHNlbGYpOgorCQlzZWxm
LmxpbnV4X3NvdXJjZV9tb2NrLnJ1bl9rZXJuZWwgPSBtb2NrLk1vY2socmV0dXJuX3ZhbHVlPVtd
KQorCQlrdW5pdC5tYWluKFsncnVuJywgJy0tcmF3X291dHB1dCddLCBzZWxmLmxpbnV4X3NvdXJj
ZV9tb2NrKQorCQlhc3NlcnQgc2VsZi5saW51eF9zb3VyY2VfbW9jay5idWlsZF9yZWNvbmZpZy5j
YWxsX2NvdW50ID09IDEKKwkJYXNzZXJ0IHNlbGYubGludXhfc291cmNlX21vY2sucnVuX2tlcm5l
bC5jYWxsX2NvdW50ID09IDEKKwkJZm9yIGthbGwgaW4gc2VsZi5wcmludF9tb2NrLmNhbGxfYXJn
c19saXN0OgorCQkJYXNzZXJ0IGthbGwgIT0gbW9jay5jYWxsKFN0ckNvbnRhaW5zKCdUZXN0aW5n
IGNvbXBsZXRlLicpKQorCQkJYXNzZXJ0IGthbGwgIT0gbW9jay5jYWxsKFN0ckNvbnRhaW5zKCcg
MCB0ZXN0cyBydW4nKSkKKworCWRlZiB0ZXN0X3J1bl90aW1lb3V0KHNlbGYpOgorCQl0aW1lb3V0
ID0gMzQ1MworCQlrdW5pdC5tYWluKFsncnVuJywgJy0tdGltZW91dCcsIHN0cih0aW1lb3V0KV0s
IHNlbGYubGludXhfc291cmNlX21vY2spCisJCWFzc2VydCBzZWxmLmxpbnV4X3NvdXJjZV9tb2Nr
LmJ1aWxkX3JlY29uZmlnLmNhbGxfY291bnQgPT0gMQorCQlzZWxmLmxpbnV4X3NvdXJjZV9tb2Nr
LnJ1bl9rZXJuZWwuYXNzZXJ0X2NhbGxlZF9vbmNlX3dpdGgodGltZW91dD10aW1lb3V0KQorCQlz
ZWxmLnByaW50X21vY2suYXNzZXJ0X2FueV9jYWxsKFN0ckNvbnRhaW5zKCdUZXN0aW5nIGNvbXBs
ZXRlLicpKQorCitpZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgorCXVuaXR0ZXN0Lm1haW4oKQpk
aWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9pc190ZXN0X3Bh
c3NlZC1hbGxfcGFzc2VkLmxvZyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3Rf
aXNfdGVzdF9wYXNzZWQtYWxsX3Bhc3NlZC5sb2cKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMDAwMDAwLi42MmViYzAyODgzNTUKLS0tIC9kZXYvbnVsbAorKysgYi90b29scy90ZXN0
aW5nL2t1bml0L3Rlc3RfZGF0YS90ZXN0X2lzX3Rlc3RfcGFzc2VkLWFsbF9wYXNzZWQubG9nCkBA
IC0wLDAgKzEsMzIgQEAKK1RBUCB2ZXJzaW9uIDE0CisJIyBTdWJ0ZXN0OiBzeXNjdGxfdGVzdAor
CTEuLjgKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX251bGxfdGJsX2RhdGE6IHN5c2N0bF90ZXN0
X2RvaW50dmVjX251bGxfdGJsX2RhdGEgcGFzc2VkCisJb2sgMSAtIHN5c2N0bF90ZXN0X2RvaW50
dmVjX251bGxfdGJsX2RhdGEKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX21heGxlbl91
bnNldDogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVfbWF4bGVuX3Vuc2V0IHBhc3NlZAorCW9r
IDIgLSBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9tYXhsZW5fdW5zZXQKKwkjIHN5c2N0bF90
ZXN0X2RvaW50dmVjX3RhYmxlX2xlbl9pc196ZXJvOiBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJs
ZV9sZW5faXNfemVybyBwYXNzZWQKKwlvayAzIC0gc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVf
bGVuX2lzX3plcm8KKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX3JlYWRfYnV0X3Bvc2l0
aW9uX3NldDogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVfcmVhZF9idXRfcG9zaXRpb25fc2V0
IHBhc3NlZAorCW9rIDQgLSBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9yZWFkX2J1dF9wb3Np
dGlvbl9zZXQKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9wb3NpdGl2ZTog
c3lzY3RsX3Rlc3RfZG9pbnR2ZWNfaGFwcHlfc2luZ2xlX3Bvc2l0aXZlIHBhc3NlZAorCW9rIDUg
LSBzeXNjdGxfdGVzdF9kb2ludHZlY19oYXBweV9zaW5nbGVfcG9zaXRpdmUKKwkjIHN5c2N0bF90
ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZTogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNf
aGFwcHlfc2luZ2xlX25lZ2F0aXZlIHBhc3NlZAorCW9rIDYgLSBzeXNjdGxfdGVzdF9kb2ludHZl
Y19oYXBweV9zaW5nbGVfbmVnYXRpdmUKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9s
ZXNzX2ludF9taW46IHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9sZXNzX2ludF9taW4gcGFz
c2VkCisJb2sgNyAtIHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9sZXNzX2ludF9taW4KKwkj
IHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXg6IHN5c2N0bF90ZXN0
X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXggcGFzc2VkCisJb2sgOCAtIHN5c2N0bF90
ZXN0X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXgKK2t1bml0IHN5c2N0bF90ZXN0OiBh
bGwgdGVzdHMgcGFzc2VkCitvayAxIC0gc3lzY3RsX3Rlc3QKKwkjIFN1YnRlc3Q6IGV4YW1wbGUK
KwkxLi4yCitpbml0X3N1aXRlCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBpbml0aWFsaXppbmcK
KwkjIGV4YW1wbGVfc2ltcGxlX3Rlc3Q6IGV4YW1wbGVfc2ltcGxlX3Rlc3QgcGFzc2VkCisJb2sg
MSAtIGV4YW1wbGVfc2ltcGxlX3Rlc3QKKwkjIGV4YW1wbGVfbW9ja190ZXN0OiBpbml0aWFsaXpp
bmcKKwkjIGV4YW1wbGVfbW9ja190ZXN0OiBleGFtcGxlX21vY2tfdGVzdCBwYXNzZWQKKwlvayAy
IC0gZXhhbXBsZV9tb2NrX3Rlc3QKK2t1bml0IGV4YW1wbGU6IGFsbCB0ZXN0cyBwYXNzZWQKK29r
IDIgLSBleGFtcGxlCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL2t1bml0L3Rlc3RfZGF0YS90
ZXN0X2lzX3Rlc3RfcGFzc2VkLWNyYXNoLmxvZyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9k
YXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtY3Jhc2gubG9nCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAwMC4uMGIyNDk4NzBjOGJlCi0tLSAvZGV2L251bGwKKysrIGIvdG9vbHMv
dGVzdGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1jcmFzaC5sb2cKQEAg
LTAsMCArMSw2OSBAQAorcHJpbnRrOiBjb25zb2xlIFt0dHkwXSBlbmFibGVkCitwcmludGs6IGNv
bnNvbGUgW21jLTFdIGVuYWJsZWQKK1RBUCB2ZXJzaW9uIDE0CisJIyBTdWJ0ZXN0OiBzeXNjdGxf
dGVzdAorCTEuLjgKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX251bGxfdGJsX2RhdGE6IHN5c2N0
bF90ZXN0X2RvaW50dmVjX251bGxfdGJsX2RhdGEgcGFzc2VkCisJb2sgMSAtIHN5c2N0bF90ZXN0
X2RvaW50dmVjX251bGxfdGJsX2RhdGEKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX21h
eGxlbl91bnNldDogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVfbWF4bGVuX3Vuc2V0IHBhc3Nl
ZAorCW9rIDIgLSBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9tYXhsZW5fdW5zZXQKKwkjIHN5
c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX2xlbl9pc196ZXJvOiBzeXNjdGxfdGVzdF9kb2ludHZl
Y190YWJsZV9sZW5faXNfemVybyBwYXNzZWQKKwlvayAzIC0gc3lzY3RsX3Rlc3RfZG9pbnR2ZWNf
dGFibGVfbGVuX2lzX3plcm8KKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX3JlYWRfYnV0
X3Bvc2l0aW9uX3NldDogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVfcmVhZF9idXRfcG9zaXRp
b25fc2V0IHBhc3NlZAorCW9rIDQgLSBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9yZWFkX2J1
dF9wb3NpdGlvbl9zZXQKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9wb3Np
dGl2ZTogc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfaGFwcHlfc2luZ2xlX3Bvc2l0aXZlIHBhc3NlZAor
CW9rIDUgLSBzeXNjdGxfdGVzdF9kb2ludHZlY19oYXBweV9zaW5nbGVfcG9zaXRpdmUKKwkjIHN5
c2N0bF90ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZTogc3lzY3RsX3Rlc3RfZG9p
bnR2ZWNfaGFwcHlfc2luZ2xlX25lZ2F0aXZlIHBhc3NlZAorCW9rIDYgLSBzeXNjdGxfdGVzdF9k
b2ludHZlY19oYXBweV9zaW5nbGVfbmVnYXRpdmUKKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3Np
bmdsZV9sZXNzX2ludF9taW46IHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9sZXNzX2ludF9t
aW4gcGFzc2VkCisJb2sgNyAtIHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9sZXNzX2ludF9t
aW4KKwkjIHN5c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXg6IHN5c2N0
bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXggcGFzc2VkCisJb2sgOCAtIHN5
c2N0bF90ZXN0X2RvaW50dmVjX3NpbmdsZV9ncmVhdGVyX2ludF9tYXgKK2t1bml0IHN5c2N0bF90
ZXN0OiBhbGwgdGVzdHMgcGFzc2VkCitvayAxIC0gc3lzY3RsX3Rlc3QKKwkjIFN1YnRlc3Q6IGV4
YW1wbGUKKwkxLi4yCitpbml0X3N1aXRlCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBpbml0aWFs
aXppbmcKK1N0YWNrOgorIDYwMTZmN2RiIDZmODFiZDMwIDZmODFiZGQwIDYwMDIxNDUwCisgNjAy
NGIwZTggNjAwMjE0NDAgNjAwMThiYmUgMTZmODFiZGMwCisgMDAwMDAwMDEgNmY4MWJkMzAgNmY4
MWJkMjAgNmY4MWJkZDAKK0NhbGwgVHJhY2U6CisgWzw2MDE2ZjdkYj5dID8ga3VuaXRfdHJ5X3J1
bl9jYXNlKzB4YWIvMHhmMAorIFs8NjAwMjE0NTA+XSA/IHNldF9zaWduYWxzKzB4MC8weDYwCisg
Wzw2MDAyMTQ0MD5dID8gZ2V0X3NpZ25hbHMrMHgwLzB4MTAKKyBbPDYwMDE4YmJlPl0gPyBrdW5p
dF91bV9ydW5fdHJ5X2NhdGNoKzB4NWUvMHhjMAorIFs8NjAwMjE0NTA+XSA/IHNldF9zaWduYWxz
KzB4MC8weDYwCisgWzw2MDAyMTQ0MD5dID8gZ2V0X3NpZ25hbHMrMHgwLzB4MTAKKyBbPDYwMDE4
YmIzPl0gPyBrdW5pdF91bV9ydW5fdHJ5X2NhdGNoKzB4NTMvMHhjMAorIFs8NjAxNmYzMjE+XSA/
IGt1bml0X3J1bl9jYXNlX2NhdGNoX2Vycm9ycysweDEyMS8weDFhMAorIFs8NjAwMThiNjA+XSA/
IGt1bml0X3VtX3J1bl90cnlfY2F0Y2grMHgwLzB4YzAKKyBbPDYwMDE4OWUwPl0gPyBrdW5pdF91
bV90aHJvdysweDAvMHgxODAKKyBbPDYwMTZmNzMwPl0gPyBrdW5pdF90cnlfcnVuX2Nhc2UrMHgw
LzB4ZjAKKyBbPDYwMTZmNjAwPl0gPyBrdW5pdF9jYXRjaF9ydW5fY2FzZSsweDAvMHgxMzAKKyBb
PDYwMTZlZGQwPl0gPyBrdW5pdF92cHJpbnRrKzB4MC8weDMwCisgWzw2MDE2ZWNlMD5dID8ga3Vu
aXRfZmFpbCsweDAvMHg0MAorIFs8NjAxNmVjYTA+XSA/IGt1bml0X2Fib3J0KzB4MC8weDQwCisg
Wzw2MDE2ZWQyMD5dID8ga3VuaXRfcHJpbnRrX2VtaXQrMHgwLzB4YjAKKyBbPDYwMTZmMjAwPl0g
PyBrdW5pdF9ydW5fY2FzZV9jYXRjaF9lcnJvcnMrMHgwLzB4MWEwCisgWzw2MDE2ZjQ2ZT5dID8g
a3VuaXRfcnVuX3Rlc3RzKzB4Y2UvMHgyNjAKKyBbPDYwMDViMzkwPl0gPyB1bnJlZ2lzdGVyX2Nv
bnNvbGUrMHgwLzB4MTkwCisgWzw2MDE3NWI3MD5dID8gc3VpdGVfa3VuaXRfaW5pdGV4YW1wbGVf
dGVzdF9zdWl0ZSsweDAvMHgyMAorIFs8NjAwMDFjYmI+XSA/IGRvX29uZV9pbml0Y2FsbCsweDAv
MHgxOTcKKyBbPDYwMDAxZDQ3Pl0gPyBkb19vbmVfaW5pdGNhbGwrMHg4Yy8weDE5NworIFs8NjAw
NWNkMjA+XSA/IGlycV90b19kZXNjKzB4MC8weDMwCisgWzw2MDAwMjAwNT5dID8ga2VybmVsX2lu
aXRfZnJlZWFibGUrMHgxYjMvMHgyNzIKKyBbPDYwMDVjNWVjPl0gPyBwcmludGsrMHgwLzB4OWIK
KyBbPDYwMWMwMDg2Pl0gPyBrZXJuZWxfaW5pdCsweDI2LzB4MTYwCisgWzw2MDAxNDQ0Mj5dID8g
bmV3X3RocmVhZF9oYW5kbGVyKzB4ODIvMHhjMAorCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBr
dW5pdCB0ZXN0IGNhc2UgY3Jhc2hlZCEKKwkjIGV4YW1wbGVfc2ltcGxlX3Rlc3Q6IGV4YW1wbGVf
c2ltcGxlX3Rlc3QgZmFpbGVkCisJbm90IG9rIDEgLSBleGFtcGxlX3NpbXBsZV90ZXN0CisJIyBl
eGFtcGxlX21vY2tfdGVzdDogaW5pdGlhbGl6aW5nCisJIyBleGFtcGxlX21vY2tfdGVzdDogZXhh
bXBsZV9tb2NrX3Rlc3QgcGFzc2VkCisJb2sgMiAtIGV4YW1wbGVfbW9ja190ZXN0CitrdW5pdCBl
eGFtcGxlOiBvbmUgb3IgbW9yZSB0ZXN0cyBmYWlsZWQKK25vdCBvayAyIC0gZXhhbXBsZQorTGlz
dCBvZiBhbGwgcGFydGl0aW9uczoKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVz
dF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtZmFpbHVyZS5sb2cgYi90b29scy90ZXN0aW5nL2t1
bml0L3Rlc3RfZGF0YS90ZXN0X2lzX3Rlc3RfcGFzc2VkLWZhaWx1cmUubG9nCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uOWU4OWQzMmQ1NjY3Ci0tLSAvZGV2L251bGwK
KysrIGIvdG9vbHMvdGVzdGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9pc190ZXN0X3Bhc3NlZC1m
YWlsdXJlLmxvZwpAQCAtMCwwICsxLDM2IEBACitUQVAgdmVyc2lvbiAxNAorCSMgU3VidGVzdDog
c3lzY3RsX3Rlc3QKKwkxLi44CisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY19udWxsX3RibF9kYXRh
OiBzeXNjdGxfdGVzdF9kb2ludHZlY19udWxsX3RibF9kYXRhIHBhc3NlZAorCW9rIDEgLSBzeXNj
dGxfdGVzdF9kb2ludHZlY19udWxsX3RibF9kYXRhCisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY190
YWJsZV9tYXhsZW5fdW5zZXQ6IHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX21heGxlbl91bnNl
dCBwYXNzZWQKKwlvayAyIC0gc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVfbWF4bGVuX3Vuc2V0
CisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9sZW5faXNfemVybzogc3lzY3RsX3Rlc3Rf
ZG9pbnR2ZWNfdGFibGVfbGVuX2lzX3plcm8gcGFzc2VkCisJb2sgMyAtIHN5c2N0bF90ZXN0X2Rv
aW50dmVjX3RhYmxlX2xlbl9pc196ZXJvCisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY190YWJsZV9y
ZWFkX2J1dF9wb3NpdGlvbl9zZXQ6IHN5c2N0bF90ZXN0X2RvaW50dmVjX3RhYmxlX3JlYWRfYnV0
X3Bvc2l0aW9uX3NldCBwYXNzZWQKKwlvayA0IC0gc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfdGFibGVf
cmVhZF9idXRfcG9zaXRpb25fc2V0CisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY19oYXBweV9zaW5n
bGVfcG9zaXRpdmU6IHN5c2N0bF90ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9wb3NpdGl2ZSBw
YXNzZWQKKwlvayA1IC0gc3lzY3RsX3Rlc3RfZG9pbnR2ZWNfaGFwcHlfc2luZ2xlX3Bvc2l0aXZl
CisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY19oYXBweV9zaW5nbGVfbmVnYXRpdmU6IHN5c2N0bF90
ZXN0X2RvaW50dmVjX2hhcHB5X3NpbmdsZV9uZWdhdGl2ZSBwYXNzZWQKKwlvayA2IC0gc3lzY3Rs
X3Rlc3RfZG9pbnR2ZWNfaGFwcHlfc2luZ2xlX25lZ2F0aXZlCisJIyBzeXNjdGxfdGVzdF9kb2lu
dHZlY19zaW5nbGVfbGVzc19pbnRfbWluOiBzeXNjdGxfdGVzdF9kb2ludHZlY19zaW5nbGVfbGVz
c19pbnRfbWluIHBhc3NlZAorCW9rIDcgLSBzeXNjdGxfdGVzdF9kb2ludHZlY19zaW5nbGVfbGVz
c19pbnRfbWluCisJIyBzeXNjdGxfdGVzdF9kb2ludHZlY19zaW5nbGVfZ3JlYXRlcl9pbnRfbWF4
OiBzeXNjdGxfdGVzdF9kb2ludHZlY19zaW5nbGVfZ3JlYXRlcl9pbnRfbWF4IHBhc3NlZAorCW9r
IDggLSBzeXNjdGxfdGVzdF9kb2ludHZlY19zaW5nbGVfZ3JlYXRlcl9pbnRfbWF4CitrdW5pdCBz
eXNjdGxfdGVzdDogYWxsIHRlc3RzIHBhc3NlZAorb2sgMSAtIHN5c2N0bF90ZXN0CisJIyBTdWJ0
ZXN0OiBleGFtcGxlCisJMS4uMgoraW5pdF9zdWl0ZQorCSMgZXhhbXBsZV9zaW1wbGVfdGVzdDog
aW5pdGlhbGl6aW5nCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBFWFBFQ1RBVElPTiBGQUlMRUQg
YXQgbGliL2t1bml0L2V4YW1wbGUtdGVzdC5jOjMwCisJRXhwZWN0ZWQgMSArIDEgPT0gMywgYnV0
CisJCTEgKyAxID09IDIKKwkJMyA9PSAzCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBleGFtcGxl
X3NpbXBsZV90ZXN0IGZhaWxlZAorCW5vdCBvayAxIC0gZXhhbXBsZV9zaW1wbGVfdGVzdAorCSMg
ZXhhbXBsZV9tb2NrX3Rlc3Q6IGluaXRpYWxpemluZworCSMgZXhhbXBsZV9tb2NrX3Rlc3Q6IGV4
YW1wbGVfbW9ja190ZXN0IHBhc3NlZAorCW9rIDIgLSBleGFtcGxlX21vY2tfdGVzdAora3VuaXQg
ZXhhbXBsZTogb25lIG9yIG1vcmUgdGVzdHMgZmFpbGVkCitub3Qgb2sgMiAtIGV4YW1wbGUKZGlm
ZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNz
ZWQtbm9fdGVzdHNfcnVuLmxvZyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3Rf
aXNfdGVzdF9wYXNzZWQtbm9fdGVzdHNfcnVuLmxvZwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLmJhNjlmNWM5NGI3NQotLS0gL2Rldi9udWxsCisrKyBiL3Rvb2xzL3Rl
c3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3RfaXNfdGVzdF9wYXNzZWQtbm9fdGVzdHNfcnVuLmxv
ZwpAQCAtMCwwICsxLDc1IEBACitDb3JlIGR1bXAgbGltaXRzIDoKKwlzb2Z0IC0gMAorCWhhcmQg
LSBOT05FCitDaGVja2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZm9yIGEgdGVtcGRpci4uLm5v
bmUgZm91bmQKK0NoZWNraW5nIGlmIC9kZXYvc2htIGlzIG9uIHRtcGZzLi4uT0sKK0NoZWNraW5n
IFBST1RfRVhFQyBtbWFwIGluIC9kZXYvc2htLi4uT0sKK0FkZGluZyAyNDc0MzkzNiBieXRlcyB0
byBwaHlzaWNhbCBtZW1vcnkgdG8gYWNjb3VudCBmb3IgZXhlYy1zaGllbGQgZ2FwCitMaW51eCB2
ZXJzaW9uIDQuMTIuMC1yYzMtMDAwMTAtZzczMTllYjM1ZjQ5My1kaXJ0eSAoYnJlbmRhbmhpZ2dp
bnNAbWFjdHJ1Y2suc3ZsLmNvcnAuZ29vZ2xlLmNvbSkgKGdjYyB2ZXJzaW9uIDcuMy4wIChEZWJp
YW4gNy4zLjAtNSkgKSAjMjkgVGh1IE1hciAxNSAxNDo1NzoxOSBQRFQgMjAxOAorQnVpbHQgMSB6
b25lbGlzdHMgaW4gWm9uZSBvcmRlciwgbW9iaWxpdHkgZ3JvdXBpbmcgb24uICBUb3RhbCBwYWdl
czogMTQwMzgKK0tlcm5lbCBjb21tYW5kIGxpbmU6IHJvb3Q9OTg6MAorUElEIGhhc2ggdGFibGUg
ZW50cmllczogMjU2IChvcmRlcjogLTEsIDIwNDggYnl0ZXMpCitEZW50cnkgY2FjaGUgaGFzaCB0
YWJsZSBlbnRyaWVzOiA4MTkyIChvcmRlcjogNCwgNjU1MzYgYnl0ZXMpCitJbm9kZS1jYWNoZSBo
YXNoIHRhYmxlIGVudHJpZXM6IDQwOTYgKG9yZGVyOiAzLCAzMjc2OCBieXRlcykKK01lbW9yeTog
Mjc4NjhLLzU2OTMySyBhdmFpbGFibGUgKDE2ODFLIGtlcm5lbCBjb2RlLCA0ODBLIHJ3ZGF0YSwg
NDAwSyByb2RhdGEsIDg5SyBpbml0LCAyMDVLIGJzcywgMjkwNjRLIHJlc2VydmVkLCAwSyBjbWEt
cmVzZXJ2ZWQpCitTTFVCOiBIV2FsaWduPTY0LCBPcmRlcj0wLTMsIE1pbk9iamVjdHM9MCwgQ1BV
cz0xLCBOb2Rlcz0xCitOUl9JUlFTOjE1CitjbG9ja3NvdXJjZTogdGltZXI6IG1hc2s6IDB4ZmZm
ZmZmZmZmZmZmZmZmZiBtYXhfY3ljbGVzOiAweDFjZDQyZTIwNSwgbWF4X2lkbGVfbnM6IDg4MTU5
MDQwNDQyNiBucworQ2FsaWJyYXRpbmcgZGVsYXkgbG9vcC4uLiA3Mzg0LjI2IEJvZ29NSVBTIChs
cGo9MzY5MjEzNDQpCitwaWRfbWF4OiBkZWZhdWx0OiAzMjc2OCBtaW5pbXVtOiAzMDEKK01vdW50
LWNhY2hlIGhhc2ggdGFibGUgZW50cmllczogNTEyIChvcmRlcjogMCwgNDA5NiBieXRlcykKK01v
dW50cG9pbnQtY2FjaGUgaGFzaCB0YWJsZSBlbnRyaWVzOiA1MTIgKG9yZGVyOiAwLCA0MDk2IGJ5
dGVzKQorQ2hlY2tpbmcgdGhhdCBob3N0IHB0eXMgc3VwcG9ydCBvdXRwdXQgU0lHSU8uLi5ZZXMK
K0NoZWNraW5nIHRoYXQgaG9zdCBwdHlzIHN1cHBvcnQgU0lHSU8gb24gY2xvc2UuLi5ObywgZW5h
Ymxpbmcgd29ya2Fyb3VuZAorVXNpbmcgMi42IGhvc3QgQUlPCitjbG9ja3NvdXJjZTogamlmZmll
czogbWFzazogMHhmZmZmZmZmZiBtYXhfY3ljbGVzOiAweGZmZmZmZmZmLCBtYXhfaWRsZV9uczog
MTkxMTI2MDQ0NjI3NTAwMDAgbnMKK2Z1dGV4IGhhc2ggdGFibGUgZW50cmllczogMjU2IChvcmRl
cjogMCwgNjE0NCBieXRlcykKK2Nsb2Nrc291cmNlOiBTd2l0Y2hlZCB0byBjbG9ja3NvdXJjZSB0
aW1lcgorY29uc29sZSBbc3RkZXJyMF0gZGlzYWJsZWQKK21jb25zb2xlICh2ZXJzaW9uIDIpIGlu
aXRpYWxpemVkIG9uIC91c3IvbG9jYWwvZ29vZ2xlL2hvbWUvYnJlbmRhbmhpZ2dpbnMvLnVtbC82
SWplY2wvbWNvbnNvbGUKK0NoZWNraW5nIGhvc3QgTUFEVl9SRU1PVkUgc3VwcG9ydC4uLk9LCit3
b3JraW5nc2V0OiB0aW1lc3RhbXBfYml0cz02MiBtYXhfb3JkZXI9MTMgYnVja2V0X29yZGVyPTAK
K0Jsb2NrIGxheWVyIFNDU0kgZ2VuZXJpYyAoYnNnKSBkcml2ZXIgdmVyc2lvbiAwLjQgbG9hZGVk
IChtYWpvciAyNTQpCitpbyBzY2hlZHVsZXIgbm9vcCByZWdpc3RlcmVkCitpbyBzY2hlZHVsZXIg
ZGVhZGxpbmUgcmVnaXN0ZXJlZAoraW8gc2NoZWR1bGVyIGNmcSByZWdpc3RlcmVkIChkZWZhdWx0
KQoraW8gc2NoZWR1bGVyIG1xLWRlYWRsaW5lIHJlZ2lzdGVyZWQKK2lvIHNjaGVkdWxlciBreWJl
ciByZWdpc3RlcmVkCitJbml0aWFsaXplZCBzdGRpbyBjb25zb2xlIGRyaXZlcgorVXNpbmcgYSBj
aGFubmVsIHR5cGUgd2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGlu
ZSBmYWlsZWQgZm9yIGRldmljZSAxIDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hh
bm5lbCB0eXBlIHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUg
ZmFpbGVkIGZvciBkZXZpY2UgMiA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5u
ZWwgdHlwZSB3aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZh
aWxlZCBmb3IgZGV2aWNlIDMgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVs
IHR5cGUgd2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWls
ZWQgZm9yIGRldmljZSA0IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0
eXBlIHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVk
IGZvciBkZXZpY2UgNSA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlw
ZSB3aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBm
b3IgZGV2aWNlIDYgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5cGUg
d2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQgZm9y
IGRldmljZSA3IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0eXBlIHdo
aWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVkIGZvciBk
ZXZpY2UgOCA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlwZSB3aGlj
aCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBmb3IgZGV2
aWNlIDkgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5cGUgd2hpY2gg
aXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQgZm9yIGRldmlj
ZSAxMCA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlwZSB3aGljaCBp
cyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBmb3IgZGV2aWNl
IDExIDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0eXBlIHdoaWNoIGlz
IGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVkIGZvciBkZXZpY2Ug
MTIgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5cGUgd2hpY2ggaXMg
Y29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQgZm9yIGRldmljZSAx
MyA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlwZSB3aGljaCBpcyBj
b25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBmb3IgZGV2aWNlIDE0
IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0eXBlIHdoaWNoIGlzIGNv
bmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVkIGZvciBkZXZpY2UgMTUg
OiBDb25maWd1cmF0aW9uIGZhaWxlZAorQ29uc29sZSBpbml0aWFsaXplZCBvbiAvZGV2L3R0eTAK
K2NvbnNvbGUgW3R0eTBdIGVuYWJsZWQKK2NvbnNvbGUgW21jLTFdIGVuYWJsZWQKK0xpc3Qgb2Yg
YWxsIHBhcnRpdGlvbnM6CitObyBmaWxlc3lzdGVtIGNvdWxkIG1vdW50IHJvb3QsIHRyaWVkOgor
CitLZXJuZWwgcGFuaWMgLSBub3Qgc3luY2luZzogVkZTOiBVbmFibGUgdG8gbW91bnQgcm9vdCBm
cyBvbiB1bmtub3duLWJsb2NrKDk4LDApCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL2t1bml0
L3Rlc3RfZGF0YS90ZXN0X291dHB1dF9pc29sYXRlZF9jb3JyZWN0bHkubG9nIGIvdG9vbHMvdGVz
dGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9vdXRwdXRfaXNvbGF0ZWRfY29ycmVjdGx5LmxvZwpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjk0YTZiM2FlYWE5MgotLS0g
L2Rldi9udWxsCisrKyBiL3Rvb2xzL3Rlc3Rpbmcva3VuaXQvdGVzdF9kYXRhL3Rlc3Rfb3V0cHV0
X2lzb2xhdGVkX2NvcnJlY3RseS5sb2cKQEAgLTAsMCArMSwxMDYgQEAKK0xpbnV4IHZlcnNpb24g
NS4xLjAtcmM3LTAwMDYxLWcwNDY1MmYxY2I0YWEwIChicmVuZGFuaGlnZ2luc0BtYWN0cnVjay5z
dmwuY29ycC5nb29nbGUuY29tKSAoZ2NjIHZlcnNpb24gNy4zLjAgKERlYmlhbiA3LjMuMC0xOCkp
ICMxNjMgV2VkIE1heSA4IDE2OjE4OjIwIFBEVCAyMDE5CitCdWlsdCAxIHpvbmVsaXN0cywgbW9i
aWxpdHkgZ3JvdXBpbmcgb24uICBUb3RhbCBwYWdlczogNjk5MDYKK0tlcm5lbCBjb21tYW5kIGxp
bmU6IG1lbT0yNTZNIHJvb3Q9OTg6MAorRGVudHJ5IGNhY2hlIGhhc2ggdGFibGUgZW50cmllczog
NjU1MzYgKG9yZGVyOiA3LCA1MjQyODggYnl0ZXMpCitJbm9kZS1jYWNoZSBoYXNoIHRhYmxlIGVu
dHJpZXM6IDMyNzY4IChvcmRlcjogNiwgMjYyMTQ0IGJ5dGVzKQorTWVtb3J5OiAyNTQ0NjhLLzI4
MzUwMEsgYXZhaWxhYmxlICgxNzM0SyBrZXJuZWwgY29kZSwgNDg5SyByd2RhdGEsIDM5Nksgcm9k
YXRhLCA4NUsgaW5pdCwgMjE2SyBic3MsIDI5MDMySyByZXNlcnZlZCwgMEsgY21hLXJlc2VydmVk
KQorU0xVQjogSFdhbGlnbj02NCwgT3JkZXI9MC0zLCBNaW5PYmplY3RzPTAsIENQVXM9MSwgTm9k
ZXM9MQorTlJfSVJRUzogMTUKK2Nsb2Nrc291cmNlOiB0aW1lcjogbWFzazogMHhmZmZmZmZmZmZm
ZmZmZmZmIG1heF9jeWNsZXM6IDB4MWNkNDJlMjA1LCBtYXhfaWRsZV9uczogODgxNTkwNDA0NDI2
IG5zCistLS0tLS0tLS0tLS1bIGN1dCBoZXJlIF0tLS0tLS0tLS0tLS0KK1dBUk5JTkc6IENQVTog
MCBQSUQ6IDAgYXQga2VybmVsL3RpbWUvY2xvY2tldmVudHMuYzo0NTggY2xvY2tldmVudHNfcmVn
aXN0ZXJfZGV2aWNlKzB4MTQzLzB4MTYwCitwb3NpeC10aW1lciBjcHVtYXNrID09IGNwdV9hbGxf
bWFzaywgdXNpbmcgY3B1X3Bvc3NpYmxlX21hc2sgaW5zdGVhZAorQ1BVOiAwIFBJRDogMCBDb21t
OiBzd2FwcGVyIE5vdCB0YWludGVkIDUuMS4wLXJjNy0wMDA2MS1nMDQ2NTJmMWNiNGFhMCAjMTYz
CitTdGFjazoKKyA2MDA1Y2MwMCA2MDIzM2UxOCA2MDIzM2U2MCA2MDIzM2UxOAorIDYwMjMzZTYw
IDAwMDAwMDA5IDAwMDAwMDAwIDYwMDJhMWI0CisgMWNhMDAwMDAwMDAgNjAwNzFjMjMgNjAyMzNl
NzggMTAwMDAwMDAwMDAwMDYyCitDYWxsIFRyYWNlOgorIFs8NjAwMjE0YzU+XSA/IG9zX2lzX3Np
Z25hbF9zdGFjaysweDE1LzB4MzAKKyBbPDYwMDVjNWVjPl0gPyBwcmludGsrMHgwLzB4OWIKKyBb
PDYwMDE1OTdlPl0gPyBzaG93X3N0YWNrKzB4YmUvMHgxYzAKKyBbPDYwMDVjYzAwPl0gPyBfX3By
aW50a19zYWZlX2V4aXQrMHgwLzB4NDAKKyBbPDYwMDJhMWI0Pl0gPyBfX3dhcm4rMHgxNDQvMHgx
NzAKKyBbPDYwMDcxYzIzPl0gPyBjbG9ja2V2ZW50c19yZWdpc3Rlcl9kZXZpY2UrMHgxNDMvMHgx
NjAKKyBbPDYwMDIxNDQwPl0gPyBnZXRfc2lnbmFscysweDAvMHgxMAorIFs8NjAwNWM1ZWM+XSA/
IHByaW50aysweDAvMHg5YgorIFs8NjAwMmEyN2I+XSA/IHdhcm5fc2xvd3BhdGhfZm10KzB4OWIv
MHhiMAorIFs8NjAwNWM1ZWM+XSA/IHByaW50aysweDAvMHg5YgorIFs8NjAwMmExZTA+XSA/IHdh
cm5fc2xvd3BhdGhfZm10KzB4MC8weGIwCisgWzw2MDA1YzVlYz5dID8gcHJpbnRrKzB4MC8weDli
CisgWzw2MDAyMTQ0MD5dID8gZ2V0X3NpZ25hbHMrMHgwLzB4MTAKKyBbPDYwMDIxM2YwPl0gPyBi
bG9ja19zaWduYWxzKzB4MC8weDIwCisgWzw2MDA3MWMyMz5dID8gY2xvY2tldmVudHNfcmVnaXN0
ZXJfZGV2aWNlKzB4MTQzLzB4MTYwCisgWzw2MDAyMTQ0MD5dID8gZ2V0X3NpZ25hbHMrMHgwLzB4
MTAKKyBbPDYwMDIxM2YwPl0gPyBibG9ja19zaWduYWxzKzB4MC8weDIwCisgWzw2MDA1YzVlYz5d
ID8gcHJpbnRrKzB4MC8weDliCisgWzw2MDAwMWJjOD5dID8gc3RhcnRfa2VybmVsKzB4NDc3LzB4
NTZhCisgWzw2MDAwMzZmMT5dID8gc3RhcnRfa2VybmVsX3Byb2MrMHg0Ni8weDRkCisgWzw2MDAx
NDQ0Mj5dID8gbmV3X3RocmVhZF9oYW5kbGVyKzB4ODIvMHhjMAorCityYW5kb206IGdldF9yYW5k
b21fYnl0ZXMgY2FsbGVkIGZyb20gcHJpbnRfb29wc19lbmRfbWFya2VyKzB4NGMvMHg2MCB3aXRo
IGNybmdfaW5pdD0wCistLS1bIGVuZCB0cmFjZSBjODM0MzQ4NTJiMzcwMmQzIF0tLS0KK0NhbGli
cmF0aW5nIGRlbGF5IGxvb3AuLi4gNjk1OC4yOCBCb2dvTUlQUyAobHBqPTM0NzkxNDI0KQorcGlk
X21heDogZGVmYXVsdDogMzI3NjggbWluaW11bTogMzAxCitNb3VudC1jYWNoZSBoYXNoIHRhYmxl
IGVudHJpZXM6IDEwMjQgKG9yZGVyOiAxLCA4MTkyIGJ5dGVzKQorTW91bnRwb2ludC1jYWNoZSBo
YXNoIHRhYmxlIGVudHJpZXM6IDEwMjQgKG9yZGVyOiAxLCA4MTkyIGJ5dGVzKQorKioqIFZBTElE
QVRFIHByb2MgKioqCitDaGVja2luZyB0aGF0IGhvc3QgcHR5cyBzdXBwb3J0IG91dHB1dCBTSUdJ
Ty4uLlllcworQ2hlY2tpbmcgdGhhdCBob3N0IHB0eXMgc3VwcG9ydCBTSUdJTyBvbiBjbG9zZS4u
Lk5vLCBlbmFibGluZyB3b3JrYXJvdW5kCitjbG9ja3NvdXJjZTogamlmZmllczogbWFzazogMHhm
ZmZmZmZmZiBtYXhfY3ljbGVzOiAweGZmZmZmZmZmLCBtYXhfaWRsZV9uczogMTkxMTI2MDQ0NjI3
NTAwMDAgbnMKK2Z1dGV4IGhhc2ggdGFibGUgZW50cmllczogMjU2IChvcmRlcjogMCwgNjE0NCBi
eXRlcykKK2Nsb2Nrc291cmNlOiBTd2l0Y2hlZCB0byBjbG9ja3NvdXJjZSB0aW1lcgorcHJpbnRr
OiBjb25zb2xlIFtzdGRlcnIwXSBkaXNhYmxlZAorbWNvbnNvbGUgKHZlcnNpb24gMikgaW5pdGlh
bGl6ZWQgb24gL3Vzci9sb2NhbC9nb29nbGUvaG9tZS9icmVuZGFuaGlnZ2lucy8udW1sL1ZaMnFN
bS9tY29uc29sZQorQ2hlY2tpbmcgaG9zdCBNQURWX1JFTU9WRSBzdXBwb3J0Li4uT0sKK3dvcmtp
bmdzZXQ6IHRpbWVzdGFtcF9iaXRzPTYyIG1heF9vcmRlcj0xNiBidWNrZXRfb3JkZXI9MAorQmxv
Y2sgbGF5ZXIgU0NTSSBnZW5lcmljIChic2cpIGRyaXZlciB2ZXJzaW9uIDAuNCBsb2FkZWQgKG1h
am9yIDI1NCkKK2lvIHNjaGVkdWxlciBtcS1kZWFkbGluZSByZWdpc3RlcmVkCitpbyBzY2hlZHVs
ZXIga3liZXIgcmVnaXN0ZXJlZAorSW5pdGlhbGl6ZWQgc3RkaW8gY29uc29sZSBkcml2ZXIKK1Vz
aW5nIGEgY2hhbm5lbCB0eXBlIHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBf
b25lX2xpbmUgZmFpbGVkIGZvciBkZXZpY2UgMSA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2lu
ZyBhIGNoYW5uZWwgdHlwZSB3aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29u
ZV9saW5lIGZhaWxlZCBmb3IgZGV2aWNlIDIgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcg
YSBjaGFubmVsIHR5cGUgd2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVf
bGluZSBmYWlsZWQgZm9yIGRldmljZSAzIDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEg
Y2hhbm5lbCB0eXBlIHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xp
bmUgZmFpbGVkIGZvciBkZXZpY2UgNCA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNo
YW5uZWwgdHlwZSB3aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5l
IGZhaWxlZCBmb3IgZGV2aWNlIDUgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFu
bmVsIHR5cGUgd2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBm
YWlsZWQgZm9yIGRldmljZSA2IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5l
bCB0eXBlIHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFp
bGVkIGZvciBkZXZpY2UgNyA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwg
dHlwZSB3aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxl
ZCBmb3IgZGV2aWNlIDggOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5
cGUgd2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQg
Zm9yIGRldmljZSA5IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0eXBl
IHdoaWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVkIGZv
ciBkZXZpY2UgMTAgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5cGUg
d2hpY2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQgZm9y
IGRldmljZSAxMSA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlwZSB3
aGljaCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBmb3Ig
ZGV2aWNlIDEyIDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK1VzaW5nIGEgY2hhbm5lbCB0eXBlIHdo
aWNoIGlzIGNvbmZpZ3VyZWQgb3V0IG9mIFVNTAorc2V0dXBfb25lX2xpbmUgZmFpbGVkIGZvciBk
ZXZpY2UgMTMgOiBDb25maWd1cmF0aW9uIGZhaWxlZAorVXNpbmcgYSBjaGFubmVsIHR5cGUgd2hp
Y2ggaXMgY29uZmlndXJlZCBvdXQgb2YgVU1MCitzZXR1cF9vbmVfbGluZSBmYWlsZWQgZm9yIGRl
dmljZSAxNCA6IENvbmZpZ3VyYXRpb24gZmFpbGVkCitVc2luZyBhIGNoYW5uZWwgdHlwZSB3aGlj
aCBpcyBjb25maWd1cmVkIG91dCBvZiBVTUwKK3NldHVwX29uZV9saW5lIGZhaWxlZCBmb3IgZGV2
aWNlIDE1IDogQ29uZmlndXJhdGlvbiBmYWlsZWQKK0NvbnNvbGUgaW5pdGlhbGl6ZWQgb24gL2Rl
di90dHkwCitwcmludGs6IGNvbnNvbGUgW3R0eTBdIGVuYWJsZWQKK3ByaW50azogY29uc29sZSBb
bWMtMV0gZW5hYmxlZAorVEFQIHZlcnNpb24gMTQKKwkjIFN1YnRlc3Q6IGV4YW1wbGUKKwkxLi4y
Citpbml0X3N1aXRlCisJIyBleGFtcGxlX3NpbXBsZV90ZXN0OiBpbml0aWFsaXppbmcKKwkjIGV4
YW1wbGVfc2ltcGxlX3Rlc3Q6IGV4YW1wbGVfc2ltcGxlX3Rlc3QgcGFzc2VkCisJb2sgMSAtIGV4
YW1wbGVfc2ltcGxlX3Rlc3QKKwkjIGV4YW1wbGVfbW9ja190ZXN0OiBpbml0aWFsaXppbmcKKwkj
IGV4YW1wbGVfbW9ja190ZXN0OiBleGFtcGxlX21vY2tfdGVzdCBwYXNzZWQKKwlvayAyIC0gZXhh
bXBsZV9tb2NrX3Rlc3QKK2t1bml0IGV4YW1wbGU6IGFsbCB0ZXN0cyBwYXNzZWQKK29rIDEgLSBl
eGFtcGxlCitMaXN0IG9mIGFsbCBwYXJ0aXRpb25zOgpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGlu
Zy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9yZWFkX2Zyb21fZmlsZS5rY29uZmlnIGIvdG9vbHMvdGVz
dGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9yZWFkX2Zyb21fZmlsZS5rY29uZmlnCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZDJhNDkyOGFjNzczCi0tLSAvZGV2L251
bGwKKysrIGIvdG9vbHMvdGVzdGluZy9rdW5pdC90ZXN0X2RhdGEvdGVzdF9yZWFkX2Zyb21fZmls
ZS5rY29uZmlnCkBAIC0wLDAgKzEsMTcgQEAKKyMKKyMgQXV0b21hdGljYWxseSBnZW5lcmF0ZWQg
ZmlsZTsgRE8gTk9UIEVESVQuCisjIFVzZXIgTW9kZSBMaW51eC94ODYgNC4xMi4wLXJjMyBLZXJu
ZWwgQ29uZmlndXJhdGlvbgorIworQ09ORklHX1VNTD15CitDT05GSUdfTU1VPXkKKworIworIyBV
TUwtc3BlY2lmaWMgb3B0aW9ucworIworCisjCisjIEhvc3QgcHJvY2Vzc29yIHR5cGUgYW5kIGZl
YXR1cmVzCisjCisjIENPTkZJR19NSzggaXMgbm90IHNldAorQ09ORklHX1RFU1Q9eQorQ09ORklH
X0VYQU1QTEVfVEVTVD15Ci0tIAoyLjIzLjAuMzUxLmdjNDMxNzAzMmU2LWdvb2cKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5n
IGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
