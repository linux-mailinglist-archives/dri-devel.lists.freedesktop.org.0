Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E35701EF9C0
	for <lists+dri-devel@lfdr.de>; Fri,  5 Jun 2020 15:58:24 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 83EE36E8F2;
	Fri,  5 Jun 2020 13:58:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 353926E8EE
 for <dri-devel@lists.freedesktop.org>; Fri,  5 Jun 2020 13:58:08 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 0009CACA0;
 Fri,  5 Jun 2020 13:58:08 +0000 (UTC)
From: Thomas Zimmermann <tzimmermann@suse.de>
To: airlied@redhat.com, daniel@ffwll.ch, sam@ravnborg.org,
 emil.velikov@collabora.com, kraxel@redhat.com
Subject: [PATCH 02/14] drm/mgag200: Remove mgag200_cursor.c
Date: Fri,  5 Jun 2020 15:57:51 +0200
Message-Id: <20200605135803.19811-3-tzimmermann@suse.de>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200605135803.19811-1-tzimmermann@suse.de>
References: <20200605135803.19811-1-tzimmermann@suse.de>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Kate Stewart <kstewart@linuxfoundation.org>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, dri-devel@lists.freedesktop.org,
 Andrzej Pietrasiewicz <andrzej.p@collabora.com>,
 =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>,
 Thomas Zimmermann <tzimmermann@suse.de>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Thomas Gleixner <tglx@linutronix.de>, Allison Randal <allison@lohutok.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

U3VwcG9ydCBmb3IgSFcgY3Vyc29ycyBnb3QgcmVtb3ZlIGJ5IGNvbW1pdCA1YTc3ZTJiZmRkNGYg
KCJkcm0vbWdhZzIwMDoKUmVtb3ZlIEhXIGN1cnNvciIpIEFwcGFyZW50bHkgdGhlIHNvdXJjZSBm
aWxlIHdhcyBub3QgZGVsZXRlZC4gUmVtb3ZlZAppdCBub3cuCgpTaWduZWQtb2ZmLWJ5OiBUaG9t
YXMgWmltbWVybWFubiA8dHppbW1lcm1hbm5Ac3VzZS5kZT4KRml4ZXM6IDVhNzdlMmJmZGQ0ZiAo
ImRybS9tZ2FnMjAwOiBSZW1vdmUgSFcgY3Vyc29yIikKQ2M6IFNhbSBSYXZuYm9yZyA8c2FtQHJh
dm5ib3JnLm9yZz4KQ2M6IEVtaWwgVmVsaWtvdiA8ZW1pbC52ZWxpa292QGNvbGxhYm9yYS5jb20+
CkNjOiBEYXZlIEFpcmxpZSA8YWlybGllZEByZWRoYXQuY29tPgpDYzogIk5vcmFsZiBUcsO4bm5l
cyIgPG5vcmFsZkB0cm9ubmVzLm9yZz4KQ2M6IEdlcmQgSG9mZm1hbm4gPGtyYXhlbEByZWRoYXQu
Y29tPgpDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsLnZldHRlckBmZndsbC5jaD4KQ2M6IEdyZWcg
S3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+CkNjOiBUaG9tYXMgR2xl
aXhuZXIgPHRnbHhAbGludXRyb25peC5kZT4KQ2M6IEthdGUgU3Rld2FydCA8a3N0ZXdhcnRAbGlu
dXhmb3VuZGF0aW9uLm9yZz4KQ2M6IEFsbGlzb24gUmFuZGFsIDxhbGxpc29uQGxvaHV0b2submV0
PgpDYzogQW5kcnplaiBQaWV0cmFzaWV3aWN6IDxhbmRyemVqLnBAY29sbGFib3JhLmNvbT4KQ2M6
ICJKb3PDqSBSb2JlcnRvIGRlIFNvdXphIiA8am9zZS5zb3V6YUBpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL21nYWcyMDAvbWdhZzIwMF9jdXJzb3IuYyB8IDMxOSAtLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDMxOSBkZWxldGlvbnMoLSkKIGRlbGV0ZSBtb2Rl
IDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vbWdhZzIwMC9tZ2FnMjAwX2N1cnNvci5jCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL21nYWcyMDAvbWdhZzIwMF9jdXJzb3IuYyBiL2RyaXZlcnMv
Z3B1L2RybS9tZ2FnMjAwL21nYWcyMDBfY3Vyc29yLmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IGM2OTMyZGM4YWNmMmUuLjAwMDAwMDAwMDAwMDAKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L21nYWcyMDAvbWdhZzIwMF9jdXJzb3IuYworKysgL2Rldi9udWxsCkBAIC0xLDMxOSArMCwwIEBA
Ci0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5Ci0vKgotICogQ29weXJp
Z2h0IDIwMTMgTWF0cm94IEdyYXBoaWNzCi0gKgotICogQXV0aG9yOiBDaHJpc3RvcGhlciBIYXJ2
ZXkgPGNoYXJ2ZXlAbWF0cm94LmNvbT4KLSAqLwotCi0jaW5jbHVkZSA8bGludXgvcGNpLmg+Ci0K
LSNpbmNsdWRlICJtZ2FnMjAwX2Rydi5oIgotCi1zdGF0aWMgYm9vbCB3YXJuX3RyYW5zcGFyZW50
ID0gdHJ1ZTsKLXN0YXRpYyBib29sIHdhcm5fcGFsZXR0ZSA9IHRydWU7Ci0KLXN0YXRpYyBpbnQg
bWdhZzIwMF9jdXJzb3JfdXBkYXRlKHN0cnVjdCBtZ2FfZGV2aWNlICptZGV2LCB2b2lkICpkc3Qs
IHZvaWQgKnNyYywKLQkJCQkgdW5zaWduZWQgaW50IHdpZHRoLCB1bnNpZ25lZCBpbnQgaGVpZ2h0
KQotewotCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBtZGV2LT5kZXY7Ci0JdW5zaWduZWQgaW50
IGksIHJvdywgY29sOwotCXVpbnQzMl90IGNvbG91cl9zZXRbMTZdOwotCXVpbnQzMl90ICpuZXh0
X3NwYWNlID0gJmNvbG91cl9zZXRbMF07Ci0JdWludDMyX3QgKnBhbGV0dGVfaXRlcjsKLQl1aW50
MzJfdCB0aGlzX2NvbG91cjsKLQlib29sIGZvdW5kID0gZmFsc2U7Ci0JaW50IGNvbG91cl9jb3Vu
dCA9IDA7Ci0JdTggcmVnX2luZGV4OwotCXU4IHRoaXNfcm93WzQ4XTsKLQotCW1lbXNldCgmY29s
b3VyX3NldFswXSwgMCwgc2l6ZW9mKHVpbnQzMl90KSoxNik7Ci0JLyogd2lkdGgqaGVpZ2h0KjQg
PSAxNjM4NCAqLwotCWZvciAoaSA9IDA7IGkgPCAxNjM4NDsgaSArPSA0KSB7Ci0JCXRoaXNfY29s
b3VyID0gaW9yZWFkMzIoc3JjICsgaSk7Ci0JCS8qIE5vIHRyYW5zcGFyZW5jeSAqLwotCQlpZiAo
dGhpc19jb2xvdXI+PjI0ICE9IDB4ZmYgJiYKLQkJCXRoaXNfY29sb3VyPj4yNCAhPSAweDApIHsK
LQkJCWlmICh3YXJuX3RyYW5zcGFyZW50KSB7Ci0JCQkJZGV2X2luZm8oJmRldi0+cGRldi0+ZGV2
LCAiVmlkZW8gY2FyZCBkb2Vzbid0IHN1cHBvcnQgY3Vyc29ycyB3aXRoIHBhcnRpYWwgdHJhbnNw
YXJlbmN5LlxuIik7Ci0JCQkJZGV2X2luZm8oJmRldi0+cGRldi0+ZGV2LCAiTm90IGVuYWJsaW5n
IGhhcmR3YXJlIGN1cnNvci5cbiIpOwotCQkJCXdhcm5fdHJhbnNwYXJlbnQgPSBmYWxzZTsgLyog
T25seSB0ZWxsIHRoZSB1c2VyIG9uY2UuICovCi0JCQl9Ci0JCQlyZXR1cm4gLUVJTlZBTDsKLQkJ
fQotCQkvKiBEb24ndCBuZWVkIHRvIHN0b3JlIHRyYW5zcGFyZW50IHBpeGVscyBhcyBjb2xvdXJz
ICovCi0JCWlmICh0aGlzX2NvbG91cj4+MjQgPT0gMHgwKQotCQkJY29udGludWU7Ci0JCWZvdW5k
ID0gZmFsc2U7Ci0JCWZvciAocGFsZXR0ZV9pdGVyID0gJmNvbG91cl9zZXRbMF07IHBhbGV0dGVf
aXRlciAhPSBuZXh0X3NwYWNlOyBwYWxldHRlX2l0ZXIrKykgewotCQkJaWYgKCpwYWxldHRlX2l0
ZXIgPT0gdGhpc19jb2xvdXIpIHsKLQkJCQlmb3VuZCA9IHRydWU7Ci0JCQkJYnJlYWs7Ci0JCQl9
Ci0JCX0KLQkJaWYgKGZvdW5kKQotCQkJY29udGludWU7Ci0JCS8qIFdlIG9ubHkgc3VwcG9ydCA0
Yml0IHBhbGV0dGVkIGN1cnNvcnMgKi8KLQkJaWYgKGNvbG91cl9jb3VudCA+PSAxNikgewotCQkJ
aWYgKHdhcm5fcGFsZXR0ZSkgewotCQkJCWRldl9pbmZvKCZkZXYtPnBkZXYtPmRldiwgIlZpZGVv
IGNhcmQgb25seSBzdXBwb3J0cyBjdXJzb3JzIHdpdGggdXAgdG8gMTYgY29sb3Vycy5cbiIpOwot
CQkJCWRldl9pbmZvKCZkZXYtPnBkZXYtPmRldiwgIk5vdCBlbmFibGluZyBoYXJkd2FyZSBjdXJz
b3IuXG4iKTsKLQkJCQl3YXJuX3BhbGV0dGUgPSBmYWxzZTsgLyogT25seSB0ZWxsIHRoZSB1c2Vy
IG9uY2UuICovCi0JCQl9Ci0JCQlyZXR1cm4gLUVJTlZBTDsKLQkJfQotCQkqbmV4dF9zcGFjZSA9
IHRoaXNfY29sb3VyOwotCQluZXh0X3NwYWNlKys7Ci0JCWNvbG91cl9jb3VudCsrOwotCX0KLQot
CS8qIFByb2dyYW0gY29sb3VycyBmcm9tIGN1cnNvciBpY29uIGludG8gcGFsZXR0ZSAqLwotCWZv
ciAoaSA9IDA7IGkgPCBjb2xvdXJfY291bnQ7IGkrKykgewotCQlpZiAoaSA8PSAyKQotCQkJcmVn
X2luZGV4ID0gMHg4ICsgaSoweDQ7Ci0JCWVsc2UKLQkJCXJlZ19pbmRleCA9IDB4NjAgKyBpKjB4
MzsKLQkJV1JFR19EQUMocmVnX2luZGV4LCBjb2xvdXJfc2V0W2ldICYgMHhmZik7Ci0JCVdSRUdf
REFDKHJlZ19pbmRleCsxLCBjb2xvdXJfc2V0W2ldPj44ICYgMHhmZik7Ci0JCVdSRUdfREFDKHJl
Z19pbmRleCsyLCBjb2xvdXJfc2V0W2ldPj4xNiAmIDB4ZmYpOwotCQlCVUdfT04oKGNvbG91cl9z
ZXRbaV0+PjI0ICYgMHhmZikgIT0gMHhmZik7Ci0JfQotCi0JLyogbm93IHdyaXRlIGNvbG91ciBp
bmRpY2VzIGludG8gaGFyZHdhcmUgY3Vyc29yIGJ1ZmZlciAqLwotCWZvciAocm93ID0gMDsgcm93
IDwgNjQ7IHJvdysrKSB7Ci0JCW1lbXNldCgmdGhpc19yb3dbMF0sIDAsIDQ4KTsKLQkJZm9yIChj
b2wgPSAwOyBjb2wgPCA2NDsgY29sKyspIHsKLQkJCXRoaXNfY29sb3VyID0gaW9yZWFkMzIoc3Jj
ICsgNCooY29sICsgNjQqcm93KSk7Ci0JCQkvKiB3cml0ZSB0cmFuc3BhcmVudCBwaXhlbHMgKi8K
LQkJCWlmICh0aGlzX2NvbG91cj4+MjQgPT0gMHgwKSB7Ci0JCQkJdGhpc19yb3dbNDcgLSBjb2wv
OF0gfD0gMHg4MD4+KGNvbCU4KTsKLQkJCQljb250aW51ZTsKLQkJCX0KLQotCQkJLyogd3JpdGUg
Y29sb3VyIGluZGV4IGhlcmUgKi8KLQkJCWZvciAoaSA9IDA7IGkgPCBjb2xvdXJfY291bnQ7IGkr
KykgewotCQkJCWlmIChjb2xvdXJfc2V0W2ldID09IHRoaXNfY29sb3VyKSB7Ci0JCQkJCWlmIChj
b2wgJSAyKQotCQkJCQkJdGhpc19yb3dbY29sLzJdIHw9IGk8PDQ7Ci0JCQkJCWVsc2UKLQkJCQkJ
CXRoaXNfcm93W2NvbC8yXSB8PSBpOwotCQkJCQlicmVhazsKLQkJCQl9Ci0JCQl9Ci0JCX0KLQkJ
bWVtY3B5X3RvaW8oZHN0ICsgcm93KjQ4LCAmdGhpc19yb3dbMF0sIDQ4KTsKLQl9Ci0KLQlyZXR1
cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgbWdhZzIwMF9jdXJzb3Jfc2V0X2Jhc2Uoc3RydWN0IG1n
YV9kZXZpY2UgKm1kZXYsIHU2NCBhZGRyZXNzKQotewotCXU4IGFkZHJsID0gKGFkZHJlc3MgPj4g
MTApICYgMHhmZjsKLQl1OCBhZGRyaCA9IChhZGRyZXNzID4+IDE4KSAmIDB4M2Y7Ci0KLQkvKiBQ
cm9ncmFtIGdwdSBhZGRyZXNzIG9mIGN1cnNvciBidWZmZXIgKi8KLQlXUkVHX0RBQyhNR0ExMDY0
X0NVUlNPUl9CQVNFX0FEUl9MT1csIGFkZHJsKTsKLQlXUkVHX0RBQyhNR0ExMDY0X0NVUlNPUl9C
QVNFX0FEUl9ISSwgYWRkcmgpOwotfQotCi1zdGF0aWMgaW50IG1nYWcyMDBfc2hvd19jdXJzb3Io
c3RydWN0IG1nYV9kZXZpY2UgKm1kZXYsIHZvaWQgKnNyYywKLQkJCSAgICAgICB1bnNpZ25lZCBp
bnQgd2lkdGgsIHVuc2lnbmVkIGludCBoZWlnaHQpCi17Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRl
diA9IG1kZXYtPmRldjsKLQlzdHJ1Y3QgZHJtX2dlbV92cmFtX29iamVjdCAqZ2JvOwotCXZvaWQg
KmRzdDsKLQlzNjQgb2ZmOwotCWludCByZXQ7Ci0KLQlnYm8gPSBtZGV2LT5jdXJzb3IuZ2JvW21k
ZXYtPmN1cnNvci5uZXh0X2luZGV4XTsKLQlpZiAoIWdibykgewotCQlXUkVHOChNR0FfQ1VSUE9T
WEwsIDApOwotCQlXUkVHOChNR0FfQ1VSUE9TWEgsIDApOwotCQlyZXR1cm4gLUVOT1RTVVBQOyAv
KiBEaWRuJ3QgYWxsb2NhdGUgc3BhY2UgZm9yIGN1cnNvcnMgKi8KLQl9Ci0JZHN0ID0gZHJtX2dl
bV92cmFtX3ZtYXAoZ2JvKTsKLQlpZiAoSVNfRVJSKGRzdCkpIHsKLQkJcmV0ID0gUFRSX0VSUihk
c3QpOwotCQlkZXZfZXJyKCZkZXYtPnBkZXYtPmRldiwKLQkJCSJmYWlsZWQgdG8gbWFwIGN1cnNv
ciB1cGRhdGVzOiAlZFxuIiwgcmV0KTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0Jb2ZmID0gZHJtX2dl
bV92cmFtX29mZnNldChnYm8pOwotCWlmIChvZmYgPCAwKSB7Ci0JCXJldCA9IChpbnQpb2ZmOwot
CQlkZXZfZXJyKCZkZXYtPnBkZXYtPmRldiwKLQkJCSJmYWlsZWQgdG8gZ2V0IGN1cnNvciBzY2Fu
b3V0IGFkZHJlc3M6ICVkXG4iLCByZXQpOwotCQlnb3RvIGVycl9kcm1fZ2VtX3ZyYW1fdnVubWFw
OwotCX0KLQotCXJldCA9IG1nYWcyMDBfY3Vyc29yX3VwZGF0ZShtZGV2LCBkc3QsIHNyYywgd2lk
dGgsIGhlaWdodCk7Ci0JaWYgKHJldCkKLQkJZ290byBlcnJfZHJtX2dlbV92cmFtX3Z1bm1hcDsK
LQltZ2FnMjAwX2N1cnNvcl9zZXRfYmFzZShtZGV2LCBvZmYpOwotCi0JLyogQWRqdXN0IGN1cnNv
ciBjb250cm9sIHJlZ2lzdGVyIHRvIHR1cm4gb24gdGhlIGN1cnNvciAqLwotCVdSRUdfREFDKE1H
QTEwNjRfQ1VSU09SX0NUTCwgNCk7IC8qIDE2LWNvbG91ciBwYWxsZXRpemVkIGN1cnNvciBtb2Rl
ICovCi0KLQlkcm1fZ2VtX3ZyYW1fdnVubWFwKGdibywgZHN0KTsKLQotCSsrbWRldi0+Y3Vyc29y
Lm5leHRfaW5kZXg7Ci0JbWRldi0+Y3Vyc29yLm5leHRfaW5kZXggJT0gQVJSQVlfU0laRShtZGV2
LT5jdXJzb3IuZ2JvKTsKLQotCXJldHVybiAwOwotCi1lcnJfZHJtX2dlbV92cmFtX3Z1bm1hcDoK
LQlkcm1fZ2VtX3ZyYW1fdnVubWFwKGdibywgZHN0KTsKLQlyZXR1cm4gcmV0OwotfQotCi0vKgot
ICogSGlkZSB0aGUgY3Vyc29yIG9mZiBzY3JlZW4uIFdlIGNhbid0IGRpc2FibGUgdGhlIGN1cnNv
ciBoYXJkd2FyZSBiZWNhdXNlCi0gKiBpdCB0YWtlcyB0b28gbG9uZyB0byByZS1hY3RpdmF0ZSBh
bmQgY2F1c2VzIG1vbWVudGFyeSBjb3JydXB0aW9uLgotICovCi1zdGF0aWMgdm9pZCBtZ2FnMjAw
X2hpZGVfY3Vyc29yKHN0cnVjdCBtZ2FfZGV2aWNlICptZGV2KQotewotCVdSRUc4KE1HQV9DVVJQ
T1NYTCwgMCk7Ci0JV1JFRzgoTUdBX0NVUlBPU1hILCAwKTsKLX0KLQotc3RhdGljIHZvaWQgbWdh
ZzIwMF9tb3ZlX2N1cnNvcihzdHJ1Y3QgbWdhX2RldmljZSAqbWRldiwgaW50IHgsIGludCB5KQot
ewotCWlmIChXQVJOX09OKHggPD0gMCkpCi0JCXJldHVybjsKLQlpZiAoV0FSTl9PTih5IDw9IDAp
KQotCQlyZXR1cm47Ci0JaWYgKFdBUk5fT04oeCAmIH4weGZmZmYpKQotCQlyZXR1cm47Ci0JaWYg
KFdBUk5fT04oeSAmIH4weGZmZmYpKQotCQlyZXR1cm47Ci0KLQlXUkVHOChNR0FfQ1VSUE9TWEws
IHggJiAweGZmKTsKLQlXUkVHOChNR0FfQ1VSUE9TWEgsICh4Pj44KSAmIDB4ZmYpOwotCi0JV1JF
RzgoTUdBX0NVUlBPU1lMLCB5ICYgMHhmZik7Ci0JV1JFRzgoTUdBX0NVUlBPU1lILCAoeT4+OCkg
JiAweGZmKTsKLX0KLQotaW50IG1nYWcyMDBfY3Vyc29yX2luaXQoc3RydWN0IG1nYV9kZXZpY2Ug
Km1kZXYpCi17Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IG1kZXYtPmRldjsKLQlzaXplX3Qg
bmN1cnNvcnMgPSBBUlJBWV9TSVpFKG1kZXYtPmN1cnNvci5nYm8pOwotCXNpemVfdCBzaXplOwot
CWludCByZXQ7Ci0Jc2l6ZV90IGk7Ci0Jc3RydWN0IGRybV9nZW1fdnJhbV9vYmplY3QgKmdibzsK
LQotCXNpemUgPSByb3VuZHVwKDY0ICogNDgsIFBBR0VfU0laRSk7Ci0JaWYgKHNpemUgKiBuY3Vy
c29ycyA+IG1kZXYtPnZyYW1fZmJfYXZhaWxhYmxlKQotCQlyZXR1cm4gLUVOT01FTTsKLQotCWZv
ciAoaSA9IDA7IGkgPCBuY3Vyc29yczsgKytpKSB7Ci0JCWdibyA9IGRybV9nZW1fdnJhbV9jcmVh
dGUoZGV2LCBzaXplLCAwKTsKLQkJaWYgKElTX0VSUihnYm8pKSB7Ci0JCQlyZXQgPSBQVFJfRVJS
KGdibyk7Ci0JCQlnb3RvIGVycl9kcm1fZ2VtX3ZyYW1fcHV0OwotCQl9Ci0JCXJldCA9IGRybV9n
ZW1fdnJhbV9waW4oZ2JvLCBEUk1fR0VNX1ZSQU1fUExfRkxBR19WUkFNIHwKLQkJCQkJICAgIERS
TV9HRU1fVlJBTV9QTF9GTEFHX1RPUERPV04pOwotCQlpZiAocmV0KSB7Ci0JCQlkcm1fZ2VtX3Zy
YW1fcHV0KGdibyk7Ci0JCQlnb3RvIGVycl9kcm1fZ2VtX3ZyYW1fcHV0OwotCQl9Ci0KLQkJbWRl
di0+Y3Vyc29yLmdib1tpXSA9IGdibzsKLQl9Ci0KLQkvKgotCSAqIEF0IHRoZSBoaWdoIGVuZCBv
ZiB2aWRlbyBtZW1vcnksIHdlIHJlc2VydmUgc3BhY2UgZm9yCi0JICogYnVmZmVyIG9iamVjdHMu
IFRoZSBjdXJzb3IgcGxhbmUgdXNlcyB0aGlzIG1lbW9yeSB0byBzdG9yZQotCSAqIGEgZG91Ymxl
LWJ1ZmZlcmVkIGltYWdlIG9mIHRoZSBjdXJyZW50IGN1cnNvci4gSGVuY2UsIGl0J3MKLQkgKiBu
b3QgYXZhaWxhYmxlIGZvciBmcmFtZWJ1ZmZlcnMuCi0JICovCi0JbWRldi0+dnJhbV9mYl9hdmFp
bGFibGUgLT0gbmN1cnNvcnMgKiBzaXplOwotCi0JcmV0dXJuIDA7Ci0KLWVycl9kcm1fZ2VtX3Zy
YW1fcHV0OgotCXdoaWxlIChpKSB7Ci0JCS0taTsKLQkJZ2JvID0gbWRldi0+Y3Vyc29yLmdib1tp
XTsKLQkJZHJtX2dlbV92cmFtX3VucGluKGdibyk7Ci0JCWRybV9nZW1fdnJhbV9wdXQoZ2JvKTsK
LQkJbWRldi0+Y3Vyc29yLmdib1tpXSA9IE5VTEw7Ci0JfQotCXJldHVybiByZXQ7Ci19Ci0KLXZv
aWQgbWdhZzIwMF9jdXJzb3JfZmluaShzdHJ1Y3QgbWdhX2RldmljZSAqbWRldikKLXsKLQlzaXpl
X3QgaTsKLQlzdHJ1Y3QgZHJtX2dlbV92cmFtX29iamVjdCAqZ2JvOwotCi0JZm9yIChpID0gMDsg
aSA8IEFSUkFZX1NJWkUobWRldi0+Y3Vyc29yLmdibyk7ICsraSkgewotCQlnYm8gPSBtZGV2LT5j
dXJzb3IuZ2JvW2ldOwotCQlkcm1fZ2VtX3ZyYW1fdW5waW4oZ2JvKTsKLQkJZHJtX2dlbV92cmFt
X3B1dChnYm8pOwotCX0KLX0KLQotaW50IG1nYWcyMDBfY3J0Y19jdXJzb3Jfc2V0KHN0cnVjdCBk
cm1fY3J0YyAqY3J0Yywgc3RydWN0IGRybV9maWxlICpmaWxlX3ByaXYsCi0JCQkgICAgdWludDMy
X3QgaGFuZGxlLCB1aW50MzJfdCB3aWR0aCwgdWludDMyX3QgaGVpZ2h0KQotewotCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXYgPSBjcnRjLT5kZXY7Ci0Jc3RydWN0IG1nYV9kZXZpY2UgKm1kZXYgPSB0
b19tZ2FfZGV2aWNlKGRldik7Ci0Jc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmo7Ci0Jc3RydWN0
IGRybV9nZW1fdnJhbV9vYmplY3QgKmdibyA9IE5VTEw7Ci0JaW50IHJldDsKLQl1OCAqc3JjOwot
Ci0JaWYgKCFoYW5kbGUgfHwgIWZpbGVfcHJpdikgewotCQltZ2FnMjAwX2hpZGVfY3Vyc29yKG1k
ZXYpOwotCQlyZXR1cm4gMDsKLQl9Ci0KLQlpZiAod2lkdGggIT0gNjQgfHwgaGVpZ2h0ICE9IDY0
KSB7Ci0JCVdSRUc4KE1HQV9DVVJQT1NYTCwgMCk7Ci0JCVdSRUc4KE1HQV9DVVJQT1NYSCwgMCk7
Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCW9iaiA9IGRybV9nZW1fb2JqZWN0X2xvb2t1cChm
aWxlX3ByaXYsIGhhbmRsZSk7Ci0JaWYgKCFvYmopCi0JCXJldHVybiAtRU5PRU5UOwotCWdibyA9
IGRybV9nZW1fdnJhbV9vZl9nZW0ob2JqKTsKLQlzcmMgPSBkcm1fZ2VtX3ZyYW1fdm1hcChnYm8p
OwotCWlmIChJU19FUlIoc3JjKSkgewotCQlyZXQgPSBQVFJfRVJSKHNyYyk7Ci0JCWRldl9lcnIo
JmRldi0+cGRldi0+ZGV2LAotCQkJImZhaWxlZCB0byBtYXAgdXNlciBidWZmZXIgdXBkYXRlc1xu
Iik7Ci0JCWdvdG8gZXJyX2RybV9nZW1fb2JqZWN0X3B1dDsKLQl9Ci0KLQlyZXQgPSBtZ2FnMjAw
X3Nob3dfY3Vyc29yKG1kZXYsIHNyYywgd2lkdGgsIGhlaWdodCk7Ci0JaWYgKHJldCkKLQkJZ290
byBlcnJfZHJtX2dlbV92cmFtX3Z1bm1hcDsKLQotCS8qIE5vdyB1cGRhdGUgaW50ZXJuYWwgYnVm
ZmVyIHBvaW50ZXJzICovCi0JZHJtX2dlbV92cmFtX3Z1bm1hcChnYm8sIHNyYyk7Ci0JZHJtX2dl
bV9vYmplY3RfcHV0KG9iaik7Ci0KLQlyZXR1cm4gMDsKLWVycl9kcm1fZ2VtX3ZyYW1fdnVubWFw
OgotCWRybV9nZW1fdnJhbV92dW5tYXAoZ2JvLCBzcmMpOwotZXJyX2RybV9nZW1fb2JqZWN0X3B1
dDoKLQlkcm1fZ2VtX29iamVjdF9wdXQob2JqKTsKLQlyZXR1cm4gcmV0OwotfQotCi1pbnQgbWdh
ZzIwMF9jcnRjX2N1cnNvcl9tb3ZlKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywgaW50IHgsIGludCB5
KQotewotCXN0cnVjdCBtZ2FfZGV2aWNlICptZGV2ID0gdG9fbWdhX2RldmljZShjcnRjLT5kZXYp
OwotCi0JLyogT3VyIG9yaWdpbiBpcyBhdCAoNjQsNjQpICovCi0JeCArPSA2NDsKLQl5ICs9IDY0
OwotCi0JbWdhZzIwMF9tb3ZlX2N1cnNvcihtZGV2LCB4LCB5KTsKLQotCXJldHVybiAwOwotfQot
LSAKMi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWwK
