Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 078A852477
	for <lists+dri-devel@lfdr.de>; Tue, 25 Jun 2019 09:28:23 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2678289FD9;
	Tue, 25 Jun 2019 07:27:35 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0b-001b2d01.pphosted.com
 [148.163.158.5])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B2400897FD
 for <dri-devel@lists.freedesktop.org>; Tue, 25 Jun 2019 03:19:34 +0000 (UTC)
Received: from pps.filterd (m0098414.ppops.net [127.0.0.1])
 by mx0b-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x5P38w8d040387
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:33 -0400
Received: from e06smtp04.uk.ibm.com (e06smtp04.uk.ibm.com [195.75.94.100])
 by mx0b-001b2d01.pphosted.com with ESMTP id 2tb7x0q9gg-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Mon, 24 Jun 2019 23:19:33 -0400
Received: from localhost
 by e06smtp04.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Tue, 25 Jun 2019 04:19:30 +0100
Received: from b06cxnps4075.portsmouth.uk.ibm.com (9.149.109.197)
 by e06smtp04.uk.ibm.com (192.168.101.134) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Tue, 25 Jun 2019 04:19:22 +0100
Received: from d06av23.portsmouth.uk.ibm.com (d06av23.portsmouth.uk.ibm.com
 [9.149.105.59])
 by b06cxnps4075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x5P3JLgJ49283266
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Tue, 25 Jun 2019 03:19:21 GMT
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 1A2BEA404D;
 Tue, 25 Jun 2019 03:19:21 +0000 (GMT)
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 7725CA4040;
 Tue, 25 Jun 2019 03:19:20 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by d06av23.portsmouth.uk.ibm.com (Postfix) with ESMTP;
 Tue, 25 Jun 2019 03:19:20 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 4705BA02A1;
 Tue, 25 Jun 2019 13:19:19 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v4 3/7] lib/hexdump.c: Optionally suppress lines of repeated
 bytes
Date: Tue, 25 Jun 2019 13:17:22 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190625031726.12173-1-alastair@au1.ibm.com>
References: <20190625031726.12173-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19062503-0016-0000-0000-0000028C0D9A
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19062503-0017-0000-0000-000032E97D2F
Message-Id: <20190625031726.12173-4-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-06-25_02:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1906250024
X-Mailman-Approved-At: Tue, 25 Jun 2019 07:27:07 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpTb21lIGJ1ZmZl
cnMgbWF5IG9ubHkgYmUgcGFydGlhbGx5IGZpbGxlZCB3aXRoIHVzZWZ1bCBkYXRhLCB3aGlsZSB0
aGUgcmVzdAppcyBwYWRkZWQgKHR5cGljYWxseSB3aXRoIDB4MDAgb3IgMHhmZikuCgpUaGlzIHBh
dGNoIGludHJvZHVjZXMgYSBmbGFnIHRvIGFsbG93IHRoZSBzdXByZXNzaW9uIG9mIGxpbmVzIG9m
IHJlcGVhdGVkCmJ5dGVzLCB3aGljaCBhcmUgcmVwbGFjZWQgd2l0aCAnKiogU2tpcHBlZCAldSBi
eXRlcyBvZiB2YWx1ZSAweCV4ICoqJwoKQW4gaW5saW5lIHdyYXBwZXIgZnVuY3Rpb24gaXMgcHJv
dmlkZWQgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IHdpdGgKZXhpc3RpbmcgY29kZSwgd2hp
Y2ggbWFpbnRhaW5zIHRoZSBvcmlnaW5hbCBiZWhhdmlvdXIuCgpTaWduZWQtb2ZmLWJ5OiBBbGFz
dGFpciBEJ1NpbHZhIDxhbGFzdGFpckBkLXNpbHZhLm9yZz4KLS0tCiBpbmNsdWRlL2xpbnV4L3By
aW50ay5oIHwgMjYgKysrKysrKysrLS0tCiBsaWIvaGV4ZHVtcC5jICAgICAgICAgIHwgOTEgKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQs
IDEwMCBpbnNlcnRpb25zKCspLCAxNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L3ByaW50ay5oIGIvaW5jbHVkZS9saW51eC9wcmludGsuaAppbmRleCBjZWZkMzc0YzQ3
YjEuLmMwNDE2ZDBlYjllMiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9wcmludGsuaAorKysg
Yi9pbmNsdWRlL2xpbnV4L3ByaW50ay5oCkBAIC03LDYgKzcsNyBAQAogI2luY2x1ZGUgPGxpbnV4
L2tlcm5fbGV2ZWxzLmg+CiAjaW5jbHVkZSA8bGludXgvbGlua2FnZS5oPgogI2luY2x1ZGUgPGxp
bnV4L2NhY2hlLmg+CisjaW5jbHVkZSA8bGludXgvYml0cy5oPgogCiBleHRlcm4gY29uc3QgY2hh
ciBsaW51eF9iYW5uZXJbXTsKIGV4dGVybiBjb25zdCBjaGFyIGxpbnV4X3Byb2NfYmFubmVyW107
CkBAIC00ODEsMTMgKzQ4MiwxOCBAQCBlbnVtIHsKIAlEVU1QX1BSRUZJWF9BRERSRVNTLAogCURV
TVBfUFJFRklYX09GRlNFVAogfTsKKwogZXh0ZXJuIGludCBoZXhfZHVtcF90b19idWZmZXIoY29u
c3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBpbnQgcm93c2l6ZSwKIAkJCSAgICAgIGludCBncm91
cHNpemUsIGNoYXIgKmxpbmVidWYsIHNpemVfdCBsaW5lYnVmbGVuLAogCQkJICAgICAgYm9vbCBh
c2NpaSk7CisKKyNkZWZpbmUgSEVYRFVNUF9BU0NJSQkJCUJJVCgwKQorI2RlZmluZSBIRVhEVU1Q
X1NVUFBSRVNTX1JFUEVBVEVECUJJVCgxKQorCiAjaWZkZWYgQ09ORklHX1BSSU5USwotZXh0ZXJu
IHZvaWQgcHJpbnRfaGV4X2R1bXAoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZp
eF9zdHIsCitleHRlcm4gdm9pZCBwcmludF9oZXhfZHVtcF9leHQoY29uc3QgY2hhciAqbGV2ZWws
IGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCiAJCQkgICBpbnQgcHJlZml4X3R5cGUsIGludCByb3dz
aXplLCBpbnQgZ3JvdXBzaXplLAotCQkJICAgY29uc3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBi
b29sIGFzY2lpKTsKKwkJCSAgIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgdTMyIGZsYWdz
KTsKICNpZiBkZWZpbmVkKENPTkZJR19EWU5BTUlDX0RFQlVHKQogI2RlZmluZSBwcmludF9oZXhf
ZHVtcF9ieXRlcyhwcmVmaXhfc3RyLCBwcmVmaXhfdHlwZSwgYnVmLCBsZW4pCVwKIAlkeW5hbWlj
X2hleF9kdW1wKHByZWZpeF9zdHIsIHByZWZpeF90eXBlLCAxNiwgMSwgYnVmLCBsZW4sIHRydWUp
CkBAIC00OTYsMTggKzUwMiwyOCBAQCBleHRlcm4gdm9pZCBwcmludF9oZXhfZHVtcF9ieXRlcyhj
b25zdCBjaGFyICpwcmVmaXhfc3RyLCBpbnQgcHJlZml4X3R5cGUsCiAJCQkJIGNvbnN0IHZvaWQg
KmJ1Ziwgc2l6ZV90IGxlbik7CiAjZW5kaWYgLyogZGVmaW5lZChDT05GSUdfRFlOQU1JQ19ERUJV
RykgKi8KICNlbHNlCi1zdGF0aWMgaW5saW5lIHZvaWQgcHJpbnRfaGV4X2R1bXAoY29uc3QgY2hh
ciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCitzdGF0aWMgaW5saW5lIHZvaWQgcHJp
bnRfaGV4X2R1bXBfZXh0KGNvbnN0IGNoYXIgKmxldmVsLCBjb25zdCBjaGFyICpwcmVmaXhfc3Ry
LAogCQkJCSAgaW50IHByZWZpeF90eXBlLCBpbnQgcm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKLQkJ
CQkgIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgYm9vbCBhc2NpaSkKKwkJCQkgIGNvbnN0
IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgdTMyIGZsYWdzKQogewogfQogc3RhdGljIGlubGluZSB2
b2lkIHByaW50X2hleF9kdW1wX2J5dGVzKGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsIGludCBwcmVm
aXhfdHlwZSwKIAkJCQkJY29uc3Qgdm9pZCAqYnVmLCBzaXplX3QgbGVuKQogewogfQotCiAjZW5k
aWYKIAorc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIHByaW50X2hleF9kdW1wKGNvbnN0IGNo
YXIgKmxldmVsLAorCQkJCQkgICBjb25zdCBjaGFyICpwcmVmaXhfc3RyLAorCQkJCQkgICBpbnQg
cHJlZml4X3R5cGUsIGludCByb3dzaXplLAorCQkJCQkgICBpbnQgZ3JvdXBzaXplLCBjb25zdCB2
b2lkICpidWYsCisJCQkJCSAgIHNpemVfdCBsZW4sIGJvb2wgYXNjaWkpCit7CisJcHJpbnRfaGV4
X2R1bXBfZXh0KGxldmVsLCBwcmVmaXhfc3RyLCBwcmVmaXhfdHlwZSwgcm93c2l6ZSwgZ3JvdXBz
aXplLAorCQkJYnVmLCBsZW4sIGFzY2lpID8gSEVYRFVNUF9BU0NJSSA6IDApOworfQorCisKICNp
ZiBkZWZpbmVkKENPTkZJR19EWU5BTUlDX0RFQlVHKQogI2RlZmluZSBwcmludF9oZXhfZHVtcF9k
ZWJ1ZyhwcmVmaXhfc3RyLCBwcmVmaXhfdHlwZSwgcm93c2l6ZSwJXAogCQkJICAgICBncm91cHNp
emUsIGJ1ZiwgbGVuLCBhc2NpaSkJXApkaWZmIC0tZ2l0IGEvbGliL2hleGR1bXAuYyBiL2xpYi9o
ZXhkdW1wLmMKaW5kZXggODcwYzhjYmZmMWUxLi42MWRjNjI1YzMyZjUgMTAwNjQ0Ci0tLSBhL2xp
Yi9oZXhkdW1wLmMKKysrIGIvbGliL2hleGR1bXAuYwpAQCAtMjEyLDggKzIxMiw0NCBAQCBpbnQg
aGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3Np
emUsIGludCBncm91cHNpemUsCiBFWFBPUlRfU1lNQk9MKGhleF9kdW1wX3RvX2J1ZmZlcik7CiAK
ICNpZmRlZiBDT05GSUdfUFJJTlRLCisKKy8qKgorICogYnVmX2lzX2FsbCAtIENoZWNrIGlmIGEg
YnVmZmVyIGNvbnRhaW5zIG9ubHkgYSBzaW5nbGUgYnl0ZSB2YWx1ZQorICogQGJ1ZjogcG9pbnRl
ciB0byB0aGUgYnVmZmVyCisgKiBAbGVuOiB0aGUgc2l6ZSBvZiB0aGUgYnVmZmVyIGluIGJ5dGVz
CisgKiBAdmFsOiBvdXRwdXRzIHRoZSB2YWx1ZSBpZiBpZiB0aGUgYnl0ZXMgYXJlIGlkZW50aWNh
bAorICovCitzdGF0aWMgYm9vbCBidWZfaXNfYWxsKGNvbnN0IHU4ICpidWYsIHNpemVfdCBsZW4s
IHU4ICp2YWxfb3V0KQoreworCXNpemVfdCBpOworCXU4IHZhbDsKKworCWlmIChsZW4gPD0gMSkK
KwkJcmV0dXJuIGZhbHNlOworCisJdmFsID0gYnVmWzBdOworCisJZm9yIChpID0gMTsgaSA8IGxl
bjsgaSsrKSB7CisJCWlmIChidWZbaV0gIT0gdmFsKQorCQkJcmV0dXJuIGZhbHNlOworCX0KKwor
CSp2YWxfb3V0ID0gdmFsOworCXJldHVybiB0cnVlOworfQorCitzdGF0aWMgdm9pZCBhbm5vdW5j
ZV9za2lwcGVkKGNvbnN0IGNoYXIgKmxldmVsLCBjb25zdCBjaGFyICpwcmVmaXhfc3RyLAorCQkJ
CSAgIHU4IHZhbCwgc2l6ZV90IGNvdW50KQoreworCWlmIChjb3VudCA9PSAwKQorCQlyZXR1cm47
CisKKwlwcmludGsoIiVzJXMgKiogU2tpcHBlZCAlbHUgYnl0ZXMgb2YgdmFsdWUgMHgleCAqKlxu
IiwKKwkgICAgICAgbGV2ZWwsIHByZWZpeF9zdHIsIGNvdW50LCB2YWwpOworfQorCiAvKioKLSAq
IHByaW50X2hleF9kdW1wIC0gcHJpbnQgYSB0ZXh0IGhleCBkdW1wIHRvIHN5c2xvZyBmb3IgYSBi
aW5hcnkgYmxvYiBvZiBkYXRhCisgKiBwcmludF9oZXhfZHVtcF9leHQgLSBkdW1wIGEgYmluYXJ5
IGJsb2Igb2YgZGF0YSB0byBzeXNsb2cgaW4gaGV4YWRlY2ltYWwKICAqIEBsZXZlbDoga2VybmVs
IGxvZyBsZXZlbCAoZS5nLiBLRVJOX0RFQlVHKQogICogQHByZWZpeF9zdHI6IHN0cmluZyB0byBw
cmVmaXggZWFjaCBsaW5lIHdpdGg7CiAgKiAgY2FsbGVyIHN1cHBsaWVzIHRyYWlsaW5nIHNwYWNl
cyBmb3IgYWxpZ25tZW50IGlmIGRlc2lyZWQKQEAgLTIyNCw2ICsyNjAsMTAgQEAgRVhQT1JUX1NZ
TUJPTChoZXhfZHVtcF90b19idWZmZXIpOwogICogQGJ1ZjogZGF0YSBibG9iIHRvIGR1bXAKICAq
IEBsZW46IG51bWJlciBvZiBieXRlcyBpbiB0aGUgQGJ1ZgogICogQGFzY2lpOiBpbmNsdWRlIEFT
Q0lJIGFmdGVyIHRoZSBoZXggb3V0cHV0CisgKiBAZmxhZ3M6IEEgYml0d2lzZSBPUiBvZiB0aGUg
Zm9sbG93aW5nIGZsYWdzOgorICoJSEVYRFVNUF9BU0NJSToJCQlpbmNsdWRlIEFTQ0lJIGFmdGVy
IHRoZSBoZXggb3V0cHV0CisgKglIRVhEVU1QX1NVUFBSRVNTX1JFUEVBVEVEOglzdXBwcmVzcyBy
ZXBlYXRlZCBsaW5lcyBvZiBpZGVudGljYWwKKyAqCQkJCQlieXRlcwogICoKICAqIEdpdmVuIGEg
YnVmZmVyIG9mIHU4IGRhdGEsIHByaW50X2hleF9kdW1wKCkgcHJpbnRzIGEgaGV4ICsgQVNDSUkg
ZHVtcAogICogdG8gdGhlIGtlcm5lbCBsb2cgYXQgdGhlIHNwZWNpZmllZCBrZXJuZWwgbG9nIGxl
dmVsLCB3aXRoIGFuIG9wdGlvbmFsCkBAIC0yMzQsMjIgKzI3NCwyNSBAQCBFWFBPUlRfU1lNQk9M
KGhleF9kdW1wX3RvX2J1ZmZlcik7CiAgKiAob3B0aW9uYWxseSkgQVNDSUkgb3V0cHV0LgogICoK
ICAqIEUuZy46Ci0gKiAgIHByaW50X2hleF9kdW1wKEtFUk5fREVCVUcsICJyYXcgZGF0YTogIiwg
RFVNUF9QUkVGSVhfQUREUkVTUywKLSAqCQkgICAgMTYsIDEsIGZyYW1lLT5kYXRhLCBmcmFtZS0+
bGVuLCB0cnVlKTsKKyAqICAgcHJpbnRfaGV4X2R1bXBfZXh0KEtFUk5fREVCVUcsICJyYXcgZGF0
YTogIiwgRFVNUF9QUkVGSVhfQUREUkVTUywKKyAqCQkgICAgMTYsIDEsIGZyYW1lLT5kYXRhLCBm
cmFtZS0+bGVuLCBIRVhEVU1QX0FTQ0lJKTsKICAqCiAgKiBFeGFtcGxlIG91dHB1dCB1c2luZyAl
RFVNUF9QUkVGSVhfT0ZGU0VUIGFuZCAxLWJ5dGUgbW9kZToKICAqIDAwMDlhYjQyOiA0MCA0MSA0
MiA0MyA0NCA0NSA0NiA0NyA0OCA0OSA0YSA0YiA0YyA0ZCA0ZSA0ZiAgQEFCQ0RFRkdISUpLTE1O
TwogICogRXhhbXBsZSBvdXRwdXQgdXNpbmcgJURVTVBfUFJFRklYX0FERFJFU1MgYW5kIDQtYnl0
ZSBtb2RlOgogICogZmZmZmZmZmY4ODA4OWFmMDogNzM3MjcxNzAgNzc3Njc1NzQgN2I3YTc5Nzgg
N2Y3ZTdkN2MgIHBxcnN0dXZ3eHl6e3x9fi4KICAqLwotdm9pZCBwcmludF9oZXhfZHVtcChjb25z
dCBjaGFyICpsZXZlbCwgY29uc3QgY2hhciAqcHJlZml4X3N0ciwgaW50IHByZWZpeF90eXBlLAot
CQkgICAgaW50IHJvd3NpemUsIGludCBncm91cHNpemUsCi0JCSAgICBjb25zdCB2b2lkICpidWYs
IHNpemVfdCBsZW4sIGJvb2wgYXNjaWkpCit2b2lkIHByaW50X2hleF9kdW1wX2V4dChjb25zdCBj
aGFyICpsZXZlbCwgY29uc3QgY2hhciAqcHJlZml4X3N0ciwKKwkJCWludCBwcmVmaXhfdHlwZSwg
aW50IHJvd3NpemUsIGludCBncm91cHNpemUsCisJCQljb25zdCB2b2lkICpidWYsIHNpemVfdCBs
ZW4sIHUzMiBmbGFncykKIHsKIAljb25zdCB1OCAqcHRyID0gYnVmOwotCWludCBpLCBsaW5lbGVu
LCByZW1haW5pbmcgPSBsZW47CisJaW50IGksIHJlbWFpbmluZyA9IGxlbjsKIAl1bnNpZ25lZCBj
aGFyICpsaW5lYnVmOwogCXVuc2lnbmVkIGludCBsaW5lYnVmX2xlbjsKKwl1OCBza2lwcGVkX3Zh
bCA9IDA7CisJc2l6ZV90IHNraXBwZWQgPSAwOworCiAKIAlpZiAocm93c2l6ZSAlIGdyb3Vwc2l6
ZSkKIAkJcm93c2l6ZSAtPSByb3dzaXplICUgZ3JvdXBzaXplOwpAQCAtMjY3LDExICszMTAsMzUg
QEAgdm9pZCBwcmludF9oZXhfZHVtcChjb25zdCBjaGFyICpsZXZlbCwgY29uc3QgY2hhciAqcHJl
Zml4X3N0ciwgaW50IHByZWZpeF90eXBlLAogCX0KIAogCWZvciAoaSA9IDA7IGkgPCBsZW47IGkg
Kz0gcm93c2l6ZSkgewotCQlsaW5lbGVuID0gbWluKHJlbWFpbmluZywgcm93c2l6ZSk7CisJCWlu
dCBsaW5lbGVuID0gbWluKHJlbWFpbmluZywgcm93c2l6ZSk7CiAJCXJlbWFpbmluZyAtPSByb3dz
aXplOwogCisJCWlmIChmbGFncyAmIEhFWERVTVBfU1VQUFJFU1NfUkVQRUFURUQpIHsKKwkJCXU4
IG5ld192YWw7CisKKwkJCWlmIChidWZfaXNfYWxsKHB0ciArIGksIGxpbmVsZW4sICZuZXdfdmFs
KSkgeworCQkJCWlmIChuZXdfdmFsID09IHNraXBwZWRfdmFsKSB7CisJCQkJCXNraXBwZWQgKz0g
bGluZWxlbjsKKwkJCQkJY29udGludWU7CisJCQkJfSBlbHNlIHsKKwkJCQkJYW5ub3VuY2Vfc2tp
cHBlZChsZXZlbCwgcHJlZml4X3N0ciwKKwkJCQkJCQkgc2tpcHBlZF92YWwsIHNraXBwZWQpOwor
CQkJCQlza2lwcGVkX3ZhbCA9IG5ld192YWw7CisJCQkJCXNraXBwZWQgPSBsaW5lbGVuOworCQkJ
CQljb250aW51ZTsKKwkJCQl9CisJCQl9CisJCX0KKworCQlpZiAoc2tpcHBlZCkgeworCQkJYW5u
b3VuY2Vfc2tpcHBlZChsZXZlbCwgcHJlZml4X3N0ciwgc2tpcHBlZF92YWwsCisJCQkJCSBza2lw
cGVkKTsKKwkJCXNraXBwZWQgPSAwOworCQl9CisKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKHB0ciAr
IGksIGxpbmVsZW4sIHJvd3NpemUsIGdyb3Vwc2l6ZSwKLQkJCQkgICBsaW5lYnVmLCBsaW5lYnVm
X2xlbiwgYXNjaWkpOworCQkJCSAgIGxpbmVidWYsIGxpbmVidWZfbGVuLAorCQkJCSAgIGZsYWdz
ICYgSEVYRFVNUF9BU0NJSSk7CiAKIAkJc3dpdGNoIChwcmVmaXhfdHlwZSkgewogCQljYXNlIERV
TVBfUFJFRklYX0FERFJFU1M6CkBAIC0yODksNyArMzU2LDcgQEAgdm9pZCBwcmludF9oZXhfZHVt
cChjb25zdCBjaGFyICpsZXZlbCwgY29uc3QgY2hhciAqcHJlZml4X3N0ciwgaW50IHByZWZpeF90
eXBlLAogCiAJa2ZyZWUobGluZWJ1Zik7CiB9Ci1FWFBPUlRfU1lNQk9MKHByaW50X2hleF9kdW1w
KTsKK0VYUE9SVF9TWU1CT0wocHJpbnRfaGV4X2R1bXBfZXh0KTsKIAogI2lmICFkZWZpbmVkKENP
TkZJR19EWU5BTUlDX0RFQlVHKQogLyoqCkBAIC0zMDcsOCArMzc0LDggQEAgRVhQT1JUX1NZTUJP
TChwcmludF9oZXhfZHVtcCk7CiB2b2lkIHByaW50X2hleF9kdW1wX2J5dGVzKGNvbnN0IGNoYXIg
KnByZWZpeF9zdHIsIGludCBwcmVmaXhfdHlwZSwKIAkJCSAgY29uc3Qgdm9pZCAqYnVmLCBzaXpl
X3QgbGVuKQogewotCXByaW50X2hleF9kdW1wKEtFUk5fREVCVUcsIHByZWZpeF9zdHIsIHByZWZp
eF90eXBlLCAxNiwgMSwKLQkJICAgICAgIGJ1ZiwgbGVuLCB0cnVlKTsKKwlwcmludF9oZXhfZHVt
cF9leHQoS0VSTl9ERUJVRywgcHJlZml4X3N0ciwgcHJlZml4X3R5cGUsIDE2LCAxLAorCQkgICAg
ICAgYnVmLCBsZW4sIEhFWERVTVBfQVNDSUkpOwogfQogRVhQT1JUX1NZTUJPTChwcmludF9oZXhf
ZHVtcF9ieXRlcyk7CiAjZW5kaWYgLyogIWRlZmluZWQoQ09ORklHX0RZTkFNSUNfREVCVUcpICov
Ci0tIAoyLjIxLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZl
bA==
