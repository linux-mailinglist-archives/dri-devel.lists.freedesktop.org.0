Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 76AF8299411
	for <lists+dri-devel@lfdr.de>; Mon, 26 Oct 2020 18:41:27 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CF5866EA46;
	Mon, 26 Oct 2020 17:41:22 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-ed1-x542.google.com (mail-ed1-x542.google.com
 [IPv6:2a00:1450:4864:20::542])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6E11B6EA46
 for <dri-devel@lists.freedesktop.org>; Mon, 26 Oct 2020 17:41:21 +0000 (UTC)
Received: by mail-ed1-x542.google.com with SMTP id x1so10304746eds.1
 for <dri-devel@lists.freedesktop.org>; Mon, 26 Oct 2020 10:41:21 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=6laQt7TD5TZerUBYcGVpfEw1P0iPjbKXbWbDno8C7aQ=;
 b=mTVkrtnAQhbl7K8E+N7+T/RCeGB6BJcA+GJhi1B8p1TfjEUheWEiJhfQ2pUtxxduIc
 vDtySEfmW2OI7IdFe9U4d5ROmJ4UltmHhokxJOVJJVDwqNop6RRHJ+FPJUUDJu0AStXA
 OEcBxgSD1UmIcNn3WegcNtBEEFMR8/zyWeu5bZzDeiyWmcmF52QHveUPQh6pjmNTjBXx
 4PDAb4iRJIXykCmQaSg8QA4vE78Qhd7ZTsRvaRd6qzTbg2wnDQoOPObuIngPlEh7UuYT
 Ebc6cZHnzOLDprlZkkVbVaVrJkT0AOTU0Cnrh3D/zkJRiZsA1YV/a2rKpLcT3ldRpBpa
 Kg7w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=6laQt7TD5TZerUBYcGVpfEw1P0iPjbKXbWbDno8C7aQ=;
 b=Ss3JRt1pA136GUlZBnrCrWuvL1DbqBerqtcbHwT9LfL7j+2wdYJ3J2clFgAPvFWy0W
 pL5Hl8hYE1N7jfDESlBFZ9UGcwK9bmQRzTWRnPU2MIYZycVJ73huYT+7estqI+/lmngR
 WN0vzc7Wm0Fgkd63rIg0bNXsBo4CIi6h5phphJ8kXDyCgkZR+ySGTCj8HQuTHY+SmlPE
 +kSXvKsuaoSZ0NSeHlzxr/+lpThQmSrFdO7Ejd9dGbP6nB621w6jN1yinuZAe9zlB1Qc
 3sF3F1ifD7WPEaj8/fR6GKtYRmnmp6gdZXcmtAJLe1gvcBAvAWuGmOsePoUNLsuGsy52
 uGhw==
X-Gm-Message-State: AOAM530mxq0dRPBDkUHJFw6eUgzf6xrQ48Sk7ZBToRt7uqsvklXytwgD
 wUh9m9hxOKNe5nAEtrty7xSRRUPX5R8=
X-Google-Smtp-Source: ABdhPJxhzlDLC0qWGxO5DOM8rtmDHWT6ClbeE4nB0A6ELCgKr/SD/WqvWiv82zB2En+YFtN0EJTbvg==
X-Received: by 2002:a50:f0c5:: with SMTP id a5mr15712323edm.91.1603734078937; 
 Mon, 26 Oct 2020 10:41:18 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:203b:21f:8891:7b14])
 by smtp.gmail.com with ESMTPSA id i14sm6227325ejy.110.2020.10.26.10.41.18
 for <dri-devel@lists.freedesktop.org>
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 26 Oct 2020 10:41:18 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH 1/9] drm/ttm: new TT backend allocation pool v2
Date: Mon, 26 Oct 2020 18:41:09 +0100
Message-Id: <20201026174117.2553-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyByZXBsYWNlcyB0aGUgc3BhZ2hldHRpIGNvZGUgaW4gdGhlIHR3byBleGlzdGluZyBwYWdl
IHBvb2xzLgoKRmlyc3Qgb2YgYWxsIGRlcGVuZGluZyBvbiB0aGUgYWxsb2NhdGlvbiBzaXplIGl0
IGlzIGJldHdlZW4gMyAoMUdpQikgYW5kCjUgKDFNaUIpIHRpbWVzIGZhc3RlciB0aGFuIHRoZSBv
bGQgaW1wbGVtZW50YXRpb24uCgpJdCBtYWtlcyBiZXR0ZXIgdXNlIG9mIGJ1ZGR5IHBhZ2VzIHRv
IGFsbG93IGZvciBsYXJnZXIgcGh5c2ljYWwgY29udGlndW91cwphbGxvY2F0aW9ucyB3aGljaCBz
aG91bGQgcmVzdWx0IGluIGJldHRlciBUTEIgdXRpbGl6YXRpb24gYXQgbGVhc3QgZm9yCmFtZGdw
dS4KCkluc3RlYWQgb2YgYSBjb21wbGV0ZWx5IGJyYWluZGVhZCBhcHByb2FjaCBvZiBmaWxsaW5n
IHRoZSBwb29sIHdpdGggb25lCkNQVSB3aGlsZSBhbm90aGVyIG9uZSBpcyB0cnlpbmcgdG8gc2hy
aW5rIGl0IHdlIG9ubHkgZ2l2ZSBiYWNrIGZyZWVkCnBhZ2VzLgoKVGhpcyBhbHNvIHJlc3VsdHMg
aW4gbXVjaCBsZXNzIGxvY2tpbmcgY29udGVudGlvbiBhbmQgYSB0cnlsb2NrIGZyZWUgTU0Kc2hy
aW5rZXIgY2FsbGJhY2ssIHNvIHdlIGNhbiBndWFyYW50ZWUgdGhhdCBwYWdlcyBhcmUgZ2l2ZW4g
YmFjayB0byB0aGUKc3lzdGVtIHdoZW4gbmVlZGVkLgoKRG93bnNpZGUgb2YgdGhpcyBpcyB0aGF0
IGl0IHRha2VzIGxvbmdlciBmb3IgbWFueSBzbWFsbCBhbGxvY2F0aW9ucyB1bnRpbAp0aGUgcG9v
bCBpcyBmaWxsZWQgdXAuIFdlIGNvdWxkIGFkZHJlc3MgdGhpcywgYnV0IEkgY291bGRuJ3QgZmlu
ZCBhbiB1c2UKY2FzZSB3aGVyZSB0aGlzIGFjdHVhbGx5IG1hdHRlcnMuIFdlIGFsc28gZG9uJ3Qg
Ym90aGVyIGZyZWVpbmcgbGFyZ2UKY2h1bmtzIG9mIHBhZ2VzIGFueSBtb3JlIHNpbmNlIHRoZSBD
UFUgb3ZlcmhlYWQgaW4gdGhhdCBwYXRoIGlzbid0IHJlYWxseQp0aGF0IGltcG9ydGFudC4KClRo
ZSBzeXNmcyBmaWxlcyBhcmUgcmVwbGFjZWQgd2l0aCBhIHNpbmdsZSBtb2R1bGUgcGFyYW1ldGVy
LCBhbGxvd2luZwp1c2VycyB0byBvdmVycmlkZSBob3cgbWFueSBwYWdlcyBzaG91bGQgYmUgZ2xv
YmFsbHkgcG9vbGVkIGluIFRUTS4gVGhpcwp1bmZvcnR1bmF0ZWx5IGJyZWFrcyB0aGUgVUFQSSBz
bGlnaHRseSwgYnV0IGFzIGZhciBhcyB3ZSBrbm93IG5vYm9keSBldmVyCmRlcGVuZGVkIG9uIHRo
aXMuCgpaZXJvaW5nIG1lbW9yeSBjb21pbmcgZnJvbSB0aGUgcG9vbCB3YXMgaGFuZGxlZCBpbmNv
bnNpc3RlbnRseS4gVGhlCmFsbG9jX3BhZ2VzKCkgYmFzZWQgcG9vbCB3YXMgemVyb2luZyBpdCwg
dGhlIGRtYV9hbGxvY19hdHRyKCkgYmFzZWQgb25lCndhc24ndC4gRm9yIG5vdyB0aGUgbmV3IGlt
cGxlbWVudGF0aW9uIGlzbid0IHplcm9pbmcgcGFnZXMgZnJvbSB0aGUgcG9vbAplaXRoZXIgYW5k
IG9ubHkgc2V0cyB0aGUgX19HRlBfWkVSTyBmbGFnIHdoZW4gbmVjZXNzYXJ5LgoKVGhlIGltcGxl
bWVudGF0aW9uIGhhcyBvbmx5IDc2OCBsaW5lcyBvZiBjb2RlIGNvbXBhcmVkIHRvIHRoZSBvdmVy
IDI2MDAKb2YgdGhlIG9sZCBvbmUsIGFuZCBhbHNvIGFsbG93cyBmb3Igc2F2aW5nIHF1aXRlIGEg
YnVuY2ggb2YgY29kZSBpbiB0aGUKZHJpdmVycyBzaW5jZSB3ZSBkb24ndCBuZWVkIHNwZWNpYWxp
emVkIGhhbmRsaW5nIHRoZXJlIGFueSBtb3JlIGJhc2VkIG9uCmtlcm5lbCBjb25maWcuCgpBZGRp
dGlvbmFsIHRvIGFsbCBvZiB0aGF0IHRoZXJlIHdhcyBhIG5lYXQgYnVnIHdpdGggSU9NTVUsIGNv
aGVyZW50IERNQQptYXBwaW5ncyBhbmQgaHVnZSBwYWdlcyB3aGljaCBpcyBub3cgZml4ZWQgaW4g
dGhlIG5ldyBjb2RlIGFzIHdlbGwuCgp2MjogbWFrZSB0dG1fcG9vbF9hcHBseV9jYWNoaW5nIHN0
YXRpYyBhcyByZXBvcnRlZCBieSB0aGUga2VybmVsIGJvdCwgYWRkCiAgICBzb21lIG1vcmUgY2hl
Y2tzCgpTaWduZWQtb2ZmLWJ5OiBDaHJpc3RpYW4gS8O2bmlnIDxjaHJpc3RpYW4ua29lbmlnQGFt
ZC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL3R0bS9NYWtlZmlsZSAgICAgfCAgIDIgKy0KIGRy
aXZlcnMvZ3B1L2RybS90dG0vdHRtX21lbW9yeS5jIHwgICAzICsKIGRyaXZlcnMvZ3B1L2RybS90
dG0vdHRtX3Bvb2wuYyAgIHwgNjY4ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGlu
Y2x1ZGUvZHJtL3R0bS90dG1fY2FjaGluZy5oICAgIHwgICAyICsKIGluY2x1ZGUvZHJtL3R0bS90
dG1fcG9vbC5oICAgICAgIHwgIDkwICsrKysrCiA1IGZpbGVzIGNoYW5nZWQsIDc2NCBpbnNlcnRp
b25zKCspLCAxIGRlbGV0aW9uKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJt
L3R0bS90dG1fcG9vbC5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9kcm0vdHRtL3R0bV9w
b29sLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdHRtL01ha2VmaWxlIGIvZHJpdmVy
cy9ncHUvZHJtL3R0bS9NYWtlZmlsZQppbmRleCA5MGMwZGE4OGNjOTguLjAwOTZiYWNiY2YzMiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL3R0bS9NYWtlZmlsZQorKysgYi9kcml2ZXJzL2dw
dS9kcm0vdHRtL01ha2VmaWxlCkBAIC01LDcgKzUsNyBAQAogdHRtLXkgOj0gdHRtX21lbW9yeS5v
IHR0bV90dC5vIHR0bV9iby5vIFwKIAl0dG1fYm9fdXRpbC5vIHR0bV9ib192bS5vIHR0bV9tb2R1
bGUubyBcCiAJdHRtX2V4ZWNidWZfdXRpbC5vIHR0bV9wYWdlX2FsbG9jLm8gdHRtX3JhbmdlX21h
bmFnZXIubyBcCi0JdHRtX3Jlc291cmNlLm8KKwl0dG1fcmVzb3VyY2UubyB0dG1fcG9vbC5vCiB0
dG0tJChDT05GSUdfQUdQKSArPSB0dG1fYWdwX2JhY2tlbmQubwogdHRtLSQoQ09ORklHX0RSTV9U
VE1fRE1BX1BBR0VfUE9PTCkgKz0gdHRtX3BhZ2VfYWxsb2NfZG1hLm8KIApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fbWVtb3J5LmMgYi9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0
bV9tZW1vcnkuYwppbmRleCA2OWNmNjIyZTc5ZTUuLjMwMTJkMDM4OGM1MSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL3R0bS90dG1fbWVtb3J5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3R0
bS90dG1fbWVtb3J5LmMKQEAgLTM4LDYgKzM4LDcgQEAKICNpbmNsdWRlIDxsaW51eC9tb2R1bGUu
aD4KICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiAjaW5jbHVkZSA8bGludXgvc3dhcC5oPgorI2lu
Y2x1ZGUgPGRybS90dG0vdHRtX3Bvb2wuaD4KIAogI2RlZmluZSBUVE1fTUVNT1JZX0FMTE9DX1JF
VFJJRVMgNAogCkBAIC00NTMsNiArNDU0LDcgQEAgaW50IHR0bV9tZW1fZ2xvYmFsX2luaXQoc3Ry
dWN0IHR0bV9tZW1fZ2xvYmFsICpnbG9iKQogCX0KIAl0dG1fcGFnZV9hbGxvY19pbml0KGdsb2Is
IGdsb2ItPnpvbmVfa2VybmVsLT5tYXhfbWVtLygyKlBBR0VfU0laRSkpOwogCXR0bV9kbWFfcGFn
ZV9hbGxvY19pbml0KGdsb2IsIGdsb2ItPnpvbmVfa2VybmVsLT5tYXhfbWVtLygyKlBBR0VfU0la
RSkpOworCXR0bV9wb29sX21ncl9pbml0KGdsb2ItPnpvbmVfa2VybmVsLT5tYXhfbWVtLygyKlBB
R0VfU0laRSkpOwogCXJldHVybiAwOwogb3V0X25vX3pvbmU6CiAJdHRtX21lbV9nbG9iYWxfcmVs
ZWFzZShnbG9iKTsKQEAgLTQ2Nyw2ICs0NjksNyBAQCB2b2lkIHR0bV9tZW1fZ2xvYmFsX3JlbGVh
c2Uoc3RydWN0IHR0bV9tZW1fZ2xvYmFsICpnbG9iKQogCS8qIGxldCB0aGUgcGFnZSBhbGxvY2F0
b3IgZmlyc3Qgc3RvcCB0aGUgc2hyaW5rIHdvcmsuICovCiAJdHRtX3BhZ2VfYWxsb2NfZmluaSgp
OwogCXR0bV9kbWFfcGFnZV9hbGxvY19maW5pKCk7CisJdHRtX3Bvb2xfbWdyX2ZpbmkoKTsKIAog
CWZsdXNoX3dvcmtxdWV1ZShnbG9iLT5zd2FwX3F1ZXVlKTsKIAlkZXN0cm95X3dvcmtxdWV1ZShn
bG9iLT5zd2FwX3F1ZXVlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRtX3Bv
b2wuYyBiL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRtX3Bvb2wuYwpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwMDAwMDAuLmQyNTcxMmUzYWQzYgotLS0gL2Rldi9udWxsCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS90dG0vdHRtX3Bvb2wuYwpAQCAtMCwwICsxLDY2OCBAQAorLy8gU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgT1IgTUlUCisvKgorICogQ29weXJpZ2h0IDIwMjAg
QWR2YW5jZWQgTWljcm8gRGV2aWNlcywgSW5jLgorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5
IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBj
b3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAo
dGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0
cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0cyB0byB1
c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2Us
CisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBl
cnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3Vi
amVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHly
aWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQg
aW4KKyAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJl
LgorICoKKyAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJB
TlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCisgKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5P
VCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKKyAqIEZJVE5F
U1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuICBJTiBOTyBF
VkVOVCBTSEFMTAorICogVEhFIENPUFlSSUdIVCBIT0xERVIoUykgT1IgQVVUSE9SKFMpIEJFIExJ
QUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SCisgKiBPVEhFUiBMSUFCSUxJVFksIFdIRVRI
RVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwKKyAqIEFSSVNJ
TkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhF
IFVTRSBPUgorICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgorICoKKyAqIEF1dGhv
cnM6IENocmlzdGlhbiBLw7ZuaWcKKyAqLworCisvKiBQb29saW5nIG9mIGFsbG9jYXRlZCBwYWdl
cyBpcyBuZWNlc3NhcnkgYmVjYXVzZSBjaGFuZ2luZyB0aGUgY2FjaGluZworICogYXR0cmlidXRl
cyBvbiB4ODYgb2YgdGhlIGxpbmVhciBtYXBwaW5nIHJlcXVpcmVzIGEgY29zdGx5IGNyb3NzIENQ
VSBUTEIKKyAqIGludmFsaWRhdGUgZm9yIHRob3NlIGFkZHJlc3Nlcy4KKyAqCisgKiBBZGRpdGlv
bmFsIHRvIHRoYXQgYWxsb2NhdGlvbnMgZnJvbSB0aGUgRE1BIGNvaGVyZW50IEFQSSBhcmUgcG9v
bGVkIGFzIHdlbGwKKyAqIGNhdXNlIHRoZXkgYXJlIHJhdGhlciBzbG93IGNvbXBhcmVkIHRvIGFs
bG9jX3BhZ2VzK21hcC4KKyAqLworCisjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CisjaW5jbHVk
ZSA8bGludXgvZG1hLW1hcHBpbmcuaD4KKworI2lmZGVmIENPTkZJR19YODYKKyNpbmNsdWRlIDxh
c20vc2V0X21lbW9yeS5oPgorI2VuZGlmCisKKyNpbmNsdWRlIDxkcm0vdHRtL3R0bV9wb29sLmg+
CisjaW5jbHVkZSA8ZHJtL3R0bS90dG1fYm9fZHJpdmVyLmg+CisjaW5jbHVkZSA8ZHJtL3R0bS90
dG1fdHQuaD4KKworLyoqCisgKiBzdHJ1Y3QgdHRtX3Bvb2xfZG1hIC0gSGVscGVyIG9iamVjdCBm
b3IgY29oZXJlbnQgRE1BIG1hcHBpbmdzCisgKgorICogQGFkZHI6IG9yaWdpbmFsIERNQSBhZGRy
ZXNzIHJldHVybmVkIGZvciB0aGUgbWFwcGluZworICogQHZhZGRyOiBvcmlnaW5hbCB2YWRkciBy
ZXR1cm4gZm9yIHRoZSBtYXBwaW5nIGFuZCBvcmRlciBpbiB0aGUgbG93ZXIgYml0cworICovCitz
dHJ1Y3QgdHRtX3Bvb2xfZG1hIHsKKwlkbWFfYWRkcl90IGFkZHI7CisJdW5zaWduZWQgbG9uZyB2
YWRkcjsKK307CisKK3N0YXRpYyB1bnNpZ25lZCBsb25nIHBhZ2VfcG9vbF9zaXplOworCitNT0RV
TEVfUEFSTV9ERVNDKHBhZ2VfcG9vbF9zaXplLCAiTnVtYmVyIG9mIHBhZ2VzIGluIHRoZSBXQy9V
Qy9ETUEgcG9vbCIpOworbW9kdWxlX3BhcmFtKHBhZ2VfcG9vbF9zaXplLCB1bG9uZywgMDY0NCk7
CisKK3N0YXRpYyBhdG9taWNfbG9uZ190IGFsbG9jYXRlZF9wYWdlczsKKworc3RhdGljIHN0cnVj
dCB0dG1fcG9vbF90eXBlIGdsb2JhbF93cml0ZV9jb21iaW5lZFtNQVhfT1JERVJdOworc3RhdGlj
IHN0cnVjdCB0dG1fcG9vbF90eXBlIGdsb2JhbF91bmNhY2hlZFtNQVhfT1JERVJdOworCitzdGF0
aWMgc3BpbmxvY2tfdCBzaHJpbmtlcl9sb2NrOworc3RhdGljIHN0cnVjdCBsaXN0X2hlYWQgc2hy
aW5rZXJfbGlzdDsKK3N0YXRpYyBzdHJ1Y3Qgc2hyaW5rZXIgbW1fc2hyaW5rZXI7CisKKy8qIEFs
bG9jYXRlIHBhZ2VzIG9mIHNpemUgMSA8PCBvcmRlciB3aXRoIHRoZSBnaXZlbiBnZnBfZmxhZ3Mg
Ki8KK3N0YXRpYyBzdHJ1Y3QgcGFnZSAqdHRtX3Bvb2xfYWxsb2NfcGFnZShzdHJ1Y3QgdHRtX3Bv
b2wgKnBvb2wsIGdmcF90IGdmcF9mbGFncywKKwkJCQkJdW5zaWduZWQgaW50IG9yZGVyKQorewor
CXVuc2lnbmVkIGxvbmcgYXR0ciA9IERNQV9BVFRSX0ZPUkNFX0NPTlRJR1VPVVM7CisJc3RydWN0
IHR0bV9wb29sX2RtYSAqZG1hOworCXN0cnVjdCBwYWdlICpwOworCXZvaWQgKnZhZGRyOworCisJ
aWYgKG9yZGVyKSB7CisJCWdmcF9mbGFncyB8PSBHRlBfVFJBTlNIVUdFX0xJR0hUIHwgX19HRlBf
Tk9SRVRSWSB8CisJCQlfX0dGUF9LU1dBUERfUkVDTEFJTTsKKwkJZ2ZwX2ZsYWdzICY9IH5fX0dG
UF9NT1ZBQkxFOworCQlnZnBfZmxhZ3MgJj0gfl9fR0ZQX0NPTVA7CisJfQorCisJaWYgKCFwb29s
LT51c2VfZG1hX2FsbG9jKSB7CisJCXAgPSBhbGxvY19wYWdlcyhnZnBfZmxhZ3MsIG9yZGVyKTsK
KwkJaWYgKHApCisJCQlwLT5wcml2YXRlID0gb3JkZXI7CisJCXJldHVybiBwOworCX0KKworCWRt
YSA9IGttYWxsb2Moc2l6ZW9mKCpkbWEpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWRtYSkKKwkJcmV0
dXJuIE5VTEw7CisKKwlpZiAob3JkZXIpCisJCWF0dHIgfD0gRE1BX0FUVFJfTk9fV0FSTjsKKwor
CXZhZGRyID0gZG1hX2FsbG9jX2F0dHJzKHBvb2wtPmRldiwgKDFVTEwgPDwgb3JkZXIpICogUEFH
RV9TSVpFLAorCQkJCSZkbWEtPmFkZHIsIGdmcF9mbGFncywgYXR0cik7CisJaWYgKCF2YWRkcikK
KwkJZ290byBlcnJvcl9mcmVlOworCisJLyogVE9ETzogVGhpcyBpcyBhbiBpbGxlZ2FsIGFidXNl
IG9mIHRoZSBETUEgQVBJLCBidXQgd2UgbmVlZCB0byByZXdvcmsKKwkgKiBUVE0gcGFnZSBmYXVs
dCBoYW5kbGluZyBhbmQgZXh0ZW5kIHRoZSBETUEgQVBJIHRvIGNsZWFuIHRoaXMgdXAuCisJICov
CisJaWYgKGlzX3ZtYWxsb2NfYWRkcih2YWRkcikpCisJCXAgPSB2bWFsbG9jX3RvX3BhZ2UodmFk
ZHIpOworCWVsc2UKKwkJcCA9IHZpcnRfdG9fcGFnZSh2YWRkcik7CisKKwlkbWEtPnZhZGRyID0g
KHVuc2lnbmVkIGxvbmcpdmFkZHIgfCBvcmRlcjsKKwlwLT5wcml2YXRlID0gKHVuc2lnbmVkIGxv
bmcpZG1hOworCXJldHVybiBwOworCitlcnJvcl9mcmVlOgorCWtmcmVlKGRtYSk7CisJcmV0dXJu
IE5VTEw7Cit9CisKKy8qIFJlc2V0IHRoZSBjYWNoaW5nIGFuZCBwYWdlcyBvZiBzaXplIDEgPDwg
b3JkZXIgKi8KK3N0YXRpYyB2b2lkIHR0bV9wb29sX2ZyZWVfcGFnZShzdHJ1Y3QgdHRtX3Bvb2wg
KnBvb2wsIGVudW0gdHRtX2NhY2hpbmcgY2FjaGluZywKKwkJCSAgICAgICB1bnNpZ25lZCBpbnQg
b3JkZXIsIHN0cnVjdCBwYWdlICpwKQoreworCXVuc2lnbmVkIGxvbmcgYXR0ciA9IERNQV9BVFRS
X0ZPUkNFX0NPTlRJR1VPVVM7CisJc3RydWN0IHR0bV9wb29sX2RtYSAqZG1hOworCXZvaWQgKnZh
ZGRyOworCisjaWZkZWYgQ09ORklHX1g4NgorCS8qIFdlIGRvbid0IGNhcmUgdGhhdCBzZXRfcGFn
ZXNfd2IgaXMgaW5lZmZpY2llbnQgaGVyZS4gVGhpcyBpcyBvbmx5CisJICogdXNlZCB3aGVuIHdl
IGhhdmUgdG8gc2hyaW5rIGFuZCBDUFUgb3ZlcmhlYWQgaXMgaXJyZWxldmFudCB0aGVuLgorCSAq
LworCWlmIChjYWNoaW5nICE9IHR0bV9jYWNoZWQgJiYgIVBhZ2VIaWdoTWVtKHApKQorCQlzZXRf
cGFnZXNfd2IocCwgMSA8PCBvcmRlcik7CisjZW5kaWYKKworCWlmICghcG9vbC0+dXNlX2RtYV9h
bGxvYykgeworCQlfX2ZyZWVfcGFnZXMocCwgb3JkZXIpOworCQlyZXR1cm47CisJfQorCisJaWYg
KG9yZGVyKQorCQlhdHRyIHw9IERNQV9BVFRSX05PX1dBUk47CisKKwlkbWEgPSAodm9pZCAqKXAt
PnByaXZhdGU7CisJdmFkZHIgPSAodm9pZCAqKShkbWEtPnZhZGRyICYgUEFHRV9NQVNLKTsKKwlk
bWFfZnJlZV9hdHRycyhwb29sLT5kZXYsICgxVUwgPDwgb3JkZXIpICogUEFHRV9TSVpFLCB2YWRk
ciwgZG1hLT5hZGRyLAorCQkgICAgICAgYXR0cik7CisJa2ZyZWUoZG1hKTsKK30KKworLyogQXBw
bHkgYSBuZXcgY2FjaGluZyB0byBhbiBhcnJheSBvZiBwYWdlcyAqLworc3RhdGljIGludCB0dG1f
cG9vbF9hcHBseV9jYWNoaW5nKHN0cnVjdCBwYWdlICoqZmlyc3QsIHN0cnVjdCBwYWdlICoqbGFz
dCwKKwkJCQkgIGVudW0gdHRtX2NhY2hpbmcgY2FjaGluZykKK3sKKyNpZmRlZiBDT05GSUdfWDg2
CisJdW5zaWduZWQgaW50IG51bV9wYWdlcyA9IGxhc3QgLSBmaXJzdDsKKworCWlmICghbnVtX3Bh
Z2VzKQorCQlyZXR1cm4gMDsKKworCXN3aXRjaCAoY2FjaGluZykgeworCWNhc2UgdHRtX2NhY2hl
ZDoKKwkJYnJlYWs7CisJY2FzZSB0dG1fd3JpdGVfY29tYmluZWQ6CisJCXJldHVybiBzZXRfcGFn
ZXNfYXJyYXlfd2MoZmlyc3QsIG51bV9wYWdlcyk7CisJY2FzZSB0dG1fdW5jYWNoZWQ6CisJCXJl
dHVybiBzZXRfcGFnZXNfYXJyYXlfdWMoZmlyc3QsIG51bV9wYWdlcyk7CisJfQorI2VuZGlmCisJ
cmV0dXJuIDA7Cit9CisKKy8qIE1hcCBwYWdlcyBvZiAxIDw8IG9yZGVyIHNpemUgYW5kIGZpbGwg
dGhlIERNQSBhZGRyZXNzIGFycmF5ICAqLworc3RhdGljIGludCB0dG1fcG9vbF9tYXAoc3RydWN0
IHR0bV9wb29sICpwb29sLCB1bnNpZ25lZCBpbnQgb3JkZXIsCisJCQlzdHJ1Y3QgcGFnZSAqcCwg
ZG1hX2FkZHJfdCAqKmRtYV9hZGRyKQoreworCWRtYV9hZGRyX3QgYWRkcjsKKwl1bnNpZ25lZCBp
bnQgaTsKKworCWlmIChwb29sLT51c2VfZG1hX2FsbG9jKSB7CisJCXN0cnVjdCB0dG1fcG9vbF9k
bWEgKmRtYSA9ICh2b2lkICopcC0+cHJpdmF0ZTsKKworCQlhZGRyID0gZG1hLT5hZGRyOworCX0g
ZWxzZSB7CisJCXNpemVfdCBzaXplID0gKDFVTEwgPDwgb3JkZXIpICogUEFHRV9TSVpFOworCisJ
CWFkZHIgPSBkbWFfbWFwX3BhZ2UocG9vbC0+ZGV2LCBwLCAwLCBzaXplLCBETUFfQklESVJFQ1RJ
T05BTCk7CisJCWlmIChkbWFfbWFwcGluZ19lcnJvcihwb29sLT5kZXYsICoqZG1hX2FkZHIpKQor
CQkJcmV0dXJuIC1FRkFVTFQ7CisJfQorCisJZm9yIChpID0gMSA8PCBvcmRlcjsgaSA7IC0taSkg
eworCQkqKCpkbWFfYWRkcikrKyA9IGFkZHI7CisJCWFkZHIgKz0gUEFHRV9TSVpFOworCX0KKwor
CXJldHVybiAwOworfQorCisvKiBVbm1hcCBwYWdlcyBvZiAxIDw8IG9yZGVyIHNpemUgKi8KK3N0
YXRpYyB2b2lkIHR0bV9wb29sX3VubWFwKHN0cnVjdCB0dG1fcG9vbCAqcG9vbCwgZG1hX2FkZHJf
dCBkbWFfYWRkciwKKwkJCSAgIHVuc2lnbmVkIGludCBudW1fcGFnZXMpCit7CisJLyogVW5tYXBw
ZWQgd2hpbGUgZnJlZWluZyB0aGUgcGFnZSAqLworCWlmIChwb29sLT51c2VfZG1hX2FsbG9jKQor
CQlyZXR1cm47CisKKwlkbWFfdW5tYXBfcGFnZShwb29sLT5kZXYsIGRtYV9hZGRyLCAobG9uZylu
dW1fcGFnZXMgPDwgUEFHRV9TSElGVCwKKwkJICAgICAgIERNQV9CSURJUkVDVElPTkFMKTsKK30K
KworLyogR2l2ZSBwYWdlcyBpbnRvIGEgc3BlY2lmaWMgcG9vbF90eXBlICovCitzdGF0aWMgdm9p
ZCB0dG1fcG9vbF90eXBlX2dpdmUoc3RydWN0IHR0bV9wb29sX3R5cGUgKnB0LCBzdHJ1Y3QgcGFn
ZSAqcCkKK3sKKwlzcGluX2xvY2soJnB0LT5sb2NrKTsKKwlsaXN0X2FkZCgmcC0+bHJ1LCAmcHQt
PnBhZ2VzKTsKKwlzcGluX3VubG9jaygmcHQtPmxvY2spOworCWF0b21pY19sb25nX2FkZCgxIDw8
IHB0LT5vcmRlciwgJmFsbG9jYXRlZF9wYWdlcyk7Cit9CisKKy8qIFRha2UgcGFnZXMgZnJvbSBh
IHNwZWNpZmljIHBvb2xfdHlwZSwgcmV0dXJuIE5VTEwgd2hlbiBub3RoaW5nIGF2YWlsYWJsZSAq
Lworc3RhdGljIHN0cnVjdCBwYWdlICp0dG1fcG9vbF90eXBlX3Rha2Uoc3RydWN0IHR0bV9wb29s
X3R5cGUgKnB0KQoreworCXN0cnVjdCBwYWdlICpwOworCisJc3Bpbl9sb2NrKCZwdC0+bG9jayk7
CisJcCA9IGxpc3RfZmlyc3RfZW50cnlfb3JfbnVsbCgmcHQtPnBhZ2VzLCB0eXBlb2YoKnApLCBs
cnUpOworCWlmIChwKSB7CisJCWF0b21pY19sb25nX3N1YigxIDw8IHB0LT5vcmRlciwgJmFsbG9j
YXRlZF9wYWdlcyk7CisJCWxpc3RfZGVsKCZwLT5scnUpOworCX0KKwlzcGluX3VubG9jaygmcHQt
PmxvY2spOworCisJcmV0dXJuIHA7Cit9CisKKy8qIENvdW50IHRoZSBudW1iZXIgb2YgcGFnZXMg
YXZhaWxhYmxlIGluIGEgcG9vbF90eXBlICovCitzdGF0aWMgdW5zaWduZWQgaW50IHR0bV9wb29s
X3R5cGVfY291bnQoc3RydWN0IHR0bV9wb29sX3R5cGUgKnB0KQoreworCXVuc2lnbmVkIGludCBj
b3VudCA9IDA7CisJc3RydWN0IHBhZ2UgKnA7CisKKwlzcGluX2xvY2soJnB0LT5sb2NrKTsKKwkv
KiBPbmx5IHVzZWQgZm9yIGRlYnVnZnMsIHRoZSBvdmVyaGVhZCBkb2Vzbid0IG1hdHRlciAqLwor
CWxpc3RfZm9yX2VhY2hfZW50cnkocCwgJnB0LT5wYWdlcywgbHJ1KQorCQkrK2NvdW50OworCXNw
aW5fdW5sb2NrKCZwdC0+bG9jayk7CisKKwlyZXR1cm4gY291bnQ7Cit9CisKKy8qIEluaXRpYWxp
emUgYW5kIGFkZCBhIHBvb2wgdHlwZSB0byB0aGUgZ2xvYmFsIHNocmlua2VyIGxpc3QgKi8KK3N0
YXRpYyB2b2lkIHR0bV9wb29sX3R5cGVfaW5pdChzdHJ1Y3QgdHRtX3Bvb2xfdHlwZSAqcHQsIHN0
cnVjdCB0dG1fcG9vbCAqcG9vbCwKKwkJCSAgICAgICBlbnVtIHR0bV9jYWNoaW5nIGNhY2hpbmcs
IHVuc2lnbmVkIGludCBvcmRlcikKK3sKKwlwdC0+cG9vbCA9IHBvb2w7CisJcHQtPmNhY2hpbmcg
PSBjYWNoaW5nOworCXB0LT5vcmRlciA9IG9yZGVyOworCXNwaW5fbG9ja19pbml0KCZwdC0+bG9j
ayk7CisJSU5JVF9MSVNUX0hFQUQoJnB0LT5wYWdlcyk7CisKKwlzcGluX2xvY2soJnNocmlua2Vy
X2xvY2spOworCWxpc3RfYWRkX3RhaWwoJnB0LT5zaHJpbmtlcl9saXN0LCAmc2hyaW5rZXJfbGlz
dCk7CisJc3Bpbl91bmxvY2soJnNocmlua2VyX2xvY2spOworfQorCisvKiBSZW1vdmUgYSBwb29s
X3R5cGUgZnJvbSB0aGUgZ2xvYmFsIHNocmlua2VyIGxpc3QgYW5kIGZyZWUgYWxsIHBhZ2VzICov
CitzdGF0aWMgdm9pZCB0dG1fcG9vbF90eXBlX2Zpbmkoc3RydWN0IHR0bV9wb29sX3R5cGUgKnB0
KQoreworCXN0cnVjdCBwYWdlICpwLCAqdG1wOworCisJc3Bpbl9sb2NrKCZzaHJpbmtlcl9sb2Nr
KTsKKwlsaXN0X2RlbCgmcHQtPnNocmlua2VyX2xpc3QpOworCXNwaW5fdW5sb2NrKCZzaHJpbmtl
cl9sb2NrKTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShwLCB0bXAsICZwdC0+cGFnZXMs
IGxydSkKKwkJdHRtX3Bvb2xfZnJlZV9wYWdlKHB0LT5wb29sLCBwdC0+Y2FjaGluZywgcHQtPm9y
ZGVyLCBwKTsKK30KKworLyogUmV0dXJuIHRoZSBwb29sX3R5cGUgdG8gdXNlIGZvciB0aGUgZ2l2
ZW4gY2FjaGluZyBhbmQgb3JkZXIgKi8KK3N0YXRpYyBzdHJ1Y3QgdHRtX3Bvb2xfdHlwZSAqdHRt
X3Bvb2xfc2VsZWN0X3R5cGUoc3RydWN0IHR0bV9wb29sICpwb29sLAorCQkJCQkJICBlbnVtIHR0
bV9jYWNoaW5nIGNhY2hpbmcsCisJCQkJCQkgIHVuc2lnbmVkIGludCBvcmRlcikKK3sKKwlpZiAo
cG9vbC0+dXNlX2RtYV9hbGxvYykKKwkJcmV0dXJuICZwb29sLT5jYWNoaW5nW2NhY2hpbmddLm9y
ZGVyc1tvcmRlcl07CisKKyNpZmRlZiBDT05GSUdfWDg2CisJc3dpdGNoIChjYWNoaW5nKSB7CisJ
Y2FzZSB0dG1fd3JpdGVfY29tYmluZWQ6CisJCXJldHVybiAmZ2xvYmFsX3dyaXRlX2NvbWJpbmVk
W29yZGVyXTsKKwljYXNlIHR0bV91bmNhY2hlZDoKKwkJcmV0dXJuICZnbG9iYWxfdW5jYWNoZWRb
b3JkZXJdOworCWRlZmF1bHQ6CisJCWJyZWFrOworCX0KKyNlbmRpZgorCisJcmV0dXJuIE5VTEw7
Cit9CisKKy8qIEZyZWUgcGFnZXMgdXNpbmcgdGhlIGdsb2JhbCBzaHJpbmtlciBsaXN0ICovCitz
dGF0aWMgdW5zaWduZWQgaW50IHR0bV9wb29sX3Nocmluayh2b2lkKQoreworCXN0cnVjdCB0dG1f
cG9vbF90eXBlICpwdDsKKwl1bnNpZ25lZCBpbnQgbnVtX2ZyZWVkOworCXN0cnVjdCBwYWdlICpw
OworCisJc3Bpbl9sb2NrKCZzaHJpbmtlcl9sb2NrKTsKKwlwdCA9IGxpc3RfZmlyc3RfZW50cnko
JnNocmlua2VyX2xpc3QsIHR5cGVvZigqcHQpLCBzaHJpbmtlcl9saXN0KTsKKworCXAgPSB0dG1f
cG9vbF90eXBlX3Rha2UocHQpOworCWlmIChwKSB7CisJCXR0bV9wb29sX2ZyZWVfcGFnZShwdC0+
cG9vbCwgcHQtPmNhY2hpbmcsIHB0LT5vcmRlciwgcCk7CisJCW51bV9mcmVlZCA9IDEgPDwgcHQt
Pm9yZGVyOworCX0gZWxzZSB7CisJCW51bV9mcmVlZCA9IDA7CisJfQorCisJbGlzdF9tb3ZlX3Rh
aWwoJnB0LT5zaHJpbmtlcl9saXN0LCAmc2hyaW5rZXJfbGlzdCk7CisJc3Bpbl91bmxvY2soJnNo
cmlua2VyX2xvY2spOworCisJcmV0dXJuIG51bV9mcmVlZDsKK30KKworLyogUmV0dXJuIHRoZSBh
bGxvY2F0aW9uIG9yZGVyIGJhc2VkIGZvciBhIHBhZ2UgKi8KK3N0YXRpYyB1bnNpZ25lZCBpbnQg
dHRtX3Bvb2xfcGFnZV9vcmRlcihzdHJ1Y3QgdHRtX3Bvb2wgKnBvb2wsIHN0cnVjdCBwYWdlICpw
KQoreworCWlmIChwb29sLT51c2VfZG1hX2FsbG9jKSB7CisJCXN0cnVjdCB0dG1fcG9vbF9kbWEg
KmRtYSA9ICh2b2lkICopcC0+cHJpdmF0ZTsKKworCQlyZXR1cm4gZG1hLT52YWRkciAmIH5QQUdF
X01BU0s7CisJfQorCisJcmV0dXJuIHAtPnByaXZhdGU7Cit9CisKKy8qKgorICogdHRtX3Bvb2xf
YWxsb2MgLSBGaWxsIGEgdHRtX3R0IG9iamVjdAorICoKKyAqIEBwb29sOiB0dG1fcG9vbCB0byB1
c2UKKyAqIEB0dDogdHRtX3R0IG9iamVjdCB0byBmaWxsCisgKiBAY3R4OiBvcGVyYXRpb24gY29u
dGV4dAorICoKKyAqIEZpbGwgdGhlIHR0bV90dCBvYmplY3Qgd2l0aCBwYWdlcyBhbmQgYWxzbyBt
YWtlIHN1cmUgdG8gRE1BIG1hcCB0aGVtIHdoZW4KKyAqIG5lY2Vzc2FyeS4KKyAqCisgKiBSZXR1
cm5zOiAwIG9uIHN1Y2Nlc3NlLCBuZWdhdGl2ZSBlcnJvciBjb2RlIG90aGVyd2lzZS4KKyAqLwor
aW50IHR0bV9wb29sX2FsbG9jKHN0cnVjdCB0dG1fcG9vbCAqcG9vbCwgc3RydWN0IHR0bV90dCAq
dHQsCisJCSAgIHN0cnVjdCB0dG1fb3BlcmF0aW9uX2N0eCAqY3R4KQoreworCXVuc2lnbmVkIGxv
bmcgbnVtX3BhZ2VzID0gdHQtPm51bV9wYWdlczsKKwlkbWFfYWRkcl90ICpkbWFfYWRkciA9IHR0
LT5kbWFfYWRkcmVzczsKKwlzdHJ1Y3QgcGFnZSAqKmNhY2hpbmcgPSB0dC0+cGFnZXM7CisJc3Ry
dWN0IHBhZ2UgKipwYWdlcyA9IHR0LT5wYWdlczsKKwlnZnBfdCBnZnBfZmxhZ3MgPSBHRlBfVVNF
UjsKKwl1bnNpZ25lZCBpbnQgaSwgb3JkZXI7CisJc3RydWN0IHBhZ2UgKnA7CisJaW50IHI7CisK
KwlXQVJOX09OKCFudW1fcGFnZXMgfHwgdHRtX3R0X2lzX3BvcHVsYXRlZCh0dCkpOworCVdBUk5f
T04oZG1hX2FkZHIgJiYgIXBvb2wtPmRldik7CisKKwlpZiAodHQtPnBhZ2VfZmxhZ3MgJiBUVE1f
UEFHRV9GTEFHX1pFUk9fQUxMT0MpCisJCWdmcF9mbGFncyB8PSBfX0dGUF9aRVJPOworCisJaWYg
KHR0LT5wYWdlX2ZsYWdzICYgVFRNX1BBR0VfRkxBR19OT19SRVRSWSkKKwkJZ2ZwX2ZsYWdzIHw9
IF9fR0ZQX1JFVFJZX01BWUZBSUw7CisKKwlpZiAocG9vbC0+dXNlX2RtYTMyKQorCQlnZnBfZmxh
Z3MgfD0gR0ZQX0RNQTMyOworCWVsc2UKKwkJZ2ZwX2ZsYWdzIHw9IEdGUF9ISUdIVVNFUjsKKwor
CWZvciAob3JkZXIgPSBtaW4oTUFYX09SREVSIC0gMVVMLCBfX2ZscyhudW1fcGFnZXMpKTsgbnVt
X3BhZ2VzOworCSAgICAgb3JkZXIgPSBtaW5fdCh1bnNpZ25lZCBpbnQsIG9yZGVyLCBfX2Zscyhu
dW1fcGFnZXMpKSkgeworCQlib29sIGFwcGx5X2NhY2hpbmcgPSBmYWxzZTsKKwkJc3RydWN0IHR0
bV9wb29sX3R5cGUgKnB0OworCisJCXB0ID0gdHRtX3Bvb2xfc2VsZWN0X3R5cGUocG9vbCwgdHQt
PmNhY2hpbmcsIG9yZGVyKTsKKwkJcCA9IHB0ID8gdHRtX3Bvb2xfdHlwZV90YWtlKHB0KSA6IE5V
TEw7CisJCWlmIChwKSB7CisJCQlhcHBseV9jYWNoaW5nID0gdHJ1ZTsKKwkJfSBlbHNlIHsKKwkJ
CXAgPSB0dG1fcG9vbF9hbGxvY19wYWdlKHBvb2wsIGdmcF9mbGFncywgb3JkZXIpOworCQkJaWYg
KHAgJiYgUGFnZUhpZ2hNZW0ocCkpCisJCQkJYXBwbHlfY2FjaGluZyA9IHRydWU7CisJCX0KKwor
CQlpZiAoIXApIHsKKwkJCWlmIChvcmRlcikgeworCQkJCS0tb3JkZXI7CisJCQkJY29udGludWU7
CisJCQl9CisJCQlyID0gLUVOT01FTTsKKwkJCWdvdG8gZXJyb3JfZnJlZV9hbGw7CisJCX0KKwor
CQlpZiAoYXBwbHlfY2FjaGluZykgeworCQkJciA9IHR0bV9wb29sX2FwcGx5X2NhY2hpbmcoY2Fj
aGluZywgcGFnZXMsCisJCQkJCQkgICB0dC0+Y2FjaGluZyk7CisJCQlpZiAocikKKwkJCQlnb3Rv
IGVycm9yX2ZyZWVfcGFnZTsKKwkJCWNhY2hpbmcgPSBwYWdlcyArICgxIDw8IG9yZGVyKTsKKwkJ
fQorCisJCXIgPSB0dG1fbWVtX2dsb2JhbF9hbGxvY19wYWdlKCZ0dG1fbWVtX2dsb2IsIHAsCisJ
CQkJCSAgICAgICgxIDw8IG9yZGVyKSAqIFBBR0VfU0laRSwKKwkJCQkJICAgICAgY3R4KTsKKwkJ
aWYgKHIpCisJCQlnb3RvIGVycm9yX2ZyZWVfcGFnZTsKKworCQlpZiAoZG1hX2FkZHIpIHsKKwkJ
CXIgPSB0dG1fcG9vbF9tYXAocG9vbCwgb3JkZXIsIHAsICZkbWFfYWRkcik7CisJCQlpZiAocikK
KwkJCQlnb3RvIGVycm9yX2dsb2JhbF9mcmVlOworCQl9CisKKwkJbnVtX3BhZ2VzIC09IDEgPDwg
b3JkZXI7CisJCWZvciAoaSA9IDEgPDwgb3JkZXI7IGk7IC0taSkKKwkJCSoocGFnZXMrKykgPSBw
Kys7CisJfQorCisJciA9IHR0bV9wb29sX2FwcGx5X2NhY2hpbmcoY2FjaGluZywgcGFnZXMsIHR0
LT5jYWNoaW5nKTsKKwlpZiAocikKKwkJZ290byBlcnJvcl9mcmVlX2FsbDsKKworCXJldHVybiAw
OworCitlcnJvcl9nbG9iYWxfZnJlZToKKwl0dG1fbWVtX2dsb2JhbF9mcmVlX3BhZ2UoJnR0bV9t
ZW1fZ2xvYiwgcCwgKDEgPDwgb3JkZXIpICogUEFHRV9TSVpFKTsKKworZXJyb3JfZnJlZV9wYWdl
OgorCXR0bV9wb29sX2ZyZWVfcGFnZShwb29sLCB0dC0+Y2FjaGluZywgb3JkZXIsIHApOworCitl
cnJvcl9mcmVlX2FsbDoKKwludW1fcGFnZXMgPSB0dC0+bnVtX3BhZ2VzIC0gbnVtX3BhZ2VzOwor
CWZvciAoaSA9IDA7IGkgPCBudW1fcGFnZXM7ICkgeworCQlvcmRlciA9IHR0bV9wb29sX3BhZ2Vf
b3JkZXIocG9vbCwgdHQtPnBhZ2VzW2ldKTsKKwkJdHRtX3Bvb2xfZnJlZV9wYWdlKHBvb2wsIHR0
LT5jYWNoaW5nLCBvcmRlciwgdHQtPnBhZ2VzW2ldKTsKKwkJaSArPSAxIDw8IG9yZGVyOworCX0K
KworCXJldHVybiByOworfQorRVhQT1JUX1NZTUJPTCh0dG1fcG9vbF9hbGxvYyk7CisKKy8qKgor
ICogdHRtX3Bvb2xfZnJlZSAtIEZyZWUgdGhlIGJhY2tpbmcgcGFnZXMgZnJvbSBhIHR0bV90dCBv
YmplY3QKKyAqCisgKiBAcG9vbDogUG9vbCB0byBnaXZlIHBhZ2VzIGJhY2sgdG8uCisgKiBAdHQ6
IHR0bV90dCBvYmplY3QgdG8gdW5wb3B1bGF0ZQorICoKKyAqIEdpdmUgdGhlIHBhY2tpbmcgcGFn
ZXMgYmFjayB0byBhIHBvb2wgb3IgZnJlZSB0aGVtCisgKi8KK3ZvaWQgdHRtX3Bvb2xfZnJlZShz
dHJ1Y3QgdHRtX3Bvb2wgKnBvb2wsIHN0cnVjdCB0dG1fdHQgKnR0KQoreworCXVuc2lnbmVkIGlu
dCBpOworCisJZm9yIChpID0gMDsgaSA8IHR0LT5udW1fcGFnZXM7ICkgeworCQlzdHJ1Y3QgcGFn
ZSAqcCA9IHR0LT5wYWdlc1tpXTsKKwkJdW5zaWduZWQgaW50IG9yZGVyLCBudW1fcGFnZXM7CisJ
CXN0cnVjdCB0dG1fcG9vbF90eXBlICpwdDsKKworCQlvcmRlciA9IHR0bV9wb29sX3BhZ2Vfb3Jk
ZXIocG9vbCwgcCk7CisJCW51bV9wYWdlcyA9IDFVTEwgPDwgb3JkZXI7CisJCXR0bV9tZW1fZ2xv
YmFsX2ZyZWVfcGFnZSgmdHRtX21lbV9nbG9iLCBwLAorCQkJCQkgbnVtX3BhZ2VzICogUEFHRV9T
SVpFKTsKKwkJaWYgKHR0LT5kbWFfYWRkcmVzcykKKwkJCXR0bV9wb29sX3VubWFwKHBvb2wsIHR0
LT5kbWFfYWRkcmVzc1tpXSwgbnVtX3BhZ2VzKTsKKworCQlwdCA9IHR0bV9wb29sX3NlbGVjdF90
eXBlKHBvb2wsIHR0LT5jYWNoaW5nLCBvcmRlcik7CisJCWlmIChwdCkKKwkJCXR0bV9wb29sX3R5
cGVfZ2l2ZShwdCwgdHQtPnBhZ2VzW2ldKTsKKwkJZWxzZQorCQkJdHRtX3Bvb2xfZnJlZV9wYWdl
KHBvb2wsIHR0LT5jYWNoaW5nLCBvcmRlciwKKwkJCQkJICAgdHQtPnBhZ2VzW2ldKTsKKworCQlp
ICs9IG51bV9wYWdlczsKKwl9CisKKwl3aGlsZSAoYXRvbWljX2xvbmdfcmVhZCgmYWxsb2NhdGVk
X3BhZ2VzKSA+IHBhZ2VfcG9vbF9zaXplKQorCQl0dG1fcG9vbF9zaHJpbmsoKTsKK30KK0VYUE9S
VF9TWU1CT0wodHRtX3Bvb2xfZnJlZSk7CisKKy8qKgorICogdHRtX3Bvb2xfaW5pdCAtIEluaXRp
YWxpemUgYSBwb29sCisgKgorICogQHBvb2w6IHRoZSBwb29sIHRvIGluaXRpYWxpemUKKyAqIEBk
ZXY6IGRldmljZSBmb3IgRE1BIGFsbG9jYXRpb25zIGFuZCBtYXBwaW5ncworICogQHVzZV9kbWFf
YWxsb2M6IHRydWUgaWYgY29oZXJlbnQgRE1BIGFsbG9jIHNob3VsZCBiZSB1c2VkCisgKiBAdXNl
X2RtYTMyOiB0cnVlIGlmIEdGUF9ETUEzMiBzaG91bGQgYmUgdXNlZAorICoKKyAqIEluaXRpYWxp
emUgdGhlIHBvb2wgYW5kIGl0cyBwb29sIHR5cGVzLgorICovCit2b2lkIHR0bV9wb29sX2luaXQo
c3RydWN0IHR0bV9wb29sICpwb29sLCBzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCSAgIGJvb2wgdXNl
X2RtYV9hbGxvYywgYm9vbCB1c2VfZG1hMzIpCit7CisJdW5zaWduZWQgaW50IGksIGo7CisKKwlX
QVJOX09OKCFkZXYgJiYgdXNlX2RtYV9hbGxvYyk7CisKKwlwb29sLT5kZXYgPSBkZXY7CisJcG9v
bC0+dXNlX2RtYV9hbGxvYyA9IHVzZV9kbWFfYWxsb2M7CisJcG9vbC0+dXNlX2RtYTMyID0gdXNl
X2RtYTMyOworCisJZm9yIChpID0gMDsgaSA8IFRUTV9OVU1fQ0FDSElOR19UWVBFUzsgKytpKQor
CQlmb3IgKGogPSAwOyBqIDwgTUFYX09SREVSOyArK2opCisJCQl0dG1fcG9vbF90eXBlX2luaXQo
JnBvb2wtPmNhY2hpbmdbaV0ub3JkZXJzW2pdLAorCQkJCQkgICBwb29sLCBpLCBqKTsKKworfQor
RVhQT1JUX1NZTUJPTCh0dG1fcG9vbF9pbml0KTsKKworLyoqCisgKiB0dG1fcG9vbF9maW5pIC0g
Q2xlYW51cCBhIHBvb2wKKyAqCisgKiBAcG9vbDogdGhlIHBvb2wgdG8gY2xlYW4gdXAKKyAqCisg
KiBGcmVlIGFsbCBwYWdlcyBpbiB0aGUgcG9vbCBhbmQgdW5yZWdpc3RlciB0aGUgdHlwZXMgZnJv
bSB0aGUgZ2xvYmFsCisgKiBzaHJpbmtlci4KKyAqLwordm9pZCB0dG1fcG9vbF9maW5pKHN0cnVj
dCB0dG1fcG9vbCAqcG9vbCkKK3sKKwl1bnNpZ25lZCBpbnQgaSwgajsKKworCWZvciAoaSA9IDA7
IGkgPCBUVE1fTlVNX0NBQ0hJTkdfVFlQRVM7ICsraSkKKwkJZm9yIChqID0gMDsgaiA8IE1BWF9P
UkRFUjsgKytqKQorCQkJdHRtX3Bvb2xfdHlwZV9maW5pKCZwb29sLT5jYWNoaW5nW2ldLm9yZGVy
c1tqXSk7Cit9CitFWFBPUlRfU1lNQk9MKHR0bV9wb29sX2ZpbmkpOworCisjaWZkZWYgQ09ORklH
X0RFQlVHX0ZTCisKKy8qIER1bXAgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGRpZmZlcmVudCBwb29s
IHR5cGVzICovCitzdGF0aWMgdm9pZCB0dG1fcG9vbF9kZWJ1Z2ZzX29yZGVycyhzdHJ1Y3QgdHRt
X3Bvb2xfdHlwZSAqcHQsCisJCQkJICAgIHN0cnVjdCBzZXFfZmlsZSAqbSkKK3sKKwl1bnNpZ25l
ZCBpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBNQVhfT1JERVI7ICsraSkKKwkJc2VxX3ByaW50
ZihtLCAiICU4dSIsIHR0bV9wb29sX3R5cGVfY291bnQoJnB0W2ldKSk7CisJc2VxX3B1dHMobSwg
IlxuIik7Cit9CisKKy8qKgorICogdHRtX3Bvb2xfZGVidWdmcyAtIERlYnVnZnMgZHVtcCBmdW5j
dGlvbiBmb3IgYSBwb29sCisgKgorICogQHBvb2w6IHRoZSBwb29sIHRvIGR1bXAgdGhlIGluZm9y
bWF0aW9uIGZvcgorICogQG06IHNlcV9maWxlIHRvIGR1bXAgdG8KKyAqCisgKiBNYWtlIGEgZGVi
dWdmcyBkdW1wIHdpdGggdGhlIHBlciBwb29sIGFuZCBnbG9iYWwgaW5mb3JtYXRpb24uCisgKi8K
K2ludCB0dG1fcG9vbF9kZWJ1Z2ZzKHN0cnVjdCB0dG1fcG9vbCAqcG9vbCwgc3RydWN0IHNlcV9m
aWxlICptKQoreworCXVuc2lnbmVkIGludCBpOworCisJc3Bpbl9sb2NrKCZzaHJpbmtlcl9sb2Nr
KTsKKworCXNlcV9wdXRzKG0sICJcdCAiKTsKKwlmb3IgKGkgPSAwOyBpIDwgTUFYX09SREVSOyAr
K2kpCisJCXNlcV9wcmludGYobSwgIiAtLS0lMnUtLS0iLCBpKTsKKwlzZXFfcHV0cyhtLCAiXG4i
KTsKKworCXNlcV9wdXRzKG0sICJ3Y1x0OiIpOworCXR0bV9wb29sX2RlYnVnZnNfb3JkZXJzKGds
b2JhbF93cml0ZV9jb21iaW5lZCwgbSk7CisJc2VxX3B1dHMobSwgInVjXHQ6Iik7CisJdHRtX3Bv
b2xfZGVidWdmc19vcmRlcnMoZ2xvYmFsX3VuY2FjaGVkLCBtKTsKKworCWZvciAoaSA9IDA7IGkg
PCBUVE1fTlVNX0NBQ0hJTkdfVFlQRVM7ICsraSkgeworCQlzZXFfcHV0cyhtLCAiRE1BICIpOwor
CQlzd2l0Y2ggKGkpIHsKKwkJY2FzZSB0dG1fY2FjaGVkOgorCQkJc2VxX3B1dHMobSwgIlx0OiIp
OworCQkJYnJlYWs7CisJCWNhc2UgdHRtX3dyaXRlX2NvbWJpbmVkOgorCQkJc2VxX3B1dHMobSwg
IndjXHQ6Iik7CisJCQlicmVhazsKKwkJY2FzZSB0dG1fdW5jYWNoZWQ6CisJCQlzZXFfcHV0cyht
LCAidWNcdDoiKTsKKwkJCWJyZWFrOworCQl9CisJCXR0bV9wb29sX2RlYnVnZnNfb3JkZXJzKHBv
b2wtPmNhY2hpbmdbaV0ub3JkZXJzLCBtKTsKKwl9CisKKwlzZXFfcHJpbnRmKG0sICJcbnRvdGFs
XHQ6ICU4bHUgb2YgJThsdVxuIiwKKwkJICAgYXRvbWljX2xvbmdfcmVhZCgmYWxsb2NhdGVkX3Bh
Z2VzKSwgcGFnZV9wb29sX3NpemUpOworCisJc3Bpbl91bmxvY2soJnNocmlua2VyX2xvY2spOwor
CisJcmV0dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKHR0bV9wb29sX2RlYnVnZnMpOworCisjZW5k
aWYKKworLyogQXMgbG9uZyBhcyBwYWdlcyBhcmUgYXZhaWxhYmxlIG1ha2Ugc3VyZSB0byByZWxl
YXNlIGF0IGxlYXN0IG9uZSAqLworc3RhdGljIHVuc2lnbmVkIGxvbmcgdHRtX3Bvb2xfc2hyaW5r
ZXJfc2NhbihzdHJ1Y3Qgc2hyaW5rZXIgKnNocmluaywKKwkJCQkJICAgIHN0cnVjdCBzaHJpbmtf
Y29udHJvbCAqc2MpCit7CisJdW5zaWduZWQgbG9uZyBudW1fZnJlZWQgPSAwOworCisJZG8KKwkJ
bnVtX2ZyZWVkICs9IHR0bV9wb29sX3NocmluaygpOworCXdoaWxlICghbnVtX2ZyZWVkICYmIGF0
b21pY19sb25nX3JlYWQoJmFsbG9jYXRlZF9wYWdlcykpOworCisJcmV0dXJuIG51bV9mcmVlZDsK
K30KKworLyogUmV0dXJuIHRoZSBudW1iZXIgb2YgcGFnZXMgYXZhaWxhYmxlIG9yIFNIUklOS19F
TVBUWSBpZiB3ZSBoYXZlIG5vbmUgKi8KK3N0YXRpYyB1bnNpZ25lZCBsb25nIHR0bV9wb29sX3No
cmlua2VyX2NvdW50KHN0cnVjdCBzaHJpbmtlciAqc2hyaW5rLAorCQkJCQkgICAgIHN0cnVjdCBz
aHJpbmtfY29udHJvbCAqc2MpCit7CisJdW5zaWduZWQgbG9uZyBudW1fcGFnZXMgPSBhdG9taWNf
bG9uZ19yZWFkKCZhbGxvY2F0ZWRfcGFnZXMpOworCisJcmV0dXJuIG51bV9wYWdlcyA/IG51bV9w
YWdlcyA6IFNIUklOS19FTVBUWTsKK30KKworLyoqCisgKiB0dG1fcG9vbF9tZ3JfaW5pdCAtIElu
aXRpYWxpemUgZ2xvYmFscworICoKKyAqIEBudW1fcGFnZXM6IGRlZmF1bHQgbnVtYmVyIG9mIHBh
Z2VzCisgKgorICogSW5pdGlhbGl6ZSB0aGUgZ2xvYmFsIGxvY2tzIGFuZCBsaXN0cyBmb3IgdGhl
IE1NIHNocmlua2VyLgorICovCitpbnQgdHRtX3Bvb2xfbWdyX2luaXQodW5zaWduZWQgbG9uZyBu
dW1fcGFnZXMpCit7CisJdW5zaWduZWQgaW50IGk7CisKKwlpZiAoIXBhZ2VfcG9vbF9zaXplKQor
CQlwYWdlX3Bvb2xfc2l6ZSA9IG51bV9wYWdlczsKKworCXNwaW5fbG9ja19pbml0KCZzaHJpbmtl
cl9sb2NrKTsKKwlJTklUX0xJU1RfSEVBRCgmc2hyaW5rZXJfbGlzdCk7CisKKwlmb3IgKGkgPSAw
OyBpIDwgTUFYX09SREVSOyArK2kpIHsKKwkJdHRtX3Bvb2xfdHlwZV9pbml0KCZnbG9iYWxfd3Jp
dGVfY29tYmluZWRbaV0sIE5VTEwsCisJCQkJICAgdHRtX3dyaXRlX2NvbWJpbmVkLCBpKTsKKwkJ
dHRtX3Bvb2xfdHlwZV9pbml0KCZnbG9iYWxfdW5jYWNoZWRbaV0sIE5VTEwsIHR0bV91bmNhY2hl
ZCwgaSk7CisJfQorCisJbW1fc2hyaW5rZXIuY291bnRfb2JqZWN0cyA9IHR0bV9wb29sX3Nocmlu
a2VyX2NvdW50OworCW1tX3Nocmlua2VyLnNjYW5fb2JqZWN0cyA9IHR0bV9wb29sX3Nocmlua2Vy
X3NjYW47CisJbW1fc2hyaW5rZXIuc2Vla3MgPSAxOworCXJldHVybiByZWdpc3Rlcl9zaHJpbmtl
cigmbW1fc2hyaW5rZXIpOworfQorCisvKioKKyAqIHR0bV9wb29sX21ncl9maW5pIC0gRmluYWxp
emUgZ2xvYmFscworICoKKyAqIENsZWFudXAgdGhlIGdsb2JhbCBwb29scyBhbmQgdW5yZWdpc3Rl
ciB0aGUgTU0gc2hyaW5rZXIuCisgKi8KK3ZvaWQgdHRtX3Bvb2xfbWdyX2Zpbmkodm9pZCkKK3sK
Kwl1bnNpZ25lZCBpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBNQVhfT1JERVI7ICsraSkgewor
CQl0dG1fcG9vbF90eXBlX2ZpbmkoJmdsb2JhbF93cml0ZV9jb21iaW5lZFtpXSk7CisJCXR0bV9w
b29sX3R5cGVfZmluaSgmZ2xvYmFsX3VuY2FjaGVkW2ldKTsKKwl9CisKKwl1bnJlZ2lzdGVyX3No
cmlua2VyKCZtbV9zaHJpbmtlcik7CisJV0FSTl9PTighbGlzdF9lbXB0eSgmc2hyaW5rZXJfbGlz
dCkpOworfQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9kcm0vdHRtL3R0bV9jYWNoaW5nLmggYi9pbmNs
dWRlL2RybS90dG0vdHRtX2NhY2hpbmcuaAppbmRleCAxNjE2MjRkY2Y2YmUuLmEwYjRhNDlmYTQz
MiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9kcm0vdHRtL3R0bV9jYWNoaW5nLmgKKysrIGIvaW5jbHVk
ZS9kcm0vdHRtL3R0bV9jYWNoaW5nLmgKQEAgLTI1LDYgKzI1LDggQEAKICNpZm5kZWYgX1RUTV9D
QUNISU5HX0hfCiAjZGVmaW5lIF9UVE1fQ0FDSElOR19IXwogCisjZGVmaW5lIFRUTV9OVU1fQ0FD
SElOR19UWVBFUwkzCisKIGVudW0gdHRtX2NhY2hpbmcgewogCXR0bV91bmNhY2hlZCwKIAl0dG1f
d3JpdGVfY29tYmluZWQsCmRpZmYgLS1naXQgYS9pbmNsdWRlL2RybS90dG0vdHRtX3Bvb2wuaCBi
L2luY2x1ZGUvZHJtL3R0bS90dG1fcG9vbC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAwMC4uYzZiZmQ4MzIyZmUxCi0tLSAvZGV2L251bGwKKysrIGIvaW5jbHVkZS9kcm0v
dHRtL3R0bV9wb29sLmgKQEAgLTAsMCArMSw5MCBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAgT1IgTUlUICovCisvKgorICogQ29weXJpZ2h0IDIwMjAgQWR2YW5jZWQgTWlj
cm8gRGV2aWNlcywgSW5jLgorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZy
ZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMg
c29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2Fy
ZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5j
bHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1v
ZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsCisgKiBhbmQvb3Ig
c2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hv
bSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUg
Zm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2Ug
YW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KKyAqIGFsbCBj
b3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgorICoKKyAqIFRI
RSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL
SU5ELCBFWFBSRVNTIE9SCisgKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRP
IFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKKyAqIEZJVE5FU1MgRk9SIEEgUEFS
VElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuICBJTiBOTyBFVkVOVCBTSEFMTAor
ICogVEhFIENPUFlSSUdIVCBIT0xERVIoUykgT1IgQVVUSE9SKFMpIEJFIExJQUJMRSBGT1IgQU5Z
IENMQUlNLCBEQU1BR0VTIE9SCisgKiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNU
SU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwKKyAqIEFSSVNJTkcgRlJPTSwgT1VU
IE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUgorICog
T1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgorICoKKyAqIEF1dGhvcnM6IENocmlzdGlh
biBLw7ZuaWcKKyAqLworCisjaWZuZGVmIF9UVE1fUEFHRV9QT09MX0hfCisjZGVmaW5lIF9UVE1f
UEFHRV9QT09MX0hfCisKKyNpbmNsdWRlIDxsaW51eC9tbXpvbmUuaD4KKyNpbmNsdWRlIDxsaW51
eC9sbGlzdC5oPgorI2luY2x1ZGUgPGRybS90dG0vdHRtX2NhY2hpbmcuaD4KKworc3RydWN0IGRl
dmljZTsKK3N0cnVjdCB0dG1fdHQ7CitzdHJ1Y3QgdHRtX3Bvb2w7CitzdHJ1Y3QgdHRtX29wZXJh
dGlvbl9jdHg7CisKKy8qKgorICogdHRtX3Bvb2xfdHlwZSAtIFBvb2wgZm9yIGEgY2VydGFpbiBt
ZW1vcnkgdHlwZQorICoKKyAqIEBwb29sOiB0aGUgcG9vbCB3ZSBiZWxvbmcgdG8sIG1pZ2h0IGJl
IE5VTEwgZm9yIHRoZSBnbG9iYWwgb25lcworICogQG9yZGVyOiB0aGUgYWxsb2NhdGlvbiBvcmRl
ciBvdXIgcGFnZXMgaGF2ZQorICogQGNhY2hpbmc6IHRoZSBjYWNoaW5nIHR5cGUgb3VyIHBhZ2Vz
IGhhdmUKKyAqIEBzaHJpbmtlcl9saXN0OiBvdXIgcGxhY2Ugb24gdGhlIGdsb2JhbCBzaHJpbmtl
ciBsaXN0CisgKiBAbG9jazogcHJvdGVjdGlvbiBvZiB0aGUgcGFnZSBsaXN0CisgKiBAcGFnZXM6
IHRoZSBsaXN0IG9mIHBhZ2VzIGluIHRoZSBwb29sCisgKi8KK3N0cnVjdCB0dG1fcG9vbF90eXBl
IHsKKwlzdHJ1Y3QgdHRtX3Bvb2wgKnBvb2w7CisJdW5zaWduZWQgaW50IG9yZGVyOworCWVudW0g
dHRtX2NhY2hpbmcgY2FjaGluZzsKKworCXN0cnVjdCBsaXN0X2hlYWQgc2hyaW5rZXJfbGlzdDsK
KworCXNwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgbGlzdF9oZWFkIHBhZ2VzOworfTsKKworLyoq
CisgKiB0dG1fcG9vbCAtIFBvb2wgZm9yIGFsbCBjYWNoaW5nIGFuZCBvcmRlcnMKKyAqCisgKiBA
dXNlX2RtYV9hbGxvYzogaWYgY29oZXJlbnQgRE1BIGFsbG9jYXRpb25zIHNob3VsZCBiZSB1c2Vk
CisgKiBAdXNlX2RtYTMyOiBpZiBHRlBfRE1BMzIgc2hvdWxkIGJlIHVzZWQKKyAqIEBjYWNoaW5n
OiBwb29scyBmb3IgZWFjaCBjYWNoaW5nL29yZGVyCisgKi8KK3N0cnVjdCB0dG1fcG9vbCB7CisJ
c3RydWN0IGRldmljZSAqZGV2OworCisJYm9vbCB1c2VfZG1hX2FsbG9jOworCWJvb2wgdXNlX2Rt
YTMyOworCisJc3RydWN0IHsKKwkJc3RydWN0IHR0bV9wb29sX3R5cGUgb3JkZXJzW01BWF9PUkRF
Ul07CisJfSBjYWNoaW5nW1RUTV9OVU1fQ0FDSElOR19UWVBFU107Cit9OworCitpbnQgdHRtX3Bv
b2xfYWxsb2Moc3RydWN0IHR0bV9wb29sICpwb29sLCBzdHJ1Y3QgdHRtX3R0ICp0dCwKKwkJICAg
c3RydWN0IHR0bV9vcGVyYXRpb25fY3R4ICpjdHgpOwordm9pZCB0dG1fcG9vbF9mcmVlKHN0cnVj
dCB0dG1fcG9vbCAqcG9vbCwgc3RydWN0IHR0bV90dCAqdHQpOworCit2b2lkIHR0bV9wb29sX2lu
aXQoc3RydWN0IHR0bV9wb29sICpwb29sLCBzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCSAgIGJvb2wg
dXNlX2RtYV9hbGxvYywgYm9vbCB1c2VfZG1hMzIpOwordm9pZCB0dG1fcG9vbF9maW5pKHN0cnVj
dCB0dG1fcG9vbCAqcG9vbCk7CisKK2ludCB0dG1fcG9vbF9kZWJ1Z2ZzKHN0cnVjdCB0dG1fcG9v
bCAqcG9vbCwgc3RydWN0IHNlcV9maWxlICptKTsKKworaW50IHR0bV9wb29sX21ncl9pbml0KHVu
c2lnbmVkIGxvbmcgbnVtX3BhZ2VzKTsKK3ZvaWQgdHRtX3Bvb2xfbWdyX2Zpbmkodm9pZCk7CisK
KyNlbmRpZgotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0cy5mcmVlZGVz
a3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9k
cmktZGV2ZWwK
