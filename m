Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 62030B63E8
	for <lists+dri-devel@lfdr.de>; Wed, 18 Sep 2019 14:59:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8664689C54;
	Wed, 18 Sep 2019 12:59:43 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from pio-pvt-msa2.bahnhof.se (pio-pvt-msa2.bahnhof.se [79.136.2.41])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 447876EF34
 for <dri-devel@lists.freedesktop.org>; Wed, 18 Sep 2019 12:59:35 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by pio-pvt-msa2.bahnhof.se (Postfix) with ESMTP id 52BE43FBB0;
 Wed, 18 Sep 2019 14:59:28 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -2.099
X-Spam-Level: 
X-Spam-Status: No, score=-2.099 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, URIBL_BLOCKED=0.001]
 autolearn=ham autolearn_force=no
Received: from pio-pvt-msa2.bahnhof.se ([127.0.0.1])
 by localhost (pio-pvt-msa2.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id J6g-nBY-BBV3; Wed, 18 Sep 2019 14:59:27 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by pio-pvt-msa2.bahnhof.se (Postfix) with ESMTPA id AAB473F746;
 Wed, 18 Sep 2019 14:59:24 +0200 (CEST)
Received: from localhost.localdomain.localdomain
 (h-205-35.A357.priv.bahnhof.se [155.4.205.35])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 18D413602D9;
 Wed, 18 Sep 2019 14:59:24 +0200 (CEST)
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m=20=28VMware=29?=
 <thomas_os@shipmail.org>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org
Subject: [PATCH 1/7] mm: Add write-protect and clean utilities for address
 space ranges
Date: Wed, 18 Sep 2019 14:59:08 +0200
Message-Id: <20190918125914.38497-2-thomas_os@shipmail.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190918125914.38497-1-thomas_os@shipmail.org>
References: <20190918125914.38497-1-thomas_os@shipmail.org>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=shipmail.org; s=mail; 
 t=1568811564; bh=8endBo4LYeRXjKpQW+eclcRDwX2DG11DoosCTAG8UE8=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=L9GUFdT6PefsBIiZsfCr9qPb1w/PpHYQ2WRSZi1zMMn55SxVWMIdnNaO7Vbs5y0qP
 qfN0To//3d1Rit4sPvLhpO15DQnew7ORKTsQrwVjlJALXDaqs3pJaO2aTIzZMjUzsY
 e+1uzuDjV2GxMtg49NJOxESG8d8iVnRQBq6Vccso=
X-Mailman-Original-Authentication-Results: pio-pvt-msa2.bahnhof.se;
 dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b=L9GUFdT6; 
 dkim-atps=neutral
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Thomas Hellstrom <thellstrom@vmware.com>, Michal Hocko <mhocko@suse.com>,
 Rik van Riel <riel@surriel.com>, pv-drivers@vmware.com,
 Minchan Kim <minchan@kernel.org>, Will Deacon <will.deacon@arm.com>,
 Ralph Campbell <rcampbell@nvidia.com>, Matthew Wilcox <willy@infradead.org>,
 Peter Zijlstra <peterz@infradead.org>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 linux-graphics-maintainer@vmware.com, Souptick Joarder <jrdr.linux@gmail.com>,
 Huang Ying <ying.huang@intel.com>, Andrew Morton <akpm@linux-foundation.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogVGhvbWFzIEhlbGxzdHJvbSA8dGhlbGxzdHJvbUB2bXdhcmUuY29tPgoKQWRkIHR3byB1
dGlsaXRpZXMgdG8gYSkgd3JpdGUtcHJvdGVjdCBhbmQgYikgY2xlYW4gYWxsIHB0ZXMgcG9pbnRp
bmcgaW50bwphIHJhbmdlIG9mIGFuIGFkZHJlc3Mgc3BhY2UuClRoZSB1dGlsaXRpZXMgYXJlIGlu
dGVuZGVkIHRvIGFpZCBpbiB0cmFja2luZyBkaXJ0eSBwYWdlcyAoZWl0aGVyCmRyaXZlci1hbGxv
Y2F0ZWQgc3lzdGVtIG1lbW9yeSBvciBwY2kgZGV2aWNlIG1lbW9yeSkuClRoZSB3cml0ZS1wcm90
ZWN0IHV0aWxpdHkgc2hvdWxkIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aApwYWdlX21rd3Jp
dGUoKSBhbmQgcGZuX21rd3JpdGUoKSB0byB0cmlnZ2VyIHdyaXRlIHBhZ2UtZmF1bHRzIG9uIHBh
Z2UKYWNjZXNzZXMuIFR5cGljYWxseSBvbmUgd291bGQgd2FudCB0byB1c2UgdGhpcyBvbiBzcGFy
c2UgYWNjZXNzZXMgaW50bwpsYXJnZSBtZW1vcnkgcmVnaW9ucy4gVGhlIGNsZWFuIHV0aWxpdHkg
c2hvdWxkIGJlIHVzZWQgdG8gdXRpbGl6ZQpoYXJkd2FyZSBkaXJ0eWluZyBmdW5jdGlvbmFsaXR5
IGFuZCBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgcGFnZS1mYXVsdHMsCnR5cGljYWxseSBvbiBsYXJn
ZSBhY2Nlc3NlcyBpbnRvIHNtYWxsIG1lbW9yeSByZWdpb25zLgoKVGhlIGFkZGVkIGZpbGUgImFz
X2RpcnR5X2hlbHBlcnMuYyIgaXMgaW5pdGlhbGx5IGxpc3RlZCBhcyBtYWludGFpbmVkIGJ5ClZN
d2FyZSB1bmRlciBvdXIgRFJNIGRyaXZlci4gSWYgc29tZWJvZHkgd291bGQgbGlrZSBpdCBlbHNl
d2hlcmUsCnRoYXQncyBvZiBjb3Vyc2Ugbm8gcHJvYmxlbS4KCkNjOiBBbmRyZXcgTW9ydG9uIDxh
a3BtQGxpbnV4LWZvdW5kYXRpb24ub3JnPgpDYzogTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJh
ZGVhZC5vcmc+CkNjOiBXaWxsIERlYWNvbiA8d2lsbC5kZWFjb25AYXJtLmNvbT4KQ2M6IFBldGVy
IFppamxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KQ2M6IFJpayB2YW4gUmllbCA8cmllbEBz
dXJyaWVsLmNvbT4KQ2M6IE1pbmNoYW4gS2ltIDxtaW5jaGFuQGtlcm5lbC5vcmc+CkNjOiBNaWNo
YWwgSG9ja28gPG1ob2Nrb0BzdXNlLmNvbT4KQ2M6IEh1YW5nIFlpbmcgPHlpbmcuaHVhbmdAaW50
ZWwuY29tPgpDYzogU291cHRpY2sgSm9hcmRlciA8anJkci5saW51eEBnbWFpbC5jb20+CkNjOiAi
SsOpcsO0bWUgR2xpc3NlIiA8amdsaXNzZUByZWRoYXQuY29tPgpDYzogbGludXgtbW1Aa3ZhY2su
b3JnCkNjOiBsaW51eC1rZXJuZWxAdmdlci5rZXJuZWwub3JnCgpTaWduZWQtb2ZmLWJ5OiBUaG9t
YXMgSGVsbHN0cm9tIDx0aGVsbHN0cm9tQHZtd2FyZS5jb20+ClJldmlld2VkLWJ5OiBSYWxwaCBD
YW1wYmVsbCA8cmNhbXBiZWxsQG52aWRpYS5jb20+ICN2MQotLS0KIE1BSU5UQUlORVJTICAgICAg
ICAgICB8ICAgMSArCiBpbmNsdWRlL2xpbnV4L21tLmggICAgfCAgMTMgKy0KIG1tL0tjb25maWcg
ICAgICAgICAgICB8ICAgMyArCiBtbS9NYWtlZmlsZSAgICAgICAgICAgfCAgIDEgKwogbW0vYXNf
ZGlydHlfaGVscGVycy5jIHwgMzkyICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCA0MDkgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigt
KQogY3JlYXRlIG1vZGUgMTAwNjQ0IG1tL2FzX2RpcnR5X2hlbHBlcnMuYwoKZGlmZiAtLWdpdCBh
L01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggYzJkOTc1ZGE1NjFmLi5iNTk2YzdjZjRh
ODUgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5UQUlORVJTCkBAIC01Mjg3LDYg
KzUyODcsNyBAQCBUOglnaXQgZ2l0Oi8vcGVvcGxlLmZyZWVkZXNrdG9wLm9yZy9+dGhvbWFzaC9s
aW51eAogUzoJU3VwcG9ydGVkCiBGOglkcml2ZXJzL2dwdS9kcm0vdm13Z2Z4LwogRjoJaW5jbHVk
ZS91YXBpL2RybS92bXdnZnhfZHJtLmgKK0Y6CW1tL2FzX2RpcnR5X2hlbHBlcnMuYwogCiBEUk0g
RFJJVkVSUwogTToJRGF2aWQgQWlybGllIDxhaXJsaWVkQGxpbnV4LmllPgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9tbS5oIGIvaW5jbHVkZS9saW51eC9tbS5oCmluZGV4IDAzMzRjYTk3YzU4
NC4uMjdmZjM0MWVjYmRjIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKKysrIGIvaW5j
bHVkZS9saW51eC9tbS5oCkBAIC0yNjU3LDcgKzI2NTcsNiBAQCB0eXBlZGVmIGludCAoKnB0ZV9m
bl90KShwdGVfdCAqcHRlLCB1bnNpZ25lZCBsb25nIGFkZHIsIHZvaWQgKmRhdGEpOwogZXh0ZXJu
IGludCBhcHBseV90b19wYWdlX3JhbmdlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBs
b25nIGFkZHJlc3MsCiAJCQkgICAgICAgdW5zaWduZWQgbG9uZyBzaXplLCBwdGVfZm5fdCBmbiwg
dm9pZCAqZGF0YSk7CiAKLQogI2lmZGVmIENPTkZJR19QQUdFX1BPSVNPTklORwogZXh0ZXJuIGJv
b2wgcGFnZV9wb2lzb25pbmdfZW5hYmxlZCh2b2lkKTsKIGV4dGVybiB2b2lkIGtlcm5lbF9wb2lz
b25fcGFnZXMoc3RydWN0IHBhZ2UgKnBhZ2UsIGludCBudW1wYWdlcywgaW50IGVuYWJsZSk7CkBA
IC0yODkxLDUgKzI4OTAsMTcgQEAgdm9pZCBfX2luaXQgc2V0dXBfbnJfbm9kZV9pZHModm9pZCk7
CiBzdGF0aWMgaW5saW5lIHZvaWQgc2V0dXBfbnJfbm9kZV9pZHModm9pZCkge30KICNlbmRpZgog
CisjaWZkZWYgQ09ORklHX0FTX0RJUlRZX0hFTFBFUlMKK3Vuc2lnbmVkIGxvbmcgYXBwbHlfYXNf
Y2xlYW4oc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgIHBnb2ZmX3QgZmly
c3RfaW5kZXgsIHBnb2ZmX3QgbnIsCisJCQkgICAgIHBnb2ZmX3QgYml0bWFwX3Bnb2ZmLAorCQkJ
ICAgICB1bnNpZ25lZCBsb25nICpiaXRtYXAsCisJCQkgICAgIHBnb2ZmX3QgKnN0YXJ0LAorCQkJ
ICAgICBwZ29mZl90ICplbmQpOworCit1bnNpZ25lZCBsb25nIGFwcGx5X2FzX3dycHJvdGVjdChz
dHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCQkgcGdvZmZfdCBmaXJzdF9pbmRleCwg
cGdvZmZfdCBucik7CisjZW5kaWYKKwogI2VuZGlmIC8qIF9fS0VSTkVMX18gKi8KICNlbmRpZiAv
KiBfTElOVVhfTU1fSCAqLwpkaWZmIC0tZ2l0IGEvbW0vS2NvbmZpZyBiL21tL0tjb25maWcKaW5k
ZXggNTZjZWM2MzZhMWZjLi41OTQzNTBlOWQ3OGUgMTAwNjQ0Ci0tLSBhL21tL0tjb25maWcKKysr
IGIvbW0vS2NvbmZpZwpAQCAtNzM2LDQgKzczNiw3IEBAIGNvbmZpZyBBUkNIX0hBU19QVEVfU1BF
Q0lBTAogY29uZmlnIEFSQ0hfSEFTX0hVR0VQRAogCWJvb2wKIAorY29uZmlnIEFTX0RJUlRZX0hF
TFBFUlMKKyAgICAgICAgYm9vbAorCiBlbmRtZW51CmRpZmYgLS1naXQgYS9tbS9NYWtlZmlsZSBi
L21tL01ha2VmaWxlCmluZGV4IGQwYjI5NWMzYjc2NC4uNDA4NmYxZWVmYmM2IDEwMDY0NAotLS0g
YS9tbS9NYWtlZmlsZQorKysgYi9tbS9NYWtlZmlsZQpAQCAtMTA1LDMgKzEwNSw0IEBAIG9iai0k
KENPTkZJR19QRVJDUFVfU1RBVFMpICs9IHBlcmNwdS1zdGF0cy5vCiBvYmotJChDT05GSUdfWk9O
RV9ERVZJQ0UpICs9IG1lbXJlbWFwLm8KIG9iai0kKENPTkZJR19ITU1fTUlSUk9SKSArPSBobW0u
bwogb2JqLSQoQ09ORklHX01FTUZEX0NSRUFURSkgKz0gbWVtZmQubworb2JqLSQoQ09ORklHX0FT
X0RJUlRZX0hFTFBFUlMpICs9IGFzX2RpcnR5X2hlbHBlcnMubwpkaWZmIC0tZ2l0IGEvbW0vYXNf
ZGlydHlfaGVscGVycy5jIGIvbW0vYXNfZGlydHlfaGVscGVycy5jCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZDRjYzM3ZGNiMTQ0Ci0tLSAvZGV2L251bGwKKysrIGIv
bW0vYXNfZGlydHlfaGVscGVycy5jCkBAIC0wLDAgKzEsMzkyIEBACisvLyBTUERYLUxpY2Vuc2Ut
SWRlbnRpZmllcjogR1BMLTIuMAorI2luY2x1ZGUgPGxpbnV4L21tLmg+CisjaW5jbHVkZSA8bGlu
dXgvbW1fdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9odWdldGxiLmg+CisjaW5jbHVkZSA8bGlu
dXgvYml0b3BzLmg+CisjaW5jbHVkZSA8bGludXgvbW11X25vdGlmaWVyLmg+CisjaW5jbHVkZSA8
YXNtL2NhY2hlZmx1c2guaD4KKyNpbmNsdWRlIDxhc20vdGxiZmx1c2guaD4KKworLyoqCisgKiBz
dHJ1Y3QgYXNfd2FsayAtIEFyZ3VtZW50IHRvIHN0cnVjdCBhc193YWxrX29wcyBjYWxsYmFja3Mu
CisgKiBAdm1hOiBQb2ludGVyIHRvIHRoZSBzdHJ1Y3Qgdm13X2FyZWFfc3RydWN0IGN1cnJlbnRs
eSBiZWluZyB3YWxrZWQuCisgKgorICogRW1iZWRkYWJsZSBhcmd1bWVudCB0byBzdHJ1Y3QgYXNf
d2Fsa19vcHMgY2FsbGJhY2tzLgorICovCitzdHJ1Y3QgYXNfd2FsayB7CisJc3RydWN0IHZtX2Fy
ZWFfc3RydWN0ICp2bWE7Cit9OworCisvKioKKyAqIHN0cnVjdCBhc193YWxrX29wcyAtIENhbGxi
YWNrcyBmb3IgZW50cmllcyBvZiB2YXJpb3VzIHBhZ2UgdGFibGUgbGV2ZWxzLgorICogZXh0ZW5k
IGZvciBhZGRpdGlvbmFsIGxldmVsIHN1cHBvcnQuCisgKi8KK3N0cnVjdCBhc193YWxrX29wcyB7
CisJLyoqCisJICogcHRlLWVudHJ5OiBDYWxsYmFjayBmb3IgUFRFcworCSAqIEBwdGU6IFBvaW50
ZXIgdG8gdGhlIFBURS4KKwkgKiBAYWRkcjogVmlydHVhbCBhZGRyZXNzLgorCSAqIEBhc3c6IFN0
cnVjdCBhc193YWxrIGFyZ3VtZW50IGZvciB0aGUgd2Fsay4gRW1iZWQgZm9yIGFkZGl0aW9uYWwK
KwkgKiBkYXRhLgorCSAqLworCXZvaWQgKCpjb25zdCBwdGVfZW50cnkpIChwdGVfdCAqcHRlLCB1
bnNpZ25lZCBsb25nIGFkZHIsCisJCQkJIHN0cnVjdCBhc193YWxrICphc3cpOworfTsKKworLyog
UGFnZS13YWxraW5nIGNvZGUgKi8KK3N0YXRpYyB2b2lkIHdhbGtfYXNfcHRlX3JhbmdlKHBtZF90
ICpwbWQsIHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBlbmQsCisJCQkgICAgICBj
b25zdCBzdHJ1Y3QgYXNfd2Fsa19vcHMgKm9wcywKKwkJCSAgICAgIHN0cnVjdCBhc193YWxrICph
c3cpCit7CisJc3RydWN0IG1tX3N0cnVjdCAqbW0gPSBhc3ctPnZtYS0+dm1fbW07CisJcHRlX3Qg
KnB0ZTsKKwlzcGlubG9ja190ICpwdGw7CisKKwlwdGUgPSAobW0gPT0gJmluaXRfbW0pID8KKwkJ
cHRlX29mZnNldF9rZXJuZWwocG1kLCBhZGRyKSA6CisJCXB0ZV9vZmZzZXRfbWFwX2xvY2sobW0s
IHBtZCwgYWRkciwgJnB0bCk7CisKKwlhcmNoX2VudGVyX2xhenlfbW11X21vZGUoKTsKKworCWRv
IHsKKwkJb3BzLT5wdGVfZW50cnkocHRlKyssIGFkZHIsIGFzdyk7CisJfSB3aGlsZSAoYWRkciAr
PSBQQUdFX1NJWkUsIGFkZHIgIT0gZW5kKTsKKworCWFyY2hfbGVhdmVfbGF6eV9tbXVfbW9kZSgp
OworCisJaWYgKG1tICE9ICZpbml0X21tKQorCQlwdGVfdW5tYXBfdW5sb2NrKHB0ZSAtIDEsIHB0
bCk7Cit9CisKK3N0YXRpYyB2b2lkIHdhbGtfYXNfcG1kX3JhbmdlKHB1ZF90ICpwdWQsIHVuc2ln
bmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBlbmQsCisJCQkgICAgICBjb25zdCBzdHJ1Y3Qg
YXNfd2Fsa19vcHMgKm9wcywKKwkJCSAgICAgIHN0cnVjdCBhc193YWxrICphc3cpCit7CisJcG1k
X3QgKnBtZCA9IHBtZF9vZmZzZXQocHVkLCBhZGRyKTsKKwl1bnNpZ25lZCBsb25nIG5leHQ7CisK
KwlkbyB7CisJCW5leHQgPSBwbWRfYWRkcl9lbmQoYWRkciwgZW5kKTsKKwkJaWYgKHBtZF9ub25l
X29yX2NsZWFyX2JhZChwbWQpKQorCQkJY29udGludWU7CisJCWlmIChXQVJOX09OKHBtZF9odWdl
KCpwbWQpKSkKKwkJCWNvbnRpbnVlOworCQl3YWxrX2FzX3B0ZV9yYW5nZShwbWQsIGFkZHIsIG5l
eHQsIG9wcywgYXN3KTsKKwl9IHdoaWxlIChwbWQrKywgYWRkciA9IG5leHQsIGFkZHIgIT0gZW5k
KTsKK30KKworc3RhdGljIHZvaWQgd2Fsa19hc19wdWRfcmFuZ2UocDRkX3QgKnA0ZCwgdW5zaWdu
ZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIGVuZCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBh
c193YWxrX29wcyAqb3BzLAorCQkJICAgICAgc3RydWN0IGFzX3dhbGsgKmFzdykKK3sKKwlwdWRf
dCAqcHVkID0gcHVkX29mZnNldChwNGQsIGFkZHIpOworCXVuc2lnbmVkIGxvbmcgbmV4dDsKKwor
CWRvIHsKKwkJbmV4dCA9IHB1ZF9hZGRyX2VuZChhZGRyLCBlbmQpOworCQlpZiAocHVkX25vbmVf
b3JfY2xlYXJfYmFkKHB1ZCkpCisJCQljb250aW51ZTsKKwkJaWYgKFdBUk5fT04ocHVkX2h1Z2Uo
KnB1ZCkpKQorCQkJY29udGludWU7CisJCXdhbGtfYXNfcG1kX3JhbmdlKHB1ZCwgYWRkciwgbmV4
dCwgb3BzLCBhc3cpOworCX0gd2hpbGUgKHB1ZCsrLCBhZGRyID0gbmV4dCwgYWRkciAhPSBlbmQp
OworfQorCitzdGF0aWMgdm9pZCB3YWxrX2FzX3A0ZF9yYW5nZShwZ2RfdCAqcGdkLCB1bnNpZ25l
ZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgZW5kLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGFz
X3dhbGtfb3BzICpvcHMsCisJCQkgICAgICBzdHJ1Y3QgYXNfd2FsayAqYXN3KQoreworCXA0ZF90
ICpwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgYWRkcik7CisJdW5zaWduZWQgbG9uZyBuZXh0OworCisJ
ZG8geworCQluZXh0ID0gcDRkX2FkZHJfZW5kKGFkZHIsIGVuZCk7CisJCWlmIChwNGRfbm9uZV9v
cl9jbGVhcl9iYWQocDRkKSkKKwkJCWNvbnRpbnVlOworCQl3YWxrX2FzX3B1ZF9yYW5nZShwNGQs
IGFkZHIsIG5leHQsIG9wcywgYXN3KTsKKwl9IHdoaWxlIChwNGQrKywgYWRkciA9IG5leHQsIGFk
ZHIgIT0gZW5kKTsKK30KKworc3RhdGljIHZvaWQgd2Fsa19hc19wZm5fcmFuZ2UodW5zaWduZWQg
bG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIGVuZCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBhc193
YWxrX29wcyAqb3BzLAorCQkJICAgICAgc3RydWN0IGFzX3dhbGsgKmFzdykKK3sKKwlwZ2RfdCAq
cGdkID0gcGdkX29mZnNldChhc3ctPnZtYS0+dm1fbW0sIGFkZHIpOworCXVuc2lnbmVkIGxvbmcg
bmV4dDsKKworCWRvIHsKKwkJbmV4dCA9IHBnZF9hZGRyX2VuZChhZGRyLCBlbmQpOworCQlpZiAo
cGdkX25vbmVfb3JfY2xlYXJfYmFkKHBnZCkpCisJCQljb250aW51ZTsKKwkJd2Fsa19hc19wNGRf
cmFuZ2UocGdkLCBhZGRyLCBuZXh0LCBvcHMsIGFzdyk7CisJfSB3aGlsZSAocGdkKyssIGFkZHIg
PSBuZXh0LCBhZGRyICE9IGVuZCk7Cit9CisKKworLyoqCisgKiBzdHJ1Y3QgYXNfd2Fsa19yYW5n
ZSAtIEFyZ3VtZW50IGZvciBhcHBseV9hc19yYW5nZQorICogQGFzdzogVGhlIHN0cnVjdCBhc193
YWxrIHdlIGVtYmVkIGZvciB0aGUgcGFnZSB3YWxrCisgKiBAc3RhcnQ6IEFkZHJlc3Mgb2YgZmly
c3QgbW9kaWZpZWQgcHRlCisgKiBAZW5kOiBBZGRyZXNzIG9mIGxhc3QgbW9kaWZpZWQgcHRlICsg
MQorICogQHRvdGFsOiBUb3RhbCBudW1iZXIgb2YgbW9kaWZpZWQgcHRlcworICovCitzdHJ1Y3Qg
YXNfd2Fsa19yYW5nZSB7CisJc3RydWN0IGFzX3dhbGsgYmFzZTsKKwl1bnNpZ25lZCBsb25nIHN0
YXJ0OworCXVuc2lnbmVkIGxvbmcgZW5kOworCXVuc2lnbmVkIGxvbmcgdG90YWw7Cit9OworCisj
ZGVmaW5lIHRvX2FzX3dhbGtfcmFuZ2UoX2FzdykgY29udGFpbmVyX29mKF9hc3csIHN0cnVjdCBh
c193YWxrX3JhbmdlLCBiYXNlKQorCisvKioKKyAqIGFwcGx5X3B0X3dycHJvdGVjdCAtIExlYWYg
cHRlIGNhbGxiYWNrIHRvIHdyaXRlLXByb3RlY3QgYSBwdGUKKyAqIEBwdGU6IFBvaW50ZXIgdG8g
dGhlIHB0ZQorICogQGFkZHI6IFRoZSB2aXJ0dWFsIHBhZ2UgYWRkcmVzcworICogQGFzdzogUG9p
bnRlciB0byBhIHN0cnVjdCBhc193YWxrIGVtYmVkZGVkIGluIGEgc3RydWN0IGFzX3dhbGtfcmFu
Z2UKKyAqCisgKiBUaGUgZnVuY3Rpb24gd3JpdGUtcHJvdGVjdHMgYSBwdGUgYW5kIHJlY29yZHMg
dGhlIHJhbmdlIGluCisgKiB2aXJ0dWFsIGFkZHJlc3Mgc3BhY2Ugb2YgdG91Y2hlZCBwdGVzIGZv
ciBlZmZpY2llbnQgcmFuZ2UgVExCIGZsdXNoZXMuCisgKi8KK3N0YXRpYyB2b2lkIGFwcGx5X3B0
X3dycHJvdGVjdChwdGVfdCAqcHRlLCB1bnNpZ25lZCBsb25nIGFkZHIsCisJCQkgICAgICAgc3Ry
dWN0IGFzX3dhbGsgKmFzdykKK3sKKwlzdHJ1Y3QgYXNfd2Fsa19yYW5nZSAqYXdyID0gdG9fYXNf
d2Fsa19yYW5nZShhc3cpOworCXB0ZV90IHB0ZW50ID0gKnB0ZTsKKworCWlmIChwdGVfd3JpdGUo
cHRlbnQpKSB7CisJCXB0ZV90IG9sZF9wdGUgPSBwdGVwX21vZGlmeV9wcm90X3N0YXJ0KGFzdy0+
dm1hLCBhZGRyLCBwdGUpOworCisJCXB0ZW50ID0gcHRlX3dycHJvdGVjdChvbGRfcHRlKTsKKwkJ
cHRlcF9tb2RpZnlfcHJvdF9jb21taXQoYXN3LT52bWEsIGFkZHIsIHB0ZSwgb2xkX3B0ZSwgcHRl
bnQpOworCQlhd3ItPnRvdGFsKys7CisJCWF3ci0+c3RhcnQgPSBtaW4oYXdyLT5zdGFydCwgYWRk
cik7CisJCWF3ci0+ZW5kID0gbWF4KGF3ci0+ZW5kLCBhZGRyICsgUEFHRV9TSVpFKTsKKwl9Cit9
CisKKy8qKgorICogc3RydWN0IGFzX3dhbGtfY2xlYW4gLSBBcmd1bWVudCBzdHJ1Y3R1cmUgZm9y
IGFwcGx5X3B0X2NsZWFuCisgKiBAYmFzZTogc3RydWN0IGFzX3dhbGsgd2UgZGVyaXZlIGZyb20K
KyAqIEBiaXRtYXBfcGdvZmY6IEFkZHJlc3Nfc3BhY2UgUGFnZSBvZmZzZXQgb2YgdGhlIGZpcnN0
IGJpdCBpbiBAYml0bWFwCisgKiBAYml0bWFwOiBCaXRtYXAgd2l0aCBvbmUgYml0IGZvciBlYWNo
IHBhZ2Ugb2Zmc2V0IGluIHRoZSBhZGRyZXNzX3NwYWNlIHJhbmdlCisgKiBjb3ZlcmVkLgorICog
QHN0YXJ0OiBBZGRyZXNzX3NwYWNlIHBhZ2Ugb2Zmc2V0IG9mIGZpcnN0IG1vZGlmaWVkIHB0ZSBy
ZWxhdGl2ZQorICogdG8gQGJpdG1hcF9wZ29mZgorICogQGVuZDogQWRkcmVzc19zcGFjZSBwYWdl
IG9mZnNldCBvZiBsYXN0IG1vZGlmaWVkIHB0ZSByZWxhdGl2ZQorICogdG8gQGJpdG1hcF9wZ29m
ZgorICovCitzdHJ1Y3QgYXNfd2Fsa19jbGVhbiB7CisJc3RydWN0IGFzX3dhbGtfcmFuZ2UgYmFz
ZTsKKwlwZ29mZl90IGJpdG1hcF9wZ29mZjsKKwl1bnNpZ25lZCBsb25nICpiaXRtYXA7CisJcGdv
ZmZfdCBzdGFydDsKKwlwZ29mZl90IGVuZDsKK307CisKKyNkZWZpbmUgdG9fYXNfd2Fsa19jbGVh
bihfYXdyKSBjb250YWluZXJfb2YoX2F3ciwgc3RydWN0IGFzX3dhbGtfY2xlYW4sIGJhc2UpCisK
Ky8qKgorICogYXBwbHlfcHRfY2xlYW4gLSBMZWFmIHB0ZSBjYWxsYmFjayB0byBjbGVhbiBhIHB0
ZQorICogQHB0ZTogUG9pbnRlciB0byB0aGUgcHRlCisgKiBAYWRkcjogVGhlIHZpcnR1YWwgcGFn
ZSBhZGRyZXNzCisgKiBAYXN3OiBQb2ludGVyIHRvIGEgc3RydWN0IGFzX3dhbGsgZW1iZWRkZWQg
aW4gYSBzdHJ1Y3QgYXNfd2Fsa19jbGVhbgorICoKKyAqIFRoZSBmdW5jdGlvbiBjbGVhbnMgYSBw
dGUgYW5kIHJlY29yZHMgdGhlIHJhbmdlIGluCisgKiB2aXJ0dWFsIGFkZHJlc3Mgc3BhY2Ugb2Yg
dG91Y2hlZCBwdGVzIGZvciBlZmZpY2llbnQgVExCIGZsdXNoZXMuCisgKiBJdCBhbHNvIHJlY29y
ZHMgZGlydHkgcHRlcyBpbiBhIGJpdG1hcCByZXByZXNlbnRpbmcgcGFnZSBvZmZzZXRzCisgKiBp
biB0aGUgYWRkcmVzc19zcGFjZSwgYXMgd2VsbCBhcyB0aGUgZmlyc3QgYW5kIGxhc3Qgb2YgdGhl
IGJpdHMKKyAqIHRvdWNoZWQuCisgKi8KK3N0YXRpYyB2b2lkIGFwcGx5X3B0X2NsZWFuKHB0ZV90
ICpwdGUsIHVuc2lnbmVkIGxvbmcgYWRkciwgc3RydWN0IGFzX3dhbGsgKmFzdykKK3sKKwlzdHJ1
Y3QgYXNfd2Fsa19yYW5nZSAqYXdyID0gdG9fYXNfd2Fsa19yYW5nZShhc3cpOworCXN0cnVjdCBh
c193YWxrX2NsZWFuICpjbGVhbiA9IHRvX2FzX3dhbGtfY2xlYW4oYXdyKTsKKwlwdGVfdCBwdGVu
dCA9ICpwdGU7CisKKwlpZiAocHRlX2RpcnR5KHB0ZW50KSkgeworCQlwZ29mZl90IHBnb2ZmID0g
KChhZGRyIC0gYXN3LT52bWEtPnZtX3N0YXJ0KSA+PiBQQUdFX1NISUZUKSArCisJCQlhc3ctPnZt
YS0+dm1fcGdvZmYgLSBjbGVhbi0+Yml0bWFwX3Bnb2ZmOworCQlwdGVfdCBvbGRfcHRlID0gcHRl
cF9tb2RpZnlfcHJvdF9zdGFydChhc3ctPnZtYSwgYWRkciwgcHRlKTsKKworCQlwdGVudCA9IHB0
ZV9ta2NsZWFuKG9sZF9wdGUpOworCQlwdGVwX21vZGlmeV9wcm90X2NvbW1pdChhc3ctPnZtYSwg
YWRkciwgcHRlLCBvbGRfcHRlLCBwdGVudCk7CisKKwkJYXdyLT50b3RhbCsrOworCQlhd3ItPnN0
YXJ0ID0gbWluKGF3ci0+c3RhcnQsIGFkZHIpOworCQlhd3ItPmVuZCA9IG1heChhd3ItPmVuZCwg
YWRkciArIFBBR0VfU0laRSk7CisKKwkJX19zZXRfYml0KHBnb2ZmLCBjbGVhbi0+Yml0bWFwKTsK
KwkJY2xlYW4tPnN0YXJ0ID0gbWluKGNsZWFuLT5zdGFydCwgcGdvZmYpOworCQljbGVhbi0+ZW5k
ID0gbWF4KGNsZWFuLT5lbmQsIHBnb2ZmICsgMSk7CisJfQorfQorCisvKioKKyAqIGFwcGx5X2Fz
X3JhbmdlIC0gQXBwbHkgYSBwdGUgY2FsbGJhY2sgdG8gYWxsIFBURXMgcG9pbnRpbmcgaW50byBh
IHJhbmdlCisgKiBvZiBhbiBhZGRyZXNzX3NwYWNlLgorICogQG1hcHBpbmc6IFBvaW50ZXIgdG8g
dGhlIHN0cnVjdCBhZGRyZXNzX3NwYWNlCisgKiBAYWFzOiBDbG9zdXJlIHN0cnVjdHVyZQorICog
QGZpcnN0X2luZGV4OiBGaXJzdCBwYWdlIG9mZnNldCBpbiB0aGUgYWRkcmVzc19zcGFjZQorICog
QG5yOiBOdW1iZXIgb2YgaW5jcmVtZW50YWwgcGFnZSBvZmZzZXRzIHRvIGNvdmVyCisgKgorICog
UmV0dXJuOiBOdW1iZXIgb2YgcHRlcyB0b3VjaGVkLiBOb3RlIHRoYXQgdGhpcyBudW1iZXIgbWln
aHQgYmUgbGFyZ2VyCisgKiB0aGFuIEBuciBpZiB0aGVyZSBhcmUgb3ZlcmxhcHBpbmcgdm1hcwor
ICovCitzdGF0aWMgdW5zaWduZWQgbG9uZyBhcHBseV9hc19yYW5nZShzdHJ1Y3QgYWRkcmVzc19z
cGFjZSAqbWFwcGluZywKKwkJCQkgICAgcGdvZmZfdCBmaXJzdF9pbmRleCwgcGdvZmZfdCBuciwK
KwkJCQkgICAgY29uc3Qgc3RydWN0IGFzX3dhbGtfb3BzICpvcHMsCisJCQkJICAgIHN0cnVjdCBh
c193YWxrX3JhbmdlICphd3IpCit7CisJc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWE7CisJcGdv
ZmZfdCB2YmEsIHZlYSwgY2JhLCBjZWE7CisJdW5zaWduZWQgbG9uZyBzdGFydF9hZGRyLCBlbmRf
YWRkcjsKKwlzdHJ1Y3QgbW11X25vdGlmaWVyX3JhbmdlIHJhbmdlOworCisJaV9tbWFwX2xvY2tf
cmVhZChtYXBwaW5nKTsKKwl2bWFfaW50ZXJ2YWxfdHJlZV9mb3JlYWNoKHZtYSwgJm1hcHBpbmct
PmlfbW1hcCwgZmlyc3RfaW5kZXgsCisJCQkJICBmaXJzdF9pbmRleCArIG5yIC0gMSkgeworCQl1
bnNpZ25lZCBsb25nIHZtX2ZsYWdzID0gUkVBRF9PTkNFKHZtYS0+dm1fZmxhZ3MpOworCisJCS8q
CisJCSAqIFdlIGNhbiBvbmx5IGRvIGFkdmlzb3J5IGZsYWcgdGVzdHMgYmVsb3csIHNpbmNlIHdl
IGNhbid0CisJCSAqIHJlcXVpcmUgdGhlIG1tJ3MgbW1hcF9zZW0gdG8gYmUgaGVsZCB0byBwcm90
ZWN0IHRoZSBmbGFncy4KKwkJICogVGhlcmVmb3JlLCBjYWxsZXJzIHRoYXQgc3RyaWN0bHkgZGVw
ZW5kIG9uIHNwZWNpZmljIHZtX2ZsYWdzCisJCSAqIHRvIHJlbWFpbiBjb25zdGFudCB0aHJvdWdo
b3V0IHRoZSBvcGVyYXRpb24gbXVzdCBlbnN1cmUKKwkJICogdGhvc2UgZmxhZ3MgYXJlIGltbXV0
YWJsZSBmb3IgYWxsIHJlbGV2YW50IHZtYXMgb3IgY2FuJ3QgdXNlCisJCSAqIHRoaXMgZnVuY3Rp
b24uIEZpeGluZyB0aGlzIHByb3Blcmx5IHdvdWxkIHJlcXVpcmUgdGhlCisJCSAqIHZtX2ZsYWdz
IHRvIGJlIHByb3RlY3RlZCBieSBhIHNlcGFyYXRlIGxvY2sgdGFrZW4gYWZ0ZXIgdGhlCisJCSAq
IGlfbW1hcF9sb2NrCisJCSAqLworCisJCS8qIFNraXAgbm9uLWFwcGxpY2FibGUgVk1BcyAqLwor
CQlpZiAoKHZtX2ZsYWdzICYgKFZNX1NIQVJFRCB8IFZNX1dSSVRFKSkgIT0KKwkJICAgIChWTV9T
SEFSRUQgfCBWTV9XUklURSkpCisJCQljb250aW51ZTsKKworCQkvKiBXYXJuIG9uIGFuZCBza2lw
IFZNQXMgd2hvc2UgZmxhZ3MgaW5kaWNhdGUgaWxsZWdhbCB1c2FnZSAqLworCQlpZiAoV0FSTl9P
Tigodm1fZmxhZ3MgJiAoVk1fSFVHRVRMQiB8IFZNX0lPKSkgIT0gVk1fSU8pKQorCQkJY29udGlu
dWU7CisKKwkJLyogQ2xpcCB0byB0aGUgdm1hICovCisJCXZiYSA9IHZtYS0+dm1fcGdvZmY7CisJ
CXZlYSA9IHZiYSArIHZtYV9wYWdlcyh2bWEpOworCQljYmEgPSBmaXJzdF9pbmRleDsKKwkJY2Jh
ID0gbWF4KGNiYSwgdmJhKTsKKwkJY2VhID0gZmlyc3RfaW5kZXggKyBucjsKKwkJY2VhID0gbWlu
KGNlYSwgdmVhKTsKKworCQkvKiBUcmFuc2xhdGUgdG8gdmlydHVhbCBhZGRyZXNzICovCisJCXN0
YXJ0X2FkZHIgPSAoKGNiYSAtIHZiYSkgPDwgUEFHRV9TSElGVCkgKyB2bWEtPnZtX3N0YXJ0Owor
CQllbmRfYWRkciA9ICgoY2VhIC0gdmJhKSA8PCBQQUdFX1NISUZUKSArIHZtYS0+dm1fc3RhcnQ7
CisJCWlmIChzdGFydF9hZGRyID49IGVuZF9hZGRyKQorCQkJY29udGludWU7CisKKwkJYXdyLT5i
YXNlLnZtYSA9IHZtYTsKKwkJYXdyLT5zdGFydCA9IGVuZF9hZGRyOworCQlhd3ItPmVuZCA9IHN0
YXJ0X2FkZHI7CisKKwkJbW11X25vdGlmaWVyX3JhbmdlX2luaXQoJnJhbmdlLCBNTVVfTk9USUZZ
X1BST1RFQ1RJT05fUEFHRSwgMCwKKwkJCQkJdm1hLCB2bWEtPnZtX21tLCBzdGFydF9hZGRyLCBl
bmRfYWRkcik7CisJCW1tdV9ub3RpZmllcl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0KCZyYW5nZSk7
CisKKwkJLyogSXMgdGhpcyBuZWVkZWQgd2hlbiB3ZSBvbmx5IGNoYW5nZSBwcm90ZWN0aW9uPyAq
LworCQlmbHVzaF9jYWNoZV9yYW5nZSh2bWEsIHN0YXJ0X2FkZHIsIGVuZF9hZGRyKTsKKworCQkv
KgorCQkgKiBXZSdyZSBub3QgdXNpbmcgdGxiX2dhdGhlcl9tbXUoKSBzaW5jZSB0eXBpY2FsbHkK
KwkJICogb25seSBhIHNtYWxsIHN1YnJhbmdlIG9mIFBURXMgYXJlIGFmZmVjdGVkLCB3aGVyZWFz
CisJCSAqIHRsYl9nYXRoZXJfbW11KCkgcmVjb3JkcyB0aGUgZnVsbCByYW5nZS4KKwkJICovCisJ
CWluY190bGJfZmx1c2hfcGVuZGluZyh2bWEtPnZtX21tKTsKKwkJd2Fsa19hc19wZm5fcmFuZ2Uo
c3RhcnRfYWRkciwgZW5kX2FkZHIsIG9wcywgJmF3ci0+YmFzZSk7CisJCWlmIChhd3ItPmVuZCA+
IGF3ci0+c3RhcnQpCisJCQlmbHVzaF90bGJfcmFuZ2Uodm1hLCBhd3ItPnN0YXJ0LCBhd3ItPmVu
ZCk7CisKKwkJbW11X25vdGlmaWVyX2ludmFsaWRhdGVfcmFuZ2VfZW5kKCZyYW5nZSk7CisJCWRl
Y190bGJfZmx1c2hfcGVuZGluZyh2bWEtPnZtX21tKTsKKwl9CisJaV9tbWFwX3VubG9ja19yZWFk
KG1hcHBpbmcpOworCisJcmV0dXJuIGF3ci0+dG90YWw7Cit9CisKKy8qKgorICogYXBwbHlfYXNf
d3Jwcm90ZWN0IC0gV3JpdGUtcHJvdGVjdCBhbGwgcHRlcyBpbiBhbiBhZGRyZXNzX3NwYWNlIHJh
bmdlCisgKiBAbWFwcGluZzogVGhlIGFkZHJlc3Nfc3BhY2Ugd2Ugd2FudCB0byB3cml0ZSBwcm90
ZWN0CisgKiBAZmlyc3RfaW5kZXg6IFRoZSBmaXJzdCBwYWdlIG9mZnNldCBpbiB0aGUgcmFuZ2UK
KyAqIEBucjogTnVtYmVyIG9mIGluY3JlbWVudGFsIHBhZ2Ugb2Zmc2V0cyB0byBjb3ZlcgorICoK
KyAqIFdBUk5JTkc6IFRoaXMgZnVuY3Rpb24gc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgYWRkcmVz
cyBzcGFjZXMgd2hvc2UKKyAqIHZtYXMgYXJlIG1hcmtlZCBWTV9JTyBhbmQgdGhhdCBkbyBub3Qg
Y29udGFpbiBodWdlIHBhZ2VzLgorICogVG8gYXZvaWQgaW50ZXJmZXJlbmNlIHdpdGggQ09XJ2Qg
cGFnZXMsIHZtYXMgbm90IG1hcmtlZCBWTV9TSEFSRUQgYXJlCisgKiBzaW1wbHkgc2tpcHBlZC4K
KyAqCisgKiBSZXR1cm46IFRoZSBudW1iZXIgb2YgcHRlcyBhY3R1YWxseSB3cml0ZS1wcm90ZWN0
ZWQuIE5vdGUgdGhhdAorICogYWxyZWFkeSB3cml0ZS1wcm90ZWN0ZWQgcHRlcyBhcmUgbm90IGNv
dW50ZWQuCisgKi8KK3Vuc2lnbmVkIGxvbmcgYXBwbHlfYXNfd3Jwcm90ZWN0KHN0cnVjdCBhZGRy
ZXNzX3NwYWNlICptYXBwaW5nLAorCQkJCSBwZ29mZl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5y
KQoreworCXN0YXRpYyBjb25zdCBzdHJ1Y3QgYXNfd2Fsa19vcHMgb3BzID0geworCQkucHRlX2Vu
dHJ5ID0gYXBwbHlfcHRfd3Jwcm90ZWN0CisJfTsKKwlzdHJ1Y3QgYXNfd2Fsa19yYW5nZSBhd3Ig
PSB7IC50b3RhbCA9IDAgfTsKKworCXJldHVybiBhcHBseV9hc19yYW5nZShtYXBwaW5nLCBmaXJz
dF9pbmRleCwgbnIsICZvcHMsICZhd3IpOworfQorRVhQT1JUX1NZTUJPTF9HUEwoYXBwbHlfYXNf
d3Jwcm90ZWN0KTsKKworLyoqCisgKiBhcHBseV9hc19jbGVhbiAtIENsZWFuIGFsbCBwdGVzIGlu
IGFuIGFkZHJlc3Nfc3BhY2UgcmFuZ2UKKyAqIEBtYXBwaW5nOiBUaGUgYWRkcmVzc19zcGFjZSB3
ZSB3YW50IHRvIGNsZWFuCisgKiBAZmlyc3RfaW5kZXg6IFRoZSBmaXJzdCBwYWdlIG9mZnNldCBp
biB0aGUgcmFuZ2UKKyAqIEBucjogTnVtYmVyIG9mIGluY3JlbWVudGFsIHBhZ2Ugb2Zmc2V0cyB0
byBjb3ZlcgorICogQGJpdG1hcF9wZ29mZjogVGhlIHBhZ2Ugb2Zmc2V0IG9mIHRoZSBmaXJzdCBi
aXQgaW4gQGJpdG1hcAorICogQGJpdG1hcDogUG9pbnRlciB0byBhIGJpdG1hcCBvZiBhdCBsZWFz
dCBAbnIgYml0cy4gVGhlIGJpdG1hcCBuZWVkcyB0bworICogY292ZXIgdGhlIHdob2xlIHJhbmdl
IEBmaXJzdF9pbmRleC4uQGZpcnN0X2luZGV4ICsgQG5yLgorICogQHN0YXJ0OiBQb2ludGVyIHRv
IG51bWJlciBvZiB0aGUgZmlyc3Qgc2V0IGJpdCBpbiBAYml0bWFwLgorICogaXMgbW9kaWZpZWQg
YXMgbmV3IGJpdHMgYXJlIHNldCBieSB0aGUgZnVuY3Rpb24uCisgKiBAZW5kOiBQb2ludGVyIHRv
IHRoZSBudW1iZXIgb2YgdGhlIGxhc3Qgc2V0IGJpdCBpbiBAYml0bWFwLgorICogbm9uZSBzZXQu
IFRoZSB2YWx1ZSBpcyBtb2RpZmllZCBhcyBuZXcgYml0cyBhcmUgc2V0IGJ5IHRoZSBmdW5jdGlv
bi4KKyAqCisgKiBOb3RlOiBXaGVuIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGVyZSBpcyBubyBn
dWFyYW50ZWUgdGhhdCBhIENQVSBoYXMKKyAqIG5vdCBhbHJlYWR5IGRpcnRpZWQgbmV3IHB0ZXMu
IEhvd2V2ZXIgaXQgd2lsbCBub3QgY2xlYW4gYW55IHB0ZXMgbm90CisgKiByZXBvcnRlZCBpbiB0
aGUgYml0bWFwLgorICoKKyAqIElmIGEgY2FsbGVyIG5lZWRzIHRvIG1ha2Ugc3VyZSBhbGwgZGly
dHkgcHRlcyBhcmUgcGlja2VkIHVwIGFuZCBub25lCisgKiBhZGRpdGlvbmFsIGFyZSBhZGRlZCwg
aXQgZmlyc3QgbmVlZHMgdG8gd3JpdGUtcHJvdGVjdCB0aGUgYWRkcmVzcy1zcGFjZQorICogcmFu
Z2UgYW5kIG1ha2Ugc3VyZSBuZXcgd3JpdGVycyBhcmUgYmxvY2tlZCBpbiBwYWdlX21rd3JpdGUo
KSBvcgorICogcGZuX21rd3JpdGUoKS4gQW5kIHRoZW4gYWZ0ZXIgYSBUTEIgZmx1c2ggZm9sbG93
aW5nIHRoZSB3cml0ZS1wcm90ZWN0aW9uCisgKiBwaWNrIHVwIGFsbCBkaXJ0eSBiaXRzLgorICoK
KyAqIFdBUk5JTkc6IFRoaXMgZnVuY3Rpb24gc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgYWRkcmVz
cyBzcGFjZXMgd2hvc2UKKyAqIHZtYXMgYXJlIG1hcmtlZCBWTV9JTyBhbmQgdGhhdCBkbyBub3Qg
Y29udGFpbiBodWdlIHBhZ2VzLgorICogVG8gYXZvaWQgaW50ZXJmZXJlbmNlIHdpdGggQ09XJ2Qg
cGFnZXMsIHZtYXMgbm90IG1hcmtlZCBWTV9TSEFSRUQgYXJlCisgKiBzaW1wbHkgc2tpcHBlZC4K
KyAqCisgKiBSZXR1cm46IFRoZSBudW1iZXIgb2YgZGlydHkgcHRlcyBhY3R1YWxseSBjbGVhbmVk
LgorICovCit1bnNpZ25lZCBsb25nIGFwcGx5X2FzX2NsZWFuKHN0cnVjdCBhZGRyZXNzX3NwYWNl
ICptYXBwaW5nLAorCQkJICAgICBwZ29mZl90IGZpcnN0X2luZGV4LCBwZ29mZl90IG5yLAorCQkJ
ICAgICBwZ29mZl90IGJpdG1hcF9wZ29mZiwKKwkJCSAgICAgdW5zaWduZWQgbG9uZyAqYml0bWFw
LAorCQkJICAgICBwZ29mZl90ICpzdGFydCwKKwkJCSAgICAgcGdvZmZfdCAqZW5kKQoreworCWJv
b2wgbm9uZV9zZXQgPSAoKnN0YXJ0ID49ICplbmQpOworCXN0YXRpYyBjb25zdCBzdHJ1Y3QgYXNf
d2Fsa19vcHMgb3BzID0geyAucHRlX2VudHJ5ID0gYXBwbHlfcHRfY2xlYW4gfTsKKwlzdHJ1Y3Qg
YXNfd2Fsa19jbGVhbiBjbGVhbiA9IHsKKwkJLmJhc2UgPSB7IC50b3RhbCA9IDAsIH0sCisJCS5i
aXRtYXBfcGdvZmYgPSBiaXRtYXBfcGdvZmYsCisJCS5iaXRtYXAgPSBiaXRtYXAsCisJCS5zdGFy
dCA9IG5vbmVfc2V0ID8gbnIgOiAqc3RhcnQsCisJCS5lbmQgPSBub25lX3NldCA/IDAgOiAqZW5k
LAorCX07CisJdW5zaWduZWQgbG9uZyByZXQgPSBhcHBseV9hc19yYW5nZShtYXBwaW5nLCBmaXJz
dF9pbmRleCwgbnIsICZvcHMsCisJCQkJCSAgICZjbGVhbi5iYXNlKTsKKwkqc3RhcnQgPSBjbGVh
bi5zdGFydDsKKwkqZW5kID0gY2xlYW4uZW5kOworCXJldHVybiByZXQ7Cit9CitFWFBPUlRfU1lN
Qk9MX0dQTChhcHBseV9hc19jbGVhbik7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRl
dmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbA==
