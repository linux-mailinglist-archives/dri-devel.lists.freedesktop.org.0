Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 587BD7289B
	for <lists+dri-devel@lfdr.de>; Wed, 24 Jul 2019 08:54:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 039A26E463;
	Wed, 24 Jul 2019 06:54:27 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by gabe.freedesktop.org (Postfix) with ESMTP id 98A176E3CB
 for <dri-devel@lists.freedesktop.org>; Tue, 23 Jul 2019 22:19:14 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 41BB515A1;
 Tue, 23 Jul 2019 15:19:14 -0700 (PDT)
Received: from dawn-kernel.cambridge.arm.com (unknown [10.1.197.116])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 3D88B3F694;
 Tue, 23 Jul 2019 15:19:10 -0700 (PDT)
From: Suzuki K Poulose <suzuki.poulose@arm.com>
To: linux-kernel@vger.kernel.org
Subject: [PATCH v3 2/7] drivers: Introduce device lookup variants by of_node
Date: Tue, 23 Jul 2019 23:18:33 +0100
Message-Id: <20190723221838.12024-3-suzuki.poulose@arm.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190723221838.12024-1-suzuki.poulose@arm.com>
References: <20190723221838.12024-1-suzuki.poulose@arm.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 24 Jul 2019 06:54:25 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Andrew Lunn <andrew@lunn.ch>, Thor Thayer <thor.thayer@linux.intel.com>,
 rafael@kernel.org, Maxime Ripard <maxime.ripard@bootlin.com>,
 linux-fpga@vger.kernel.org, dri-devel@lists.freedesktop.org,
 Takashi Iwai <tiwai@suse.com>, "David S. Miller" <davem@davemloft.net>,
 Srinivas Kandagatla <srinivas.kandagatla@linaro.org>,
 linux-i2c@vger.kernel.org, Frank Rowand <frowand.list@gmail.com>,
 Florian Fainelli <f.fainelli@gmail.com>, linux-rockchip@lists.infradead.org,
 Lee Jones <lee.jones@linaro.org>, Wolfram Sang <wsa@the-dreams.de>,
 David Airlie <airlied@linux.ie>, Jiri Slaby <jslaby@suse.com>,
 devicetree@vger.kernel.org, Alan Tull <atull@kernel.org>,
 Suzuki K Poulose <suzuki.poulose@arm.com>, Rob Herring <robh+dt@kernel.org>,
 Moritz Fischer <mdf@kernel.org>, linux-arm-kernel@lists.infradead.org,
 Mathieu Poirier <mathieu.poirier@linaro.org>, gregkh@linuxfoundation.org,
 Liam Girdwood <lgirdwood@gmail.com>, linux-spi@vger.kernel.org,
 Mark Brown <broonie@kernel.org>, Peter Rosin <peda@axentia.se>,
 Heiner Kallweit <hkallweit1@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

SW50cm9kdWNlIHdyYXBwZXJzIGZvciB7YnVzL2RyaXZlci9jbGFzc31fZmluZF9kZXZpY2UoKSB0
bwpsb2NhdGUgZGV2aWNlcyBieSBpdHMgb2Zfbm9kZS4KCkNjOiBNYWFydGVuIExhbmtob3JzdCA8
bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwuY29tPgpDYzogTWF4aW1lIFJpcGFyZCA8bWF4
aW1lLnJpcGFyZEBib290bGluLmNvbT4KQ2M6IGRyaS1kZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKQ2M6IERhdmlkIEFpcmxpZSA8YWlybGllZEBsaW51eC5pZT4KQ2M6IERhbmllbCBWZXR0ZXIg
PGRhbmllbEBmZndsbC5jaD4KQ2M6IGRldmljZXRyZWVAdmdlci5rZXJuZWwub3JnCkNjOiBGbG9y
aWFuIEZhaW5lbGxpIDxmLmZhaW5lbGxpQGdtYWlsLmNvbT4KQ2M6IEZyYW5rIFJvd2FuZCA8ZnJv
d2FuZC5saXN0QGdtYWlsLmNvbT4KQ2M6IEhlaWtvIFN0dWVibmVyIDxoZWlrb0BzbnRlY2guZGU+
CkNjOiBMaWFtIEdpcmR3b29kIDxsZ2lyZHdvb2RAZ21haWwuY29tPgpDYzogbGludXgtaTJjQHZn
ZXIua2VybmVsLm9yZwpDYzogbGludXgtcm9ja2NoaXBAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzog
bGludXgtc3BpQHZnZXIua2VybmVsLm9yZwpDYzogTWF0aGlldSBQb2lyaWVyIDxtYXRoaWV1LnBv
aXJpZXJAbGluYXJvLm9yZz4KQ2M6IFJvYiBIZXJyaW5nIDxyb2JoK2R0QGtlcm5lbC5vcmc+CkNj
OiBTcmluaXZhcyBLYW5kYWdhdGxhIDxzcmluaXZhcy5rYW5kYWdhdGxhQGxpbmFyby5vcmc+CkNj
OiBUYWthc2hpIEl3YWkgPHRpd2FpQHN1c2UuY29tPgpDYzogV29sZnJhbSBTYW5nIDx3c2FAdGhl
LWRyZWFtcy5kZT4KQ2M6IEFsYW4gVHVsbCA8YXR1bGxAa2VybmVsLm9yZz4KQ2M6IE1vcml0eiBG
aXNjaGVyIDxtZGZAa2VybmVsLm9yZz4KQ2M6IGxpbnV4LWZwZ2FAdmdlci5rZXJuZWwub3JnCkNj
OiBQZXRlciBSb3NpbiA8cGVkYUBheGVudGlhLnNlPgpDYzogTWFyayBCcm93biA8YnJvb25pZUBr
ZXJuZWwub3JnPgpDYzogRmxvcmlhbiBGYWluZWxsaSA8Zi5mYWluZWxsaUBnbWFpbC5jb20+CkNj
OiBIZWluZXIgS2FsbHdlaXQgPGhrYWxsd2VpdDFAZ21haWwuY29tPgpDYzogIkRhdmlkIFMuIE1p
bGxlciIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+CkNjOiBBbmRyZXcgTHVubiA8YW5kcmV3QGx1bm4u
Y2g+CkNjOiBMaWFtIEdpcmR3b29kIDxsZ2lyZHdvb2RAZ21haWwuY29tPgpDYzogR3JlZyBLcm9h
aC1IYXJ0bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KQ2M6ICJSYWZhZWwgSi4gV3lz
b2NraSIgPHJhZmFlbEBrZXJuZWwub3JnPgpDYzogTGVlIEpvbmVzIDxsZWUuam9uZXNAbGluYXJv
Lm9yZz4KQ2M6IFRob3IgVGhheWVyIDx0aG9yLnRoYXllckBsaW51eC5pbnRlbC5jb20+CkNjOiBK
aXJpIFNsYWJ5IDxqc2xhYnlAc3VzZS5jb20+CkNjOiBNYXJrIEJyb3duIDxicm9vbmllQGtlcm5l
bC5vcmc+CkNjOiBBbmRyZXcgTHVubiA8YW5kcmV3QGx1bm4uY2g+CkNjOiBQZXRlciBSb3NpbiA8
cGVkYUBheGVudGlhLnNlPgpTaWduZWQtb2ZmLWJ5OiBTdXp1a2kgSyBQb3Vsb3NlIDxzdXp1a2ku
cG91bG9zZUBhcm0uY29tPgotLS0KIC0gRHJvcHBlZCB0aGUgcmV2aWV3ZWQtYnkgdGFncyBmcm9t
IFRob3IsIE1hcmssIEFuZHJldyBhbmQgUGV0ZXIgYXMgdGhlCiAgIHBhdGNoZXMgYXJlIG1lcmVn
ZWQsIHRob3VnaCB0aGVyZSBhcmUgbm8gZnVuY3Rpb25hbCBjaGFuZ2VzLgotLS0KIGRyaXZlcnMv
YW1iYS90ZWdyYS1haGIuYyAgICAgICAgICAgICAgfCAxMSArLS0tLS0tLQogZHJpdmVycy9mcGdh
L2ZwZ2EtYnJpZGdlLmMgICAgICAgICAgICB8ICA4ICstLS0tLQogZHJpdmVycy9mcGdhL2ZwZ2Et
bWdyLmMgICAgICAgICAgICAgICB8ICA4ICstLS0tLQogZHJpdmVycy9ncHUvZHJtL2RybV9taXBp
X2RzaS5jICAgICAgICB8ICA3ICstLS0tCiBkcml2ZXJzL2kyYy9pMmMtY29yZS1vZi5jICAgICAg
ICAgICAgIHwgIDcgKy0tLS0KIGRyaXZlcnMvbWZkL2FsdGVyYS1zeXNtZ3IuYyAgICAgICAgICAg
fCAxNCArKy0tLS0tLS0tCiBkcml2ZXJzL211eC9jb3JlLmMgICAgICAgICAgICAgICAgICAgIHwg
IDcgKy0tLS0KIGRyaXZlcnMvbmV0L3BoeS9tZGlvX2J1cy5jICAgICAgICAgICAgfCAgOSArLS0t
LS0tCiBkcml2ZXJzL252bWVtL2NvcmUuYyAgICAgICAgICAgICAgICAgIHwgIDcgKy0tLS0KIGRy
aXZlcnMvb2Yvb2ZfbWRpby5jICAgICAgICAgICAgICAgICAgfCAgOCArLS0tLS0KIGRyaXZlcnMv
b2YvcGxhdGZvcm0uYyAgICAgICAgICAgICAgICAgfCAgNyArLS0tLQogZHJpdmVycy9yZWd1bGF0
b3Ivb2ZfcmVndWxhdG9yLmMgICAgICB8ICA3ICstLS0tCiBkcml2ZXJzL3NwaS9zcGkuYyAgICAg
ICAgICAgICAgICAgICAgIHwgMjAgKysrLS0tLS0tLS0tLS0tCiBpbmNsdWRlL2xpbnV4L2Rldmlj
ZS5oICAgICAgICAgICAgICAgIHwgMzcgKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBzb3Vu
ZC9zb2Mvcm9ja2NoaXAvcmszMzk5X2dydV9zb3VuZC5jIHwgIDkgKystLS0tLQogMTUgZmlsZXMg
Y2hhbmdlZCwgNTYgaW5zZXJ0aW9ucygrKSwgMTEwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvYW1iYS90ZWdyYS1haGIuYyBiL2RyaXZlcnMvYW1iYS90ZWdyYS1haGIuYwppbmRl
eCBhYTY0ZWVjZTc3YTYuLjU3ZDNiMmUyZDAwNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9hbWJhL3Rl
Z3JhLWFoYi5jCisrKyBiL2RyaXZlcnMvYW1iYS90ZWdyYS1haGIuYwpAQCAtMTM0LDIyICsxMzQs
MTMgQEAgc3RhdGljIGlubGluZSB2b2lkIGdpem1vX3dyaXRlbChzdHJ1Y3QgdGVncmFfYWhiICph
aGIsIHUzMiB2YWx1ZSwgdTMyIG9mZnNldCkKIH0KIAogI2lmZGVmIENPTkZJR19URUdSQV9JT01N
VV9TTU1VCi1zdGF0aWMgaW50IHRlZ3JhX2FoYl9tYXRjaF9ieV9zbW11KHN0cnVjdCBkZXZpY2Ug
KmRldiwgY29uc3Qgdm9pZCAqZGF0YSkKLXsKLQlzdHJ1Y3QgdGVncmFfYWhiICphaGIgPSBkZXZf
Z2V0X2RydmRhdGEoZGV2KTsKLQljb25zdCBzdHJ1Y3QgZGV2aWNlX25vZGUgKmRuID0gZGF0YTsK
LQotCXJldHVybiAoYWhiLT5kZXYtPm9mX25vZGUgPT0gZG4pID8gMSA6IDA7Ci19Ci0KIGludCB0
ZWdyYV9haGJfZW5hYmxlX3NtbXUoc3RydWN0IGRldmljZV9ub2RlICpkbikKIHsKIAlzdHJ1Y3Qg
ZGV2aWNlICpkZXY7CiAJdTMyIHZhbDsKIAlzdHJ1Y3QgdGVncmFfYWhiICphaGI7CiAKLQlkZXYg
PSBkcml2ZXJfZmluZF9kZXZpY2UoJnRlZ3JhX2FoYl9kcml2ZXIuZHJpdmVyLCBOVUxMLCBkbiwK
LQkJCQkgdGVncmFfYWhiX21hdGNoX2J5X3NtbXUpOworCWRldiA9IGRyaXZlcl9maW5kX2Rldmlj
ZV9ieV9vZl9ub2RlKCZ0ZWdyYV9haGJfZHJpdmVyLmRyaXZlciwgZG4pOwogCWlmICghZGV2KQog
CQlyZXR1cm4gLUVQUk9CRV9ERUZFUjsKIAlhaGIgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZnBnYS9mcGdhLWJyaWRnZS5jIGIvZHJpdmVycy9mcGdhL2ZwZ2Et
YnJpZGdlLmMKaW5kZXggODBiZDhmMWIyYWE2Li40YmFiOTAyODk0MGEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZnBnYS9mcGdhLWJyaWRnZS5jCisrKyBiL2RyaXZlcnMvZnBnYS9mcGdhLWJyaWRnZS5j
CkBAIC0xOSwxMSArMTksNiBAQCBzdGF0aWMgc3RydWN0IGNsYXNzICpmcGdhX2JyaWRnZV9jbGFz
czsKIC8qIExvY2sgZm9yIGFkZGluZy9yZW1vdmluZyBicmlkZ2VzIHRvIGxpbmtlZCBsaXN0cyov
CiBzdGF0aWMgc3BpbmxvY2tfdCBicmlkZ2VfbGlzdF9sb2NrOwogCi1zdGF0aWMgaW50IGZwZ2Ff
YnJpZGdlX29mX25vZGVfbWF0Y2goc3RydWN0IGRldmljZSAqZGV2LCBjb25zdCB2b2lkICpkYXRh
KQotewotCXJldHVybiBkZXYtPm9mX25vZGUgPT0gZGF0YTsKLX0KLQogLyoqCiAgKiBmcGdhX2Jy
aWRnZV9lbmFibGUgLSBFbmFibGUgdHJhbnNhY3Rpb25zIG9uIHRoZSBicmlkZ2UKICAqCkBAIC0x
MDQsOCArOTksNyBAQCBzdHJ1Y3QgZnBnYV9icmlkZ2UgKm9mX2ZwZ2FfYnJpZGdlX2dldChzdHJ1
Y3QgZGV2aWNlX25vZGUgKm5wLAogewogCXN0cnVjdCBkZXZpY2UgKmRldjsKIAotCWRldiA9IGNs
YXNzX2ZpbmRfZGV2aWNlKGZwZ2FfYnJpZGdlX2NsYXNzLCBOVUxMLCBucCwKLQkJCQlmcGdhX2Jy
aWRnZV9vZl9ub2RlX21hdGNoKTsKKwlkZXYgPSBjbGFzc19maW5kX2RldmljZV9ieV9vZl9ub2Rl
KGZwZ2FfYnJpZGdlX2NsYXNzLCBucCk7CiAJaWYgKCFkZXYpCiAJCXJldHVybiBFUlJfUFRSKC1F
Tk9ERVYpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2ZwZ2EvZnBnYS1tZ3IuYyBiL2RyaXZlcnMv
ZnBnYS9mcGdhLW1nci5jCmluZGV4IGMzODY2ODE2NDU2YS4uZTA1MTA0ZjVlNDBjIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2ZwZ2EvZnBnYS1tZ3IuYworKysgYi9kcml2ZXJzL2ZwZ2EvZnBnYS1tZ3Iu
YwpAQCAtNDgyLDExICs0ODIsNiBAQCBzdHJ1Y3QgZnBnYV9tYW5hZ2VyICpmcGdhX21ncl9nZXQo
c3RydWN0IGRldmljZSAqZGV2KQogfQogRVhQT1JUX1NZTUJPTF9HUEwoZnBnYV9tZ3JfZ2V0KTsK
IAotc3RhdGljIGludCBmcGdhX21ncl9vZl9ub2RlX21hdGNoKHN0cnVjdCBkZXZpY2UgKmRldiwg
Y29uc3Qgdm9pZCAqZGF0YSkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09IGRhdGE7Ci19Ci0K
IC8qKgogICogb2ZfZnBnYV9tZ3JfZ2V0IC0gR2l2ZW4gYSBkZXZpY2Ugbm9kZSwgZ2V0IGEgcmVm
ZXJlbmNlIHRvIGEgZnBnYSBtZ3IuCiAgKgpAQCAtNDk4LDggKzQ5Myw3IEBAIHN0cnVjdCBmcGdh
X21hbmFnZXIgKm9mX2ZwZ2FfbWdyX2dldChzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUpCiB7CiAJ
c3RydWN0IGRldmljZSAqZGV2OwogCi0JZGV2ID0gY2xhc3NfZmluZF9kZXZpY2UoZnBnYV9tZ3Jf
Y2xhc3MsIE5VTEwsIG5vZGUsCi0JCQkJZnBnYV9tZ3Jfb2Zfbm9kZV9tYXRjaCk7CisJZGV2ID0g
Y2xhc3NfZmluZF9kZXZpY2VfYnlfb2Zfbm9kZShmcGdhX21ncl9jbGFzcywgbm9kZSk7CiAJaWYg
KCFkZXYpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9ERVYpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vZHJtX21pcGlfZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX21pcGlfZHNpLmMK
aW5kZXggYWQxOWRmMDY4NmM5Li5iZDI0OThiYmQ3NGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9kcm1fbWlwaV9kc2kuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX21pcGlfZHNpLmMK
QEAgLTkzLDExICs5Myw2IEBAIHN0YXRpYyBzdHJ1Y3QgYnVzX3R5cGUgbWlwaV9kc2lfYnVzX3R5
cGUgPSB7CiAJLnBtID0gJm1pcGlfZHNpX2RldmljZV9wbV9vcHMsCiB9OwogCi1zdGF0aWMgaW50
IG9mX2RldmljZV9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0IHZvaWQgKmRhdGEpCi17
Ci0JcmV0dXJuIGRldi0+b2Zfbm9kZSA9PSBkYXRhOwotfQotCiAvKioKICAqIG9mX2ZpbmRfbWlw
aV9kc2lfZGV2aWNlX2J5X25vZGUoKSAtIGZpbmQgdGhlIE1JUEkgRFNJIGRldmljZSBtYXRjaGlu
ZyBhCiAgKiAgICBkZXZpY2UgdHJlZSBub2RlCkBAIC0xMTAsNyArMTA1LDcgQEAgc3RydWN0IG1p
cGlfZHNpX2RldmljZSAqb2ZfZmluZF9taXBpX2RzaV9kZXZpY2VfYnlfbm9kZShzdHJ1Y3QgZGV2
aWNlX25vZGUgKm5wKQogewogCXN0cnVjdCBkZXZpY2UgKmRldjsKIAotCWRldiA9IGJ1c19maW5k
X2RldmljZSgmbWlwaV9kc2lfYnVzX3R5cGUsIE5VTEwsIG5wLCBvZl9kZXZpY2VfbWF0Y2gpOwor
CWRldiA9IGJ1c19maW5kX2RldmljZV9ieV9vZl9ub2RlKCZtaXBpX2RzaV9idXNfdHlwZSwgbnAp
OwogCiAJcmV0dXJuIGRldiA/IHRvX21pcGlfZHNpX2RldmljZShkZXYpIDogTlVMTDsKIH0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvaTJjL2kyYy1jb3JlLW9mLmMgYi9kcml2ZXJzL2kyYy9pMmMtY29y
ZS1vZi5jCmluZGV4IGQxYzQ4ZGVjNzExOC4uNmY2MzJkNTQzZmNjIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2kyYy9pMmMtY29yZS1vZi5jCisrKyBiL2RyaXZlcnMvaTJjL2kyYy1jb3JlLW9mLmMKQEAg
LTExMywxMSArMTEzLDYgQEAgdm9pZCBvZl9pMmNfcmVnaXN0ZXJfZGV2aWNlcyhzdHJ1Y3QgaTJj
X2FkYXB0ZXIgKmFkYXApCiAJb2Zfbm9kZV9wdXQoYnVzKTsKIH0KIAotc3RhdGljIGludCBvZl9k
ZXZfbm9kZV9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0IHZvaWQgKmRhdGEpCi17Ci0J
cmV0dXJuIGRldi0+b2Zfbm9kZSA9PSBkYXRhOwotfQotCiBzdGF0aWMgaW50IG9mX2Rldl9vcl9w
YXJlbnRfbm9kZV9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0IHZvaWQgKmRhdGEpCiB7
CiAJaWYgKGRldi0+b2Zfbm9kZSA9PSBkYXRhKQpAQCAtMTM1LDcgKzEzMCw3IEBAIHN0cnVjdCBp
MmNfY2xpZW50ICpvZl9maW5kX2kyY19kZXZpY2VfYnlfbm9kZShzdHJ1Y3QgZGV2aWNlX25vZGUg
Km5vZGUpCiAJc3RydWN0IGRldmljZSAqZGV2OwogCXN0cnVjdCBpMmNfY2xpZW50ICpjbGllbnQ7
CiAKLQlkZXYgPSBidXNfZmluZF9kZXZpY2UoJmkyY19idXNfdHlwZSwgTlVMTCwgbm9kZSwgb2Zf
ZGV2X25vZGVfbWF0Y2gpOworCWRldiA9IGJ1c19maW5kX2RldmljZV9ieV9vZl9ub2RlKCZpMmNf
YnVzX3R5cGUsIG5vZGUpOwogCWlmICghZGV2KQogCQlyZXR1cm4gTlVMTDsKIApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9tZmQvYWx0ZXJhLXN5c21nci5jIGIvZHJpdmVycy9tZmQvYWx0ZXJhLXN5c21n
ci5jCmluZGV4IDJlZTE0ZDhhNmQzMS4uZDJhMTNhNTQ3YTNjIDEwMDY0NAotLS0gYS9kcml2ZXJz
L21mZC9hbHRlcmEtc3lzbWdyLmMKKysrIGIvZHJpdmVycy9tZmQvYWx0ZXJhLXN5c21nci5jCkBA
IC04NywxNiArODcsNiBAQCBzdGF0aWMgc3RydWN0IHJlZ21hcF9jb25maWcgYWx0cl9zeXNtZ3Jf
cmVnbWFwX2NmZyA9IHsKIAkudXNlX3NpbmdsZV93cml0ZSA9IHRydWUsCiB9OwogCi0vKioKLSAq
IHN5c21ncl9tYXRjaF9waGFuZGxlCi0gKiBNYXRjaGluZyBmdW5jdGlvbiB1c2VkIGJ5IGRyaXZl
cl9maW5kX2RldmljZSgpLgotICogUmV0dXJuOiBUcnVlIGlmIG1hdGNoIGlzIGZvdW5kLCBvdGhl
cndpc2UgZmFsc2UuCi0gKi8KLXN0YXRpYyBpbnQgc3lzbWdyX21hdGNoX3BoYW5kbGUoc3RydWN0
IGRldmljZSAqZGV2LCBjb25zdCB2b2lkICpkYXRhKQotewotCXJldHVybiBkZXYtPm9mX25vZGUg
PT0gKGNvbnN0IHN0cnVjdCBkZXZpY2Vfbm9kZSAqKWRhdGE7Ci19Ci0KIC8qKgogICogYWx0cl9z
eXNtZ3JfcmVnbWFwX2xvb2t1cF9ieV9waGFuZGxlCiAgKiBGaW5kIHRoZSBzeXNtZ3IgcHJldmlv
dXMgY29uZmlndXJlZCBpbiBwcm9iZSgpIGFuZCByZXR1cm4gcmVnbWFwIHByb3BlcnR5LgpAQCAt
MTE3LDggKzEwNyw4IEBAIHN0cnVjdCByZWdtYXAgKmFsdHJfc3lzbWdyX3JlZ21hcF9sb29rdXBf
YnlfcGhhbmRsZShzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLAogCWlmICghc3lzbWdyX25wKQogCQly
ZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKIAotCWRldiA9IGRyaXZlcl9maW5kX2RldmljZSgmYWx0
cl9zeXNtZ3JfZHJpdmVyLmRyaXZlciwgTlVMTCwKLQkJCQkgKHZvaWQgKilzeXNtZ3JfbnAsIHN5
c21ncl9tYXRjaF9waGFuZGxlKTsKKwlkZXYgPSBkcml2ZXJfZmluZF9kZXZpY2VfYnlfb2Zfbm9k
ZSgmYWx0cl9zeXNtZ3JfZHJpdmVyLmRyaXZlciwKKwkJCQkJICAgICh2b2lkICopc3lzbWdyX25w
KTsKIAlvZl9ub2RlX3B1dChzeXNtZ3JfbnApOwogCWlmICghZGV2KQogCQlyZXR1cm4gRVJSX1BU
UigtRVBST0JFX0RFRkVSKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbXV4L2NvcmUuYyBiL2RyaXZl
cnMvbXV4L2NvcmUuYwppbmRleCBkMTI3MWMxZWUyM2MuLjFmYjIyMzg4ZTdlMCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9tdXgvY29yZS5jCisrKyBiL2RyaXZlcnMvbXV4L2NvcmUuYwpAQCAtNDA1LDE3
ICs0MDUsMTIgQEAgaW50IG11eF9jb250cm9sX2Rlc2VsZWN0KHN0cnVjdCBtdXhfY29udHJvbCAq
bXV4KQogfQogRVhQT1JUX1NZTUJPTF9HUEwobXV4X2NvbnRyb2xfZGVzZWxlY3QpOwogCi1zdGF0
aWMgaW50IG9mX2Rldl9ub2RlX21hdGNoKHN0cnVjdCBkZXZpY2UgKmRldiwgY29uc3Qgdm9pZCAq
ZGF0YSkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09IGRhdGE7Ci19Ci0KIC8qIE5vdGUgdGhp
cyBmdW5jdGlvbiByZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBtdXhfY2hpcCBkZXYuICovCiBz
dGF0aWMgc3RydWN0IG11eF9jaGlwICpvZl9maW5kX211eF9jaGlwX2J5X25vZGUoc3RydWN0IGRl
dmljZV9ub2RlICpucCkKIHsKIAlzdHJ1Y3QgZGV2aWNlICpkZXY7CiAKLQlkZXYgPSBjbGFzc19m
aW5kX2RldmljZSgmbXV4X2NsYXNzLCBOVUxMLCBucCwgb2ZfZGV2X25vZGVfbWF0Y2gpOworCWRl
diA9IGNsYXNzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoJm11eF9jbGFzcywgbnApOwogCiAJcmV0
dXJuIGRldiA/IHRvX211eF9jaGlwKGRldikgOiBOVUxMOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9uZXQvcGh5L21kaW9fYnVzLmMgYi9kcml2ZXJzL25ldC9waHkvbWRpb19idXMuYwppbmRleCBi
ZDA0ZmU3NjIwNTYuLmNlOTQwODcxMzMxZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvcGh5L21k
aW9fYnVzLmMKKysrIGIvZHJpdmVycy9uZXQvcGh5L21kaW9fYnVzLmMKQEAgLTI2MiwxMSArMjYy
LDYgQEAgc3RhdGljIHN0cnVjdCBjbGFzcyBtZGlvX2J1c19jbGFzcyA9IHsKIH07CiAKICNpZiBJ
U19FTkFCTEVEKENPTkZJR19PRl9NRElPKQotLyogSGVscGVyIGZ1bmN0aW9uIGZvciBvZl9tZGlv
X2ZpbmRfYnVzICovCi1zdGF0aWMgaW50IG9mX21kaW9fYnVzX21hdGNoKHN0cnVjdCBkZXZpY2Ug
KmRldiwgY29uc3Qgdm9pZCAqbWRpb19idXNfbnApCi17Ci0JcmV0dXJuIGRldi0+b2Zfbm9kZSA9
PSBtZGlvX2J1c19ucDsKLX0KIC8qKgogICogb2ZfbWRpb19maW5kX2J1cyAtIEdpdmVuIGFuIG1p
aV9idXMgbm9kZSwgZmluZCB0aGUgbWlpX2J1cy4KICAqIEBtZGlvX2J1c19ucDogUG9pbnRlciB0
byB0aGUgbWlpX2J1cy4KQEAgLTI4Nyw5ICsyODIsNyBAQCBzdHJ1Y3QgbWlpX2J1cyAqb2ZfbWRp
b19maW5kX2J1cyhzdHJ1Y3QgZGV2aWNlX25vZGUgKm1kaW9fYnVzX25wKQogCWlmICghbWRpb19i
dXNfbnApCiAJCXJldHVybiBOVUxMOwogCi0JZCA9IGNsYXNzX2ZpbmRfZGV2aWNlKCZtZGlvX2J1
c19jbGFzcywgTlVMTCwgIG1kaW9fYnVzX25wLAotCQkJICAgICAgb2ZfbWRpb19idXNfbWF0Y2gp
OwotCisJZCA9IGNsYXNzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoJm1kaW9fYnVzX2NsYXNzLCBt
ZGlvX2J1c19ucCk7CiAJcmV0dXJuIGQgPyB0b19taWlfYnVzKGQpIDogTlVMTDsKIH0KIEVYUE9S
VF9TWU1CT0wob2ZfbWRpb19maW5kX2J1cyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL252bWVtL2Nv
cmUuYyBiL2RyaXZlcnMvbnZtZW0vY29yZS5jCmluZGV4IGFjNWQ5NDViZTg4YS4uMDU3ZDFmZjg3
ZDVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL252bWVtL2NvcmUuYworKysgYi9kcml2ZXJzL252bWVt
L2NvcmUuYwpAQCAtNzYsMTEgKzc2LDYgQEAgc3RhdGljIHN0cnVjdCBidXNfdHlwZSBudm1lbV9i
dXNfdHlwZSA9IHsKIAkubmFtZQkJPSAibnZtZW0iLAogfTsKIAotc3RhdGljIGludCBvZl9udm1l
bV9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0IHZvaWQgKm52bWVtX25wKQotewotCXJl
dHVybiBkZXYtPm9mX25vZGUgPT0gbnZtZW1fbnA7Ci19Ci0KIHN0YXRpYyBzdHJ1Y3QgbnZtZW1f
ZGV2aWNlICpvZl9udm1lbV9maW5kKHN0cnVjdCBkZXZpY2Vfbm9kZSAqbnZtZW1fbnApCiB7CiAJ
c3RydWN0IGRldmljZSAqZDsKQEAgLTg4LDcgKzgzLDcgQEAgc3RhdGljIHN0cnVjdCBudm1lbV9k
ZXZpY2UgKm9mX252bWVtX2ZpbmQoc3RydWN0IGRldmljZV9ub2RlICpudm1lbV9ucCkKIAlpZiAo
IW52bWVtX25wKQogCQlyZXR1cm4gTlVMTDsKIAotCWQgPSBidXNfZmluZF9kZXZpY2UoJm52bWVt
X2J1c190eXBlLCBOVUxMLCBudm1lbV9ucCwgb2ZfbnZtZW1fbWF0Y2gpOworCWQgPSBidXNfZmlu
ZF9kZXZpY2VfYnlfb2Zfbm9kZSgmbnZtZW1fYnVzX3R5cGUsIG52bWVtX25wKTsKIAogCWlmICgh
ZCkKIAkJcmV0dXJuIE5VTEw7CmRpZmYgLS1naXQgYS9kcml2ZXJzL29mL29mX21kaW8uYyBiL2Ry
aXZlcnMvb2Yvb2ZfbWRpby5jCmluZGV4IDQ0ZjUzNDk2Y2FiMS4uMDAwYjk1Nzg3ZGYxIDEwMDY0
NAotLS0gYS9kcml2ZXJzL29mL29mX21kaW8uYworKysgYi9kcml2ZXJzL29mL29mX21kaW8uYwpA
QCAtMjgwLDEyICsyODAsNiBAQCBpbnQgb2ZfbWRpb2J1c19yZWdpc3RlcihzdHJ1Y3QgbWlpX2J1
cyAqbWRpbywgc3RydWN0IGRldmljZV9ub2RlICpucCkKIH0KIEVYUE9SVF9TWU1CT0wob2ZfbWRp
b2J1c19yZWdpc3Rlcik7CiAKLS8qIEhlbHBlciBmdW5jdGlvbiBmb3Igb2ZfcGh5X2ZpbmRfZGV2
aWNlICovCi1zdGF0aWMgaW50IG9mX3BoeV9tYXRjaChzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0
IHZvaWQgKnBoeV9ucCkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09IHBoeV9ucDsKLX0KLQog
LyoqCiAgKiBvZl9waHlfZmluZF9kZXZpY2UgLSBHaXZlIGEgUEhZIG5vZGUsIGZpbmQgdGhlIHBo
eV9kZXZpY2UKICAqIEBwaHlfbnA6IFBvaW50ZXIgdG8gdGhlIHBoeSdzIGRldmljZSB0cmVlIG5v
ZGUKQEAgLTMwMSw3ICsyOTUsNyBAQCBzdHJ1Y3QgcGh5X2RldmljZSAqb2ZfcGh5X2ZpbmRfZGV2
aWNlKHN0cnVjdCBkZXZpY2Vfbm9kZSAqcGh5X25wKQogCWlmICghcGh5X25wKQogCQlyZXR1cm4g
TlVMTDsKIAotCWQgPSBidXNfZmluZF9kZXZpY2UoJm1kaW9fYnVzX3R5cGUsIE5VTEwsIHBoeV9u
cCwgb2ZfcGh5X21hdGNoKTsKKwlkID0gYnVzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoJm1kaW9f
YnVzX3R5cGUsIHBoeV9ucCk7CiAJaWYgKGQpIHsKIAkJbWRpb2RldiA9IHRvX21kaW9fZGV2aWNl
KGQpOwogCQlpZiAobWRpb2Rldi0+ZmxhZ3MgJiBNRElPX0RFVklDRV9GTEFHX1BIWSkKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvb2YvcGxhdGZvcm0uYyBiL2RyaXZlcnMvb2YvcGxhdGZvcm0uYwppbmRl
eCA3ODAxZTI1ZTY4OTUuLmI0N2EyMjkyZmU4ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9vZi9wbGF0
Zm9ybS5jCisrKyBiL2RyaXZlcnMvb2YvcGxhdGZvcm0uYwpAQCAtMzcsMTEgKzM3LDYgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBvZl9kZXZpY2VfaWQgb2Zfc2tpcHBlZF9ub2RlX3RhYmxlW10gPSB7
CiAJe30gLyogRW1wdHkgdGVybWluYXRlZCBsaXN0ICovCiB9OwogCi1zdGF0aWMgaW50IG9mX2Rl
dl9ub2RlX21hdGNoKHN0cnVjdCBkZXZpY2UgKmRldiwgY29uc3Qgdm9pZCAqZGF0YSkKLXsKLQly
ZXR1cm4gZGV2LT5vZl9ub2RlID09IGRhdGE7Ci19Ci0KIC8qKgogICogb2ZfZmluZF9kZXZpY2Vf
Ynlfbm9kZSAtIEZpbmQgdGhlIHBsYXRmb3JtX2RldmljZSBhc3NvY2lhdGVkIHdpdGggYSBub2Rl
CiAgKiBAbnA6IFBvaW50ZXIgdG8gZGV2aWNlIHRyZWUgbm9kZQpAQCAtNTUsNyArNTAsNyBAQCBz
dHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpvZl9maW5kX2RldmljZV9ieV9ub2RlKHN0cnVjdCBkZXZp
Y2Vfbm9kZSAqbnApCiB7CiAJc3RydWN0IGRldmljZSAqZGV2OwogCi0JZGV2ID0gYnVzX2ZpbmRf
ZGV2aWNlKCZwbGF0Zm9ybV9idXNfdHlwZSwgTlVMTCwgbnAsIG9mX2Rldl9ub2RlX21hdGNoKTsK
KwlkZXYgPSBidXNfZmluZF9kZXZpY2VfYnlfb2Zfbm9kZSgmcGxhdGZvcm1fYnVzX3R5cGUsIG5w
KTsKIAlyZXR1cm4gZGV2ID8gdG9fcGxhdGZvcm1fZGV2aWNlKGRldikgOiBOVUxMOwogfQogRVhQ
T1JUX1NZTUJPTChvZl9maW5kX2RldmljZV9ieV9ub2RlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
cmVndWxhdG9yL29mX3JlZ3VsYXRvci5jIGIvZHJpdmVycy9yZWd1bGF0b3Ivb2ZfcmVndWxhdG9y
LmMKaW5kZXggMzk3OTE4ZWJiYTU1Li4yMGRjYzljMDNhZGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
cmVndWxhdG9yL29mX3JlZ3VsYXRvci5jCisrKyBiL2RyaXZlcnMvcmVndWxhdG9yL29mX3JlZ3Vs
YXRvci5jCkBAIC00NjAsMTYgKzQ2MCwxMSBAQCBzdHJ1Y3QgcmVndWxhdG9yX2luaXRfZGF0YSAq
cmVndWxhdG9yX29mX2dldF9pbml0X2RhdGEoc3RydWN0IGRldmljZSAqZGV2LAogCXJldHVybiBO
VUxMOwogfQogCi1zdGF0aWMgaW50IG9mX25vZGVfbWF0Y2goc3RydWN0IGRldmljZSAqZGV2LCBj
b25zdCB2b2lkICpkYXRhKQotewotCXJldHVybiBkZXYtPm9mX25vZGUgPT0gZGF0YTsKLX0KLQog
c3RydWN0IHJlZ3VsYXRvcl9kZXYgKm9mX2ZpbmRfcmVndWxhdG9yX2J5X25vZGUoc3RydWN0IGRl
dmljZV9ub2RlICpucCkKIHsKIAlzdHJ1Y3QgZGV2aWNlICpkZXY7CiAKLQlkZXYgPSBjbGFzc19m
aW5kX2RldmljZSgmcmVndWxhdG9yX2NsYXNzLCBOVUxMLCBucCwgb2Zfbm9kZV9tYXRjaCk7CisJ
ZGV2ID0gY2xhc3NfZmluZF9kZXZpY2VfYnlfb2Zfbm9kZSgmcmVndWxhdG9yX2NsYXNzLCBucCk7
CiAKIAlyZXR1cm4gZGV2ID8gZGV2X3RvX3JkZXYoZGV2KSA6IE5VTEw7CiB9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL3NwaS9zcGkuYyBiL2RyaXZlcnMvc3BpL3NwaS5jCmluZGV4IDc1YWMwNDZjYWU1
Mi4uYTU5MWRhODc5ODFhIDEwMDY0NAotLS0gYS9kcml2ZXJzL3NwaS9zcGkuYworKysgYi9kcml2
ZXJzL3NwaS9zcGkuYwpAQCAtMzY1MiwzNyArMzY1MiwyNSBAQCBFWFBPUlRfU1lNQk9MX0dQTChz
cGlfd3JpdGVfdGhlbl9yZWFkKTsKIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCiAKICNpZiBJU19FTkFC
TEVEKENPTkZJR19PRikKLXN0YXRpYyBpbnQgX19zcGlfb2ZfZGV2aWNlX21hdGNoKHN0cnVjdCBk
ZXZpY2UgKmRldiwgY29uc3Qgdm9pZCAqZGF0YSkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09
IGRhdGE7Ci19Ci0KIC8qIG11c3QgY2FsbCBwdXRfZGV2aWNlKCkgd2hlbiBkb25lIHdpdGggcmV0
dXJuZWQgc3BpX2RldmljZSBkZXZpY2UgKi8KIHN0cnVjdCBzcGlfZGV2aWNlICpvZl9maW5kX3Nw
aV9kZXZpY2VfYnlfbm9kZShzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUpCiB7Ci0Jc3RydWN0IGRl
dmljZSAqZGV2ID0gYnVzX2ZpbmRfZGV2aWNlKCZzcGlfYnVzX3R5cGUsIE5VTEwsIG5vZGUsCi0J
CQkJCQlfX3NwaV9vZl9kZXZpY2VfbWF0Y2gpOworCXN0cnVjdCBkZXZpY2UgKmRldiA9IGJ1c19m
aW5kX2RldmljZV9ieV9vZl9ub2RlKCZzcGlfYnVzX3R5cGUsIG5vZGUpOworCiAJcmV0dXJuIGRl
diA/IHRvX3NwaV9kZXZpY2UoZGV2KSA6IE5VTEw7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChvZl9m
aW5kX3NwaV9kZXZpY2VfYnlfbm9kZSk7CiAjZW5kaWYgLyogSVNfRU5BQkxFRChDT05GSUdfT0Yp
ICovCiAKICNpZiBJU19FTkFCTEVEKENPTkZJR19PRl9EWU5BTUlDKQotc3RhdGljIGludCBfX3Nw
aV9vZl9jb250cm9sbGVyX21hdGNoKHN0cnVjdCBkZXZpY2UgKmRldiwgY29uc3Qgdm9pZCAqZGF0
YSkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09IGRhdGE7Ci19Ci0KIC8qIHRoZSBzcGkgY29u
dHJvbGxlcnMgYXJlIG5vdCB1c2luZyBzcGlfYnVzLCBzbyB3ZSBmaW5kIGl0IHdpdGggYW5vdGhl
ciB3YXkgKi8KIHN0YXRpYyBzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKm9mX2ZpbmRfc3BpX2NvbnRy
b2xsZXJfYnlfbm9kZShzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUpCiB7CiAJc3RydWN0IGRldmlj
ZSAqZGV2OwogCi0JZGV2ID0gY2xhc3NfZmluZF9kZXZpY2UoJnNwaV9tYXN0ZXJfY2xhc3MsIE5V
TEwsIG5vZGUsCi0JCQkJX19zcGlfb2ZfY29udHJvbGxlcl9tYXRjaCk7CisJZGV2ID0gY2xhc3Nf
ZmluZF9kZXZpY2VfYnlfb2Zfbm9kZSgmc3BpX21hc3Rlcl9jbGFzcywgbm9kZSk7CiAJaWYgKCFk
ZXYgJiYgSVNfRU5BQkxFRChDT05GSUdfU1BJX1NMQVZFKSkKLQkJZGV2ID0gY2xhc3NfZmluZF9k
ZXZpY2UoJnNwaV9zbGF2ZV9jbGFzcywgTlVMTCwgbm9kZSwKLQkJCQkJX19zcGlfb2ZfY29udHJv
bGxlcl9tYXRjaCk7CisJCWRldiA9IGNsYXNzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoJnNwaV9z
bGF2ZV9jbGFzcywgbm9kZSk7CiAJaWYgKCFkZXYpCiAJCXJldHVybiBOVUxMOwogCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L2RldmljZS5oIGIvaW5jbHVkZS9saW51eC9kZXZpY2UuaAppbmRl
eCAzYmEzNzZiOGI0NTYuLjI5ZDhkN2FkNDFlNiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9k
ZXZpY2UuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RldmljZS5oCkBAIC0xODYsNiArMTg2LDE4IEBA
IHN0YXRpYyBpbmxpbmUgc3RydWN0IGRldmljZSAqYnVzX2ZpbmRfZGV2aWNlX2J5X25hbWUoc3Ry
dWN0IGJ1c190eXBlICpidXMsCiAJcmV0dXJuIGJ1c19maW5kX2RldmljZShidXMsIHN0YXJ0LCBu
YW1lLCBkZXZpY2VfbWF0Y2hfbmFtZSk7CiB9CiAKKy8qKgorICogYnVzX2ZpbmRfZGV2aWNlX2J5
X29mX25vZGUgOiBkZXZpY2UgaXRlcmF0b3IgZm9yIGxvY2F0aW5nIGEgcGFydGljdWxhciBkZXZp
Y2UKKyAqIG1hdGNoaW5nIHRoZSBvZl9ub2RlLgorICogQGJ1czogYnVzIHR5cGUKKyAqIEBucDog
b2Zfbm9kZSBvZiB0aGUgZGV2aWNlIHRvIG1hdGNoLgorICovCitzdGF0aWMgaW5saW5lIHN0cnVj
dCBkZXZpY2UgKgorYnVzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoc3RydWN0IGJ1c190eXBlICpi
dXMsIGNvbnN0IHN0cnVjdCBkZXZpY2Vfbm9kZSAqbnApCit7CisJcmV0dXJuIGJ1c19maW5kX2Rl
dmljZShidXMsIE5VTEwsIG5wLCBkZXZpY2VfbWF0Y2hfb2Zfbm9kZSk7Cit9CisKIHN0cnVjdCBk
ZXZpY2UgKnN1YnN5c19maW5kX2RldmljZV9ieV9pZChzdHJ1Y3QgYnVzX3R5cGUgKmJ1cywgdW5z
aWduZWQgaW50IGlkLAogCQkJCQlzdHJ1Y3QgZGV2aWNlICpoaW50KTsKIGludCBidXNfZm9yX2Vh
Y2hfZHJ2KHN0cnVjdCBidXNfdHlwZSAqYnVzLCBzdHJ1Y3QgZGV2aWNlX2RyaXZlciAqc3RhcnQs
CkBAIC0zNjYsNiArMzc4LDE5IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IGRldmljZSAqZHJpdmVy
X2ZpbmRfZGV2aWNlX2J5X25hbWUoc3RydWN0IGRldmljZV9kcml2ZXIgKmRyCiAJcmV0dXJuIGRy
aXZlcl9maW5kX2RldmljZShkcnYsIE5VTEwsIG5hbWUsIGRldmljZV9tYXRjaF9uYW1lKTsKIH0K
IAorLyoqCisgKiBkcml2ZXJfZmluZF9kZXZpY2VfYnlfb2Zfbm9kZS0gZGV2aWNlIGl0ZXJhdG9y
IGZvciBsb2NhdGluZyBhIHBhcnRpY3VsYXIgZGV2aWNlCisgKiBieSBvZl9ub2RlIHBvaW50ZXIu
CisgKiBAZHJpdmVyOiB0aGUgZHJpdmVyIHdlJ3JlIGl0ZXJhdGluZworICogQG5wOiBvZl9ub2Rl
IHBvaW50ZXIgdG8gbWF0Y2guCisgKi8KK3N0YXRpYyBpbmxpbmUgc3RydWN0IGRldmljZSAqCitk
cml2ZXJfZmluZF9kZXZpY2VfYnlfb2Zfbm9kZShzdHJ1Y3QgZGV2aWNlX2RyaXZlciAqZHJ2LAor
CQkJICAgICAgY29uc3Qgc3RydWN0IGRldmljZV9ub2RlICpucCkKK3sKKwlyZXR1cm4gZHJpdmVy
X2ZpbmRfZGV2aWNlKGRydiwgTlVMTCwgbnAsIGRldmljZV9tYXRjaF9vZl9ub2RlKTsKK30KKwog
dm9pZCBkcml2ZXJfZGVmZXJyZWRfcHJvYmVfYWRkKHN0cnVjdCBkZXZpY2UgKmRldik7CiBpbnQg
ZHJpdmVyX2RlZmVycmVkX3Byb2JlX2NoZWNrX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldik7CiBp
bnQgZHJpdmVyX2RlZmVycmVkX3Byb2JlX2NoZWNrX3N0YXRlX2NvbnRpbnVlKHN0cnVjdCBkZXZp
Y2UgKmRldik7CkBAIC01MDcsNiArNTMyLDE4IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IGRldmlj
ZSAqY2xhc3NfZmluZF9kZXZpY2VfYnlfbmFtZShzdHJ1Y3QgY2xhc3MgKmNsYXNzLAogCXJldHVy
biBjbGFzc19maW5kX2RldmljZShjbGFzcywgTlVMTCwgbmFtZSwgZGV2aWNlX21hdGNoX25hbWUp
OwogfQogCisvKioKKyAqIGNsYXNzX2ZpbmRfZGV2aWNlX2J5X29mX25vZGUgOiBkZXZpY2UgaXRl
cmF0b3IgZm9yIGxvY2F0aW5nIGEgcGFydGljdWxhciBkZXZpY2UKKyAqIG1hdGNoaW5nIHRoZSBv
Zl9ub2RlLgorICogQGNsYXNzOiBjbGFzcyB0eXBlCisgKiBAbnA6IG9mX25vZGUgb2YgdGhlIGRl
dmljZSB0byBtYXRjaC4KKyAqLworc3RhdGljIGlubGluZSBzdHJ1Y3QgZGV2aWNlICoKK2NsYXNz
X2ZpbmRfZGV2aWNlX2J5X29mX25vZGUoc3RydWN0IGNsYXNzICpjbGFzcywgY29uc3Qgc3RydWN0
IGRldmljZV9ub2RlICpucCkKK3sKKwlyZXR1cm4gY2xhc3NfZmluZF9kZXZpY2UoY2xhc3MsIE5V
TEwsIG5wLCBkZXZpY2VfbWF0Y2hfb2Zfbm9kZSk7Cit9CisKIHN0cnVjdCBjbGFzc19hdHRyaWJ1
dGUgewogCXN0cnVjdCBhdHRyaWJ1dGUgYXR0cjsKIAlzc2l6ZV90ICgqc2hvdykoc3RydWN0IGNs
YXNzICpjbGFzcywgc3RydWN0IGNsYXNzX2F0dHJpYnV0ZSAqYXR0ciwKZGlmZiAtLWdpdCBhL3Nv
dW5kL3NvYy9yb2NrY2hpcC9yazMzOTlfZ3J1X3NvdW5kLmMgYi9zb3VuZC9zb2Mvcm9ja2NoaXAv
cmszMzk5X2dydV9zb3VuZC5jCmluZGV4IGMxNmIwZmZlOGNmYy4uZDk1MTEwMGJmNzcwIDEwMDY0
NAotLS0gYS9zb3VuZC9zb2Mvcm9ja2NoaXAvcmszMzk5X2dydV9zb3VuZC5jCisrKyBiL3NvdW5k
L3NvYy9yb2NrY2hpcC9yazMzOTlfZ3J1X3NvdW5kLmMKQEAgLTQyMiwxMSArNDIyLDYgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBkYWlsaW5rX21hdGNoX2RhdGEgZGFpbGlua19tYXRjaFtdID0gewog
CX0sCiB9OwogCi1zdGF0aWMgaW50IG9mX2Rldl9ub2RlX21hdGNoKHN0cnVjdCBkZXZpY2UgKmRl
diwgY29uc3Qgdm9pZCAqZGF0YSkKLXsKLQlyZXR1cm4gZGV2LT5vZl9ub2RlID09IGRhdGE7Ci19
Ci0KIHN0YXRpYyBpbnQgcm9ja2NoaXBfc291bmRfY29kZWNfbm9kZV9tYXRjaChzdHJ1Y3QgZGV2
aWNlX25vZGUgKm5wX2NvZGVjKQogewogCXN0cnVjdCBkZXZpY2UgKmRldjsKQEAgLTQzOCw4ICs0
MzMsOCBAQCBzdGF0aWMgaW50IHJvY2tjaGlwX3NvdW5kX2NvZGVjX25vZGVfbWF0Y2goc3RydWN0
IGRldmljZV9ub2RlICpucF9jb2RlYykKIAkJCWNvbnRpbnVlOwogCiAJCWlmIChkYWlsaW5rX21h
dGNoW2ldLmJ1c190eXBlKSB7Ci0JCQlkZXYgPSBidXNfZmluZF9kZXZpY2UoZGFpbGlua19tYXRj
aFtpXS5idXNfdHlwZSwgTlVMTCwKLQkJCQkJICAgICAgbnBfY29kZWMsIG9mX2Rldl9ub2RlX21h
dGNoKTsKKwkJCWRldiA9IGJ1c19maW5kX2RldmljZV9ieV9vZl9ub2RlKGRhaWxpbmtfbWF0Y2hb
aV0uYnVzX3R5cGUsCisJCQkJCQkJIG5wX2NvZGVjKTsKIAkJCWlmICghZGV2KQogCQkJCWNvbnRp
bnVlOwogCQkJcHV0X2RldmljZShkZXYpOwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1k
ZXZlbEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9kcmktZGV2ZWw=
