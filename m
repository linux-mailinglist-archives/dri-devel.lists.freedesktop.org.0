Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4DD6810FCA
	for <lists+dri-devel@lfdr.de>; Thu,  2 May 2019 01:04:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0342D892FD;
	Wed,  1 May 2019 23:04:27 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mail-pg1-x54a.google.com (mail-pg1-x54a.google.com
 [IPv6:2607:f8b0:4864:20::54a])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2593C892FD
 for <dri-devel@lists.freedesktop.org>; Wed,  1 May 2019 23:04:26 +0000 (UTC)
Received: by mail-pg1-x54a.google.com with SMTP id l13so277143pgp.3
 for <dri-devel@lists.freedesktop.org>; Wed, 01 May 2019 16:04:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc;
 bh=+G7LPM+i6NmkVoLbCU7sAmRt474gzlRI9LU6GUnDedQ=;
 b=aKR82awWi7a7zEaKeDtGzyi2CziMvE/O3Gbe1bWZy6Gddp6CoMDQaqzUrSDfhW8+FX
 zxKTsZDZ7sdXsJrwepR13fHxc4DkWjTz/jdtdXhrAFvI4KukjHD7pcv0dSMD5Dfs+/j0
 Ok43M36x9Km4F/CS1WAeMkz4dV2ukYKq7iMCh/nYzsIo2mhcbZ849MJhR6OZRrmC1isW
 nGexPjrzamMnGIJGTXfaVmzgWnJTbfBx5lFF1dzYTeE/3myFQmacyLsHFh/XWNFQaEnG
 5BWQQWFp6q3C0JHsGe6lVkRlkSjkmNmBb373Bavq3ofrvXU2aO6ypzXL5LZHzxJWzoyI
 WtNg==
X-Gm-Message-State: APjAAAXGDCnpJ0shCNsaRb39DyOMOWungbE8MJSKSCFRHz23pA63AWrN
 ec2gCRADfhh/9xVkMsmFaHQrjOEOji28Rm4bbZ9hEw==
X-Google-Smtp-Source: APXvYqxsjU1jFWzO3KypwMN2P1uX9t76vdHAoPQyTHx1Ml5WxKjLGQPFdzuPJIDtR+IZMzabIuwjhDfLR7kIiw0TlZZr+w==
X-Received: by 2002:a63:30c5:: with SMTP id w188mr617139pgw.76.1556751865309; 
 Wed, 01 May 2019 16:04:25 -0700 (PDT)
Date: Wed,  1 May 2019 16:01:19 -0700
In-Reply-To: <20190501230126.229218-1-brendanhiggins@google.com>
Message-Id: <20190501230126.229218-11-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20190501230126.229218-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.21.0.593.g511ec345e18-goog
Subject: [PATCH v2 10/17] kunit: test: add the concept of assertions
From: Brendan Higgins <brendanhiggins@google.com>
To: frowand.list@gmail.com, gregkh@linuxfoundation.org, keescook@google.com, 
 kieran.bingham@ideasonboard.com, mcgrof@kernel.org, robh@kernel.org, 
 sboyd@kernel.org, shuah@kernel.org
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc;
 bh=+G7LPM+i6NmkVoLbCU7sAmRt474gzlRI9LU6GUnDedQ=;
 b=uzPCjNqZ93NeuPZv1xpyKr2I02dQc9jXSsfzeRE9d/VVIp/KCqGRtPOuQRczZOqBBy
 KiP0Jy16kw2cRjZ6q7g+FeMc92Wd2TQJatyA3GeaZ43pwFhVKKyPeEfwzNjUVFB1OwTT
 agFWxKDeW5uLx19DJdgcnZ4Y7WL7qraikxIcYSHrBt48BZQb9XBvWHjAkQ+HZ3MhaW26
 TMbwN4V6UA52307leg95t5nPs2bB2AiVWTvE7NcOI+LNeFGFRd2a02pQt53fgw7rDKMX
 /ZNZzs/kjy3pQoqX3aX1uFENj83rL1Cnr94qmhaM2bj/vEkOD4mivJEc+5p3TCaKvqIV
 uzfg==
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: pmladek@suse.com, linux-doc@vger.kernel.org, amir73il@gmail.com,
 Brendan Higgins <brendanhiggins@google.com>, dri-devel@lists.freedesktop.org,
 Alexander.Levin@microsoft.com, linux-kselftest@vger.kernel.org,
 linux-nvdimm@lists.01.org, khilman@baylibre.com, knut.omang@oracle.com,
 wfg@linux.intel.com, joel@jms.id.au, rientjes@google.com, jdike@addtoit.com,
 dan.carpenter@oracle.com, devicetree@vger.kernel.org,
 linux-kbuild@vger.kernel.org, Tim.Bird@sony.com, linux-um@lists.infradead.org,
 rostedt@goodmis.org, julia.lawall@lip6.fr, dan.j.williams@intel.com,
 kunit-dev@googlegroups.com, richard@nod.at, linux-kernel@vger.kernel.org,
 mpe@ellerman.id.au, linux-fsdevel@vger.kernel.org, logang@deltatee.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

QWRkIHN1cHBvcnQgZm9yIGFzc2VydGlvbnMgd2hpY2ggYXJlIGxpa2UgZXhwZWN0YXRpb25zIGV4
Y2VwdCB0aGUgdGVzdAp0ZXJtaW5hdGVzIGlmIHRoZSBhc3NlcnRpb24gaXMgbm90IHNhdGlzZmll
ZC4KClRoZSBpZGVhIHdpdGggYXNzZXJ0aW9ucyBpcyB0aGF0IHlvdSB1c2UgdGhlbSB0byBzdGF0
ZSBhbGwgdGhlCnByZWNvbmRpdGlvbnMgZm9yIHlvdXIgdGVzdC4gTG9naWNhbGx5IHNwZWFraW5n
LCB0aGVzZSBhcmUgdGhlIHByZW1pc2VzCm9mIHRoZSB0ZXN0IGNhc2UsIHNvIGlmIGEgcHJlbWlz
ZSBpc24ndCB0cnVlLCB0aGVyZSBpcyBubyBwb2ludCBpbgpjb250aW51aW5nIHRoZSB0ZXN0IGNh
c2UgYmVjYXVzZSB0aGVyZSBhcmUgbm8gY29uY2x1c2lvbnMgdGhhdCBjYW4gYmUKZHJhd24gd2l0
aG91dCB0aGUgcHJlbWlzZXMuIFdoZXJlYXMsIHRoZSBleHBlY3RhdGlvbiBpcyB0aGUgdGhpbmcg
eW91CmFyZSB0cnlpbmcgdG8gcHJvdmUuIEl0IGlzIG5vdCB1c2VkIHVuaXZlcnNhbGx5IGluIHgt
dW5pdCBzdHlsZSB0ZXN0CmZyYW1ld29ya3MsIGJ1dCBJIHJlYWxseSBsaWtlIGl0IGFzIGEgY29u
dmVudGlvbi4gIFlvdSBjb3VsZCBzdGlsbApleHByZXNzIHRoZSBpZGVhIG9mIGEgcHJlbWlzZSB1
c2luZyB0aGUgYWJvdmUgaWRpb20sIGJ1dCBJIHRoaW5rCktVTklUX0FTU0VSVF8qIHN0YXRlcyB0
aGUgaW50ZW5kZWQgaWRlYSBwZXJmZWN0bHkuCgpTaWduZWQtb2ZmLWJ5OiBCcmVuZGFuIEhpZ2dp
bnMgPGJyZW5kYW5oaWdnaW5zQGdvb2dsZS5jb20+Ci0tLQogaW5jbHVkZS9rdW5pdC90ZXN0Lmgg
ICAgICAgfCA0MDEgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLQoga3VuaXQv
c3RyaW5nLXN0cmVhbS10ZXN0LmMgfCAgMTIgKy0KIGt1bml0L3Rlc3QtdGVzdC5jICAgICAgICAg
IHwgICAyICsKIGt1bml0L3Rlc3QuYyAgICAgICAgICAgICAgIHwgIDMzICsrKwogNCBmaWxlcyBj
aGFuZ2VkLCA0MzkgaW5zZXJ0aW9ucygrKSwgOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2t1bml0L3Rlc3QuaCBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCmluZGV4IDFiNzdjYWVi
NWQ1MWYuLmJiMmYzZTYzYTM1MjIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUva3VuaXQvdGVzdC5oCisr
KyBiL2luY2x1ZGUva3VuaXQvdGVzdC5oCkBAIC04NSw5ICs4NSwxMCBAQCBzdHJ1Y3Qga3VuaXQ7
CiAgKiBAbmFtZTogdGhlIG5hbWUgb2YgdGhlIHRlc3QgY2FzZS4KICAqCiAgKiBBIHRlc3QgY2Fz
ZSBpcyBhIGZ1bmN0aW9uIHdpdGggdGhlIHNpZ25hdHVyZSwgYGB2b2lkICgqKShzdHJ1Y3Qga3Vu
aXQgKilgYAotICogdGhhdCBtYWtlcyBleHBlY3RhdGlvbnMgKHNlZSBLVU5JVF9FWFBFQ1RfVFJV
RSgpKSBhYm91dCBjb2RlIHVuZGVyIHRlc3QuIEVhY2gKLSAqIHRlc3QgY2FzZSBpcyBhc3NvY2lh
dGVkIHdpdGggYSAmc3RydWN0IGt1bml0X21vZHVsZSBhbmQgd2lsbCBiZSBydW4gYWZ0ZXIgdGhl
Ci0gKiBtb2R1bGUncyBpbml0IGZ1bmN0aW9uIGFuZCBmb2xsb3dlZCBieSB0aGUgbW9kdWxlJ3Mg
ZXhpdCBmdW5jdGlvbi4KKyAqIHRoYXQgbWFrZXMgZXhwZWN0YXRpb25zIGFuZCBhc3NlcnRpb25z
IChzZWUgS1VOSVRfRVhQRUNUX1RSVUUoKSBhbmQKKyAqIEtVTklUX0FTU0VSVF9UUlVFKCkpIGFi
b3V0IGNvZGUgdW5kZXIgdGVzdC4gRWFjaCB0ZXN0IGNhc2UgaXMgYXNzb2NpYXRlZCB3aXRoCisg
KiBhICZzdHJ1Y3Qga3VuaXRfbW9kdWxlIGFuZCB3aWxsIGJlIHJ1biBhZnRlciB0aGUgbW9kdWxl
J3MgaW5pdCBmdW5jdGlvbiBhbmQKKyAqIGZvbGxvd2VkIGJ5IHRoZSBtb2R1bGUncyBleGl0IGZ1
bmN0aW9uLgogICoKICAqIEEgdGVzdCBjYXNlIHNob3VsZCBiZSBzdGF0aWMgYW5kIHNob3VsZCBv
bmx5IGJlIGNyZWF0ZWQgd2l0aCB0aGUgS1VOSVRfQ0FTRSgpCiAgKiBtYWNybzsgYWRkaXRpb25h
bGx5LCBldmVyeSBhcnJheSBvZiB0ZXN0IGNhc2VzIHNob3VsZCBiZSB0ZXJtaW5hdGVkIHdpdGgg
YW4KQEAgLTcwNSw0ICs3MDYsMzk4IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBrdW5pdF9leHBlY3Rf
YmluYXJ5KHN0cnVjdCBrdW5pdCAqdGVzdCwKIAlLVU5JVF9FWFBFQ1RfRU5EKHRlc3QsICFJU19F
UlJfT1JfTlVMTChfX3B0ciksIF9fc3RyZWFtKTsJICAgICAgIFwKIH0gd2hpbGUgKDApCiAKK3N0
YXRpYyBpbmxpbmUgc3RydWN0IGt1bml0X3N0cmVhbSAqa3VuaXRfYXNzZXJ0X3N0YXJ0KHN0cnVj
dCBrdW5pdCAqdGVzdCwKKwkJCQkJCSAgICAgIGNvbnN0IGNoYXIgKmZpbGUsCisJCQkJCQkgICAg
ICBjb25zdCBjaGFyICpsaW5lKQoreworCXN0cnVjdCBrdW5pdF9zdHJlYW0gKnN0cmVhbSA9IGt1
bml0X25ld19zdHJlYW0odGVzdCk7CisKKwlrdW5pdF9zdHJlYW1fYWRkKHN0cmVhbSwgIkFTU0VS
VElPTiBGQUlMRUQgYXQgJXM6JXNcblx0IiwgZmlsZSwgbGluZSk7CisKKwlyZXR1cm4gc3RyZWFt
OworfQorCitzdGF0aWMgaW5saW5lIHZvaWQga3VuaXRfYXNzZXJ0X2VuZChzdHJ1Y3Qga3VuaXQg
KnRlc3QsCisJCQkJICAgIGJvb2wgc3VjY2VzcywKKwkJCQkgICAgc3RydWN0IGt1bml0X3N0cmVh
bSAqc3RyZWFtKQoreworCWlmICghc3VjY2VzcykgeworCQl0ZXN0LT5mYWlsKHRlc3QsIHN0cmVh
bSk7CisJCXRlc3QtPmFib3J0KHRlc3QpOworCX0gZWxzZSB7CisJCWt1bml0X3N0cmVhbV9jbGVh
cihzdHJlYW0pOworCX0KK30KKworI2RlZmluZSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCkgXAor
CQlrdW5pdF9hc3NlcnRfc3RhcnQodGVzdCwgX19GSUxFX18sIF9fc3RyaW5naWZ5KF9fTElORV9f
KSkKKworI2RlZmluZSBLVU5JVF9BU1NFUlRfRU5EKHRlc3QsIHN1Y2Nlc3MsIHN0cmVhbSkgXAor
CQlrdW5pdF9hc3NlcnRfZW5kKHRlc3QsIHN1Y2Nlc3MsIHN0cmVhbSkKKworI2RlZmluZSBLVU5J
VF9BU1NFUlQodGVzdCwgc3VjY2VzcywgbWVzc2FnZSkgZG8gewkJCSAgICAgICBcCisJc3RydWN0
IGt1bml0X3N0cmVhbSAqX19zdHJlYW0gPSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCk7CSAgICAg
ICBcCisJCQkJCQkJCQkgICAgICAgXAorCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIG1lc3Nh
Z2UpOwkJCQkgICAgICAgXAorCUtVTklUX0FTU0VSVF9FTkQodGVzdCwgc3VjY2VzcywgX19zdHJl
YW0pOwkJCSAgICAgICBcCit9IHdoaWxlICgwKQorCisjZGVmaW5lIEtVTklUX0FTU0VSVF9NU0co
dGVzdCwgc3VjY2VzcywgbWVzc2FnZSwgZm10LCAuLi4pIGRvIHsJCSAgICAgICBcCisJc3RydWN0
IGt1bml0X3N0cmVhbSAqX19zdHJlYW0gPSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCk7CSAgICAg
ICBcCisJCQkJCQkJCQkgICAgICAgXAorCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIG1lc3Nh
Z2UpOwkJCQkgICAgICAgXAorCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIGZtdCwgIyNfX1ZB
X0FSR1NfXyk7CQkJICAgICAgIFwKKwlLVU5JVF9BU1NFUlRfRU5EKHRlc3QsIHN1Y2Nlc3MsIF9f
c3RyZWFtKTsJCQkgICAgICAgXAorfSB3aGlsZSAoMCkKKworI2RlZmluZSBLVU5JVF9BU1NFUlRf
RkFJTFVSRSh0ZXN0LCBmbXQsIC4uLikgZG8gewkJCSAgICAgICBcCisJc3RydWN0IGt1bml0X3N0
cmVhbSAqX19zdHJlYW0gPSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCk7CSAgICAgICBcCisJCQkJ
CQkJCQkgICAgICAgXAorCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIGZtdCwgIyNfX1ZBX0FS
R1NfXyk7CQkJICAgICAgIFwKKwlLVU5JVF9BU1NFUlRfRU5EKHRlc3QsIGZhbHNlLCBfX3N0cmVh
bSk7CQkJICAgICAgIFwKK30gd2hpbGUgKDApCisKKy8qKgorICogS1VOSVRfQVNTRVJUX1RSVUUo
KSAtIFNldHMgYW4gYXNzZXJ0aW9uIHRoYXQgQGNvbmRpdGlvbiBpcyB0cnVlLgorICogQHRlc3Q6
IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGNvbmRpdGlvbjogYW4gYXJiaXRyYXJ5IGJv
b2xlYW4gZXhwcmVzc2lvbi4gVGhlIHRlc3QgZmFpbHMgYW5kIGFib3J0cyB3aGVuCisgKiB0aGlz
IGRvZXMgbm90IGV2YWx1YXRlIHRvIHRydWUuCisgKgorICogVGhpcyBhbmQgYXNzZXJ0aW9ucyBv
ZiB0aGUgZm9ybSBgS1VOSVRfQVNTRVJUXypgIHdpbGwgY2F1c2UgdGhlIHRlc3QgY2FzZSB0bwor
ICogZmFpbCAqYW5kIGltbWVkaWF0ZWx5IGFib3J0KiB3aGVuIHRoZSBzcGVjaWZpZWQgY29uZGl0
aW9uIGlzIG5vdCBtZXQuIFVubGlrZQorICogYW4gZXhwZWN0YXRpb24gZmFpbHVyZSwgaXQgd2ls
bCBwcmV2ZW50IHRoZSB0ZXN0IGNhc2UgZnJvbSBjb250aW51aW5nIHRvIHJ1bjsKKyAqIHRoaXMg
aXMgb3RoZXJ3aXNlIGtub3duIGFzIGFuICphc3NlcnRpb24gZmFpbHVyZSouCisgKi8KKyNkZWZp
bmUgS1VOSVRfQVNTRVJUX1RSVUUodGVzdCwgY29uZGl0aW9uKQkJCQkgICAgICAgXAorCQlLVU5J
VF9BU1NFUlQodGVzdCwgKGNvbmRpdGlvbiksCQkJCSAgICAgICBcCisJCQkgICAgICJBc3NlcnRl
ZCAiICNjb25kaXRpb24gIiBpcyB0cnVlLCBidXQgaXMgZmFsc2UuXG4iKQorCisjZGVmaW5lIEtV
TklUX0FTU0VSVF9UUlVFX01TRyh0ZXN0LCBjb25kaXRpb24sIGZtdCwgLi4uKQkJICAgICAgIFwK
KwkJS1VOSVRfQVNTRVJUX01TRyh0ZXN0LCAoY29uZGl0aW9uKSwJCQkgICAgICAgXAorCQkJCSAi
QXNzZXJ0ZWQgIiAjY29uZGl0aW9uICIgaXMgdHJ1ZSwgYnV0IGlzIGZhbHNlLlxuIixcCisJCQkJ
IGZtdCwgIyNfX1ZBX0FSR1NfXykKKworLyoqCisgKiBLVU5JVF9BU1NFUlRfRkFMU0UoKSAtIFNl
dHMgYW4gYXNzZXJ0aW9uIHRoYXQgQGNvbmRpdGlvbiBpcyBmYWxzZS4KKyAqIEB0ZXN0OiBUaGUg
dGVzdCBjb250ZXh0IG9iamVjdC4KKyAqIEBjb25kaXRpb246IGFuIGFyYml0cmFyeSBib29sZWFu
IGV4cHJlc3Npb24uCisgKgorICogU2V0cyBhbiBhc3NlcnRpb24gdGhhdCB0aGUgdmFsdWUgdGhh
dCBAY29uZGl0aW9uIGV2YWx1YXRlcyB0byBpcyBmYWxzZS4gVGhpcworICogaXMgdGhlIHNhbWUg
YXMgS1VOSVRfRVhQRUNUX0ZBTFNFKCksIGV4Y2VwdCBpdCBjYXVzZXMgYW4gYXNzZXJ0aW9uIGZh
aWx1cmUKKyAqIChzZWUgS1VOSVRfQVNTRVJUX1RSVUUoKSkgd2hlbiB0aGUgYXNzZXJ0aW9uIGlz
IG5vdCBtZXQuCisgKi8KKyNkZWZpbmUgS1VOSVRfQVNTRVJUX0ZBTFNFKHRlc3QsIGNvbmRpdGlv
bikJCQkJICAgICAgIFwKKwkJS1VOSVRfQVNTRVJUKHRlc3QsICEoY29uZGl0aW9uKSwJCQkgICAg
ICAgXAorCQkJICAgICAiQXNzZXJ0ZWQgIiAjY29uZGl0aW9uICIgaXMgZmFsc2UsIGJ1dCBpcyB0
cnVlLlxuIikKKworI2RlZmluZSBLVU5JVF9BU1NFUlRfRkFMU0VfTVNHKHRlc3QsIGNvbmRpdGlv
biwgZm10LCAuLi4pCQkgICAgICAgXAorCQlLVU5JVF9BU1NFUlRfTVNHKHRlc3QsICEoY29uZGl0
aW9uKSwJCQkgICAgICAgXAorCQkJCSAiQXNzZXJ0ZWQgIiAjY29uZGl0aW9uICIgaXMgZmFsc2Us
IGJ1dCBpcyB0cnVlLlxuIixcCisJCQkJIGZtdCwgIyNfX1ZBX0FSR1NfXykKKwordm9pZCBrdW5p
dF9hc3NlcnRfYmluYXJ5X21zZyhzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJCQkgICAgIGxvbmcgbG9u
ZyBsZWZ0LCBjb25zdCBjaGFyICpsZWZ0X25hbWUsCisJCQkgICAgIGxvbmcgbG9uZyByaWdodCwg
Y29uc3QgY2hhciAqcmlnaHRfbmFtZSwKKwkJCSAgICAgYm9vbCBjb21wYXJlX3Jlc3VsdCwKKwkJ
CSAgICAgY29uc3QgY2hhciAqY29tcGFyZV9uYW1lLAorCQkJICAgICBjb25zdCBjaGFyICpmaWxl
LAorCQkJICAgICBjb25zdCBjaGFyICpsaW5lLAorCQkJICAgICBjb25zdCBjaGFyICpmbXQsIC4u
Lik7CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBrdW5pdF9hc3NlcnRfYmluYXJ5KHN0cnVjdCBrdW5p
dCAqdGVzdCwKKwkJCQkgICAgICAgbG9uZyBsb25nIGxlZnQsIGNvbnN0IGNoYXIgKmxlZnRfbmFt
ZSwKKwkJCQkgICAgICAgbG9uZyBsb25nIHJpZ2h0LCBjb25zdCBjaGFyICpyaWdodF9uYW1lLAor
CQkJCSAgICAgICBib29sIGNvbXBhcmVfcmVzdWx0LAorCQkJCSAgICAgICBjb25zdCBjaGFyICpj
b21wYXJlX25hbWUsCisJCQkJICAgICAgIGNvbnN0IGNoYXIgKmZpbGUsCisJCQkJICAgICAgIGNv
bnN0IGNoYXIgKmxpbmUpCit7CisJa3VuaXRfYXNzZXJ0X2JpbmFyeV9tc2codGVzdCwKKwkJCQls
ZWZ0LCBsZWZ0X25hbWUsCisJCQkJcmlnaHQsIHJpZ2h0X25hbWUsCisJCQkJY29tcGFyZV9yZXN1
bHQsCisJCQkJY29tcGFyZV9uYW1lLAorCQkJCWZpbGUsCisJCQkJbGluZSwKKwkJCQlOVUxMKTsK
K30KKworLyoKKyAqIEEgZmFjdG9yeSBtYWNybyBmb3IgZGVmaW5pbmcgdGhlIGV4cGVjdGF0aW9u
cyBmb3IgdGhlIGJhc2ljIGNvbXBhcmlzb25zCisgKiBkZWZpbmVkIGZvciB0aGUgYnVpbHQgaW4g
dHlwZXMuCisgKgorICogVW5mb3J0dW5hdGVseSwgdGhlcmUgaXMgbm8gY29tbW9uIHR5cGUgdGhh
dCBhbGwgdHlwZXMgY2FuIGJlIHByb21vdGVkIHRvIGZvcgorICogd2hpY2ggYWxsIHRoZSBiaW5h
cnkgb3BlcmF0b3JzIGJlaGF2ZSB0aGUgc2FtZSB3YXkgYXMgZm9yIHRoZSBhY3R1YWwgdHlwZXMK
KyAqIChmb3IgZXhhbXBsZSwgdGhlcmUgaXMgbm8gdHlwZSB0aGF0IGxvbmcgbG9uZyBhbmQgdW5z
aWduZWQgbG9uZyBsb25nIGNhbgorICogYm90aCBiZSBjYXN0IHRvIHdoZXJlIHRoZSBjb21wYXJp
c29uIHJlc3VsdCBpcyBwcmVzZXJ2ZWQgZm9yIGFsbCB2YWx1ZXMpLiBTbworICogdGhlIGJlc3Qg
d2UgY2FuIGRvIGlzIGRvIHRoZSBjb21wYXJpc29uIGluIHRoZSBvcmlnaW5hbCB0eXBlcyBhbmQg
dGhlbiBjb2VyY2UKKyAqIGV2ZXJ5dGhpbmcgdG8gbG9uZyBsb25nIGZvciBwcmludGluZzsgdGhp
cyB3YXksIHRoZSBjb21wYXJpc29uIGJlaGF2ZXMKKyAqIGNvcnJlY3RseSBhbmQgdGhlIHByaW50
ZWQgb3V0IHZhbHVlIHVzdWFsbHkgbWFrZXMgc2Vuc2Ugd2l0aG91dAorICogaW50ZXJwcmV0YXRp
b24sIGJ1dCBjYW4gYWx3YXlzIGJlIGludGVycHJldHRlZCB0byBmaWd1cmUgb3V0IHRoZSBhY3R1
YWwKKyAqIHZhbHVlLgorICovCisjZGVmaW5lIEtVTklUX0FTU0VSVF9CSU5BUlkodGVzdCwgbGVm
dCwgY29uZGl0aW9uLCByaWdodCkgZG8gewkJICAgICAgIFwKKwl0eXBlb2YobGVmdCkgX19sZWZ0
ID0gKGxlZnQpOwkJCQkJICAgICAgIFwKKwl0eXBlb2YocmlnaHQpIF9fcmlnaHQgPSAocmlnaHQp
OwkJCQkgICAgICAgXAorCWt1bml0X2Fzc2VydF9iaW5hcnkodGVzdCwJCQkJCSAgICAgICBcCisJ
CQkgICAgKGxvbmcgbG9uZykgX19sZWZ0LCAjbGVmdCwJCQkgICAgICAgXAorCQkJICAgIChsb25n
IGxvbmcpIF9fcmlnaHQsICNyaWdodCwJCSAgICAgICBcCisJCQkgICAgX19sZWZ0IGNvbmRpdGlv
biBfX3JpZ2h0LCAjY29uZGl0aW9uLAkgICAgICAgXAorCQkJICAgIF9fRklMRV9fLCBfX3N0cmlu
Z2lmeShfX0xJTkVfXykpOwkJICAgICAgIFwKK30gd2hpbGUgKDApCisKKyNkZWZpbmUgS1VOSVRf
QVNTRVJUX0JJTkFSWV9NU0codGVzdCwgbGVmdCwgY29uZGl0aW9uLCByaWdodCwgZm10LCAuLi4p
IGRvIHsgICBcCisJdHlwZW9mKGxlZnQpIF9fbGVmdCA9IChsZWZ0KTsJCQkJCSAgICAgICBcCisJ
dHlwZW9mKHJpZ2h0KSBfX3JpZ2h0ID0gKHJpZ2h0KTsJCQkJICAgICAgIFwKKwlrdW5pdF9hc3Nl
cnRfYmluYXJ5X21zZyh0ZXN0LAkJCQkJICAgICAgIFwKKwkJCQkobG9uZyBsb25nKSBfX2xlZnQs
ICNsZWZ0LAkJICAgICAgIFwKKwkJCQkobG9uZyBsb25nKSBfX3JpZ2h0LCAjcmlnaHQsCQkgICAg
ICAgXAorCQkJCV9fbGVmdCBjb25kaXRpb24gX19yaWdodCwgI2NvbmRpdGlvbiwJICAgICAgIFwK
KwkJCQlfX0ZJTEVfXywgX19zdHJpbmdpZnkoX19MSU5FX18pLAkgICAgICAgXAorCQkJCWZtdCwg
IyNfX1ZBX0FSR1NfXyk7CQkJICAgICAgIFwKK30gd2hpbGUgKDApCisKKy8qKgorICogS1VOSVRf
QVNTRVJUX0VRKCkgLSBTZXRzIGFuIGFzc2VydGlvbiB0aGF0IEBsZWZ0IGFuZCBAcmlnaHQgYXJl
IGVxdWFsLgorICogQHRlc3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGxlZnQ6IGFu
IGFyYml0cmFyeSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgcHJpbWl0aXZlIEMgdHlw
ZS4KKyAqIEByaWdodDogYW4gYXJiaXRyYXJ5IGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8g
YSBwcmltaXRpdmUgQyB0eXBlLgorICoKKyAqIFNldHMgYW4gYXNzZXJ0aW9uIHRoYXQgdGhlIHZh
bHVlcyB0aGF0IEBsZWZ0IGFuZCBAcmlnaHQgZXZhbHVhdGUgdG8gYXJlCisgKiBlcXVhbC4gVGhp
cyBpcyB0aGUgc2FtZSBhcyBLVU5JVF9FWFBFQ1RfRVEoKSwgZXhjZXB0IGl0IGNhdXNlcyBhbiBh
c3NlcnRpb24KKyAqIGZhaWx1cmUgKHNlZSBLVU5JVF9BU1NFUlRfVFJVRSgpKSB3aGVuIHRoZSBh
c3NlcnRpb24gaXMgbm90IG1ldC4KKyAqLworI2RlZmluZSBLVU5JVF9BU1NFUlRfRVEodGVzdCwg
bGVmdCwgcmlnaHQpIFwKKwkJS1VOSVRfQVNTRVJUX0JJTkFSWSh0ZXN0LCBsZWZ0LCA9PSwgcmln
aHQpCisKKyNkZWZpbmUgS1VOSVRfQVNTRVJUX0VRX01TRyh0ZXN0LCBsZWZ0LCByaWdodCwgZm10
LCAuLi4pCQkgICAgICAgXAorCQlLVU5JVF9BU1NFUlRfQklOQVJZX01TRyh0ZXN0LAkJCQkgICAg
ICAgXAorCQkJCQlsZWZ0LAkJCQkgICAgICAgXAorCQkJCQk9PSwJCQkJICAgICAgIFwKKwkJCQkJ
cmlnaHQsCQkJCSAgICAgICBcCisJCQkJCWZtdCwJCQkJICAgICAgIFwKKwkJCQkJIyNfX1ZBX0FS
R1NfXykKKworLyoqCisgKiBLVU5JVF9BU1NFUlRfTkUoKSAtIEFuIGFzc2VydGlvbiB0aGF0IEBs
ZWZ0IGFuZCBAcmlnaHQgYXJlIG5vdCBlcXVhbC4KKyAqIEB0ZXN0OiBUaGUgdGVzdCBjb250ZXh0
IG9iamVjdC4KKyAqIEBsZWZ0OiBhbiBhcmJpdHJhcnkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRl
cyB0byBhIHByaW1pdGl2ZSBDIHR5cGUuCisgKiBAcmlnaHQ6IGFuIGFyYml0cmFyeSBleHByZXNz
aW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgcHJpbWl0aXZlIEMgdHlwZS4KKyAqCisgKiBTZXRzIGFu
IGFzc2VydGlvbiB0aGF0IHRoZSB2YWx1ZXMgdGhhdCBAbGVmdCBhbmQgQHJpZ2h0IGV2YWx1YXRl
IHRvIGFyZSBub3QKKyAqIGVxdWFsLiBUaGlzIGlzIHRoZSBzYW1lIGFzIEtVTklUX0VYUEVDVF9O
RSgpLCBleGNlcHQgaXQgY2F1c2VzIGFuIGFzc2VydGlvbgorICogZmFpbHVyZSAoc2VlIEtVTklU
X0FTU0VSVF9UUlVFKCkpIHdoZW4gdGhlIGFzc2VydGlvbiBpcyBub3QgbWV0LgorICovCisjZGVm
aW5lIEtVTklUX0FTU0VSVF9ORSh0ZXN0LCBsZWZ0LCByaWdodCkgXAorCQlLVU5JVF9BU1NFUlRf
QklOQVJZKHRlc3QsIGxlZnQsICE9LCByaWdodCkKKworI2RlZmluZSBLVU5JVF9BU1NFUlRfTkVf
TVNHKHRlc3QsIGxlZnQsIHJpZ2h0LCBmbXQsIC4uLikJCSAgICAgICBcCisJCUtVTklUX0FTU0VS
VF9CSU5BUllfTVNHKHRlc3QsCQkJCSAgICAgICBcCisJCQkJCWxlZnQsCQkJCSAgICAgICBcCisJ
CQkJCSE9LAkJCQkgICAgICAgXAorCQkJCQlyaWdodCwJCQkJICAgICAgIFwKKwkJCQkJZm10LAkJ
CQkgICAgICAgXAorCQkJCQkjI19fVkFfQVJHU19fKQorCisvKioKKyAqIEtVTklUX0FTU0VSVF9M
VCgpIC0gQW4gYXNzZXJ0aW9uIHRoYXQgQGxlZnQgaXMgbGVzcyB0aGFuIEByaWdodC4KKyAqIEB0
ZXN0OiBUaGUgdGVzdCBjb250ZXh0IG9iamVjdC4KKyAqIEBsZWZ0OiBhbiBhcmJpdHJhcnkgZXhw
cmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHByaW1pdGl2ZSBDIHR5cGUuCisgKiBAcmlnaHQ6
IGFuIGFyYml0cmFyeSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgcHJpbWl0aXZlIEMg
dHlwZS4KKyAqCisgKiBTZXRzIGFuIGFzc2VydGlvbiB0aGF0IHRoZSB2YWx1ZSB0aGF0IEBsZWZ0
IGV2YWx1YXRlcyB0byBpcyBsZXNzIHRoYW4gdGhlCisgKiB2YWx1ZSB0aGF0IEByaWdodCBldmFs
dWF0ZXMgdG8uIFRoaXMgaXMgdGhlIHNhbWUgYXMgS1VOSVRfRVhQRUNUX0xUKCksIGV4Y2VwdAor
ICogaXQgY2F1c2VzIGFuIGFzc2VydGlvbiBmYWlsdXJlIChzZWUgS1VOSVRfQVNTRVJUX1RSVUUo
KSkgd2hlbiB0aGUgYXNzZXJ0aW9uCisgKiBpcyBub3QgbWV0LgorICovCisjZGVmaW5lIEtVTklU
X0FTU0VSVF9MVCh0ZXN0LCBsZWZ0LCByaWdodCkgXAorCQlLVU5JVF9BU1NFUlRfQklOQVJZKHRl
c3QsIGxlZnQsIDwsIHJpZ2h0KQorCisjZGVmaW5lIEtVTklUX0FTU0VSVF9MVF9NU0codGVzdCwg
bGVmdCwgcmlnaHQsIGZtdCwgLi4uKQkJICAgICAgIFwKKwkJS1VOSVRfQVNTRVJUX0JJTkFSWV9N
U0codGVzdCwJCQkJICAgICAgIFwKKwkJCQkJbGVmdCwJCQkJICAgICAgIFwKKwkJCQkJPCwJCQkJ
ICAgICAgIFwKKwkJCQkJcmlnaHQsCQkJCSAgICAgICBcCisJCQkJCWZtdCwJCQkJICAgICAgIFwK
KwkJCQkJIyNfX1ZBX0FSR1NfXykKKy8qKgorICogS1VOSVRfQVNTRVJUX0xFKCkgLSBBbiBhc3Nl
cnRpb24gdGhhdCBAbGVmdCBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gQHJpZ2h0LgorICogQHRl
c3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQGxlZnQ6IGFuIGFyYml0cmFyeSBleHBy
ZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgcHJpbWl0aXZlIEMgdHlwZS4KKyAqIEByaWdodDog
YW4gYXJiaXRyYXJ5IGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBwcmltaXRpdmUgQyB0
eXBlLgorICoKKyAqIFNldHMgYW4gYXNzZXJ0aW9uIHRoYXQgdGhlIHZhbHVlIHRoYXQgQGxlZnQg
ZXZhbHVhdGVzIHRvIGlzIGxlc3MgdGhhbiBvcgorICogZXF1YWwgdG8gdGhlIHZhbHVlIHRoYXQg
QHJpZ2h0IGV2YWx1YXRlcyB0by4gVGhpcyBpcyB0aGUgc2FtZSBhcworICogS1VOSVRfRVhQRUNU
X0xFKCksIGV4Y2VwdCBpdCBjYXVzZXMgYW4gYXNzZXJ0aW9uIGZhaWx1cmUgKHNlZQorICogS1VO
SVRfQVNTRVJUX1RSVUUoKSkgd2hlbiB0aGUgYXNzZXJ0aW9uIGlzIG5vdCBtZXQuCisgKi8KKyNk
ZWZpbmUgS1VOSVRfQVNTRVJUX0xFKHRlc3QsIGxlZnQsIHJpZ2h0KSBcCisJCUtVTklUX0FTU0VS
VF9CSU5BUlkodGVzdCwgbGVmdCwgPD0sIHJpZ2h0KQorCisjZGVmaW5lIEtVTklUX0FTU0VSVF9M
RV9NU0codGVzdCwgbGVmdCwgcmlnaHQsIGZtdCwgLi4uKQkJICAgICAgIFwKKwkJS1VOSVRfQVNT
RVJUX0JJTkFSWV9NU0codGVzdCwJCQkJICAgICAgIFwKKwkJCQkJbGVmdCwJCQkJICAgICAgIFwK
KwkJCQkJPD0sCQkJCSAgICAgICBcCisJCQkJCXJpZ2h0LAkJCQkgICAgICAgXAorCQkJCQlmbXQs
CQkJCSAgICAgICBcCisJCQkJCSMjX19WQV9BUkdTX18pCisvKioKKyAqIEtVTklUX0FTU0VSVF9H
VCgpIC0gQW4gYXNzZXJ0aW9uIHRoYXQgQGxlZnQgaXMgZ3JlYXRlciB0aGFuIEByaWdodC4KKyAq
IEB0ZXN0OiBUaGUgdGVzdCBjb250ZXh0IG9iamVjdC4KKyAqIEBsZWZ0OiBhbiBhcmJpdHJhcnkg
ZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHByaW1pdGl2ZSBDIHR5cGUuCisgKiBAcmln
aHQ6IGFuIGFyYml0cmFyeSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgcHJpbWl0aXZl
IEMgdHlwZS4KKyAqCisgKiBTZXRzIGFuIGFzc2VydGlvbiB0aGF0IHRoZSB2YWx1ZSB0aGF0IEBs
ZWZ0IGV2YWx1YXRlcyB0byBpcyBncmVhdGVyIHRoYW4gdGhlCisgKiB2YWx1ZSB0aGF0IEByaWdo
dCBldmFsdWF0ZXMgdG8uIFRoaXMgaXMgdGhlIHNhbWUgYXMgS1VOSVRfRVhQRUNUX0dUKCksIGV4
Y2VwdAorICogaXQgY2F1c2VzIGFuIGFzc2VydGlvbiBmYWlsdXJlIChzZWUgS1VOSVRfQVNTRVJU
X1RSVUUoKSkgd2hlbiB0aGUgYXNzZXJ0aW9uCisgKiBpcyBub3QgbWV0LgorICovCisjZGVmaW5l
IEtVTklUX0FTU0VSVF9HVCh0ZXN0LCBsZWZ0LCByaWdodCkgXAorCQlLVU5JVF9BU1NFUlRfQklO
QVJZKHRlc3QsIGxlZnQsID4sIHJpZ2h0KQorCisjZGVmaW5lIEtVTklUX0FTU0VSVF9HVF9NU0co
dGVzdCwgbGVmdCwgcmlnaHQsIGZtdCwgLi4uKQkJICAgICAgIFwKKwkJS1VOSVRfQVNTRVJUX0JJ
TkFSWV9NU0codGVzdCwJCQkJICAgICAgIFwKKwkJCQkJbGVmdCwJCQkJICAgICAgIFwKKwkJCQkJ
PiwJCQkJICAgICAgIFwKKwkJCQkJcmlnaHQsCQkJCSAgICAgICBcCisJCQkJCWZtdCwJCQkJICAg
ICAgIFwKKwkJCQkJIyNfX1ZBX0FSR1NfXykKKworLyoqCisgKiBLVU5JVF9BU1NFUlRfR0UoKSAt
IEFzc2VydGlvbiB0aGF0IEBsZWZ0IGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byBAcmlnaHQu
CisgKiBAdGVzdDogVGhlIHRlc3QgY29udGV4dCBvYmplY3QuCisgKiBAbGVmdDogYW4gYXJiaXRy
YXJ5IGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBwcmltaXRpdmUgQyB0eXBlLgorICog
QHJpZ2h0OiBhbiBhcmJpdHJhcnkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHByaW1p
dGl2ZSBDIHR5cGUuCisgKgorICogU2V0cyBhbiBhc3NlcnRpb24gdGhhdCB0aGUgdmFsdWUgdGhh
dCBAbGVmdCBldmFsdWF0ZXMgdG8gaXMgZ3JlYXRlciB0aGFuIHRoZQorICogdmFsdWUgdGhhdCBA
cmlnaHQgZXZhbHVhdGVzIHRvLiBUaGlzIGlzIHRoZSBzYW1lIGFzIEtVTklUX0VYUEVDVF9HRSgp
LCBleGNlcHQKKyAqIGl0IGNhdXNlcyBhbiBhc3NlcnRpb24gZmFpbHVyZSAoc2VlIEtVTklUX0FT
U0VSVF9UUlVFKCkpIHdoZW4gdGhlIGFzc2VydGlvbgorICogaXMgbm90IG1ldC4KKyAqLworI2Rl
ZmluZSBLVU5JVF9BU1NFUlRfR0UodGVzdCwgbGVmdCwgcmlnaHQpIFwKKwkJS1VOSVRfQVNTRVJU
X0JJTkFSWSh0ZXN0LCBsZWZ0LCA+PSwgcmlnaHQpCisKKyNkZWZpbmUgS1VOSVRfQVNTRVJUX0dF
X01TRyh0ZXN0LCBsZWZ0LCByaWdodCwgZm10LCAuLi4pCQkgICAgICAgXAorCQlLVU5JVF9BU1NF
UlRfQklOQVJZX01TRyh0ZXN0LAkJCQkgICAgICAgXAorCQkJCQlsZWZ0LAkJCQkgICAgICAgXAor
CQkJCQk+PSwJCQkJICAgICAgIFwKKwkJCQkJcmlnaHQsCQkJCSAgICAgICBcCisJCQkJCWZtdCwJ
CQkJICAgICAgIFwKKwkJCQkJIyNfX1ZBX0FSR1NfXykKKworLyoqCisgKiBLVU5JVF9BU1NFUlRf
U1RSRVEoKSAtIEFuIGFzc2VydGlvbiB0aGF0IHN0cmluZ3MgQGxlZnQgYW5kIEByaWdodCBhcmUg
ZXF1YWwuCisgKiBAdGVzdDogVGhlIHRlc3QgY29udGV4dCBvYmplY3QuCisgKiBAbGVmdDogYW4g
YXJiaXRyYXJ5IGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBudWxsIHRlcm1pbmF0ZWQg
c3RyaW5nLgorICogQHJpZ2h0OiBhbiBhcmJpdHJhcnkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRl
cyB0byBhIG51bGwgdGVybWluYXRlZCBzdHJpbmcuCisgKgorICogU2V0cyBhbiBhc3NlcnRpb24g
dGhhdCB0aGUgdmFsdWVzIHRoYXQgQGxlZnQgYW5kIEByaWdodCBldmFsdWF0ZSB0byBhcmUKKyAq
IGVxdWFsLiBUaGlzIGlzIHRoZSBzYW1lIGFzIEtVTklUX0VYUEVDVF9TVFJFUSgpLCBleGNlcHQg
aXQgY2F1c2VzIGFuCisgKiBhc3NlcnRpb24gZmFpbHVyZSAoc2VlIEtVTklUX0FTU0VSVF9UUlVF
KCkpIHdoZW4gdGhlIGFzc2VydGlvbiBpcyBub3QgbWV0LgorICovCisjZGVmaW5lIEtVTklUX0FT
U0VSVF9TVFJFUSh0ZXN0LCBsZWZ0LCByaWdodCkgZG8gewkJCSAgICAgICBcCisJc3RydWN0IGt1
bml0X3N0cmVhbSAqX19zdHJlYW0gPSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCk7CSAgICAgICBc
CisJdHlwZW9mKGxlZnQpIF9fbGVmdCA9IChsZWZ0KTsJCQkJCSAgICAgICBcCisJdHlwZW9mKHJp
Z2h0KSBfX3JpZ2h0ID0gKHJpZ2h0KTsJCQkJICAgICAgIFwKKwkJCQkJCQkJCSAgICAgICBcCisJ
a3VuaXRfc3RyZWFtX2FkZChfX3N0cmVhbSwgIkFzc2VydGVkICIgI2xlZnQgIiA9PSAiICNyaWdo
dCAiLCBidXRcbiIpOyBcCisJa3VuaXRfc3RyZWFtX2FkZChfX3N0cmVhbSwgIlx0XHQlcyA9PSAl
c1xuIiwgI2xlZnQsIF9fbGVmdCk7CSAgICAgICBcCisJa3VuaXRfc3RyZWFtX2FkZChfX3N0cmVh
bSwgIlx0XHQlcyA9PSAlc1xuIiwgI3JpZ2h0LCBfX3JpZ2h0KTsJICAgICAgIFwKKwkJCQkJCQkJ
CSAgICAgICBcCisJS1VOSVRfQVNTRVJUX0VORCh0ZXN0LCAhc3RyY21wKGxlZnQsIHJpZ2h0KSwg
X19zdHJlYW0pOwkJICAgICAgIFwKK30gd2hpbGUgKDApCisKKyNkZWZpbmUgS1VOSVRfQVNTRVJU
X1NUUkVRX01TRyh0ZXN0LCBsZWZ0LCByaWdodCwgZm10LCAuLi4pIGRvIHsJICAgICAgIFwKKwlz
dHJ1Y3Qga3VuaXRfc3RyZWFtICpfX3N0cmVhbSA9IEtVTklUX0FTU0VSVF9TVEFSVCh0ZXN0KTsJ
ICAgICAgIFwKKwl0eXBlb2YobGVmdCkgX19sZWZ0ID0gKGxlZnQpOwkJCQkJICAgICAgIFwKKwl0
eXBlb2YocmlnaHQpIF9fcmlnaHQgPSAocmlnaHQpOwkJCQkgICAgICAgXAorCQkJCQkJCQkJICAg
ICAgIFwKKwlrdW5pdF9zdHJlYW1fYWRkKF9fc3RyZWFtLCAiQXNzZXJ0ZWQgIiAjbGVmdCAiID09
ICIgI3JpZ2h0ICIsIGJ1dFxuIik7IFwKKwlrdW5pdF9zdHJlYW1fYWRkKF9fc3RyZWFtLCAiXHRc
dCVzID09ICVzXG4iLCAjbGVmdCwgX19sZWZ0KTsJICAgICAgIFwKKwlrdW5pdF9zdHJlYW1fYWRk
KF9fc3RyZWFtLCAiXHRcdCVzID09ICVzXG4iLCAjcmlnaHQsIF9fcmlnaHQpOwkgICAgICAgXAor
CWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIGZtdCwgIyNfX1ZBX0FSR1NfXyk7CQkJICAgICAg
IFwKKwkJCQkJCQkJCSAgICAgICBcCisJS1VOSVRfQVNTRVJUX0VORCh0ZXN0LCAhc3RyY21wKGxl
ZnQsIHJpZ2h0KSwgX19zdHJlYW0pOwkJICAgICAgIFwKK30gd2hpbGUgKDApCisKKy8qKgorICog
S1VOSVRfQVNTRVJUX1NUUk5FUSgpIC0gRXhwZWN0cyB0aGF0IHN0cmluZ3MgQGxlZnQgYW5kIEBy
aWdodCBhcmUgbm90IGVxdWFsLgorICogQHRlc3Q6IFRoZSB0ZXN0IGNvbnRleHQgb2JqZWN0Lgor
ICogQGxlZnQ6IGFuIGFyYml0cmFyeSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgbnVs
bCB0ZXJtaW5hdGVkIHN0cmluZy4KKyAqIEByaWdodDogYW4gYXJiaXRyYXJ5IGV4cHJlc3Npb24g
dGhhdCBldmFsdWF0ZXMgdG8gYSBudWxsIHRlcm1pbmF0ZWQgc3RyaW5nLgorICoKKyAqIFNldHMg
YW4gZXhwZWN0YXRpb24gdGhhdCB0aGUgdmFsdWVzIHRoYXQgQGxlZnQgYW5kIEByaWdodCBldmFs
dWF0ZSB0byBhcmUKKyAqIG5vdCBlcXVhbC4gVGhpcyBpcyBzZW1hbnRpY2FsbHkgZXF1aXZhbGVu
dCB0bworICogS1VOSVRfQVNTRVJUX1RSVUUoQHRlc3QsIHN0cmNtcCgoQGxlZnQpLCAoQHJpZ2h0
KSkpLiBTZWUgS1VOSVRfQVNTRVJUX1RSVUUoKQorICogZm9yIG1vcmUgaW5mb3JtYXRpb24uCisg
Ki8KKyNkZWZpbmUgS1VOSVRfQVNTRVJUX1NUUk5FUSh0ZXN0LCBsZWZ0LCByaWdodCkgZG8gewkJ
CSAgICAgICBcCisJc3RydWN0IGt1bml0X3N0cmVhbSAqX19zdHJlYW0gPSBLVU5JVF9BU1NFUlRf
U1RBUlQodGVzdCk7CSAgICAgICBcCisJdHlwZW9mKGxlZnQpIF9fbGVmdCA9IChsZWZ0KTsJCQkJ
CSAgICAgICBcCisJdHlwZW9mKHJpZ2h0KSBfX3JpZ2h0ID0gKHJpZ2h0KTsJCQkJICAgICAgIFwK
KwkJCQkJCQkJCSAgICAgICBcCisJa3VuaXRfc3RyZWFtX2FkZChfX3N0cmVhbSwgIkFzc2VydGVk
ICIgI2xlZnQgIiA9PSAiICNyaWdodCAiLCBidXRcbiIpOyBcCisJa3VuaXRfc3RyZWFtX2FkZChf
X3N0cmVhbSwgIlx0XHQlcyA9PSAlc1xuIiwgI2xlZnQsIF9fbGVmdCk7CSAgICAgICBcCisJa3Vu
aXRfc3RyZWFtX2FkZChfX3N0cmVhbSwgIlx0XHQlcyA9PSAlc1xuIiwgI3JpZ2h0LCBfX3JpZ2h0
KTsJICAgICAgIFwKKwkJCQkJCQkJCSAgICAgICBcCisJS1VOSVRfQVNTRVJUX0VORCh0ZXN0LCBz
dHJjbXAobGVmdCwgcmlnaHQpLCBfX3N0cmVhbSk7CQkgICAgICAgXAorfSB3aGlsZSAoMCkKKwor
I2RlZmluZSBLVU5JVF9BU1NFUlRfU1RSTkVRX01TRyh0ZXN0LCBsZWZ0LCByaWdodCwgZm10LCAu
Li4pIGRvIHsJICAgICAgIFwKKwlzdHJ1Y3Qga3VuaXRfc3RyZWFtICpfX3N0cmVhbSA9IEtVTklU
X0FTU0VSVF9TVEFSVCh0ZXN0KTsJICAgICAgIFwKKwl0eXBlb2YobGVmdCkgX19sZWZ0ID0gKGxl
ZnQpOwkJCQkJICAgICAgIFwKKwl0eXBlb2YocmlnaHQpIF9fcmlnaHQgPSAocmlnaHQpOwkJCQkg
ICAgICAgXAorCQkJCQkJCQkJICAgICAgIFwKKwlrdW5pdF9zdHJlYW1fYWRkKF9fc3RyZWFtLCAi
QXNzZXJ0ZWQgIiAjbGVmdCAiID09ICIgI3JpZ2h0ICIsIGJ1dFxuIik7IFwKKwlrdW5pdF9zdHJl
YW1fYWRkKF9fc3RyZWFtLCAiXHRcdCVzID09ICVzXG4iLCAjbGVmdCwgX19sZWZ0KTsJICAgICAg
IFwKKwlrdW5pdF9zdHJlYW1fYWRkKF9fc3RyZWFtLCAiXHRcdCVzID09ICVzXG4iLCAjcmlnaHQs
IF9fcmlnaHQpOwkgICAgICAgXAorCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sIGZtdCwgIyNf
X1ZBX0FSR1NfXyk7CQkJICAgICAgIFwKKwkJCQkJCQkJCSAgICAgICBcCisJS1VOSVRfQVNTRVJU
X0VORCh0ZXN0LCBzdHJjbXAobGVmdCwgcmlnaHQpLCBfX3N0cmVhbSk7CQkgICAgICAgXAorfSB3
aGlsZSAoMCkKKworLyoqCisgKiBLVU5JVF9BU1NFUlRfTk9UX0VSUl9PUl9OVUxMKCkgLSBBc3Nl
cnRpb24gdGhhdCBAcHRyIGlzIG5vdCBudWxsIGFuZCBub3QgZXJyLgorICogQHRlc3Q6IFRoZSB0
ZXN0IGNvbnRleHQgb2JqZWN0LgorICogQHB0cjogYW4gYXJiaXRyYXJ5IHBvaW50ZXIuCisgKgor
ICogU2V0cyBhbiBhc3NlcnRpb24gdGhhdCB0aGUgdmFsdWUgdGhhdCBAcHRyIGV2YWx1YXRlcyB0
byBpcyBub3QgbnVsbCBhbmQgbm90CisgKiBhbiBlcnJubyBzdG9yZWQgaW4gYSBwb2ludGVyLiBU
aGlzIGlzIHRoZSBzYW1lIGFzCisgKiBLVU5JVF9FWFBFQ1RfTk9UX0VSUl9PUl9OVUxMKCksIGV4
Y2VwdCBpdCBjYXVzZXMgYW4gYXNzZXJ0aW9uIGZhaWx1cmUgKHNlZQorICogS1VOSVRfQVNTRVJU
X1RSVUUoKSkgd2hlbiB0aGUgYXNzZXJ0aW9uIGlzIG5vdCBtZXQuCisgKi8KKyNkZWZpbmUgS1VO
SVRfQVNTRVJUX05PVF9FUlJfT1JfTlVMTCh0ZXN0LCBwdHIpIGRvIHsJCQkgICAgICAgXAorCXN0
cnVjdCBrdW5pdF9zdHJlYW0gKl9fc3RyZWFtID0gS1VOSVRfQVNTRVJUX1NUQVJUKHRlc3QpOwkg
ICAgICAgXAorCXR5cGVvZihwdHIpIF9fcHRyID0gKHB0cik7CQkJCQkgICAgICAgXAorCQkJCQkJ
CQkJICAgICAgIFwKKwlpZiAoIV9fcHRyKQkJCQkJCQkgICAgICAgXAorCQlrdW5pdF9zdHJlYW1f
YWRkKF9fc3RyZWFtLAkJCQkgICAgICAgXAorCQkJCSAiQXNzZXJ0ZWQgIiAjcHRyICIgaXMgbm90
IG51bGwsIGJ1dCBpcy5cbiIpOyAgXAorCWlmIChJU19FUlIoX19wdHIpKQkJCQkJCSAgICAgICBc
CisJCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sCQkJCSAgICAgICBcCisJCQkJICJBc3NlcnRl
ZCAiICNwdHIgIiBpcyBub3QgZXJyb3IsIGJ1dCBpczogJWxkXG4iLFwKKwkJCQkgUFRSX0VSUihf
X3B0cikpOwkJCSAgICAgICBcCisJCQkJCQkJCQkgICAgICAgXAorCUtVTklUX0FTU0VSVF9FTkQo
dGVzdCwgIUlTX0VSUl9PUl9OVUxMKF9fcHRyKSwgX19zdHJlYW0pOwkgICAgICAgXAorfSB3aGls
ZSAoMCkKKworI2RlZmluZSBLVU5JVF9BU1NFUlRfTk9UX0VSUl9PUl9OVUxMX01TRyh0ZXN0LCBw
dHIsIGZtdCwgLi4uKSBkbyB7CSAgICAgICBcCisJc3RydWN0IGt1bml0X3N0cmVhbSAqX19zdHJl
YW0gPSBLVU5JVF9BU1NFUlRfU1RBUlQodGVzdCk7CSAgICAgICBcCisJdHlwZW9mKHB0cikgX19w
dHIgPSAocHRyKTsJCQkJCSAgICAgICBcCisJCQkJCQkJCQkgICAgICAgXAorCWlmICghX19wdHIp
IHsJCQkJCQkJICAgICAgIFwKKwkJa3VuaXRfc3RyZWFtX2FkZChfX3N0cmVhbSwJCQkJICAgICAg
IFwKKwkJCQkgIkFzc2VydGVkICIgI3B0ciAiIGlzIG5vdCBudWxsLCBidXQgaXMuXG4iKTsgIFwK
KwkJa3VuaXRfc3RyZWFtX2FkZChfX3N0cmVhbSwgZm10LCAjI19fVkFfQVJHU19fKTsJCSAgICAg
ICBcCisJfQkJCQkJCQkJICAgICAgIFwKKwlpZiAoSVNfRVJSKF9fcHRyKSkgewkJCQkJCSAgICAg
ICBcCisJCWt1bml0X3N0cmVhbV9hZGQoX19zdHJlYW0sCQkJCSAgICAgICBcCisJCQkJICJBc3Nl
cnRlZCAiICNwdHIgIiBpcyBub3QgZXJyb3IsIGJ1dCBpczogJWxkXG4iLFwKKwkJCQkgUFRSX0VS
UihfX3B0cikpOwkJCSAgICAgICBcCisJCQkJCQkJCQkgICAgICAgXAorCQlrdW5pdF9zdHJlYW1f
YWRkKF9fc3RyZWFtLCBmbXQsICMjX19WQV9BUkdTX18pOwkJICAgICAgIFwKKwl9CQkJCQkJCQkg
ICAgICAgXAorCUtVTklUX0FTU0VSVF9FTkQodGVzdCwgIUlTX0VSUl9PUl9OVUxMKF9fcHRyKSwg
X19zdHJlYW0pOwkgICAgICAgXAorfSB3aGlsZSAoMCkKKwogI2VuZGlmIC8qIF9LVU5JVF9URVNU
X0ggKi8KZGlmZiAtLWdpdCBhL2t1bml0L3N0cmluZy1zdHJlYW0tdGVzdC5jIGIva3VuaXQvc3Ry
aW5nLXN0cmVhbS10ZXN0LmMKaW5kZXggYjJhOTg1NzY3OTdjOS4uOTY4MTliOTliNTcxMyAxMDA2
NDQKLS0tIGEva3VuaXQvc3RyaW5nLXN0cmVhbS10ZXN0LmMKKysrIGIva3VuaXQvc3RyaW5nLXN0
cmVhbS10ZXN0LmMKQEAgLTE5LDcgKzE5LDcgQEAgc3RhdGljIHZvaWQgc3RyaW5nX3N0cmVhbV90
ZXN0X2dldF9zdHJpbmcoc3RydWN0IGt1bml0ICp0ZXN0KQogCXN0cmluZ19zdHJlYW1fYWRkKHN0
cmVhbSwgIiAlcyIsICJiYXIiKTsKIAogCW91dHB1dCA9IHN0cmluZ19zdHJlYW1fZ2V0X3N0cmlu
ZyhzdHJlYW0pOwotCUtVTklUX0VYUEVDVF9TVFJFUSh0ZXN0LCBvdXRwdXQsICJGb28gYmFyIik7
CisJS1VOSVRfQVNTRVJUX1NUUkVRKHRlc3QsIG91dHB1dCwgIkZvbyBiYXIiKTsKIAlrZnJlZShv
dXRwdXQpOwogCWRlc3Ryb3lfc3RyaW5nX3N0cmVhbShzdHJlYW0pOwogfQpAQCAtMzQsMTYgKzM0
LDE2IEBAIHN0YXRpYyB2b2lkIHN0cmluZ19zdHJlYW1fdGVzdF9hZGRfYW5kX2NsZWFyKHN0cnVj
dCBrdW5pdCAqdGVzdCkKIAkJc3RyaW5nX3N0cmVhbV9hZGQoc3RyZWFtLCAiQSIpOwogCiAJb3V0
cHV0ID0gc3RyaW5nX3N0cmVhbV9nZXRfc3RyaW5nKHN0cmVhbSk7Ci0JS1VOSVRfRVhQRUNUX1NU
UkVRKHRlc3QsIG91dHB1dCwgIkFBQUFBQUFBQUEiKTsKLQlLVU5JVF9FWFBFQ1RfRVEodGVzdCwg
c3RyZWFtLT5sZW5ndGgsIDEwKTsKLQlLVU5JVF9FWFBFQ1RfRkFMU0UodGVzdCwgc3RyaW5nX3N0
cmVhbV9pc19lbXB0eShzdHJlYW0pKTsKKwlLVU5JVF9BU1NFUlRfU1RSRVEodGVzdCwgb3V0cHV0
LCAiQUFBQUFBQUFBQSIpOworCUtVTklUX0FTU0VSVF9FUSh0ZXN0LCBzdHJlYW0tPmxlbmd0aCwg
MTApOworCUtVTklUX0FTU0VSVF9GQUxTRSh0ZXN0LCBzdHJpbmdfc3RyZWFtX2lzX2VtcHR5KHN0
cmVhbSkpOwogCWtmcmVlKG91dHB1dCk7CiAKIAlzdHJpbmdfc3RyZWFtX2NsZWFyKHN0cmVhbSk7
CiAKIAlvdXRwdXQgPSBzdHJpbmdfc3RyZWFtX2dldF9zdHJpbmcoc3RyZWFtKTsKLQlLVU5JVF9F
WFBFQ1RfU1RSRVEodGVzdCwgb3V0cHV0LCAiIik7Ci0JS1VOSVRfRVhQRUNUX1RSVUUodGVzdCwg
c3RyaW5nX3N0cmVhbV9pc19lbXB0eShzdHJlYW0pKTsKKwlLVU5JVF9BU1NFUlRfU1RSRVEodGVz
dCwgb3V0cHV0LCAiIik7CisJS1VOSVRfQVNTRVJUX1RSVUUodGVzdCwgc3RyaW5nX3N0cmVhbV9p
c19lbXB0eShzdHJlYW0pKTsKIAlkZXN0cm95X3N0cmluZ19zdHJlYW0oc3RyZWFtKTsKIH0KIApk
aWZmIC0tZ2l0IGEva3VuaXQvdGVzdC10ZXN0LmMgYi9rdW5pdC90ZXN0LXRlc3QuYwppbmRleCBj
ODFhZTZlZmI5NTlmLi40YmQ3YTM0ZDBhNmNiIDEwMDY0NAotLS0gYS9rdW5pdC90ZXN0LXRlc3Qu
YworKysgYi9rdW5pdC90ZXN0LXRlc3QuYwpAQCAtMTEwLDExICsxMTAsMTMgQEAgc3RhdGljIGlu
dCBrdW5pdF90cnlfY2F0Y2hfdGVzdF9pbml0KHN0cnVjdCBrdW5pdCAqdGVzdCkKIAlzdHJ1Y3Qg
a3VuaXRfdHJ5X2NhdGNoX3Rlc3RfY29udGV4dCAqY3R4OwogCiAJY3R4ID0ga3VuaXRfa3phbGxv
Yyh0ZXN0LCBzaXplb2YoKmN0eCksIEdGUF9LRVJORUwpOworCUtVTklUX0FTU0VSVF9OT1RfRVJS
X09SX05VTEwodGVzdCwgY3R4KTsKIAl0ZXN0LT5wcml2ID0gY3R4OwogCiAJY3R4LT50cnlfY2F0
Y2ggPSBrdW5pdF9rbWFsbG9jKHRlc3QsCiAJCQkJICAgICAgIHNpemVvZigqY3R4LT50cnlfY2F0
Y2gpLAogCQkJCSAgICAgICBHRlBfS0VSTkVMKTsKKwlLVU5JVF9BU1NFUlRfTk9UX0VSUl9PUl9O
VUxMKHRlc3QsIGN0eC0+dHJ5X2NhdGNoKTsKIAogCXJldHVybiAwOwogfQpkaWZmIC0tZ2l0IGEv
a3VuaXQvdGVzdC5jIGIva3VuaXQvdGVzdC5jCmluZGV4IDVlYWNlMmE1MjdhNGUuLjU1NTYxZWFk
YzQ1OWQgMTAwNjQ0Ci0tLSBhL2t1bml0L3Rlc3QuYworKysgYi9rdW5pdC90ZXN0LmMKQEAgLTQy
NSwzICs0MjUsMzYgQEAgdm9pZCBrdW5pdF9leHBlY3RfYmluYXJ5X21zZyhzdHJ1Y3Qga3VuaXQg
KnRlc3QsCiAJa3VuaXRfZXhwZWN0X2VuZCh0ZXN0LCBjb21wYXJlX3Jlc3VsdCwgc3RyZWFtKTsK
IH0KIAordm9pZCBrdW5pdF9hc3NlcnRfYmluYXJ5X21zZyhzdHJ1Y3Qga3VuaXQgKnRlc3QsCisJ
CQkgICAgIGxvbmcgbG9uZyBsZWZ0LCBjb25zdCBjaGFyICpsZWZ0X25hbWUsCisJCQkgICAgIGxv
bmcgbG9uZyByaWdodCwgY29uc3QgY2hhciAqcmlnaHRfbmFtZSwKKwkJCSAgICAgYm9vbCBjb21w
YXJlX3Jlc3VsdCwKKwkJCSAgICAgY29uc3QgY2hhciAqY29tcGFyZV9uYW1lLAorCQkJICAgICBj
b25zdCBjaGFyICpmaWxlLAorCQkJICAgICBjb25zdCBjaGFyICpsaW5lLAorCQkJICAgICBjb25z
dCBjaGFyICpmbXQsIC4uLikKK3sKKwlzdHJ1Y3Qga3VuaXRfc3RyZWFtICpzdHJlYW0gPSBrdW5p
dF9hc3NlcnRfc3RhcnQodGVzdCwgZmlsZSwgbGluZSk7CisJc3RydWN0IHZhX2Zvcm1hdCB2YWY7
CisJdmFfbGlzdCBhcmdzOworCisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sCisJCQkgIkFzc2Vy
dGVkICVzICVzICVzLCBidXRcbiIsCisJCQkgbGVmdF9uYW1lLCBjb21wYXJlX25hbWUsIHJpZ2h0
X25hbWUpOworCWt1bml0X3N0cmVhbV9hZGQoc3RyZWFtLCAiXHRcdCVzID09ICVsbGRcbiIsIGxl
ZnRfbmFtZSwgbGVmdCk7CisJa3VuaXRfc3RyZWFtX2FkZChzdHJlYW0sICJcdFx0JXMgPT0gJWxs
ZFxuIiwgcmlnaHRfbmFtZSwgcmlnaHQpOworCisJaWYgKGZtdCkgeworCQl2YV9zdGFydChhcmdz
LCBmbXQpOworCisJCXZhZi5mbXQgPSBmbXQ7CisJCXZhZi52YSA9ICZhcmdzOworCisJCWt1bml0
X3N0cmVhbV9hZGQoc3RyZWFtLCAiXG4lcFYiLCAmdmFmKTsKKworCQl2YV9lbmQoYXJncyk7CisJ
fQorCisJa3VuaXRfYXNzZXJ0X2VuZCh0ZXN0LCBjb21wYXJlX3Jlc3VsdCwgc3RyZWFtKTsKK30K
KwotLSAKMi4yMS4wLjU5My5nNTExZWMzNDVlMTgtZ29vZwoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1haWxpbmcgbGlzdApkcmktZGV2
ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21h
aWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
