Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A836717412
	for <lists+dri-devel@lfdr.de>; Wed,  8 May 2019 10:41:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C29B189804;
	Wed,  8 May 2019 08:41:39 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com
 [148.163.156.1])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 68809892CA
 for <dri-devel@lists.freedesktop.org>; Wed,  8 May 2019 07:02:52 +0000 (UTC)
Received: from pps.filterd (m0098393.ppops.net [127.0.0.1])
 by mx0a-001b2d01.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id
 x48724YN020318
 for <dri-devel@lists.freedesktop.org>; Wed, 8 May 2019 03:02:51 -0400
Received: from e06smtp02.uk.ibm.com (e06smtp02.uk.ibm.com [195.75.94.98])
 by mx0a-001b2d01.pphosted.com with ESMTP id 2sbrxkm0dt-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <dri-devel@lists.freedesktop.org>; Wed, 08 May 2019 03:02:51 -0400
Received: from localhost
 by e06smtp02.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <dri-devel@lists.freedesktop.org> from <alastair@au1.ibm.com>;
 Wed, 8 May 2019 08:02:48 +0100
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
 by e06smtp02.uk.ibm.com (192.168.101.132) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Wed, 8 May 2019 08:02:39 +0100
Received: from d06av25.portsmouth.uk.ibm.com (d06av25.portsmouth.uk.ibm.com
 [9.149.105.61])
 by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 x4872ceO61603912
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Wed, 8 May 2019 07:02:38 GMT
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 0D14A11C04A;
 Wed,  8 May 2019 07:02:38 +0000 (GMT)
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 6451211C05C;
 Wed,  8 May 2019 07:02:37 +0000 (GMT)
Received: from ozlabs.au.ibm.com (unknown [9.192.253.14])
 by d06av25.portsmouth.uk.ibm.com (Postfix) with ESMTP;
 Wed,  8 May 2019 07:02:37 +0000 (GMT)
Received: from adsilva.ozlabs.ibm.com (haven.au.ibm.com [9.192.254.114])
 (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ozlabs.au.ibm.com (Postfix) with ESMTPSA id 4B179A03B5;
 Wed,  8 May 2019 17:02:35 +1000 (AEST)
From: "Alastair D'Silva" <alastair@au1.ibm.com>
To: alastair@d-silva.org
Subject: [PATCH v2 4/7] lib/hexdump.c: Replace ascii bool in
 hex_dump_to_buffer with flags
Date: Wed,  8 May 2019 17:01:44 +1000
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190508070148.23130-1-alastair@au1.ibm.com>
References: <20190508070148.23130-1-alastair@au1.ibm.com>
MIME-Version: 1.0
X-TM-AS-GCONF: 00
x-cbid: 19050807-0008-0000-0000-000002E46A05
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 19050807-0009-0000-0000-00002250E9FB
Message-Id: <20190508070148.23130-5-alastair@au1.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
 definitions=2019-05-08_05:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 priorityscore=1501
 malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1905080046
X-Mailman-Approved-At: Wed, 08 May 2019 08:41:38 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, Stanislaw Gruszka <sgruszka@redhat.com>,
 Petr Mladek <pmladek@suse.com>, David Airlie <airlied@linux.ie>,
 dri-devel@lists.freedesktop.org, devel@driverdev.osuosl.org,
 linux-scsi@vger.kernel.org, Jassi Brar <jassisinghbrar@gmail.com>,
 ath10k@lists.infradead.org, intel-gfx@lists.freedesktop.org,
 Dan Carpenter <dan.carpenter@oracle.com>, Jose Abreu <Jose.Abreu@synopsys.com>,
 Tom Lendacky <thomas.lendacky@amd.com>,
 "James E.J. Bottomley" <jejb@linux.ibm.com>, linux-fsdevel@vger.kernel.org,
 Steven Rostedt <rostedt@goodmis.org>, Rodrigo Vivi <rodrigo.vivi@intel.com>,
 Kalle Valo <kvalo@codeaurora.org>, Karsten Keil <isdn@linux-pingi.de>,
 "Martin K. Petersen" <martin.petersen@oracle.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 David Laight <David.Laight@ACULAB.COM>, netdev@vger.kernel.org,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>,
 Alexander Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

RnJvbTogQWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+CgpJbiBvcmRlciB0
byBzdXBwb3J0IGFkZGl0aW9uYWwgZmVhdHVyZXMgaW4gaGV4X2R1bXBfdG9fYnVmZmVyLCByZXBs
YWNlCnRoZSBhc2NpaSBib29sIHBhcmFtZXRlciB3aXRoIGZsYWdzLgoKU2lnbmVkLW9mZi1ieTog
QWxhc3RhaXIgRCdTaWx2YSA8YWxhc3RhaXJAZC1zaWx2YS5vcmc+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfZW5naW5lX2NzLmMgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2lz
ZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMgICAgICAgICAgIHwgIDYgKysrKy0tCiBkcml2
ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRy
aXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMgICAgICAgICAgfCAgMiArLQog
ZHJpdmVycy9uZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdjLXhsZ21hYy1jb21tb24uYyB8ICAyICst
CiBkcml2ZXJzL25ldC93aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMgICAgICAgICAgIHwgIDMg
KystCiBkcml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2FjeS8zOTQ1LW1hYy5jICAgIHwg
IDIgKy0KIGRyaXZlcnMvcGxhdGZvcm0vY2hyb21lL3dpbGNvX2VjL2RlYnVnZnMuYyAgICAgICAg
fCAgMiArLQogZHJpdmVycy9zY3NpL3Njc2lfbG9nZ2luZy5jICAgICAgICAgICAgICAgICAgICAg
ICB8ICA4ICsrKy0tLS0tCiBkcml2ZXJzL3N0YWdpbmcvZmJ0ZnQvZmJ0ZnQtY29yZS5jICAgICAg
ICAgICAgICAgIHwgIDIgKy0KIGZzL3NlcV9maWxlLmMgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgMyArKy0KIGluY2x1ZGUvbGludXgvcHJpbnRrLmggICAgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgOCArKysrLS0tLQogbGliL2hleGR1bXAuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8IDE1ICsrKysrKysrLS0tLS0tLQogbGliL3Rlc3RfaGV4
ZHVtcC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA1ICsrKy0tCiAxNCBmaWxl
cyBjaGFuZ2VkLCAzMyBpbnNlcnRpb25zKCspLCAyOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IDQ5ZmE0M2ZmMDJiYS4uZmIxMzNlNzI5Zjlh
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtMTMxOCw3ICsxMzE4
LDcgQEAgc3RhdGljIHZvaWQgaGV4ZHVtcChzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0sIGNvbnN0IHZv
aWQgKmJ1Ziwgc2l6ZV90IGxlbikKIAkJV0FSTl9PTl9PTkNFKGhleF9kdW1wX3RvX2J1ZmZlcihi
dWYgKyBwb3MsIGxlbiAtIHBvcywKIAkJCQkJCXJvd3NpemUsIHNpemVvZih1MzIpLAogCQkJCQkJ
bGluZSwgc2l6ZW9mKGxpbmUpLAotCQkJCQkJZmFsc2UpID49IHNpemVvZihsaW5lKSk7CisJCQkJ
CQkwKSA+PSBzaXplb2YobGluZSkpOwogCQlkcm1fcHJpbnRmKG0sICJbJTA0enhdICVzXG4iLCBw
b3MsIGxpbmUpOwogCiAJCXByZXYgPSBidWYgKyBwb3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lz
ZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMgYi9kcml2ZXJzL2lzZG4vaGFyZHdhcmUvbUlT
RE4vbUlTRE5pc2FyLmMKaW5kZXggMzg2NzMxZWMyNDg5Li5mMTNmMzRkYjZjMTcgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvaXNkbi9oYXJkd2FyZS9tSVNETi9tSVNETmlzYXIuYworKysgYi9kcml2ZXJz
L2lzZG4vaGFyZHdhcmUvbUlTRE4vbUlTRE5pc2FyLmMKQEAgLTg0LDcgKzg0LDggQEAgc2VuZF9t
Ym94KHN0cnVjdCBpc2FyX2h3ICppc2FyLCB1OCBoaXMsIHU4IGNyZWcsIHU4IGxlbiwgdTggKm1z
ZykKIAogCQkJd2hpbGUgKGwgPCAoaW50KWxlbikgewogCQkJCWhleF9kdW1wX3RvX2J1ZmZlciht
c2cgKyBsLCBsZW4gLSBsLCAzMiwgMSwKLQkJCQkJCSAgIGlzYXItPmxvZywgMjU2LCAxKTsKKwkJ
CQkJCSAgIGlzYXItPmxvZywgMjU2LAorCQkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQkJcHJf
ZGVidWcoIiVzOiAlcyAlMDJ4OiAlc1xuIiwgaXNhci0+bmFtZSwKIAkJCQkJIF9fZnVuY19fLCBs
LCBpc2FyLT5sb2cpOwogCQkJCWwgKz0gMzI7CkBAIC0xMTMsNyArMTE0LDggQEAgcmN2X21ib3go
c3RydWN0IGlzYXJfaHcgKmlzYXIsIHU4ICptc2cpCiAKIAkJCXdoaWxlIChsIDwgKGludClpc2Fy
LT5jbHNiKSB7CiAJCQkJaGV4X2R1bXBfdG9fYnVmZmVyKG1zZyArIGwsIGlzYXItPmNsc2IgLSBs
LCAzMiwKLQkJCQkJCSAgIDEsIGlzYXItPmxvZywgMjU2LCAxKTsKKwkJCQkJCSAgIDEsIGlzYXIt
PmxvZywgMjU2LAorCQkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQkJcHJfZGVidWcoIiVzOiAl
cyAlMDJ4OiAlc1xuIiwgaXNhci0+bmFtZSwKIAkJCQkJIF9fZnVuY19fLCBsLCBpc2FyLT5sb2cp
OwogCQkJCWwgKz0gMzI7CmRpZmYgLS1naXQgYS9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0
LmMgYi9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMKaW5kZXggNGU0YWM0YmU2NDIzLi4y
ZjlhMDk0ZDAyNTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbWFpbGJveC9tYWlsYm94LXRlc3QuYwor
KysgYi9kcml2ZXJzL21haWxib3gvbWFpbGJveC10ZXN0LmMKQEAgLTIxMyw3ICsyMTMsNyBAQCBz
dGF0aWMgc3NpemVfdCBtYm94X3Rlc3RfbWVzc2FnZV9yZWFkKHN0cnVjdCBmaWxlICpmaWxwLCBj
aGFyIF9fdXNlciAqdXNlcmJ1ZiwKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKHB0ciwKIAkJCQkgICBN
Qk9YX0JZVEVTX1BFUl9MSU5FLAogCQkJCSAgIE1CT1hfQllURVNfUEVSX0xJTkUsIDEsIHRvdXNl
ciArIGwsCi0JCQkJICAgTUJPWF9IRVhEVU1QX0xJTkVfTEVOLCB0cnVlKTsKKwkJCQkgICBNQk9Y
X0hFWERVTVBfTElORV9MRU4sIEhFWERVTVBfQVNDSUkpOwogCiAJCXB0ciArPSBNQk9YX0JZVEVT
X1BFUl9MSU5FOwogCQlsICs9IE1CT1hfSEVYRFVNUF9MSU5FX0xFTjsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMgYi9kcml2ZXJzL25ldC9ldGhl
cm5ldC9hbWQveGdiZS94Z2JlLWRydi5jCmluZGV4IDBjYzkxMWY5MjhiMS4uZTk1NGEzMWNlZTBj
IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9hbWQveGdiZS94Z2JlLWRydi5jCisr
KyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtZC94Z2JlL3hnYmUtZHJ2LmMKQEAgLTI5OTIsNyAr
Mjk5Miw3IEBAIHZvaWQgeGdiZV9wcmludF9wa3Qoc3RydWN0IG5ldF9kZXZpY2UgKm5ldGRldiwg
c3RydWN0IHNrX2J1ZmYgKnNrYiwgYm9vbCB0eF9yeCkKIAkJdW5zaWduZWQgaW50IGxlbiA9IG1p
bihza2ItPmxlbiAtIGksIDMyVSk7CiAKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKCZza2ItPmRhdGFb
aV0sIGxlbiwgMzIsIDEsCi0JCQkJICAgYnVmZmVyLCBzaXplb2YoYnVmZmVyKSwgZmFsc2UpOwor
CQkJCSAgIGJ1ZmZlciwgc2l6ZW9mKGJ1ZmZlciksIDApOwogCQluZXRkZXZfZGJnKG5ldGRldiwg
IiAgJSMwNng6ICVzXG4iLCBpLCBidWZmZXIpOwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdjLXhsZ21hYy1jb21tb24uYyBiL2RyaXZlcnMvbmV0L2V0
aGVybmV0L3N5bm9wc3lzL2R3Yy14bGdtYWMtY29tbW9uLmMKaW5kZXggZWIxYzZiMDNjMzI5Li5i
ODBhZGZhMWY4OTAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L3N5bm9wc3lzL2R3
Yy14bGdtYWMtY29tbW9uLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvc3lub3BzeXMvZHdj
LXhsZ21hYy1jb21tb24uYwpAQCAtMzQ5LDcgKzM0OSw3IEBAIHZvaWQgeGxnbWFjX3ByaW50X3Br
dChzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2LAogCQl1bnNpZ25lZCBpbnQgbGVuID0gbWluKHNr
Yi0+bGVuIC0gaSwgMzJVKTsKIAogCQloZXhfZHVtcF90b19idWZmZXIoJnNrYi0+ZGF0YVtpXSwg
bGVuLCAzMiwgMSwKLQkJCQkgICBidWZmZXIsIHNpemVvZihidWZmZXIpLCBmYWxzZSk7CisJCQkJ
ICAgYnVmZmVyLCBzaXplb2YoYnVmZmVyKSwgMCk7CiAJCW5ldGRldl9kYmcobmV0ZGV2LCAiICAl
IzA2eDogJXNcbiIsIGksIGJ1ZmZlcik7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC93
aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMgYi9kcml2ZXJzL25ldC93aXJlbGVzcy9hdGgvYXRo
MTBrL2RlYnVnLmMKaW5kZXggMzJkOTY3YTMxYzY1Li40Yzk5ZWEwMzIyNmQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L3dpcmVsZXNzL2F0aC9hdGgxMGsvZGVidWcuYworKysgYi9kcml2ZXJzL25l
dC93aXJlbGVzcy9hdGgvYXRoMTBrL2RlYnVnLmMKQEAgLTI2NjIsNyArMjY2Miw4IEBAIHZvaWQg
YXRoMTBrX2RiZ19kdW1wKHN0cnVjdCBhdGgxMGsgKmFyLAogCQkJCQkJKHVuc2lnbmVkIGludCko
cHRyIC0gYnVmKSk7CiAJCQloZXhfZHVtcF90b19idWZmZXIocHRyLCBsZW4gLSAocHRyIC0gYnVm
KSwgMTYsIDEsCiAJCQkJCSAgIGxpbmVidWYgKyBsaW5lYnVmbGVuLAotCQkJCQkgICBzaXplb2Yo
bGluZWJ1ZikgLSBsaW5lYnVmbGVuLCB0cnVlKTsKKwkJCQkJICAgc2l6ZW9mKGxpbmVidWYpIC0g
bGluZWJ1ZmxlbiwKKwkJCQkJICAgSEVYRFVNUF9BU0NJSSk7CiAJCQlkZXZfcHJpbnRrKEtFUk5f
REVCVUcsIGFyLT5kZXYsICIlc1xuIiwgbGluZWJ1Zik7CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2FjeS8zOTQ1LW1hYy5jIGIvZHJpdmVycy9u
ZXQvd2lyZWxlc3MvaW50ZWwvaXdsZWdhY3kvMzk0NS1tYWMuYwppbmRleCAyNzE5NzdmN2ZiYjAu
LmFjYmUyNmQyMmMzNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvd2lyZWxlc3MvaW50ZWwvaXds
ZWdhY3kvMzk0NS1tYWMuYworKysgYi9kcml2ZXJzL25ldC93aXJlbGVzcy9pbnRlbC9pd2xlZ2Fj
eS8zOTQ1LW1hYy5jCkBAIC0zMjQ3LDcgKzMyNDcsNyBAQCBpbDM5NDVfc2hvd19tZWFzdXJlbWVu
dChzdHJ1Y3QgZGV2aWNlICpkLCBzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSAqYXR0ciwKIAogCXdo
aWxlIChzaXplICYmIFBBR0VfU0laRSAtIGxlbikgewogCQloZXhfZHVtcF90b19idWZmZXIoZGF0
YSArIG9mcywgc2l6ZSwgMTYsIDEsIGJ1ZiArIGxlbiwKLQkJCQkgICBQQUdFX1NJWkUgLSBsZW4s
IHRydWUpOworCQkJCSAgIFBBR0VfU0laRSAtIGxlbiwgSEVYRFVNUF9BU0NJSSk7CiAJCWxlbiA9
IHN0cmxlbihidWYpOwogCQlpZiAoUEFHRV9TSVpFIC0gbGVuKQogCQkJYnVmW2xlbisrXSA9ICdc
bic7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxjb19lYy9kZWJ1Z2Zz
LmMgYi9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxjb19lYy9kZWJ1Z2ZzLmMKaW5kZXggYzA5
MGRiMmNkNWJlLi4yNmQ5YWU1YzJkYzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcGxhdGZvcm0vY2hy
b21lL3dpbGNvX2VjL2RlYnVnZnMuYworKysgYi9kcml2ZXJzL3BsYXRmb3JtL2Nocm9tZS93aWxj
b19lYy9kZWJ1Z2ZzLmMKQEAgLTE3NCw3ICsxNzQsNyBAQCBzdGF0aWMgc3NpemVfdCByYXdfcmVh
ZChzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBfX3VzZXIgKnVzZXJfYnVmLCBzaXplX3QgY291bnQs
CiAJCWZtdF9sZW4gPSBoZXhfZHVtcF90b19idWZmZXIoZGVidWdfaW5mby0+cmF3X2RhdGEsCiAJ
CQkJCSAgICAgZGVidWdfaW5mby0+cmVzcG9uc2Vfc2l6ZSwKIAkJCQkJICAgICAxNiwgMSwgZGVi
dWdfaW5mby0+Zm9ybWF0dGVkX2RhdGEsCi0JCQkJCSAgICAgRk9STUFUVEVEX0JVRkZFUl9TSVpF
LCB0cnVlKTsKKwkJCQkJICAgICBGT1JNQVRURURfQlVGRkVSX1NJWkUsIEhFWERVTVBfQVNDSUkp
OwogCQkvKiBPbmx5IHJldHVybiByZXNwb25zZSB0aGUgZmlyc3QgdGltZSBpdCBpcyByZWFkICov
CiAJCWRlYnVnX2luZm8tPnJlc3BvbnNlX3NpemUgPSAwOwogCX0KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvc2NzaS9zY3NpX2xvZ2dpbmcuYyBiL2RyaXZlcnMvc2NzaS9zY3NpX2xvZ2dpbmcuYwppbmRl
eCBiZDcwMzM5YzEyNDIuLmZjZTU0MmJiNDBlNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9zY3NpL3Nj
c2lfbG9nZ2luZy5jCisrKyBiL2RyaXZlcnMvc2NzaS9zY3NpX2xvZ2dpbmcuYwpAQCAtMjYzLDcg
KzI2Myw3IEBAIHZvaWQgc2NzaV9wcmludF9jb21tYW5kKHN0cnVjdCBzY3NpX2NtbmQgKmNtZCkK
IAkJCQkJCSAiQ0RCWyUwMnhdOiAiLCBrKTsKIAkJCQloZXhfZHVtcF90b19idWZmZXIoJmNtZC0+
Y21uZFtrXSwgbGluZWxlbiwKIAkJCQkJCSAgIDE2LCAxLCBsb2didWYgKyBvZmYsCi0JCQkJCQkg
ICBsb2didWZfbGVuIC0gb2ZmLCBmYWxzZSk7CisJCQkJCQkgICBsb2didWZfbGVuIC0gb2ZmLCAw
KTsKIAkJCX0KIAkJCWRldl9wcmludGsoS0VSTl9JTkZPLCAmY21kLT5kZXZpY2UtPnNkZXZfZ2Vu
ZGV2LCAiJXMiLAogCQkJCSAgIGxvZ2J1Zik7CkBAIC0yNzQsOCArMjc0LDcgQEAgdm9pZCBzY3Np
X3ByaW50X2NvbW1hbmQoc3RydWN0IHNjc2lfY21uZCAqY21kKQogCWlmICghV0FSTl9PTihvZmYg
PiBsb2didWZfbGVuIC0gNDkpKSB7CiAJCW9mZiArPSBzY25wcmludGYobG9nYnVmICsgb2ZmLCBs
b2didWZfbGVuIC0gb2ZmLCAiICIpOwogCQloZXhfZHVtcF90b19idWZmZXIoY21kLT5jbW5kLCBj
bWQtPmNtZF9sZW4sIDE2LCAxLAotCQkJCSAgIGxvZ2J1ZiArIG9mZiwgbG9nYnVmX2xlbiAtIG9m
ZiwKLQkJCQkgICBmYWxzZSk7CisJCQkJICAgbG9nYnVmICsgb2ZmLCBsb2didWZfbGVuIC0gb2Zm
LCAwKTsKIAl9CiBvdXRfcHJpbnRrOgogCWRldl9wcmludGsoS0VSTl9JTkZPLCAmY21kLT5kZXZp
Y2UtPnNkZXZfZ2VuZGV2LCAiJXMiLCBsb2didWYpOwpAQCAtMzU0LDggKzM1Myw3IEBAIHNjc2lf
bG9nX2R1bXBfc2Vuc2UoY29uc3Qgc3RydWN0IHNjc2lfZGV2aWNlICpzZGV2LCBjb25zdCBjaGFy
ICpuYW1lLCBpbnQgdGFnLAogCQlvZmYgPSBzZGV2X2Zvcm1hdF9oZWFkZXIobG9nYnVmLCBsb2di
dWZfbGVuLAogCQkJCQkgbmFtZSwgdGFnKTsKIAkJaGV4X2R1bXBfdG9fYnVmZmVyKCZzZW5zZV9i
dWZmZXJbaV0sIGxlbiwgMTYsIDEsCi0JCQkJICAgbG9nYnVmICsgb2ZmLCBsb2didWZfbGVuIC0g
b2ZmLAotCQkJCSAgIGZhbHNlKTsKKwkJCQkgICBsb2didWYgKyBvZmYsIGxvZ2J1Zl9sZW4gLSBv
ZmYsIDApOwogCQlkZXZfcHJpbnRrKEtFUk5fSU5GTywgJnNkZXYtPnNkZXZfZ2VuZGV2LCAiJXMi
LCBsb2didWYpOwogCX0KIAlzY3NpX2xvZ19yZWxlYXNlX2J1ZmZlcihsb2didWYpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9zdGFnaW5nL2ZidGZ0L2ZidGZ0LWNvcmUuYyBiL2RyaXZlcnMvc3RhZ2lu
Zy9mYnRmdC9mYnRmdC1jb3JlLmMKaW5kZXggOWIwN2JhZGY0YzZjLi4yZTVkZjVjYzlkNjEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvc3RhZ2luZy9mYnRmdC9mYnRmdC1jb3JlLmMKKysrIGIvZHJpdmVy
cy9zdGFnaW5nL2ZidGZ0L2ZidGZ0LWNvcmUuYwpAQCAtNjEsNyArNjEsNyBAQCB2b2lkIGZidGZ0
X2RiZ19oZXgoY29uc3Qgc3RydWN0IGRldmljZSAqZGV2LCBpbnQgZ3JvdXBzaXplLAogCXZhX2Vu
ZChhcmdzKTsKIAogCWhleF9kdW1wX3RvX2J1ZmZlcihidWYsIGxlbiwgMzIsIGdyb3Vwc2l6ZSwg
dGV4dCArIHRleHRfbGVuLAotCQkJICAgNTEyIC0gdGV4dF9sZW4sIGZhbHNlKTsKKwkJCSAgIDUx
MiAtIHRleHRfbGVuLCAwKTsKIAogCWlmIChsZW4gPiAzMikKIAkJZGV2X2luZm8oZGV2LCAiJXMg
Li4uXG4iLCB0ZXh0KTsKZGlmZiAtLWdpdCBhL2ZzL3NlcV9maWxlLmMgYi9mcy9zZXFfZmlsZS5j
CmluZGV4IDFkZWE3YThhNTI1NS4uYTAyMTM2MzdhZjNlIDEwMDY0NAotLS0gYS9mcy9zZXFfZmls
ZS5jCisrKyBiL2ZzL3NlcV9maWxlLmMKQEAgLTg3Myw3ICs4NzMsOCBAQCB2b2lkIHNlcV9oZXhf
ZHVtcChzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsIGludCBwcmVm
aXhfdHlwZSwKIAogCQlzaXplID0gc2VxX2dldF9idWYobSwgJmJ1ZmZlcik7CiAJCXJldCA9IGhl
eF9kdW1wX3RvX2J1ZmZlcihwdHIgKyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0J
CQkJCSBidWZmZXIsIHNpemUsIGFzY2lpKTsKKwkJCQkJIGJ1ZmZlciwgc2l6ZSwKKwkJCQkJIGFz
Y2lpID8gSEVYRFVNUF9BU0NJSSA6IDApOwogCQlzZXFfY29tbWl0KG0sIHJldCA8IHNpemUgPyBy
ZXQgOiAtMSk7CiAKIAkJc2VxX3B1dGMobSwgJ1xuJyk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L3ByaW50ay5oIGIvaW5jbHVkZS9saW51eC9wcmludGsuaAppbmRleCA5MzhhNjc1ODBkNzgu
LjAwYTgyZTQ2ODY0MyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9wcmludGsuaAorKysgYi9p
bmNsdWRlL2xpbnV4L3ByaW50ay5oCkBAIC00ODAsMTMgKzQ4MCwxMyBAQCBlbnVtIHsKIAlEVU1Q
X1BSRUZJWF9PRkZTRVQKIH07CiAKLWV4dGVybiBpbnQgaGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0
IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsCi0JCQkgICAgICBpbnQgZ3JvdXBz
aXplLCBjaGFyICpsaW5lYnVmLCBzaXplX3QgbGluZWJ1ZmxlbiwKLQkJCSAgICAgIGJvb2wgYXNj
aWkpOwotCiAjZGVmaW5lIEhFWERVTVBfQVNDSUkJCQkoMSA8PCAwKQogI2RlZmluZSBIRVhEVU1Q
X1NVUFBSRVNTX1JFUEVBVEVECSgxIDw8IDEpCiAKK2V4dGVybiBpbnQgaGV4X2R1bXBfdG9fYnVm
ZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3NpemUsCisJCQkgICAgICBp
bnQgZ3JvdXBzaXplLCBjaGFyICpsaW5lYnVmLCBzaXplX3QgbGluZWJ1ZmxlbiwKKwkJCSAgICAg
IHU2NCBmbGFncyk7CisKICNpZmRlZiBDT05GSUdfUFJJTlRLCiBleHRlcm4gdm9pZCBwcmludF9o
ZXhfZHVtcF9leHQoY29uc3QgY2hhciAqbGV2ZWwsIGNvbnN0IGNoYXIgKnByZWZpeF9zdHIsCiAJ
CQkgICBpbnQgcHJlZml4X3R5cGUsIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLApkaWZmIC0t
Z2l0IGEvbGliL2hleGR1bXAuYyBiL2xpYi9oZXhkdW1wLmMKaW5kZXggZDYxYTFlNGYxOWZhLi5k
ZGQxNjk3ZTVmOWIgMTAwNjQ0Ci0tLSBhL2xpYi9oZXhkdW1wLmMKKysrIGIvbGliL2hleGR1bXAu
YwpAQCAtODUsNyArODUsOCBAQCBFWFBPUlRfU1lNQk9MKGJpbjJoZXgpOwogICogQGdyb3Vwc2l6
ZTogbnVtYmVyIG9mIGJ5dGVzIHRvIHByaW50IGF0IGEgdGltZSAoMSwgMiwgNCwgODsgZGVmYXVs
dCA9IDEpCiAgKiBAbGluZWJ1Zjogd2hlcmUgdG8gcHV0IHRoZSBjb252ZXJ0ZWQgZGF0YQogICog
QGxpbmVidWZsZW46IHRvdGFsIHNpemUgb2YgQGxpbmVidWYsIGluY2x1ZGluZyBzcGFjZSBmb3Ig
dGVybWluYXRpbmcgTlVMCi0gKiBAYXNjaWk6IGluY2x1ZGUgQVNDSUkgYWZ0ZXIgdGhlIGhleCBv
dXRwdXQKKyAqIEBmbGFnczogQSBiaXR3aXNlIE9SIG9mIHRoZSBmb2xsb3dpbmcgZmxhZ3M6Cisg
KglIRVhEVU1QX0FTQ0lJOgkJCWluY2x1ZGUgQVNDSUkgYWZ0ZXIgdGhlIGhleCBvdXRwdXQKICAq
CiAgKiBoZXhfZHVtcF90b19idWZmZXIoKSB3b3JrcyBvbiBvbmUgImxpbmUiIG9mIG91dHB1dCBh
dCBhIHRpbWUsIGNvbnZlcnRpbmcKICAqIDxncm91cHNpemU+IGJ5dGVzIG9mIGlucHV0IHRvIGhl
eGFkZWNpbWFsIChhbmQgb3B0aW9uYWxseSBwcmludGFibGUgQVNDSUkpCkBAIC05Nyw3ICs5OCw3
IEBAIEVYUE9SVF9TWU1CT0woYmluMmhleCk7CiAgKgogICogRS5nLjoKICAqICAgaGV4X2R1bXBf
dG9fYnVmZmVyKGZyYW1lLT5kYXRhLCBmcmFtZS0+bGVuLCAxNiwgMSwKLSAqCQkJbGluZWJ1Ziwg
c2l6ZW9mKGxpbmVidWYpLCB0cnVlKTsKKyAqCQkJbGluZWJ1Ziwgc2l6ZW9mKGxpbmVidWYpLCBI
RVhEVU1QX0FTQ0lJKTsKICAqCiAgKiBleGFtcGxlIG91dHB1dCBidWZmZXI6CiAgKiA0MCA0MSA0
MiA0MyA0NCA0NSA0NiA0NyA0OCA0OSA0YSA0YiA0YyA0ZCA0ZSA0ZiAgQEFCQ0RFRkdISUpLTE1O
TwpAQCAtMTA5LDcgKzExMCw3IEBAIEVYUE9SVF9TWU1CT0woYmluMmhleCk7CiAgKiBzdHJpbmcg
aWYgZW5vdWdoIHNwYWNlIGhhZCBiZWVuIGF2YWlsYWJsZS4KICAqLwogaW50IGhleF9kdW1wX3Rv
X2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCByb3dzaXplLCBpbnQgZ3Jv
dXBzaXplLAotCQkgICAgICAgY2hhciAqbGluZWJ1Ziwgc2l6ZV90IGxpbmVidWZsZW4sIGJvb2wg
YXNjaWkpCisJCSAgICAgICBjaGFyICpsaW5lYnVmLCBzaXplX3QgbGluZWJ1ZmxlbiwgdTY0IGZs
YWdzKQogewogCWNvbnN0IHU4ICpwdHIgPSBidWY7CiAJaW50IG5ncm91cHM7CkBAIC0xODcsNyAr
MTg4LDcgQEAgaW50IGhleF9kdW1wX3RvX2J1ZmZlcihjb25zdCB2b2lkICpidWYsIHNpemVfdCBs
ZW4sIGludCByb3dzaXplLCBpbnQgZ3JvdXBzaXplLAogCQlpZiAoaikKIAkJCWx4LS07CiAJfQot
CWlmICghYXNjaWkpCisJaWYgKCEoZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKSkKIAkJZ290byBuaWw7
CiAKIAl3aGlsZSAobHggPCBhc2NpaV9jb2x1bW4pIHsKQEAgLTIwNyw3ICsyMDgsOCBAQCBpbnQg
aGV4X2R1bXBfdG9fYnVmZmVyKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IHJvd3Np
emUsIGludCBncm91cHNpemUsCiBvdmVyZmxvdzI6CiAJbGluZWJ1ZltseCsrXSA9ICdcMCc7CiBv
dmVyZmxvdzE6Ci0JcmV0dXJuIGFzY2lpID8gYXNjaWlfY29sdW1uICsgbGVuIDogKGdyb3Vwc2l6
ZSAqIDIgKyAxKSAqIG5ncm91cHMgLSAxOworCXJldHVybiAoZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJ
KSA/IGFzY2lpX2NvbHVtbiArIGxlbiA6CisJCQkJCSAoZ3JvdXBzaXplICogMiArIDEpICogbmdy
b3VwcyAtIDE7CiB9CiBFWFBPUlRfU1lNQk9MKGhleF9kdW1wX3RvX2J1ZmZlcik7CiAKQEAgLTMz
Niw4ICszMzgsNyBAQCB2b2lkIHByaW50X2hleF9kdW1wX2V4dChjb25zdCBjaGFyICpsZXZlbCwg
Y29uc3QgY2hhciAqcHJlZml4X3N0ciwKIAkJfQogCiAJCWhleF9kdW1wX3RvX2J1ZmZlcihwdHIg
KyBpLCBsaW5lbGVuLCByb3dzaXplLCBncm91cHNpemUsCi0JCQkJICAgbGluZWJ1ZiwgbGluZWJ1
Zl9sZW4sCi0JCQkJICAgZmxhZ3MgJiBIRVhEVU1QX0FTQ0lJKTsKKwkJCQkgICBsaW5lYnVmLCBs
aW5lYnVmX2xlbiwgZmxhZ3MpOwogCiAJCXN3aXRjaCAocHJlZml4X3R5cGUpIHsKIAkJY2FzZSBE
VU1QX1BSRUZJWF9BRERSRVNTOgpkaWZmIC0tZ2l0IGEvbGliL3Rlc3RfaGV4ZHVtcC5jIGIvbGli
L3Rlc3RfaGV4ZHVtcC5jCmluZGV4IDZhYjc1YTIwOWI0My4uYWUzNDBjNWMxYzZmIDEwMDY0NAot
LS0gYS9saWIvdGVzdF9oZXhkdW1wLmMKKysrIGIvbGliL3Rlc3RfaGV4ZHVtcC5jCkBAIC0xNjYs
NyArMTY2LDcgQEAgc3RhdGljIHZvaWQgX19pbml0IHRlc3RfaGV4ZHVtcChzaXplX3QgbGVuLCBp
bnQgcm93c2l6ZSwgaW50IGdyb3Vwc2l6ZSwKIAogCW1lbXNldChyZWFsLCBGSUxMX0NIQVIsIHNp
emVvZihyZWFsKSk7CiAJaGV4X2R1bXBfdG9fYnVmZmVyKGRhdGFfYiwgbGVuLCByb3dzaXplLCBn
cm91cHNpemUsIHJlYWwsIHNpemVvZihyZWFsKSwKLQkJCSAgIGFzY2lpKTsKKwkJCSAgIGFzY2lp
ID8gSEVYRFVNUF9BU0NJSSA6IDApOwogCiAJbWVtc2V0KHRlc3QsIEZJTExfQ0hBUiwgc2l6ZW9m
KHRlc3QpKTsKIAl0ZXN0X2hleGR1bXBfcHJlcGFyZV90ZXN0KGxlbiwgcm93c2l6ZSwgZ3JvdXBz
aXplLCB0ZXN0LCBzaXplb2YodGVzdCksCkBAIC0yMDQsNyArMjA0LDggQEAgc3RhdGljIHZvaWQg
X19pbml0IHRlc3RfaGV4ZHVtcF9vdmVyZmxvdyhzaXplX3QgYnVmbGVuLCBzaXplX3QgbGVuLAog
CiAJbWVtc2V0KGJ1ZiwgRklMTF9DSEFSLCBzaXplb2YoYnVmKSk7CiAKLQlyYyA9IGhleF9kdW1w
X3RvX2J1ZmZlcihkYXRhX2IsIGxlbiwgcm93c2l6ZSwgZ3JvdXBzaXplLCBidWYsIGJ1Zmxlbiwg
YXNjaWkpOworCXJjID0gaGV4X2R1bXBfdG9fYnVmZmVyKGRhdGFfYiwgbGVuLCByb3dzaXplLCBn
cm91cHNpemUsIGJ1ZiwgYnVmbGVuLAorCQkJCWFzY2lpID8gSEVYRFVNUF9BU0NJSSA6IDApOwog
CiAJLyoKIAkgKiBDYWxsZXIgbXVzdCBwcm92aWRlIHRoZSBkYXRhIGxlbmd0aCBtdWx0aXBsZSBv
ZiBncm91cHNpemUuIFRoZQotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpkcmktZGV2ZWwgbWFpbGluZyBsaXN0CmRyaS1kZXZlbEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9kcmktZGV2ZWw=
