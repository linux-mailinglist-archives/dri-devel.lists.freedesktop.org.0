Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3FCFD105CC
	for <lists+dri-devel@lfdr.de>; Wed,  1 May 2019 09:19:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 86BAF89388;
	Wed,  1 May 2019 07:19:09 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from bhuna.collabora.co.uk (bhuna.collabora.co.uk [46.235.227.227])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B026889150
 for <dri-devel@lists.freedesktop.org>; Tue, 30 Apr 2019 18:05:41 +0000 (UTC)
Received: from [127.0.0.1] (localhost [127.0.0.1])
 (Authenticated sender: gportay) with ESMTPSA id 23F4A282FE4
From: =?UTF-8?q?Ga=C3=ABl=20PORTAY?= <gael.portay@collabora.com>
To: Rob Herring <robh+dt@kernel.org>, Mark Rutland <mark.rutland@arm.com>,
 Heiko Stuebner <heiko@sntech.de>,
 Michael Turquette <mturquette@baylibre.com>,
 Stephen Boyd <sboyd@kernel.org>, MyungJoo Ham <myungjoo.ham@samsung.com>,
 Kyungmin Park <kyungmin.park@samsung.com>,
 Chanwoo Choi <cw00.choi@samsung.com>, Sandy Huang <hjc@rock-chips.com>,
 David Airlie <airlied@linux.ie>, Daniel Vetter <daniel@ffwll.ch>,
 =?UTF-8?q?Ga=C3=ABl=20PORTAY?= <gael.portay@collabora.com>,
 devicetree@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-rockchip@lists.infradead.org, linux-kernel@vger.kernel.org,
 linux-clk@vger.kernel.org, linux-pm@vger.kernel.org,
 dri-devel@lists.freedesktop.org
Subject: [RFC 1/4] PM / devfreq: add devfreq_lock/unlock() functions
Date: Tue, 30 Apr 2019 14:05:21 -0400
Message-Id: <20190430180524.22710-2-gael.portay@collabora.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190430180524.22710-1-gael.portay@collabora.com>
References: <20190430180524.22710-1-gael.portay@collabora.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 01 May 2019 07:18:43 +0000
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Lin Huang <hl@rock-chips.com>, Derek Basehore <dbasehore@chromium.org>,
 Douglas Anderson <dianders@chromium.org>, Matthias Kaehlcke <mka@chromium.org>,
 Boris Brezillon <boris.brezillon@collabora.com>,
 Enric Balletbo i Serra <enric.balletbo@collabora.com>, kernel@collabora.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBwYXRjaCBhZGRzIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgbG9jay91bmxvY2sgZnVuY3Rp
b25zIGluIHRoZQpkZXZmcmVxIGZyYW1ld29yay4KCkluIHNvbWUgc2l0dWF0aW9ucywgY2hhbmdp
bmcgdGhlIGNsb2NrIHJhdGUgYWZmZWN0IG90aGVyIGRldmljZXMsIGFuZAp0aGUgZGV2ZnJlcSBm
cmFtZXdvcmsgbmVlZHMgYSBtZWFuIHRvIHN5bmNocm9uaXplIGFsbCB0aGUgZHJpdmVycwp0b2dl
dGhlci4KClRoaXMgbG9ja2luZyBBUEkgYWxsb3dzIHRoaXJkLXBhcnR5IGRyaXZlcnMgdGhhdCB1
c2UgYSBkZXZmcmVxIGRldmljZSB0bwpoYXZlIGNvbnRyb2wgb24gd2hldGhlciBpdCBjYW4gY2hh
bmdlIHRoZSByYXRlIG9yIG5vdC4KClRob3NlIGRyaXZlcnMgY2FuIGxvY2sgdGhlIGRldmZyZXEg
ZGV2aWNlIHRvIHByZXZlbnQgaXQgZnJvbSBjaGFuZ2luZwp0aGUgcmF0ZSwgYW5kIHRoZW4gY2Fu
IHJlbGVhc2UgdGhlIGxvY2sgdG8gbGV0IGl0IGNoYW5nZSB0aGUgcmF0ZSBhZ2Fpbi4KCldoZW4g
YSBjaGFuZ2UgcmF0ZSBpcyB0cmlnZ2VyZWQsIGFuZCB0aGUgZGV2ZnJlcSBkZXZpY2UgaXMgbG9j
a2VkLCB0aGUKZGV2aWNlIGluZm9ybXMgdGhlIGRyaXZlcnMgdGhhdCBob2xkIGEgbG9jayB0aHJv
dWdoIGEgY2FsbGJhY2sgdGhhdCBhCmNoYW5nZSByYXRlIGlzIHdhbnRlZC4gVGhpcyBjaGFuZ2Ug
aXMgbm90IGFwcGxpZWQuIEl0IGlzIG1hcmtlZCBhcwpwZW5kaW5nLgoKV2hlbiBhIHBlbmRpbmcg
cmF0ZSBjaGFuZ2UgZXhpc3RzLCBhbmQgYWxsIHRoZSBsb2NrcyBhcmUgcmVsZWFzZWQsIHRoZQpk
ZXZmcmVxIGRldmljZSByZXN1bWVzIHRoZSByYXRlIGNoYW5nZSB0aGF0IGlzIHBlbmRpbmcgYWZ0
ZXIgdGhlIGxhc3QKbG9jayBpcyByZWxlYXNlZC4KClNpZ25lZC1vZmYtYnk6IEdhw6tsIFBPUlRB
WSA8Z2FlbC5wb3J0YXlAY29sbGFib3JhLmNvbT4KLS0tCiBkcml2ZXJzL2RldmZyZXEvZGV2ZnJl
cS5jIHwgMjAwICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystCiBpbmNsdWRl
L2xpbnV4L2RldmZyZXEuaCAgIHwgIDY0ICsrKysrKysrKysrKwogMiBmaWxlcyBjaGFuZ2VkLCAy
NjMgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZGV2
ZnJlcS9kZXZmcmVxLmMgYi9kcml2ZXJzL2RldmZyZXEvZGV2ZnJlcS5jCmluZGV4IDBhZTNkZTc2
ODMzYi4uYTY1NWUxNGEyOGY2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2RldmZyZXEvZGV2ZnJlcS5j
CisrKyBiL2RyaXZlcnMvZGV2ZnJlcS9kZXZmcmVxLmMKQEAgLTMyMyw2ICszMjMsNjAgQEAgc3Rh
dGljIGludCBkZXZmcmVxX3NldF90YXJnZXQoc3RydWN0IGRldmZyZXEgKmRldmZyZXEsIHVuc2ln
bmVkIGxvbmcgbmV3X2ZyZXEsCiAJcmV0dXJuIGVycjsKIH0KIAorc3RhdGljIHZvaWQgZGV2ZnJl
cV9zZXRfdGFyZ2V0X3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQoreworCXN0cnVjdCBk
ZXZmcmVxICpkZXZmcmVxID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBkZXZmcmVxLAorCQkJ
CQkJICAgICBzZXRfdGFyZ2V0X3dvcmspOworCXN0cnVjdCBkZXZmcmVxX2Rldl91c2VybG9jayAq
dXNlcmxvY2ssICp1c2VybG9ja19zYWZlOworCXVuc2lnbmVkIGxvbmcgZnJlcSwgbG9ja19mbGFn
czsKKwlib29sIGRlYWRsaW5lID0gZmFsc2U7CisJa3RpbWVfdCBub3c7CisJYm9vbCBsb2NrZWQ7
CisJdTMyIGZsYWdzOworCWludCBlcnI7CisKKwkvKiBTdXNwZW5kZWQsIHNraXAuICovCisJaWYg
KGF0b21pY19yZWFkKCZkZXZmcmVxLT5zdXNwZW5kX2NvdW50KSA+IDApCisJCXJldHVybjsKKwor
CXNwaW5fbG9ja19pcnFzYXZlKCZkZXZmcmVxLT5sb2NrZXJzX3NwaW5sb2NrLCBsb2NrX2ZsYWdz
KTsKKwlsb2NrZWQgPSAhbGlzdF9lbXB0eSgmZGV2ZnJlcS0+dXNlcmxvY2tzLmxvY2tlZCk7CisJ
LyogTm90IGxvY2tlZCwgY2hlY2sgaWYgZGVhZGxpbmUgb2YgdW5sb2NrZXJzIHdhcyBub3QgcmVh
Y2hlZC4gKi8KKwlpZiAoIWxvY2tlZCkgeworCQlub3cgPSBrdGltZV9nZXQoKTsKKwkJZnJlcSA9
IGRldmZyZXEtPm5ld19mcmVxOworCQlmbGFncyA9IGRldmZyZXEtPm5ld19mbGFnczsKKworCQls
aXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUodXNlcmxvY2ssIHVzZXJsb2NrX3NhZmUsCisJCQkJCSAm
ZGV2ZnJlcS0+dXNlcmxvY2tzLnVubG9ja2VkLAorCQkJCQkgbm9kZSkgeworCQkJaWYgKGt0aW1l
X2FmdGVyKHVzZXJsb2NrLT5kZWFkbGluZSwgbm93KSkKKwkJCQljb250aW51ZTsKKworCQkJaWYg
KCF1c2VybG9jay0+ZGVhZGxpbmUpCisJCQkJY29udGludWU7CisKKwkJCWRlYWRsaW5lID0gdHJ1
ZTsKKwkJCWxpc3RfbW92ZV90YWlsKCZ1c2VybG9jay0+bm9kZSwKKwkJCQkgICAgICAgJmRldmZy
ZXEtPnVzZXJsb2Nrcy5sb2NrZWQpOworCQl9CisKKwkJaWYgKCFkZWFkbGluZSkKKwkJCWRldmZy
ZXEtPnNldF90YXJnZXRfcGVuZGluZyA9IGZhbHNlOworCX0KKwlzcGluX3VubG9ja19pcnFyZXN0
b3JlKCZkZXZmcmVxLT5sb2NrZXJzX3NwaW5sb2NrLCBsb2NrX2ZsYWdzKTsKKworCWlmIChsb2Nr
ZWQgfHwgZGVhZGxpbmUpCisJCXJldHVybjsKKworCW11dGV4X2xvY2soJmRldmZyZXEtPmxvY2sp
OworCWVyciA9IGRldmZyZXFfc2V0X3RhcmdldChkZXZmcmVxLCBmcmVxLCBmbGFncyk7CisJaWYg
KGVycikKKwkJZGV2X2VycigmZGV2ZnJlcS0+ZGV2LCAiZmFpbGVkIHRvIHNldCB0YXJnZXQgd2l0
aCAoJWQpIGVycm9yXG4iLAorCQkJZXJyKTsKKwltdXRleF91bmxvY2soJmRldmZyZXEtPmxvY2sp
OworfQorCiAvKiBMb2FkIG1vbml0b3JpbmcgaGVscGVyIGZ1bmN0aW9ucyBmb3IgZ292ZXJub3Jz
IHVzZSAqLwogCiAvKioKQEAgLTMzNCw3ICszODgsOSBAQCBzdGF0aWMgaW50IGRldmZyZXFfc2V0
X3RhcmdldChzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSwgdW5zaWduZWQgbG9uZyBuZXdfZnJlcSwK
ICAqLwogaW50IHVwZGF0ZV9kZXZmcmVxKHN0cnVjdCBkZXZmcmVxICpkZXZmcmVxKQogewotCXVu
c2lnbmVkIGxvbmcgZnJlcSwgbWluX2ZyZXEsIG1heF9mcmVxOworCXVuc2lnbmVkIGxvbmcgZnJl
cSwgbWluX2ZyZXEsIG1heF9mcmVxLCBsb2NrX2ZsYWdzOworCXN0cnVjdCBkZXZmcmVxX2Rldl91
c2VybG9jayAqdXNlcmxvY2s7CisJYm9vbCBsb2NrZWQgPSBmYWxzZTsKIAlpbnQgZXJyID0gMDsK
IAl1MzIgZmxhZ3MgPSAwOwogCkBAIC0zNzAsNiArNDI2LDI4IEBAIGludCB1cGRhdGVfZGV2ZnJl
cShzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSkKIAkJZmxhZ3MgfD0gREVWRlJFUV9GTEFHX0xFQVNU
X1VQUEVSX0JPVU5EOyAvKiBVc2UgTFVCICovCiAJfQogCisJc3Bpbl9sb2NrX2lycXNhdmUoJmRl
dmZyZXEtPmxvY2tlcnNfc3BpbmxvY2ssIGxvY2tfZmxhZ3MpOworCWxvY2tlZCA9ICFsaXN0X2Vt
cHR5KCZkZXZmcmVxLT51c2VybG9ja3MubG9ja2VkKTsKKwkvKiBEZXZpY2UgaXMgbG9ja2VkLCB0
ZWxsIGxvY2tlcnMgdGhhdCBhIGNoYW5nZSByYXRlIGlzIHdhbnRlZCAqLworCWlmIChsb2NrZWQp
IHsKKwkJZGV2ZnJlcS0+c2V0X3RhcmdldF9wZW5kaW5nID0gdHJ1ZTsKKwkJZGV2ZnJlcS0+bmV3
X2ZyZXEgPSBmcmVxOworCQlkZXZmcmVxLT5uZXdfZmxhZ3MgPSBmbGFnczsKKworCQlsaXN0X2Zv
cl9lYWNoX2VudHJ5KHVzZXJsb2NrLCAmZGV2ZnJlcS0+dXNlcmxvY2tzLmxvY2tlZCwKKwkJCQkg
ICAgbm9kZSkgeworCQkJaWYgKHVzZXJsb2NrLT53YW50X3RvX2NoYW5nZV9yYXRlKQorCQkJCXVz
ZXJsb2NrLT53YW50X3RvX2NoYW5nZV9yYXRlKHVzZXJsb2NrLAorCQkJCQkJCSAgICAgIGRldmZy
ZXEpOworCQl9CisJfQorCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmRldmZyZXEtPmxvY2tlcnNf
c3BpbmxvY2ssIGxvY2tfZmxhZ3MpOworCisJaWYgKGxvY2tlZCkgeworCQlkZXZfd2FybigmZGV2
ZnJlcS0+ZGV2LCAiTG9ja2VkIVxuIik7CisJCXJldHVybiAwOworCX0KKwogCXJldHVybiBkZXZm
cmVxX3NldF90YXJnZXQoZGV2ZnJlcSwgZnJlcSwgZmxhZ3MpOwogCiB9CkBAIC02NDYsNiArNzI0
LDkgQEAgc3RydWN0IGRldmZyZXEgKmRldmZyZXFfYWRkX2RldmljZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsCiAJZGV2ZnJlcS0+bGFzdF9zdGF0dXMuY3VycmVudF9mcmVxdWVuY3kgPSBwcm9maWxlLT5p
bml0aWFsX2ZyZXE7CiAJZGV2ZnJlcS0+ZGF0YSA9IGRhdGE7CiAJZGV2ZnJlcS0+bmIubm90aWZp
ZXJfY2FsbCA9IGRldmZyZXFfbm90aWZpZXJfY2FsbDsKKwlJTklUX1dPUksoJmRldmZyZXEtPnNl
dF90YXJnZXRfd29yaywgZGV2ZnJlcV9zZXRfdGFyZ2V0X3dvcmspOworCUlOSVRfTElTVF9IRUFE
KCZkZXZmcmVxLT51c2VybG9ja3MubG9ja2VkKTsKKwlJTklUX0xJU1RfSEVBRCgmZGV2ZnJlcS0+
dXNlcmxvY2tzLnVubG9ja2VkKTsKIAogCWlmICghZGV2ZnJlcS0+cHJvZmlsZS0+bWF4X3N0YXRl
ICYmICFkZXZmcmVxLT5wcm9maWxlLT5mcmVxX3RhYmxlKSB7CiAJCW11dGV4X3VubG9jaygmZGV2
ZnJlcS0+bG9jayk7CkBAIC0xNjgyLDMgKzE3NjMsMTIwIEBAIHZvaWQgZGV2bV9kZXZmcmVxX3Vu
cmVnaXN0ZXJfbm90aWZpZXIoc3RydWN0IGRldmljZSAqZGV2LAogCQkJICAgICAgIGRldm1fZGV2
ZnJlcV9kZXZfbWF0Y2gsIGRldmZyZXEpKTsKIH0KIEVYUE9SVF9TWU1CT0woZGV2bV9kZXZmcmVx
X3VucmVnaXN0ZXJfbm90aWZpZXIpOworCisvKioKKyAqIGRldmZyZXFfcmVnaXN0ZXJfZGV2X3Vz
ZXJfbG9jaygpIC0gSGVscGVyIGZ1bmN0aW9uIHRvIHJlZ2lzdGVyIGEgdXNlciBsb2NrCisgKgkJ
CQkgICAgICB0byBkZXZmcmVxCisgKiBAdXNlcmxvY2s6CVRoZSBkZXZmcmVxIGRldiB1c2VyIGxv
Y2sgb2JqZWN0LgorICogQGRldmZyZXE6CVRoZSBkZXZmcmVxIG9iamVjdC4KKyAqCisgKiBIZWxw
ZXIgZnVuY3Rpb24gdG8gcmVnaXN0ZXIgdGhlIEB1c2VybG9jayB0byB0aGUgQGRldmZyZXEgZGV2
aWNlLgorICoKKyAqIFRoZSBmdW5jdGlvbiBtb3ZlcyB0aGUgQHVzZXJsb2NrIHRvIHRoZSBsaXN0
IG9mIHVubG9ja2Vycy4KKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciAtRUlOVkFMIGlm
IGFyZ3VtZW50cyBhcmUgaW52YWxpZC4KKyAqLworaW50IGRldmZyZXFfcmVnaXN0ZXJfZGV2X3Vz
ZXJfbG9jayhzdHJ1Y3QgZGV2ZnJlcV9kZXZfdXNlcmxvY2sgKnVzZXJsb2NrLAorCQkJCSAgIHN0
cnVjdCBkZXZmcmVxICpkZXZmcmVxKQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlpZiAo
IWRldmZyZXEgfHwgIXVzZXJsb2NrKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXNwaW5fbG9ja19p
cnFzYXZlKCZkZXZmcmVxLT5sb2NrZXJzX3NwaW5sb2NrLCBmbGFncyk7CisJdXNlcmxvY2stPmRl
YWRsaW5lID0gMDsKKwlsaXN0X2FkZF90YWlsKCZ1c2VybG9jay0+bm9kZSwgJmRldmZyZXEtPnVz
ZXJsb2Nrcy51bmxvY2tlZCk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZGV2ZnJlcS0+bG9j
a2Vyc19zcGlubG9jaywgZmxhZ3MpOworCisJcmV0dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKGRl
dmZyZXFfcmVnaXN0ZXJfZGV2X3VzZXJfbG9jayk7CisKKy8qKgorICogZGV2ZnJlcV91bnJlZ2lz
dGVyX2Rldl91c2VyX2xvY2soKSAtIEhlbHBlciBmdW5jdGlvbiB0byB1bnJlZ2lzdGVyIGEgdXNl
cgorICoJCQkJCWxvY2sKKyAqIEB1c2VybG9jazoJVGhlIGRldmZyZXEgZGV2IHVzZXIgbG9jayBv
YmplY3QuCisgKiBAZGV2ZnJlcToJVGhlIGRldmZyZXEgb2JqZWN0LgorICoKKyAqIEhlbHBlciBm
dW5jdGlvbiB0byB1bnJlZ2lzdGVyIHRoZSBAdXNlcmxvY2sgZnJvbSB0aGUgQGRldmZyZXEgZGV2
aWNlLgorICoKKyAqIFRoZSBmdW5jdGlvbiByZW1vdmVzIHRoZSBAdXNlcmxvY2suCisgKi8KK3Zv
aWQgZGV2ZnJlcV91bnJlZ2lzdGVyX2Rldl91c2VyX2xvY2soc3RydWN0IGRldmZyZXFfZGV2X3Vz
ZXJsb2NrICp1c2VybG9jaywKKwkJCQkgICAgICBzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSkKK3sK
Kwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJaWYgKCFkZXZmcmVxIHx8ICF1c2VybG9jaykKKwkJ
cmV0dXJuOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJmRldmZyZXEtPmxvY2tlcnNfc3BpbmxvY2ss
IGZsYWdzKTsKKwlsaXN0X2RlbCgmdXNlcmxvY2stPm5vZGUpOworCXNwaW5fdW5sb2NrX2lycXJl
c3RvcmUoJmRldmZyZXEtPmxvY2tlcnNfc3BpbmxvY2ssIGZsYWdzKTsKK30KK0VYUE9SVF9TWU1C
T0woZGV2ZnJlcV91bnJlZ2lzdGVyX2Rldl91c2VyX2xvY2spOworCisvKioKKyAqIGRldmZyZXFf
bG9ja19kZXZpY2UoKSAtIEhlbHBlciBmdW5jdGlvbiB0byBsb2NrIGRldmZyZXEKKyAqIEBkZXZm
cmVxOglUaGUgZGV2ZnJlcSBvYmplY3QuCisgKiBAdXNlcmxvY2s6CVRoZSBkZXZmcmVxIGRldiB1
c2VyIGxvY2sgb2JqZWN0LgorICoKKyAqIEhlbHBlciBmdW5jdGlvbiB0byBsb2NrIHRoZSBAZGV2
ZnJlcSBkZXZpY2UgZnJvbSBjaGFuZ2luZyB0aGUgZnJlcXVlbmN5IHJhdGUuCisgKiBUaGUgZnVu
Y3Rpb24gbW92ZXMgdGhlIEB1c2VybG9jayB0byB0aGUgbGlzdCBvZiBsb2NrZXJzLgorICoKKyAq
IFRoZSBAdXNlcmxvY2sgc2hvdWxkIGJlIHJlZ2lzdGVyZWQuCisgKgorICogUmV0dXJuOiAwIG9u
IHN1Y2Nlc3Mgb3IgLUVJTlZBTCBpZiBhcmd1bWVudHMgYXJlIGludmFsaWQuCisgKi8KK2ludCBk
ZXZmcmVxX2xvY2tfZGV2aWNlKHN0cnVjdCBkZXZmcmVxICpkZXZmcmVxLAorCQkJc3RydWN0IGRl
dmZyZXFfZGV2X3VzZXJsb2NrICp1c2VybG9jaykKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOwor
CisJaWYgKCFkZXZmcmVxIHx8ICF1c2VybG9jaykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlzcGlu
X2xvY2tfaXJxc2F2ZSgmZGV2ZnJlcS0+bG9ja2Vyc19zcGlubG9jaywgZmxhZ3MpOworCWxpc3Rf
bW92ZV90YWlsKCZ1c2VybG9jay0+bm9kZSwgJmRldmZyZXEtPnVzZXJsb2Nrcy5sb2NrZWQpOwor
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmRldmZyZXEtPmxvY2tlcnNfc3BpbmxvY2ssIGZsYWdz
KTsKKworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJPTChkZXZmcmVxX2xvY2tfZGV2aWNlKTsK
KworLyoqCisgKiBkZXZmcmVxX3VubG9ja19kZXZpY2UoKSAtIEhlbHBlciBmdW5jdGlvbiB0byB1
bmxvY2sgZGV2ZnJlcQorICogQGRldmZyZXE6CVRoZSBkZXZmcmVxIG9iamVjdC4KKyAqIEB1c2Vy
bG9jazoJVGhlIGRldmZyZXEgZGV2IHVzZXIgbG9jayBvYmplY3QuCisgKiBAZGVhZGxpbmU6CVRo
ZSBkZWFkbGluZS4KKyAqCisgKiBIZWxwZXIgZnVuY3Rpb24gdG8gdW5sb2NrIHRoZSBAZGV2ZnJl
cSBkZXZpY2UuIFRoZSBmdW5jdGlvbiBtb3ZlcyB0aGUKKyAqIEB1c2VybG9jayB0byB0aGUgbGlz
dCBvZiB1bmxvY2tlcnMuCisgKgorICogSWYgQGRldmZyZXEgZGV2aWNlIGhhcyBubyBtb3JlIGxv
Y2tlcnMgaW4gaXRzIGxpc3QsIGl0IHRyaWdnZXJzIHRoZSBwZW5kaW5nCisgKiByYXRlIGNoYW5n
ZS4KKyAqCisgKiBUaGUgQHVzZXJsb2NrIHNob3VsZCBiZSByZWdpc3RlcmVkLgorICovCit2b2lk
IGRldmZyZXFfdW5sb2NrX2RldmljZShzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSwKKwkJCSAgIHN0
cnVjdCBkZXZmcmVxX2Rldl91c2VybG9jayAqdXNlcmxvY2ssCisJCQkgICBrdGltZV90IGRlYWRs
aW5lKQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlpZiAoIWRldmZyZXEgfHwgIXVzZXJs
b2NrKQorCQlyZXR1cm47CisKKwlpZiAoYXRvbWljX3JlYWQoJmRldmZyZXEtPnN1c3BlbmRfY291
bnQpID4gMCkKKwkJcmV0dXJuOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJmRldmZyZXEtPmxvY2tl
cnNfc3BpbmxvY2ssIGZsYWdzKTsKKwl1c2VybG9jay0+ZGVhZGxpbmUgPSBkZWFkbGluZTsKKwls
aXN0X21vdmVfdGFpbCgmdXNlcmxvY2stPm5vZGUsICZkZXZmcmVxLT51c2VybG9ja3MudW5sb2Nr
ZWQpOworCWlmIChsaXN0X2VtcHR5KCZkZXZmcmVxLT51c2VybG9ja3MubG9ja2VkKSAmJgorCQkg
ICAgICAgZGV2ZnJlcS0+c2V0X3RhcmdldF9wZW5kaW5nKQorCQlxdWV1ZV93b3JrKHN5c3RlbV9o
aWdocHJpX3dxLCAmZGV2ZnJlcS0+c2V0X3RhcmdldF93b3JrKTsKKwlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZkZXZmcmVxLT5sb2NrZXJzX3NwaW5sb2NrLCBmbGFncyk7Cit9CitFWFBPUlRfU1lN
Qk9MKGRldmZyZXFfdW5sb2NrX2RldmljZSk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2Rl
dmZyZXEuaCBiL2luY2x1ZGUvbGludXgvZGV2ZnJlcS5oCmluZGV4IGZiZmZhNzRiZmMxYi4uMGE1
NzdhNzc2MjM1IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2RldmZyZXEuaAorKysgYi9pbmNs
dWRlL2xpbnV4L2RldmZyZXEuaApAQCAtMzUsNiArMzUsNyBAQAogCiBzdHJ1Y3QgZGV2ZnJlcTsK
IHN0cnVjdCBkZXZmcmVxX2dvdmVybm9yOworc3RydWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrOwog
CiAvKioKICAqIHN0cnVjdCBkZXZmcmVxX2Rldl9zdGF0dXMgLSBEYXRhIGdpdmVuIGZyb20gZGV2
ZnJlcSB1c2VyIGRldmljZSB0bwpAQCAtMTA5LDYgKzExMCwyMSBAQCBzdHJ1Y3QgZGV2ZnJlcV9k
ZXZfcHJvZmlsZSB7CiAJdW5zaWduZWQgaW50IG1heF9zdGF0ZTsKIH07CiAKKy8qKgorICogc3Ry
dWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrIC0gRGV2ZnJlcSdzIHVzZXIgZGV2aWNlIGxvY2sKKyAq
IEBub2RlOglsaXN0IG5vZGUgLSBjb250YWlucyB0aGUgdXNlcmxvY2tzIHRoYXQgaGF2ZSBiZWVu
IGxvY2tlZCBvcgorICoJCXVubG9ja2VkLgorICogQGRlYWRsaW5lOglUaGUgdGltZXN0YW1wIHdo
aWxlIHRoZSB1bmxvY2sgaXMgdmFsaWQuCisgKiBAd2FudF90b19jaGFuZ2VfcmF0ZToJVGhlIGNh
bGxiYWNrIHRoYXQgaXMgY2FsbGVkIGZvciBldmVyeSBsb2NrZXJzLAorICoJCQkJd2hlbiBkZXZm
cmVxIHdhbnRzIHRvIGNoYW5nZSB0aGUgZnJlcXVlbmN5IHJhdGUuCisgKi8KK3N0cnVjdCBkZXZm
cmVxX2Rldl91c2VybG9jayB7CisJc3RydWN0IGxpc3RfaGVhZCBub2RlOworCWt0aW1lX3QgZGVh
ZGxpbmU7CisJdm9pZCAoKndhbnRfdG9fY2hhbmdlX3JhdGUpKHN0cnVjdCBkZXZmcmVxX2Rldl91
c2VybG9jayAqdXNlciwKKwkJCQkgICAgc3RydWN0IGRldmZyZXEgKmRldmZyZXEpOworfTsKKwog
LyoqCiAgKiBzdHJ1Y3QgZGV2ZnJlcSAtIERldmljZSBkZXZmcmVxIHN0cnVjdHVyZQogICogQG5v
ZGU6CWxpc3Qgbm9kZSAtIGNvbnRhaW5zIHRoZSBkZXZpY2VzIHdpdGggZGV2ZnJlcSB0aGF0IGhh
dmUgYmVlbgpAQCAtMTM4LDYgKzE1NCwxMiBAQCBzdHJ1Y3QgZGV2ZnJlcV9kZXZfcHJvZmlsZSB7
CiAgKiBAdHJhbnNfdGFibGU6CVN0YXRpc3RpY3Mgb2YgZGV2ZnJlcSB0cmFuc2l0aW9ucwogICog
QHRpbWVfaW5fc3RhdGU6CVN0YXRpc3RpY3Mgb2YgZGV2ZnJlcSBzdGF0ZXMKICAqIEBsYXN0X3N0
YXRfdXBkYXRlZDoJVGhlIGxhc3QgdGltZSBzdGF0IHVwZGF0ZWQKKyAqIEBuZXdfZnJlcToJCXRo
ZSBsYXN0IGZyZXF1ZW5jeSBjaGFuZ2UgYmVmb3JlIGxvY2suCisgKiBAbmV3X2ZsYWdzOgkJdGhl
IGxhc3QgZmxhZyBjaGFuZ2UgYmVmb3JlIGxvY2suCisgKiBAc2V0X3RhcmdldF9wZW5kaW5nOglp
cyBhIHNldCB0YXJnZXQgcGVuZGluZy4KKyAqIEBzZXRfdGFyZ2V0X3dvcms6CXdvcmsgZm9yIHJl
c3VtaW5nIHNldCB0YXJnZXQuCisgKiBAdXNlcmxvY2tzOgkJdGhlIGxpc3RzIG9mIHVzZXIgbG9j
a3MgKHVubG9ja2VkIGFuZCBsb2NrZWQpLgorICogQGxvY2tfc3BpbmxvY2s6CWEgc3BpbmxvY2sg
dG8gcHJvdGVjdCBhY2Nlc3NpbmcgdG8gbG9jayBhdHRyaWJ1dGVzLgogICogQHRyYW5zaXRpb25f
bm90aWZpZXJfbGlzdDogbGlzdCBoZWFkIG9mIERFVkZSRVFfVFJBTlNJVElPTl9OT1RJRklFUiBu
b3RpZmllcgogICoKICAqIFRoaXMgc3RydWN0dXJlIHN0b3JlcyB0aGUgZGV2ZnJlcSBpbmZvcm1h
dGlvbiBmb3IgYSBnaXZlIGRldmljZS4KQEAgLTE4MCw2ICsyMDIsMTYgQEAgc3RydWN0IGRldmZy
ZXEgewogCXVuc2lnbmVkIGxvbmcgKnRpbWVfaW5fc3RhdGU7CiAJdW5zaWduZWQgbG9uZyBsYXN0
X3N0YXRfdXBkYXRlZDsKIAorCXVuc2lnbmVkIGxvbmcgbmV3X2ZyZXE7CisJdTMyIG5ld19mbGFn
czsKKwlib29sIHNldF90YXJnZXRfcGVuZGluZzsKKwlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgc2V0X3Rh
cmdldF93b3JrOworCXN0cnVjdCB7CisJCXN0cnVjdCBsaXN0X2hlYWQgdW5sb2NrZWQ7CisJCXN0
cnVjdCBsaXN0X2hlYWQgbG9ja2VkOworCX0gdXNlcmxvY2tzOworCXNwaW5sb2NrX3QgbG9ja2Vy
c19zcGlubG9jazsKKwogCXN0cnVjdCBzcmN1X25vdGlmaWVyX2hlYWQgdHJhbnNpdGlvbl9ub3Rp
Zmllcl9saXN0OwogfTsKIApAQCAtMjQzLDYgKzI3NSwxNSBAQCBleHRlcm4gdm9pZCBkZXZtX2Rl
dmZyZXFfdW5yZWdpc3Rlcl9ub3RpZmllcihzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCQkJdW5zaWdu
ZWQgaW50IGxpc3QpOwogZXh0ZXJuIHN0cnVjdCBkZXZmcmVxICpkZXZmcmVxX2dldF9kZXZmcmVx
X2J5X3BoYW5kbGUoc3RydWN0IGRldmljZSAqZGV2LAogCQkJCQkJaW50IGluZGV4KTsKK2V4dGVy
biBpbnQgZGV2ZnJlcV9yZWdpc3Rlcl9kZXZfdXNlcl9sb2NrKAorCSAgICAgICBzdHJ1Y3QgZGV2
ZnJlcV9kZXZfdXNlcmxvY2sgKnVzZXJsb2NrLCBzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSk7Citl
eHRlcm4gdm9pZCBkZXZmcmVxX3VucmVnaXN0ZXJfZGV2X3VzZXJfbG9jaygKKwkgICAgICAgc3Ry
dWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrICp1c2VybG9jaywgc3RydWN0IGRldmZyZXEgKmRldmZy
ZXEpOworZXh0ZXJuIGludCBkZXZmcmVxX2xvY2tfZGV2aWNlKHN0cnVjdCBkZXZmcmVxICpkZXZm
cmVxLAorCQkJICAgICAgIHN0cnVjdCBkZXZmcmVxX2Rldl91c2VybG9jayAqdXNlcmxvY2spOwor
ZXh0ZXJuIHZvaWQgZGV2ZnJlcV91bmxvY2tfZGV2aWNlKHN0cnVjdCBkZXZmcmVxICpkZXZmcmVx
LAorCQkJCSAgc3RydWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrICp1c2VybG9jaywKKwkJCQkgIGt0
aW1lX3QgZGVhZGxpbmUpOwogCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfREVWRlJFUV9HT1ZfU0lN
UExFX09OREVNQU5EKQogLyoqCkBAIC00MDUsNiArNDQ2LDI5IEBAIHN0YXRpYyBpbmxpbmUgaW50
IGRldmZyZXFfdXBkYXRlX3N0YXRzKHN0cnVjdCBkZXZmcmVxICpkZikKIHsKIAlyZXR1cm4gLUVJ
TlZBTDsKIH0KKworc3RhdGljIGlubGluZSBpbnQgZGV2ZnJlcV9yZWdpc3Rlcl9kZXZfdXNlcl9s
b2NrKAorCQkgc3RydWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrICp1c2VybG9jaywgc3RydWN0IGRl
dmZyZXEgKmRldmZyZXEpCit7CisJcmV0dXJuIC1FSU5WQUw7Cit9CisKK3N0YXRpYyBpbmxpbmUg
dm9pZCBkZXZmcmVxX3VucmVnaXN0ZXJfZGV2X3VzZXJfdW5sb2NrKAorCQkgc3RydWN0IGRldmZy
ZXFfZGV2X3VzZXJsb2NrICp1c2VybG9jaywgc3RydWN0IGRldmZyZXEgKmRldmZyZXEpCit7Cit9
CisKK3N0YXRpYyBpbmxpbmUgaW50IGRldmZyZXFfbG9ja19kZXZpY2Uoc3RydWN0IGRldmZyZXEg
KmRldmZyZXEsCisJCQkJICAgICAgc3RydWN0IGRldmZyZXFfZGV2X3VzZXJsb2NrICp1c2VybG9j
aykKK3sKKwlyZXR1cm4gLUVJTlZBTDsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGRldmZyZXFf
dW5sb2NrX2RldmljZShzdHJ1Y3QgZGV2ZnJlcSAqZGV2ZnJlcSwKKwkJCQkJIHN0cnVjdCBkZXZm
cmVxX2Rldl91c2VybG9jayAqdXNlcmxvY2ssCisJCQkJCSBrdGltZV90IGRlYWRsaW5lKQorewor
fQogI2VuZGlmIC8qIENPTkZJR19QTV9ERVZGUkVRICovCiAKICNlbmRpZiAvKiBfX0xJTlVYX0RF
VkZSRVFfSF9fICovCi0tIAoyLjIxLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3Rp
bmZvL2RyaS1kZXZlbA==
