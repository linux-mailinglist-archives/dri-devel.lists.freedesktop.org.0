Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 79A6D14FE18
	for <lists+dri-devel@lfdr.de>; Sun,  2 Feb 2020 16:50:21 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4E50B6EAE9;
	Sun,  2 Feb 2020 15:49:58 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6EB7B6EAE0;
 Sun,  2 Feb 2020 15:49:56 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 02 Feb 2020 07:49:56 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,394,1574150400"; d="scan'208";a="430899924"
Received: from jghithan-mobl.amr.corp.intel.com (HELO
 helsinki.ger.corp.intel.com) ([10.251.88.23])
 by fmsmga006.fm.intel.com with ESMTP; 02 Feb 2020 07:49:54 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Subject: [PATCH v2 12/18] drm/i915: Program DP SDPs with computed configs
Date: Sun,  2 Feb 2020 17:49:32 +0200
Message-Id: <20200202154938.1129610-13-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200202154938.1129610-1-gwan-gyeong.mun@intel.com>
References: <20200202154938.1129610-1-gwan-gyeong.mun@intel.com>
MIME-Version: 1.0
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-fbdev@vger.kernel.org, dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

SW4gb3JkZXIgdG8gdXNlIGNvbXB1dGVkIGNvbmZpZyBmb3IgRFAgU0RQcyAoRFAgVlNDIFNEUCBh
bmQgRFAgSERSIE1ldGFkYXRhCkluZm9mcmFtZSBTRFApLCBpdCByZXBsYWNlcyBpbnRlbF9kcF92
c2NfZW5hYmxlKCkgZnVuY3Rpb24gYW5kCmludGVsX2RwX2hkcl9tZXRhZGF0YV9lbmFibGUoKSBm
dW5jdGlvbiB0byBpbnRlbF9kcF9zZXRfaW5mb2ZyYW1lcygpCmZ1bmN0aW9uLgoKQmVmb3JlIGFw
cGx5aW5nIGl0LCByb3V0aW5lcyBvZiBwcm9ncmFtIFNEUCBhbHdheXMgY2FsY3VsYXRlZCBjb25m
aWdzIHdoZW4KdGhleSBjYWxsZWQuIEFuZCBpdCByZW1vdmVzIHVudXNlZCBmdW5jdGlvbnMuCgpT
aWduZWQtb2ZmLWJ5OiBHd2FuLWd5ZW9uZyBNdW4gPGd3YW4tZ3llb25nLm11bkBpbnRlbC5jb20+
Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyB8ICAgMyArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jICB8IDIyNiAtLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oICB8
ICAgNiAtCiAzIGZpbGVzIGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAyMzQgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggYzk2ZjYyOWNk
ZGMzLi4zNzRhYjZhMzc1N2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYwpAQCAtMzkwMCw4ICszOTAwLDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZW5hYmxlX2RkaV9k
cChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCWludGVsX2VkcF9iYWNrbGlnaHRf
b24oY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAJaW50ZWxfcHNyX2VuYWJsZShpbnRlbF9kcCwg
Y3J0Y19zdGF0ZSk7Ci0JaW50ZWxfZHBfdnNjX2VuYWJsZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSwg
Y29ubl9zdGF0ZSk7Ci0JaW50ZWxfZHBfaGRyX21ldGFkYXRhX2VuYWJsZShpbnRlbF9kcCwgY3J0
Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CisJaW50ZWxfZHBfc2V0X2luZm9mcmFtZXMoZW5jb2Rlciwg
dHJ1ZSwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAJaW50ZWxfZWRwX2RycnNfZW5hYmxlKGlu
dGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCWlmIChjcnRjX3N0YXRlLT5oYXNfYXVkaW8pCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKaW5kZXggODVmYTE3YWI4NDAzLi4wMmE2
ZDU3ZThmN2YgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTUy
NjUsMjMyICs1MjY1LDYgQEAgdm9pZCBpbnRlbF9kcF92c2Nfc2RwX2xvZyhjb25zdCBjaGFyICps
ZXZlbCwgc3RydWN0IGRldmljZSAqZGV2LAogfQogCiAKLXN0YXRpYyB2b2lkCi1pbnRlbF9kcF9z
ZXR1cF92c2Nfc2RwKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCi0JCSAgICAgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJICAgICAgIGNvbnN0IHN0cnVj
dCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKQotewotCXN0cnVjdCBpbnRlbF9kaWdp
dGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwotCXN0
cnVjdCBkcF9zZHAgdnNjX3NkcCA9IHt9OwotCi0JLyogUHJlcGFyZSBWU0MgSGVhZGVyIGZvciBT
VSBhcyBwZXIgRFAgMS40YSBzcGVjLCBUYWJsZSAyLTExOSAqLwotCXZzY19zZHAuc2RwX2hlYWRl
ci5IQjAgPSAwOwotCXZzY19zZHAuc2RwX2hlYWRlci5IQjEgPSAweDc7Ci0KLQkvKgotCSAqIFZT
QyBTRFAgc3VwcG9ydGluZyAzRCBzdGVyZW8sIFBTUjIsIGFuZCBQaXhlbCBFbmNvZGluZy8KLQkg
KiBDb2xvcmltZXRyeSBGb3JtYXQgaW5kaWNhdGlvbi4KLQkgKi8KLQl2c2Nfc2RwLnNkcF9oZWFk
ZXIuSEIyID0gMHg1OwotCi0JLyoKLQkgKiBWU0MgU0RQIHN1cHBvcnRpbmcgM0Qgc3RlcmVvLCAr
IFBTUjIsICsgUGl4ZWwgRW5jb2RpbmcvCi0JICogQ29sb3JpbWV0cnkgRm9ybWF0IGluZGljYXRp
b24gKEhCMiA9IDA1aCkuCi0JICovCi0JdnNjX3NkcC5zZHBfaGVhZGVyLkhCMyA9IDB4MTM7Ci0K
LQkvKiBEUCAxLjRhIHNwZWMsIFRhYmxlIDItMTIwICovCi0Jc3dpdGNoIChjcnRjX3N0YXRlLT5v
dXRwdXRfZm9ybWF0KSB7Ci0JY2FzZSBJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNSNDQ0OgotCQl2
c2Nfc2RwLmRiWzE2XSA9IDB4MSA8PCA0OyAvKiBZQ2JDciA0NDQgOiBEQjE2Wzc6NF0gPSAxaCAq
LwotCQlicmVhazsKLQljYXNlIElOVEVMX09VVFBVVF9GT1JNQVRfWUNCQ1I0MjA6Ci0JCXZzY19z
ZHAuZGJbMTZdID0gMHgzIDw8IDQ7IC8qIFlDYkNyIDQyMCA6IERCMTZbNzo0XSA9IDNoICovCi0J
CWJyZWFrOwotCWNhc2UgSU5URUxfT1VUUFVUX0ZPUk1BVF9SR0I6Ci0JZGVmYXVsdDoKLQkJLyog
UkdCOiBEQjE2Wzc6NF0gPSAwaCAqLwotCQlicmVhazsKLQl9Ci0KLQlzd2l0Y2ggKGNvbm5fc3Rh
dGUtPmNvbG9yc3BhY2UpIHsKLQljYXNlIERSTV9NT0RFX0NPTE9SSU1FVFJZX0JUNzA5X1lDQzoK
LQkJdnNjX3NkcC5kYlsxNl0gfD0gMHgxOwotCQlicmVhazsKLQljYXNlIERSTV9NT0RFX0NPTE9S
SU1FVFJZX1hWWUNDXzYwMToKLQkJdnNjX3NkcC5kYlsxNl0gfD0gMHgyOwotCQlicmVhazsKLQlj
YXNlIERSTV9NT0RFX0NPTE9SSU1FVFJZX1hWWUNDXzcwOToKLQkJdnNjX3NkcC5kYlsxNl0gfD0g
MHgzOwotCQlicmVhazsKLQljYXNlIERSTV9NT0RFX0NPTE9SSU1FVFJZX1NZQ0NfNjAxOgotCQl2
c2Nfc2RwLmRiWzE2XSB8PSAweDQ7Ci0JCWJyZWFrOwotCWNhc2UgRFJNX01PREVfQ09MT1JJTUVU
UllfT1BZQ0NfNjAxOgotCQl2c2Nfc2RwLmRiWzE2XSB8PSAweDU7Ci0JCWJyZWFrOwotCWNhc2Ug
RFJNX01PREVfQ09MT1JJTUVUUllfQlQyMDIwX0NZQ0M6Ci0JY2FzZSBEUk1fTU9ERV9DT0xPUklN
RVRSWV9CVDIwMjBfUkdCOgotCQl2c2Nfc2RwLmRiWzE2XSB8PSAweDY7Ci0JCWJyZWFrOwotCWNh
c2UgRFJNX01PREVfQ09MT1JJTUVUUllfQlQyMDIwX1lDQzoKLQkJdnNjX3NkcC5kYlsxNl0gfD0g
MHg3OwotCQlicmVhazsKLQljYXNlIERSTV9NT0RFX0NPTE9SSU1FVFJZX0RDSV9QM19SR0JfRDY1
OgotCWNhc2UgRFJNX01PREVfQ09MT1JJTUVUUllfRENJX1AzX1JHQl9USEVBVEVSOgotCQl2c2Nf
c2RwLmRiWzE2XSB8PSAweDQ7IC8qIERDSS1QMyAoU01QVEUgUlAgNDMxLTIpICovCi0JCWJyZWFr
OwotCWRlZmF1bHQ6Ci0JCS8qIHNSR0IgKElFQyA2MTk2Ni0yLTEpIC8gSVRVLVIgQlQuNjAxOiBE
QjE2WzA6M10gPSAwaCAqLwotCi0JCS8qIFJHQi0+WUNCQ1IgY29sb3IgY29udmVyc2lvbiB1c2Vz
IHRoZSBCVC43MDkgY29sb3Igc3BhY2UuICovCi0JCWlmIChjcnRjX3N0YXRlLT5vdXRwdXRfZm9y
bWF0ID09IElOVEVMX09VVFBVVF9GT1JNQVRfWUNCQ1I0MjApCi0JCQl2c2Nfc2RwLmRiWzE2XSB8
PSAweDE7IC8qIDB4MSwgSVRVLVIgQlQuNzA5ICovCi0JCWJyZWFrOwotCX0KLQotCS8qCi0JICog
Rm9yIHBpeGVsIGVuY29kaW5nIGZvcm1hdHMgWUNiQ3I0NDQsIFlDYkNyNDIyLCBZQ2JDcjQyMCwg
YW5kIFkgT25seSwKLQkgKiB0aGUgZm9sbG93aW5nIENvbXBvbmVudCBCaXQgRGVwdGggdmFsdWVz
IGFyZSBkZWZpbmVkOgotCSAqIDAwMWIgPSA4YnBjLgotCSAqIDAxMGIgPSAxMGJwYy4KLQkgKiAw
MTFiID0gMTJicGMuCi0JICogMTAwYiA9IDE2YnBjLgotCSAqLwotCXN3aXRjaCAoY3J0Y19zdGF0
ZS0+cGlwZV9icHApIHsKLQljYXNlIDI0OiAvKiA4YnBjICovCi0JCXZzY19zZHAuZGJbMTddID0g
MHgxOwotCQlicmVhazsKLQljYXNlIDMwOiAvKiAxMGJwYyAqLwotCQl2c2Nfc2RwLmRiWzE3XSA9
IDB4MjsKLQkJYnJlYWs7Ci0JY2FzZSAzNjogLyogMTJicGMgKi8KLQkJdnNjX3NkcC5kYlsxN10g
PSAweDM7Ci0JCWJyZWFrOwotCWNhc2UgNDg6IC8qIDE2YnBjICovCi0JCXZzY19zZHAuZGJbMTdd
ID0gMHg0OwotCQlicmVhazsKLQlkZWZhdWx0OgotCQlNSVNTSU5HX0NBU0UoY3J0Y19zdGF0ZS0+
cGlwZV9icHApOwotCQlicmVhazsKLQl9Ci0KLQkvKgotCSAqIER5bmFtaWMgUmFuZ2UgKEJpdCA3
KQotCSAqIDAgPSBWRVNBIHJhbmdlLCAxID0gQ1RBIHJhbmdlLgotCSAqIGFsbCBZQ2JDciBhcmUg
YWx3YXlzIGxpbWl0ZWQgcmFuZ2UKLQkgKi8KLQl2c2Nfc2RwLmRiWzE3XSB8PSAweDgwOwotCi0J
LyoKLQkgKiBDb250ZW50IFR5cGUgKEJpdHMgMjowKQotCSAqIDAwMGIgPSBOb3QgZGVmaW5lZC4K
LQkgKiAwMDFiID0gR3JhcGhpY3MuCi0JICogMDEwYiA9IFBob3RvLgotCSAqIDAxMWIgPSBWaWRl
by4KLQkgKiAxMDBiID0gR2FtZQotCSAqIEFsbCBvdGhlciB2YWx1ZXMgYXJlIFJFU0VSVkVELgot
CSAqIE5vdGU6IFNlZSBDVEEtODYxLUcgZm9yIHRoZSBkZWZpbml0aW9uIGFuZCBleHBlY3RlZAot
CSAqIHByb2Nlc3NpbmcgYnkgYSBzdHJlYW0gc2luayBmb3IgdGhlIGFib3ZlIGNvbnRlY3QgdHlw
ZXMuCi0JICovCi0JdnNjX3NkcC5kYlsxOF0gPSAwOwotCi0JaW50ZWxfZGlnX3BvcnQtPndyaXRl
X2luZm9mcmFtZSgmaW50ZWxfZGlnX3BvcnQtPmJhc2UsCi0JCQljcnRjX3N0YXRlLCBEUF9TRFBf
VlNDLCAmdnNjX3NkcCwgc2l6ZW9mKHZzY19zZHApKTsKLX0KLQotc3RhdGljIHZvaWQKLWludGVs
X2RwX3NldHVwX2hkcl9tZXRhZGF0YV9pbmZvZnJhbWVfc2RwKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsCi0JCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
Ci0JCQkJCSAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCi17
Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBkcF90b19kaWdf
cG9ydChpbnRlbF9kcCk7Ci0Jc3RydWN0IGRwX3NkcCBpbmZvZnJhbWVfc2RwID0ge307Ci0Jc3Ry
dWN0IGhkbWlfZHJtX2luZm9mcmFtZSBkcm1faW5mb2ZyYW1lID0ge307Ci0JY29uc3QgaW50IGlu
Zm9mcmFtZV9zaXplID0gSERNSV9JTkZPRlJBTUVfSEVBREVSX1NJWkUgKyBIRE1JX0RSTV9JTkZP
RlJBTUVfU0laRTsKLQl1bnNpZ25lZCBjaGFyIGJ1ZltIRE1JX0lORk9GUkFNRV9IRUFERVJfU0la
RSArIEhETUlfRFJNX0lORk9GUkFNRV9TSVpFXTsKLQlzc2l6ZV90IGxlbjsKLQlpbnQgcmV0Owot
Ci0JcmV0ID0gZHJtX2hkbWlfaW5mb2ZyYW1lX3NldF9oZHJfbWV0YWRhdGEoJmRybV9pbmZvZnJh
bWUsIGNvbm5fc3RhdGUpOwotCWlmIChyZXQpIHsKLQkJRFJNX0RFQlVHX0tNUygiY291bGRuJ3Qg
c2V0IEhEUiBtZXRhZGF0YSBpbiBpbmZvZnJhbWVcbiIpOwotCQlyZXR1cm47Ci0JfQotCi0JbGVu
ID0gaGRtaV9kcm1faW5mb2ZyYW1lX3BhY2tfb25seSgmZHJtX2luZm9mcmFtZSwgYnVmLCBzaXpl
b2YoYnVmKSk7Ci0JaWYgKGxlbiA8IDApIHsKLQkJRFJNX0RFQlVHX0tNUygiYnVmZmVyIHNpemUg
aXMgc21hbGxlciB0aGFuIGhkciBtZXRhZGF0YSBpbmZvZnJhbWVcbiIpOwotCQlyZXR1cm47Ci0J
fQotCi0JaWYgKGxlbiAhPSBpbmZvZnJhbWVfc2l6ZSkgewotCQlEUk1fREVCVUdfS01TKCJ3cm9u
ZyBzdGF0aWMgaGRyIG1ldGFkYXRhIHNpemVcbiIpOwotCQlyZXR1cm47Ci0JfQotCi0JLyoKLQkg
KiBTZXQgdXAgdGhlIGluZm9mcmFtZSBzZHAgcGFja2V0IGZvciBIRFIgc3RhdGljIG1ldGFkYXRh
LgotCSAqIFByZXBhcmUgVlNDIEhlYWRlciBmb3IgU1UgYXMgcGVyIERQIDEuNGEgc3BlYywKLQkg
KiBUYWJsZSAyLTEwMCBhbmQgVGFibGUgMi0xMDEKLQkgKi8KLQotCS8qIFBhY2tldCBJRCwgMDBo
IGZvciBub24tQXVkaW8gSU5GT0ZSQU1FICovCi0JaW5mb2ZyYW1lX3NkcC5zZHBfaGVhZGVyLkhC
MCA9IDA7Ci0JLyoKLQkgKiBQYWNrZXQgVHlwZSA4MGggKyBOb24tYXVkaW8gSU5GT0ZSQU1FIFR5
cGUgdmFsdWUKLQkgKiBIRE1JX0lORk9GUkFNRV9UWVBFX0RSTTogMHg4NywKLQkgKi8KLQlpbmZv
ZnJhbWVfc2RwLnNkcF9oZWFkZXIuSEIxID0gZHJtX2luZm9mcmFtZS50eXBlOwotCS8qCi0JICog
TGVhc3QgU2lnbmlmaWNhbnQgRWlnaHQgQml0cyBvZiAoRGF0YSBCeXRlIENvdW50IOKAkyAxKQot
CSAqIGluZm9mcmFtZV9zaXplIC0gMSwKLQkgKi8KLQlpbmZvZnJhbWVfc2RwLnNkcF9oZWFkZXIu
SEIyID0gMHgxRDsKLQkvKiBJTkZPRlJBTUUgU0RQIFZlcnNpb24gTnVtYmVyICovCi0JaW5mb2Zy
YW1lX3NkcC5zZHBfaGVhZGVyLkhCMyA9ICgweDEzIDw8IDIpOwotCS8qIENUQSBIZWFkZXIgQnl0
ZSAyIChJTkZPRlJBTUUgVmVyc2lvbiBOdW1iZXIpICovCi0JaW5mb2ZyYW1lX3NkcC5kYlswXSA9
IGRybV9pbmZvZnJhbWUudmVyc2lvbjsKLQkvKiBDVEEgSGVhZGVyIEJ5dGUgMyAoTGVuZ3RoIG9m
IElORk9GUkFNRSk6IEhETUlfRFJNX0lORk9GUkFNRV9TSVpFICovCi0JaW5mb2ZyYW1lX3NkcC5k
YlsxXSA9IGRybV9pbmZvZnJhbWUubGVuZ3RoOwotCS8qCi0JICogQ29weSBIRE1JX0RSTV9JTkZP
RlJBTUVfU0laRSBzaXplIGZyb20gYSBidWZmZXIgYWZ0ZXIKLQkgKiBIRE1JX0lORk9GUkFNRV9I
RUFERVJfU0laRQotCSAqLwotCUJVSUxEX0JVR19PTihzaXplb2YoaW5mb2ZyYW1lX3NkcC5kYikg
PCBIRE1JX0RSTV9JTkZPRlJBTUVfU0laRSArIDIpOwotCW1lbWNweSgmaW5mb2ZyYW1lX3NkcC5k
YlsyXSwgJmJ1ZltIRE1JX0lORk9GUkFNRV9IRUFERVJfU0laRV0sCi0JICAgICAgIEhETUlfRFJN
X0lORk9GUkFNRV9TSVpFKTsKLQotCS8qCi0JICogU2l6ZSBvZiBEUCBpbmZvZnJhbWUgc2RwIHBh
Y2tldCBmb3IgSERSIHN0YXRpYyBtZXRhZGF0YSBpcyBjb25zaXN0IG9mCi0JICogLSBEUCBTRFAg
SGVhZGVyKHN0cnVjdCBkcF9zZHBfaGVhZGVyKTogNCBieXRlcwotCSAqIC0gVHdvIERhdGEgQmxv
Y2tzOiAyIGJ5dGVzCi0JICogICAgQ1RBIEhlYWRlciBCeXRlMiAoSU5GT0ZSQU1FIFZlcnNpb24g
TnVtYmVyKQotCSAqICAgIENUQSBIZWFkZXIgQnl0ZTMgKExlbmd0aCBvZiBJTkZPRlJBTUUpCi0J
ICogLSBIRE1JX0RSTV9JTkZPRlJBTUVfU0laRTogMjYgYnl0ZXMKLQkgKgotCSAqIFByaW9yIHRv
IEdFTjExJ3MgR01QIHJlZ2lzdGVyIHNpemUgaXMgaWRlbnRpY2FsIHRvIERQIEhEUiBzdGF0aWMg
bWV0YWRhdGEKLQkgKiBpbmZvZnJhbWUgc2l6ZS4gQnV0IEdFTjExKyBoYXMgbGFyZ2VyIHRoYW4g
dGhhdCBzaXplLCB3cml0ZV9pbmZvZnJhbWUKLQkgKiB3aWxsIHBhZCByZXN0IG9mIHRoZSBzaXpl
LgotCSAqLwotCWludGVsX2RpZ19wb3J0LT53cml0ZV9pbmZvZnJhbWUoJmludGVsX2RpZ19wb3J0
LT5iYXNlLCBjcnRjX3N0YXRlLAotCQkJCQlIRE1JX1BBQ0tFVF9UWVBFX0dBTVVUX01FVEFEQVRB
LAotCQkJCQkmaW5mb2ZyYW1lX3NkcCwKLQkJCQkJc2l6ZW9mKHN0cnVjdCBkcF9zZHBfaGVhZGVy
KSArIDIgKyBIRE1JX0RSTV9JTkZPRlJBTUVfU0laRSk7Ci19Ci0KLXZvaWQgaW50ZWxfZHBfdnNj
X2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJIGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAotCQkJIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9y
X3N0YXRlICpjb25uX3N0YXRlKQotewotCWlmICghaW50ZWxfZHBfbmVlZHNfdnNjX3NkcChjcnRj
X3N0YXRlLCBjb25uX3N0YXRlKSkKLQkJcmV0dXJuOwotCi0JaW50ZWxfZHBfc2V0dXBfdnNjX3Nk
cChpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7Ci19Ci0KLXZvaWQgaW50ZWxfZHBf
aGRyX21ldGFkYXRhX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJCSAgY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JCQkJICBjb25zdCBzdHJ1
Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSkKLXsKLQlpZiAoIWNvbm5fc3RhdGUt
Pmhkcl9vdXRwdXRfbWV0YWRhdGEpCi0JCXJldHVybjsKLQotCWludGVsX2RwX3NldHVwX2hkcl9t
ZXRhZGF0YV9pbmZvZnJhbWVfc2RwKGludGVsX2RwLAotCQkJCQkJICBjcnRjX3N0YXRlLAotCQkJ
CQkJICBjb25uX3N0YXRlKTsKLX0KLQogc3RhdGljIHU4IGludGVsX2RwX2F1dG90ZXN0X2xpbmtf
dHJhaW5pbmcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlpbnQgc3RhdHVzID0gMDsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaAppbmRleCAwM2IzMDBiNThmZDAu
LjZkODAwM2ViNTlmNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaApA
QCAtMTEyLDEyICsxMTIsNiBAQCBpbnQgaW50ZWxfZHBfbGlua19yZXF1aXJlZChpbnQgcGl4ZWxf
Y2xvY2ssIGludCBicHApOwogaW50IGludGVsX2RwX21heF9kYXRhX3JhdGUoaW50IG1heF9saW5r
X2Nsb2NrLCBpbnQgbWF4X2xhbmVzKTsKIGJvb2wgaW50ZWxfZHBfbmVlZHNfdnNjX3NkcChjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICBjb25zdCBzdHJ1
Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSk7Ci12b2lkIGludGVsX2RwX3ZzY19l
bmFibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJCSBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9z
dGF0ZSAqY29ubl9zdGF0ZSk7Ci12b2lkIGludGVsX2RwX2hkcl9tZXRhZGF0YV9lbmFibGUoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlLAotCQkJCSAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUg
KmNvbm5fc3RhdGUpOwogdm9pZCBpbnRlbF9kcF9zZXRfaW5mb2ZyYW1lcyhzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwgYm9vbCBlbmFibGUsCiAJCQkgICAgIGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5l
Y3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSk7Ci0tIAoyLjI0LjEKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRl
dmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbAo=
