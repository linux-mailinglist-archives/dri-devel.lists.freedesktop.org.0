Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id DA3771CC21F
	for <lists+dri-devel@lfdr.de>; Sat,  9 May 2020 16:17:05 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F01E76E35F;
	Sat,  9 May 2020 14:16:51 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from asav22.altibox.net (asav22.altibox.net [109.247.116.9])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 431D96E358
 for <dri-devel@lists.freedesktop.org>; Sat,  9 May 2020 14:16:46 +0000 (UTC)
Received: from localhost.localdomain (unknown [81.166.168.211])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: noralf.tronnes@ebnett.no)
 by asav22.altibox.net (Postfix) with ESMTPSA id 87ADA20190;
 Sat,  9 May 2020 16:16:43 +0200 (CEST)
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
To: dri-devel@lists.freedesktop.org, linux-usb@vger.kernel.org,
 lee.jones@linaro.org
Subject: [PATCH v2 06/10] drm/client: Add a way to set modeset,
 properties and rotation
Date: Sat,  9 May 2020 16:16:15 +0200
Message-Id: <20200509141619.32970-7-noralf@tronnes.org>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20200509141619.32970-1-noralf@tronnes.org>
References: <20200509141619.32970-1-noralf@tronnes.org>
MIME-Version: 1.0
X-CMAE-Score: 0
X-CMAE-Analysis: v=2.3 cv=R7It5+ZX c=1 sm=1 tr=0
 a=OYZzhG0JTxDrWp/F2OJbnw==:117 a=OYZzhG0JTxDrWp/F2OJbnw==:17
 a=IkcTkHD0fZMA:10 a=M51BFTxLslgA:10 a=SJz97ENfAAAA:8
 a=M-TpJSvIHFVSw-O4hR8A:9 a=Se0h0s-PsaGxwzjN:21 a=KLOMj-mo1MvUhMRw:21
 a=QEXdDO2ut3YA:10 a=vFet0B0WnEQeilDPIY6i:22
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: jingoohan1@gmail.com, daniel.thompson@linaro.org, sam@ravnborg.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

VGhpcyBhZGRzIGZ1bmN0aW9ucyBmb3IgY2xpZW50cyB0aGF0IG5lZWQgbW9yZSBjb250cm9sIG92
ZXIgdGhlCmNvbmZpZ3VyYXRpb24gdGhhbiB3aGF0J3Mgc2V0dXAgYnkgZHJtX2NsaWVudF9tb2Rl
c2V0X3Byb2JlKCkuCkNvbm5lY3RvciwgZmIgYW5kIGRpc3BsYXkgbW9kZSBjYW4gYmUgc2V0IHVz
aW5nIGRybV9jbGllbnRfbW9kZXNldF9zZXQoKS4KUGxhbmUgcm90YXRpb24gY2FuIGJlIHNldCB1
c2luZyBkcm1fY2xpZW50X21vZGVzZXRfc2V0X3JvdGF0aW9uKCkgYW5kCm90aGVyIHByb3BlcnRp
ZXMgdXNpbmcgZHJtX2NsaWVudF9tb2Rlc2V0X3NldF9wcm9wZXJ0eSgpLiBQcm9wZXJ0eQpzZXR0
aW5nIGlzIG9ubHkgaW1wbGVtZW50ZWQgZm9yIGF0b21pYyBkcml2ZXJzLgoKdjI6Ci0gZHJtX2Ns
aWVudF9tb2Rlc2V0X3NldCgpOiBSZW1vdmUgdW5kb2N1bWVudGVkIGZ1bmN0aW9uYWxpdHkgdG8g
Y2xlYXIKICBtb2Rlc2V0cy4gQSBkaXNhYmxlIGZ1bmN0aW9uIHRha2VzIGNhcmUgb2YgdGhhdCBu
ZWVkIG5vdy4KLSBkcm1fY2xpZW50X21vZGVzZXRfc2V0X3Byb3BlcnR5KCk6IFJldHVybiAtRU9Q
Tk9UU1VQUCBpZiBkcml2ZXIgaXMgbm90CiAgYXRvbWljIChTYW0pCgpTaWduZWQtb2ZmLWJ5OiBO
b3JhbGYgVHLDuG5uZXMgPG5vcmFsZkB0cm9ubmVzLm9yZz4KLS0tCiBkcml2ZXJzL2dwdS9kcm0v
ZHJtX2NsaWVudF9tb2Rlc2V0LmMgfCAxMzcgKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBp
bmNsdWRlL2RybS9kcm1fY2xpZW50LmggICAgICAgICAgICAgfCAgMzggKysrKysrKy0KIDIgZmls
ZXMgY2hhbmdlZCwgMTc0IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMgYi9kcml2ZXJzL2dwdS9kcm0v
ZHJtX2NsaWVudF9tb2Rlc2V0LmMKaW5kZXggYjk2MTgzZmFkZDRjLi5iMjJjYzYzZDhkYTQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fY2xpZW50X21vZGVzZXQuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vZHJtX2NsaWVudF9tb2Rlc2V0LmMKQEAgLTgzLDYgKzgzLDEwIEBAIHN0YXRp
YyB2b2lkIGRybV9jbGllbnRfbW9kZXNldF9yZWxlYXNlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAq
Y2xpZW50KQogCQl9CiAJCW1vZGVzZXQtPm51bV9jb25uZWN0b3JzID0gMDsKIAl9CisKKwlrZnJl
ZShjbGllbnQtPnByb3BlcnRpZXMpOworCWNsaWVudC0+cHJvcGVydGllcyA9IE5VTEw7CisJY2xp
ZW50LT5udW1fcHJvcGVydGllcyA9IDA7CiB9CiAKIHZvaWQgZHJtX2NsaWVudF9tb2Rlc2V0X2Zy
ZWUoc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQpCkBAIC04NzksNiArODgzLDEzMCBAQCBp
bnQgZHJtX2NsaWVudF9tb2Rlc2V0X3Byb2JlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50
LCB1bnNpZ25lZCBpbnQgd2lkdGgsCiB9CiBFWFBPUlRfU1lNQk9MKGRybV9jbGllbnRfbW9kZXNl
dF9wcm9iZSk7CiAKKy8qKgorICogZHJtX2NsaWVudF9tb2Rlc2V0X3NldCgpIC0gU2V0IG1vZGVz
ZXQgY29uZmlndXJhdGlvbgorICogQGNsaWVudDogRFJNIGNsaWVudAorICogQGNvbm5lY3Rvcjog
Q29ubmVjdG9yCisgKiBAbW9kZTogRGlzcGxheSBtb2RlCisgKiBAZmI6IEZyYW1lYnVmZmVyCisg
KgorICogVGhpcyBmdW5jdGlvbiByZWxlYXNlcyBhbnkgY3VycmVudCBtb2Rlc2V0IGluZm8sIGlu
Y2x1ZGluZyBwcm9wZXJ0aWVzLCBhbmQKKyAqIHNldHMgdGhlIG5ldyBtb2Rlc2V0IGluIHRoZSBj
bGllbnQncyBtb2Rlc2V0IGFycmF5LgorICoKKyAqIFJldHVybnM6CisgKiBaZXJvIG9uIHN1Y2Nl
c3Mgb3IgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgZHJtX2NsaWVu
dF9tb2Rlc2V0X3NldChzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvciwKKwkJCSAgIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2Rl
LCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYikKK3sKKwlzdHJ1Y3QgZHJtX21vZGVfc2V0ICpt
b2Rlc2V0OworCWludCByZXQgPSAtRU5PRU5UOworCisJbXV0ZXhfbG9jaygmY2xpZW50LT5tb2Rl
c2V0X211dGV4KTsKKworCWRybV9jbGllbnRfbW9kZXNldF9yZWxlYXNlKGNsaWVudCk7CisKKwlk
cm1fY2xpZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgY2xpZW50KSB7CisJCWlmICghY29u
bmVjdG9yX2hhc19wb3NzaWJsZV9jcnRjKGNvbm5lY3RvciwgbW9kZXNldC0+Y3J0YykpCisJCQlj
b250aW51ZTsKKworCQltb2Rlc2V0LT5tb2RlID0gZHJtX21vZGVfZHVwbGljYXRlKGNsaWVudC0+
ZGV2LCBtb2RlKTsKKwkJaWYgKCFtb2Rlc2V0LT5tb2RlKSB7CisJCQlyZXQgPSAtRU5PTUVNOwor
CQkJYnJlYWs7CisJCX0KKworCQlkcm1fbW9kZV9zZXRfY3J0Y2luZm8obW9kZXNldC0+bW9kZSwg
Q1JUQ19JTlRFUkxBQ0VfSEFMVkVfVik7CisKKwkJZHJtX2Nvbm5lY3Rvcl9nZXQoY29ubmVjdG9y
KTsKKwkJbW9kZXNldC0+Y29ubmVjdG9yc1ttb2Rlc2V0LT5udW1fY29ubmVjdG9ycysrXSA9IGNv
bm5lY3RvcjsKKworCQltb2Rlc2V0LT5mYiA9IGZiOworCQlyZXQgPSAwOworCQlicmVhazsKKwl9
CisKKwltdXRleF91bmxvY2soJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CisKKwlyZXR1cm4gcmV0
OworfQorRVhQT1JUX1NZTUJPTChkcm1fY2xpZW50X21vZGVzZXRfc2V0KTsKKworLyoqCisgKiBk
cm1fY2xpZW50X21vZGVzZXRfc2V0X3Byb3BlcnR5KCkgLSBTZXQgYSBwcm9wZXJ0eSBvbiB0aGUg
Y3VycmVudCBjb25maWd1cmF0aW9uCisgKiBAY2xpZW50OiBEUk0gY2xpZW50CisgKiBAb2JqOiBE
Uk0gTW9kZSBPYmplY3QKKyAqIEBwcm9wOiBEUk0gUHJvcGVydHkKKyAqIEB2YWx1ZTogUHJvcGVy
dHkgdmFsdWUKKyAqCisgKiBOb3RlOiBDdXJyZW50bHkgb25seSBpbXBsZW1lbnRlZCBmb3IgYXRv
bWljIGRyaXZlcnMuCisgKgorICogUmV0dXJuczoKKyAqIFplcm8gb24gc3VjY2VzcyBvciBuZWdh
dGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8KK2ludCBkcm1fY2xpZW50X21vZGVzZXRf
c2V0X3Byb3BlcnR5KHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50LCBzdHJ1Y3QgZHJtX21v
ZGVfb2JqZWN0ICpvYmosCisJCQkJICAgIHN0cnVjdCBkcm1fcHJvcGVydHkgKnByb3AsIHU2NCB2
YWx1ZSkKK3sKKwlzdHJ1Y3QgZHJtX2NsaWVudF9wcm9wZXJ0eSAqcHJvcGVydGllczsKKwlpbnQg
cmV0ID0gMDsKKworCWlmICghcHJvcCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoIWRybV9k
cnZfdXNlc19hdG9taWNfbW9kZXNldChjbGllbnQtPmRldikpCisJCXJldHVybiAtRU9QTk9UU1VQ
UDsKKworCW11dGV4X2xvY2soJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CisKKwlwcm9wZXJ0aWVz
ID0ga3JlYWxsb2MoY2xpZW50LT5wcm9wZXJ0aWVzLAorCQkJICAgICAgKGNsaWVudC0+bnVtX3By
b3BlcnRpZXMgKyAxKSAqIHNpemVvZigqcHJvcGVydGllcyksIEdGUF9LRVJORUwpOworCWlmICgh
cHJvcGVydGllcykgeworCQlyZXQgPSAtRU5PTUVNOworCQlnb3RvIHVubG9jazsKKwl9CisKKwlw
cm9wZXJ0aWVzW2NsaWVudC0+bnVtX3Byb3BlcnRpZXNdLm9iaiA9IG9iajsKKwlwcm9wZXJ0aWVz
W2NsaWVudC0+bnVtX3Byb3BlcnRpZXNdLnByb3AgPSBwcm9wOworCXByb3BlcnRpZXNbY2xpZW50
LT5udW1fcHJvcGVydGllc10udmFsdWUgPSB2YWx1ZTsKKwljbGllbnQtPnByb3BlcnRpZXMgPSBw
cm9wZXJ0aWVzOworCWNsaWVudC0+bnVtX3Byb3BlcnRpZXMrKzsKK3VubG9jazoKKwltdXRleF91
bmxvY2soJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorRVhQT1JU
X1NZTUJPTChkcm1fY2xpZW50X21vZGVzZXRfc2V0X3Byb3BlcnR5KTsKKworLyoqCisgKiBkcm1f
Y2xpZW50X21vZGVzZXRfc2V0X3JvdGF0aW9uKCkgLSBTZXQgcm90YXRpb24gb24gdGhlIGN1cnJl
bnQgY29uZmlndXJhdGlvbgorICogQGNsaWVudDogRFJNIGNsaWVudAorICogQHZhbHVlOiBSb3Rh
dGlvbiB2YWx1ZQorICoKKyAqIFJldHVybnM6CisgKiBaZXJvIG9uIHN1Y2Nlc3Mgb3IgbmVnYXRp
dmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgZHJtX2NsaWVudF9tb2Rlc2V0X3Nl
dF9yb3RhdGlvbihzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgdTY0IHZhbHVlKQorewor
CXN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lID0gTlVMTDsKKwlzdHJ1Y3QgZHJtX21vZGVfc2V0ICpt
b2Rlc2V0OworCisJbXV0ZXhfbG9jaygmY2xpZW50LT5tb2Rlc2V0X211dGV4KTsKKwlkcm1fY2xp
ZW50X2Zvcl9lYWNoX21vZGVzZXQobW9kZXNldCwgY2xpZW50KSB7CisJCWlmIChtb2Rlc2V0LT5t
b2RlKSB7CisJCQlwbGFuZSA9IG1vZGVzZXQtPmNydGMtPnByaW1hcnk7CisJCQlicmVhazsKKwkJ
fQorCX0KKwltdXRleF91bmxvY2soJmNsaWVudC0+bW9kZXNldF9tdXRleCk7CisKKwlpZiAoIXBs
YW5lKQorCQlyZXR1cm4gLUVOT0VOVDsKKworCXJldHVybiBkcm1fY2xpZW50X21vZGVzZXRfc2V0
X3Byb3BlcnR5KGNsaWVudCwgJnBsYW5lLT5iYXNlLAorCQkJCQkgICAgICAgcGxhbmUtPnJvdGF0
aW9uX3Byb3BlcnR5LCB2YWx1ZSk7Cit9CitFWFBPUlRfU1lNQk9MKGRybV9jbGllbnRfbW9kZXNl
dF9zZXRfcm90YXRpb24pOworCiAvKioKICAqIGRybV9jbGllbnRfcm90YXRpb24oKSAtIENoZWNr
IHRoZSBpbml0aWFsIHJvdGF0aW9uIHZhbHVlCiAgKiBAbW9kZXNldDogRFJNIG1vZGVzZXQKQEAg
LTk3Myw2ICsxMTAxLDcgQEAgc3RhdGljIGludCBkcm1fY2xpZW50X21vZGVzZXRfY29tbWl0X2F0
b21pYyhzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgYm9vbAogCXN0cnVjdCBkcm1fYXRv
bWljX3N0YXRlICpzdGF0ZTsKIAlzdHJ1Y3QgZHJtX21vZGVzZXRfYWNxdWlyZV9jdHggY3R4Owog
CXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVfc2V0OworCXVuc2lnbmVkIGludCBpOwogCWludCBy
ZXQ7CiAKIAlkcm1fbW9kZXNldF9hY3F1aXJlX2luaXQoJmN0eCwgMCk7CkBAIC0xMDMzLDYgKzEx
NjIsMTQgQEAgc3RhdGljIGludCBkcm1fY2xpZW50X21vZGVzZXRfY29tbWl0X2F0b21pYyhzdHJ1
Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgYm9vbAogCQl9CiAJfQogCisJZm9yIChpID0gMDsg
aSA8IGNsaWVudC0+bnVtX3Byb3BlcnRpZXM7IGkrKykgeworCQlzdHJ1Y3QgZHJtX2NsaWVudF9w
cm9wZXJ0eSAqcHJvcCA9ICZjbGllbnQtPnByb3BlcnRpZXNbaV07CisKKwkJcmV0ID0gZHJtX2F0
b21pY19zZXRfcHJvcGVydHkoc3RhdGUsIE5VTEwsIHByb3AtPm9iaiwgcHJvcC0+cHJvcCwgcHJv
cC0+dmFsdWUpOworCQlpZiAocmV0KQorCQkJZ290byBvdXRfc3RhdGU7CisJfQorCiAJaWYgKGNo
ZWNrKQogCQlyZXQgPSBkcm1fYXRvbWljX2NoZWNrX29ubHkoc3RhdGUpOwogCWVsc2UKZGlmZiAt
LWdpdCBhL2luY2x1ZGUvZHJtL2RybV9jbGllbnQuaCBiL2luY2x1ZGUvZHJtL2RybV9jbGllbnQu
aAppbmRleCA0OTgwODliNjQ3ZGEuLmJkY2RjMzA1MTllNiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9k
cm0vZHJtX2NsaWVudC5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV9jbGllbnQuaApAQCAtMTYsNiAr
MTYsNyBAQCBzdHJ1Y3QgZHJtX2ZpbGU7CiBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyOwogc3RydWN0
IGRybV9nZW1fb2JqZWN0Owogc3RydWN0IGRybV9taW5vcjsKK3N0cnVjdCBkcm1fcHJvcGVydHk7
CiBzdHJ1Y3QgbW9kdWxlOwogCiAvKioKQEAgLTY0LDYgKzY1LDI2IEBAIHN0cnVjdCBkcm1fY2xp
ZW50X2Z1bmNzIHsKIAlpbnQgKCpob3RwbHVnKShzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVu
dCk7CiB9OwogCisvKioKKyAqIHN0cnVjdCBkcm1fY2xpZW50X3Byb3BlcnR5IC0gRFJNIGNsaWVu
dCBwcm9wZXJ0eQorICovCitzdHJ1Y3QgZHJtX2NsaWVudF9wcm9wZXJ0eSB7CisJLyoqCisJICog
QG9iajogRFJNIE1vZGUgT2JqZWN0IHRvIHdoaWNoIHRoZSBwcm9wZXJ0eSBiZWxvbmdzLgorCSAq
LworCXN0cnVjdCBkcm1fbW9kZV9vYmplY3QgKm9iajsKKworCS8qKgorCSAqIEBwcm9wOiBEUk0g
UHJvcGVydHkuCisJICovCisJc3RydWN0IGRybV9wcm9wZXJ0eSAqcHJvcDsKKworCS8qKgorCSAq
IEB2YWx1ZTogUHJvcGVydHkgdmFsdWUuCisJICovCisJdTY0IHZhbHVlOworfTsKKwogLyoqCiAg
KiBzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgLSBEUk0gY2xpZW50IGluc3RhbmNlCiAgKi8KQEAgLTk3
LDcgKzExOCw3IEBAIHN0cnVjdCBkcm1fY2xpZW50X2RldiB7CiAJc3RydWN0IGRybV9maWxlICpm
aWxlOwogCiAJLyoqCi0JICogQG1vZGVzZXRfbXV0ZXg6IFByb3RlY3RzIEBtb2Rlc2V0cy4KKwkg
KiBAbW9kZXNldF9tdXRleDogUHJvdGVjdHMgQG1vZGVzZXRzIGFuZCBAcHJvcGVydGllcy4KIAkg
Ki8KIAlzdHJ1Y3QgbXV0ZXggbW9kZXNldF9tdXRleDsKIApAQCAtMTA1LDYgKzEyNiwxNiBAQCBz
dHJ1Y3QgZHJtX2NsaWVudF9kZXYgewogCSAqIEBtb2Rlc2V0czogQ1JUQyBjb25maWd1cmF0aW9u
cwogCSAqLwogCXN0cnVjdCBkcm1fbW9kZV9zZXQgKm1vZGVzZXRzOworCisJLyoqCisJICogQHBy
b3BlcnRpZXM6IERSTSBwcm9wZXJ0aWVzIGF0dGFjaGVkIHRvIHRoZSBjb25maWd1cmF0aW9uLgor
CSAqLworCXN0cnVjdCBkcm1fY2xpZW50X3Byb3BlcnR5ICpwcm9wZXJ0aWVzOworCisJLyoqCisJ
ICogQG51bV9wcm9wZXJ0aWVzOiBOdW1iZXIgb2YgYXR0YWNoZWQgcHJvcGVydGllcy4KKwkgKi8K
Kwl1bnNpZ25lZCBpbnQgbnVtX3Byb3BlcnRpZXM7CiB9OwogCiBpbnQgZHJtX2NsaWVudF9pbml0
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50LApA
QCAtMTYzLDYgKzE5NCwxMSBAQCB2b2lkIGRybV9jbGllbnRfYnVmZmVyX3Z1bm1hcChzdHJ1Y3Qg
ZHJtX2NsaWVudF9idWZmZXIgKmJ1ZmZlcik7CiBpbnQgZHJtX2NsaWVudF9tb2Rlc2V0X2NyZWF0
ZShzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCk7CiB2b2lkIGRybV9jbGllbnRfbW9kZXNl
dF9mcmVlKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50KTsKIGludCBkcm1fY2xpZW50X21v
ZGVzZXRfcHJvYmUoc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQsIHVuc2lnbmVkIGludCB3
aWR0aCwgdW5zaWduZWQgaW50IGhlaWdodCk7CitpbnQgZHJtX2NsaWVudF9tb2Rlc2V0X3NldChz
dHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvciwKKwkJCSAgIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlLCBzdHJ1Y3QgZHJtX2Zy
YW1lYnVmZmVyICpmYik7CitpbnQgZHJtX2NsaWVudF9tb2Rlc2V0X3NldF9wcm9wZXJ0eShzdHJ1
Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCwgc3RydWN0IGRybV9tb2RlX29iamVjdCAqb2JqLAor
CQkJCSAgICBzdHJ1Y3QgZHJtX3Byb3BlcnR5ICpwcm9wLCB1NjQgdmFsdWUpOworaW50IGRybV9j
bGllbnRfbW9kZXNldF9zZXRfcm90YXRpb24oc3RydWN0IGRybV9jbGllbnRfZGV2ICpjbGllbnQs
IHU2NCB2YWx1ZSk7CiBib29sIGRybV9jbGllbnRfcm90YXRpb24oc3RydWN0IGRybV9tb2RlX3Nl
dCAqbW9kZXNldCwgdW5zaWduZWQgaW50ICpyb3RhdGlvbik7CiBpbnQgZHJtX2NsaWVudF9tb2Rl
c2V0X2NoZWNrKHN0cnVjdCBkcm1fY2xpZW50X2RldiAqY2xpZW50KTsKIGludCBkcm1fY2xpZW50
X21vZGVzZXRfY29tbWl0X2xvY2tlZChzdHJ1Y3QgZHJtX2NsaWVudF9kZXYgKmNsaWVudCk7Ci0t
IAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CmRyaS1kZXZlbCBtYWlsaW5nIGxpc3QKZHJpLWRldmVsQGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2RyaS1kZXZlbAo=
