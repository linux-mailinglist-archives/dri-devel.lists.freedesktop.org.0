Return-Path: <dri-devel-bounces@lists.freedesktop.org>
X-Original-To: lists+dri-devel@lfdr.de
Delivered-To: lists+dri-devel@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8A29CA7578
	for <lists+dri-devel@lfdr.de>; Tue,  3 Sep 2019 22:49:07 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1F27E89A7A;
	Tue,  3 Sep 2019 20:49:03 +0000 (UTC)
X-Original-To: dri-devel@lists.freedesktop.org
Delivered-To: dri-devel@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BC80289C51;
 Tue,  3 Sep 2019 20:49:01 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id A304B30A56B0;
 Tue,  3 Sep 2019 20:49:00 +0000 (UTC)
Received: from malachite.bss.redhat.com (dhcp-10-20-1-34.bss.redhat.com
 [10.20.1.34])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 2436D1001B02;
 Tue,  3 Sep 2019 20:48:57 +0000 (UTC)
From: Lyude Paul <lyude@redhat.com>
To: dri-devel@lists.freedesktop.org, nouveau@lists.freedesktop.org,
 amd-gfx@lists.freedesktop.org
Subject: [PATCH v2 23/27] drm/amdgpu: Iterate through DRM connectors correctly
Date: Tue,  3 Sep 2019 16:46:01 -0400
Message-Id: <20190903204645.25487-24-lyude@redhat.com>
In-Reply-To: <20190903204645.25487-1-lyude@redhat.com>
References: <20190903204645.25487-1-lyude@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
 (mx1.redhat.com [10.5.110.47]); Tue, 03 Sep 2019 20:49:01 +0000 (UTC)
X-BeenThere: dri-devel@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Direct Rendering Infrastructure - Development
 <dri-devel.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/dri-devel>
List-Post: <mailto:dri-devel@lists.freedesktop.org>
List-Help: <mailto:dri-devel-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/dri-devel>,
 <mailto:dri-devel-request@lists.freedesktop.org?subject=subscribe>
Cc: Neil Armstrong <narmstrong@baylibre.com>, David Airlie <airlied@linux.ie>,
 Daniel Vetter <daniel.vetter@ffwll.ch>, Tao Zhou <tao.zhou1@amd.com>,
 Huang Rui <ray.huang@amd.com>, Shirish S <shirish.s@amd.com>,
 Sam Ravnborg <sam@ravnborg.org>,
 Markus Elfring <elfring@users.sourceforge.net>, Yu Zhao <yuzhao@google.com>,
 Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>,
 David Francis <David.Francis@amd.com>, Jani Nikula <jani.nikula@intel.com>,
 Thierry Reding <treding@nvidia.com>, Juston Li <juston.li@intel.com>,
 Leo Li <sunpeng.li@amd.com>, Emily Deng <Emily.Deng@amd.com>,
 Russell King <rmk+kernel@armlinux.org.uk>, Evan Quan <evan.quan@amd.com>,
 Harry Wentland <hwentlan@amd.com>, Felix Kuehling <Felix.Kuehling@amd.com>,
 xinhui pan <xinhui.pan@amd.com>,
 =?UTF-8?q?Michel=20D=C3=A4nzer?= <michel.daenzer@amd.com>,
 linux-kernel@vger.kernel.org, Andrzej Pietrasiewicz <andrzej.p@collabora.com>,
 Alex Deucher <alexander.deucher@amd.com>,
 Colin Ian King <colin.king@canonical.com>,
 Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>, Rex Zhu <Rex.Zhu@amd.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 Hawking Zhang <Hawking.Zhang@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: dri-devel-bounces@lists.freedesktop.org
Sender: "dri-devel" <dri-devel-bounces@lists.freedesktop.org>

Q3VycmVudGx5LCBldmVyeSBzaW5nbGUgcGllY2Ugb2YgY29kZSBpbiBhbWRncHUgdGhhdCBsb29w
cyB0aHJvdWdoCmNvbm5lY3RvcnMgZG9lcyBpdCBpbmNvcnJlY3RseSBhbmQgZG9lc24ndCB1c2Ug
dGhlIHByb3BlciBsaXN0IGl0ZXJhdGlvbgpoZWxwZXJzLCBkcm1fY29ubmVjdG9yX2xpc3RfaXRl
cl9iZWdpbigpIGFuZApkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoKS4gWWVlc2guCgpTbywg
ZG8gdGhhdC4KCkNjOiBKdXN0b24gTGkgPGp1c3Rvbi5saUBpbnRlbC5jb20+CkNjOiBJbXJlIERl
YWsgPGltcmUuZGVha0BpbnRlbC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmph
bGFAbGludXguaW50ZWwuY29tPgpDYzogSGFycnkgV2VudGxhbmQgPGh3ZW50bGFuQGFtZC5jb20+
CkNjOiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwudmV0dGVyQGZmd2xsLmNoPgpTaWduZWQtb2ZmLWJ5
OiBMeXVkZSBQYXVsIDxseXVkZUByZWRoYXQuY29tPgotLS0KIC4uLi9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2Nvbm5lY3RvcnMuYyAgICB8IDEzICsrKysrLQogZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2RldmljZS5jICAgIHwgMjAgKysrKysrKy0tLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2Rpc3BsYXkuYyAgIHwgIDUgKystCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfZW5jb2RlcnMuYyAgfCA0MCArKysrKysrKysrKysrLS0tLS0t
CiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfaXJxLmMgICAgICAgfCAgNSArKy0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2RjZV92MTBfMC5jICAgICAgICB8IDM0ICsrKysr
KysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2RjZV92MTFfMC5jICAgICAg
ICB8IDM0ICsrKysrKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2RjZV92
Nl8wLmMgICAgICAgICB8IDQwICsrKysrKysrKysrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2RjZV92OF8wLmMgICAgICAgICB8IDM0ICsrKysrKysrKysrKy0tLS0KIC4uLi9n
cHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYyB8IDMzICsrKysrKysrLS0t
LS0tLQogLi4uL2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtX2lycS5jIHwgMTAg
KysrKy0KIDExIGZpbGVzIGNoYW5nZWQsIDE5NSBpbnNlcnRpb25zKCspLCA3MyBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfY29ubmVj
dG9ycy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2Nvbm5lY3RvcnMuYwpp
bmRleCBlY2U1NWM4ZmE2NzMuLmJkMzFiYjU5NWMwNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2Nvbm5lY3RvcnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfY29ubmVjdG9ycy5jCkBAIC0xMDIyLDggKzEwMjIsMTIgQEAgYW1k
Z3B1X2Nvbm5lY3Rvcl9kdmlfZGV0ZWN0KHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3Is
IGJvb2wgZm9yY2UpCiAJCQkgKi8KIAkJCWlmIChhbWRncHVfY29ubmVjdG9yLT5zaGFyZWRfZGRj
ICYmIChyZXQgPT0gY29ubmVjdG9yX3N0YXR1c19jb25uZWN0ZWQpKSB7CiAJCQkJc3RydWN0IGRy
bV9jb25uZWN0b3IgKmxpc3RfY29ubmVjdG9yOworCQkJCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xp
c3RfaXRlciBpdGVyOwogCQkJCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICpsaXN0X2FtZGdwdV9j
b25uZWN0b3I7Ci0JCQkJbGlzdF9mb3JfZWFjaF9lbnRyeShsaXN0X2Nvbm5lY3RvciwgJmRldi0+
bW9kZV9jb25maWcuY29ubmVjdG9yX2xpc3QsIGhlYWQpIHsKKworCQkJCWRybV9jb25uZWN0b3Jf
bGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCQkJCWRybV9mb3JfZWFjaF9jb25uZWN0b3Jf
aXRlcihsaXN0X2Nvbm5lY3RvciwKKwkJCQkJCQkgICAgJml0ZXIpIHsKIAkJCQkJaWYgKGNvbm5l
Y3RvciA9PSBsaXN0X2Nvbm5lY3RvcikKIAkJCQkJCWNvbnRpbnVlOwogCQkJCQlsaXN0X2FtZGdw
dV9jb25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVjdG9yKGxpc3RfY29ubmVjdG9yKTsKQEAgLTEw
NDAsNiArMTA0NCw3IEBAIGFtZGdwdV9jb25uZWN0b3JfZHZpX2RldGVjdChzdHJ1Y3QgZHJtX2Nv
bm5lY3RvciAqY29ubmVjdG9yLCBib29sIGZvcmNlKQogCQkJCQkJfQogCQkJCQl9CiAJCQkJfQor
CQkJCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAJCQl9CiAJCX0KIAl9CkBA
IC0xNTAxLDYgKzE1MDYsNyBAQCBhbWRncHVfY29ubmVjdG9yX2FkZChzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gYWRldi0+ZGRldjsKIAlz
dHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xp
c3RfaXRlciBpdGVyOwogCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9y
OwogCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yX2F0b21fZGlnICphbWRncHVfZGlnX2Nvbm5lY3Rv
cjsKIAlzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXI7CkBAIC0xNTE1LDEwICsxNTIxLDEyIEBA
IGFtZGdwdV9jb25uZWN0b3JfYWRkKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCQlyZXR1
cm47CiAKIAkvKiBzZWUgaWYgd2UgYWxyZWFkeSBhZGRlZCBpdCAqLwotCWxpc3RfZm9yX2VhY2hf
ZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkg
eworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9mb3Jf
ZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCWFtZGdwdV9jb25uZWN0
b3IgPSB0b19hbWRncHVfY29ubmVjdG9yKGNvbm5lY3Rvcik7CiAJCWlmIChhbWRncHVfY29ubmVj
dG9yLT5jb25uZWN0b3JfaWQgPT0gY29ubmVjdG9yX2lkKSB7CiAJCQlhbWRncHVfY29ubmVjdG9y
LT5kZXZpY2VzIHw9IHN1cHBvcnRlZF9kZXZpY2U7CisJCQlkcm1fY29ubmVjdG9yX2xpc3RfaXRl
cl9lbmQoJml0ZXIpOwogCQkJcmV0dXJuOwogCQl9CiAJCWlmIChhbWRncHVfY29ubmVjdG9yLT5k
ZGNfYnVzICYmIGkyY19idXMtPnZhbGlkKSB7CkBAIC0xNTMzLDYgKzE1NDEsNyBAQCBhbWRncHVf
Y29ubmVjdG9yX2FkZChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJCX0KIAkJfQogCX0K
Kwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJml0ZXIpOwogCiAJLyogY2hlY2sgaWYgaXQn
cyBhIGRwIGJyaWRnZSAqLwogCWxpc3RfZm9yX2VhY2hfZW50cnkoZW5jb2RlciwgJmRldi0+bW9k
ZV9jb25maWcuZW5jb2Rlcl9saXN0LCBoZWFkKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfZGV2aWNlLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfZGV2aWNlLmMKaW5kZXggMmY4ODQ2OTllYWVmLi5hY2QzOWNlOWIwOGUgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGV2aWNlLmMKQEAgLTMwMDQsNiArMzAw
NCw3IEBAIGludCBhbWRncHVfZGV2aWNlX3N1c3BlbmQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
Ym9vbCBzdXNwZW5kLCBib29sIGZiY29uKQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2Owog
CXN0cnVjdCBkcm1fY3J0YyAqY3J0YzsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9y
OworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCWludCByOwogCiAJaWYg
KGRldiA9PSBOVUxMIHx8IGRldi0+ZGV2X3ByaXZhdGUgPT0gTlVMTCkgewpAQCAtMzAyNiw5ICsz
MDI3LDExIEBAIGludCBhbWRncHVfZGV2aWNlX3N1c3BlbmQoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgYm9vbCBzdXNwZW5kLCBib29sIGZiY29uKQogCWlmICghYW1kZ3B1X2RldmljZV9oYXNfZGNf
c3VwcG9ydChhZGV2KSkgewogCQkvKiB0dXJuIG9mZiBkaXNwbGF5IGh3ICovCiAJCWRybV9tb2Rl
c2V0X2xvY2tfYWxsKGRldik7Ci0JCWxpc3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2
LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgewotCQkJZHJtX2hlbHBlcl9jb25u
ZWN0b3JfZHBtcyhjb25uZWN0b3IsIERSTV9NT0RFX0RQTVNfT0ZGKTsKLQkJfQorCQlkcm1fY29u
bmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwkJZHJtX2Zvcl9lYWNoX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpCisJCQlkcm1faGVscGVyX2Nvbm5lY3Rvcl9kcG1z
KGNvbm5lY3RvciwKKwkJCQkJCSAgRFJNX01PREVfRFBNU19PRkYpOworCQlkcm1fY29ubmVjdG9y
X2xpc3RfaXRlcl9lbmQoJml0ZXIpOwogCQlkcm1fbW9kZXNldF91bmxvY2tfYWxsKGRldik7CiAJ
CQkvKiB1bnBpbiB0aGUgZnJvbnQgYnVmZmVycyBhbmQgY3Vyc29ycyAqLwogCQlsaXN0X2Zvcl9l
YWNoX2VudHJ5KGNydGMsICZkZXYtPm1vZGVfY29uZmlnLmNydGNfbGlzdCwgaGVhZCkgewpAQCAt
MzEwNyw2ICszMTEwLDcgQEAgaW50IGFtZGdwdV9kZXZpY2Vfc3VzcGVuZChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LCBib29sIHN1c3BlbmQsIGJvb2wgZmJjb24pCiBpbnQgYW1kZ3B1X2RldmljZV9y
ZXN1bWUoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgYm9vbCByZXN1bWUsIGJvb2wgZmJjb24pCiB7
CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
cl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRldi0+ZGV2
X3ByaXZhdGU7CiAJc3RydWN0IGRybV9jcnRjICpjcnRjOwogCWludCByID0gMDsKQEAgLTMxNzcs
OSArMzE4MSwxMyBAQCBpbnQgYW1kZ3B1X2RldmljZV9yZXN1bWUoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgYm9vbCByZXN1bWUsIGJvb2wgZmJjb24pCiAKIAkJCS8qIHR1cm4gb24gZGlzcGxheSBo
dyAqLwogCQkJZHJtX21vZGVzZXRfbG9ja19hbGwoZGV2KTsKLQkJCWxpc3RfZm9yX2VhY2hfZW50
cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgewot
CQkJCWRybV9oZWxwZXJfY29ubmVjdG9yX2RwbXMoY29ubmVjdG9yLCBEUk1fTU9ERV9EUE1TX09O
KTsKLQkJCX0KKworCQkJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7
CisJCQlkcm1fZm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikKKwkJCQlk
cm1faGVscGVyX2Nvbm5lY3Rvcl9kcG1zKGNvbm5lY3RvciwKKwkJCQkJCQkgIERSTV9NT0RFX0RQ
TVNfT04pOworCQkJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKKwogCQkJZHJt
X21vZGVzZXRfdW5sb2NrX2FsbChkZXYpOwogCQl9CiAJCWFtZGdwdV9mYmRldl9zZXRfc3VzcGVu
ZChhZGV2LCAwKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGlzcGxheS5j
CmluZGV4IDFkNGFhYTk1ODBmNC4uZDJkZDU5YTk1ZThhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9kaXNwbGF5LmMKQEAgLTM3MCwxMSArMzcwLDEzIEBAIHZvaWQgYW1k
Z3B1X2Rpc3BsYXlfcHJpbnRfZGlzcGxheV9zZXR1cChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQog
CXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yOwogCXN0cnVjdCBkcm1f
ZW5jb2RlciAqZW5jb2RlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVy
OworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCXVpbnQzMl90IGRldmlj
ZXM7CiAJaW50IGkgPSAwOwogCisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAm
aXRlcik7CiAJRFJNX0lORk8oIkFNREdQVSBEaXNwbGF5IENvbm5lY3RvcnNcbiIpOwotCWxpc3Rf
Zm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlz
dCwgaGVhZCkgeworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVy
KSB7CiAJCWFtZGdwdV9jb25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVjdG9yKGNvbm5lY3Rvcik7
CiAJCURSTV9JTkZPKCJDb25uZWN0b3IgJWQ6XG4iLCBpKTsKIAkJRFJNX0lORk8oIiAgJXNcbiIs
IGNvbm5lY3Rvci0+bmFtZSk7CkBAIC00MzgsNiArNDQwLDcgQEAgdm9pZCBhbWRncHVfZGlzcGxh
eV9wcmludF9kaXNwbGF5X3NldHVwKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCX0KIAkJaSsr
OwogCX0KKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJml0ZXIpOwogfQogCiAvKioKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9lbmNvZGVycy5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2VuY29kZXJzLmMKaW5kZXggNTcxYTZk
ZmI0NzNlLi42MWZjZjI0N2E2MzggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9lbmNvZGVycy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV9lbmNvZGVycy5jCkBAIC0zNywxMiArMzcsMTQgQEAgYW1kZ3B1X2xpbmtfZW5jb2Rlcl9j
b25uZWN0b3Ioc3RydWN0IGRybV9kZXZpY2UgKmRldikKIHsKIAlzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1k
Z3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvcjsKIAlzdHJ1Y3QgZHJtX2VuY29kZXIgKmVu
Y29kZXI7CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyICphbWRncHVfZW5jb2RlcjsKIAorCWRybV9j
b25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOwogCS8qIHdhbGsgdGhlIGxpc3Qg
YW5kIGxpbmsgZW5jb2RlcnMgdG8gY29ubmVjdG9ycyAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnko
Y29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRy
bV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCWFtZGdwdV9j
b25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVjdG9yKGNvbm5lY3Rvcik7CiAJCWxpc3RfZm9yX2Vh
Y2hfZW50cnkoZW5jb2RlciwgJmRldi0+bW9kZV9jb25maWcuZW5jb2Rlcl9saXN0LCBoZWFkKSB7
CiAJCQlhbWRncHVfZW5jb2RlciA9IHRvX2FtZGdwdV9lbmNvZGVyKGVuY29kZXIpOwpAQCAtNTUs
NiArNTcsNyBAQCBhbWRncHVfbGlua19lbmNvZGVyX2Nvbm5lY3RvcihzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2KQogCQkJfQogCQl9CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRl
cik7CiB9CiAKIHZvaWQgYW1kZ3B1X2VuY29kZXJfc2V0X2FjdGl2ZV9kZXZpY2Uoc3RydWN0IGRy
bV9lbmNvZGVyICplbmNvZGVyKQpAQCAtNjIsOCArNjUsMTAgQEAgdm9pZCBhbWRncHVfZW5jb2Rl
cl9zZXRfYWN0aXZlX2RldmljZShzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiAJc3RydWN0
IGRybV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRldjsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIg
KmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7CiAJc3RydWN0IGRy
bV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIg
aXRlcjsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZp
Zy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2lu
KGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZp
dGVyKSB7CiAJCWlmIChjb25uZWN0b3ItPmVuY29kZXIgPT0gZW5jb2RlcikgewogCQkJc3RydWN0
IGFtZGdwdV9jb25uZWN0b3IgKmFtZGdwdV9jb25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVjdG9y
KGNvbm5lY3Rvcik7CiAJCQlhbWRncHVfZW5jb2Rlci0+YWN0aXZlX2RldmljZSA9IGFtZGdwdV9l
bmNvZGVyLT5kZXZpY2VzICYgYW1kZ3B1X2Nvbm5lY3Rvci0+ZGV2aWNlczsKQEAgLTcyLDYgKzc3
LDcgQEAgdm9pZCBhbWRncHVfZW5jb2Rlcl9zZXRfYWN0aXZlX2RldmljZShzdHJ1Y3QgZHJtX2Vu
Y29kZXIgKmVuY29kZXIpCiAJCQkJICBhbWRncHVfY29ubmVjdG9yLT5kZXZpY2VzLCBlbmNvZGVy
LT5lbmNvZGVyX3R5cGUpOwogCQl9CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgm
aXRlcik7CiB9CiAKIHN0cnVjdCBkcm1fY29ubmVjdG9yICoKQEAgLTc5LDE1ICs4NSwyMCBAQCBh
bWRncHVfZ2V0X2Nvbm5lY3Rvcl9mb3JfZW5jb2RlcihzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29k
ZXIpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRldjsKIAlzdHJ1Y3Qg
YW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rl
cik7Ci0Jc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5l
Y3RvciAqY29ubmVjdG9yLCAqZm91bmQgPSBOVUxMOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xp
c3RfaXRlciBpdGVyOwogCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9y
OwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25uZWN0b3IsICZkZXYtPm1vZGVfY29uZmlnLmNv
bm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2
LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIp
IHsKIAkJYW1kZ3B1X2Nvbm5lY3RvciA9IHRvX2FtZGdwdV9jb25uZWN0b3IoY29ubmVjdG9yKTsK
LQkJaWYgKGFtZGdwdV9lbmNvZGVyLT5hY3RpdmVfZGV2aWNlICYgYW1kZ3B1X2Nvbm5lY3Rvci0+
ZGV2aWNlcykKLQkJCXJldHVybiBjb25uZWN0b3I7CisJCWlmIChhbWRncHVfZW5jb2Rlci0+YWN0
aXZlX2RldmljZSAmIGFtZGdwdV9jb25uZWN0b3ItPmRldmljZXMpIHsKKwkJCWZvdW5kID0gY29u
bmVjdG9yOworCQkJYnJlYWs7CisJCX0KIAl9Ci0JcmV0dXJuIE5VTEw7CisJZHJtX2Nvbm5lY3Rv
cl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKKwlyZXR1cm4gZm91bmQ7CiB9CiAKIHN0cnVjdCBkcm1f
Y29ubmVjdG9yICoKQEAgLTk1LDE1ICsxMDYsMjAgQEAgYW1kZ3B1X2dldF9jb25uZWN0b3JfZm9y
X2VuY29kZXJfaW5pdChzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRy
bV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRldjsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFt
ZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7Ci0Jc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLCAq
Zm91bmQgPSBOVUxMOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCXN0
cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yOwogCi0JbGlzdF9mb3JfZWFj
aF9lbnRyeShjb25uZWN0b3IsICZkZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFk
KSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zv
cl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJYW1kZ3B1X2Nvbm5l
Y3RvciA9IHRvX2FtZGdwdV9jb25uZWN0b3IoY29ubmVjdG9yKTsKLQkJaWYgKGFtZGdwdV9lbmNv
ZGVyLT5kZXZpY2VzICYgYW1kZ3B1X2Nvbm5lY3Rvci0+ZGV2aWNlcykKLQkJCXJldHVybiBjb25u
ZWN0b3I7CisJCWlmIChhbWRncHVfZW5jb2Rlci0+ZGV2aWNlcyAmIGFtZGdwdV9jb25uZWN0b3It
PmRldmljZXMpIHsKKwkJCWZvdW5kID0gY29ubmVjdG9yOworCQkJYnJlYWs7CisJCX0KIAl9Ci0J
cmV0dXJuIE5VTEw7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKKwlyZXR1
cm4gZm91bmQ7CiB9CiAKIHN0cnVjdCBkcm1fZW5jb2RlciAqYW1kZ3B1X2dldF9leHRlcm5hbF9l
bmNvZGVyKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlcikKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9pcnEuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9pcnEuYwppbmRleCAyYTNmNWVjMjk4ZGIuLjk3N2UxMjEyMDRlNiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2lycS5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9pcnEuYwpAQCAtODcsMTAgKzg3LDEzIEBAIHN0
YXRpYyB2b2lkIGFtZGdwdV9ob3RwbHVnX3dvcmtfZnVuYyhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndv
cmspCiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGFkZXYtPmRkZXY7CiAJc3RydWN0IGRybV9t
b2RlX2NvbmZpZyAqbW9kZV9jb25maWcgPSAmZGV2LT5tb2RlX2NvbmZpZzsKIAlzdHJ1Y3QgZHJt
X2Nvbm5lY3RvciAqY29ubmVjdG9yOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBp
dGVyOwogCiAJbXV0ZXhfbG9jaygmbW9kZV9jb25maWctPm11dGV4KTsKLQlsaXN0X2Zvcl9lYWNo
X2VudHJ5KGNvbm5lY3RvciwgJm1vZGVfY29uZmlnLT5jb25uZWN0b3JfbGlzdCwgaGVhZCkKKwlk
cm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwlkcm1fZm9yX2VhY2hf
Y29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikKIAkJYW1kZ3B1X2Nvbm5lY3Rvcl9ob3Rw
bHVnKGNvbm5lY3Rvcik7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAlt
dXRleF91bmxvY2soJm1vZGVfY29uZmlnLT5tdXRleCk7CiAJLyogSnVzdCBmaXJlIG9mZiBhIHVl
dmVudCBhbmQgbGV0IHVzZXJzcGFjZSB0ZWxsIHVzIHdoYXQgdG8gZG8gKi8KIAlkcm1faGVscGVy
X2hwZF9pcnFfZXZlbnQoZGV2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2RjZV92MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZGNlX3YxMF8wLmMK
aW5kZXggNjQ1NTUwZTdjYWY1Li5iZTgyODcxYWMzYmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2RjZV92MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2RjZV92MTBfMC5jCkBAIC0zMzAsOSArMzMwLDExIEBAIHN0YXRpYyB2b2lkIGRjZV92MTBf
MF9ocGRfaW5pdChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIHsKIAlzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2ID0gYWRldi0+ZGRldjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9y
OworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCXUzMiB0bXA7CiAKLQls
aXN0X2Zvcl9lYWNoX2VudHJ5KGNvbm5lY3RvciwgJmRldi0+bW9kZV9jb25maWcuY29ubmVjdG9y
X2xpc3QsIGhlYWQpIHsKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVy
KTsKKwlkcm1fZm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikgewogCQlz
dHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IHRvX2FtZGdwdV9jb25u
ZWN0b3IoY29ubmVjdG9yKTsKIAogCQlpZiAoYW1kZ3B1X2Nvbm5lY3Rvci0+aHBkLmhwZCA+PSBh
ZGV2LT5tb2RlX2luZm8ubnVtX2hwZCkKQEAgLTM2OCw2ICszNzAsNyBAQCBzdGF0aWMgdm9pZCBk
Y2VfdjEwXzBfaHBkX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCWFtZGdwdV9p
cnFfZ2V0KGFkZXYsICZhZGV2LT5ocGRfaXJxLAogCQkJICAgICAgIGFtZGdwdV9jb25uZWN0b3It
PmhwZC5ocGQpOwogCX0KKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJml0ZXIpOwogfQog
CiAvKioKQEAgLTM4Miw5ICszODUsMTEgQEAgc3RhdGljIHZvaWQgZGNlX3YxMF8wX2hwZF9maW5p
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYg
PSBhZGV2LT5kZGV2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0
IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJdTMyIHRtcDsKIAotCWxpc3RfZm9yX2Vh
Y2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVh
ZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9m
b3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCXN0cnVjdCBhbWRn
cHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25u
ZWN0b3IpOwogCiAJCWlmIChhbWRncHVfY29ubmVjdG9yLT5ocGQuaHBkID49IGFkZXYtPm1vZGVf
aW5mby5udW1faHBkKQpAQCAtMzk3LDYgKzQwMiw3IEBAIHN0YXRpYyB2b2lkIGRjZV92MTBfMF9o
cGRfZmluaShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAkJYW1kZ3B1X2lycV9wdXQoYWRl
diwgJmFkZXYtPmhwZF9pcnEsCiAJCQkgICAgICAgYW1kZ3B1X2Nvbm5lY3Rvci0+aHBkLmhwZCk7
CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiB9CiAKIHN0YXRpYyB1
MzIgZGNlX3YxMF8wX2hwZF9nZXRfZ3Bpb19yZWcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CkBAIC0xMjE5LDEwICsxMjI1LDEyIEBAIHN0YXRpYyB2b2lkIGRjZV92MTBfMF9hZm10X2F1ZGlv
X3NlbGVjdF9waW4oc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKQogc3RhdGljIHZvaWQgZGNl
X3YxMF8wX2F1ZGlvX3dyaXRlX2xhdGVuY3lfZmllbGRzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5j
b2RlciwKIAkJCQkJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlKQogewotCXN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rlci0+ZGV2LT5kZXZfcHJpdmF0ZTsKKwlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+ZGV2OworCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9l
bmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7CiAJc3RydWN0IGFtZGdwdV9lbmNv
ZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVfZW5jb2Rlci0+ZW5jX3ByaXY7CiAJc3RydWN0IGRy
bV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIg
aXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7
CiAJdTMyIHRtcDsKIAlpbnQgaW50ZXJsYWNlID0gMDsKQEAgLTEyMzAsMTIgKzEyMzgsMTQgQEAg
c3RhdGljIHZvaWQgZGNlX3YxMF8wX2F1ZGlvX3dyaXRlX2xhdGVuY3lfZmllbGRzKHN0cnVjdCBk
cm1fZW5jb2RlciAqZW5jb2RlciwKIAlpZiAoIWRpZyB8fCAhZGlnLT5hZm10IHx8ICFkaWctPmFm
bXQtPnBpbikKIAkJcmV0dXJuOwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25uZWN0b3IsICZl
bmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYgKGNvbm5lY3Rvci0+ZW5jb2RlciA9
PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihj
b25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJf
ZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3RvcikgewogCQlEUk1fRVJST1IoIkNv
dWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7CkBAIC0xMjYxLDEwICsxMjcxLDEy
IEBAIHN0YXRpYyB2b2lkIGRjZV92MTBfMF9hdWRpb193cml0ZV9sYXRlbmN5X2ZpZWxkcyhzdHJ1
Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIsCiAKIHN0YXRpYyB2b2lkIGRjZV92MTBfMF9hdWRpb193
cml0ZV9zcGVha2VyX2FsbG9jYXRpb24oc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKQogewot
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rlci0+ZGV2LT5kZXZfcHJpdmF0ZTsK
KwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+ZGV2OworCXN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIg
KmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7CiAJc3RydWN0IGFt
ZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVfZW5jb2Rlci0+ZW5jX3ByaXY7CiAJ
c3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9s
aXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3Rv
ciA9IE5VTEw7CiAJdTMyIHRtcDsKIAl1OCAqc2FkYiA9IE5VTEw7CkBAIC0xMjczLDEyICsxMjg1
LDE0IEBAIHN0YXRpYyB2b2lkIGRjZV92MTBfMF9hdWRpb193cml0ZV9zcGVha2VyX2FsbG9jYXRp
b24oc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyCiAJaWYgKCFkaWcgfHwgIWRpZy0+YWZtdCB8
fCAhZGlnLT5hZm10LT5waW4pCiAJCXJldHVybjsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29u
bmVjdG9yLCAmZW5jb2Rlci0+ZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkg
eworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9mb3Jf
ZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCWlmIChjb25uZWN0b3It
PmVuY29kZXIgPT0gZW5jb2RlcikgewogCQkJYW1kZ3B1X2Nvbm5lY3RvciA9IHRvX2FtZGdwdV9j
b25uZWN0b3IoY29ubmVjdG9yKTsKIAkJCWJyZWFrOwogCQl9CiAJfQorCWRybV9jb25uZWN0b3Jf
bGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKIAlpZiAoIWFtZGdwdV9jb25uZWN0b3IpIHsKIAkJRFJN
X0VSUk9SKCJDb3VsZG4ndCBmaW5kIGVuY29kZXIncyBjb25uZWN0b3JcbiIpOwpAQCAtMTMxMywx
MCArMTMyNywxMiBAQCBzdGF0aWMgdm9pZCBkY2VfdjEwXzBfYXVkaW9fd3JpdGVfc3BlYWtlcl9h
bGxvY2F0aW9uKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlcgogCiBzdGF0aWMgdm9pZCBkY2Vf
djEwXzBfYXVkaW9fd3JpdGVfc2FkX3JlZ3Moc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKQog
ewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rlci0+ZGV2LT5kZXZfcHJpdmF0
ZTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+ZGV2OworCXN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29k
ZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7CiAJc3RydWN0
IGFtZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVfZW5jb2Rlci0+ZW5jX3ByaXY7
CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
cl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5l
Y3RvciA9IE5VTEw7CiAJc3RydWN0IGNlYV9zYWQgKnNhZHM7CiAJaW50IGksIHNhZF9jb3VudDsK
QEAgLTEzMzksMTIgKzEzNTUsMTQgQEAgc3RhdGljIHZvaWQgZGNlX3YxMF8wX2F1ZGlvX3dyaXRl
X3NhZF9yZWdzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlcikKIAlpZiAoIWRpZyB8fCAhZGln
LT5hZm10IHx8ICFkaWctPmFmbXQtPnBpbikKIAkJcmV0dXJuOwogCi0JbGlzdF9mb3JfZWFjaF9l
bnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0
LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJ
ZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYgKGNv
bm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0gdG9f
YW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3Rvcikg
ewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kY2VfdjExXzAuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2RjZV92MTFfMC5jCmluZGV4IGQ5ZjQ3MDYzMmIyYy4uYmRl
NDg3NzVjZjFiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kY2VfdjEx
XzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kY2VfdjExXzAuYwpAQCAtMzQ4
LDkgKzM0OCwxMSBAQCBzdGF0aWMgdm9pZCBkY2VfdjExXzBfaHBkX2luaXQoc3RydWN0IGFtZGdw
dV9kZXZpY2UgKmFkZXYpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGFkZXYtPmRkZXY7
CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
cl9saXN0X2l0ZXIgaXRlcjsKIAl1MzIgdG1wOwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25u
ZWN0b3IsICZkZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJc3RydWN0IGFtZGdwdV9jb25uZWN0b3Ig
KmFtZGdwdV9jb25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVjdG9yKGNvbm5lY3Rvcik7CiAKIAkJ
aWYgKGFtZGdwdV9jb25uZWN0b3ItPmhwZC5ocGQgPj0gYWRldi0+bW9kZV9pbmZvLm51bV9ocGQp
CkBAIC0zODUsNiArMzg3LDcgQEAgc3RhdGljIHZvaWQgZGNlX3YxMV8wX2hwZF9pbml0KHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQogCQlkY2VfdjExXzBfaHBkX3NldF9wb2xhcml0eShhZGV2
LCBhbWRncHVfY29ubmVjdG9yLT5ocGQuaHBkKTsKIAkJYW1kZ3B1X2lycV9nZXQoYWRldiwgJmFk
ZXYtPmhwZF9pcnEsIGFtZGdwdV9jb25uZWN0b3ItPmhwZC5ocGQpOwogCX0KKwlkcm1fY29ubmVj
dG9yX2xpc3RfaXRlcl9lbmQoJml0ZXIpOwogfQogCiAvKioKQEAgLTM5OSw5ICs0MDIsMTEgQEAg
c3RhdGljIHZvaWQgZGNlX3YxMV8wX2hwZF9maW5pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBhZGV2LT5kZGV2OwogCXN0cnVjdCBkcm1f
Y29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0
ZXI7CiAJdTMyIHRtcDsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5t
b2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9p
dGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25u
ZWN0b3IsICZpdGVyKSB7CiAJCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVj
dG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCiAJCWlmIChhbWRncHVfY29u
bmVjdG9yLT5ocGQuaHBkID49IGFkZXYtPm1vZGVfaW5mby5udW1faHBkKQpAQCAtNDEzLDYgKzQx
OCw3IEBAIHN0YXRpYyB2b2lkIGRjZV92MTFfMF9ocGRfZmluaShzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldikKIAogCQlhbWRncHVfaXJxX3B1dChhZGV2LCAmYWRldi0+aHBkX2lycSwgYW1kZ3B1
X2Nvbm5lY3Rvci0+aHBkLmhwZCk7CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgm
aXRlcik7CiB9CiAKIHN0YXRpYyB1MzIgZGNlX3YxMV8wX2hwZF9nZXRfZ3Bpb19yZWcoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYpCkBAIC0xMjQ1LDEwICsxMjUxLDEyIEBAIHN0YXRpYyB2b2lk
IGRjZV92MTFfMF9hZm10X2F1ZGlvX3NlbGVjdF9waW4oc3RydWN0IGRybV9lbmNvZGVyICplbmNv
ZGVyKQogc3RhdGljIHZvaWQgZGNlX3YxMV8wX2F1ZGlvX3dyaXRlX2xhdGVuY3lfZmllbGRzKHN0
cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlciwKIAkJCQkJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2Rl
ICptb2RlKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rlci0+ZGV2LT5k
ZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+ZGV2OworCXN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgYW1k
Z3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7
CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVfZW5jb2Rlci0+
ZW5jX3ByaXY7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJt
X2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1k
Z3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJdTMyIHRtcDsKIAlpbnQgaW50ZXJsYWNlID0gMDsKQEAg
LTEyNTYsMTIgKzEyNjQsMTQgQEAgc3RhdGljIHZvaWQgZGNlX3YxMV8wX2F1ZGlvX3dyaXRlX2xh
dGVuY3lfZmllbGRzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlciwKIAlpZiAoIWRpZyB8fCAh
ZGlnLT5hZm10IHx8ICFkaWctPmFmbXQtPnBpbikKIAkJcmV0dXJuOwogCi0JbGlzdF9mb3JfZWFj
aF9lbnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9s
aXN0LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7
CisJZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYg
KGNvbm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0g
dG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJt
X2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3Rv
cikgewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7
CkBAIC0xMjg3LDEwICsxMjk3LDEyIEBAIHN0YXRpYyB2b2lkIGRjZV92MTFfMF9hdWRpb193cml0
ZV9sYXRlbmN5X2ZpZWxkcyhzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIsCiAKIHN0YXRpYyB2
b2lkIGRjZV92MTFfMF9hdWRpb193cml0ZV9zcGVha2VyX2FsbG9jYXRpb24oc3RydWN0IGRybV9l
bmNvZGVyICplbmNvZGVyKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rl
ci0+ZGV2LT5kZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+
ZGV2OworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlz
dHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIo
ZW5jb2Rlcik7CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVf
ZW5jb2Rlci0+ZW5jX3ByaXY7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlz
dHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5l
Y3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJdTMyIHRtcDsKIAl1OCAqc2FkYiA9IE5V
TEw7CkBAIC0xMjk5LDEyICsxMzExLDE0IEBAIHN0YXRpYyB2b2lkIGRjZV92MTFfMF9hdWRpb193
cml0ZV9zcGVha2VyX2FsbG9jYXRpb24oc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyCiAJaWYg
KCFkaWcgfHwgIWRpZy0+YWZtdCB8fCAhZGlnLT5hZm10LT5waW4pCiAJCXJldHVybjsKIAotCWxp
c3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZW5jb2Rlci0+ZGV2LT5tb2RlX2NvbmZpZy5j
b25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRl
diwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVy
KSB7CiAJCWlmIChjb25uZWN0b3ItPmVuY29kZXIgPT0gZW5jb2RlcikgewogCQkJYW1kZ3B1X2Nv
bm5lY3RvciA9IHRvX2FtZGdwdV9jb25uZWN0b3IoY29ubmVjdG9yKTsKIAkJCWJyZWFrOwogCQl9
CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKIAlpZiAoIWFtZGdw
dV9jb25uZWN0b3IpIHsKIAkJRFJNX0VSUk9SKCJDb3VsZG4ndCBmaW5kIGVuY29kZXIncyBjb25u
ZWN0b3JcbiIpOwpAQCAtMTMzOSwxMCArMTM1MywxMiBAQCBzdGF0aWMgdm9pZCBkY2VfdjExXzBf
YXVkaW9fd3JpdGVfc3BlYWtlcl9hbGxvY2F0aW9uKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2Rl
cgogCiBzdGF0aWMgdm9pZCBkY2VfdjExXzBfYXVkaW9fd3JpdGVfc2FkX3JlZ3Moc3RydWN0IGRy
bV9lbmNvZGVyICplbmNvZGVyKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5j
b2Rlci0+ZGV2LT5kZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rl
ci0+ZGV2OworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsK
IAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29k
ZXIoZW5jb2Rlcik7CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRn
cHVfZW5jb2Rlci0+ZW5jX3ByaXY7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsK
KwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nv
bm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJc3RydWN0IGNlYV9zYWQgKnNhZHM7
CiAJaW50IGksIHNhZF9jb3VudDsKQEAgLTEzNjUsMTIgKzEzODEsMTQgQEAgc3RhdGljIHZvaWQg
ZGNlX3YxMV8wX2F1ZGlvX3dyaXRlX3NhZF9yZWdzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2Rl
cikKIAlpZiAoIWRpZyB8fCAhZGlnLT5hZm10IHx8ICFkaWctPmFmbXQtPnBpbikKIAkJcmV0dXJu
OwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVf
Y29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJf
YmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3Rv
ciwgJml0ZXIpIHsKIAkJaWYgKGNvbm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlh
bWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJl
YWs7CiAJCX0KIAl9CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlm
ICghYW1kZ3B1X2Nvbm5lY3RvcikgewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2Rl
cidzIGNvbm5lY3RvclxuIik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9kY2VfdjZfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZGNlX3Y2XzAuYwppbmRl
eCAzZWIyZTc0MjkyNjkuLjY1ZjYxZGU5MzFkNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvZGNlX3Y2XzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9k
Y2VfdjZfMC5jCkBAIC0yODEsOSArMjgxLDExIEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2hwZF9p
bml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYgPSBhZGV2LT5kZGV2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3Ry
dWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJdTMyIHRtcDsKIAotCWxpc3RfZm9y
X2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwg
aGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRy
bV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCXN0cnVjdCBh
bWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihj
b25uZWN0b3IpOwogCiAJCWlmIChhbWRncHVfY29ubmVjdG9yLT5ocGQuaHBkID49IGFkZXYtPm1v
ZGVfaW5mby5udW1faHBkKQpAQCAtMzA5LDcgKzMxMSw3IEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8w
X2hwZF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCQlkY2VfdjZfMF9ocGRfc2V0
X3BvbGFyaXR5KGFkZXYsIGFtZGdwdV9jb25uZWN0b3ItPmhwZC5ocGQpOwogCQlhbWRncHVfaXJx
X2dldChhZGV2LCAmYWRldi0+aHBkX2lycSwgYW1kZ3B1X2Nvbm5lY3Rvci0+aHBkLmhwZCk7CiAJ
fQotCisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIH0KIAogLyoqCkBAIC0z
MjQsOSArMzI2LDExIEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2hwZF9maW5pKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2KQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBhZGV2LT5kZGV2
OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25uZWN0
b3JfbGlzdF9pdGVyIGl0ZXI7CiAJdTMyIHRtcDsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29u
bmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9j
b25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25u
ZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCXN0cnVjdCBhbWRncHVfY29ubmVjdG9y
ICphbWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCiAJ
CWlmIChhbWRncHVfY29ubmVjdG9yLT5ocGQuaHBkID49IGFkZXYtPm1vZGVfaW5mby5udW1faHBk
KQpAQCAtMzM4LDYgKzM0Miw3IEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2hwZF9maW5pKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQogCiAJCWFtZGdwdV9pcnFfcHV0KGFkZXYsICZhZGV2LT5o
cGRfaXJxLCBhbWRncHVfY29ubmVjdG9yLT5ocGQuaHBkKTsKIAl9CisJZHJtX2Nvbm5lY3Rvcl9s
aXN0X2l0ZXJfZW5kKCZpdGVyKTsKIH0KIAogc3RhdGljIHUzMiBkY2VfdjZfMF9ocGRfZ2V0X2dw
aW9fcmVnKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQpAQCAtMTEyNCwyMCArMTEyOSwyNCBA
QCBzdGF0aWMgdm9pZCBkY2VfdjZfMF9hdWRpb19zZWxlY3RfcGluKHN0cnVjdCBkcm1fZW5jb2Rl
ciAqZW5jb2RlcikKIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2F1ZGlvX3dyaXRlX2xhdGVuY3lfZmll
bGRzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlciwKIAkJCQkJCXN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICptb2RlKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZW5jb2Rlci0+
ZGV2LT5kZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gZW5jb2Rlci0+ZGV2
OworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1
Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0gdG9fYW1kZ3B1X2VuY29kZXIoZW5j
b2Rlcik7CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyX2F0b21fZGlnICpkaWcgPSBhbWRncHVfZW5j
b2Rlci0+ZW5jX3ByaXY7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1
Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nvbm5lY3Rv
ciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJaW50IGludGVybGFjZSA9IDA7CiAJdTMyIHRt
cDsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZW5jb2Rlci0+ZGV2LT5tb2Rl
X2NvbmZpZy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVy
X2JlZ2luKGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0
b3IsICZpdGVyKSB7CiAJCWlmIChjb25uZWN0b3ItPmVuY29kZXIgPT0gZW5jb2RlcikgewogCQkJ
YW1kZ3B1X2Nvbm5lY3RvciA9IHRvX2FtZGdwdV9jb25uZWN0b3IoY29ubmVjdG9yKTsKIAkJCWJy
ZWFrOwogCQl9CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKIAlp
ZiAoIWFtZGdwdV9jb25uZWN0b3IpIHsKIAkJRFJNX0VSUk9SKCJDb3VsZG4ndCBmaW5kIGVuY29k
ZXIncyBjb25uZWN0b3JcbiIpOwpAQCAtMTE2NCwyMSArMTE3MywyNSBAQCBzdGF0aWMgdm9pZCBk
Y2VfdjZfMF9hdWRpb193cml0ZV9sYXRlbmN5X2ZpZWxkcyhzdHJ1Y3QgZHJtX2VuY29kZXIgKmVu
Y29kZXIsCiAKIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2F1ZGlvX3dyaXRlX3NwZWFrZXJfYWxsb2Nh
dGlvbihzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiB7Ci0Jc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYgPSBlbmNvZGVyLT5kZXYtPmRldl9wcml2YXRlOworCXN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYgPSBlbmNvZGVyLT5kZXY7CisJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZXYt
PmRldl9wcml2YXRlOwogCXN0cnVjdCBhbWRncHVfZW5jb2RlciAqYW1kZ3B1X2VuY29kZXIgPSB0
b19hbWRncHVfZW5jb2RlcihlbmNvZGVyKTsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXJfYXRvbV9k
aWcgKmRpZyA9IGFtZGdwdV9lbmNvZGVyLT5lbmNfcHJpdjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
ciAqY29ubmVjdG9yOworCXN0cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCXN0
cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yID0gTlVMTDsKIAl1OCAqc2Fk
YiA9IE5VTEw7CiAJaW50IHNhZF9jb3VudDsKIAl1MzIgdG1wOwogCi0JbGlzdF9mb3JfZWFjaF9l
bnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0
LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJ
ZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYgKGNv
bm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0gdG9f
YW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3Rvcikg
ewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7CkBA
IC0xMjIxLDEwICsxMjM0LDEyIEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2F1ZGlvX3dyaXRlX3Nw
ZWFrZXJfYWxsb2NhdGlvbihzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiAKIHN0YXRpYyB2
b2lkIGRjZV92Nl8wX2F1ZGlvX3dyaXRlX3NhZF9yZWdzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5j
b2RlcikKIHsKLQlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGVuY29kZXItPmRldi0+ZGV2
X3ByaXZhdGU7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRldjsKKwlzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3RydWN0IGFtZGdw
dV9lbmNvZGVyICphbWRncHVfZW5jb2RlciA9IHRvX2FtZGdwdV9lbmNvZGVyKGVuY29kZXIpOwog
CXN0cnVjdCBhbWRncHVfZW5jb2Rlcl9hdG9tX2RpZyAqZGlnID0gYW1kZ3B1X2VuY29kZXItPmVu
Y19wcml2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9j
b25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJc3RydWN0IGFtZGdwdV9jb25uZWN0b3IgKmFtZGdw
dV9jb25uZWN0b3IgPSBOVUxMOwogCXN0cnVjdCBjZWFfc2FkICpzYWRzOwogCWludCBpLCBzYWRf
Y291bnQ7CkBAIC0xMjQ0LDEyICsxMjU5LDE0IEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2F1ZGlv
X3dyaXRlX3NhZF9yZWdzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlcikKIAkJeyBpeEFaQUxJ
QV9GMF9DT0RFQ19QSU5fQ09OVFJPTF9BVURJT19ERVNDUklQVE9SMTMsIEhETUlfQVVESU9fQ09E
SU5HX1RZUEVfV01BX1BSTyB9LAogCX07CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KGNvbm5lY3Rv
ciwgJmVuY29kZXItPmRldi0+bW9kZV9jb25maWcuY29ubmVjdG9yX2xpc3QsIGhlYWQpIHsKKwlk
cm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwlkcm1fZm9yX2VhY2hf
Y29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikgewogCQlpZiAoY29ubmVjdG9yLT5lbmNv
ZGVyID09IGVuY29kZXIpIHsKIAkJCWFtZGdwdV9jb25uZWN0b3IgPSB0b19hbWRncHVfY29ubmVj
dG9yKGNvbm5lY3Rvcik7CiAJCQlicmVhazsKIAkJfQogCX0KKwlkcm1fY29ubmVjdG9yX2xpc3Rf
aXRlcl9lbmQoJml0ZXIpOwogCiAJaWYgKCFhbWRncHVfY29ubmVjdG9yKSB7CiAJCURSTV9FUlJP
UigiQ291bGRuJ3QgZmluZCBlbmNvZGVyJ3MgY29ubmVjdG9yXG4iKTsKQEAgLTE2MzIsNiArMTY0
OSw3IEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2FmbXRfc2V0bW9kZShzdHJ1Y3QgZHJtX2VuY29k
ZXIgKmVuY29kZXIsCiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyICphbWRncHVfZW5jb2RlciA9IHRv
X2FtZGdwdV9lbmNvZGVyKGVuY29kZXIpOwogCXN0cnVjdCBhbWRncHVfZW5jb2Rlcl9hdG9tX2Rp
ZyAqZGlnID0gYW1kZ3B1X2VuY29kZXItPmVuY19wcml2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJc3Ry
dWN0IGFtZGdwdV9jb25uZWN0b3IgKmFtZGdwdV9jb25uZWN0b3IgPSBOVUxMOwogCWludCBlbSA9
IGFtZGdwdV9hdG9tYmlvc19lbmNvZGVyX2dldF9lbmNvZGVyX21vZGUoZW5jb2Rlcik7CiAJaW50
IGJwYyA9IDg7CkBAIC0xNjM5LDEyICsxNjU3LDE0IEBAIHN0YXRpYyB2b2lkIGRjZV92Nl8wX2Fm
bXRfc2V0bW9kZShzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIsCiAJaWYgKCFkaWcgfHwgIWRp
Zy0+YWZtdCkKIAkJcmV0dXJuOwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25uZWN0b3IsICZl
bmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYgKGNvbm5lY3Rvci0+ZW5jb2RlciA9
PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0gdG9fYW1kZ3B1X2Nvbm5lY3Rvcihj
b25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJf
ZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3RvcikgewogCQlEUk1fRVJST1IoIkNv
dWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9kY2VfdjhfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvZGNlX3Y4XzAuYwppbmRleCBhMTZjNWU5ZTYxMGUuLmU1ZjUwODgyYTUxZCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZGNlX3Y4XzAuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9kY2VfdjhfMC5jCkBAIC0yNzUsOSArMjc1LDExIEBAIHN0YXRpYyB2
b2lkIGRjZV92OF8wX2hwZF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogewogCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBhZGV2LT5kZGV2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJdTMy
IHRtcDsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnkoY29ubmVjdG9yLCAmZGV2LT5tb2RlX2NvbmZp
Zy5jb25uZWN0b3JfbGlzdCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2lu
KGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZp
dGVyKSB7CiAJCXN0cnVjdCBhbWRncHVfY29ubmVjdG9yICphbWRncHVfY29ubmVjdG9yID0gdG9f
YW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCiAJCWlmIChhbWRncHVfY29ubmVjdG9yLT5o
cGQuaHBkID49IGFkZXYtPm1vZGVfaW5mby5udW1faHBkKQpAQCAtMzAzLDYgKzMwNSw3IEBAIHN0
YXRpYyB2b2lkIGRjZV92OF8wX2hwZF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQog
CQlkY2VfdjhfMF9ocGRfc2V0X3BvbGFyaXR5KGFkZXYsIGFtZGdwdV9jb25uZWN0b3ItPmhwZC5o
cGQpOwogCQlhbWRncHVfaXJxX2dldChhZGV2LCAmYWRldi0+aHBkX2lycSwgYW1kZ3B1X2Nvbm5l
Y3Rvci0+aHBkLmhwZCk7CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7
CiB9CiAKIC8qKgpAQCAtMzE3LDkgKzMyMCwxMSBAQCBzdGF0aWMgdm9pZCBkY2VfdjhfMF9ocGRf
ZmluaShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2ID0gYWRldi0+ZGRldjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOworCXN0
cnVjdCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCXUzMiB0bXA7CiAKLQlsaXN0X2Zv
cl9lYWNoX2VudHJ5KGNvbm5lY3RvciwgJmRldi0+bW9kZV9jb25maWcuY29ubmVjdG9yX2xpc3Qs
IGhlYWQpIHsKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwlk
cm1fZm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikgewogCQlzdHJ1Y3Qg
YW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IHRvX2FtZGdwdV9jb25uZWN0b3Io
Y29ubmVjdG9yKTsKIAogCQlpZiAoYW1kZ3B1X2Nvbm5lY3Rvci0+aHBkLmhwZCA+PSBhZGV2LT5t
b2RlX2luZm8ubnVtX2hwZCkKQEAgLTMzMSw2ICszMzYsNyBAQCBzdGF0aWMgdm9pZCBkY2Vfdjhf
MF9ocGRfZmluaShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAogCQlhbWRncHVfaXJxX3B1
dChhZGV2LCAmYWRldi0+aHBkX2lycSwgYW1kZ3B1X2Nvbm5lY3Rvci0+aHBkLmhwZCk7CiAJfQor
CWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiB9CiAKIHN0YXRpYyB1MzIgZGNl
X3Y4XzBfaHBkX2dldF9ncGlvX3JlZyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKQEAgLTEx
NTcsMTAgKzExNjMsMTIgQEAgc3RhdGljIHZvaWQgZGNlX3Y4XzBfYWZtdF9hdWRpb19zZWxlY3Rf
cGluKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlcikKIHN0YXRpYyB2b2lkIGRjZV92OF8wX2F1
ZGlvX3dyaXRlX2xhdGVuY3lfZmllbGRzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlciwKIAkJ
CQkJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlKQogewotCXN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2ID0gZW5jb2Rlci0+ZGV2LT5kZXZfcHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2ID0gZW5jb2Rlci0+ZGV2OworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2
LT5kZXZfcHJpdmF0ZTsKIAlzdHJ1Y3QgYW1kZ3B1X2VuY29kZXIgKmFtZGdwdV9lbmNvZGVyID0g
dG9fYW1kZ3B1X2VuY29kZXIoZW5jb2Rlcik7CiAJc3RydWN0IGFtZGdwdV9lbmNvZGVyX2F0b21f
ZGlnICpkaWcgPSBhbWRncHVfZW5jb2Rlci0+ZW5jX3ByaXY7CiAJc3RydWN0IGRybV9jb25uZWN0
b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlz
dHJ1Y3QgYW1kZ3B1X2Nvbm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJdTMyIHRt
cCA9IDAsIG9mZnNldDsKIApAQCAtMTE2OSwxMiArMTE3NywxNCBAQCBzdGF0aWMgdm9pZCBkY2Vf
djhfMF9hdWRpb193cml0ZV9sYXRlbmN5X2ZpZWxkcyhzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29k
ZXIsCiAKIAlvZmZzZXQgPSBkaWctPmFmbXQtPnBpbi0+b2Zmc2V0OwogCi0JbGlzdF9mb3JfZWFj
aF9lbnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9s
aXN0LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7
CisJZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYg
KGNvbm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0g
dG9fYW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJt
X2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3Rv
cikgewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7
CkBAIC0xMjE0LDEwICsxMjI0LDEyIEBAIHN0YXRpYyB2b2lkIGRjZV92OF8wX2F1ZGlvX3dyaXRl
X2xhdGVuY3lfZmllbGRzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2RlciwKIAogc3RhdGljIHZv
aWQgZGNlX3Y4XzBfYXVkaW9fd3JpdGVfc3BlYWtlcl9hbGxvY2F0aW9uKHN0cnVjdCBkcm1fZW5j
b2RlciAqZW5jb2RlcikKIHsKLQlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGVuY29kZXIt
PmRldi0+ZGV2X3ByaXZhdGU7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRl
djsKKwlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3Ry
dWN0IGFtZGdwdV9lbmNvZGVyICphbWRncHVfZW5jb2RlciA9IHRvX2FtZGdwdV9lbmNvZGVyKGVu
Y29kZXIpOwogCXN0cnVjdCBhbWRncHVfZW5jb2Rlcl9hdG9tX2RpZyAqZGlnID0gYW1kZ3B1X2Vu
Y29kZXItPmVuY19wcml2OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3Ry
dWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJc3RydWN0IGFtZGdwdV9jb25uZWN0
b3IgKmFtZGdwdV9jb25uZWN0b3IgPSBOVUxMOwogCXUzMiBvZmZzZXQsIHRtcDsKIAl1OCAqc2Fk
YiA9IE5VTEw7CkBAIC0xMjI4LDEyICsxMjQwLDE0IEBAIHN0YXRpYyB2b2lkIGRjZV92OF8wX2F1
ZGlvX3dyaXRlX3NwZWFrZXJfYWxsb2NhdGlvbihzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIp
CiAKIAlvZmZzZXQgPSBkaWctPmFmbXQtPnBpbi0+b2Zmc2V0OwogCi0JbGlzdF9mb3JfZWFjaF9l
bnRyeShjb25uZWN0b3IsICZlbmNvZGVyLT5kZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0
LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJ
ZHJtX2Zvcl9lYWNoX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJaWYgKGNv
bm5lY3Rvci0+ZW5jb2RlciA9PSBlbmNvZGVyKSB7CiAJCQlhbWRncHVfY29ubmVjdG9yID0gdG9f
YW1kZ3B1X2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQkJYnJlYWs7CiAJCX0KIAl9CisJZHJtX2Nv
bm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCWlmICghYW1kZ3B1X2Nvbm5lY3Rvcikg
ewogCQlEUk1fRVJST1IoIkNvdWxkbid0IGZpbmQgZW5jb2RlcidzIGNvbm5lY3RvclxuIik7CkBA
IC0xMjYzLDExICsxMjc3LDEzIEBAIHN0YXRpYyB2b2lkIGRjZV92OF8wX2F1ZGlvX3dyaXRlX3Nw
ZWFrZXJfYWxsb2NhdGlvbihzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpCiAKIHN0YXRpYyB2
b2lkIGRjZV92OF8wX2F1ZGlvX3dyaXRlX3NhZF9yZWdzKHN0cnVjdCBkcm1fZW5jb2RlciAqZW5j
b2RlcikKIHsKLQlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGVuY29kZXItPmRldi0+ZGV2
X3ByaXZhdGU7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGVuY29kZXItPmRldjsKKwlzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3RydWN0IGFtZGdw
dV9lbmNvZGVyICphbWRncHVfZW5jb2RlciA9IHRvX2FtZGdwdV9lbmNvZGVyKGVuY29kZXIpOwog
CXN0cnVjdCBhbWRncHVfZW5jb2Rlcl9hdG9tX2RpZyAqZGlnID0gYW1kZ3B1X2VuY29kZXItPmVu
Y19wcml2OwogCXUzMiBvZmZzZXQ7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsK
KwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgYW1kZ3B1X2Nv
bm5lY3RvciAqYW1kZ3B1X2Nvbm5lY3RvciA9IE5VTEw7CiAJc3RydWN0IGNlYV9zYWQgKnNhZHM7
CiAJaW50IGksIHNhZF9jb3VudDsKQEAgLTEyOTIsMTIgKzEzMDgsMTQgQEAgc3RhdGljIHZvaWQg
ZGNlX3Y4XzBfYXVkaW9fd3JpdGVfc2FkX3JlZ3Moc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVy
KQogCiAJb2Zmc2V0ID0gZGlnLT5hZm10LT5waW4tPm9mZnNldDsKIAotCWxpc3RfZm9yX2VhY2hf
ZW50cnkoY29ubmVjdG9yLCAmZW5jb2Rlci0+ZGV2LT5tb2RlX2NvbmZpZy5jb25uZWN0b3JfbGlz
dCwgaGVhZCkgeworCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJml0ZXIpOwor
CWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZpdGVyKSB7CiAJCWlmIChj
b25uZWN0b3ItPmVuY29kZXIgPT0gZW5jb2RlcikgewogCQkJYW1kZ3B1X2Nvbm5lY3RvciA9IHRv
X2FtZGdwdV9jb25uZWN0b3IoY29ubmVjdG9yKTsKIAkJCWJyZWFrOwogCQl9CiAJfQorCWRybV9j
b25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKIAlpZiAoIWFtZGdwdV9jb25uZWN0b3Ip
IHsKIAkJRFJNX0VSUk9SKCJDb3VsZG4ndCBmaW5kIGVuY29kZXIncyBjb25uZWN0b3JcbiIpOwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVf
ZG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMK
aW5kZXggMGE3MWVkMWU3NzYyLi43MzYzMGUyOTQwZDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYwpAQCAtODk2LDI3ICs4OTYsMjkg
QEAgc3RhdGljIGludCBkZXRlY3RfbXN0X2xpbmtfZm9yX2FsbF9jb25uZWN0b3JzKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYpCiB7CiAJc3RydWN0IGFtZGdwdV9kbV9jb25uZWN0b3IgKmFjb25uZWN0
b3I7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5l
Y3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlpbnQgcmV0ID0gMDsKIAotCWRybV9tb2Rlc2V0X2xvY2so
JmRldi0+bW9kZV9jb25maWcuY29ubmVjdGlvbl9tdXRleCwgTlVMTCk7Ci0KLQlsaXN0X2Zvcl9l
YWNoX2VudHJ5KGNvbm5lY3RvciwgJmRldi0+bW9kZV9jb25maWcuY29ubmVjdG9yX2xpc3QsIGhl
YWQpIHsKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwlkcm1f
Zm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRlcikgewogCQlhY29ubmVjdG9y
ID0gdG9fYW1kZ3B1X2RtX2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCQlpZiAoYWNvbm5lY3Rvci0+
ZGNfbGluay0+dHlwZSA9PSBkY19jb25uZWN0aW9uX21zdF9icmFuY2ggJiYKIAkJICAgIGFjb25u
ZWN0b3ItPm1zdF9tZ3IuYXV4KSB7CiAJCQlEUk1fREVCVUdfRFJJVkVSKCJETV9NU1Q6IHN0YXJ0
aW5nIFRNIG9uIGFjb25uZWN0b3I6ICVwIFtpZDogJWRdXG4iLAotCQkJCQlhY29ubmVjdG9yLCBh
Y29ubmVjdG9yLT5iYXNlLmJhc2UuaWQpOworCQkJCQkgYWNvbm5lY3RvciwKKwkJCQkJIGFjb25u
ZWN0b3ItPmJhc2UuYmFzZS5pZCk7CiAKIAkJCXJldCA9IGRybV9kcF9tc3RfdG9wb2xvZ3lfbWdy
X3NldF9tc3QoJmFjb25uZWN0b3ItPm1zdF9tZ3IsIHRydWUpOwogCQkJaWYgKHJldCA8IDApIHsK
IAkJCQlEUk1fRVJST1IoIkRNX01TVDogRmFpbGVkIHRvIHN0YXJ0IE1TVFxuIik7Ci0JCQkJKChz
dHJ1Y3QgZGNfbGluayAqKWFjb25uZWN0b3ItPmRjX2xpbmspLT50eXBlID0gZGNfY29ubmVjdGlv
bl9zaW5nbGU7Ci0JCQkJcmV0dXJuIHJldDsKLQkJCQl9CisJCQkJYWNvbm5lY3Rvci0+ZGNfbGlu
ay0+dHlwZSA9CisJCQkJCWRjX2Nvbm5lY3Rpb25fc2luZ2xlOworCQkJCWJyZWFrOwogCQkJfQor
CQl9CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKLQlkcm1fbW9k
ZXNldF91bmxvY2soJmRldi0+bW9kZV9jb25maWcuY29ubmVjdGlvbl9tdXRleCk7CiAJcmV0dXJu
IHJldDsKIH0KIApAQCAtOTU0LDE0ICs5NTYsMTMgQEAgc3RhdGljIHZvaWQgczNfaGFuZGxlX21z
dChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBib29sIHN1c3BlbmQpCiB7CiAJc3RydWN0IGFtZGdw
dV9kbV9jb25uZWN0b3IgKmFjb25uZWN0b3I7CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvcjsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgaXRlcjsKIAlzdHJ1Y3QgZHJt
X2RwX21zdF90b3BvbG9neV9tZ3IgKm1ncjsKIAlpbnQgcmV0OwogCWJvb2wgbmVlZF9ob3RwbHVn
ID0gZmFsc2U7CiAKLQlkcm1fbW9kZXNldF9sb2NrKCZkZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rp
b25fbXV0ZXgsIE5VTEwpOwotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb25uZWN0b3IsICZkZXYt
Pm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LAotCQkJICAgIGhlYWQpIHsKKwlkcm1fY29ubmVj
dG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZpdGVyKTsKKwlkcm1fZm9yX2VhY2hfY29ubmVjdG9y
X2l0ZXIoY29ubmVjdG9yLCAmaXRlcikgewogCQlhY29ubmVjdG9yID0gdG9fYW1kZ3B1X2RtX2Nv
bm5lY3Rvcihjb25uZWN0b3IpOwogCQlpZiAoYWNvbm5lY3Rvci0+ZGNfbGluay0+dHlwZSAhPSBk
Y19jb25uZWN0aW9uX21zdF9icmFuY2ggfHwKIAkJICAgIGFjb25uZWN0b3ItPm1zdF9wb3J0KQpA
QCAtOTc5LDggKzk4MCw3IEBAIHN0YXRpYyB2b2lkIHMzX2hhbmRsZV9tc3Qoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgYm9vbCBzdXNwZW5kKQogCQkJfQogCQl9CiAJfQotCi0JZHJtX21vZGVzZXRf
dW5sb2NrKCZkZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rpb25fbXV0ZXgpOworCWRybV9jb25uZWN0
b3JfbGlzdF9pdGVyX2VuZCgmaXRlcik7CiAKIAlpZiAobmVlZF9ob3RwbHVnKQogCQlkcm1fa21z
X2hlbHBlcl9ob3RwbHVnX2V2ZW50KGRldik7CkBAIC0xMTYyLDYgKzExNjIsNyBAQCBzdGF0aWMg
aW50IGRtX3Jlc3VtZSh2b2lkICpoYW5kbGUpCiAJc3RydWN0IGFtZGdwdV9kaXNwbGF5X21hbmFn
ZXIgKmRtID0gJmFkZXYtPmRtOwogCXN0cnVjdCBhbWRncHVfZG1fY29ubmVjdG9yICphY29ubmVj
dG9yOwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25u
ZWN0b3JfbGlzdF9pdGVyIGl0ZXI7CiAJc3RydWN0IGRybV9jcnRjICpjcnRjOwogCXN0cnVjdCBk
cm1fY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7CiAJc3RydWN0IGRtX2NydGNfc3RhdGUgKmRt
X25ld19jcnRjX3N0YXRlOwpAQCAtMTE5NCw3ICsxMTk1LDggQEAgc3RhdGljIGludCBkbV9yZXN1
bWUodm9pZCAqaGFuZGxlKQogCWFtZGdwdV9kbV9pcnFfcmVzdW1lX2Vhcmx5KGFkZXYpOwogCiAJ
LyogRG8gZGV0ZWN0aW9uKi8KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KGNvbm5lY3RvciwgJmRkZXYt
Pm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJtX2Nvbm5lY3Rvcl9saXN0
X2l0ZXJfYmVnaW4oZGRldiwgJml0ZXIpOworCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihj
b25uZWN0b3IsICZpdGVyKSB7CiAJCWFjb25uZWN0b3IgPSB0b19hbWRncHVfZG1fY29ubmVjdG9y
KGNvbm5lY3Rvcik7CiAKIAkJLyoKQEAgLTEyMjIsNiArMTIyNCw3IEBAIHN0YXRpYyBpbnQgZG1f
cmVzdW1lKHZvaWQgKmhhbmRsZSkKIAkJYW1kZ3B1X2RtX3VwZGF0ZV9jb25uZWN0b3JfYWZ0ZXJf
ZGV0ZWN0KGFjb25uZWN0b3IpOwogCQltdXRleF91bmxvY2soJmFjb25uZWN0b3ItPmhwZF9sb2Nr
KTsKIAl9CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIAogCS8qIEZvcmNl
IG1vZGUgc2V0IGluIGF0b21pYyBjb21taXQgKi8KIAlmb3JfZWFjaF9uZXdfY3J0Y19pbl9zdGF0
ZShkbS0+Y2FjaGVkX3N0YXRlLCBjcnRjLCBuZXdfY3J0Y19zdGF0ZSwgaSkKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtX2lycS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG1faXJxLmMKaW5k
ZXggZmE1ZDUwM2QzNzljLi42NDQ0NWM0Y2M0YzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtX2lycS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtX2lycS5jCkBAIC03MzIsOCArNzMy
LDEwIEBAIHZvaWQgYW1kZ3B1X2RtX2hwZF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBhZGV2LT5kZGV2OwogCXN0cnVjdCBkcm1f
Y29ubmVjdG9yICpjb25uZWN0b3I7CisJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGl0
ZXI7CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KGNvbm5lY3RvciwgJmRldi0+bW9kZV9jb25maWcu
Y29ubmVjdG9yX2xpc3QsIGhlYWQpIHsKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihk
ZXYsICZpdGVyKTsKKwlkcm1fZm9yX2VhY2hfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmaXRl
cikgewogCQlzdHJ1Y3QgYW1kZ3B1X2RtX2Nvbm5lY3RvciAqYW1kZ3B1X2RtX2Nvbm5lY3RvciA9
CiAJCQkJdG9fYW1kZ3B1X2RtX2Nvbm5lY3Rvcihjb25uZWN0b3IpOwogCkBAIC03NTEsNiArNzUz
LDcgQEAgdm9pZCBhbWRncHVfZG1faHBkX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CiAJCQkJCXRydWUpOwogCQl9CiAJfQorCWRybV9jb25uZWN0b3JfbGlzdF9pdGVyX2VuZCgmaXRl
cik7CiB9CiAKIC8qKgpAQCAtNzY1LDggKzc2OCwxMCBAQCB2b2lkIGFtZGdwdV9kbV9ocGRfZmlu
aShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
ID0gYWRldi0+ZGRldjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOworCXN0cnVj
dCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBpdGVyOwogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShj
b25uZWN0b3IsICZkZXYtPm1vZGVfY29uZmlnLmNvbm5lY3Rvcl9saXN0LCBoZWFkKSB7CisJZHJt
X2Nvbm5lY3Rvcl9saXN0X2l0ZXJfYmVnaW4oZGV2LCAmaXRlcik7CisJZHJtX2Zvcl9lYWNoX2Nv
bm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJml0ZXIpIHsKIAkJc3RydWN0IGFtZGdwdV9kbV9jb25u
ZWN0b3IgKmFtZGdwdV9kbV9jb25uZWN0b3IgPQogCQkJCXRvX2FtZGdwdV9kbV9jb25uZWN0b3Io
Y29ubmVjdG9yKTsKIAkJY29uc3Qgc3RydWN0IGRjX2xpbmsgKmRjX2xpbmsgPSBhbWRncHVfZG1f
Y29ubmVjdG9yLT5kY19saW5rOwpAQCAtNzc5LDQgKzc4NCw1IEBAIHZvaWQgYW1kZ3B1X2RtX2hw
ZF9maW5pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCQkJCQlmYWxzZSk7CiAJCX0KIAl9
CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZpdGVyKTsKIH0KLS0gCjIuMjEuMAoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KZHJpLWRldmVsIG1h
aWxpbmcgbGlzdApkcmktZGV2ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vZHJpLWRldmVs
